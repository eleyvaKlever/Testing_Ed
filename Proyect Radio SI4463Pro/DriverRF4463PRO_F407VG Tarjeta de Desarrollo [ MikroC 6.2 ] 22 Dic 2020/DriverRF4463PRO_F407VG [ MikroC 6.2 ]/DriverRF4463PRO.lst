;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22/12/2020 05:58:24 p. m.
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2001  	537001980
0x0004	0x58190000  	22553
0x0008	0x5BDD0000  	23517
0x000C	0x5BDD0000  	23517
0x0010	0x5BDD0000  	23517
0x0014	0x5BDD0000  	23517
0x0018	0x5BDD0000  	23517
0x001C	0x5BDD0000  	23517
0x0020	0x5BDD0000  	23517
0x0024	0x5BDD0000  	23517
0x0028	0x5BDD0000  	23517
0x002C	0x5BDD0000  	23517
0x0030	0x5BDD0000  	23517
0x0034	0x5BDD0000  	23517
0x0038	0x5BDD0000  	23517
0x003C	0x5BDD0000  	23517
0x0040	0x5BDD0000  	23517
0x0044	0x5BDD0000  	23517
0x0048	0x5BDD0000  	23517
0x004C	0x5BDD0000  	23517
0x0050	0x5BDD0000  	23517
0x0054	0x5BDD0000  	23517
0x0058	0x5BDD0000  	23517
0x005C	0x5BDD0000  	23517
0x0060	0x5BDD0000  	23517
0x0064	0x5BDD0000  	23517
0x0068	0x5BDD0000  	23517
0x006C	0x5BDD0000  	23517
0x0070	0x5BDD0000  	23517
0x0074	0x5BDD0000  	23517
0x0078	0x5BDD0000  	23517
0x007C	0x5BDD0000  	23517
0x0080	0x5BDD0000  	23517
0x0084	0x5BDD0000  	23517
0x0088	0x5BDD0000  	23517
0x008C	0x5BDD0000  	23517
0x0090	0x5BDD0000  	23517
0x0094	0x5BDD0000  	23517
0x0098	0x5BDD0000  	23517
0x009C	0x5BDD0000  	23517
0x00A0	0x5BDD0000  	23517
0x00A4	0x5BDD0000  	23517
0x00A8	0x5BDD0000  	23517
0x00AC	0x5BDD0000  	23517
0x00B0	0x52D50000  	21205
0x00B4	0x5BDD0000  	23517
0x00B8	0x5BDD0000  	23517
0x00BC	0x5BDD0000  	23517
0x00C0	0x5BDD0000  	23517
0x00C4	0x5BDD0000  	23517
0x00C8	0x5BDD0000  	23517
0x00CC	0x5BDD0000  	23517
0x00D0	0x5BDD0000  	23517
0x00D4	0x51810000  	20865
0x00D8	0x5BDD0000  	23517
0x00DC	0x5BDD0000  	23517
0x00E0	0x5BDD0000  	23517
0x00E4	0x5BDD0000  	23517
0x00E8	0x5BDD0000  	23517
0x00EC	0x5BDD0000  	23517
0x00F0	0x5BDD0000  	23517
0x00F4	0x5BDD0000  	23517
0x00F8	0x5BDD0000  	23517
0x00FC	0x5BDD0000  	23517
0x0100	0x5BDD0000  	23517
0x0104	0x5BDD0000  	23517
0x0108	0x5BDD0000  	23517
0x010C	0x52F90000  	21241
0x0110	0x5BDD0000  	23517
0x0114	0x5BDD0000  	23517
0x0118	0x5BDD0000  	23517
0x011C	0x5BDD0000  	23517
0x0120	0x5BDD0000  	23517
0x0124	0x53AD0000  	21421
0x0128	0x5BDD0000  	23517
0x012C	0x5BDD0000  	23517
0x0130	0x53290000  	21289
0x0134	0x5BDD0000  	23517
0x0138	0x5BDD0000  	23517
0x013C	0x5BDD0000  	23517
0x0140	0x5BDD0000  	23517
0x0144	0x5BDD0000  	23517
0x0148	0x5BDD0000  	23517
0x014C	0x5BDD0000  	23517
0x0150	0x5BDD0000  	23517
0x0154	0x5BDD0000  	23517
0x0158	0x54310000  	21553
0x015C	0x5BDD0000  	23517
0x0160	0x5BDD0000  	23517
0x0164	0x5BDD0000  	23517
0x0168	0x5BDD0000  	23517
0x016C	0x5BDD0000  	23517
0x0170	0x5BDD0000  	23517
0x0174	0x5BDD0000  	23517
0x0178	0x5BDD0000  	23517
0x017C	0x5BDD0000  	23517
0x0180	0x5BDD0000  	23517
0x0184	0x5BDD0000  	23517
; end of ____SysVT
_main:
;DriverRF4463PROMain.c, 582 :: 		void main() {
0x5818	0xB08E    SUB	SP, SP, #56
0x581A	0xF7FFFE4B  BL	21684
0x581E	0xF000F9C7  BL	23472
0x5822	0xF003F96D  BL	35584
0x5826	0xF000F9B1  BL	23436
0x582A	0xF003F91B  BL	35428
;DriverRF4463PROMain.c, 586 :: 		Delay_ms( 2000 );                    // delay de depuracion
0x582E	0xF64F37FE  MOVW	R7, #64510
0x5832	0xF2C067AC  MOVT	R7, #1708
0x5836	0xBF00    NOP
0x5838	0xBF00    NOP
L_main413:
0x583A	0x1E7F    SUBS	R7, R7, #1
0x583C	0xD1FD    BNE	L_main413
0x583E	0xBF00    NOP
0x5840	0xBF00    NOP
0x5842	0xBF00    NOP
;DriverRF4463PROMain.c, 663 :: 		GPIO_Digital_Output( &GPIOC_BASE, _GPIO_PINMASK_6 );
0x5844	0xF2400140  MOVW	R1, #64
0x5848	0x48AA    LDR	R0, [PC, #680]
0x584A	0xF7FEFC85  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 664 :: 		GPIO_Digital_Output( &GPIOC_BASE, _GPIO_PINMASK_7 );
0x584E	0xF2400180  MOVW	R1, #128
0x5852	0x48A8    LDR	R0, [PC, #672]
0x5854	0xF7FEFC80  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 665 :: 		GPIO_Digital_Output( &GPIOC_BASE, _GPIO_PINMASK_8 );
0x5858	0xF2401100  MOVW	R1, #256
0x585C	0x48A5    LDR	R0, [PC, #660]
0x585E	0xF7FEFC7B  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 670 :: 		GPIO_Digital_Input( &GPIOD_BASE, _GPIO_PINMASK_10 );          // nIRQ
0x5862	0xF2404100  MOVW	R1, #1024
0x5866	0x48A4    LDR	R0, [PC, #656]
0x5868	0xF7FFFBA4  BL	_GPIO_Digital_Input+0
;DriverRF4463PROMain.c, 672 :: 		GPIO_Digital_Output( &GPIOD_BASE, _GPIO_PINMASK_13 );         // nSEL
0x586C	0xF2420100  MOVW	R1, #8192
0x5870	0x48A1    LDR	R0, [PC, #644]
0x5872	0xF7FEFC71  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 673 :: 		GPIO_Digital_Output( &GPIOC_BASE, _GPIO_PINMASK_2 );          // SDN
0x5876	0xF2400104  MOVW	R1, #4
0x587A	0x489E    LDR	R0, [PC, #632]
0x587C	0xF7FEFC6C  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 688 :: 		EXTI_IMR.B10    |= 1;
0x5880	0x489E    LDR	R0, [PC, #632]
0x5882	0x6800    LDR	R0, [R0, #0]
0x5884	0xF0400101  ORR	R1, R0, #1
0x5888	0xB2C9    UXTB	R1, R1
0x588A	0x489C    LDR	R0, [PC, #624]
0x588C	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 689 :: 		EXTI_FTSR.B10   |= 1;
0x588E	0x489C    LDR	R0, [PC, #624]
0x5890	0x6800    LDR	R0, [R0, #0]
0x5892	0xF0400101  ORR	R1, R0, #1
0x5896	0xB2C9    UXTB	R1, R1
0x5898	0x4899    LDR	R0, [PC, #612]
0x589A	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 691 :: 		GPIO_Digital_Output( &GPIOE_BASE, _GPIO_PINMASK_14 );
0x589C	0xF2440100  MOVW	R1, #16384
0x58A0	0x4898    LDR	R0, [PC, #608]
0x58A2	0xF7FEFC59  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 741 :: 		nSEL = 1;
0x58A6	0x2101    MOVS	R1, #1
0x58A8	0xB249    SXTB	R1, R1
0x58AA	0x4897    LDR	R0, [PC, #604]
0x58AC	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 743 :: 		LED_RED      = 1;
0x58AE	0x4897    LDR	R0, [PC, #604]
0x58B0	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 744 :: 		LED_GREEN    = 1;
0x58B2	0x4897    LDR	R0, [PC, #604]
0x58B4	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 745 :: 		LED_BLUE     = 1;
0x58B6	0x4897    LDR	R0, [PC, #604]
0x58B8	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 747 :: 		Delay_ms( 100 );
0x58BA	0xF24727FE  MOVW	R7, #29438
0x58BE	0xF2C00755  MOVT	R7, #85
L_main415:
0x58C2	0x1E7F    SUBS	R7, R7, #1
0x58C4	0xD1FD    BNE	L_main415
0x58C6	0xBF00    NOP
0x58C8	0xBF00    NOP
0x58CA	0xBF00    NOP
0x58CC	0xBF00    NOP
0x58CE	0xBF00    NOP
;DriverRF4463PROMain.c, 749 :: 		LED_RED      = 0;
0x58D0	0x2200    MOVS	R2, #0
0x58D2	0xB252    SXTB	R2, R2
0x58D4	0x488D    LDR	R0, [PC, #564]
0x58D6	0x6002    STR	R2, [R0, #0]
;DriverRF4463PROMain.c, 750 :: 		LED_GREEN    = 1;
0x58D8	0x2101    MOVS	R1, #1
0x58DA	0xB249    SXTB	R1, R1
0x58DC	0x488C    LDR	R0, [PC, #560]
0x58DE	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 751 :: 		LED_BLUE     = 0;
0x58E0	0x488C    LDR	R0, [PC, #560]
0x58E2	0x6002    STR	R2, [R0, #0]
;DriverRF4463PROMain.c, 753 :: 		InitTimer2();
0x58E4	0xF7FFFB3A  BL	_InitTimer2+0
;DriverRF4463PROMain.c, 756 :: 		vUSARTConfigUSART1( 115200 );  // configura todos las parametros de USART
0x58E8	0xF44F30E1  MOV	R0, #115200
0x58EC	0xB401    PUSH	(R0)
0x58EE	0xF7FFFC19  BL	_vUSARTConfigUSART1+0
0x58F2	0xB001    ADD	SP, SP, #4
;DriverRF4463PROMain.c, 768 :: 		vSPI3Init();           // configura todos los parametros de SPI
0x58F4	0xF7FFFBD8  BL	_vSPI3Init+0
;DriverRF4463PROMain.c, 778 :: 		ucRF4463Freq3 = 9;
0x58F8	0x2109    MOVS	R1, #9
0x58FA	0x4887    LDR	R0, [PC, #540]
0x58FC	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 779 :: 		ucRF4463Freq2 = 1;
0x58FE	0x2101    MOVS	R1, #1
0x5900	0x4886    LDR	R0, [PC, #536]
0x5902	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 780 :: 		ucRF4463Freq1 = 5;
0x5904	0x2105    MOVS	R1, #5
0x5906	0x4886    LDR	R0, [PC, #536]
0x5908	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 783 :: 		ucRF4463Power = 127;            // 34
0x590A	0x217F    MOVS	R1, #127
0x590C	0x4885    LDR	R0, [PC, #532]
0x590E	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 785 :: 		ucRF4463Rate  = dr_1p2;                // BAUDRATE
0x5910	0x2100    MOVS	R1, #0
0x5912	0x4885    LDR	R0, [PC, #532]
0x5914	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 787 :: 		ucRF4463Mode  = master_mode;          // para transmision continua usar: tx_test_mode
0x5916	0x2100    MOVS	R1, #0
0x5918	0x4884    LDR	R0, [PC, #528]
0x591A	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 789 :: 		ucRF4463FreqChannel = 1;
0x591C	0x2101    MOVS	R1, #1
0x591E	0x4884    LDR	R0, [PC, #528]
0x5920	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 793 :: 		reset_mode = 0;
0x5922	0x2100    MOVS	R1, #0
0x5924	0x4883    LDR	R0, [PC, #524]
0x5926	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 798 :: 		vRF4463MainSetTXString();    // usada para establecer el encabezdo predeterminado
0x5928	0xF7FFFBD8  BL	_vRF4463MainSetTXString+0
;DriverRF4463PROMain.c, 799 :: 		VRF4463SDNReset();
0x592C	0xF7FEFCBC  BL	_VRF4463SDNReset+0
;DriverRF4463PROMain.c, 800 :: 		vRF4463Init();
0x5930	0xF7FEFD12  BL	_vRF4463Init+0
;DriverRF4463PROMain.c, 801 :: 		vRF4463ClearInterrupts();
0x5934	0xF7FFFAD2  BL	_vRF4463ClearInterrupts+0
;DriverRF4463PROMain.c, 802 :: 		vRF4463PartInfo ();          // SOLICITA EL MODELO DEL RADIO
0x5938	0xF7FFFAF6  BL	_vRF4463PartInfo+0
;DriverRF4463PROMain.c, 804 :: 		LED_GREEN    = 0;
0x593C	0x2100    MOVS	R1, #0
0x593E	0xB249    SXTB	R1, R1
0x5940	0x4873    LDR	R0, [PC, #460]
0x5942	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 805 :: 		LED_BLUE     = 0;
0x5944	0x4873    LDR	R0, [PC, #460]
0x5946	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 810 :: 		vUSART1Start_TX( "[ SYS STM32F ]RF Radio ready\r\n", 30 );   // enviado por DMA
0x5948	0x201E    MOVS	R0, #30
0x594A	0xB401    PUSH	(R0)
0x594C	0xF10D0B0A  ADD	R11, SP, #10
0x5950	0xF10B0A1F  ADD	R10, R11, #31
0x5954	0xF8DFC1E0  LDR	R12, [PC, #480]
0x5958	0xF7FEFBCE  BL	___CC2DW+0
0x595C	0xF10D000A  ADD	R0, SP, #10
0x5960	0xB401    PUSH	(R0)
0x5962	0xF7FEFC25  BL	_vUSART1Start_TX+0
0x5966	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 815 :: 		while ( 1 ) {
L_main417:
;DriverRF4463PROMain.c, 818 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x5968	0x4874    LDR	R0, [PC, #464]
0x596A	0x6800    LDR	R0, [R0, #0]
0x596C	0x2801    CMP	R0, #1
0x596E	0xD101    BNE	L_main419
;DriverRF4463PROMain.c, 819 :: 		vUSARTReceivedFromUSART1();
0x5970	0xF7FEFC5E  BL	_vUSARTReceivedFromUSART1+0
;DriverRF4463PROMain.c, 820 :: 		}
L_main419:
;DriverRF4463PROMain.c, 831 :: 		if ( ucRF4463Mode == master_mode ) {
0x5974	0x486D    LDR	R0, [PC, #436]
0x5976	0x7800    LDRB	R0, [R0, #0]
0x5978	0xB910    CBNZ	R0, L_main420
;DriverRF4463PROMain.c, 832 :: 		vRF4463TxData();
0x597A	0xF7FFFB29  BL	_vRF4463TxData+0
;DriverRF4463PROMain.c, 833 :: 		}
0x597E	0xE01B    B	L_main421
L_main420:
;DriverRF4463PROMain.c, 836 :: 		else if ( ucRF4463Mode == slave_mode ) {
0x5980	0x486A    LDR	R0, [PC, #424]
0x5982	0x7800    LDRB	R0, [R0, #0]
0x5984	0x2801    CMP	R0, #1
0x5986	0xD102    BNE	L_main422
;DriverRF4463PROMain.c, 837 :: 		vRF4463RxInit();
0x5988	0xF7FDFA9C  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 838 :: 		}
0x598C	0xE014    B	L_main423
L_main422:
;DriverRF4463PROMain.c, 841 :: 		else if ( ucRF4463Mode == rf_off ) {
0x598E	0x4867    LDR	R0, [PC, #412]
0x5990	0x7800    LDRB	R0, [R0, #0]
0x5992	0x2804    CMP	R0, #4
0x5994	0xD110    BNE	L_main424
;DriverRF4463PROMain.c, 842 :: 		vRF4463RxInit();
0x5996	0xF7FDFA95  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 843 :: 		while ( 1 ) {
L_main425:
;DriverRF4463PROMain.c, 845 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x599A	0x4868    LDR	R0, [PC, #416]
0x599C	0x6800    LDR	R0, [R0, #0]
0x599E	0x2801    CMP	R0, #1
0x59A0	0xD100    BNE	L_main427
;DriverRF4463PROMain.c, 846 :: 		break;
0x59A2	0xE009    B	L_main426
;DriverRF4463PROMain.c, 847 :: 		}
L_main427:
;DriverRF4463PROMain.c, 850 :: 		if ( ucRF4463SendMessage == 1 ) {
0x59A4	0x4866    LDR	R0, [PC, #408]
0x59A6	0x7800    LDRB	R0, [R0, #0]
0x59A8	0x2801    CMP	R0, #1
0x59AA	0xD104    BNE	L_main428
;DriverRF4463PROMain.c, 851 :: 		ucRF4463SendMessage = 0;
0x59AC	0x2100    MOVS	R1, #0
0x59AE	0x4864    LDR	R0, [PC, #400]
0x59B0	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 852 :: 		vRF4463TxData();
0x59B2	0xF7FFFB0D  BL	_vRF4463TxData+0
;DriverRF4463PROMain.c, 853 :: 		}
L_main428:
;DriverRF4463PROMain.c, 855 :: 		}
0x59B6	0xE7F0    B	L_main425
L_main426:
;DriverRF4463PROMain.c, 856 :: 		}
L_main424:
L_main423:
L_main421:
;DriverRF4463PROMain.c, 859 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x59B8	0x485C    LDR	R0, [PC, #368]
0x59BA	0x7800    LDRB	R0, [R0, #0]
0x59BC	0x2802    CMP	R0, #2
0x59BE	0xD10D    BNE	L_main429
;DriverRF4463PROMain.c, 860 :: 		vRF4463TxCont();
0x59C0	0xF7FEFB2A  BL	_vRF4463TxCont+0
;DriverRF4463PROMain.c, 861 :: 		while ( 1 ) {
L_main430:
;DriverRF4463PROMain.c, 863 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x59C4	0x485D    LDR	R0, [PC, #372]
0x59C6	0x6800    LDR	R0, [R0, #0]
0x59C8	0x2801    CMP	R0, #1
0x59CA	0xD100    BNE	L_main432
;DriverRF4463PROMain.c, 864 :: 		break;
0x59CC	0xE006    B	L_main431
;DriverRF4463PROMain.c, 865 :: 		}
L_main432:
;DriverRF4463PROMain.c, 867 :: 		if ( !nIRQ ) {
0x59CE	0x485D    LDR	R0, [PC, #372]
0x59D0	0x6800    LDR	R0, [R0, #0]
0x59D2	0x2800    CMP	R0, #0
0x59D4	0xD101    BNE	L_main433
;DriverRF4463PROMain.c, 868 :: 		vRF4463TxCont();
0x59D6	0xF7FEFB1F  BL	_vRF4463TxCont+0
;DriverRF4463PROMain.c, 869 :: 		}
L_main433:
;DriverRF4463PROMain.c, 870 :: 		}
0x59DA	0xE7F3    B	L_main430
L_main431:
;DriverRF4463PROMain.c, 871 :: 		}
L_main429:
;DriverRF4463PROMain.c, 873 :: 		if ( ucRF4463Mode == rx_test_mode ) {
0x59DC	0x4853    LDR	R0, [PC, #332]
0x59DE	0x7800    LDRB	R0, [R0, #0]
0x59E0	0x2803    CMP	R0, #3
0x59E2	0xD107    BNE	L_main434
;DriverRF4463PROMain.c, 874 :: 		vRF4463RxInit ();
0x59E4	0xF7FDFA6E  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 875 :: 		while ( 1 ) {
L_main435:
;DriverRF4463PROMain.c, 877 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x59E8	0x4854    LDR	R0, [PC, #336]
0x59EA	0x6800    LDR	R0, [R0, #0]
0x59EC	0x2801    CMP	R0, #1
0x59EE	0xD100    BNE	L_main437
;DriverRF4463PROMain.c, 878 :: 		break;
0x59F0	0xE000    B	L_main436
;DriverRF4463PROMain.c, 879 :: 		}
L_main437:
;DriverRF4463PROMain.c, 882 :: 		}
0x59F2	0xE7F9    B	L_main435
L_main436:
;DriverRF4463PROMain.c, 883 :: 		}
L_main434:
;DriverRF4463PROMain.c, 885 :: 		if ( reset_mode == 0 ) {
0x59F4	0x484F    LDR	R0, [PC, #316]
0x59F6	0x7800    LDRB	R0, [R0, #0]
0x59F8	0x2800    CMP	R0, #0
0x59FA	0xF04080C3  BNE	L_main438
;DriverRF4463PROMain.c, 887 :: 		while ( 1 ) {
L_main439:
;DriverRF4463PROMain.c, 889 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x59FE	0x484F    LDR	R0, [PC, #316]
0x5A00	0x6800    LDR	R0, [R0, #0]
0x5A02	0x2801    CMP	R0, #1
0x5A04	0xD100    BNE	L_main441
;DriverRF4463PROMain.c, 890 :: 		break;
0x5A06	0xE0BD    B	L_main440
;DriverRF4463PROMain.c, 891 :: 		}
L_main441:
;DriverRF4463PROMain.c, 893 :: 		if ( Flag.reach_1s ) {
0x5A08	0x494F    LDR	R1, [PC, #316]
0x5A0A	0x6808    LDR	R0, [R1, #0]
0x5A0C	0xB140    CBZ	R0, L_main442
;DriverRF4463PROMain.c, 894 :: 		Flag.reach_1s = 0;
0x5A0E	0x2100    MOVS	R1, #0
0x5A10	0xB249    SXTB	R1, R1
0x5A12	0x484D    LDR	R0, [PC, #308]
0x5A14	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 895 :: 		if ( ucRF4463Mode == master_mode ) {
0x5A16	0x4845    LDR	R0, [PC, #276]
0x5A18	0x7800    LDRB	R0, [R0, #0]
0x5A1A	0xB908    CBNZ	R0, L_main443
;DriverRF4463PROMain.c, 896 :: 		vRF4463TxData();
0x5A1C	0xF7FFFAD8  BL	_vRF4463TxData+0
;DriverRF4463PROMain.c, 897 :: 		}
L_main443:
;DriverRF4463PROMain.c, 898 :: 		}
L_main442:
;DriverRF4463PROMain.c, 901 :: 		if ( !Flag.is_tx ) {
0x5A20	0x494A    LDR	R1, [PC, #296]
0x5A22	0x6808    LDR	R0, [R1, #0]
0x5A24	0x2800    CMP	R0, #0
0x5A26	0xF04080AC  BNE	L_main444
;DriverRF4463PROMain.c, 902 :: 		if ( !nIRQ ) {          // !nIRQ
0x5A2A	0x4846    LDR	R0, [PC, #280]
0x5A2C	0x6800    LDR	R0, [R0, #0]
0x5A2E	0x2800    CMP	R0, #0
0x5A30	0xF04080A7  BNE	L_main445
;DriverRF4463PROMain.c, 903 :: 		vRF4463ClearInterrupts();
0x5A34	0xF7FFFA52  BL	_vRF4463ClearInterrupts+0
;DriverRF4463PROMain.c, 905 :: 		if ( ( spi_read_buf[ 4 ] & 0x08) == 0 ) { // crc error check
0x5A38	0x4845    LDR	R0, [PC, #276]
0x5A3A	0x7800    LDRB	R0, [R0, #0]
0x5A3C	0xF0000008  AND	R0, R0, #8
0x5A40	0xB2C0    UXTB	R0, R0
0x5A42	0x2800    CMP	R0, #0
0x5A44	0xD14F    BNE	L_main446
;DriverRF4463PROMain.c, 909 :: 		spi_read_fifo();
0x5A46	0xF7FEFB15  BL	_spi_read_fifo+0
;DriverRF4463PROMain.c, 910 :: 		vRF4463FifoReset();
0x5A4A	0xF7FDF8B9  BL	_vRF4463FifoReset+0
;DriverRF4463PROMain.c, 912 :: 		chksum = 0;
0x5A4E	0x2000    MOVS	R0, #0
0x5A50	0xF88D0005  STRB	R0, [SP, #5]
;DriverRF4463PROMain.c, 913 :: 		for ( i = 4; i < payload_length - 1; i++ )                // Calculation Checksum
0x5A54	0x2004    MOVS	R0, #4
0x5A56	0xF88D0004  STRB	R0, [SP, #4]
L_main447:
0x5A5A	0xF89D0004  LDRB	R0, [SP, #4]
0x5A5E	0x2841    CMP	R0, #65
0x5A60	0xDA0F    BGE	L_main448
;DriverRF4463PROMain.c, 914 :: 		chksum += rx_buf[ i ];
0x5A62	0xF89D1004  LDRB	R1, [SP, #4]
0x5A66	0x483B    LDR	R0, [PC, #236]
0x5A68	0x1840    ADDS	R0, R0, R1
0x5A6A	0x7801    LDRB	R1, [R0, #0]
0x5A6C	0xF89D0005  LDRB	R0, [SP, #5]
0x5A70	0x1840    ADDS	R0, R0, R1
0x5A72	0xF88D0005  STRB	R0, [SP, #5]
;DriverRF4463PROMain.c, 913 :: 		for ( i = 4; i < payload_length - 1; i++ )                // Calculation Checksum
0x5A76	0xF89D0004  LDRB	R0, [SP, #4]
0x5A7A	0x1C40    ADDS	R0, R0, #1
0x5A7C	0xF88D0004  STRB	R0, [SP, #4]
;DriverRF4463PROMain.c, 914 :: 		chksum += rx_buf[ i ];
0x5A80	0xE7EB    B	L_main447
L_main448:
;DriverRF4463PROMain.c, 916 :: 		if ( ( chksum == rx_buf[ payload_length - 1 ] )&&( rx_buf[ 4 ] == 0x41 )) {
0x5A82	0x4835    LDR	R0, [PC, #212]
0x5A84	0x7801    LDRB	R1, [R0, #0]
0x5A86	0xF89D0005  LDRB	R0, [SP, #5]
0x5A8A	0x4288    CMP	R0, R1
0x5A8C	0xD128    BNE	L_main452
0x5A8E	0x4833    LDR	R0, [PC, #204]
0x5A90	0x7800    LDRB	R0, [R0, #0]
0x5A92	0x2841    CMP	R0, #65
0x5A94	0xD124    BNE	L_main452
L__main481:
;DriverRF4463PROMain.c, 922 :: 		vUSART1Start_TX( rx_buf, payload_length );
0x5A96	0x2042    MOVS	R0, #66
0x5A98	0xB401    PUSH	(R0)
0x5A9A	0x482E    LDR	R0, [PC, #184]
0x5A9C	0xB401    PUSH	(R0)
0x5A9E	0xF7FEFB87  BL	_vUSART1Start_TX+0
0x5AA2	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 923 :: 		vUSART1Start_TX("\r\n", 2);
0x5AA4	0x2002    MOVS	R0, #2
0x5AA6	0xB401    PUSH	(R0)
0x5AA8	0x200D    MOVS	R0, #13
0x5AAA	0xF88D0029  STRB	R0, [SP, #41]
0x5AAE	0x200A    MOVS	R0, #10
0x5AB0	0xF88D002A  STRB	R0, [SP, #42]
0x5AB4	0x2000    MOVS	R0, #0
0x5AB6	0xF88D002B  STRB	R0, [SP, #43]
0x5ABA	0xF10D0029  ADD	R0, SP, #41
0x5ABE	0xB401    PUSH	(R0)
0x5AC0	0xF7FEFB76  BL	_vUSART1Start_TX+0
0x5AC4	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 929 :: 		LED_GREEN ^= 1;                                        // Data received
0x5AC6	0x4812    LDR	R0, [PC, #72]
0x5AC8	0x6800    LDR	R0, [R0, #0]
0x5ACA	0xF0800101  EOR	R1, R0, #1
0x5ACE	0xB2C9    UXTB	R1, R1
0x5AD0	0x480F    LDR	R0, [PC, #60]
0x5AD2	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 930 :: 		rx_cnt++;
0x5AD4	0x4822    LDR	R0, [PC, #136]
0x5AD6	0x6800    LDR	R0, [R0, #0]
0x5AD8	0x1C41    ADDS	R1, R0, #1
0x5ADA	0x4821    LDR	R0, [PC, #132]
0x5ADC	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 936 :: 		}
0x5ADE	0xE001    B	L_main453
L_main452:
;DriverRF4463PROMain.c, 938 :: 		vRF4463RxInit();    // The received data is wrong, you must continue to receive
0x5AE0	0xF7FDF9F0  BL	_vRF4463RxInit+0
L_main453:
;DriverRF4463PROMain.c, 939 :: 		}
0x5AE4	0xE04D    B	L_main454
L_main446:
;DriverRF4463PROMain.c, 942 :: 		vUSART1Start_TX("[ CRC ] Fail\r\n", 14 );
0x5AE6	0x200E    MOVS	R0, #14
0x5AE8	0xB401    PUSH	(R0)
0x5AEA	0xF10D0B2C  ADD	R11, SP, #44
0x5AEE	0xF10B0A0F  ADD	R10, R11, #15
0x5AF2	0xE037    B	#110
0x5AF4	0x08004002  	GPIOC_BASE+0
0x5AF8	0x0C004002  	GPIOD_BASE+0
0x5AFC	0x80284227  	EXTI_IMR+0
0x5B00	0x81A84227  	EXTI_FTSR+0
0x5B04	0x10004002  	GPIOE_BASE+0
0x5B08	0x82B44241  	GPIOD_ODRbits+0
0x5B0C	0x02984241  	GPIOC_ODRbits+0
0x5B10	0x029C4241  	GPIOC_ODRbits+0
0x5B14	0x02A04241  	GPIOC_ODRbits+0
0x5B18	0x23372000  	_ucRF4463Freq3+0
0x5B1C	0x233C2000  	_ucRF4463Freq2+0
0x5B20	0x233D2000  	_ucRF4463Freq1+0
0x5B24	0x23362000  	_ucRF4463Power+0
0x5B28	0x233E2000  	_ucRF4463Rate+0
0x5B2C	0x233F2000  	_ucRF4463Mode+0
0x5B30	0x207C2000  	_ucRF4463FreqChannel+0
0x5B34	0x23972000  	_reset_mode+0
0x5B38	0x88C40000  	?ICS?lstr9_DriverRF4463PROMain+0
0x5B3C	0x20082000  	_fUSART1Buffer+0
0x5B40	0x21B52000  	_ucRF4463SendMessage+0
0x5B44	0x82284241  	GPIOD_IDRbits+0
0x5B48	0x6A802204  	_Flag+0
0x5B4C	0x6A842204  	_Flag+0
0x5B50	0x23442000  	_spi_read_buf+4
0x5B54	0x23552000  	_rx_buf+0
0x5B58	0x23962000  	_rx_buf+65
0x5B5C	0x23592000  	_rx_buf+4
0x5B60	0x228C2000  	_rx_cnt+0
0x5B64	0xF8DFC020  LDR	R12, [PC, #32]
0x5B68	0xF7FEFAC6  BL	___CC2DW+0
0x5B6C	0xA80B    ADD	R0, SP, #44
0x5B6E	0xB401    PUSH	(R0)
0x5B70	0xF7FEFB1E  BL	_vUSART1Start_TX+0
0x5B74	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 943 :: 		VRF4463SDNReset();
0x5B76	0xF7FEFB97  BL	_VRF4463SDNReset+0
;DriverRF4463PROMain.c, 944 :: 		vRF4463Init();
0x5B7A	0xF7FEFBED  BL	_vRF4463Init+0
;DriverRF4463PROMain.c, 945 :: 		vRF4463RxInit();
0x5B7E	0xF7FDF9A1  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 946 :: 		}
L_main454:
;DriverRF4463PROMain.c, 947 :: 		}
L_main445:
;DriverRF4463PROMain.c, 948 :: 		}
L_main444:
;DriverRF4463PROMain.c, 949 :: 		}
0x5B82	0xE73C    B	L_main439
L_main440:
;DriverRF4463PROMain.c, 950 :: 		}
L_main438:
;DriverRF4463PROMain.c, 951 :: 		}
0x5B84	0xE6F0    B	L_main417
;DriverRF4463PROMain.c, 952 :: 		}
L_end_main:
L__main_end_loop:
0x5B86	0xE7FE    B	L__main_end_loop
0x5B88	0x88E60000  	?ICS?lstr11_DriverRF4463PROMain+0
; end of _main
___CC2DW:
;__Lib_System_4XX.c, 44 :: 		
0x40F8	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 46 :: 		
L_loopDW:
;__Lib_System_4XX.c, 47 :: 		
0x40FA	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_4XX.c, 48 :: 		
0x40FE	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_4XX.c, 49 :: 		
0x4102	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 50 :: 		
0x4106	0xD1F8    BNE	L_loopDW
;__Lib_System_4XX.c, 52 :: 		
L_end___CC2DW:
0x4108	0xB001    ADD	SP, SP, #4
0x410A	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_4XX.c, 86 :: 		
0x4174	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 88 :: 		
0x4176	0xF04F0900  MOV	R9, #0
;__Lib_System_4XX.c, 89 :: 		
0x417A	0xF04F0C00  MOV	R12, #0
;__Lib_System_4XX.c, 90 :: 		
0x417E	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_4XX.c, 91 :: 		
0x4182	0xDC04    BGT	L_loopFZs
;__Lib_System_4XX.c, 92 :: 		
0x4184	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_4XX.c, 93 :: 		
0x4188	0xDB01    BLT	L_loopFZs
;__Lib_System_4XX.c, 94 :: 		
0x418A	0x46D4    MOV	R12, R10
;__Lib_System_4XX.c, 95 :: 		
0x418C	0x46EA    MOV	R10, SP
;__Lib_System_4XX.c, 96 :: 		
L_loopFZs:
;__Lib_System_4XX.c, 97 :: 		
0x418E	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_4XX.c, 98 :: 		
0x4192	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 99 :: 		
0x4196	0xD1FA    BNE	L_loopFZs
;__Lib_System_4XX.c, 100 :: 		
0x4198	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_4XX.c, 101 :: 		
0x419C	0xDD05    BLE	L_norep
;__Lib_System_4XX.c, 102 :: 		
0x419E	0x46E2    MOV	R10, R12
;__Lib_System_4XX.c, 103 :: 		
0x41A0	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_4XX.c, 104 :: 		
0x41A4	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_4XX.c, 105 :: 		
0x41A8	0xE7F1    B	L_loopFZs
;__Lib_System_4XX.c, 106 :: 		
L_norep:
;__Lib_System_4XX.c, 108 :: 		
L_end___FillZeros:
0x41AA	0xB001    ADD	SP, SP, #4
0x41AC	0x4770    BX	LR
; end of ___FillZeros
_GPIO_Digital_Output:
;__Lib_GPIO_32F4xx.c, 233 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x4158	0xB081    SUB	SP, SP, #4
0x415A	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 234 :: 		
0x415E	0x4A04    LDR	R2, [PC, #16]
0x4160	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x4162	0xF7FEFAC3  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 235 :: 		
L_end_GPIO_Digital_Output:
0x4166	0xF8DDE000  LDR	LR, [SP, #0]
0x416A	0xB001    ADD	SP, SP, #4
0x416C	0x4770    BX	LR
0x416E	0xBF00    NOP
0x4170	0x00140008  	#524308
; end of _GPIO_Digital_Output
_GPIO_Config:
;__Lib_GPIO_32F4xx.c, 74 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x26EC	0xB084    SUB	SP, SP, #16
0x26EE	0xF8CDE000  STR	LR, [SP, #0]
0x26F2	0xB28D    UXTH	R5, R1
0x26F4	0x4616    MOV	R6, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 20 (R5)
; config start address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 75 :: 		
;__Lib_GPIO_32F4xx.c, 76 :: 		
;__Lib_GPIO_32F4xx.c, 80 :: 		
0x26F6	0x4B86    LDR	R3, [PC, #536]
0x26F8	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 28 (R7)
0x26FC	0x461F    MOV	R7, R3
;__Lib_GPIO_32F4xx.c, 82 :: 		
0x26FE	0x4618    MOV	R0, R3
0x2700	0xF7FFFF3C  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F4xx.c, 85 :: 		
0x2704	0xF1B50FFF  CMP	R5, #255
0x2708	0xD120    BNE	L_GPIO_Config22
;__Lib_GPIO_32F4xx.c, 86 :: 		
0x270A	0x683C    LDR	R4, [R7, #0]
;__Lib_GPIO_32F4xx.c, 87 :: 		
0x270C	0x4B81    LDR	R3, [PC, #516]
0x270E	0xEA040303  AND	R3, R4, R3, LSL #0
; tmp start address is: 0 (R0)
0x2712	0x4618    MOV	R0, R3
;__Lib_GPIO_32F4xx.c, 88 :: 		
0x2714	0x4B80    LDR	R3, [PC, #512]
0x2716	0x429E    CMP	R6, R3
0x2718	0xD114    BNE	L_GPIO_Config23
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 89 :: 		
0x271A	0xF2455355  MOVW	R3, #21845
0x271E	0xEA400303  ORR	R3, R0, R3, LSL #0
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 90 :: 		
0x2722	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 91 :: 		
0x2724	0x1D3D    ADDS	R5, R7, #4
0x2726	0x682C    LDR	R4, [R5, #0]
0x2728	0xF06F03FF  MVN	R3, #255
0x272C	0xEA040303  AND	R3, R4, R3, LSL #0
0x2730	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 92 :: 		
0x2732	0xF2070508  ADDW	R5, R7, #8
; port end address is: 28 (R7)
0x2736	0x682C    LDR	R4, [R5, #0]
0x2738	0xF64F73FF  MOVW	R3, #65535
0x273C	0xEA440303  ORR	R3, R4, R3, LSL #0
0x2740	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 93 :: 		
0x2742	0xE0E1    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 94 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F4xx.c, 95 :: 		
; port start address is: 28 (R7)
; tmp start address is: 0 (R0)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x2744	0x2E42    CMP	R6, #66
0x2746	0xD101    BNE	L_GPIO_Config24
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 96 :: 		
0x2748	0x6038    STR	R0, [R7, #0]
; tmp end address is: 0 (R0)
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 97 :: 		
0x274A	0xE0DD    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 98 :: 		
L_GPIO_Config24:
;__Lib_GPIO_32F4xx.c, 99 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config22:
;__Lib_GPIO_32F4xx.c, 101 :: 		
0x274C	0x4B73    LDR	R3, [PC, #460]
0x274E	0x429D    CMP	R5, R3
0x2750	0xD113    BNE	L_GPIO_Config25
;__Lib_GPIO_32F4xx.c, 102 :: 		
0x2752	0x4B71    LDR	R3, [PC, #452]
0x2754	0x429E    CMP	R6, R3
0x2756	0xD10B    BNE	L_GPIO_Config26
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 103 :: 		
0x2758	0xF04F3355  MOV	R3, #1431655765
0x275C	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 104 :: 		
0x275E	0x1D3C    ADDS	R4, R7, #4
0x2760	0x2300    MOVS	R3, #0
0x2762	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 105 :: 		
0x2764	0xF2070408  ADDW	R4, R7, #8
; port end address is: 28 (R7)
0x2768	0xF04F33FF  MOV	R3, #-1
0x276C	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 106 :: 		
0x276E	0xE0CB    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 107 :: 		
L_GPIO_Config26:
;__Lib_GPIO_32F4xx.c, 108 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x2770	0x2E42    CMP	R6, #66
0x2772	0xD102    BNE	L_GPIO_Config27
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 109 :: 		
0x2774	0x2300    MOVS	R3, #0
0x2776	0x603B    STR	R3, [R7, #0]
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 110 :: 		
0x2778	0xE0C6    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 111 :: 		
L_GPIO_Config27:
;__Lib_GPIO_32F4xx.c, 112 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config25:
;__Lib_GPIO_32F4xx.c, 114 :: 		
0x277A	0xF0060301  AND	R3, R6, #1
0x277E	0xB10B    CBZ	R3, L_GPIO_Config28
;__Lib_GPIO_32F4xx.c, 115 :: 		
; mode start address is: 0 (R0)
0x2780	0x2003    MOVS	R0, #3
; mode end address is: 0 (R0)
0x2782	0xE00A    B	L_GPIO_Config29
L_GPIO_Config28:
;__Lib_GPIO_32F4xx.c, 116 :: 		
0x2784	0xF0060308  AND	R3, R6, #8
0x2788	0xB10B    CBZ	R3, L_GPIO_Config30
;__Lib_GPIO_32F4xx.c, 117 :: 		
; mode start address is: 0 (R0)
0x278A	0x2002    MOVS	R0, #2
; mode end address is: 0 (R0)
0x278C	0xE005    B	L_GPIO_Config31
L_GPIO_Config30:
;__Lib_GPIO_32F4xx.c, 118 :: 		
0x278E	0xF0060304  AND	R3, R6, #4
0x2792	0xB10B    CBZ	R3, L_GPIO_Config32
;__Lib_GPIO_32F4xx.c, 119 :: 		
; mode start address is: 0 (R0)
0x2794	0x2001    MOVS	R0, #1
; mode end address is: 0 (R0)
0x2796	0xE000    B	L_GPIO_Config33
L_GPIO_Config32:
;__Lib_GPIO_32F4xx.c, 121 :: 		
; mode start address is: 0 (R0)
0x2798	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
L_GPIO_Config33:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config31:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config29:
;__Lib_GPIO_32F4xx.c, 123 :: 		
; mode start address is: 0 (R0)
0x279A	0x4B61    LDR	R3, [PC, #388]
0x279C	0xEA060303  AND	R3, R6, R3, LSL #0
0x27A0	0xB10B    CBZ	R3, L_GPIO_Config34
;__Lib_GPIO_32F4xx.c, 124 :: 		
; speed start address is: 4 (R1)
0x27A2	0x2103    MOVS	R1, #3
; speed end address is: 4 (R1)
0x27A4	0xE00A    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32F4xx.c, 125 :: 		
0x27A6	0xF4066380  AND	R3, R6, #1024
0x27AA	0xB10B    CBZ	R3, L_GPIO_Config36
;__Lib_GPIO_32F4xx.c, 126 :: 		
; speed start address is: 4 (R1)
0x27AC	0x2102    MOVS	R1, #2
; speed end address is: 4 (R1)
0x27AE	0xE005    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32F4xx.c, 127 :: 		
0x27B0	0xF4067300  AND	R3, R6, #512
0x27B4	0xB10B    CBZ	R3, L_GPIO_Config38
;__Lib_GPIO_32F4xx.c, 128 :: 		
; speed start address is: 4 (R1)
0x27B6	0x2101    MOVS	R1, #1
; speed end address is: 4 (R1)
0x27B8	0xE000    B	L_GPIO_Config39
L_GPIO_Config38:
;__Lib_GPIO_32F4xx.c, 130 :: 		
; speed start address is: 4 (R1)
0x27BA	0x2100    MOVS	R1, #0
; speed end address is: 4 (R1)
L_GPIO_Config39:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config37:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config35:
;__Lib_GPIO_32F4xx.c, 132 :: 		
; speed start address is: 4 (R1)
0x27BC	0xF0060320  AND	R3, R6, #32
0x27C0	0xB10B    CBZ	R3, L_GPIO_Config40
;__Lib_GPIO_32F4xx.c, 133 :: 		
; otype start address is: 8 (R2)
0x27C2	0x2201    MOVS	R2, #1
; otype end address is: 8 (R2)
0x27C4	0xE000    B	L_GPIO_Config41
L_GPIO_Config40:
;__Lib_GPIO_32F4xx.c, 135 :: 		
; otype start address is: 8 (R2)
0x27C6	0x2200    MOVS	R2, #0
; otype end address is: 8 (R2)
L_GPIO_Config41:
;__Lib_GPIO_32F4xx.c, 137 :: 		
; otype start address is: 8 (R2)
0x27C8	0xF4067380  AND	R3, R6, #256
0x27CC	0xB10B    CBZ	R3, L_GPIO_Config42
;__Lib_GPIO_32F4xx.c, 138 :: 		
; pull start address is: 12 (R3)
0x27CE	0x2302    MOVS	R3, #2
; pull end address is: 12 (R3)
0x27D0	0xE005    B	L_GPIO_Config43
L_GPIO_Config42:
;__Lib_GPIO_32F4xx.c, 139 :: 		
0x27D2	0xF0060380  AND	R3, R6, #128
0x27D6	0xB10B    CBZ	R3, L_GPIO_Config44
;__Lib_GPIO_32F4xx.c, 140 :: 		
; pull start address is: 12 (R3)
0x27D8	0x2301    MOVS	R3, #1
; pull end address is: 12 (R3)
0x27DA	0xE000    B	L_GPIO_Config45
L_GPIO_Config44:
;__Lib_GPIO_32F4xx.c, 142 :: 		
; pull start address is: 12 (R3)
0x27DC	0x2300    MOVS	R3, #0
; pull end address is: 12 (R3)
L_GPIO_Config45:
; pull start address is: 12 (R3)
; pull end address is: 12 (R3)
L_GPIO_Config43:
;__Lib_GPIO_32F4xx.c, 146 :: 		
; pull start address is: 12 (R3)
; pinpos start address is: 40 (R10)
0x27DE	0xF2400A00  MOVW	R10, #0
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
; mode end address is: 0 (R0)
; speed end address is: 4 (R1)
; otype end address is: 8 (R2)
; pull end address is: 12 (R3)
; pinpos end address is: 40 (R10)
0x27E2	0x9201    STR	R2, [SP, #4]
0x27E4	0xFA1FF985  UXTH	R9, R5
0x27E8	0x46B0    MOV	R8, R6
0x27EA	0x4606    MOV	R6, R0
0x27EC	0x4618    MOV	R0, R3
0x27EE	0x460A    MOV	R2, R1
0x27F0	0x9901    LDR	R1, [SP, #4]
L_GPIO_Config46:
; pinpos start address is: 40 (R10)
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 24 (R6)
; mode end address is: 24 (R6)
; port start address is: 28 (R7)
; port end address is: 28 (R7)
; config start address is: 32 (R8)
; config end address is: 32 (R8)
; pin_mask start address is: 36 (R9)
; pin_mask end address is: 36 (R9)
0x27F2	0xF1BA0F10  CMP	R10, #16
0x27F6	0xF0808087  BCS	L_GPIO_Config47
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
;__Lib_GPIO_32F4xx.c, 148 :: 		
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; port start address is: 28 (R7)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x27FA	0xF04F0301  MOV	R3, #1
0x27FE	0xFA03F40A  LSL	R4, R3, R10
;__Lib_GPIO_32F4xx.c, 150 :: 		
0x2802	0xEA090304  AND	R3, R9, R4, LSL #0
;__Lib_GPIO_32F4xx.c, 152 :: 		
0x2806	0x42A3    CMP	R3, R4
0x2808	0xF040807B  BNE	L_GPIO_Config49
;__Lib_GPIO_32F4xx.c, 154 :: 		
0x280C	0xEA4F044A  LSL	R4, R10, #1
0x2810	0xF04F0303  MOV	R3, #3
0x2814	0x40A3    LSLS	R3, R4
0x2816	0x43DC    MVN	R4, R3
0x2818	0x683B    LDR	R3, [R7, #0]
0x281A	0x4023    ANDS	R3, R4
0x281C	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 155 :: 		
0x281E	0xEA4F034A  LSL	R3, R10, #1
0x2822	0xFA06F403  LSL	R4, R6, R3
0x2826	0x683B    LDR	R3, [R7, #0]
0x2828	0x4323    ORRS	R3, R4
0x282A	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 157 :: 		
0x282C	0xF008030C  AND	R3, R8, #12
0x2830	0xB33B    CBZ	R3, L_GPIO_Config50
;__Lib_GPIO_32F4xx.c, 160 :: 		
0x2832	0xF2070508  ADDW	R5, R7, #8
0x2836	0xEA4F044A  LSL	R4, R10, #1
0x283A	0xF04F0303  MOV	R3, #3
0x283E	0x40A3    LSLS	R3, R4
0x2840	0x43DC    MVN	R4, R3
0x2842	0x682B    LDR	R3, [R5, #0]
0x2844	0x4023    ANDS	R3, R4
0x2846	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 161 :: 		
0x2848	0xF2070508  ADDW	R5, R7, #8
0x284C	0xEA4F034A  LSL	R3, R10, #1
0x2850	0xFA02F403  LSL	R4, R2, R3
0x2854	0x682B    LDR	R3, [R5, #0]
0x2856	0x4323    ORRS	R3, R4
0x2858	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 164 :: 		
0x285A	0x1D3D    ADDS	R5, R7, #4
0x285C	0xFA1FF48A  UXTH	R4, R10
0x2860	0xF04F0301  MOV	R3, #1
0x2864	0x40A3    LSLS	R3, R4
0x2866	0x43DC    MVN	R4, R3
0x2868	0x682B    LDR	R3, [R5, #0]
0x286A	0x4023    ANDS	R3, R4
0x286C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 165 :: 		
0x286E	0x1D3D    ADDS	R5, R7, #4
0x2870	0xFA1FF48A  UXTH	R4, R10
0x2874	0xB28B    UXTH	R3, R1
0x2876	0xFA03F404  LSL	R4, R3, R4
0x287A	0xB2A4    UXTH	R4, R4
0x287C	0x682B    LDR	R3, [R5, #0]
0x287E	0x4323    ORRS	R3, R4
0x2880	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 166 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F4xx.c, 169 :: 		
0x2882	0xF207050C  ADDW	R5, R7, #12
0x2886	0xFA1FF38A  UXTH	R3, R10
0x288A	0x005C    LSLS	R4, R3, #1
0x288C	0xB2A4    UXTH	R4, R4
0x288E	0xF04F0303  MOV	R3, #3
0x2892	0x40A3    LSLS	R3, R4
0x2894	0x43DC    MVN	R4, R3
0x2896	0x682B    LDR	R3, [R5, #0]
0x2898	0x4023    ANDS	R3, R4
0x289A	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 170 :: 		
0x289C	0xF207050C  ADDW	R5, R7, #12
0x28A0	0xEA4F034A  LSL	R3, R10, #1
0x28A4	0xFA00F403  LSL	R4, R0, R3
0x28A8	0x682B    LDR	R3, [R5, #0]
0x28AA	0x4323    ORRS	R3, R4
0x28AC	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 172 :: 		
0x28AE	0xF0080308  AND	R3, R8, #8
0x28B2	0xB333    CBZ	R3, L_GPIO_Config51
;__Lib_GPIO_32F4xx.c, 173 :: 		
0x28B4	0xF4080370  AND	R3, R8, #15728640
0x28B8	0x0D1B    LSRS	R3, R3, #20
0x28BA	0xF88D300C  STRB	R3, [SP, #12]
;__Lib_GPIO_32F4xx.c, 174 :: 		
0x28BE	0xF1BA0F07  CMP	R10, #7
0x28C2	0xD905    BLS	L_GPIO_Config52
;__Lib_GPIO_32F4xx.c, 175 :: 		
0x28C4	0xF2070324  ADDW	R3, R7, #36
0x28C8	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 176 :: 		
0x28CA	0xF1AA0508  SUB	R5, R10, #8
; pos start address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 177 :: 		
; pos end address is: 20 (R5)
0x28CE	0xE003    B	L_GPIO_Config53
L_GPIO_Config52:
;__Lib_GPIO_32F4xx.c, 178 :: 		
0x28D0	0xF2070320  ADDW	R3, R7, #32
0x28D4	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 179 :: 		
; pos start address is: 20 (R5)
0x28D6	0x4655    MOV	R5, R10
; pos end address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 180 :: 		
L_GPIO_Config53:
;__Lib_GPIO_32F4xx.c, 181 :: 		
; pos start address is: 20 (R5)
0x28D8	0x00AC    LSLS	R4, R5, #2
0x28DA	0xF04F030F  MOV	R3, #15
0x28DE	0x40A3    LSLS	R3, R4
0x28E0	0x43DC    MVN	R4, R3
0x28E2	0x9B02    LDR	R3, [SP, #8]
0x28E4	0x681B    LDR	R3, [R3, #0]
0x28E6	0xEA030404  AND	R4, R3, R4, LSL #0
0x28EA	0x9B02    LDR	R3, [SP, #8]
0x28EC	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 182 :: 		
0x28EE	0xF89D400C  LDRB	R4, [SP, #12]
0x28F2	0x00AB    LSLS	R3, R5, #2
; pos end address is: 20 (R5)
0x28F4	0x409C    LSLS	R4, R3
0x28F6	0x9B02    LDR	R3, [SP, #8]
0x28F8	0x681B    LDR	R3, [R3, #0]
0x28FA	0xEA430404  ORR	R4, R3, R4, LSL #0
0x28FE	0x9B02    LDR	R3, [SP, #8]
0x2900	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 183 :: 		
L_GPIO_Config51:
;__Lib_GPIO_32F4xx.c, 185 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F4xx.c, 146 :: 		
0x2902	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F4xx.c, 186 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
; pinpos end address is: 40 (R10)
0x2906	0xE774    B	L_GPIO_Config46
L_GPIO_Config47:
;__Lib_GPIO_32F4xx.c, 187 :: 		
L_end_GPIO_Config:
0x2908	0xF8DDE000  LDR	LR, [SP, #0]
0x290C	0xB004    ADD	SP, SP, #16
0x290E	0x4770    BX	LR
0x2910	0xFC00FFFF  	#-1024
0x2914	0x0000FFFF  	#-65536
0x2918	0x00140008  	#524308
0x291C	0xFFFF0000  	#65535
0x2920	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F4xx.c, 26 :: 		
; gpio_port start address is: 0 (R0)
0x257C	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 28 :: 		
0x257E	0x491E    LDR	R1, [PC, #120]
0x2580	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x2584	0x4608    MOV	R0, R1
;__Lib_GPIO_32F4xx.c, 29 :: 		
; pos start address is: 8 (R2)
0x2586	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F4xx.c, 30 :: 		
0x2588	0xE012    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F4xx.c, 31 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x258A	0x2001    MOVS	R0, #1
; pos end address is: 0 (R0)
0x258C	0xE02C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 32 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x258E	0x2002    MOVS	R0, #2
; pos end address is: 0 (R0)
0x2590	0xE02A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 33 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x2592	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x2594	0xE028    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 34 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x2596	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x2598	0xE026    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 35 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x259A	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x259C	0xE024    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 36 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x259E	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x25A0	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 37 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x25A2	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x25A4	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 38 :: 		
L_GPIO_Clk_Enable9:
; pos start address is: 0 (R0)
0x25A6	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x25A8	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 39 :: 		
L_GPIO_Clk_Enable10:
; pos start address is: 0 (R0)
0x25AA	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x25AE	0xE01B    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 40 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x25B0	0x4912    LDR	R1, [PC, #72]
0x25B2	0x4288    CMP	R0, R1
0x25B4	0xD0E9    BEQ	L_GPIO_Clk_Enable2
0x25B6	0x4912    LDR	R1, [PC, #72]
0x25B8	0x4288    CMP	R0, R1
0x25BA	0xD0E8    BEQ	L_GPIO_Clk_Enable3
0x25BC	0x4911    LDR	R1, [PC, #68]
0x25BE	0x4288    CMP	R0, R1
0x25C0	0xD0E7    BEQ	L_GPIO_Clk_Enable4
0x25C2	0x4911    LDR	R1, [PC, #68]
0x25C4	0x4288    CMP	R0, R1
0x25C6	0xD0E6    BEQ	L_GPIO_Clk_Enable5
0x25C8	0x4910    LDR	R1, [PC, #64]
0x25CA	0x4288    CMP	R0, R1
0x25CC	0xD0E5    BEQ	L_GPIO_Clk_Enable6
0x25CE	0x4910    LDR	R1, [PC, #64]
0x25D0	0x4288    CMP	R0, R1
0x25D2	0xD0E4    BEQ	L_GPIO_Clk_Enable7
0x25D4	0x490F    LDR	R1, [PC, #60]
0x25D6	0x4288    CMP	R0, R1
0x25D8	0xD0E3    BEQ	L_GPIO_Clk_Enable8
0x25DA	0x490F    LDR	R1, [PC, #60]
0x25DC	0x4288    CMP	R0, R1
0x25DE	0xD0E2    BEQ	L_GPIO_Clk_Enable9
0x25E0	0x490E    LDR	R1, [PC, #56]
0x25E2	0x4288    CMP	R0, R1
0x25E4	0xD0E1    BEQ	L_GPIO_Clk_Enable10
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x25E6	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F4xx.c, 42 :: 		
; pos start address is: 0 (R0)
0x25E8	0x490D    LDR	R1, [PC, #52]
0x25EA	0x6809    LDR	R1, [R1, #0]
0x25EC	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x25F0	0x490B    LDR	R1, [PC, #44]
0x25F2	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 43 :: 		
L_end_GPIO_Clk_Enable:
0x25F4	0xB001    ADD	SP, SP, #4
0x25F6	0x4770    BX	LR
0x25F8	0xFC00FFFF  	#-1024
0x25FC	0x00004002  	#1073872896
0x2600	0x04004002  	#1073873920
0x2604	0x08004002  	#1073874944
0x2608	0x0C004002  	#1073875968
0x260C	0x10004002  	#1073876992
0x2610	0x14004002  	#1073878016
0x2614	0x18004002  	#1073879040
0x2618	0x1C004002  	#1073880064
0x261C	0x20004002  	#1073881088
0x2620	0x38304002  	RCC_AHB1ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Input:
;__Lib_GPIO_32F4xx.c, 237 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x4FB4	0xB081    SUB	SP, SP, #4
0x4FB6	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 238 :: 		
0x4FBA	0xF04F0242  MOV	R2, #66
0x4FBE	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x4FC0	0xF7FDFB94  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 239 :: 		
L_end_GPIO_Digital_Input:
0x4FC4	0xF8DDE000  LDR	LR, [SP, #0]
0x4FC8	0xB001    ADD	SP, SP, #4
0x4FCA	0x4770    BX	LR
; end of _GPIO_Digital_Input
_InitTimer2:
;DriverRF4463PROMain.c, 558 :: 		void InitTimer2(){
0x4F5C	0xB081    SUB	SP, SP, #4
0x4F5E	0xF8CDE000  STR	LR, [SP, #0]
;DriverRF4463PROMain.c, 560 :: 		RCC_APB1ENR.TIM2EN = 1;
0x4F62	0x2101    MOVS	R1, #1
0x4F64	0xB249    SXTB	R1, R1
0x4F66	0x480E    LDR	R0, [PC, #56]
0x4F68	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 561 :: 		TIM2_CR1.CEN = 0;
0x4F6A	0x2100    MOVS	R1, #0
0x4F6C	0xB249    SXTB	R1, R1
0x4F6E	0x480D    LDR	R0, [PC, #52]
0x4F70	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 562 :: 		TIM2_PSC = 1124;
0x4F72	0xF2404164  MOVW	R1, #1124
0x4F76	0x480C    LDR	R0, [PC, #48]
0x4F78	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 563 :: 		TIM2_ARR = 63999;
0x4F7A	0xF64F11FF  MOVW	R1, #63999
0x4F7E	0x480B    LDR	R0, [PC, #44]
0x4F80	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 564 :: 		NVIC_IntEnable( IVT_INT_TIM2 );
0x4F82	0xF240002C  MOVW	R0, #44
0x4F86	0xF7FDFE31  BL	_NVIC_IntEnable+0
;DriverRF4463PROMain.c, 565 :: 		TIM2_DIER.UIE = 1;
0x4F8A	0x2101    MOVS	R1, #1
0x4F8C	0xB249    SXTB	R1, R1
0x4F8E	0x4808    LDR	R0, [PC, #32]
0x4F90	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 566 :: 		TIM2_CR1.CEN = 1;
0x4F92	0x4804    LDR	R0, [PC, #16]
0x4F94	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 578 :: 		}
L_end_InitTimer2:
0x4F96	0xF8DDE000  LDR	LR, [SP, #0]
0x4F9A	0xB001    ADD	SP, SP, #4
0x4F9C	0x4770    BX	LR
0x4F9E	0xBF00    NOP
0x4FA0	0x08004247  	RCC_APB1ENR+0
0x4FA4	0x00004200  	TIM2_CR1+0
0x4FA8	0x00284000  	TIM2_PSC+0
0x4FAC	0x002C4000  	TIM2_ARR+0
0x4FB0	0x01804200  	TIM2_DIER+0
; end of _InitTimer2
_NVIC_IntEnable:
;__Lib_System_4XX.c, 172 :: 		
; ivt start address is: 0 (R0)
0x2BEC	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_4XX.c, 184 :: 		
0x2BEE	0x2804    CMP	R0, #4
0x2BF0	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 189 :: 		
0x2BF2	0x4919    LDR	R1, [PC, #100]
0x2BF4	0x6809    LDR	R1, [R1, #0]
0x2BF6	0xF4413280  ORR	R2, R1, #65536
0x2BFA	0x4917    LDR	R1, [PC, #92]
0x2BFC	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 190 :: 		
0x2BFE	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_4XX.c, 191 :: 		
; ivt start address is: 0 (R0)
0x2C00	0x2805    CMP	R0, #5
0x2C02	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 196 :: 		
0x2C04	0x4914    LDR	R1, [PC, #80]
0x2C06	0x6809    LDR	R1, [R1, #0]
0x2C08	0xF4413200  ORR	R2, R1, #131072
0x2C0C	0x4912    LDR	R1, [PC, #72]
0x2C0E	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 197 :: 		
0x2C10	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_4XX.c, 198 :: 		
; ivt start address is: 0 (R0)
0x2C12	0x2806    CMP	R0, #6
0x2C14	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 203 :: 		
0x2C16	0x4910    LDR	R1, [PC, #64]
0x2C18	0x6809    LDR	R1, [R1, #0]
0x2C1A	0xF4412280  ORR	R2, R1, #262144
0x2C1E	0x490E    LDR	R1, [PC, #56]
0x2C20	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 204 :: 		
0x2C22	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_4XX.c, 205 :: 		
; ivt start address is: 0 (R0)
0x2C24	0x280F    CMP	R0, #15
0x2C26	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 210 :: 		
0x2C28	0x490C    LDR	R1, [PC, #48]
0x2C2A	0x6809    LDR	R1, [R1, #0]
0x2C2C	0xF0410202  ORR	R2, R1, #2
0x2C30	0x490A    LDR	R1, [PC, #40]
0x2C32	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 211 :: 		
0x2C34	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_4XX.c, 212 :: 		
; ivt start address is: 0 (R0)
0x2C36	0x2810    CMP	R0, #16
0x2C38	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_4XX.c, 217 :: 		
0x2C3A	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x2C3E	0x0961    LSRS	R1, R4, #5
0x2C40	0x008A    LSLS	R2, R1, #2
0x2C42	0x4907    LDR	R1, [PC, #28]
0x2C44	0x188B    ADDS	R3, R1, R2
;__Lib_System_4XX.c, 218 :: 		
0x2C46	0xF004021F  AND	R2, R4, #31
0x2C4A	0xF04F0101  MOV	R1, #1
0x2C4E	0x4091    LSLS	R1, R2
0x2C50	0x6019    STR	R1, [R3, #0]
;__Lib_System_4XX.c, 219 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_4XX.c, 220 :: 		
L_end_NVIC_IntEnable:
0x2C52	0xB001    ADD	SP, SP, #4
0x2C54	0x4770    BX	LR
0x2C56	0xBF00    NOP
0x2C58	0xED24E000  	SCB_SHCRS+0
0x2C5C	0xE010E000  	STK_CTRL+0
0x2C60	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_vUSARTConfigUSART1:
;uarthandler.c, 525 :: 		void vUSARTConfigUSART1 ( unsigned long ulBaudRate ) {
0x5124	0xB081    SUB	SP, SP, #4
0x5126	0xF8CDE000  STR	LR, [SP, #0]
;uarthandler.c, 527 :: 		UART1_Init_Advanced( ulBaudRate, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10 );
0x512A	0x4811    LDR	R0, [PC, #68]
0x512C	0xB401    PUSH	(R0)
0x512E	0xF2400300  MOVW	R3, #0
0x5132	0xF2400200  MOVW	R2, #0
0x5136	0xF2400100  MOVW	R1, #0
0x513A	0x9802    LDR	R0, [SP, #8]
0x513C	0xF7FDFAB4  BL	_UART1_Init_Advanced+0
0x5140	0xB001    ADD	SP, SP, #4
;uarthandler.c, 528 :: 		Enable_IRQ_USART1;                 // habilita interrupcion por RX de USART1
0x5142	0x2101    MOVS	R1, #1
0x5144	0xB249    SXTB	R1, R1
0x5146	0x480B    LDR	R0, [PC, #44]
0x5148	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 529 :: 		USART1_CR3bits.DMAT = 1;           // habilita transmision mediante DMA
0x514A	0x480B    LDR	R0, [PC, #44]
0x514C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 530 :: 		vInitDMAUSART1_TX();               // se llama como funcion
0x514E	0xF7FDFA69  BL	_vInitDMAUSART1_TX+0
;uarthandler.c, 531 :: 		fUSART1Buffer = CLEAR_TO_WRITE;
0x5152	0x2100    MOVS	R1, #0
0x5154	0x4809    LDR	R0, [PC, #36]
0x5156	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 532 :: 		NVIC_IntEnable( IVT_INT_USART1 );  // Habilita vector de interrupcion
0x5158	0xF2400035  MOVW	R0, #53
0x515C	0xF7FDFD46  BL	_NVIC_IntEnable+0
;uarthandler.c, 533 :: 		vUSARTDMAMemToMem();               // inicializa el DMA MEMtoMEM 1 ( Buffer a Buffer )
0x5160	0xF7FDFC2A  BL	_vUSARTDMAMemToMem+0
;uarthandler.c, 534 :: 		vUSARTDMAMeToMemZero();            // inicializa el DMA MEMtoMEM 2 ( Limpiar buffer )
0x5164	0xF7FDFBDE  BL	_vUSARTDMAMeToMemZero+0
;uarthandler.c, 547 :: 		}
L_end_vUSARTConfigUSART1:
0x5168	0xF8DDE000  LDR	LR, [SP, #0]
0x516C	0xB001    ADD	SP, SP, #4
0x516E	0x4770    BX	LR
0x5170	0x84CC0000  	__GPIO_MODULE_USART1_PA9_10+0
0x5174	0x01944222  	USART1_CR1bits+0
0x5178	0x029C4222  	USART1_CR3bits+0
0x517C	0x20082000  	_fUSART1Buffer+0
; end of _vUSARTConfigUSART1
_UART1_Init_Advanced:
;__Lib_UART_123_45_6.c, 404 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x26A8	0xB081    SUB	SP, SP, #4
0x26AA	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x26AE	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45_6.c, 406 :: 		
0x26B0	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x26B2	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x26B4	0xB408    PUSH	(R3)
0x26B6	0xB293    UXTH	R3, R2
0x26B8	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x26BA	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x26BC	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x26BE	0xF7FFFE13  BL	__Lib_UART_123_45_6_UARTx_Init_Advanced+0
0x26C2	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45_6.c, 407 :: 		
L_end_UART1_Init_Advanced:
0x26C4	0xF8DDE000  LDR	LR, [SP, #0]
0x26C8	0xB001    ADD	SP, SP, #4
0x26CA	0x4770    BX	LR
0x26CC	0x10004001  	USART1_SR+0
; end of _UART1_Init_Advanced
__Lib_UART_123_45_6_UARTx_Init_Advanced:
;__Lib_UART_123_45_6.c, 319 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x22E8	0xB08B    SUB	SP, SP, #44
0x22EA	0xF8CDE000  STR	LR, [SP, #0]
0x22EE	0xB29A    UXTH	R2, R3
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; baud_rate start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
0x22F0	0xF8BD302C  LDRH	R3, [SP, #44]
; module start address is: 24 (R6)
0x22F4	0x9E0C    LDR	R6, [SP, #48]
;__Lib_UART_123_45_6.c, 323 :: 		
0x22F6	0xAC06    ADD	R4, SP, #24
0x22F8	0xF8AD3004  STRH	R3, [SP, #4]
0x22FC	0xF8AD2008  STRH	R2, [SP, #8]
0x2300	0x9103    STR	R1, [SP, #12]
0x2302	0x9004    STR	R0, [SP, #16]
0x2304	0x4620    MOV	R0, R4
0x2306	0xF7FEF9F1  BL	_RCC_GetClocksFrequency+0
0x230A	0x9804    LDR	R0, [SP, #16]
0x230C	0x9903    LDR	R1, [SP, #12]
0x230E	0xF8BD2008  LDRH	R2, [SP, #8]
0x2312	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 325 :: 		
0x2316	0x4C71    LDR	R4, [PC, #452]
0x2318	0x42A0    CMP	R0, R4
0x231A	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced15
;__Lib_UART_123_45_6.c, 326 :: 		
0x231C	0x2501    MOVS	R5, #1
0x231E	0xB26D    SXTB	R5, R5
0x2320	0x4C6F    LDR	R4, [PC, #444]
0x2322	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 327 :: 		
0x2324	0x4D6F    LDR	R5, [PC, #444]
0x2326	0x4C70    LDR	R4, [PC, #448]
0x2328	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 328 :: 		
0x232A	0x4D70    LDR	R5, [PC, #448]
0x232C	0x4C70    LDR	R4, [PC, #448]
0x232E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 329 :: 		
0x2330	0x4D70    LDR	R5, [PC, #448]
0x2332	0x4C71    LDR	R4, [PC, #452]
0x2334	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 330 :: 		
0x2336	0x4D71    LDR	R5, [PC, #452]
0x2338	0x4C71    LDR	R4, [PC, #452]
0x233A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 331 :: 		
0x233C	0x9C09    LDR	R4, [SP, #36]
0x233E	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 332 :: 		
0x2340	0xE06C    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced16
L___Lib_UART_123_45_6_UARTx_Init_Advanced15:
;__Lib_UART_123_45_6.c, 333 :: 		
0x2342	0x4C70    LDR	R4, [PC, #448]
0x2344	0x42A0    CMP	R0, R4
0x2346	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced17
;__Lib_UART_123_45_6.c, 334 :: 		
0x2348	0x2501    MOVS	R5, #1
0x234A	0xB26D    SXTB	R5, R5
0x234C	0x4C6E    LDR	R4, [PC, #440]
0x234E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 335 :: 		
0x2350	0x4D6E    LDR	R5, [PC, #440]
0x2352	0x4C65    LDR	R4, [PC, #404]
0x2354	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 336 :: 		
0x2356	0x4D6E    LDR	R5, [PC, #440]
0x2358	0x4C65    LDR	R4, [PC, #404]
0x235A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 337 :: 		
0x235C	0x4D6D    LDR	R5, [PC, #436]
0x235E	0x4C66    LDR	R4, [PC, #408]
0x2360	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 338 :: 		
0x2362	0x4D6D    LDR	R5, [PC, #436]
0x2364	0x4C66    LDR	R4, [PC, #408]
0x2366	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 339 :: 		
0x2368	0x9C08    LDR	R4, [SP, #32]
0x236A	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 340 :: 		
0x236C	0xE056    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced18
L___Lib_UART_123_45_6_UARTx_Init_Advanced17:
;__Lib_UART_123_45_6.c, 341 :: 		
0x236E	0x4C6B    LDR	R4, [PC, #428]
0x2370	0x42A0    CMP	R0, R4
0x2372	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced19
;__Lib_UART_123_45_6.c, 342 :: 		
0x2374	0x2501    MOVS	R5, #1
0x2376	0xB26D    SXTB	R5, R5
0x2378	0x4C69    LDR	R4, [PC, #420]
0x237A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 343 :: 		
0x237C	0x4D69    LDR	R5, [PC, #420]
0x237E	0x4C5A    LDR	R4, [PC, #360]
0x2380	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 344 :: 		
0x2382	0x4D69    LDR	R5, [PC, #420]
0x2384	0x4C5A    LDR	R4, [PC, #360]
0x2386	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 345 :: 		
0x2388	0x4D68    LDR	R5, [PC, #416]
0x238A	0x4C5B    LDR	R4, [PC, #364]
0x238C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 346 :: 		
0x238E	0x4D68    LDR	R5, [PC, #416]
0x2390	0x4C5B    LDR	R4, [PC, #364]
0x2392	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 347 :: 		
0x2394	0x9C08    LDR	R4, [SP, #32]
0x2396	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 348 :: 		
0x2398	0xE040    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced20
L___Lib_UART_123_45_6_UARTx_Init_Advanced19:
;__Lib_UART_123_45_6.c, 349 :: 		
0x239A	0x4C66    LDR	R4, [PC, #408]
0x239C	0x42A0    CMP	R0, R4
0x239E	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced21
;__Lib_UART_123_45_6.c, 350 :: 		
0x23A0	0x2501    MOVS	R5, #1
0x23A2	0xB26D    SXTB	R5, R5
0x23A4	0x4C64    LDR	R4, [PC, #400]
0x23A6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 351 :: 		
0x23A8	0x4D64    LDR	R5, [PC, #400]
0x23AA	0x4C4F    LDR	R4, [PC, #316]
0x23AC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 352 :: 		
0x23AE	0x4D64    LDR	R5, [PC, #400]
0x23B0	0x4C4F    LDR	R4, [PC, #316]
0x23B2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 353 :: 		
0x23B4	0x4D63    LDR	R5, [PC, #396]
0x23B6	0x4C50    LDR	R4, [PC, #320]
0x23B8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 354 :: 		
0x23BA	0x4D63    LDR	R5, [PC, #396]
0x23BC	0x4C50    LDR	R4, [PC, #320]
0x23BE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 355 :: 		
0x23C0	0x9C08    LDR	R4, [SP, #32]
0x23C2	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 356 :: 		
0x23C4	0xE02A    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced22
L___Lib_UART_123_45_6_UARTx_Init_Advanced21:
;__Lib_UART_123_45_6.c, 357 :: 		
0x23C6	0x4C61    LDR	R4, [PC, #388]
0x23C8	0x42A0    CMP	R0, R4
0x23CA	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced23
;__Lib_UART_123_45_6.c, 358 :: 		
0x23CC	0x2501    MOVS	R5, #1
0x23CE	0xB26D    SXTB	R5, R5
0x23D0	0x4C5F    LDR	R4, [PC, #380]
0x23D2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 359 :: 		
0x23D4	0x4D5F    LDR	R5, [PC, #380]
0x23D6	0x4C44    LDR	R4, [PC, #272]
0x23D8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 360 :: 		
0x23DA	0x4D5F    LDR	R5, [PC, #380]
0x23DC	0x4C44    LDR	R4, [PC, #272]
0x23DE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 361 :: 		
0x23E0	0x4D5E    LDR	R5, [PC, #376]
0x23E2	0x4C45    LDR	R4, [PC, #276]
0x23E4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 362 :: 		
0x23E6	0x4D5E    LDR	R5, [PC, #376]
0x23E8	0x4C45    LDR	R4, [PC, #276]
0x23EA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 363 :: 		
0x23EC	0x9C08    LDR	R4, [SP, #32]
0x23EE	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 364 :: 		
0x23F0	0xE014    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced24
L___Lib_UART_123_45_6_UARTx_Init_Advanced23:
;__Lib_UART_123_45_6.c, 365 :: 		
0x23F2	0x4C5C    LDR	R4, [PC, #368]
0x23F4	0x42A0    CMP	R0, R4
0x23F6	0xD111    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced25
;__Lib_UART_123_45_6.c, 366 :: 		
0x23F8	0x2501    MOVS	R5, #1
0x23FA	0xB26D    SXTB	R5, R5
0x23FC	0x4C5A    LDR	R4, [PC, #360]
0x23FE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 367 :: 		
0x2400	0x4D5A    LDR	R5, [PC, #360]
0x2402	0x4C39    LDR	R4, [PC, #228]
0x2404	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 368 :: 		
0x2406	0x4D5A    LDR	R5, [PC, #360]
0x2408	0x4C39    LDR	R4, [PC, #228]
0x240A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 369 :: 		
0x240C	0x4D59    LDR	R5, [PC, #356]
0x240E	0x4C3A    LDR	R4, [PC, #232]
0x2410	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 370 :: 		
0x2412	0x4D59    LDR	R5, [PC, #356]
0x2414	0x4C3A    LDR	R4, [PC, #232]
0x2416	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 371 :: 		
0x2418	0x9C09    LDR	R4, [SP, #36]
0x241A	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 372 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced25:
L___Lib_UART_123_45_6_UARTx_Init_Advanced24:
L___Lib_UART_123_45_6_UARTx_Init_Advanced22:
L___Lib_UART_123_45_6_UARTx_Init_Advanced20:
L___Lib_UART_123_45_6_UARTx_Init_Advanced18:
L___Lib_UART_123_45_6_UARTx_Init_Advanced16:
;__Lib_UART_123_45_6.c, 374 :: 		
0x241C	0xF8AD3004  STRH	R3, [SP, #4]
; module end address is: 24 (R6)
0x2420	0xF8AD2008  STRH	R2, [SP, #8]
0x2424	0x9103    STR	R1, [SP, #12]
0x2426	0x9004    STR	R0, [SP, #16]
0x2428	0x4630    MOV	R0, R6
0x242A	0xF7FEF9A1  BL	_GPIO_Alternate_Function_Enable+0
0x242E	0x9804    LDR	R0, [SP, #16]
0x2430	0x9903    LDR	R1, [SP, #12]
0x2432	0xF8BD2008  LDRH	R2, [SP, #8]
0x2436	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 376 :: 		
0x243A	0xF2000510  ADDW	R5, R0, #16
0x243E	0x2400    MOVS	R4, #0
0x2440	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 377 :: 		
0x2442	0xF2000510  ADDW	R5, R0, #16
0x2446	0x682C    LDR	R4, [R5, #0]
0x2448	0x431C    ORRS	R4, R3
; stop_bits end address is: 12 (R3)
0x244A	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 378 :: 		
0x244C	0xF200050C  ADDW	R5, R0, #12
0x2450	0x2400    MOVS	R4, #0
0x2452	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 380 :: 		
0x2454	0xB11A    CBZ	R2, L___Lib_UART_123_45_6_UARTx_Init_Advanced40
;__Lib_UART_123_45_6.c, 381 :: 		
0x2456	0xF4426280  ORR	R2, R2, #1024
0x245A	0xB292    UXTH	R2, R2
; parity end address is: 8 (R2)
;__Lib_UART_123_45_6.c, 382 :: 		
0x245C	0xE7FF    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced26
L___Lib_UART_123_45_6_UARTx_Init_Advanced40:
;__Lib_UART_123_45_6.c, 380 :: 		
;__Lib_UART_123_45_6.c, 382 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced26:
;__Lib_UART_123_45_6.c, 384 :: 		
; parity start address is: 8 (R2)
0x245E	0xF200050C  ADDW	R5, R0, #12
0x2462	0x682C    LDR	R4, [R5, #0]
0x2464	0x4314    ORRS	R4, R2
; parity end address is: 8 (R2)
0x2466	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 386 :: 		
0x2468	0xF200060C  ADDW	R6, R0, #12
0x246C	0x2501    MOVS	R5, #1
0x246E	0x6834    LDR	R4, [R6, #0]
0x2470	0xF365344D  BFI	R4, R5, #13, #1
0x2474	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 387 :: 		
0x2476	0xF200060C  ADDW	R6, R0, #12
0x247A	0x2501    MOVS	R5, #1
0x247C	0x6834    LDR	R4, [R6, #0]
0x247E	0xF36504C3  BFI	R4, R5, #3, #1
0x2482	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 388 :: 		
0x2484	0xF200060C  ADDW	R6, R0, #12
0x2488	0x2501    MOVS	R5, #1
0x248A	0x6834    LDR	R4, [R6, #0]
0x248C	0xF3650482  BFI	R4, R5, #2, #1
0x2490	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 389 :: 		
0x2492	0xF2000514  ADDW	R5, R0, #20
0x2496	0x2400    MOVS	R4, #0
0x2498	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 394 :: 		
0x249A	0x9D05    LDR	R5, [SP, #20]
0x249C	0x2419    MOVS	R4, #25
0x249E	0x4365    MULS	R5, R4, R5
0x24A0	0x008C    LSLS	R4, R1, #2
; baud_rate end address is: 4 (R1)
0x24A2	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45_6.c, 395 :: 		
0x24A6	0x2464    MOVS	R4, #100
0x24A8	0xFBB7F4F4  UDIV	R4, R7, R4
0x24AC	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45_6.c, 397 :: 		
0x24AE	0x0935    LSRS	R5, R6, #4
0x24B0	0x2464    MOVS	R4, #100
0x24B2	0x436C    MULS	R4, R5, R4
0x24B4	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45_6.c, 398 :: 		
0x24B6	0x0124    LSLS	R4, R4, #4
0x24B8	0xF2040532  ADDW	R5, R4, #50
0x24BC	0x2464    MOVS	R4, #100
0x24BE	0xFBB5F4F4  UDIV	R4, R5, R4
0x24C2	0xF004040F  AND	R4, R4, #15
0x24C6	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45_6.c, 400 :: 		
0x24CA	0xF2000508  ADDW	R5, R0, #8
; UART_Base end address is: 0 (R0)
0x24CE	0xB2A4    UXTH	R4, R4
0x24D0	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 401 :: 		
L_end_UARTx_Init_Advanced:
0x24D2	0xF8DDE000  LDR	LR, [SP, #0]
0x24D6	0xB00B    ADD	SP, SP, #44
0x24D8	0x4770    BX	LR
0x24DA	0xBF00    NOP
0x24DC	0x10004001  	USART1_SR+0
0x24E0	0x08904247  	RCC_APB2ENR+0
0x24E4	0xFFFFFFFF  	_UART1_Write+0
0x24E8	0x23AC2000  	_UART_Wr_Ptr+0
0x24EC	0xFFFFFFFF  	_UART1_Read+0
0x24F0	0x23B02000  	_UART_Rd_Ptr+0
0x24F4	0xFFFFFFFF  	_UART1_Data_Ready+0
0x24F8	0x23B42000  	_UART_Rdy_Ptr+0
0x24FC	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x2500	0x23B82000  	_UART_Tx_Idle_Ptr+0
0x2504	0x44004000  	USART2_SR+0
0x2508	0x08444247  	RCC_APB1ENR+0
0x250C	0xFFFFFFFF  	_UART2_Write+0
0x2510	0xFFFFFFFF  	_UART2_Read+0
0x2514	0xFFFFFFFF  	_UART2_Data_Ready+0
0x2518	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x251C	0x48004000  	USART3_SR+0
0x2520	0x08484247  	RCC_APB1ENR+0
0x2524	0xFFFFFFFF  	_UART3_Write+0
0x2528	0xFFFFFFFF  	_UART3_Read+0
0x252C	0xFFFFFFFF  	_UART3_Data_Ready+0
0x2530	0xFFFFFFFF  	_UART3_Tx_Idle+0
0x2534	0x4C004000  	UART4_SR+0
0x2538	0x084C4247  	RCC_APB1ENR+0
0x253C	0xFFFFFFFF  	_UART4_Write+0
0x2540	0xFFFFFFFF  	_UART4_Read+0
0x2544	0xFFFFFFFF  	_UART4_Data_Ready+0
0x2548	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x254C	0x50004000  	UART5_SR+0
0x2550	0x08504247  	RCC_APB1ENR+0
0x2554	0xFFFFFFFF  	_UART5_Write+0
0x2558	0xFFFFFFFF  	_UART5_Read+0
0x255C	0xFFFFFFFF  	_UART5_Data_Ready+0
0x2560	0xFFFFFFFF  	_UART5_Tx_Idle+0
0x2564	0x14004001  	USART6_SR+0
0x2568	0x08944247  	RCC_APB2ENR+0
0x256C	0xFFFFFFFF  	_UART6_Write+0
0x2570	0xFFFFFFFF  	_UART6_Read+0
0x2574	0xFFFFFFFF  	_UART6_Data_Ready+0
0x2578	0xFFFFFFFF  	_UART6_Tx_Idle+0
; end of __Lib_UART_123_45_6_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_4XX.c, 402 :: 		
; RCC_Clocks start address is: 0 (R0)
0x06EC	0xB082    SUB	SP, SP, #8
0x06EE	0xF8CDE000  STR	LR, [SP, #0]
0x06F2	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_4XX.c, 404 :: 		
;__Lib_System_4XX.c, 406 :: 		
0x06F4	0x1D19    ADDS	R1, R3, #4
0x06F6	0x9101    STR	R1, [SP, #4]
0x06F8	0xF7FFFE08  BL	_Get_Fosc_kHz+0
0x06FC	0xF24031E8  MOVW	R1, #1000
0x0700	0xFB00F201  MUL	R2, R0, R1
0x0704	0x9901    LDR	R1, [SP, #4]
0x0706	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 409 :: 		
0x0708	0x4917    LDR	R1, [PC, #92]
0x070A	0x6809    LDR	R1, [R1, #0]
0x070C	0xF00101F0  AND	R1, R1, #240
;__Lib_System_4XX.c, 410 :: 		
0x0710	0x090A    LSRS	R2, R1, #4
;__Lib_System_4XX.c, 411 :: 		
0x0712	0x4916    LDR	R1, [PC, #88]
0x0714	0x1889    ADDS	R1, R1, R2
0x0716	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0718	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 413 :: 		
0x071A	0x1D19    ADDS	R1, R3, #4
0x071C	0x6809    LDR	R1, [R1, #0]
0x071E	0x4081    LSLS	R1, R0
; presc end address is: 0 (R0)
0x0720	0x6019    STR	R1, [R3, #0]
;__Lib_System_4XX.c, 416 :: 		
0x0722	0x4911    LDR	R1, [PC, #68]
0x0724	0x6809    LDR	R1, [R1, #0]
0x0726	0xF40151E0  AND	R1, R1, #7168
;__Lib_System_4XX.c, 417 :: 		
0x072A	0x0A8A    LSRS	R2, R1, #10
;__Lib_System_4XX.c, 418 :: 		
0x072C	0x490F    LDR	R1, [PC, #60]
0x072E	0x1889    ADDS	R1, R1, R2
0x0730	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0732	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 420 :: 		
0x0734	0xF2030208  ADDW	R2, R3, #8
0x0738	0x1D19    ADDS	R1, R3, #4
0x073A	0x6809    LDR	R1, [R1, #0]
0x073C	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x073E	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 423 :: 		
0x0740	0x4909    LDR	R1, [PC, #36]
0x0742	0x6809    LDR	R1, [R1, #0]
0x0744	0xF4014160  AND	R1, R1, #57344
;__Lib_System_4XX.c, 424 :: 		
0x0748	0x0B4A    LSRS	R2, R1, #13
;__Lib_System_4XX.c, 425 :: 		
0x074A	0x4908    LDR	R1, [PC, #32]
0x074C	0x1889    ADDS	R1, R1, R2
0x074E	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x0750	0xB2C8    UXTB	R0, R1
;__Lib_System_4XX.c, 427 :: 		
0x0752	0xF203020C  ADDW	R2, R3, #12
0x0756	0x1D19    ADDS	R1, R3, #4
; RCC_Clocks end address is: 12 (R3)
0x0758	0x6809    LDR	R1, [R1, #0]
0x075A	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x075C	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 428 :: 		
L_end_RCC_GetClocksFrequency:
0x075E	0xF8DDE000  LDR	LR, [SP, #0]
0x0762	0xB002    ADD	SP, SP, #8
0x0764	0x4770    BX	LR
0x0766	0xBF00    NOP
0x0768	0x38084002  	RCC_CFGR+0
0x076C	0x23252000  	__Lib_System_4XX_APBAHBPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
0x030C	0xB081    SUB	SP, SP, #4
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x030E	0x4802    LDR	R0, [PC, #8]
0x0310	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0312	0xB001    ADD	SP, SP, #4
0x0314	0x4770    BX	LR
0x0316	0xBF00    NOP
0x0318	0x239C2000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F4xx.c, 223 :: 		
; module start address is: 0 (R0)
0x0770	0xB083    SUB	SP, SP, #12
0x0772	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 226 :: 		
; i start address is: 16 (R4)
0x0776	0x2400    MOVS	R4, #0
; module end address is: 0 (R0)
; i end address is: 16 (R4)
;__Lib_GPIO_32F4xx.c, 227 :: 		
L_GPIO_Alternate_Function_Enable66:
; i start address is: 16 (R4)
; module start address is: 0 (R0)
0x0778	0x00A1    LSLS	R1, R4, #2
0x077A	0x1841    ADDS	R1, R0, R1
0x077C	0x6809    LDR	R1, [R1, #0]
0x077E	0xF1B13FFF  CMP	R1, #-1
0x0782	0xD014    BEQ	L_GPIO_Alternate_Function_Enable67
;__Lib_GPIO_32F4xx.c, 228 :: 		
0x0784	0xF2000134  ADDW	R1, R0, #52
0x0788	0x00A3    LSLS	R3, R4, #2
0x078A	0x18C9    ADDS	R1, R1, R3
0x078C	0x6809    LDR	R1, [R1, #0]
0x078E	0x460A    MOV	R2, R1
0x0790	0x18C1    ADDS	R1, R0, R3
0x0792	0x6809    LDR	R1, [R1, #0]
0x0794	0x9001    STR	R0, [SP, #4]
0x0796	0xF8AD4008  STRH	R4, [SP, #8]
0x079A	0x4608    MOV	R0, R1
0x079C	0x4611    MOV	R1, R2
0x079E	0xF7FFFEBB  BL	__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function+0
0x07A2	0xF8BD4008  LDRH	R4, [SP, #8]
0x07A6	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 229 :: 		
0x07A8	0x1C64    ADDS	R4, R4, #1
0x07AA	0xB2A4    UXTH	R4, R4
;__Lib_GPIO_32F4xx.c, 230 :: 		
; module end address is: 0 (R0)
; i end address is: 16 (R4)
0x07AC	0xE7E4    B	L_GPIO_Alternate_Function_Enable66
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F4xx.c, 231 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x07AE	0xF8DDE000  LDR	LR, [SP, #0]
0x07B2	0xB003    ADD	SP, SP, #12
0x07B4	0x4770    BX	LR
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO_32F4xx.c, 190 :: 		
; configs start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0518	0xB083    SUB	SP, SP, #12
0x051A	0xF8CDE000  STR	LR, [SP, #0]
0x051E	0x4604    MOV	R4, R0
; configs end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 16 (R4)
; configs start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 195 :: 		
0x0520	0xF00403FF  AND	R3, R4, #255
0x0524	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0526	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 196 :: 		
0x0528	0xF003020F  AND	R2, R3, #15
; pin start address is: 48 (R12)
0x052C	0x4694    MOV	R12, R2
;__Lib_GPIO_32F4xx.c, 197 :: 		
0x052E	0x0A22    LSRS	R2, R4, #8
; af_pin end address is: 16 (R4)
0x0530	0xF002020F  AND	R2, R2, #15
; af start address is: 44 (R11)
0x0534	0x4693    MOV	R11, R2
;__Lib_GPIO_32F4xx.c, 199 :: 		
0x0536	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54
; port end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 200 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56:
0x0538	0x4A2C    LDR	R2, [PC, #176]
0x053A	0x9202    STR	R2, [SP, #8]
0x053C	0xE029    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 201 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57:
0x053E	0x4A2C    LDR	R2, [PC, #176]
0x0540	0x9202    STR	R2, [SP, #8]
0x0542	0xE026    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 202 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58:
0x0544	0x4A2B    LDR	R2, [PC, #172]
0x0546	0x9202    STR	R2, [SP, #8]
0x0548	0xE023    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 203 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59:
0x054A	0x4A2B    LDR	R2, [PC, #172]
0x054C	0x9202    STR	R2, [SP, #8]
0x054E	0xE020    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 204 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60:
0x0550	0x4A2A    LDR	R2, [PC, #168]
0x0552	0x9202    STR	R2, [SP, #8]
0x0554	0xE01D    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 205 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61:
0x0556	0x4A2A    LDR	R2, [PC, #168]
0x0558	0x9202    STR	R2, [SP, #8]
0x055A	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 206 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62:
0x055C	0x4A29    LDR	R2, [PC, #164]
0x055E	0x9202    STR	R2, [SP, #8]
0x0560	0xE017    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 207 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63:
0x0562	0x4A29    LDR	R2, [PC, #164]
0x0564	0x9202    STR	R2, [SP, #8]
0x0566	0xE014    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 208 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64:
0x0568	0x4A28    LDR	R2, [PC, #160]
0x056A	0x9202    STR	R2, [SP, #8]
0x056C	0xE011    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 209 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54:
; port start address is: 0 (R0)
0x056E	0x2800    CMP	R0, #0
0x0570	0xD0E2    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56
0x0572	0x2801    CMP	R0, #1
0x0574	0xD0E3    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57
0x0576	0x2802    CMP	R0, #2
0x0578	0xD0E4    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58
0x057A	0x2803    CMP	R0, #3
0x057C	0xD0E5    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59
0x057E	0x2804    CMP	R0, #4
0x0580	0xD0E6    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60
0x0582	0x2805    CMP	R0, #5
0x0584	0xD0E7    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61
0x0586	0x2806    CMP	R0, #6
0x0588	0xD0E8    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62
0x058A	0x2807    CMP	R0, #7
0x058C	0xD0E9    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63
0x058E	0x2808    CMP	R0, #8
0x0590	0xD0EA    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64
; port end address is: 0 (R0)
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55:
;__Lib_GPIO_32F4xx.c, 211 :: 		
0x0592	0x2201    MOVS	R2, #1
0x0594	0xFA02F20C  LSL	R2, R2, R12
0x0598	0xF8AD2004  STRH	R2, [SP, #4]
; configs end address is: 4 (R1)
0x059C	0x9802    LDR	R0, [SP, #8]
0x059E	0x460A    MOV	R2, R1
0x05A0	0xF8BD1004  LDRH	R1, [SP, #4]
0x05A4	0xF002F8A2  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 213 :: 		
0x05A8	0x9A02    LDR	R2, [SP, #8]
0x05AA	0xF2020120  ADDW	R1, R2, #32
; tmp_ptr start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x05AE	0xF1BC0F07  CMP	R12, #7
0x05B2	0xD908    BLS	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90
;__Lib_GPIO_32F4xx.c, 215 :: 		
0x05B4	0x1D0A    ADDS	R2, R1, #4
; tmp_ptr end address is: 4 (R1)
; tmp_ptr start address is: 0 (R0)
0x05B6	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 216 :: 		
0x05B8	0xF1AC0208  SUB	R2, R12, #8
; pin end address is: 48 (R12)
; pin start address is: 4 (R1)
0x05BC	0x4611    MOV	R1, R2
; tmp_ptr end address is: 0 (R0)
; pin end address is: 4 (R1)
0x05BE	0x9101    STR	R1, [SP, #4]
0x05C0	0x4601    MOV	R1, R0
0x05C2	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 217 :: 		
0x05C4	0xE000    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90:
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x05C6	0x4660    MOV	R0, R12
;__Lib_GPIO_32F4xx.c, 217 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65:
;__Lib_GPIO_32F4xx.c, 218 :: 		
; pin start address is: 0 (R0)
; tmp_ptr start address is: 4 (R1)
0x05C8	0x0083    LSLS	R3, R0, #2
0x05CA	0xF04F020F  MOV	R2, #15
0x05CE	0x409A    LSLS	R2, R3
0x05D0	0x43D3    MVN	R3, R2
0x05D2	0x680A    LDR	R2, [R1, #0]
0x05D4	0x401A    ANDS	R2, R3
0x05D6	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 219 :: 		
0x05D8	0x0082    LSLS	R2, R0, #2
; pin end address is: 0 (R0)
0x05DA	0xFA0BF302  LSL	R3, R11, R2
; af end address is: 44 (R11)
0x05DE	0x680A    LDR	R2, [R1, #0]
0x05E0	0x431A    ORRS	R2, R3
0x05E2	0x600A    STR	R2, [R1, #0]
; tmp_ptr end address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 220 :: 		
L_end_GPIO_Config_Pin_Alternate_Function:
0x05E4	0xF8DDE000  LDR	LR, [SP, #0]
0x05E8	0xB003    ADD	SP, SP, #12
0x05EA	0x4770    BX	LR
0x05EC	0x00004002  	#1073872896
0x05F0	0x04004002  	#1073873920
0x05F4	0x08004002  	#1073874944
0x05F8	0x0C004002  	#1073875968
0x05FC	0x10004002  	#1073876992
0x0600	0x14004002  	#1073878016
0x0604	0x18004002  	#1073879040
0x0608	0x1C004002  	#1073880064
0x060C	0x20004002  	#1073881088
; end of __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
_vInitDMAUSART1_TX:
;uarthandler.c, 482 :: 		void vInitDMAUSART1_TX () {
0x2624	0xB081    SUB	SP, SP, #4
0x2626	0xF8CDE000  STR	LR, [SP, #0]
;uarthandler.c, 503 :: 		RCC_AHB1ENRbits.DMA2EN = 1;    // Habilita clock para DMA2
0x262A	0x2101    MOVS	R1, #1
0x262C	0xB249    SXTB	R1, R1
0x262E	0x4815    LDR	R0, [PC, #84]
0x2630	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 505 :: 		DMA2_S7CRbits.EN = 0;          // deshabilita DMA USART1 TX (para poder modificar los parametros)
0x2632	0x2100    MOVS	R1, #0
0x2634	0xB249    SXTB	R1, R1
0x2636	0x4814    LDR	R0, [PC, #80]
0x2638	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 506 :: 		while ( DMA2_S7CRbits.EN );    // espera a que se haya desabilitado realmente
L_vInitDMAUSART1_TX268:
0x263A	0x4813    LDR	R0, [PC, #76]
0x263C	0x6800    LDR	R0, [R0, #0]
0x263E	0xB100    CBZ	R0, L_vInitDMAUSART1_TX269
0x2640	0xE7FB    B	L_vInitDMAUSART1_TX268
L_vInitDMAUSART1_TX269:
;uarthandler.c, 509 :: 		DMA2_S7PAR = ( unsigned long ) &USART1_DR;           // Direccion fisica de periferico a rutear
0x2642	0x4912    LDR	R1, [PC, #72]
0x2644	0x4812    LDR	R0, [PC, #72]
0x2646	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 511 :: 		DMA2_S7CRbits.CHSEL = 4;       // DMA2, Stream7, Canal 4 = USART1_TX
0x2648	0x2204    MOVS	R2, #4
0x264A	0x4912    LDR	R1, [PC, #72]
0x264C	0x6808    LDR	R0, [R1, #0]
0x264E	0xF362605B  BFI	R0, R2, #25, #3
0x2652	0x6008    STR	R0, [R1, #0]
;uarthandler.c, 512 :: 		DMA2_S7CRbits.PL = 3;          // Prioridad de canal
0x2654	0x2203    MOVS	R2, #3
0x2656	0x490F    LDR	R1, [PC, #60]
0x2658	0x6808    LDR	R0, [R1, #0]
0x265A	0xF3624011  BFI	R0, R2, #16, #2
0x265E	0x6008    STR	R0, [R1, #0]
;uarthandler.c, 513 :: 		DMA2_S7CRbits.MINC = 1;        // avanza en la direccion de la memoria apuntada
0x2660	0x2101    MOVS	R1, #1
0x2662	0xB249    SXTB	R1, R1
0x2664	0x480C    LDR	R0, [PC, #48]
0x2666	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 514 :: 		DIR0_DMA2_S7CR_bit = 1;        // direccion memoria a periferico
0x2668	0x480C    LDR	R0, [PC, #48]
0x266A	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 515 :: 		DMA2_S7CRbits.TEIE = 1;        // Habilitacion de interrupcion por error en trasmision
0x266C	0x480C    LDR	R0, [PC, #48]
0x266E	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 516 :: 		DMA2_S7CRbits.TCIE = 1;        // Interrupcion por transferencia completa
0x2670	0x480C    LDR	R0, [PC, #48]
0x2672	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 518 :: 		NVIC_IntEnable( IVT_INT_DMA2_Stream7 );      // habilita el vector de interrupcion para DMA
0x2674	0xF2400056  MOVW	R0, #86
0x2678	0xF000FAB8  BL	_NVIC_IntEnable+0
;uarthandler.c, 520 :: 		}
L_end_vInitDMAUSART1_TX:
0x267C	0xF8DDE000  LDR	LR, [SP, #0]
0x2680	0xB001    ADD	SP, SP, #4
0x2682	0x4770    BX	LR
0x2684	0x06584247  	RCC_AHB1ENRbits+0
0x2688	0x9700424C  	DMA2_S7CRbits+0
0x268C	0x10044001  	USART1_DR+0
0x2690	0x64C04002  	DMA2_S7PAR+0
0x2694	0x64B84002  	DMA2_S7CRbits+0
0x2698	0x9728424C  	DMA2_S7CRbits+0
0x269C	0x9718424C  	DIR0_DMA2_S7CR_bit+0
0x26A0	0x9708424C  	DMA2_S7CRbits+0
0x26A4	0x9710424C  	DMA2_S7CRbits+0
; end of _vInitDMAUSART1_TX
_vUSARTDMAMemToMem:
;uarthandler.c, 397 :: 		void vUSARTDMAMemToMem ( void ) {
0x29B8	0xB081    SUB	SP, SP, #4
0x29BA	0xF8CDE000  STR	LR, [SP, #0]
;uarthandler.c, 420 :: 		RCC_AHB1ENRbits.DMA2EN = 1;    // Habilita clock para DMA2
0x29BE	0x2101    MOVS	R1, #1
0x29C0	0xB249    SXTB	R1, R1
0x29C2	0x4818    LDR	R0, [PC, #96]
0x29C4	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 422 :: 		DMA2_S1CRbits.EN = 0;          // deshabilita DMA SPI4 RX (para poder modificar los parametros)
0x29C6	0x2100    MOVS	R1, #0
0x29C8	0xB249    SXTB	R1, R1
0x29CA	0x4817    LDR	R0, [PC, #92]
0x29CC	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 423 :: 		while ( DMA2_S1CRbits.EN );    // espera a que se haya desabilitado realmente
L_vUSARTDMAMemToMem253:
0x29CE	0x4816    LDR	R0, [PC, #88]
0x29D0	0x6800    LDR	R0, [R0, #0]
0x29D2	0xB100    CBZ	R0, L_vUSARTDMAMemToMem254
0x29D4	0xE7FB    B	L_vUSARTDMAMemToMem253
L_vUSARTDMAMemToMem254:
;uarthandler.c, 425 :: 		DMA2_S1CRbits.CHSEL = 3;       // DMA2, Stream1, Canal 3 = vacio...
0x29D6	0x2203    MOVS	R2, #3
0x29D8	0x4914    LDR	R1, [PC, #80]
0x29DA	0x6808    LDR	R0, [R1, #0]
0x29DC	0xF362605B  BFI	R0, R2, #25, #3
0x29E0	0x6008    STR	R0, [R1, #0]
;uarthandler.c, 426 :: 		DMA2_S1CRbits.PL = 3;          // Prioridad de canal
0x29E2	0x2203    MOVS	R2, #3
0x29E4	0x4911    LDR	R1, [PC, #68]
0x29E6	0x6808    LDR	R0, [R1, #0]
0x29E8	0xF3624011  BFI	R0, R2, #16, #2
0x29EC	0x6008    STR	R0, [R1, #0]
;uarthandler.c, 427 :: 		DMA2_S1CRbits.MINC = 1;        // avanza en la direccion de la memoria apuntada
0x29EE	0x2201    MOVS	R2, #1
0x29F0	0xB252    SXTB	R2, R2
0x29F2	0x480F    LDR	R0, [PC, #60]
0x29F4	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 428 :: 		DMA2_S1CRbits.PINC = 1;        // avanza en la direccion del periferico apuntado
0x29F6	0x480F    LDR	R0, [PC, #60]
0x29F8	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 429 :: 		DIR0_DMA2_S1CR_bit = 0;        // direccion memoria a memoria
0x29FA	0x2100    MOVS	R1, #0
0x29FC	0xB249    SXTB	R1, R1
0x29FE	0x480E    LDR	R0, [PC, #56]
0x2A00	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 430 :: 		DIR1_DMA2_S1CR_bit = 1;
0x2A02	0x480E    LDR	R0, [PC, #56]
0x2A04	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 432 :: 		DMA2_S1FCRbits.DMDIS = 1;      // disable DirectMode
0x2A06	0x480E    LDR	R0, [PC, #56]
0x2A08	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 434 :: 		DMA2_S1CRbits.TEIE = 1;        // Habilitacion de interrupcion por error en trasmision
0x2A0A	0x480E    LDR	R0, [PC, #56]
0x2A0C	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 435 :: 		DMA2_S1CRbits.TCIE = 1;        // Interrupcion por transferencia completa
0x2A0E	0x480E    LDR	R0, [PC, #56]
0x2A10	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 437 :: 		NVIC_IntEnable( IVT_INT_DMA2_Stream1 );      // habilita el vector de interrupcion para DMA
0x2A12	0xF2400049  MOVW	R0, #73
0x2A16	0xF000F8E9  BL	_NVIC_IntEnable+0
;uarthandler.c, 439 :: 		}
L_end_vUSARTDMAMemToMem:
0x2A1A	0xF8DDE000  LDR	LR, [SP, #0]
0x2A1E	0xB001    ADD	SP, SP, #4
0x2A20	0x4770    BX	LR
0x2A22	0xBF00    NOP
0x2A24	0x06584247  	RCC_AHB1ENRbits+0
0x2A28	0x8500424C  	DMA2_S1CRbits+0
0x2A2C	0x64284002  	DMA2_S1CRbits+0
0x2A30	0x8528424C  	DMA2_S1CRbits+0
0x2A34	0x8524424C  	DMA2_S1CRbits+0
0x2A38	0x8518424C  	DIR0_DMA2_S1CR_bit+0
0x2A3C	0x851C424C  	DIR1_DMA2_S1CR_bit+0
0x2A40	0x8788424C  	DMA2_S1FCRbits+0
0x2A44	0x8508424C  	DMA2_S1CRbits+0
0x2A48	0x8510424C  	DMA2_S1CRbits+0
; end of _vUSARTDMAMemToMem
_vUSARTDMAMeToMemZero:
;uarthandler.c, 308 :: 		void vUSARTDMAMeToMemZero ( void ) {
0x2924	0xB081    SUB	SP, SP, #4
0x2926	0xF8CDE000  STR	LR, [SP, #0]
;uarthandler.c, 330 :: 		RCC_AHB1ENRbits.DMA2EN = 1;    // Habilita clock para DMA2
0x292A	0x2101    MOVS	R1, #1
0x292C	0xB249    SXTB	R1, R1
0x292E	0x4818    LDR	R0, [PC, #96]
0x2930	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 332 :: 		DMA2_S4CRbits.EN = 0;          // deshabilita DMA SPI4 RX (para poder modificar los parametros)
0x2932	0x2100    MOVS	R1, #0
0x2934	0xB249    SXTB	R1, R1
0x2936	0x4817    LDR	R0, [PC, #92]
0x2938	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 333 :: 		while ( DMA2_S4CRbits.EN );    // espera a que se haya desabilitado realmente
L_vUSARTDMAMeToMemZero244:
0x293A	0x4816    LDR	R0, [PC, #88]
0x293C	0x6800    LDR	R0, [R0, #0]
0x293E	0xB100    CBZ	R0, L_vUSARTDMAMeToMemZero245
0x2940	0xE7FB    B	L_vUSARTDMAMeToMemZero244
L_vUSARTDMAMeToMemZero245:
;uarthandler.c, 335 :: 		DMA2_S4CRbits.CHSEL = 4;       // DMA2, Stream4, Canal 3 = vacio...
0x2942	0x2204    MOVS	R2, #4
0x2944	0x4914    LDR	R1, [PC, #80]
0x2946	0x6808    LDR	R0, [R1, #0]
0x2948	0xF362605B  BFI	R0, R2, #25, #3
0x294C	0x6008    STR	R0, [R1, #0]
;uarthandler.c, 336 :: 		DMA2_S4CRbits.PL = 3;          // Prioridad de canal
0x294E	0x2203    MOVS	R2, #3
0x2950	0x4911    LDR	R1, [PC, #68]
0x2952	0x6808    LDR	R0, [R1, #0]
0x2954	0xF3624011  BFI	R0, R2, #16, #2
0x2958	0x6008    STR	R0, [R1, #0]
;uarthandler.c, 337 :: 		DMA2_S4CRbits.MINC = 1;        // avanza en la direccion de la memoria apuntada
0x295A	0x2201    MOVS	R2, #1
0x295C	0xB252    SXTB	R2, R2
0x295E	0x480F    LDR	R0, [PC, #60]
0x2960	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 338 :: 		DMA2_S4CRbits.PINC = 0;        // avanza en la direccion del periferico apuntado
0x2962	0x2100    MOVS	R1, #0
0x2964	0xB249    SXTB	R1, R1
0x2966	0x480E    LDR	R0, [PC, #56]
0x2968	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 339 :: 		DIR0_DMA2_S4CR_bit = 0;        // direccion memoria a memoria
0x296A	0x480E    LDR	R0, [PC, #56]
0x296C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 340 :: 		DIR1_DMA2_S4CR_bit = 1;
0x296E	0x480E    LDR	R0, [PC, #56]
0x2970	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 342 :: 		DMA2_S4FCRbits.DMDIS = 1;      // disable DirectMode
0x2972	0x480E    LDR	R0, [PC, #56]
0x2974	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 344 :: 		DMA2_S4CRbits.TEIE = 1;        // Habilitacion de interrupcion por error en trasmision
0x2976	0x480E    LDR	R0, [PC, #56]
0x2978	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 345 :: 		DMA2_S4CRbits.TCIE = 1;        // Interrupcion por transferencia completa
0x297A	0x480E    LDR	R0, [PC, #56]
0x297C	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 347 :: 		NVIC_IntEnable( IVT_INT_DMA2_Stream4 );      // habilita el vector de interrupcion para DMA
0x297E	0xF240004C  MOVW	R0, #76
0x2982	0xF000F933  BL	_NVIC_IntEnable+0
;uarthandler.c, 349 :: 		}
L_end_vUSARTDMAMeToMemZero:
0x2986	0xF8DDE000  LDR	LR, [SP, #0]
0x298A	0xB001    ADD	SP, SP, #4
0x298C	0x4770    BX	LR
0x298E	0xBF00    NOP
0x2990	0x06584247  	RCC_AHB1ENRbits+0
0x2994	0x8E00424C  	DMA2_S4CRbits+0
0x2998	0x64704002  	DMA2_S4CRbits+0
0x299C	0x8E28424C  	DMA2_S4CRbits+0
0x29A0	0x8E24424C  	DMA2_S4CRbits+0
0x29A4	0x8E18424C  	DIR0_DMA2_S4CR_bit+0
0x29A8	0x8E1C424C  	DIR1_DMA2_S4CR_bit+0
0x29AC	0x9088424C  	DMA2_S4FCRbits+0
0x29B0	0x8E08424C  	DMA2_S4CRbits+0
0x29B4	0x8E10424C  	DMA2_S4CRbits+0
; end of _vUSARTDMAMeToMemZero
_vSPI3Init:
;driverspi.c, 107 :: 		void vSPI3Init ( void ) {
0x50A8	0xB081    SUB	SP, SP, #4
0x50AA	0xF8CDE000  STR	LR, [SP, #0]
;driverspi.c, 109 :: 		_SPI_SS_DISABLE | _SPI_SSM_ENABLE | _SPI_SSI_1, &_GPIO_MODULE_SPI3_PC10_11_12 );
0x50AE	0x4A09    LDR	R2, [PC, #36]
0x50B0	0xF2403104  MOVW	R1, #772
;driverspi.c, 108 :: 		SPI3_Init_Advanced( _SPI_FPCLK_DIV16, _SPI_MASTER | _SPI_8_BIT | _SPI_CLK_IDLE_LOW | _SPI_FIRST_CLK_EDGE_TRANSITION | _SPI_MSB_FIRST |
0x50B4	0x2003    MOVS	R0, #3
;driverspi.c, 109 :: 		_SPI_SS_DISABLE | _SPI_SSM_ENABLE | _SPI_SSI_1, &_GPIO_MODULE_SPI3_PC10_11_12 );
0x50B6	0xF7FDFE21  BL	_SPI3_Init_Advanced+0
;driverspi.c, 111 :: 		SPI3_CR2bits.RXNEIE  = 1;       // habilitacion de ISR para RX
0x50BA	0x2101    MOVS	R1, #1
0x50BC	0xB249    SXTB	R1, R1
0x50BE	0x4806    LDR	R0, [PC, #24]
0x50C0	0x6001    STR	R1, [R0, #0]
;driverspi.c, 113 :: 		NVIC_IntEnable( IVT_INT_SPI3 );
0x50C2	0xF2400043  MOVW	R0, #67
0x50C6	0xF7FDFD91  BL	_NVIC_IntEnable+0
;driverspi.c, 114 :: 		}
L_end_vSPI3Init:
0x50CA	0xF8DDE000  LDR	LR, [SP, #0]
0x50CE	0xB001    ADD	SP, SP, #4
0x50D0	0x4770    BX	LR
0x50D2	0xBF00    NOP
0x50D4	0x84600000  	__GPIO_MODULE_SPI3_PC10_11_12+0
0x50D8	0x80984207  	SPI3_CR2bits+0
; end of _vSPI3Init
_SPI3_Init_Advanced:
;__Lib_SPI_123.c, 133 :: 		
; module start address is: 8 (R2)
0x2CFC	0xB083    SUB	SP, SP, #12
0x2CFE	0xF8CDE000  STR	LR, [SP, #0]
0x2D02	0xF88D0004  STRB	R0, [SP, #4]
0x2D06	0x9102    STR	R1, [SP, #8]
; module end address is: 8 (R2)
; module start address is: 8 (R2)
;__Lib_SPI_123.c, 134 :: 		
0x2D08	0x4C0B    LDR	R4, [PC, #44]
0x2D0A	0x4B0C    LDR	R3, [PC, #48]
0x2D0C	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 135 :: 		
0x2D0E	0x4C0C    LDR	R4, [PC, #48]
0x2D10	0x4B0C    LDR	R3, [PC, #48]
0x2D12	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 137 :: 		
0x2D14	0x2401    MOVS	R4, #1
0x2D16	0xB264    SXTB	R4, R4
0x2D18	0x4B0B    LDR	R3, [PC, #44]
0x2D1A	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 138 :: 		
0x2D1C	0x4610    MOV	R0, R2
; module end address is: 8 (R2)
0x2D1E	0xF7FDFD27  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_SPI_123.c, 140 :: 		
0x2D22	0x9A02    LDR	R2, [SP, #8]
0x2D24	0xF89D1004  LDRB	R1, [SP, #4]
0x2D28	0x4808    LDR	R0, [PC, #32]
0x2D2A	0xF7FFFABB  BL	__Lib_SPI_123_SPIx_Init_Advanced+0
;__Lib_SPI_123.c, 141 :: 		
L_end_SPI3_Init_Advanced:
0x2D2E	0xF8DDE000  LDR	LR, [SP, #0]
0x2D32	0xB003    ADD	SP, SP, #12
0x2D34	0x4770    BX	LR
0x2D36	0xBF00    NOP
0x2D38	0xFFFFFFFF  	_SPI3_Read+0
0x2D3C	0x23A02000  	_SPI_Rd_Ptr+0
0x2D40	0xFFFFFFFF  	_SPI3_Write+0
0x2D44	0x23A42000  	_SPI_Wr_Ptr+0
0x2D48	0x083C4247  	RCC_APB1ENR+0
0x2D4C	0x3C004000  	SPI3_CR1+0
; end of _SPI3_Init_Advanced
__Lib_SPI_123_SPIx_Init_Advanced:
;__Lib_SPI_123.c, 53 :: 		
; config start address is: 8 (R2)
; clock_divider start address is: 4 (R1)
; base start address is: 0 (R0)
0x22A4	0xB081    SUB	SP, SP, #4
; config end address is: 8 (R2)
; clock_divider end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; clock_divider start address is: 4 (R1)
; config start address is: 8 (R2)
;__Lib_SPI_123.c, 56 :: 		
0x22A6	0x2300    MOVS	R3, #0
0x22A8	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 58 :: 		
0x22AA	0x00CB    LSLS	R3, R1, #3
0x22AC	0xB29B    UXTH	R3, R3
; clock_divider end address is: 4 (R1)
0x22AE	0xEA420303  ORR	R3, R2, R3, LSL #0
;__Lib_SPI_123.c, 60 :: 		
0x22B2	0x6804    LDR	R4, [R0, #0]
0x22B4	0xB29B    UXTH	R3, R3
0x22B6	0xEA440303  ORR	R3, R4, R3, LSL #0
0x22BA	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 61 :: 		
0x22BC	0x1D05    ADDS	R5, R0, #4
0x22BE	0x1413    ASRS	R3, R2, #16
; config end address is: 8 (R2)
0x22C0	0x461C    MOV	R4, R3
0x22C2	0x682B    LDR	R3, [R5, #0]
0x22C4	0xF3640382  BFI	R3, R4, #2, #1
0x22C8	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 63 :: 		
0x22CA	0xF200051C  ADDW	R5, R0, #28
0x22CE	0x2400    MOVS	R4, #0
0x22D0	0x682B    LDR	R3, [R5, #0]
0x22D2	0xF36423CB  BFI	R3, R4, #11, #1
0x22D6	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 64 :: 		
0x22D8	0x2401    MOVS	R4, #1
0x22DA	0x6803    LDR	R3, [R0, #0]
0x22DC	0xF3641386  BFI	R3, R4, #6, #1
0x22E0	0x6003    STR	R3, [R0, #0]
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 65 :: 		
L_end_SPIx_Init_Advanced:
0x22E2	0xB001    ADD	SP, SP, #4
0x22E4	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Init_Advanced
_vRF4463MainSetTXString:
;DriverRF4463PROMain.c, 128 :: 		void vRF4463MainSetTXString () {
0x50DC	0xB081    SUB	SP, SP, #4
;DriverRF4463PROMain.c, 129 :: 		ucRF4463TXdata[ 0 ] = ucRF4463ByteMatch1;
0x50DE	0x4809    LDR	R0, [PC, #36]
0x50E0	0x7801    LDRB	R1, [R0, #0]
0x50E2	0x4809    LDR	R0, [PC, #36]
0x50E4	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 130 :: 		ucRF4463TXdata[ 1 ] = ucRF4463ByteMatch2;
0x50E6	0x4809    LDR	R0, [PC, #36]
0x50E8	0x7801    LDRB	R1, [R0, #0]
0x50EA	0x4809    LDR	R0, [PC, #36]
0x50EC	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 131 :: 		ucRF4463TXdata[ 2 ] = ucRF4463ByteMatch3;
0x50EE	0x4809    LDR	R0, [PC, #36]
0x50F0	0x7801    LDRB	R1, [R0, #0]
0x50F2	0x4809    LDR	R0, [PC, #36]
0x50F4	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 132 :: 		ucRF4463TXdata[ 3 ] = ucRF4463ByteMatch4;
0x50F6	0x4809    LDR	R0, [PC, #36]
0x50F8	0x7801    LDRB	R1, [R0, #0]
0x50FA	0x4809    LDR	R0, [PC, #36]
0x50FC	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 133 :: 		}
L_end_vRF4463MainSetTXString:
0x50FE	0xB001    ADD	SP, SP, #4
0x5100	0x4770    BX	LR
0x5102	0xBF00    NOP
0x5104	0x220B2000  	_ucRF4463ByteMatch1+0
0x5108	0x21732000  	_ucRF4463TXdata+0
0x510C	0x221A2000  	_ucRF4463ByteMatch2+0
0x5110	0x21742000  	_ucRF4463TXdata+1
0x5114	0x22272000  	_ucRF4463ByteMatch3+0
0x5118	0x21752000  	_ucRF4463TXdata+2
0x511C	0x22342000  	_ucRF4463ByteMatch4+0
0x5120	0x21762000  	_ucRF4463TXdata+3
; end of _vRF4463MainSetTXString
_VRF4463SDNReset:
;driverrf4463pro.c, 970 :: 		void VRF4463SDNReset( void ) {
0x42A8	0xB082    SUB	SP, SP, #8
0x42AA	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 973 :: 		SDN = 1;
0x42AE	0x2101    MOVS	R1, #1
0x42B0	0xB249    SXTB	R1, R1
0x42B2	0x4826    LDR	R0, [PC, #152]
0x42B4	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 974 :: 		Delay_ms( 6 );        // RF Module reset  DELAY
0x42B6	0xF242077E  MOVW	R7, #8318
0x42BA	0xF2C00705  MOVT	R7, #5
0x42BE	0xBF00    NOP
0x42C0	0xBF00    NOP
L_VRF4463SDNReset152:
0x42C2	0x1E7F    SUBS	R7, R7, #1
0x42C4	0xD1FD    BNE	L_VRF4463SDNReset152
0x42C6	0xBF00    NOP
0x42C8	0xBF00    NOP
0x42CA	0xBF00    NOP
;driverrf4463pro.c, 975 :: 		SDN = 0;
0x42CC	0x2100    MOVS	R1, #0
0x42CE	0xB249    SXTB	R1, R1
0x42D0	0x481E    LDR	R0, [PC, #120]
0x42D2	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 976 :: 		Delay_ms( 10 );       // Delay 10ms for RF module to enter working state
0x42D4	0xF648377E  MOVW	R7, #35710
0x42D8	0xF2C00708  MOVT	R7, #8
0x42DC	0xBF00    NOP
0x42DE	0xBF00    NOP
L_VRF4463SDNReset154:
0x42E0	0x1E7F    SUBS	R7, R7, #1
0x42E2	0xD1FD    BNE	L_VRF4463SDNReset154
0x42E4	0xBF00    NOP
0x42E6	0xBF00    NOP
0x42E8	0xBF00    NOP
;driverrf4463pro.c, 978 :: 		nSEL = 1;
0x42EA	0x2101    MOVS	R1, #1
0x42EC	0xB249    SXTB	R1, R1
0x42EE	0x4818    LDR	R0, [PC, #96]
0x42F0	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 979 :: 		nSEL = 0;
0x42F2	0x2100    MOVS	R1, #0
0x42F4	0xB249    SXTB	R1, R1
0x42F6	0x4816    LDR	R0, [PC, #88]
0x42F8	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 980 :: 		for ( i = 0; i < 7; i++ ) {
0x42FA	0x2000    MOVS	R0, #0
0x42FC	0xF88D0004  STRB	R0, [SP, #4]
L_VRF4463SDNReset156:
0x4300	0xF89D0004  LDRB	R0, [SP, #4]
0x4304	0x2807    CMP	R0, #7
0x4306	0xD20E    BCS	L_VRF4463SDNReset157
;driverrf4463pro.c, 981 :: 		ucRf4463SPIByte( RF_POWER_UP_data[ i ] );   // send power up Command
0x4308	0xF89D1004  LDRB	R1, [SP, #4]
0x430C	0x4811    LDR	R0, [PC, #68]
0x430E	0x1840    ADDS	R0, R0, R1
0x4310	0x7800    LDRB	R0, [R0, #0]
0x4312	0xB401    PUSH	(R0)
0x4314	0xF7FEFD1C  BL	_ucRf4463SPIByte+0
0x4318	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 980 :: 		for ( i = 0; i < 7; i++ ) {
0x431A	0xF89D0004  LDRB	R0, [SP, #4]
0x431E	0x1C40    ADDS	R0, R0, #1
0x4320	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 982 :: 		}
0x4324	0xE7EC    B	L_VRF4463SDNReset156
L_VRF4463SDNReset157:
;driverrf4463pro.c, 983 :: 		nSEL = 1;
0x4326	0x2101    MOVS	R1, #1
0x4328	0xB249    SXTB	R1, R1
0x432A	0x4809    LDR	R0, [PC, #36]
0x432C	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 985 :: 		Delay_ms( 20 );       // Delay 20ms RF module enters working state, but CTS still needs to be judged later, this delay can be removed
0x432E	0xF24167FE  MOVW	R7, #5886
0x4332	0xF2C00711  MOVT	R7, #17
0x4336	0xBF00    NOP
0x4338	0xBF00    NOP
L_VRF4463SDNReset159:
0x433A	0x1E7F    SUBS	R7, R7, #1
0x433C	0xD1FD    BNE	L_VRF4463SDNReset159
0x433E	0xBF00    NOP
0x4340	0xBF00    NOP
0x4342	0xBF00    NOP
;driverrf4463pro.c, 986 :: 		}
L_end_VRF4463SDNReset:
0x4344	0xF8DDE000  LDR	LR, [SP, #0]
0x4348	0xB002    ADD	SP, SP, #8
0x434A	0x4770    BX	LR
0x434C	0x02884241  	GPIOC_ODRbits+0
0x4350	0x82B44241  	GPIOD_ODRbits+0
0x4354	0x8A580000  	_RF_POWER_UP_data+0
; end of _VRF4463SDNReset
_ucRf4463SPIByte:
;driverrf4463pro.c, 785 :: 		unsigned char ucRf4463SPIByte( unsigned char ucData ) {
0x2D50	0xB081    SUB	SP, SP, #4
;driverrf4463pro.c, 812 :: 		ucSPI3ByteReceived = 0;
0x2D52	0x2100    MOVS	R1, #0
0x2D54	0x4808    LDR	R0, [PC, #32]
0x2D56	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 814 :: 		SPI3_DR = ucData;
0x2D58	0xF89D1004  LDRB	R1, [SP, #4]
0x2D5C	0x4807    LDR	R0, [PC, #28]
0x2D5E	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 816 :: 		while ( !SPI3_SRbits.TXE );                // espera a que el buffer este vacio
L_ucRf4463SPIByte116:
0x2D60	0x4807    LDR	R0, [PC, #28]
0x2D62	0x6800    LDR	R0, [R0, #0]
0x2D64	0xB900    CBNZ	R0, L_ucRf4463SPIByte117
0x2D66	0xE7FB    B	L_ucRf4463SPIByte116
L_ucRf4463SPIByte117:
;driverrf4463pro.c, 818 :: 		while ( SPI3_SRbits.BSY );                // espera a que el buffer este vacio
L_ucRf4463SPIByte118:
0x2D68	0x4806    LDR	R0, [PC, #24]
0x2D6A	0x6800    LDR	R0, [R0, #0]
0x2D6C	0xB100    CBZ	R0, L_ucRf4463SPIByte119
0x2D6E	0xE7FB    B	L_ucRf4463SPIByte118
L_ucRf4463SPIByte119:
;driverrf4463pro.c, 820 :: 		return ( ucSPI3ByteReceived );
0x2D70	0x4801    LDR	R0, [PC, #4]
0x2D72	0x7800    LDRB	R0, [R0, #0]
;driverrf4463pro.c, 832 :: 		}
L_end_ucRf4463SPIByte:
0x2D74	0xB001    ADD	SP, SP, #4
0x2D76	0x4770    BX	LR
0x2D78	0x22902000  	_ucSPI3ByteReceived+0
0x2D7C	0x3C0C4000  	SPI3_DR+0
0x2D80	0x81044207  	SPI3_SRbits+0
0x2D84	0x811C4207  	SPI3_SRbits+0
; end of _ucRf4463SPIByte
_vRF4463Init:
;driverrf4463pro.c, 53 :: 		void vRF4463Init ( void ) {  // MODE,
0x4358	0xB087    SUB	SP, SP, #28
0x435A	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 56 :: 		for ( i = 4; i < 16; i++ ) {
0x435E	0x2004    MOVS	R0, #4
0x4360	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init1:
0x4364	0xF89D0018  LDRB	R0, [SP, #24]
0x4368	0x2810    CMP	R0, #16
0x436A	0xD217    BCS	L_vRF4463Init2
;driverrf4463pro.c, 57 :: 		RF_MODEM_MOD_TYPE_12_data[ i ] = RF_MODEM_MOD_TYPE_12[ ucRF4463Rate ][ i - 4 ];
0x436C	0xF89D1018  LDRB	R1, [SP, #24]
0x4370	0x48C3    LDR	R0, [PC, #780]
0x4372	0x1843    ADDS	R3, R0, R1
0x4374	0x48C3    LDR	R0, [PC, #780]
0x4376	0x7801    LDRB	R1, [R0, #0]
0x4378	0x200C    MOVS	R0, #12
0x437A	0x4341    MULS	R1, R0, R1
0x437C	0x48C2    LDR	R0, [PC, #776]
0x437E	0x1842    ADDS	R2, R0, R1
0x4380	0xF89D0018  LDRB	R0, [SP, #24]
0x4384	0x1F01    SUBS	R1, R0, #4
0x4386	0xB209    SXTH	R1, R1
0x4388	0x4610    MOV	R0, R2
0x438A	0x1840    ADDS	R0, R0, R1
0x438C	0x7800    LDRB	R0, [R0, #0]
0x438E	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 56 :: 		for ( i = 4; i < 16; i++ ) {
0x4390	0xF89D0018  LDRB	R0, [SP, #24]
0x4394	0x1C40    ADDS	R0, R0, #1
0x4396	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 58 :: 		}
0x439A	0xE7E3    B	L_vRF4463Init1
L_vRF4463Init2:
;driverrf4463pro.c, 61 :: 		if ( ucRF4463Freq3 < 8 ) {
0x439C	0x48BB    LDR	R0, [PC, #748]
0x439E	0x7800    LDRB	R0, [R0, #0]
0x43A0	0x2808    CMP	R0, #8
0x43A2	0xF08080F9  BCS	L_vRF4463Init4
;driverrf4463pro.c, 62 :: 		for ( i = 4; i < 12; i++ ) {
0x43A6	0x2004    MOVS	R0, #4
0x43A8	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init5:
0x43AC	0xF89D0018  LDRB	R0, [SP, #24]
0x43B0	0x280C    CMP	R0, #12
0x43B2	0xD217    BCS	L_vRF4463Init6
;driverrf4463pro.c, 63 :: 		RF_MODEM_TX_RAMP_DELAY_8_data[ i ] = RF_MODEM_TX_RAMP_DELAY_8_433[ ucRF4463Rate ][ i - 4 ];
0x43B4	0xF89D1018  LDRB	R1, [SP, #24]
0x43B8	0x48B5    LDR	R0, [PC, #724]
0x43BA	0x1843    ADDS	R3, R0, R1
0x43BC	0x48B1    LDR	R0, [PC, #708]
0x43BE	0x7801    LDRB	R1, [R0, #0]
0x43C0	0x2008    MOVS	R0, #8
0x43C2	0x4341    MULS	R1, R0, R1
0x43C4	0x48B3    LDR	R0, [PC, #716]
0x43C6	0x1842    ADDS	R2, R0, R1
0x43C8	0xF89D0018  LDRB	R0, [SP, #24]
0x43CC	0x1F01    SUBS	R1, R0, #4
0x43CE	0xB209    SXTH	R1, R1
0x43D0	0x4610    MOV	R0, R2
0x43D2	0x1840    ADDS	R0, R0, R1
0x43D4	0x7800    LDRB	R0, [R0, #0]
0x43D6	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 62 :: 		for ( i = 4; i < 12; i++ ) {
0x43D8	0xF89D0018  LDRB	R0, [SP, #24]
0x43DC	0x1C40    ADDS	R0, R0, #1
0x43DE	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 64 :: 		}
0x43E2	0xE7E3    B	L_vRF4463Init5
L_vRF4463Init6:
;driverrf4463pro.c, 65 :: 		for ( i = 4; i < 11; i++ ) {
0x43E4	0x2004    MOVS	R0, #4
0x43E6	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init8:
0x43EA	0xF89D0018  LDRB	R0, [SP, #24]
0x43EE	0x280B    CMP	R0, #11
0x43F0	0xD217    BCS	L_vRF4463Init9
;driverrf4463pro.c, 66 :: 		RF_MODEM_AFC_GEAR_7_data[ i ] = RF_MODEM_AFC_GEAR_7_433[ ucRF4463Rate ][ i - 4 ];
0x43F2	0xF89D1018  LDRB	R1, [SP, #24]
0x43F6	0x48A8    LDR	R0, [PC, #672]
0x43F8	0x1843    ADDS	R3, R0, R1
0x43FA	0x48A2    LDR	R0, [PC, #648]
0x43FC	0x7801    LDRB	R1, [R0, #0]
0x43FE	0x2007    MOVS	R0, #7
0x4400	0x4341    MULS	R1, R0, R1
0x4402	0x48A6    LDR	R0, [PC, #664]
0x4404	0x1842    ADDS	R2, R0, R1
0x4406	0xF89D0018  LDRB	R0, [SP, #24]
0x440A	0x1F01    SUBS	R1, R0, #4
0x440C	0xB209    SXTH	R1, R1
0x440E	0x4610    MOV	R0, R2
0x4410	0x1840    ADDS	R0, R0, R1
0x4412	0x7800    LDRB	R0, [R0, #0]
0x4414	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 65 :: 		for ( i = 4; i < 11; i++ ) {
0x4416	0xF89D0018  LDRB	R0, [SP, #24]
0x441A	0x1C40    ADDS	R0, R0, #1
0x441C	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 67 :: 		}
0x4420	0xE7E3    B	L_vRF4463Init8
L_vRF4463Init9:
;driverrf4463pro.c, 68 :: 		for ( i = 4; i < 15; i++ ) {
0x4422	0x2004    MOVS	R0, #4
0x4424	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init11:
0x4428	0xF89D0018  LDRB	R0, [SP, #24]
0x442C	0x280F    CMP	R0, #15
0x442E	0xD217    BCS	L_vRF4463Init12
;driverrf4463pro.c, 69 :: 		RF_MODEM_OOK_CNT1_11_data[ i ] = RF_MODEM_OOK_CNT1_11_433[ ucRF4463Rate ][ i - 4 ];
0x4430	0xF89D1018  LDRB	R1, [SP, #24]
0x4434	0x489A    LDR	R0, [PC, #616]
0x4436	0x1843    ADDS	R3, R0, R1
0x4438	0x4892    LDR	R0, [PC, #584]
0x443A	0x7801    LDRB	R1, [R0, #0]
0x443C	0x200B    MOVS	R0, #11
0x443E	0x4341    MULS	R1, R0, R1
0x4440	0x4898    LDR	R0, [PC, #608]
0x4442	0x1842    ADDS	R2, R0, R1
0x4444	0xF89D0018  LDRB	R0, [SP, #24]
0x4448	0x1F01    SUBS	R1, R0, #4
0x444A	0xB209    SXTH	R1, R1
0x444C	0x4610    MOV	R0, R2
0x444E	0x1840    ADDS	R0, R0, R1
0x4450	0x7800    LDRB	R0, [R0, #0]
0x4452	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 68 :: 		for ( i = 4; i < 15; i++ ) {
0x4454	0xF89D0018  LDRB	R0, [SP, #24]
0x4458	0x1C40    ADDS	R0, R0, #1
0x445A	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 70 :: 		}
0x445E	0xE7E3    B	L_vRF4463Init11
L_vRF4463Init12:
;driverrf4463pro.c, 71 :: 		for ( i = 4; i < 16; i++ ) {
0x4460	0x2004    MOVS	R0, #4
0x4462	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init14:
0x4466	0xF89D0018  LDRB	R0, [SP, #24]
0x446A	0x2810    CMP	R0, #16
0x446C	0xD217    BCS	L_vRF4463Init15
;driverrf4463pro.c, 72 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x446E	0xF89D1018  LDRB	R1, [SP, #24]
0x4472	0x488D    LDR	R0, [PC, #564]
0x4474	0x1843    ADDS	R3, R0, R1
0x4476	0x4883    LDR	R0, [PC, #524]
0x4478	0x7801    LDRB	R1, [R0, #0]
0x447A	0x200C    MOVS	R0, #12
0x447C	0x4341    MULS	R1, R0, R1
0x447E	0x488B    LDR	R0, [PC, #556]
0x4480	0x1842    ADDS	R2, R0, R1
0x4482	0xF89D0018  LDRB	R0, [SP, #24]
0x4486	0x1F01    SUBS	R1, R0, #4
0x4488	0xB209    SXTH	R1, R1
0x448A	0x4610    MOV	R0, R2
0x448C	0x1840    ADDS	R0, R0, R1
0x448E	0x7800    LDRB	R0, [R0, #0]
0x4490	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 71 :: 		for ( i = 4; i < 16; i++ ) {
0x4492	0xF89D0018  LDRB	R0, [SP, #24]
0x4496	0x1C40    ADDS	R0, R0, #1
0x4498	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 73 :: 		}
0x449C	0xE7E3    B	L_vRF4463Init14
L_vRF4463Init15:
;driverrf4463pro.c, 74 :: 		for ( i = 4; i < 16; i++ ) {
0x449E	0x2004    MOVS	R0, #4
0x44A0	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init17:
0x44A4	0xF89D0018  LDRB	R0, [SP, #24]
0x44A8	0x2810    CMP	R0, #16
0x44AA	0xD217    BCS	L_vRF4463Init18
;driverrf4463pro.c, 75 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x44AC	0xF89D1018  LDRB	R1, [SP, #24]
0x44B0	0x487F    LDR	R0, [PC, #508]
0x44B2	0x1843    ADDS	R3, R0, R1
0x44B4	0x4873    LDR	R0, [PC, #460]
0x44B6	0x7801    LDRB	R1, [R0, #0]
0x44B8	0x200C    MOVS	R0, #12
0x44BA	0x4341    MULS	R1, R0, R1
0x44BC	0x487D    LDR	R0, [PC, #500]
0x44BE	0x1842    ADDS	R2, R0, R1
0x44C0	0xF89D0018  LDRB	R0, [SP, #24]
0x44C4	0x1F01    SUBS	R1, R0, #4
0x44C6	0xB209    SXTH	R1, R1
0x44C8	0x4610    MOV	R0, R2
0x44CA	0x1840    ADDS	R0, R0, R1
0x44CC	0x7800    LDRB	R0, [R0, #0]
0x44CE	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 74 :: 		for ( i = 4; i < 16; i++ ) {
0x44D0	0xF89D0018  LDRB	R0, [SP, #24]
0x44D4	0x1C40    ADDS	R0, R0, #1
0x44D6	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 76 :: 		}
0x44DA	0xE7E3    B	L_vRF4463Init17
L_vRF4463Init18:
;driverrf4463pro.c, 77 :: 		for ( i = 4; i < 16; i++ ) {
0x44DC	0x2004    MOVS	R0, #4
0x44DE	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init20:
0x44E2	0xF89D0018  LDRB	R0, [SP, #24]
0x44E6	0x2810    CMP	R0, #16
0x44E8	0xD217    BCS	L_vRF4463Init21
;driverrf4463pro.c, 78 :: 		RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x44EA	0xF89D1018  LDRB	R1, [SP, #24]
0x44EE	0x4872    LDR	R0, [PC, #456]
0x44F0	0x1843    ADDS	R3, R0, R1
0x44F2	0x4864    LDR	R0, [PC, #400]
0x44F4	0x7801    LDRB	R1, [R0, #0]
0x44F6	0x200C    MOVS	R0, #12
0x44F8	0x4341    MULS	R1, R0, R1
0x44FA	0x4870    LDR	R0, [PC, #448]
0x44FC	0x1842    ADDS	R2, R0, R1
0x44FE	0xF89D0018  LDRB	R0, [SP, #24]
0x4502	0x1F01    SUBS	R1, R0, #4
0x4504	0xB209    SXTH	R1, R1
0x4506	0x4610    MOV	R0, R2
0x4508	0x1840    ADDS	R0, R0, R1
0x450A	0x7800    LDRB	R0, [R0, #0]
0x450C	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 77 :: 		for ( i = 4; i < 16; i++ ) {
0x450E	0xF89D0018  LDRB	R0, [SP, #24]
0x4512	0x1C40    ADDS	R0, R0, #1
0x4514	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 79 :: 		}
0x4518	0xE7E3    B	L_vRF4463Init20
L_vRF4463Init21:
;driverrf4463pro.c, 80 :: 		for ( i = 4; i < 13; i++ ) {
0x451A	0x2004    MOVS	R0, #4
0x451C	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init23:
0x4520	0xF89D0018  LDRB	R0, [SP, #24]
0x4524	0x280D    CMP	R0, #13
0x4526	0xD217    BCS	L_vRF4463Init24
;driverrf4463pro.c, 81 :: 		RF_MODEM_AGC_WINDOW_SIZE_9_data[ i ] = RF_MODEM_AGC_WINDOW_SIZE_9_433[ ucRF4463Rate ][ i - 4 ];
0x4528	0xF89D1018  LDRB	R1, [SP, #24]
0x452C	0x4864    LDR	R0, [PC, #400]
0x452E	0x1843    ADDS	R3, R0, R1
0x4530	0x4854    LDR	R0, [PC, #336]
0x4532	0x7801    LDRB	R1, [R0, #0]
0x4534	0x2009    MOVS	R0, #9
0x4536	0x4341    MULS	R1, R0, R1
0x4538	0x4862    LDR	R0, [PC, #392]
0x453A	0x1842    ADDS	R2, R0, R1
0x453C	0xF89D0018  LDRB	R0, [SP, #24]
0x4540	0x1F01    SUBS	R1, R0, #4
0x4542	0xB209    SXTH	R1, R1
0x4544	0x4610    MOV	R0, R2
0x4546	0x1840    ADDS	R0, R0, R1
0x4548	0x7800    LDRB	R0, [R0, #0]
0x454A	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 80 :: 		for ( i = 4; i < 13; i++ ) {
0x454C	0xF89D0018  LDRB	R0, [SP, #24]
0x4550	0x1C40    ADDS	R0, R0, #1
0x4552	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 82 :: 		}
0x4556	0xE7E3    B	L_vRF4463Init23
L_vRF4463Init24:
;driverrf4463pro.c, 83 :: 		for ( i = 4; i < 13; i++ ) {
0x4558	0x2004    MOVS	R0, #4
0x455A	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init26:
0x455E	0xF89D0018  LDRB	R0, [SP, #24]
0x4562	0x280D    CMP	R0, #13
0x4564	0xD217    BCS	L_vRF4463Init27
;driverrf4463pro.c, 84 :: 		RF_MODEM_BCR_OSR_1_9_data[ i ] = RF_MODEM_BCR_OSR_1_9_433[ ucRF4463Rate ][ i - 4 ];
0x4566	0xF89D1018  LDRB	R1, [SP, #24]
0x456A	0x4857    LDR	R0, [PC, #348]
0x456C	0x1843    ADDS	R3, R0, R1
0x456E	0x4845    LDR	R0, [PC, #276]
0x4570	0x7801    LDRB	R1, [R0, #0]
0x4572	0x2009    MOVS	R0, #9
0x4574	0x4341    MULS	R1, R0, R1
0x4576	0x4855    LDR	R0, [PC, #340]
0x4578	0x1842    ADDS	R2, R0, R1
0x457A	0xF89D0018  LDRB	R0, [SP, #24]
0x457E	0x1F01    SUBS	R1, R0, #4
0x4580	0xB209    SXTH	R1, R1
0x4582	0x4610    MOV	R0, R2
0x4584	0x1840    ADDS	R0, R0, R1
0x4586	0x7800    LDRB	R0, [R0, #0]
0x4588	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 83 :: 		for ( i = 4; i < 13; i++ ) {
0x458A	0xF89D0018  LDRB	R0, [SP, #24]
0x458E	0x1C40    ADDS	R0, R0, #1
0x4590	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 85 :: 		}
0x4594	0xE7E3    B	L_vRF4463Init26
L_vRF4463Init27:
;driverrf4463pro.c, 86 :: 		}
0x4596	0xE128    B	L_vRF4463Init29
L_vRF4463Init4:
;driverrf4463pro.c, 88 :: 		for ( i = 4; i < 12; i++ ) {
0x4598	0x2004    MOVS	R0, #4
0x459A	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init30:
0x459E	0xF89D0018  LDRB	R0, [SP, #24]
0x45A2	0x280C    CMP	R0, #12
0x45A4	0xD217    BCS	L_vRF4463Init31
;driverrf4463pro.c, 89 :: 		RF_MODEM_TX_RAMP_DELAY_8_data[ i ] = RF_MODEM_TX_RAMP_DELAY_8_850[ ucRF4463Rate ][ i - 4 ];
0x45A6	0xF89D1018  LDRB	R1, [SP, #24]
0x45AA	0x4839    LDR	R0, [PC, #228]
0x45AC	0x1843    ADDS	R3, R0, R1
0x45AE	0x4835    LDR	R0, [PC, #212]
0x45B0	0x7801    LDRB	R1, [R0, #0]
0x45B2	0x2008    MOVS	R0, #8
0x45B4	0x4341    MULS	R1, R0, R1
0x45B6	0x4846    LDR	R0, [PC, #280]
0x45B8	0x1842    ADDS	R2, R0, R1
0x45BA	0xF89D0018  LDRB	R0, [SP, #24]
0x45BE	0x1F01    SUBS	R1, R0, #4
0x45C0	0xB209    SXTH	R1, R1
0x45C2	0x4610    MOV	R0, R2
0x45C4	0x1840    ADDS	R0, R0, R1
0x45C6	0x7800    LDRB	R0, [R0, #0]
0x45C8	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 88 :: 		for ( i = 4; i < 12; i++ ) {
0x45CA	0xF89D0018  LDRB	R0, [SP, #24]
0x45CE	0x1C40    ADDS	R0, R0, #1
0x45D0	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 90 :: 		}
0x45D4	0xE7E3    B	L_vRF4463Init30
L_vRF4463Init31:
;driverrf4463pro.c, 91 :: 		for ( i = 4; i < 11; i++ ) {
0x45D6	0x2004    MOVS	R0, #4
0x45D8	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init33:
0x45DC	0xF89D0018  LDRB	R0, [SP, #24]
0x45E0	0x280B    CMP	R0, #11
0x45E2	0xD217    BCS	L_vRF4463Init34
;driverrf4463pro.c, 92 :: 		RF_MODEM_AFC_GEAR_7_data[ i ] = RF_MODEM_AFC_GEAR_7_850[ ucRF4463Rate ][ i - 4 ];
0x45E4	0xF89D1018  LDRB	R1, [SP, #24]
0x45E8	0x482B    LDR	R0, [PC, #172]
0x45EA	0x1843    ADDS	R3, R0, R1
0x45EC	0x4825    LDR	R0, [PC, #148]
0x45EE	0x7801    LDRB	R1, [R0, #0]
0x45F0	0x2007    MOVS	R0, #7
0x45F2	0x4341    MULS	R1, R0, R1
0x45F4	0x4837    LDR	R0, [PC, #220]
0x45F6	0x1842    ADDS	R2, R0, R1
0x45F8	0xF89D0018  LDRB	R0, [SP, #24]
0x45FC	0x1F01    SUBS	R1, R0, #4
0x45FE	0xB209    SXTH	R1, R1
0x4600	0x4610    MOV	R0, R2
0x4602	0x1840    ADDS	R0, R0, R1
0x4604	0x7800    LDRB	R0, [R0, #0]
0x4606	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 91 :: 		for ( i = 4; i < 11; i++ ) {
0x4608	0xF89D0018  LDRB	R0, [SP, #24]
0x460C	0x1C40    ADDS	R0, R0, #1
0x460E	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 93 :: 		}
0x4612	0xE7E3    B	L_vRF4463Init33
L_vRF4463Init34:
;driverrf4463pro.c, 94 :: 		for ( i = 4; i < 15; i++ ) {
0x4614	0x2004    MOVS	R0, #4
0x4616	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init36:
0x461A	0xF89D0018  LDRB	R0, [SP, #24]
0x461E	0x280F    CMP	R0, #15
0x4620	0xD217    BCS	L_vRF4463Init37
;driverrf4463pro.c, 95 :: 		RF_MODEM_OOK_CNT1_11_data[ i ] = RF_MODEM_OOK_CNT1_11_850[ ucRF4463Rate ][ i - 4 ];
0x4622	0xF89D1018  LDRB	R1, [SP, #24]
0x4626	0x481E    LDR	R0, [PC, #120]
0x4628	0x1843    ADDS	R3, R0, R1
0x462A	0x4816    LDR	R0, [PC, #88]
0x462C	0x7801    LDRB	R1, [R0, #0]
0x462E	0x200B    MOVS	R0, #11
0x4630	0x4341    MULS	R1, R0, R1
0x4632	0x4829    LDR	R0, [PC, #164]
0x4634	0x1842    ADDS	R2, R0, R1
0x4636	0xF89D0018  LDRB	R0, [SP, #24]
0x463A	0x1F01    SUBS	R1, R0, #4
0x463C	0xB209    SXTH	R1, R1
0x463E	0x4610    MOV	R0, R2
0x4640	0x1840    ADDS	R0, R0, R1
0x4642	0x7800    LDRB	R0, [R0, #0]
0x4644	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 94 :: 		for ( i = 4; i < 15; i++ ) {
0x4646	0xF89D0018  LDRB	R0, [SP, #24]
0x464A	0x1C40    ADDS	R0, R0, #1
0x464C	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 96 :: 		}
0x4650	0xE7E3    B	L_vRF4463Init36
L_vRF4463Init37:
;driverrf4463pro.c, 97 :: 		for ( i = 4; i < 16; i++ ) {
0x4652	0x2004    MOVS	R0, #4
0x4654	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init39:
0x4658	0xF89D0018  LDRB	R0, [SP, #24]
0x465C	0x2810    CMP	R0, #16
0x465E	0xD248    BCS	L_vRF4463Init40
;driverrf4463pro.c, 98 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x4660	0xF89D1018  LDRB	R1, [SP, #24]
0x4664	0x4810    LDR	R0, [PC, #64]
0x4666	0x1843    ADDS	R3, R0, R1
0x4668	0x4806    LDR	R0, [PC, #24]
0x466A	0x7801    LDRB	R1, [R0, #0]
0x466C	0x200C    MOVS	R0, #12
0x466E	0x4341    MULS	R1, R0, R1
0x4670	0x481A    LDR	R0, [PC, #104]
0x4672	0x1842    ADDS	R2, R0, R1
0x4674	0xF89D0018  LDRB	R0, [SP, #24]
0x4678	0x1F01    SUBS	R1, R0, #4
0x467A	0xB209    SXTH	R1, R1
0x467C	0x4610    MOV	R0, R2
0x467E	0xE02F    B	#94
0x4680	0x22912000  	_RF_MODEM_MOD_TYPE_12_data+0
0x4684	0x233E2000  	_ucRF4463Rate+0
0x4688	0x82E70000  	_RF_MODEM_MOD_TYPE_12+0
0x468C	0x23372000  	_ucRF4463Freq3+0
0x4690	0x22A12000  	_RF_MODEM_TX_RAMP_DELAY_8_data+0
0x4694	0x871C0000  	_RF_MODEM_TX_RAMP_DELAY_8_433+0
0x4698	0x22AD2000  	_RF_MODEM_AFC_GEAR_7_data+0
0x469C	0x880E0000  	_RF_MODEM_AFC_GEAR_7_433+0
0x46A0	0x22BA2000  	_RF_MODEM_OOK_CNT1_11_data+0
0x46A4	0x836B0000  	_RF_MODEM_OOK_CNT1_11_433+0
0x46A8	0x22C92000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+0
0x46AC	0x80D70000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+0
0x46B0	0x22D92000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x46B4	0x80530000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+0
0x46B8	0x22E92000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x46BC	0x7FCF0000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+0
0x46C0	0x22F92000  	_RF_MODEM_AGC_WINDOW_SIZE_9_data+0
0x46C4	0x86610000  	_RF_MODEM_AGC_WINDOW_SIZE_9_433+0
0x46C8	0x23062000  	_RF_MODEM_BCR_OSR_1_9_data+0
0x46CC	0x85FE0000  	_RF_MODEM_BCR_OSR_1_9_433+0
0x46D0	0x86C40000  	_RF_MODEM_TX_RAMP_DELAY_8_850+0
0x46D4	0x87C10000  	_RF_MODEM_AFC_GEAR_7_850+0
0x46D8	0x83E40000  	_RF_MODEM_OOK_CNT1_11_850+0
0x46DC	0x82630000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+0
0x46E0	0x1840    ADDS	R0, R0, R1
0x46E2	0x7800    LDRB	R0, [R0, #0]
0x46E4	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 97 :: 		for ( i = 4; i < 16; i++ ) {
0x46E6	0xF89D0018  LDRB	R0, [SP, #24]
0x46EA	0x1C40    ADDS	R0, R0, #1
0x46EC	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 99 :: 		}
0x46F0	0xE7B2    B	L_vRF4463Init39
L_vRF4463Init40:
;driverrf4463pro.c, 100 :: 		for ( i = 4; i < 16; i++ ) {
0x46F2	0x2004    MOVS	R0, #4
0x46F4	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init42:
0x46F8	0xF89D0018  LDRB	R0, [SP, #24]
0x46FC	0x2810    CMP	R0, #16
0x46FE	0xD217    BCS	L_vRF4463Init43
;driverrf4463pro.c, 101 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x4700	0xF89D1018  LDRB	R1, [SP, #24]
0x4704	0x48E3    LDR	R0, [PC, #908]
0x4706	0x1843    ADDS	R3, R0, R1
0x4708	0x48E3    LDR	R0, [PC, #908]
0x470A	0x7801    LDRB	R1, [R0, #0]
0x470C	0x200C    MOVS	R0, #12
0x470E	0x4341    MULS	R1, R0, R1
0x4710	0x48E2    LDR	R0, [PC, #904]
0x4712	0x1842    ADDS	R2, R0, R1
0x4714	0xF89D0018  LDRB	R0, [SP, #24]
0x4718	0x1F01    SUBS	R1, R0, #4
0x471A	0xB209    SXTH	R1, R1
0x471C	0x4610    MOV	R0, R2
0x471E	0x1840    ADDS	R0, R0, R1
0x4720	0x7800    LDRB	R0, [R0, #0]
0x4722	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 100 :: 		for ( i = 4; i < 16; i++ ) {
0x4724	0xF89D0018  LDRB	R0, [SP, #24]
0x4728	0x1C40    ADDS	R0, R0, #1
0x472A	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 102 :: 		}
0x472E	0xE7E3    B	L_vRF4463Init42
L_vRF4463Init43:
;driverrf4463pro.c, 103 :: 		for ( i = 4; i < 16; i++ ) {
0x4730	0x2004    MOVS	R0, #4
0x4732	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init45:
0x4736	0xF89D0018  LDRB	R0, [SP, #24]
0x473A	0x2810    CMP	R0, #16
0x473C	0xD217    BCS	L_vRF4463Init46
;driverrf4463pro.c, 104 :: 		RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x473E	0xF89D1018  LDRB	R1, [SP, #24]
0x4742	0x48D7    LDR	R0, [PC, #860]
0x4744	0x1843    ADDS	R3, R0, R1
0x4746	0x48D4    LDR	R0, [PC, #848]
0x4748	0x7801    LDRB	R1, [R0, #0]
0x474A	0x200C    MOVS	R0, #12
0x474C	0x4341    MULS	R1, R0, R1
0x474E	0x48D5    LDR	R0, [PC, #852]
0x4750	0x1842    ADDS	R2, R0, R1
0x4752	0xF89D0018  LDRB	R0, [SP, #24]
0x4756	0x1F01    SUBS	R1, R0, #4
0x4758	0xB209    SXTH	R1, R1
0x475A	0x4610    MOV	R0, R2
0x475C	0x1840    ADDS	R0, R0, R1
0x475E	0x7800    LDRB	R0, [R0, #0]
0x4760	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 103 :: 		for ( i = 4; i < 16; i++ ) {
0x4762	0xF89D0018  LDRB	R0, [SP, #24]
0x4766	0x1C40    ADDS	R0, R0, #1
0x4768	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 105 :: 		}
0x476C	0xE7E3    B	L_vRF4463Init45
L_vRF4463Init46:
;driverrf4463pro.c, 106 :: 		for ( i = 4; i < 13; i++ ) {
0x476E	0x2004    MOVS	R0, #4
0x4770	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init48:
0x4774	0xF89D0018  LDRB	R0, [SP, #24]
0x4778	0x280D    CMP	R0, #13
0x477A	0xD217    BCS	L_vRF4463Init49
;driverrf4463pro.c, 107 :: 		RF_MODEM_AGC_WINDOW_SIZE_9_data[ i ] = RF_MODEM_AGC_WINDOW_SIZE_9_850[ ucRF4463Rate ][ i - 4 ];
0x477C	0xF89D1018  LDRB	R1, [SP, #24]
0x4780	0x48C9    LDR	R0, [PC, #804]
0x4782	0x1843    ADDS	R3, R0, R1
0x4784	0x48C4    LDR	R0, [PC, #784]
0x4786	0x7801    LDRB	R1, [R0, #0]
0x4788	0x2009    MOVS	R0, #9
0x478A	0x4341    MULS	R1, R0, R1
0x478C	0x48C7    LDR	R0, [PC, #796]
0x478E	0x1842    ADDS	R2, R0, R1
0x4790	0xF89D0018  LDRB	R0, [SP, #24]
0x4794	0x1F01    SUBS	R1, R0, #4
0x4796	0xB209    SXTH	R1, R1
0x4798	0x4610    MOV	R0, R2
0x479A	0x1840    ADDS	R0, R0, R1
0x479C	0x7800    LDRB	R0, [R0, #0]
0x479E	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 106 :: 		for ( i = 4; i < 13; i++ ) {
0x47A0	0xF89D0018  LDRB	R0, [SP, #24]
0x47A4	0x1C40    ADDS	R0, R0, #1
0x47A6	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 108 :: 		}
0x47AA	0xE7E3    B	L_vRF4463Init48
L_vRF4463Init49:
;driverrf4463pro.c, 109 :: 		for ( i = 4; i < 13; i++ ) {
0x47AC	0x2004    MOVS	R0, #4
0x47AE	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init51:
0x47B2	0xF89D0018  LDRB	R0, [SP, #24]
0x47B6	0x280D    CMP	R0, #13
0x47B8	0xD217    BCS	L_vRF4463Init52
;driverrf4463pro.c, 110 :: 		RF_MODEM_BCR_OSR_1_9_data[ i ] = RF_MODEM_BCR_OSR_1_9_850[ ucRF4463Rate ][ i - 4 ];
0x47BA	0xF89D1018  LDRB	R1, [SP, #24]
0x47BE	0x48BC    LDR	R0, [PC, #752]
0x47C0	0x1843    ADDS	R3, R0, R1
0x47C2	0x48B5    LDR	R0, [PC, #724]
0x47C4	0x7801    LDRB	R1, [R0, #0]
0x47C6	0x2009    MOVS	R0, #9
0x47C8	0x4341    MULS	R1, R0, R1
0x47CA	0x48BA    LDR	R0, [PC, #744]
0x47CC	0x1842    ADDS	R2, R0, R1
0x47CE	0xF89D0018  LDRB	R0, [SP, #24]
0x47D2	0x1F01    SUBS	R1, R0, #4
0x47D4	0xB209    SXTH	R1, R1
0x47D6	0x4610    MOV	R0, R2
0x47D8	0x1840    ADDS	R0, R0, R1
0x47DA	0x7800    LDRB	R0, [R0, #0]
0x47DC	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 109 :: 		for ( i = 4; i < 13; i++ ) {
0x47DE	0xF89D0018  LDRB	R0, [SP, #24]
0x47E2	0x1C40    ADDS	R0, R0, #1
0x47E4	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 111 :: 		}
0x47E8	0xE7E3    B	L_vRF4463Init51
L_vRF4463Init52:
;driverrf4463pro.c, 112 :: 		}
L_vRF4463Init29:
;driverrf4463pro.c, 113 :: 		for ( i = 4; i < 11; i++ ) {
0x47EA	0x2004    MOVS	R0, #4
0x47EC	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init54:
0x47F0	0xF89D0018  LDRB	R0, [SP, #24]
0x47F4	0x280B    CMP	R0, #11
0x47F6	0xD217    BCS	L_vRF4463Init55
;driverrf4463pro.c, 114 :: 		RF_SYNTH_PFDCP_CPFF_7_data[ i ] = RF_SYNTH_PFDCP_CPFF_7[ ucRF4463Rate ][ i - 4 ];
0x47F8	0xF89D1018  LDRB	R1, [SP, #24]
0x47FC	0x48AE    LDR	R0, [PC, #696]
0x47FE	0x1843    ADDS	R3, R0, R1
0x4800	0x48A5    LDR	R0, [PC, #660]
0x4802	0x7801    LDRB	R1, [R0, #0]
0x4804	0x2007    MOVS	R0, #7
0x4806	0x4341    MULS	R1, R0, R1
0x4808	0x48AC    LDR	R0, [PC, #688]
0x480A	0x1842    ADDS	R2, R0, R1
0x480C	0xF89D0018  LDRB	R0, [SP, #24]
0x4810	0x1F01    SUBS	R1, R0, #4
0x4812	0xB209    SXTH	R1, R1
0x4814	0x4610    MOV	R0, R2
0x4816	0x1840    ADDS	R0, R0, R1
0x4818	0x7800    LDRB	R0, [R0, #0]
0x481A	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 113 :: 		for ( i = 4; i < 11; i++ ) {
0x481C	0xF89D0018  LDRB	R0, [SP, #24]
0x4820	0x1C40    ADDS	R0, R0, #1
0x4822	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 115 :: 		}
0x4826	0xE7E3    B	L_vRF4463Init54
L_vRF4463Init55:
;driverrf4463pro.c, 119 :: 		vRF4463GPIO_SET( ucRF4463Mode );                              // PARAMETRO CONFIGURABLE
0x4828	0x48A5    LDR	R0, [PC, #660]
0x482A	0x7800    LDRB	R0, [R0, #0]
0x482C	0xB401    PUSH	(R0)
0x482E	0xF7FEF90D  BL	_vRF4463GPIO_SET+0
0x4832	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 122 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x4834	0xA801    ADD	R0, SP, #4
0x4836	0x1C01    ADDS	R1, R0, #0
0x4838	0x2011    MOVS	R0, #17
0x483A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 123 :: 		app_command_buf[ 1 ] = 0x00;    // 0x0000
0x483C	0xA801    ADD	R0, SP, #4
0x483E	0x1C41    ADDS	R1, R0, #1
0x4840	0x2000    MOVS	R0, #0
0x4842	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 124 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1 Parameters
0x4844	0xA801    ADD	R0, SP, #4
0x4846	0x1C81    ADDS	R1, R0, #2
0x4848	0x2001    MOVS	R0, #1
0x484A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 125 :: 		app_command_buf[ 3 ] = 0x00;    // 0x0000
0x484C	0xA801    ADD	R0, SP, #4
0x484E	0x1CC1    ADDS	R1, R0, #3
0x4850	0x2000    MOVS	R0, #0
0x4852	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 126 :: 		app_command_buf[ 4 ] = 98;      // freq  adjustment    ( rango desde 0 - 127 Low cap - High Cap )
0x4854	0xA801    ADD	R0, SP, #4
0x4856	0x1D01    ADDS	R1, R0, #4
0x4858	0x2062    MOVS	R0, #98
0x485A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 127 :: 		spi_write( 5, app_command_buf );
0x485C	0xA801    ADD	R0, SP, #4
0x485E	0xB401    PUSH	(R0)
0x4860	0x2005    MOVS	R0, #5
0x4862	0xB401    PUSH	(R0)
0x4864	0xF7FDFAD6  BL	_spi_write+0
0x4868	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 130 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x486A	0xA801    ADD	R0, SP, #4
0x486C	0x1C01    ADDS	R1, R0, #0
0x486E	0x2011    MOVS	R0, #17
0x4870	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 131 :: 		app_command_buf[ 1 ] = 0x00;    // 0x0003
0x4872	0xA801    ADD	R0, SP, #4
0x4874	0x1C41    ADDS	R1, R0, #1
0x4876	0x2000    MOVS	R0, #0
0x4878	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 132 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1 Parameters
0x487A	0xA801    ADD	R0, SP, #4
0x487C	0x1C81    ADDS	R1, R0, #2
0x487E	0x2001    MOVS	R0, #1
0x4880	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 133 :: 		app_command_buf[ 3 ] = 0x03;    // 0x0003
0x4882	0xA801    ADD	R0, SP, #4
0x4884	0x1CC1    ADDS	R1, R0, #3
0x4886	0x2003    MOVS	R0, #3
0x4888	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 134 :: 		app_command_buf[ 4 ] = 0x40;    // tx = rx = 64 byte, ordinary PH,high performance mode  ?????????????????????
0x488A	0xA801    ADD	R0, SP, #4
0x488C	0x1D01    ADDS	R1, R0, #4
0x488E	0x2040    MOVS	R0, #64
0x4890	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 135 :: 		spi_write( 5, app_command_buf );
0x4892	0xA801    ADD	R0, SP, #4
0x4894	0xB401    PUSH	(R0)
0x4896	0x2005    MOVS	R0, #5
0x4898	0xB401    PUSH	(R0)
0x489A	0xF7FDFABB  BL	_spi_write+0
0x489E	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 139 :: 		spi_write( 0x08, RF_FRR_CTL_A_MODE_4_data );    // disable all fast response register
0x48A0	0x4888    LDR	R0, [PC, #544]
0x48A2	0xB401    PUSH	(R0)
0x48A4	0x2008    MOVS	R0, #8
0x48A6	0xB401    PUSH	(R0)
0x48A8	0xF7FDFAB4  BL	_spi_write+0
0x48AC	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 142 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x48AE	0xA801    ADD	R0, SP, #4
0x48B0	0x1C01    ADDS	R1, R0, #0
0x48B2	0x2011    MOVS	R0, #17
0x48B4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 143 :: 		app_command_buf[ 1 ] = 0x10;    // 0x1000
0x48B6	0xA801    ADD	R0, SP, #4
0x48B8	0x1C41    ADDS	R1, R0, #1
0x48BA	0x2010    MOVS	R0, #16
0x48BC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 144 :: 		app_command_buf[ 2 ] = 0x09;    // Total 9 Parameters
0x48BE	0xA801    ADD	R0, SP, #4
0x48C0	0x1C81    ADDS	R1, R0, #2
0x48C2	0x2009    MOVS	R0, #9
0x48C4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 145 :: 		app_command_buf[ 3 ] = 0x00;    // 0x1000
0x48C6	0xA801    ADD	R0, SP, #4
0x48C8	0x1CC1    ADDS	R1, R0, #3
0x48CA	0x2000    MOVS	R0, #0
0x48CC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 147 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x48CE	0x487C    LDR	R0, [PC, #496]
0x48D0	0x7800    LDRB	R0, [R0, #0]
0x48D2	0x2802    CMP	R0, #2
0x48D4	0xD104    BNE	L_vRF4463Init57
;driverrf4463pro.c, 148 :: 		app_command_buf[ 4 ] = 0xff;     //  Need to send 255 bytes of Preamble
0x48D6	0xA801    ADD	R0, SP, #4
0x48D8	0x1D01    ADDS	R1, R0, #4
0x48DA	0x20FF    MOVS	R0, #255
0x48DC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 149 :: 		}
0x48DE	0xE003    B	L_vRF4463Init58
L_vRF4463Init57:
;driverrf4463pro.c, 151 :: 		app_command_buf[ 4 ] = 0x08;   //  Need to send 8 bytes of Preamble
0x48E0	0xA801    ADD	R0, SP, #4
0x48E2	0x1D01    ADDS	R1, R0, #4
0x48E4	0x2008    MOVS	R0, #8
0x48E6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 152 :: 		}
L_vRF4463Init58:
;driverrf4463pro.c, 155 :: 		app_command_buf[ 5 ]   = 0x14;       // To detect 20 bit sync word,
0x48E8	0xA801    ADD	R0, SP, #4
0x48EA	0x1D41    ADDS	R1, R0, #5
0x48EC	0x2014    MOVS	R0, #20
0x48EE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 156 :: 		app_command_buf[ 6 ]   = 0x00;       // Non-standard preamble settings, useless
0x48F0	0xA801    ADD	R0, SP, #4
0x48F2	0x1D81    ADDS	R1, R0, #6
0x48F4	0x2000    MOVS	R0, #0
0x48F6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 157 :: 		app_command_buf[ 7 ]   = 0x0f;       // Time of the preamble Timeout   ????????????????????????????????????????????????????????????
0x48F8	0xA801    ADD	R0, SP, #4
0x48FA	0x1DC1    ADDS	R1, R0, #7
0x48FC	0x200F    MOVS	R0, #15
0x48FE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 158 :: 		app_command_buf[ 8 ]   = 0x31;       // The length of the preamble is   byte Calculation , 1st = 1 NO manchest  Encoding, using standard 1010.??
0x4900	0xA801    ADD	R0, SP, #4
0x4902	0xF2000108  ADDW	R1, R0, #8
0x4906	0x2031    MOVS	R0, #49
0x4908	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 159 :: 		app_command_buf[ 9 ]   = 0x0;        // Non-standard Preamble Patten 4th byte
0x490A	0xA801    ADD	R0, SP, #4
0x490C	0xF2000109  ADDW	R1, R0, #9
0x4910	0x2000    MOVS	R0, #0
0x4912	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 160 :: 		app_command_buf[ 10 ]  = 0x00;       // Non-standard Preamble Patten 3rd byte
0x4914	0xA801    ADD	R0, SP, #4
0x4916	0xF200010A  ADDW	R1, R0, #10
0x491A	0x2000    MOVS	R0, #0
0x491C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 161 :: 		app_command_buf[ 11 ]  = 0x00;       // Non-standard Preamble Patten 2nd byte
0x491E	0xA801    ADD	R0, SP, #4
0x4920	0xF200010B  ADDW	R1, R0, #11
0x4924	0x2000    MOVS	R0, #0
0x4926	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 162 :: 		app_command_buf[ 12 ]  = 0x00;       // Non-standard Preamble Patten 1st byte
0x4928	0xA801    ADD	R0, SP, #4
0x492A	0xF200010C  ADDW	R1, R0, #12
0x492E	0x2000    MOVS	R0, #0
0x4930	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 163 :: 		spi_write(13, app_command_buf);
0x4932	0xA801    ADD	R0, SP, #4
0x4934	0xB401    PUSH	(R0)
0x4936	0x200D    MOVS	R0, #13
0x4938	0xB401    PUSH	(R0)
0x493A	0xF7FDFA6B  BL	_spi_write+0
0x493E	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 166 :: 		app_command_buf[ 0 ] = 0x11;         // SET PROPERTY
0x4940	0xA801    ADD	R0, SP, #4
0x4942	0x1C01    ADDS	R1, R0, #0
0x4944	0x2011    MOVS	R0, #17
0x4946	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 167 :: 		app_command_buf[ 1 ] = 0x11;         // command = 0x1100
0x4948	0xA801    ADD	R0, SP, #4
0x494A	0x1C41    ADDS	R1, R0, #1
0x494C	0x2011    MOVS	R0, #17
0x494E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 168 :: 		app_command_buf[ 2 ] = 0x05;         // Total 5 Parameters
0x4950	0xA801    ADD	R0, SP, #4
0x4952	0x1C81    ADDS	R1, R0, #2
0x4954	0x2005    MOVS	R0, #5
0x4956	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 169 :: 		app_command_buf[ 3 ] = 0x00;         // command = 0x1100
0x4958	0xA801    ADD	R0, SP, #4
0x495A	0x1CC1    ADDS	R1, R0, #3
0x495C	0x2000    MOVS	R0, #0
0x495E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 170 :: 		app_command_buf[ 4 ] = 0x01;         // The synchronization word is defined and sent in the length field, and the synchronization word cannot be wrong,Not 4FSK, not manchest encoding, only 2 bytes
0x4960	0xA801    ADD	R0, SP, #4
0x4962	0x1D01    ADDS	R1, R0, #4
0x4964	0x2001    MOVS	R0, #1
0x4966	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 172 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x4968	0x4855    LDR	R0, [PC, #340]
0x496A	0x7800    LDRB	R0, [R0, #0]
0x496C	0x2802    CMP	R0, #2
0x496E	0xD108    BNE	L_vRF4463Init59
;driverrf4463pro.c, 173 :: 		app_command_buf[ 5 ] = 0x55;      // Sync word 3
0x4970	0xA801    ADD	R0, SP, #4
0x4972	0x1D41    ADDS	R1, R0, #5
0x4974	0x2055    MOVS	R0, #85
0x4976	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 174 :: 		app_command_buf[ 6 ] = 0x55;      // Sync word 2
0x4978	0xA801    ADD	R0, SP, #4
0x497A	0x1D81    ADDS	R1, R0, #6
0x497C	0x2055    MOVS	R0, #85
0x497E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 175 :: 		}
0x4980	0xE007    B	L_vRF4463Init60
L_vRF4463Init59:
;driverrf4463pro.c, 177 :: 		app_command_buf[ 5 ] = 0x2d;    // Sync word 3
0x4982	0xA801    ADD	R0, SP, #4
0x4984	0x1D41    ADDS	R1, R0, #5
0x4986	0x202D    MOVS	R0, #45
0x4988	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 178 :: 		app_command_buf[ 6 ] = 0xd4;    // Sync word 2
0x498A	0xA801    ADD	R0, SP, #4
0x498C	0x1D81    ADDS	R1, R0, #6
0x498E	0x20D4    MOVS	R0, #212
0x4990	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 179 :: 		}
L_vRF4463Init60:
;driverrf4463pro.c, 181 :: 		app_command_buf[ 7 ] = 0x00;         // Sync word 1
0x4992	0xA801    ADD	R0, SP, #4
0x4994	0x1DC1    ADDS	R1, R0, #7
0x4996	0x2000    MOVS	R0, #0
0x4998	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 182 :: 		app_command_buf[ 8 ] = 0x00;         // Sync word 0
0x499A	0xA801    ADD	R0, SP, #4
0x499C	0xF2000108  ADDW	R1, R0, #8
0x49A0	0x2000    MOVS	R0, #0
0x49A2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 183 :: 		spi_write( 9, app_command_buf );
0x49A4	0xA801    ADD	R0, SP, #4
0x49A6	0xB401    PUSH	(R0)
0x49A8	0x2009    MOVS	R0, #9
0x49AA	0xB401    PUSH	(R0)
0x49AC	0xF7FDFA32  BL	_spi_write+0
0x49B0	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 186 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x49B2	0xA801    ADD	R0, SP, #4
0x49B4	0x1C01    ADDS	R1, R0, #0
0x49B6	0x2011    MOVS	R0, #17
0x49B8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 187 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1200
0x49BA	0xA801    ADD	R0, SP, #4
0x49BC	0x1C41    ADDS	R1, R0, #1
0x49BE	0x2012    MOVS	R0, #18
0x49C0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 188 :: 		app_command_buf[ 2 ] = 0x01;        // Total 1 Parameters
0x49C2	0xA801    ADD	R0, SP, #4
0x49C4	0x1C81    ADDS	R1, R0, #2
0x49C6	0x2001    MOVS	R0, #1
0x49C8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 189 :: 		app_command_buf[ 3 ] = 0x00;        // command = 0x1200
0x49CA	0xA801    ADD	R0, SP, #4
0x49CC	0x1CC1    ADDS	R1, R0, #3
0x49CE	0x2000    MOVS	R0, #0
0x49D0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 190 :: 		app_command_buf[ 4 ] = 0x85;        // 1?cRC ??,CRC = itu-c, enable crc   ( original 0x81; )
0x49D2	0xA801    ADD	R0, SP, #4
0x49D4	0x1D01    ADDS	R1, R0, #4
0x49D6	0x2085    MOVS	R0, #133
0x49D8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 191 :: 		spi_write( 5, app_command_buf );
0x49DA	0xA801    ADD	R0, SP, #4
0x49DC	0xB401    PUSH	(R0)
0x49DE	0x2005    MOVS	R0, #5
0x49E0	0xB401    PUSH	(R0)
0x49E2	0xF7FDFA17  BL	_spi_write+0
0x49E6	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 194 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x49E8	0xA801    ADD	R0, SP, #4
0x49EA	0x1C01    ADDS	R1, R0, #0
0x49EC	0x2011    MOVS	R0, #17
0x49EE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 195 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1206
0x49F0	0xA801    ADD	R0, SP, #4
0x49F2	0x1C41    ADDS	R1, R0, #1
0x49F4	0x2012    MOVS	R0, #18
0x49F6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 196 :: 		app_command_buf[ 2 ] = 0x01;        // Total 1Parameters
0x49F8	0xA801    ADD	R0, SP, #4
0x49FA	0x1C81    ADDS	R1, R0, #2
0x49FC	0x2001    MOVS	R0, #1
0x49FE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 197 :: 		app_command_buf[ 3 ] = 0x06;        // command = 0x1206
0x4A00	0xA801    ADD	R0, SP, #4
0x4A02	0x1CC1    ADDS	R1, R0, #3
0x4A04	0x2006    MOVS	R0, #6
0x4A06	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 198 :: 		app_command_buf[ 4 ] = 0x02;        //  tx = rx = 120d--1220 (tx packet,ph enable, not 4fsk, After receiving a packet of data,RX off,CRC Do not flip ,CRC MSB, data MSB
0x4A08	0xA801    ADD	R0, SP, #4
0x4A0A	0x1D01    ADDS	R1, R0, #4
0x4A0C	0x2002    MOVS	R0, #2
0x4A0E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 199 :: 		spi_write( 5, app_command_buf );
0x4A10	0xA801    ADD	R0, SP, #4
0x4A12	0xB401    PUSH	(R0)
0x4A14	0x2005    MOVS	R0, #5
0x4A16	0xB401    PUSH	(R0)
0x4A18	0xF7FDF9FC  BL	_spi_write+0
0x4A1C	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 202 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x4A1E	0xA801    ADD	R0, SP, #4
0x4A20	0x1C01    ADDS	R1, R0, #0
0x4A22	0x2011    MOVS	R0, #17
0x4A24	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 203 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1208
0x4A26	0xA801    ADD	R0, SP, #4
0x4A28	0x1C41    ADDS	R1, R0, #1
0x4A2A	0x2012    MOVS	R0, #18
0x4A2C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 204 :: 		app_command_buf[ 2 ] = 0x03;        // Total 3 Parameters
0x4A2E	0xA801    ADD	R0, SP, #4
0x4A30	0x1C81    ADDS	R1, R0, #2
0x4A32	0x2003    MOVS	R0, #3
0x4A34	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 205 :: 		app_command_buf[ 3 ] = 0x08;        // command = 0x1208
0x4A36	0xA801    ADD	R0, SP, #4
0x4A38	0x1CC1    ADDS	R1, R0, #3
0x4A3A	0x2008    MOVS	R0, #8
0x4A3C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 206 :: 		app_command_buf[ 4 ] = 0x00;        // Length Field = LSB,  length Only 1 byte,length Not put In FiFo, fixed packet length mode
0x4A3E	0xA801    ADD	R0, SP, #4
0x4A40	0x1D01    ADDS	R1, R0, #4
0x4A42	0x2000    MOVS	R0, #0
0x4A44	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 207 :: 		app_command_buf[ 5 ] = 0x00;        // Used for variable packet length mode, which defines which Field contains length Filed
0x4A46	0xA801    ADD	R0, SP, #4
0x4A48	0x1D41    ADDS	R1, R0, #5
0x4A4A	0x2000    MOVS	R0, #0
0x4A4C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 208 :: 		app_command_buf[ 6 ] = 0x00;        // Used for variable packet length mode, adjust the length of variable packet length
0x4A4E	0xA801    ADD	R0, SP, #4
0x4A50	0x1D81    ADDS	R1, R0, #6
0x4A52	0x2000    MOVS	R0, #0
0x4A54	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 209 :: 		spi_write( 7, app_command_buf );
0x4A56	0xA801    ADD	R0, SP, #4
0x4A58	0xB401    PUSH	(R0)
0x4A5A	0x2007    MOVS	R0, #7
0x4A5C	0xB401    PUSH	(R0)
0x4A5E	0xF7FDF9D9  BL	_spi_write+0
0x4A62	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 212 :: 		app_command_buf[ 0 ]  = 0x11;
0x4A64	0xA801    ADD	R0, SP, #4
0x4A66	0x1C01    ADDS	R1, R0, #0
0x4A68	0x2011    MOVS	R0, #17
0x4A6A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 213 :: 		app_command_buf[ 1 ]  = 0x12;   // 0x120d
0x4A6C	0xA801    ADD	R0, SP, #4
0x4A6E	0x1C41    ADDS	R1, R0, #1
0x4A70	0x2012    MOVS	R0, #18
0x4A72	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 214 :: 		app_command_buf[ 2 ]  = 0x0c;   // Total 12 Parameters
0x4A74	0xA801    ADD	R0, SP, #4
0x4A76	0x1C81    ADDS	R1, R0, #2
0x4A78	0x200C    MOVS	R0, #12
0x4A7A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 215 :: 		app_command_buf[ 3 ]  = 0x0d;   // 0x120d
0x4A7C	0xA801    ADD	R0, SP, #4
0x4A7E	0x1CC1    ADDS	R1, R0, #3
0x4A80	0x200D    MOVS	R0, #13
0x4A82	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 218 :: 		app_command_buf[ 4 ]  = 0x00;   // 0x0D  // Field 1 length (?4?)                             // 0x0D
0x4A84	0xA801    ADD	R0, SP, #4
0x4A86	0x1D01    ADDS	R1, R0, #4
0x4A88	0x2000    MOVS	R0, #0
0x4A8A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 219 :: 		app_command_buf[ 5 ]  = payload_length;  // field 1 length, (? 8?), ?Total14???        // 0x0E
0x4A8C	0xA801    ADD	R0, SP, #4
0x4A8E	0x1D41    ADDS	R1, R0, #5
0x4A90	0xF000B81A  B	#52
0x4A94	0x22D92000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x4A98	0x233E2000  	_ucRF4463Rate+0
0x4A9C	0x81DF0000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+0
0x4AA0	0x22E92000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x4AA4	0x815B0000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+0
0x4AA8	0x22F92000  	_RF_MODEM_AGC_WINDOW_SIZE_9_data+0
0x4AAC	0x859B0000  	_RF_MODEM_AGC_WINDOW_SIZE_9_850+0
0x4AB0	0x23062000  	_RF_MODEM_BCR_OSR_1_9_data+0
0x4AB4	0x85380000  	_RF_MODEM_BCR_OSR_1_9_850+0
0x4AB8	0x23132000  	_RF_SYNTH_PFDCP_CPFF_7_data+0
0x4ABC	0x87740000  	_RF_SYNTH_PFDCP_CPFF_7+0
0x4AC0	0x233F2000  	_ucRF4463Mode+0
0x4AC4	0x8A500000  	_RF_FRR_CTL_A_MODE_4_data+0
0x4AC8	0x2042    MOVS	R0, #66
0x4ACA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 220 :: 		app_command_buf[ 6 ]  = 0x04;   // 0x0F  // field 1 Is not 4FSK,manchest, whiting, PN9,       // 0x0F
0x4ACC	0xA801    ADD	R0, SP, #4
0x4ACE	0x1D81    ADDS	R1, R0, #6
0x4AD0	0x2004    MOVS	R0, #4
0x4AD2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 221 :: 		app_command_buf[ 7 ]  = 0xaa;   // 0x10  // field 1 crc enble, check enbale, There are also launchingCRC,cRC?Seed ?CRC_seed?????
0x4AD4	0xA801    ADD	R0, SP, #4
0x4AD6	0x1DC1    ADDS	R1, R0, #7
0x4AD8	0x20AA    MOVS	R0, #170
0x4ADA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 224 :: 		app_command_buf[ 8 ]  = 0x00;   // 0x11  // field 2 length(?4?)
0x4ADC	0xA801    ADD	R0, SP, #4
0x4ADE	0xF2000108  ADDW	R1, R0, #8
0x4AE2	0x2000    MOVS	R0, #0
0x4AE4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 225 :: 		app_command_buf[ 9 ]  = 0x00;   // 0x12  // field 2 length, (? 8?), length = 0 Means thisfield did not use
0x4AE6	0xA801    ADD	R0, SP, #4
0x4AE8	0xF2000109  ADDW	R1, R0, #9
0x4AEC	0x2000    MOVS	R0, #0
0x4AEE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 226 :: 		app_command_buf[ 10 ] = 0x00;   // 0x13  // field 2 Is not 4FSK,manchest, whiting, PN9
0x4AF0	0xA801    ADD	R0, SP, #4
0x4AF2	0xF200010A  ADDW	R1, R0, #10
0x4AF6	0x2000    MOVS	R0, #0
0x4AF8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 227 :: 		app_command_buf[ 11 ] = 0x00;   // 0x14  // field 2 ?CRCSet up
0x4AFA	0xA801    ADD	R0, SP, #4
0x4AFC	0xF200010B  ADDW	R1, R0, #11
0x4B00	0x2000    MOVS	R0, #0
0x4B02	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 230 :: 		app_command_buf[ 12 ] = 0x00;   // 0x15  // field 3 length, (? 8?), length = 0 Means thisfield did not use
0x4B04	0xA801    ADD	R0, SP, #4
0x4B06	0xF200010C  ADDW	R1, R0, #12
0x4B0A	0x2000    MOVS	R0, #0
0x4B0C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 231 :: 		app_command_buf[ 13 ] = 0x00;   // 0x16  // field 3 length, (? 8?), length = 0 Means thisfield did not use
0x4B0E	0xA801    ADD	R0, SP, #4
0x4B10	0xF200010D  ADDW	R1, R0, #13
0x4B14	0x2000    MOVS	R0, #0
0x4B16	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 232 :: 		app_command_buf[ 14 ] = 0x00;   // 0x17  // field 3 Is not 4FSK,manchest, whiting, PN9
0x4B18	0xA801    ADD	R0, SP, #4
0x4B1A	0xF200010E  ADDW	R1, R0, #14
0x4B1E	0x2000    MOVS	R0, #0
0x4B20	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 233 :: 		app_command_buf[ 15 ] = 0x00;   // 0x18  // field 3 ?CRCSet up
0x4B22	0xA801    ADD	R0, SP, #4
0x4B24	0xF200010F  ADDW	R1, R0, #15
0x4B28	0x2000    MOVS	R0, #0
0x4B2A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 234 :: 		spi_write( 16, app_command_buf );
0x4B2C	0xA801    ADD	R0, SP, #4
0x4B2E	0xB401    PUSH	(R0)
0x4B30	0x2010    MOVS	R0, #16
0x4B32	0xB401    PUSH	(R0)
0x4B34	0xF7FDF96E  BL	_spi_write+0
0x4B38	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 237 :: 		app_command_buf[ 0 ]  = 0x11;
0x4B3A	0xA801    ADD	R0, SP, #4
0x4B3C	0x1C01    ADDS	R1, R0, #0
0x4B3E	0x2011    MOVS	R0, #17
0x4B40	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 238 :: 		app_command_buf[ 1 ]  = 0x12;       // 0x1219
0x4B42	0xA801    ADD	R0, SP, #4
0x4B44	0x1C41    ADDS	R1, R0, #1
0x4B46	0x2012    MOVS	R0, #18
0x4B48	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 239 :: 		app_command_buf[ 2 ]  = 0x08;       // Total 8Parameters
0x4B4A	0xA801    ADD	R0, SP, #4
0x4B4C	0x1C81    ADDS	R1, R0, #2
0x4B4E	0x2008    MOVS	R0, #8
0x4B50	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 240 :: 		app_command_buf[ 3 ]  = 0x19;       // 0x1219
0x4B52	0xA801    ADD	R0, SP, #4
0x4B54	0x1CC1    ADDS	R1, R0, #3
0x4B56	0x2019    MOVS	R0, #25
0x4B58	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 241 :: 		app_command_buf[ 4 ]  = 0x00;       // field4 length(?4?)
0x4B5A	0xA801    ADD	R0, SP, #4
0x4B5C	0x1D01    ADDS	R1, R0, #4
0x4B5E	0x2000    MOVS	R0, #0
0x4B60	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 242 :: 		app_command_buf[ 5 ]  = 0x00;       // field 4 length, (? 8?), length = 0 Means this field did not use
0x4B62	0xA801    ADD	R0, SP, #4
0x4B64	0x1D41    ADDS	R1, R0, #5
0x4B66	0x2000    MOVS	R0, #0
0x4B68	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 243 :: 		app_command_buf[ 6 ]  = 0x00;       // field 4 Is not 4FSK,manchest, whiting, PN9
0x4B6A	0xA801    ADD	R0, SP, #4
0x4B6C	0x1D81    ADDS	R1, R0, #6
0x4B6E	0x2000    MOVS	R0, #0
0x4B70	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 244 :: 		app_command_buf[ 7 ]  = 0x00;       // field 4 ?CRCSet up
0x4B72	0xA801    ADD	R0, SP, #4
0x4B74	0x1DC1    ADDS	R1, R0, #7
0x4B76	0x2000    MOVS	R0, #0
0x4B78	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 245 :: 		app_command_buf[ 8 ]  = 0x00;       // field5 length(?4?)
0x4B7A	0xA801    ADD	R0, SP, #4
0x4B7C	0xF2000108  ADDW	R1, R0, #8
0x4B80	0x2000    MOVS	R0, #0
0x4B82	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 246 :: 		app_command_buf[ 9 ]  = 0x00;       // field 5 length, (? 8?), length = 0 Means this field did not use
0x4B84	0xA801    ADD	R0, SP, #4
0x4B86	0xF2000109  ADDW	R1, R0, #9
0x4B8A	0x2000    MOVS	R0, #0
0x4B8C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 247 :: 		app_command_buf[ 10 ] = 0x00;       // field 5 Is not 4FSK,manchest, whiting, PN9
0x4B8E	0xA801    ADD	R0, SP, #4
0x4B90	0xF200010A  ADDW	R1, R0, #10
0x4B94	0x2000    MOVS	R0, #0
0x4B96	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 248 :: 		app_command_buf[ 11 ] = 0x00;       // field 5 ?CRCSet up
0x4B98	0xA801    ADD	R0, SP, #4
0x4B9A	0xF200010B  ADDW	R1, R0, #11
0x4B9E	0x2000    MOVS	R0, #0
0x4BA0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 249 :: 		spi_write( 12, app_command_buf );
0x4BA2	0xA801    ADD	R0, SP, #4
0x4BA4	0xB401    PUSH	(R0)
0x4BA6	0x200C    MOVS	R0, #12
0x4BA8	0xB401    PUSH	(R0)
0x4BAA	0xF7FDF933  BL	_spi_write+0
0x4BAE	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 252 :: 		spi_write( 0x10, RF_MODEM_MOD_TYPE_12_data );   // //  2FSK ,  module source = PH fifo, disable manchest, tx, rx Do not flip, deviation Do not flip
0x4BB0	0x48B2    LDR	R0, [PC, #712]
0x4BB2	0xB401    PUSH	(R0)
0x4BB4	0x2010    MOVS	R0, #16
0x4BB6	0xB401    PUSH	(R0)
0x4BB8	0xF7FDF92C  BL	_spi_write+0
0x4BBC	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 255 :: 		app_command_buf[0]  = 0x11;
0x4BBE	0xA801    ADD	R0, SP, #4
0x4BC0	0x1C01    ADDS	R1, R0, #0
0x4BC2	0x2011    MOVS	R0, #17
0x4BC4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 256 :: 		app_command_buf[1]  = 0x20;    // 0x200c
0x4BC6	0xA801    ADD	R0, SP, #4
0x4BC8	0x1C41    ADDS	R1, R0, #1
0x4BCA	0x2020    MOVS	R0, #32
0x4BCC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 257 :: 		app_command_buf[2]  = 0x01;    // Total 1Parameters
0x4BCE	0xA801    ADD	R0, SP, #4
0x4BD0	0x1C81    ADDS	R1, R0, #2
0x4BD2	0x2001    MOVS	R0, #1
0x4BD4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 258 :: 		app_command_buf[3]  = 0x0c;    // 0x200c
0x4BD6	0xA801    ADD	R0, SP, #4
0x4BD8	0x1CC1    ADDS	R1, R0, #3
0x4BDA	0x200C    MOVS	R0, #12
0x4BDC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 260 :: 		if ( ucRF4463Freq3 < 8 ) {
0x4BDE	0x48A8    LDR	R0, [PC, #672]
0x4BE0	0x7800    LDRB	R0, [R0, #0]
0x4BE2	0x2808    CMP	R0, #8
0x4BE4	0xD216    BCS	L_vRF4463Init61
;driverrf4463pro.c, 261 :: 		if ( ucRF4463Rate >= dr_256k ) {
0x4BE6	0x48A7    LDR	R0, [PC, #668]
0x4BE8	0x7800    LDRB	R0, [R0, #0]
0x4BEA	0x2808    CMP	R0, #8
0x4BEC	0xD304    BCC	L_vRF4463Init62
;driverrf4463pro.c, 262 :: 		app_command_buf[ 4 ] = 0x4f;
0x4BEE	0xA801    ADD	R0, SP, #4
0x4BF0	0x1D01    ADDS	R1, R0, #4
0x4BF2	0x204F    MOVS	R0, #79
0x4BF4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 263 :: 		}
0x4BF6	0xE00C    B	L_vRF4463Init63
L_vRF4463Init62:
;driverrf4463pro.c, 264 :: 		else if ( ucRF4463Rate >= dr_19p2 ) {
0x4BF8	0x48A2    LDR	R0, [PC, #648]
0x4BFA	0x7800    LDRB	R0, [R0, #0]
0x4BFC	0x2804    CMP	R0, #4
0x4BFE	0xD304    BCC	L_vRF4463Init64
;driverrf4463pro.c, 265 :: 		app_command_buf[ 4 ]  = 0x5e;
0x4C00	0xA801    ADD	R0, SP, #4
0x4C02	0x1D01    ADDS	R1, R0, #4
0x4C04	0x205E    MOVS	R0, #94
0x4C06	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 266 :: 		}
0x4C08	0xE003    B	L_vRF4463Init65
L_vRF4463Init64:
;driverrf4463pro.c, 268 :: 		app_command_buf[ 4 ]  = 0xd2;
0x4C0A	0xA801    ADD	R0, SP, #4
0x4C0C	0x1D01    ADDS	R1, R0, #4
0x4C0E	0x20D2    MOVS	R0, #210
0x4C10	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 269 :: 		}
L_vRF4463Init65:
L_vRF4463Init63:
;driverrf4463pro.c, 270 :: 		}
0x4C12	0xE015    B	L_vRF4463Init66
L_vRF4463Init61:
;driverrf4463pro.c, 272 :: 		if ( ucRF4463Rate >= dr_115p2 ) {
0x4C14	0x489B    LDR	R0, [PC, #620]
0x4C16	0x7800    LDRB	R0, [R0, #0]
0x4C18	0x2807    CMP	R0, #7
0x4C1A	0xD304    BCC	L_vRF4463Init67
;driverrf4463pro.c, 273 :: 		app_command_buf[ 4 ]  = 0x69;        // 15k
0x4C1C	0xA801    ADD	R0, SP, #4
0x4C1E	0x1D01    ADDS	R1, R0, #4
0x4C20	0x2069    MOVS	R0, #105
0x4C22	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 274 :: 		}
0x4C24	0xE00C    B	L_vRF4463Init68
L_vRF4463Init67:
;driverrf4463pro.c, 275 :: 		else if ( ucRF4463Rate >= dr_19p2 ) {
0x4C26	0x4897    LDR	R0, [PC, #604]
0x4C28	0x7800    LDRB	R0, [R0, #0]
0x4C2A	0x2804    CMP	R0, #4
0x4C2C	0xD304    BCC	L_vRF4463Init69
;driverrf4463pro.c, 276 :: 		app_command_buf[ 4 ]  = 0x5e;        // 10k
0x4C2E	0xA801    ADD	R0, SP, #4
0x4C30	0x1D01    ADDS	R1, R0, #4
0x4C32	0x205E    MOVS	R0, #94
0x4C34	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 277 :: 		}
0x4C36	0xE003    B	L_vRF4463Init70
L_vRF4463Init69:
;driverrf4463pro.c, 279 :: 		app_command_buf[ 4 ]  = 0x18; // 8k
0x4C38	0xA801    ADD	R0, SP, #4
0x4C3A	0x1D01    ADDS	R1, R0, #4
0x4C3C	0x2018    MOVS	R0, #24
0x4C3E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 280 :: 		}
L_vRF4463Init70:
L_vRF4463Init68:
;driverrf4463pro.c, 281 :: 		}
L_vRF4463Init66:
;driverrf4463pro.c, 282 :: 		spi_write( 5, app_command_buf );
0x4C40	0xA801    ADD	R0, SP, #4
0x4C42	0xB401    PUSH	(R0)
0x4C44	0x2005    MOVS	R0, #5
0x4C46	0xB401    PUSH	(R0)
0x4C48	0xF7FDF8E4  BL	_spi_write+0
0x4C4C	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 285 :: 		spi_write( 0x0C, RF_MODEM_TX_RAMP_DELAY_8_data );            // Without this Parameters,Not needed
0x4C4E	0x488E    LDR	R0, [PC, #568]
0x4C50	0xB401    PUSH	(R0)
0x4C52	0x200C    MOVS	R0, #12
0x4C54	0xB401    PUSH	(R0)
0x4C56	0xF7FDF8DD  BL	_spi_write+0
0x4C5A	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 286 :: 		spi_write( 0x0D, RF_MODEM_BCR_OSR_1_9_data );                // Without this Parameters,Not needed
0x4C5C	0x488B    LDR	R0, [PC, #556]
0x4C5E	0xB401    PUSH	(R0)
0x4C60	0x200D    MOVS	R0, #13
0x4C62	0xB401    PUSH	(R0)
0x4C64	0xF7FDF8D6  BL	_spi_write+0
0x4C68	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 287 :: 		spi_write( 0x0B, RF_MODEM_AFC_GEAR_7_data );                // Without this Parameters,Not needed
0x4C6A	0x4889    LDR	R0, [PC, #548]
0x4C6C	0xB401    PUSH	(R0)
0x4C6E	0x200B    MOVS	R0, #11
0x4C70	0xB401    PUSH	(R0)
0x4C72	0xF7FDF8CF  BL	_spi_write+0
0x4C76	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 288 :: 		spi_write( 0x05, RF_MODEM_AGC_CONTROL_1_data );                // Without this Parameters,Not needed
0x4C78	0x4886    LDR	R0, [PC, #536]
0x4C7A	0xB401    PUSH	(R0)
0x4C7C	0x2005    MOVS	R0, #5
0x4C7E	0xB401    PUSH	(R0)
0x4C80	0xF7FDF8C8  BL	_spi_write+0
0x4C84	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 289 :: 		spi_write( 0x0D, RF_MODEM_AGC_WINDOW_SIZE_9_data );        // Without this Parameters,Not needed
0x4C86	0x4884    LDR	R0, [PC, #528]
0x4C88	0xB401    PUSH	(R0)
0x4C8A	0x200D    MOVS	R0, #13
0x4C8C	0xB401    PUSH	(R0)
0x4C8E	0xF7FDF8C1  BL	_spi_write+0
0x4C92	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 290 :: 		spi_write( 0x0F, RF_MODEM_OOK_CNT1_11_data );                // Without this Parameters,Not needed
0x4C94	0x4881    LDR	R0, [PC, #516]
0x4C96	0xB401    PUSH	(R0)
0x4C98	0x200F    MOVS	R0, #15
0x4C9A	0xB401    PUSH	(R0)
0x4C9C	0xF7FDF8BA  BL	_spi_write+0
0x4CA0	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 293 :: 		app_command_buf[ 0 ] = 0x11;
0x4CA2	0xA801    ADD	R0, SP, #4
0x4CA4	0x1C01    ADDS	R1, R0, #0
0x4CA6	0x2011    MOVS	R0, #17
0x4CA8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 294 :: 		app_command_buf[ 1 ] = 0x20;    // 0x204e
0x4CAA	0xA801    ADD	R0, SP, #4
0x4CAC	0x1C41    ADDS	R1, R0, #1
0x4CAE	0x2020    MOVS	R0, #32
0x4CB0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 295 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1Parameters
0x4CB2	0xA801    ADD	R0, SP, #4
0x4CB4	0x1C81    ADDS	R1, R0, #2
0x4CB6	0x2001    MOVS	R0, #1
0x4CB8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 296 :: 		app_command_buf[ 3 ] = 0x4e;    // 0x204e
0x4CBA	0xA801    ADD	R0, SP, #4
0x4CBC	0x1CC1    ADDS	R1, R0, #3
0x4CBE	0x204E    MOVS	R0, #78
0x4CC0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 298 :: 		if ( ucRF4463Rate == dr_500 ) {
0x4CC2	0x4870    LDR	R0, [PC, #448]
0x4CC4	0x7800    LDRB	R0, [R0, #0]
0x4CC6	0x280A    CMP	R0, #10
0x4CC8	0xD104    BNE	L_vRF4463Init71
;driverrf4463pro.c, 299 :: 		app_command_buf[ 4 ] = 0x3a;
0x4CCA	0xA801    ADD	R0, SP, #4
0x4CCC	0x1D01    ADDS	R1, R0, #4
0x4CCE	0x203A    MOVS	R0, #58
0x4CD0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 300 :: 		}
0x4CD2	0xE003    B	L_vRF4463Init72
L_vRF4463Init71:
;driverrf4463pro.c, 302 :: 		app_command_buf[ 4 ] = 0x40;  //  rssi Reading deviation, the difference with the true value
0x4CD4	0xA801    ADD	R0, SP, #4
0x4CD6	0x1D01    ADDS	R1, R0, #4
0x4CD8	0x2040    MOVS	R0, #64
0x4CDA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 303 :: 		}
L_vRF4463Init72:
;driverrf4463pro.c, 304 :: 		spi_write( 5, app_command_buf );
0x4CDC	0xA801    ADD	R0, SP, #4
0x4CDE	0xB401    PUSH	(R0)
0x4CE0	0x2005    MOVS	R0, #5
0x4CE2	0xB401    PUSH	(R0)
0x4CE4	0xF7FDF896  BL	_spi_write+0
0x4CE8	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 307 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data );  // Without this Parameters,Not needed
0x4CEA	0x486D    LDR	R0, [PC, #436]
0x4CEC	0xB401    PUSH	(R0)
0x4CEE	0x2010    MOVS	R0, #16
0x4CF0	0xB401    PUSH	(R0)
0x4CF2	0xF7FDF88F  BL	_spi_write+0
0x4CF6	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 308 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data );   // Without this Parameters,Not needed
0x4CF8	0x486A    LDR	R0, [PC, #424]
0x4CFA	0xB401    PUSH	(R0)
0x4CFC	0x2010    MOVS	R0, #16
0x4CFE	0xB401    PUSH	(R0)
0x4D00	0xF7FDF888  BL	_spi_write+0
0x4D04	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 309 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data );   // Without this Parameters,Not needed
0x4D06	0x4868    LDR	R0, [PC, #416]
0x4D08	0xB401    PUSH	(R0)
0x4D0A	0x2010    MOVS	R0, #16
0x4D0C	0xB401    PUSH	(R0)
0x4D0E	0xF7FDF881  BL	_spi_write+0
0x4D12	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 312 :: 		app_command_buf[ 0 ]  = 0x11;
0x4D14	0xA801    ADD	R0, SP, #4
0x4D16	0x1C01    ADDS	R1, R0, #0
0x4D18	0x2011    MOVS	R0, #17
0x4D1A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 313 :: 		app_command_buf[ 1 ]  = 0x22;    // 0x2200
0x4D1C	0xA801    ADD	R0, SP, #4
0x4D1E	0x1C41    ADDS	R1, R0, #1
0x4D20	0x2022    MOVS	R0, #34
0x4D22	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 314 :: 		app_command_buf[ 2 ]  = 0x04;    // Total 4Parameters
0x4D24	0xA801    ADD	R0, SP, #4
0x4D26	0x1C81    ADDS	R1, R0, #2
0x4D28	0x2004    MOVS	R0, #4
0x4D2A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 315 :: 		app_command_buf[ 3 ]  = 0x00;   // 0x2200
0x4D2C	0xA801    ADD	R0, SP, #4
0x4D2E	0x1CC1    ADDS	R1, R0, #3
0x4D30	0x2000    MOVS	R0, #0
0x4D32	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 316 :: 		app_command_buf[ 4 ]  = 0x08;  //0x10;   //   PA mode  = default , ??Class E mode,?Is not Switch Current mode  ????????
0x4D34	0xA801    ADD	R0, SP, #4
0x4D36	0x1D01    ADDS	R1, R0, #4
0x4D38	0x2008    MOVS	R0, #8
0x4D3A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 318 :: 		if ( ucRF4463Power > 0 || ucRF4463Power < 127 ) {
0x4D3C	0x485B    LDR	R0, [PC, #364]
0x4D3E	0x7800    LDRB	R0, [R0, #0]
0x4D40	0x2800    CMP	R0, #0
0x4D42	0xD804    BHI	L__vRF4463Init456
0x4D44	0x4859    LDR	R0, [PC, #356]
0x4D46	0x7800    LDRB	R0, [R0, #0]
0x4D48	0x287F    CMP	R0, #127
0x4D4A	0xD300    BCC	L__vRF4463Init456
0x4D4C	0xE005    B	L_vRF4463Init75
L__vRF4463Init456:
;driverrf4463pro.c, 319 :: 		app_command_buf[ 5 ]  = ucRF4463Power;   //  Set to maximum power
0x4D4E	0xA801    ADD	R0, SP, #4
0x4D50	0x1D41    ADDS	R1, R0, #5
0x4D52	0x4856    LDR	R0, [PC, #344]
0x4D54	0x7800    LDRB	R0, [R0, #0]
0x4D56	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 320 :: 		}
0x4D58	0xE003    B	L_vRF4463Init76
L_vRF4463Init75:
;driverrf4463pro.c, 322 :: 		app_command_buf[ 5 ]  = 127;
0x4D5A	0xA801    ADD	R0, SP, #4
0x4D5C	0x1D41    ADDS	R1, R0, #5
0x4D5E	0x207F    MOVS	R0, #127
0x4D60	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 323 :: 		}
L_vRF4463Init76:
;driverrf4463pro.c, 325 :: 		app_command_buf[ 6 ] = 0x00; //???????? 0x00;   // CLK duty = 50%, other = Default
0x4D62	0xA801    ADD	R0, SP, #4
0x4D64	0x1D81    ADDS	R1, R0, #6
0x4D66	0x2000    MOVS	R0, #0
0x4D68	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 327 :: 		if ( ( ucRF4463Rate <= dr_115p2 )||( ucRF4463Rate == dr_500 ) ) {
0x4D6A	0x4846    LDR	R0, [PC, #280]
0x4D6C	0x7800    LDRB	R0, [R0, #0]
0x4D6E	0x2807    CMP	R0, #7
0x4D70	0xD904    BLS	L__vRF4463Init455
0x4D72	0x4844    LDR	R0, [PC, #272]
0x4D74	0x7800    LDRB	R0, [R0, #0]
0x4D76	0x280A    CMP	R0, #10
0x4D78	0xD000    BEQ	L__vRF4463Init455
0x4D7A	0xE004    B	L_vRF4463Init79
L__vRF4463Init455:
;driverrf4463pro.c, 328 :: 		app_command_buf[ 7 ]  = 0x3d;  // ???????? 0x5d;   // PA ramp time = default
0x4D7C	0xA801    ADD	R0, SP, #4
0x4D7E	0x1DC1    ADDS	R1, R0, #7
0x4D80	0x203D    MOVS	R0, #61
0x4D82	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 329 :: 		}
0x4D84	0xE003    B	L_vRF4463Init80
L_vRF4463Init79:
;driverrf4463pro.c, 331 :: 		app_command_buf[ 7 ]  = 0x5d;
0x4D86	0xA801    ADD	R0, SP, #4
0x4D88	0x1DC1    ADDS	R1, R0, #7
0x4D8A	0x205D    MOVS	R0, #93
0x4D8C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 332 :: 		}
L_vRF4463Init80:
;driverrf4463pro.c, 333 :: 		spi_write( 8, app_command_buf );
0x4D8E	0xA801    ADD	R0, SP, #4
0x4D90	0xB401    PUSH	(R0)
0x4D92	0x2008    MOVS	R0, #8
0x4D94	0xB401    PUSH	(R0)
0x4D96	0xF7FDF83D  BL	_spi_write+0
0x4D9A	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 337 :: 		spi_write( 0x0B , RF_SYNTH_PFDCP_CPFF_7_data );      // Without this Parameters,Not needed
0x4D9C	0x4844    LDR	R0, [PC, #272]
0x4D9E	0xB401    PUSH	(R0)
0x4DA0	0x200B    MOVS	R0, #11
0x4DA2	0xB401    PUSH	(R0)
0x4DA4	0xF7FDF836  BL	_spi_write+0
0x4DA8	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 340 :: 		if ( ucRF4463MatchEnabled ) {
0x4DAA	0x4842    LDR	R0, [PC, #264]
0x4DAC	0x7800    LDRB	R0, [R0, #0]
0x4DAE	0x2800    CMP	R0, #0
0x4DB0	0xF000805E  BEQ	L_vRF4463Init81
;driverrf4463pro.c, 341 :: 		app_command_buf[ 0 ]  = 0x11;               // SetProperty
0x4DB4	0xA801    ADD	R0, SP, #4
0x4DB6	0x1C01    ADDS	R1, R0, #0
0x4DB8	0x2011    MOVS	R0, #17
0x4DBA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 342 :: 		app_command_buf[ 1 ]  = 0x30;               // 0x30 group
0x4DBC	0xA801    ADD	R0, SP, #4
0x4DBE	0x1C41    ADDS	R1, R0, #1
0x4DC0	0x2030    MOVS	R0, #48
0x4DC2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 343 :: 		app_command_buf[ 2 ]  = 0x0c;               // Total 12 Parameters
0x4DC4	0xA801    ADD	R0, SP, #4
0x4DC6	0x1C81    ADDS	R1, R0, #2
0x4DC8	0x200C    MOVS	R0, #12
0x4DCA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 344 :: 		app_command_buf[ 3 ]  = 0x00;               // 0x00 Index
0x4DCC	0xA801    ADD	R0, SP, #4
0x4DCE	0x1CC1    ADDS	R1, R0, #3
0x4DD0	0x2000    MOVS	R0, #0
0x4DD2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 345 :: 		app_command_buf[ 4 ]  = ucRF4463ByteMatch1; // match 1 Value of
0x4DD4	0xA801    ADD	R0, SP, #4
0x4DD6	0x1D01    ADDS	R1, R0, #4
0x4DD8	0x4837    LDR	R0, [PC, #220]
0x4DDA	0x7800    LDRB	R0, [R0, #0]
0x4DDC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 346 :: 		app_command_buf[ 5 ]  = ucRF4463ByteMask1;  // match 1 mask
0x4DDE	0xA801    ADD	R0, SP, #4
0x4DE0	0x1D41    ADDS	R1, R0, #5
0x4DE2	0x4836    LDR	R0, [PC, #216]
0x4DE4	0x7800    LDRB	R0, [R0, #0]
0x4DE6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 347 :: 		app_command_buf[ 6 ]  = ucRF4463MatchEnableReg; //  0x40; // enable match 1, match 1 The distance between the value of and the synchronization word, 0 = match
0x4DE8	0xA801    ADD	R0, SP, #4
0x4DEA	0x1D81    ADDS	R1, R0, #6
0x4DEC	0x4834    LDR	R0, [PC, #208]
0x4DEE	0x7800    LDRB	R0, [R0, #0]
0x4DF0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 348 :: 		app_command_buf[ 7 ]  = ucRF4463ByteMatch2; // match 2 Value of
0x4DF2	0xA801    ADD	R0, SP, #4
0x4DF4	0x1DC1    ADDS	R1, R0, #7
0x4DF6	0x4833    LDR	R0, [PC, #204]
0x4DF8	0x7800    LDRB	R0, [R0, #0]
0x4DFA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 349 :: 		app_command_buf[ 8 ]  = ucRF4463ByteMask2;  // match 2 mask
0x4DFC	0xA801    ADD	R0, SP, #4
0x4DFE	0xF2000108  ADDW	R1, R0, #8
0x4E02	0x4831    LDR	R0, [PC, #196]
0x4E04	0x7800    LDRB	R0, [R0, #0]
0x4E06	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 350 :: 		app_command_buf[ 9 ]  = 0x01;               // enable match 2, match 2 The distance between the value of and the synchronization word  , and function
0x4E08	0xA801    ADD	R0, SP, #4
0x4E0A	0xF2000109  ADDW	R1, R0, #9
0x4E0E	0x2001    MOVS	R0, #1
0x4E10	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 351 :: 		app_command_buf[ 10 ] = ucRF4463ByteMatch3; // match 3 Value of
0x4E12	0xA801    ADD	R0, SP, #4
0x4E14	0xF200010A  ADDW	R1, R0, #10
0x4E18	0x482C    LDR	R0, [PC, #176]
0x4E1A	0x7800    LDRB	R0, [R0, #0]
0x4E1C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 352 :: 		app_command_buf[ 11 ] = ucRF4463ByteMask3;  // match 3 mask
0x4E1E	0xA801    ADD	R0, SP, #4
0x4E20	0xF200010B  ADDW	R1, R0, #11
0x4E24	0x482A    LDR	R0, [PC, #168]
0x4E26	0x7800    LDRB	R0, [R0, #0]
0x4E28	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 353 :: 		app_command_buf[ 12 ] = 0x02;;              // enable match 3, match 3 The distance between the value of and the synchronization word    and function
0x4E2A	0xA801    ADD	R0, SP, #4
0x4E2C	0xF200010C  ADDW	R1, R0, #12
0x4E30	0x2002    MOVS	R0, #2
0x4E32	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 354 :: 		app_command_buf[ 13 ] = ucRF4463ByteMatch4; // match 4 Value of
0x4E34	0xA801    ADD	R0, SP, #4
0x4E36	0xF200010D  ADDW	R1, R0, #13
0x4E3A	0x4826    LDR	R0, [PC, #152]
0x4E3C	0x7800    LDRB	R0, [R0, #0]
0x4E3E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 355 :: 		app_command_buf[ 14 ] = ucRF4463ByteMask4;  // match 4 mask
0x4E40	0xA801    ADD	R0, SP, #4
0x4E42	0xF200010E  ADDW	R1, R0, #14
0x4E46	0x4824    LDR	R0, [PC, #144]
0x4E48	0x7800    LDRB	R0, [R0, #0]
0x4E4A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 356 :: 		app_command_buf[ 15 ] = 0x03;               // enable match 4, match 4 The distance between the value of and the synchronization word    and function
0x4E4C	0xA801    ADD	R0, SP, #4
0x4E4E	0xF200010F  ADDW	R1, R0, #15
0x4E52	0x2003    MOVS	R0, #3
0x4E54	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 357 :: 		spi_write( 16, app_command_buf );
0x4E56	0xA801    ADD	R0, SP, #4
0x4E58	0xB401    PUSH	(R0)
0x4E5A	0x2010    MOVS	R0, #16
0x4E5C	0xB401    PUSH	(R0)
0x4E5E	0xF7FCFFD9  BL	_spi_write+0
0x4E62	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 359 :: 		if ( ucRF4463MatchEnableReg == 0x00 ) {
0x4E64	0x4816    LDR	R0, [PC, #88]
0x4E66	0x7800    LDRB	R0, [R0, #0]
0x4E68	0xB910    CBNZ	R0, L_vRF4463Init82
;driverrf4463pro.c, 360 :: 		ucRF4463MatchEnabled = 0;                // deshabilita el Match
0x4E6A	0x2100    MOVS	R1, #0
0x4E6C	0x4811    LDR	R0, [PC, #68]
0x4E6E	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 361 :: 		}
L_vRF4463Init82:
;driverrf4463pro.c, 380 :: 		}
L_vRF4463Init81:
;driverrf4463pro.c, 383 :: 		rf_init_freq();     // FUNCION DE FRECUENCIA ( REVISAR PARAMETROS )
0x4E70	0xF7FEF846  BL	_rf_init_freq+0
;driverrf4463pro.c, 384 :: 		}
L_end_vRF4463Init:
0x4E74	0xF8DDE000  LDR	LR, [SP, #0]
0x4E78	0xB007    ADD	SP, SP, #28
0x4E7A	0x4770    BX	LR
0x4E7C	0x22912000  	_RF_MODEM_MOD_TYPE_12_data+0
0x4E80	0x23372000  	_ucRF4463Freq3+0
0x4E84	0x233E2000  	_ucRF4463Rate+0
0x4E88	0x22A12000  	_RF_MODEM_TX_RAMP_DELAY_8_data+0
0x4E8C	0x23062000  	_RF_MODEM_BCR_OSR_1_9_data+0
0x4E90	0x22AD2000  	_RF_MODEM_AFC_GEAR_7_data+0
0x4E94	0x8A5F0000  	_RF_MODEM_AGC_CONTROL_1_data+0
0x4E98	0x22F92000  	_RF_MODEM_AGC_WINDOW_SIZE_9_data+0
0x4E9C	0x22BA2000  	_RF_MODEM_OOK_CNT1_11_data+0
0x4EA0	0x22C92000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+0
0x4EA4	0x22D92000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x4EA8	0x22E92000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x4EAC	0x23362000  	_ucRF4463Power+0
0x4EB0	0x23132000  	_RF_SYNTH_PFDCP_CPFF_7_data+0
0x4EB4	0x220C2000  	_ucRF4463MatchEnabled+0
0x4EB8	0x220B2000  	_ucRF4463ByteMatch1+0
0x4EBC	0x22402000  	_ucRF4463ByteMask1+0
0x4EC0	0x220D2000  	_ucRF4463MatchEnableReg+0
0x4EC4	0x221A2000  	_ucRF4463ByteMatch2+0
0x4EC8	0x224C2000  	_ucRF4463ByteMask2+0
0x4ECC	0x22272000  	_ucRF4463ByteMatch3+0
0x4ED0	0x22582000  	_ucRF4463ByteMask3+0
0x4ED4	0x22342000  	_ucRF4463ByteMatch4+0
0x4ED8	0x22642000  	_ucRF4463ByteMask4+0
; end of _vRF4463Init
_vRF4463GPIO_SET:
;driverrf4463pro.c, 401 :: 		void vRF4463GPIO_SET( unsigned char ucData ) {
0x2A4C	0xB083    SUB	SP, SP, #12
0x2A4E	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 404 :: 		ucAppCommandBuf[0] = 0x13;     // gpio Set up
0x2A52	0xA801    ADD	R0, SP, #4
0x2A54	0x1C01    ADDS	R1, R0, #0
0x2A56	0x2013    MOVS	R0, #19
0x2A58	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 406 :: 		switch ( ucData ) {
0x2A5A	0xE023    B	L_vRF4463GPIO_SET86
;driverrf4463pro.c, 407 :: 		case tx_normal:
L_vRF4463GPIO_SET88:
;driverrf4463pro.c, 408 :: 		case rx_normal: ucAppCommandBuf[ 1 ] = 3;                 // GPIO0=1
L_vRF4463GPIO_SET89:
0x2A5C	0xA801    ADD	R0, SP, #4
0x2A5E	0x1C41    ADDS	R1, R0, #1
0x2A60	0x2003    MOVS	R0, #3
0x2A62	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 409 :: 		ucAppCommandBuf[ 2 ] = 2;                // GPIO1=0
0x2A64	0xA801    ADD	R0, SP, #4
0x2A66	0x1C81    ADDS	R1, R0, #2
0x2A68	0x2002    MOVS	R0, #2
0x2A6A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 410 :: 		break;
0x2A6C	0xE02E    B	L_vRF4463GPIO_SET87
;driverrf4463pro.c, 412 :: 		case tx_test:   ucAppCommandBuf[ 1 ] = 3;                 // GPIO0=1
L_vRF4463GPIO_SET90:
0x2A6E	0xA801    ADD	R0, SP, #4
0x2A70	0x1C41    ADDS	R1, R0, #1
0x2A72	0x2003    MOVS	R0, #3
0x2A74	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 413 :: 		ucAppCommandBuf[ 2 ] = 3;                // GPIO1=1
0x2A76	0xA801    ADD	R0, SP, #4
0x2A78	0x1C81    ADDS	R1, R0, #2
0x2A7A	0x2003    MOVS	R0, #3
0x2A7C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 414 :: 		break;
0x2A7E	0xE025    B	L_vRF4463GPIO_SET87
;driverrf4463pro.c, 416 :: 		case rx_test:   ucAppCommandBuf[ 1 ] = 2;                 // GPIO0=0
L_vRF4463GPIO_SET91:
0x2A80	0xA801    ADD	R0, SP, #4
0x2A82	0x1C41    ADDS	R1, R0, #1
0x2A84	0x2002    MOVS	R0, #2
0x2A86	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 417 :: 		ucAppCommandBuf[ 2 ] = 20;                // GPIO1=RX DATA
0x2A88	0xA801    ADD	R0, SP, #4
0x2A8A	0x1C81    ADDS	R1, R0, #2
0x2A8C	0x2014    MOVS	R0, #20
0x2A8E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 418 :: 		break;
0x2A90	0xE01C    B	L_vRF4463GPIO_SET87
;driverrf4463pro.c, 420 :: 		case rf_off:    ucAppCommandBuf[ 1 ] = 2;                 // GPIO0=0
L_vRF4463GPIO_SET92:
0x2A92	0xA801    ADD	R0, SP, #4
0x2A94	0x1C41    ADDS	R1, R0, #1
0x2A96	0x2002    MOVS	R0, #2
0x2A98	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 421 :: 		ucAppCommandBuf[ 2 ] = 2;                // GPIO1=0
0x2A9A	0xA801    ADD	R0, SP, #4
0x2A9C	0x1C81    ADDS	R1, R0, #2
0x2A9E	0x2002    MOVS	R0, #2
0x2AA0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 422 :: 		break;
0x2AA2	0xE013    B	L_vRF4463GPIO_SET87
;driverrf4463pro.c, 423 :: 		}
L_vRF4463GPIO_SET86:
0x2AA4	0xF89D000C  LDRB	R0, [SP, #12]
0x2AA8	0x2800    CMP	R0, #0
0x2AAA	0xD0D7    BEQ	L_vRF4463GPIO_SET88
0x2AAC	0xF89D000C  LDRB	R0, [SP, #12]
0x2AB0	0x2801    CMP	R0, #1
0x2AB2	0xD0D3    BEQ	L_vRF4463GPIO_SET89
0x2AB4	0xF89D000C  LDRB	R0, [SP, #12]
0x2AB8	0x2802    CMP	R0, #2
0x2ABA	0xD0D8    BEQ	L_vRF4463GPIO_SET90
0x2ABC	0xF89D000C  LDRB	R0, [SP, #12]
0x2AC0	0x2803    CMP	R0, #3
0x2AC2	0xD0DD    BEQ	L_vRF4463GPIO_SET91
0x2AC4	0xF89D000C  LDRB	R0, [SP, #12]
0x2AC8	0x2804    CMP	R0, #4
0x2ACA	0xD0E2    BEQ	L_vRF4463GPIO_SET92
L_vRF4463GPIO_SET87:
;driverrf4463pro.c, 425 :: 		ucAppCommandBuf[ 3 ]  = 0x21;     //0x20;   //  gpio2, h = tx mode
0x2ACC	0xA801    ADD	R0, SP, #4
0x2ACE	0x1CC1    ADDS	R1, R0, #3
0x2AD0	0x2021    MOVS	R0, #33
0x2AD2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 426 :: 		ucAppCommandBuf[ 4 ]  = 0x20;     // 0x14;  //   gpio3
0x2AD4	0xA801    ADD	R0, SP, #4
0x2AD6	0x1D01    ADDS	R1, R0, #4
0x2AD8	0x2020    MOVS	R0, #32
0x2ADA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 427 :: 		ucAppCommandBuf[ 5 ]  = 0x27;     // nIRQ
0x2ADC	0xA801    ADD	R0, SP, #4
0x2ADE	0x1D41    ADDS	R1, R0, #5
0x2AE0	0x2027    MOVS	R0, #39
0x2AE2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 428 :: 		ucAppCommandBuf[ 6 ]  = 0x0b;     // sdo
0x2AE4	0xA801    ADD	R0, SP, #4
0x2AE6	0x1D81    ADDS	R1, R0, #6
0x2AE8	0x200B    MOVS	R0, #11
0x2AEA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 429 :: 		spi_write( 7, ucAppCommandBuf );
0x2AEC	0xA801    ADD	R0, SP, #4
0x2AEE	0xB401    PUSH	(R0)
0x2AF0	0x2007    MOVS	R0, #7
0x2AF2	0xB401    PUSH	(R0)
0x2AF4	0xF7FFF98E  BL	_spi_write+0
0x2AF8	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 430 :: 		}
L_end_vRF4463GPIO_SET:
0x2AFA	0xF8DDE000  LDR	LR, [SP, #0]
0x2AFE	0xB003    ADD	SP, SP, #12
0x2B00	0x4770    BX	LR
; end of _vRF4463GPIO_SET
_spi_write:
;driverrf4463pro.c, 837 :: 		void spi_write( unsigned char tx_length, unsigned char *p ) {
0x1E14	0xB082    SUB	SP, SP, #8
0x1E16	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 840 :: 		i = 0;
0x1E1A	0x2000    MOVS	R0, #0
0x1E1C	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 841 :: 		while ( i != 0xFF ) {
L_spi_write120:
0x1E20	0xF89D0004  LDRB	R0, [SP, #4]
0x1E24	0xF1B00FFF  CMP	R0, #255
0x1E28	0xD004    BEQ	L_spi_write121
;driverrf4463pro.c, 842 :: 		i = check_cts();
0x1E2A	0xF7FEFCC5  BL	_check_cts+0
0x1E2E	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 843 :: 		}
0x1E32	0xE7F5    B	L_spi_write120
L_spi_write121:
;driverrf4463pro.c, 845 :: 		nSEL = 0;                              // habilita escritura
0x1E34	0x2100    MOVS	R1, #0
0x1E36	0xB249    SXTB	R1, R1
0x1E38	0x4812    LDR	R0, [PC, #72]
0x1E3A	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 847 :: 		for ( i = 0; i < tx_length; i++ ) {
0x1E3C	0x2000    MOVS	R0, #0
0x1E3E	0xF88D0004  STRB	R0, [SP, #4]
L_spi_write122:
0x1E42	0xF89D1008  LDRB	R1, [SP, #8]
0x1E46	0xF89D0004  LDRB	R0, [SP, #4]
0x1E4A	0x4288    CMP	R0, R1
0x1E4C	0xD212    BCS	L_spi_write123
;driverrf4463pro.c, 848 :: 		j = *( p + i );
0x1E4E	0xF89D1004  LDRB	R1, [SP, #4]
0x1E52	0x9803    LDR	R0, [SP, #12]
0x1E54	0x1840    ADDS	R0, R0, R1
0x1E56	0x7800    LDRB	R0, [R0, #0]
0x1E58	0xF88D0005  STRB	R0, [SP, #5]
;driverrf4463pro.c, 849 :: 		ucRf4463SPIByte( j );
0x1E5C	0xF89D0005  LDRB	R0, [SP, #5]
0x1E60	0xB401    PUSH	(R0)
0x1E62	0xF000FF75  BL	_ucRf4463SPIByte+0
0x1E66	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 847 :: 		for ( i = 0; i < tx_length; i++ ) {
0x1E68	0xF89D0004  LDRB	R0, [SP, #4]
0x1E6C	0x1C40    ADDS	R0, R0, #1
0x1E6E	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 850 :: 		}
0x1E72	0xE7E6    B	L_spi_write122
L_spi_write123:
;driverrf4463pro.c, 852 :: 		nSEL = 1;                              // desabilita escritura
0x1E74	0x2101    MOVS	R1, #1
0x1E76	0xB249    SXTB	R1, R1
0x1E78	0x4802    LDR	R0, [PC, #8]
0x1E7A	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 853 :: 		}
L_end_spi_write:
0x1E7C	0xF8DDE000  LDR	LR, [SP, #0]
0x1E80	0xB002    ADD	SP, SP, #8
0x1E82	0x4770    BX	LR
0x1E84	0x82B44241  	GPIOD_ODRbits+0
; end of _spi_write
_check_cts:
;driverrf4463pro.c, 858 :: 		unsigned char check_cts( void ) {           // This Command follows the Command and reads the response
0x07B8	0xB082    SUB	SP, SP, #8
0x07BA	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 861 :: 		nSEL = 1;
0x07BE	0x2101    MOVS	R1, #1
0x07C0	0xB249    SXTB	R1, R1
0x07C2	0x480E    LDR	R0, [PC, #56]
0x07C4	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 862 :: 		nSEL = 0;
0x07C6	0x2100    MOVS	R1, #0
0x07C8	0xB249    SXTB	R1, R1
0x07CA	0x480C    LDR	R0, [PC, #48]
0x07CC	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 863 :: 		ucRf4463SPIByte( 0x44 );
0x07CE	0x2044    MOVS	R0, #68
0x07D0	0xB401    PUSH	(R0)
0x07D2	0xF002FABD  BL	_ucRf4463SPIByte+0
0x07D6	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 864 :: 		i = ucRf4463SPIByte( 0 );
0x07D8	0x2000    MOVS	R0, #0
0x07DA	0xB401    PUSH	(R0)
0x07DC	0xF002FAB8  BL	_ucRf4463SPIByte+0
0x07E0	0xB001    ADD	SP, SP, #4
0x07E2	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 865 :: 		nSEL = 1;
0x07E6	0x2101    MOVS	R1, #1
0x07E8	0xB249    SXTB	R1, R1
0x07EA	0x4804    LDR	R0, [PC, #16]
0x07EC	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 866 :: 		return ( i );
0x07EE	0xF89D0004  LDRB	R0, [SP, #4]
;driverrf4463pro.c, 867 :: 		}
L_end_check_cts:
0x07F2	0xF8DDE000  LDR	LR, [SP, #0]
0x07F6	0xB002    ADD	SP, SP, #8
0x07F8	0x4770    BX	LR
0x07FA	0xBF00    NOP
0x07FC	0x82B44241  	GPIOD_ODRbits+0
; end of _check_cts
_rf_init_freq:
;driverrf4463pro.c, 656 :: 		void rf_init_freq ( void ) {
0x2F00	0xB08B    SUB	SP, SP, #44
0x2F02	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 662 :: 		ulFrequency = ( ucRF4463Freq3 * 100 ) + ( ucRF4463Freq2 * 10 ) + ucRF4463Freq1;
0x2F06	0x488B    LDR	R0, [PC, #556]
0x2F08	0x7801    LDRB	R1, [R0, #0]
0x2F0A	0x2064    MOVS	R0, #100
0x2F0C	0xB200    SXTH	R0, R0
0x2F0E	0xFB01F200  MUL	R2, R1, R0
0x2F12	0xB212    SXTH	R2, R2
0x2F14	0x4888    LDR	R0, [PC, #544]
0x2F16	0x7801    LDRB	R1, [R0, #0]
0x2F18	0x200A    MOVS	R0, #10
0x2F1A	0xB200    SXTH	R0, R0
0x2F1C	0x4348    MULS	R0, R1, R0
0x2F1E	0xB200    SXTH	R0, R0
0x2F20	0x1811    ADDS	R1, R2, R0
0x2F22	0xB209    SXTH	R1, R1
0x2F24	0x4885    LDR	R0, [PC, #532]
0x2F26	0x7800    LDRB	R0, [R0, #0]
0x2F28	0x1808    ADDS	R0, R1, R0
0x2F2A	0xB200    SXTH	R0, R0
0x2F2C	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 664 :: 		ulFrequency = ( ulFrequency * 10000 );
0x2F2E	0x9905    LDR	R1, [SP, #20]
0x2F30	0xF2427010  MOVW	R0, #10000
0x2F34	0x4348    MULS	R0, R1, R0
0x2F36	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 667 :: 		if ( ulFrequency >= 7600000 ) {
0x2F38	0x9905    LDR	R1, [SP, #20]
0x2F3A	0x4881    LDR	R0, [PC, #516]
0x2F3C	0x4281    CMP	R1, R0
0x2F3E	0xD309    BCC	L_rf_init_freq103
;driverrf4463pro.c, 668 :: 		ucOUTDIV = 4;
0x2F40	0x2004    MOVS	R0, #4
0x2F42	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 669 :: 		ucBAND = 0;
0x2F46	0x2000    MOVS	R0, #0
0x2F48	0xF88D0008  STRB	R0, [SP, #8]
;driverrf4463pro.c, 670 :: 		ucVCO = 0xFF;
0x2F4C	0x20FF    MOVS	R0, #255
0x2F4E	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 671 :: 		}
0x2F52	0xE040    B	L_rf_init_freq104
L_rf_init_freq103:
;driverrf4463pro.c, 674 :: 		else if ( ulFrequency >= 5460000 ) {
0x2F54	0x9905    LDR	R1, [SP, #20]
0x2F56	0x487B    LDR	R0, [PC, #492]
0x2F58	0x4281    CMP	R1, R0
0x2F5A	0xD309    BCC	L_rf_init_freq105
;driverrf4463pro.c, 675 :: 		ucOUTDIV = 6;
0x2F5C	0x2006    MOVS	R0, #6
0x2F5E	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 676 :: 		ucBAND   = 1;
0x2F62	0x2001    MOVS	R0, #1
0x2F64	0xF88D0008  STRB	R0, [SP, #8]
;driverrf4463pro.c, 677 :: 		ucVCO    = 0xFE;
0x2F68	0x20FE    MOVS	R0, #254
0x2F6A	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 678 :: 		}
0x2F6E	0xE032    B	L_rf_init_freq106
L_rf_init_freq105:
;driverrf4463pro.c, 681 :: 		else if ( ulFrequency >= 3850000 ) {
0x2F70	0x9905    LDR	R1, [SP, #20]
0x2F72	0x4875    LDR	R0, [PC, #468]
0x2F74	0x4281    CMP	R1, R0
0x2F76	0xD309    BCC	L_rf_init_freq107
;driverrf4463pro.c, 682 :: 		ucOUTDIV = 8;
0x2F78	0x2008    MOVS	R0, #8
0x2F7A	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 683 :: 		ucBAND   = 2;
0x2F7E	0x2002    MOVS	R0, #2
0x2F80	0xF88D0008  STRB	R0, [SP, #8]
;driverrf4463pro.c, 684 :: 		ucVCO    = 0xFE;
0x2F84	0x20FE    MOVS	R0, #254
0x2F86	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 685 :: 		}
0x2F8A	0xE024    B	L_rf_init_freq108
L_rf_init_freq107:
;driverrf4463pro.c, 688 :: 		else if ( ulFrequency >= 2730000 ) {
0x2F8C	0x9905    LDR	R1, [SP, #20]
0x2F8E	0x486F    LDR	R0, [PC, #444]
0x2F90	0x4281    CMP	R1, R0
0x2F92	0xD309    BCC	L_rf_init_freq109
;driverrf4463pro.c, 689 :: 		ucOUTDIV = 12;
0x2F94	0x200C    MOVS	R0, #12
0x2F96	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 690 :: 		ucBAND   = 3;
0x2F9A	0x2003    MOVS	R0, #3
0x2F9C	0xF88D0008  STRB	R0, [SP, #8]
;driverrf4463pro.c, 691 :: 		ucVCO    = 0xFD;
0x2FA0	0x20FD    MOVS	R0, #253
0x2FA2	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 692 :: 		}
0x2FA6	0xE016    B	L_rf_init_freq110
L_rf_init_freq109:
;driverrf4463pro.c, 695 :: 		else if ( ulFrequency >= 1940000 ) {
0x2FA8	0x9905    LDR	R1, [SP, #20]
0x2FAA	0x4869    LDR	R0, [PC, #420]
0x2FAC	0x4281    CMP	R1, R0
0x2FAE	0xD309    BCC	L_rf_init_freq111
;driverrf4463pro.c, 696 :: 		ucOUTDIV = 16;
0x2FB0	0x2010    MOVS	R0, #16
0x2FB2	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 697 :: 		ucBAND   = 4;
0x2FB6	0x2004    MOVS	R0, #4
0x2FB8	0xF88D0008  STRB	R0, [SP, #8]
;driverrf4463pro.c, 698 :: 		ucVCO    = 0xFC;
0x2FBC	0x20FC    MOVS	R0, #252
0x2FBE	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 699 :: 		}
0x2FC2	0xE008    B	L_rf_init_freq112
L_rf_init_freq111:
;driverrf4463pro.c, 703 :: 		ucOUTDIV = 24;
0x2FC4	0x2018    MOVS	R0, #24
0x2FC6	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 704 :: 		ucBAND   = 5;
0x2FCA	0x2005    MOVS	R0, #5
0x2FCC	0xF88D0008  STRB	R0, [SP, #8]
;driverrf4463pro.c, 705 :: 		ucVCO    = 0xFA;
0x2FD0	0x20FA    MOVS	R0, #250
0x2FD2	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 706 :: 		}
L_rf_init_freq112:
L_rf_init_freq110:
L_rf_init_freq108:
L_rf_init_freq106:
L_rf_init_freq104:
;driverrf4463pro.c, 708 :: 		ucDIV = ucOUTDIV / 2;
0x2FD6	0xF89D1004  LDRB	R1, [SP, #4]
0x2FDA	0x2002    MOVS	R0, #2
0x2FDC	0xFBB1F0F0  UDIV	R0, R1, R0
0x2FE0	0xF88D0005  STRB	R0, [SP, #5]
;driverrf4463pro.c, 710 :: 		ulData = ( ulFrequency * ucDIV ) / 3;          // ucDIV = 88.5 = 88   //// UCdiv = 2
0x2FE4	0xF89D1005  LDRB	R1, [SP, #5]
0x2FE8	0x9805    LDR	R0, [SP, #20]
0x2FEA	0x4341    MULS	R1, R0, R1
0x2FEC	0x2003    MOVS	R0, #3
0x2FEE	0xFBB1F0F0  UDIV	R0, R1, R0
0x2FF2	0x9004    STR	R0, [SP, #16]
;driverrf4463pro.c, 711 :: 		ucINTE = ( ulData / 100000) - 1;               // ulData = 6 000 000  //// ULdATA = 9 000 000
0x2FF4	0x9904    LDR	R1, [SP, #16]
0x2FF6	0x4857    LDR	R0, [PC, #348]
0x2FF8	0xFBB1F0F0  UDIV	R0, R1, R0
0x2FFC	0x1E40    SUBS	R0, R0, #1
0x2FFE	0xF88D0007  STRB	R0, [SP, #7]
;driverrf4463pro.c, 712 :: 		ulFRAC = ( ulData - ( ucINTE + 1 ) * 100000 ) * 16384 / 3125;         // ulFRAC = 15 728 640
0x3002	0xF89D0007  LDRB	R0, [SP, #7]
0x3006	0x1C41    ADDS	R1, R0, #1
0x3008	0xB209    SXTH	R1, R1
0x300A	0x4852    LDR	R0, [PC, #328]
0x300C	0x4341    MULS	R1, R0, R1
0x300E	0x9804    LDR	R0, [SP, #16]
0x3010	0x1A41    SUB	R1, R0, R1
0x3012	0xF2440000  MOVW	R0, #16384
0x3016	0x4341    MULS	R1, R0, R1
0x3018	0xF6404035  MOVW	R0, #3125
0x301C	0xFBB1F0F0  UDIV	R0, R1, R0
0x3020	0x9003    STR	R0, [SP, #12]
;driverrf4463pro.c, 713 :: 		ulFRAC = ulFRAC + 0x80000;
0x3022	0x9803    LDR	R0, [SP, #12]
0x3024	0xF5002000  ADD	R0, R0, #524288
0x3028	0x9003    STR	R0, [SP, #12]
;driverrf4463pro.c, 715 :: 		ucFRAC_0 = ulFRAC;
0x302A	0x9803    LDR	R0, [SP, #12]
0x302C	0xF88D000B  STRB	R0, [SP, #11]
;driverrf4463pro.c, 716 :: 		ulFRAC >>= 8;
0x3030	0x9803    LDR	R0, [SP, #12]
0x3032	0x0A00    LSRS	R0, R0, #8
0x3034	0x9003    STR	R0, [SP, #12]
;driverrf4463pro.c, 717 :: 		ucFRAC_1 = ulFRAC;
0x3036	0x9803    LDR	R0, [SP, #12]
0x3038	0xF88D000A  STRB	R0, [SP, #10]
;driverrf4463pro.c, 718 :: 		ulFRAC >>= 8;
0x303C	0x9803    LDR	R0, [SP, #12]
0x303E	0x0A00    LSRS	R0, R0, #8
0x3040	0x9003    STR	R0, [SP, #12]
;driverrf4463pro.c, 719 :: 		ucFRAC_2 = ulFRAC;
0x3042	0x9803    LDR	R0, [SP, #12]
0x3044	0xF88D0009  STRB	R0, [SP, #9]
;driverrf4463pro.c, 723 :: 		app_command_buf[ 0 ] = 0x11;           // SET property    MODEM_CLKGEN_BAND
0x3048	0xA806    ADD	R0, SP, #24
0x304A	0x1C01    ADDS	R1, R0, #0
0x304C	0x2011    MOVS	R0, #17
0x304E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 724 :: 		app_command_buf[ 1 ] = 0x20;           // Group  // 0x2051
0x3050	0xA806    ADD	R0, SP, #24
0x3052	0x1C41    ADDS	R1, R0, #1
0x3054	0x2020    MOVS	R0, #32
0x3056	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 725 :: 		app_command_buf[ 2 ] = 0x01;           // Num Arguments // Total 1 Parameters
0x3058	0xA806    ADD	R0, SP, #24
0x305A	0x1C81    ADDS	R1, R0, #2
0x305C	0x2001    MOVS	R0, #1
0x305E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 726 :: 		app_command_buf[ 3 ] = 0x51;           // Number  // 0x2051
0x3060	0xA806    ADD	R0, SP, #24
0x3062	0x1CC1    ADDS	R1, R0, #3
0x3064	0x2051    MOVS	R0, #81
0x3066	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 727 :: 		app_command_buf[ 4 ] = 0x08 | ucBAND;  // Argumento  //  high performance mode , clk outpu = osc /4
0x3068	0xA806    ADD	R0, SP, #24
0x306A	0x1D01    ADDS	R1, R0, #4
0x306C	0xF89D0008  LDRB	R0, [SP, #8]
0x3070	0xF0400008  ORR	R0, R0, #8
0x3074	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 728 :: 		spi_write( 5, app_command_buf );
0x3076	0xA806    ADD	R0, SP, #24
0x3078	0xB401    PUSH	(R0)
0x307A	0x2005    MOVS	R0, #5
0x307C	0xB401    PUSH	(R0)
0x307E	0xF7FEFEC9  BL	_spi_write+0
0x3082	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 730 :: 		app_command_buf[ 0 ]  = 0x11;
0x3084	0xA806    ADD	R0, SP, #24
0x3086	0x1C01    ADDS	R1, R0, #0
0x3088	0x2011    MOVS	R0, #17
0x308A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 731 :: 		app_command_buf[ 1 ]  = 0x40;    // 0x4000         FREQ_CONTROL_INTE
0x308C	0xA806    ADD	R0, SP, #24
0x308E	0x1C41    ADDS	R1, R0, #1
0x3090	0x2040    MOVS	R0, #64
0x3092	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 732 :: 		app_command_buf[ 2 ]  = 0x08;    // Total 8 Parameters
0x3094	0xA806    ADD	R0, SP, #24
0x3096	0x1C81    ADDS	R1, R0, #2
0x3098	0x2008    MOVS	R0, #8
0x309A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 733 :: 		app_command_buf[ 3 ]  = 0x00;   // 0x4000
0x309C	0xA806    ADD	R0, SP, #24
0x309E	0x1CC1    ADDS	R1, R0, #3
0x30A0	0x2000    MOVS	R0, #0
0x30A2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 734 :: 		app_command_buf[ 4 ]  = ucINTE;   //  default value
0x30A4	0xA806    ADD	R0, SP, #24
0x30A6	0x1D01    ADDS	R1, R0, #4
0x30A8	0xF89D0007  LDRB	R0, [SP, #7]
0x30AC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 735 :: 		app_command_buf[ 5 ]  = ucFRAC_2;   //  defaul value
0x30AE	0xA806    ADD	R0, SP, #24
0x30B0	0x1D41    ADDS	R1, R0, #5
0x30B2	0xF89D0009  LDRB	R0, [SP, #9]
0x30B6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 736 :: 		app_command_buf[ 6 ]  = ucFRAC_1;   //  default value
0x30B8	0xA806    ADD	R0, SP, #24
0x30BA	0x1D81    ADDS	R1, R0, #6
0x30BC	0xF89D000A  LDRB	R0, [SP, #10]
0x30C0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 737 :: 		app_command_buf[ 7 ]  = ucFRAC_0;   // frac ,from WDS
0x30C2	0xA806    ADD	R0, SP, #24
0x30C4	0x1DC1    ADDS	R1, R0, #7
0x30C6	0xF89D000B  LDRB	R0, [SP, #11]
0x30CA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 740 :: 		if ( ulRF4463Step == 250 ) {
0x30CC	0x4822    LDR	R0, [PC, #136]
0x30CE	0x6800    LDR	R0, [R0, #0]
0x30D0	0x28FA    CMP	R0, #250
0x30D2	0xD10A    BNE	L_rf_init_freq113
;driverrf4463pro.c, 741 :: 		app_command_buf[ 8 ]  = step_250K_step1;   // channel step1  from wds  // al parecer aqu? esta el ancho del canal
0x30D4	0xA806    ADD	R0, SP, #24
0x30D6	0xF2000108  ADDW	R1, R0, #8
0x30DA	0x2022    MOVS	R0, #34
0x30DC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 742 :: 		app_command_buf[ 9 ]  = step_250K_step0;   // channel step0  from wds
0x30DE	0xA806    ADD	R0, SP, #24
0x30E0	0xF2000109  ADDW	R1, R0, #9
0x30E4	0x2022    MOVS	R0, #34
0x30E6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 743 :: 		}
0x30E8	0xE00E    B	L_rf_init_freq114
L_rf_init_freq113:
;driverrf4463pro.c, 744 :: 		else if ( ulRF4463Step == 500 ) {
0x30EA	0x481B    LDR	R0, [PC, #108]
0x30EC	0x6800    LDR	R0, [R0, #0]
0x30EE	0xF5B07FFA  CMP	R0, #500
0x30F2	0xD109    BNE	L_rf_init_freq115
;driverrf4463pro.c, 745 :: 		app_command_buf[ 8 ]  = step_500K_step1;   // channel step1  from wds  // al parecer aqu? esta el ancho del canal
0x30F4	0xA806    ADD	R0, SP, #24
0x30F6	0xF2000108  ADDW	R1, R0, #8
0x30FA	0x2044    MOVS	R0, #68
0x30FC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 746 :: 		app_command_buf[ 9 ]  = step_500K_step0;   // channel step0  from wds
0x30FE	0xA806    ADD	R0, SP, #24
0x3100	0xF2000109  ADDW	R1, R0, #9
0x3104	0x2044    MOVS	R0, #68
0x3106	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 747 :: 		}
L_rf_init_freq115:
L_rf_init_freq114:
;driverrf4463pro.c, 749 :: 		app_command_buf[ 10 ] = 0x20;  //  from wds Without this Values
0x3108	0xA806    ADD	R0, SP, #24
0x310A	0xF200010A  ADDW	R1, R0, #10
0x310E	0x2020    MOVS	R0, #32
0x3110	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 750 :: 		app_command_buf[ 11 ] = ucVCO;    // from wds Without this Values
0x3112	0xA806    ADD	R0, SP, #24
0x3114	0xF200010B  ADDW	R1, R0, #11
0x3118	0xF89D0006  LDRB	R0, [SP, #6]
0x311C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 764 :: 		spi_write( 12, app_command_buf );
0x311E	0xA806    ADD	R0, SP, #24
0x3120	0xB401    PUSH	(R0)
0x3122	0x200C    MOVS	R0, #12
0x3124	0xB401    PUSH	(R0)
0x3126	0xF7FEFE75  BL	_spi_write+0
0x312A	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 765 :: 		}
L_end_rf_init_freq:
0x312C	0xF8DDE000  LDR	LR, [SP, #0]
0x3130	0xB00B    ADD	SP, SP, #44
0x3132	0x4770    BX	LR
0x3134	0x23372000  	_ucRF4463Freq3+0
0x3138	0x233C2000  	_ucRF4463Freq2+0
0x313C	0x233D2000  	_ucRF4463Freq1+0
0x3140	0xF7800073  	#7600000
0x3144	0x50200053  	#5460000
0x3148	0xBF10003A  	#3850000
0x314C	0xA8100029  	#2730000
0x3150	0x9A20001D  	#1940000
0x3154	0x86A00001  	#100000
0x3158	0x20842000  	_ulRF4463Step+0
; end of _rf_init_freq
_vRF4463ClearInterrupts:
;driverrf4463pro.c, 447 :: 		void vRF4463ClearInterrupts( void ) {
0x4EDC	0xB082    SUB	SP, SP, #8
0x4EDE	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 450 :: 		p[ 0 ] = GET_INT_STATUS;
0x4EE2	0xA801    ADD	R0, SP, #4
0x4EE4	0x1C01    ADDS	R1, R0, #0
0x4EE6	0x2020    MOVS	R0, #32
0x4EE8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 451 :: 		p[ 1 ] = 0;               // clr  PH pending
0x4EEA	0xA801    ADD	R0, SP, #4
0x4EEC	0x1C41    ADDS	R1, R0, #1
0x4EEE	0x2000    MOVS	R0, #0
0x4EF0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 452 :: 		p[ 2 ] = 0;               // clr modem_pending
0x4EF2	0xA801    ADD	R0, SP, #4
0x4EF4	0x1C81    ADDS	R1, R0, #2
0x4EF6	0x2000    MOVS	R0, #0
0x4EF8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 453 :: 		p[ 3 ] = 0;               // clr chip pending
0x4EFA	0xA801    ADD	R0, SP, #4
0x4EFC	0x1CC1    ADDS	R1, R0, #3
0x4EFE	0x2000    MOVS	R0, #0
0x4F00	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 454 :: 		spi_write( 4, p );
0x4F02	0xA801    ADD	R0, SP, #4
0x4F04	0xB401    PUSH	(R0)
0x4F06	0x2004    MOVS	R0, #4
0x4F08	0xB401    PUSH	(R0)
0x4F0A	0xF7FCFF83  BL	_spi_write+0
0x4F0E	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 455 :: 		spi_read( 9, GET_INT_STATUS );
0x4F10	0x2020    MOVS	R0, #32
0x4F12	0xB401    PUSH	(R0)
0x4F14	0x2009    MOVS	R0, #9
0x4F16	0xB401    PUSH	(R0)
0x4F18	0xF7FDFF64  BL	_spi_read+0
0x4F1C	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 456 :: 		}
L_end_vRF4463ClearInterrupts:
0x4F1E	0xF8DDE000  LDR	LR, [SP, #0]
0x4F22	0xB002    ADD	SP, SP, #8
0x4F24	0x4770    BX	LR
; end of _vRF4463ClearInterrupts
_spi_read:
;driverrf4463pro.c, 872 :: 		void spi_read( unsigned char data_length, unsigned char api_command ) {
0x2DE4	0xB083    SUB	SP, SP, #12
0x2DE6	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 876 :: 		p[ 0 ] = api_command;
0x2DEA	0xF10D0005  ADD	R0, SP, #5
0x2DEE	0x1C01    ADDS	R1, R0, #0
0x2DF0	0xF89D0010  LDRB	R0, [SP, #16]
0x2DF4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 877 :: 		i = 0;
0x2DF6	0x2000    MOVS	R0, #0
0x2DF8	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 878 :: 		while ( i != 0xFF ) {
L_spi_read125:
0x2DFC	0xF89D0004  LDRB	R0, [SP, #4]
0x2E00	0xF1B00FFF  CMP	R0, #255
0x2E04	0xD004    BEQ	L_spi_read126
;driverrf4463pro.c, 879 :: 		i = check_cts();                // Check if you can send Command
0x2E06	0xF7FDFCD7  BL	_check_cts+0
0x2E0A	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 880 :: 		}
0x2E0E	0xE7F5    B	L_spi_read125
L_spi_read126:
;driverrf4463pro.c, 882 :: 		spi_write( 1, p );    // Send Command
0x2E10	0xF10D0005  ADD	R0, SP, #5
0x2E14	0xB401    PUSH	(R0)
0x2E16	0x2001    MOVS	R0, #1
0x2E18	0xB401    PUSH	(R0)
0x2E1A	0xF7FEFFFB  BL	_spi_write+0
0x2E1E	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 884 :: 		i = 0;
0x2E20	0x2000    MOVS	R0, #0
0x2E22	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 885 :: 		while ( i != 0xFF ) {
L_spi_read127:
0x2E26	0xF89D0004  LDRB	R0, [SP, #4]
0x2E2A	0xF1B00FFF  CMP	R0, #255
0x2E2E	0xD004    BEQ	L_spi_read128
;driverrf4463pro.c, 886 :: 		i = check_cts();        //Check whether the data can be read
0x2E30	0xF7FDFCC2  BL	_check_cts+0
0x2E34	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 887 :: 		}
0x2E38	0xE7F5    B	L_spi_read127
L_spi_read128:
;driverrf4463pro.c, 889 :: 		nSEL = 1;
0x2E3A	0x2101    MOVS	R1, #1
0x2E3C	0xB249    SXTB	R1, R1
0x2E3E	0x4817    LDR	R0, [PC, #92]
0x2E40	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 890 :: 		nSEL = 0;
0x2E42	0x2100    MOVS	R1, #0
0x2E44	0xB249    SXTB	R1, R1
0x2E46	0x4815    LDR	R0, [PC, #84]
0x2E48	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 891 :: 		ucRf4463SPIByte( 0x44 );
0x2E4A	0x2044    MOVS	R0, #68
0x2E4C	0xB401    PUSH	(R0)
0x2E4E	0xF7FFFF7F  BL	_ucRf4463SPIByte+0
0x2E52	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 892 :: 		for ( i = 0; i < data_length; i++ ) {        // Read data
0x2E54	0x2000    MOVS	R0, #0
0x2E56	0xF88D0004  STRB	R0, [SP, #4]
L_spi_read129:
0x2E5A	0xF89D100C  LDRB	R1, [SP, #12]
0x2E5E	0xF89D0004  LDRB	R0, [SP, #4]
0x2E62	0x4288    CMP	R0, R1
0x2E64	0xD211    BCS	L_spi_read130
;driverrf4463pro.c, 893 :: 		spi_read_buf[ i ] = ucRf4463SPIByte( 0x00 );             // 0x00
0x2E66	0xF89D1004  LDRB	R1, [SP, #4]
0x2E6A	0x480D    LDR	R0, [PC, #52]
0x2E6C	0x1840    ADDS	R0, R0, R1
0x2E6E	0x9002    STR	R0, [SP, #8]
0x2E70	0x2000    MOVS	R0, #0
0x2E72	0xB401    PUSH	(R0)
0x2E74	0xF7FFFF6C  BL	_ucRf4463SPIByte+0
0x2E78	0xB001    ADD	SP, SP, #4
0x2E7A	0x9902    LDR	R1, [SP, #8]
0x2E7C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 892 :: 		for ( i = 0; i < data_length; i++ ) {        // Read data
0x2E7E	0xF89D0004  LDRB	R0, [SP, #4]
0x2E82	0x1C40    ADDS	R0, R0, #1
0x2E84	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 894 :: 		}
0x2E88	0xE7E7    B	L_spi_read129
L_spi_read130:
;driverrf4463pro.c, 895 :: 		nSEL = 1;
0x2E8A	0x2101    MOVS	R1, #1
0x2E8C	0xB249    SXTB	R1, R1
0x2E8E	0x4803    LDR	R0, [PC, #12]
0x2E90	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 896 :: 		}
L_end_spi_read:
0x2E92	0xF8DDE000  LDR	LR, [SP, #0]
0x2E96	0xB003    ADD	SP, SP, #12
0x2E98	0x4770    BX	LR
0x2E9A	0xBF00    NOP
0x2E9C	0x82B44241  	GPIOD_ODRbits+0
0x2EA0	0x23402000  	_spi_read_buf+0
; end of _spi_read
_vRF4463PartInfo:
;driverrf4463pro.c, 458 :: 		void vRF4463PartInfo( void ) {  // Solicitud totalmente operativa
0x4F28	0xB084    SUB	SP, SP, #16
0x4F2A	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 461 :: 		p[ 0 ] = PART_INFO;
0x4F2E	0xA801    ADD	R0, SP, #4
0x4F30	0x1C01    ADDS	R1, R0, #0
0x4F32	0x2001    MOVS	R0, #1
0x4F34	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 465 :: 		spi_write( 1, p );
0x4F36	0xA801    ADD	R0, SP, #4
0x4F38	0xB401    PUSH	(R0)
0x4F3A	0x2001    MOVS	R0, #1
0x4F3C	0xB401    PUSH	(R0)
0x4F3E	0xF7FCFF69  BL	_spi_write+0
0x4F42	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 466 :: 		spi_read( 9, PART_INFO );
0x4F44	0x2001    MOVS	R0, #1
0x4F46	0xB401    PUSH	(R0)
0x4F48	0x2009    MOVS	R0, #9
0x4F4A	0xB401    PUSH	(R0)
0x4F4C	0xF7FDFF4A  BL	_spi_read+0
0x4F50	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 467 :: 		}
L_end_vRF4463PartInfo:
0x4F52	0xF8DDE000  LDR	LR, [SP, #0]
0x4F56	0xB004    ADD	SP, SP, #16
0x4F58	0x4770    BX	LR
; end of _vRF4463PartInfo
_vUSART1Start_TX:
;uarthandler.c, 445 :: 		unsigned char vUSART1Start_TX ( unsigned long *ucBuffer, unsigned long ulSize ) {
0x41B0	0xB081    SUB	SP, SP, #4
;uarthandler.c, 464 :: 		while ( DMA2_S7CRbits.EN || !USART1_SRbits.TC );
L_vUSART1Start_TX255:
0x41B2	0x481A    LDR	R0, [PC, #104]
0x41B4	0x6800    LDR	R0, [R0, #0]
0x41B6	0xB920    CBNZ	R0, L__vUSART1Start_TX464
0x41B8	0x4819    LDR	R0, [PC, #100]
0x41BA	0x6800    LDR	R0, [R0, #0]
0x41BC	0x2800    CMP	R0, #0
0x41BE	0xD000    BEQ	L__vUSART1Start_TX464
0x41C0	0xE000    B	L_vUSART1Start_TX256
L__vUSART1Start_TX464:
0x41C2	0xE7F6    B	L_vUSART1Start_TX255
L_vUSART1Start_TX256:
;uarthandler.c, 466 :: 		if ( USART1_CR1bits.UE && USART1_SRbits.TC && ulSize > 0 ) { // la transmision anterior termino?
0x41C4	0x4817    LDR	R0, [PC, #92]
0x41C6	0x6800    LDR	R0, [R0, #0]
0x41C8	0x2800    CMP	R0, #0
0x41CA	0xD023    BEQ	L_vUSART1Start_TX261
0x41CC	0x4814    LDR	R0, [PC, #80]
0x41CE	0x6800    LDR	R0, [R0, #0]
0x41D0	0x2800    CMP	R0, #0
0x41D2	0xD01F    BEQ	L_vUSART1Start_TX261
0x41D4	0x9802    LDR	R0, [SP, #8]
0x41D6	0x2800    CMP	R0, #0
0x41D8	0xD91C    BLS	L_vUSART1Start_TX261
L__vUSART1Start_TX463:
;uarthandler.c, 467 :: 		DMA2_S7CRbits.EN = 0;                       // Desabilita la recepci?n para poder modificar los par?metros
0x41DA	0x2100    MOVS	R1, #0
0x41DC	0xB249    SXTB	R1, R1
0x41DE	0x480F    LDR	R0, [PC, #60]
0x41E0	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 468 :: 		while ( DMA2_S7CRbits.EN );                 // espera a que se haya desabilitado realmente
L_vUSART1Start_TX262:
0x41E2	0x480E    LDR	R0, [PC, #56]
0x41E4	0x6800    LDR	R0, [R0, #0]
0x41E6	0xB100    CBZ	R0, L_vUSART1Start_TX263
0x41E8	0xE7FB    B	L_vUSART1Start_TX262
L_vUSART1Start_TX263:
;uarthandler.c, 470 :: 		DMA2_S7M0AR = ( unsigned long ) ucBuffer;   // Direcci?n de la memoria a rutear
0x41EA	0x9901    LDR	R1, [SP, #4]
0x41EC	0x480E    LDR	R0, [PC, #56]
0x41EE	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 471 :: 		DMA2_S7NDTR = ulSize;                       // Tama?o de datos a manejar
0x41F0	0x9902    LDR	R1, [SP, #8]
0x41F2	0x480E    LDR	R0, [PC, #56]
0x41F4	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 472 :: 		DMA2_S7CRbits.EN = 1;
0x41F6	0x2101    MOVS	R1, #1
0x41F8	0xB249    SXTB	R1, R1
0x41FA	0x4808    LDR	R0, [PC, #32]
0x41FC	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 473 :: 		while ( DMA2_S7CRbits.EN || !USART1_SRbits.TC );
L_vUSART1Start_TX264:
0x41FE	0x4807    LDR	R0, [PC, #28]
0x4200	0x6800    LDR	R0, [R0, #0]
0x4202	0xB920    CBNZ	R0, L__vUSART1Start_TX462
0x4204	0x4806    LDR	R0, [PC, #24]
0x4206	0x6800    LDR	R0, [R0, #0]
0x4208	0x2800    CMP	R0, #0
0x420A	0xD000    BEQ	L__vUSART1Start_TX462
0x420C	0xE000    B	L_vUSART1Start_TX265
L__vUSART1Start_TX462:
0x420E	0xE7F6    B	L_vUSART1Start_TX264
L_vUSART1Start_TX265:
;uarthandler.c, 474 :: 		return 1;                                   // indica que transmitio
0x4210	0x2001    MOVS	R0, #1
0x4212	0xE000    B	L_end_vUSART1Start_TX
;uarthandler.c, 475 :: 		}
L_vUSART1Start_TX261:
;uarthandler.c, 476 :: 		return 0;                                      // indica que NO transmitio
0x4214	0x2000    MOVS	R0, #0
;uarthandler.c, 478 :: 		}
L_end_vUSART1Start_TX:
0x4216	0xB001    ADD	SP, SP, #4
0x4218	0x4770    BX	LR
0x421A	0xBF00    NOP
0x421C	0x9700424C  	DMA2_S7CRbits+0
0x4220	0x00184222  	USART1_SRbits+0
0x4224	0x01B44222  	USART1_CR1bits+0
0x4228	0x64C44002  	DMA2_S7M0AR+0
0x422C	0x64BC4002  	DMA2_S7NDTR+0
; end of _vUSART1Start_TX
_vUSARTReceivedFromUSART1:
;uarthandler.c, 560 :: 		void vUSARTReceivedFromUSART1 ( ) {
0x4230	0xB081    SUB	SP, SP, #4
0x4232	0xF8CDE000  STR	LR, [SP, #0]
;uarthandler.c, 562 :: 		vUSARTCleanBuffer( ucUSARTActiveBuffer1, ulUSARTActiveBuffer1BytesReceived ); // borra todo el buffer
0x4236	0x4816    LDR	R0, [PC, #88]
0x4238	0x6800    LDR	R0, [R0, #0]
0x423A	0xB401    PUSH	(R0)
0x423C	0x4815    LDR	R0, [PC, #84]
0x423E	0xB401    PUSH	(R0)
0x4240	0xF7FEFE30  BL	_vUSARTCleanBuffer+0
0x4244	0xB002    ADD	SP, SP, #8
;uarthandler.c, 564 :: 		vUSARTStartMEMtoMEM( ucUSART1RXBuffer, ucUSARTActiveBuffer1, ulUSART1ByteReceived ); // copia el buffer de entrada
0x4246	0x4814    LDR	R0, [PC, #80]
0x4248	0x6800    LDR	R0, [R0, #0]
0x424A	0xB401    PUSH	(R0)
0x424C	0x4811    LDR	R0, [PC, #68]
0x424E	0xB401    PUSH	(R0)
0x4250	0x4812    LDR	R0, [PC, #72]
0x4252	0xB401    PUSH	(R0)
0x4254	0xF7FEFD98  BL	_vUSARTStartMEMtoMEM+0
0x4258	0xB003    ADD	SP, SP, #12
;uarthandler.c, 565 :: 		vUSARTCleanBuffer( ucUSART1RXBuffer, ulUSART1ByteReceived );          // lo limpia
0x425A	0x480F    LDR	R0, [PC, #60]
0x425C	0x6800    LDR	R0, [R0, #0]
0x425E	0xB401    PUSH	(R0)
0x4260	0x480E    LDR	R0, [PC, #56]
0x4262	0xB401    PUSH	(R0)
0x4264	0xF7FEFE1E  BL	_vUSARTCleanBuffer+0
0x4268	0xB002    ADD	SP, SP, #8
;uarthandler.c, 566 :: 		ulUSARTActiveBuffer1BytesReceived = ulUSART1ByteReceived;             // le pasa el valor
0x426A	0x480B    LDR	R0, [PC, #44]
0x426C	0x6801    LDR	R1, [R0, #0]
0x426E	0x4808    LDR	R0, [PC, #32]
0x4270	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 567 :: 		ulUSART1ByteReceived = 0;                                             // pone a cero el contador
0x4272	0x2100    MOVS	R1, #0
0x4274	0x4808    LDR	R0, [PC, #32]
0x4276	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 568 :: 		fUSART1Buffer = CLEAR_TO_WRITE;                                       // indica que esta limpio
0x4278	0x2100    MOVS	R1, #0
0x427A	0x4809    LDR	R0, [PC, #36]
0x427C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 569 :: 		vRF4463MainCommandProcessor( ucUSARTActiveBuffer1 );
0x427E	0x4805    LDR	R0, [PC, #20]
0x4280	0xB401    PUSH	(R0)
0x4282	0xF7FEFF6B  BL	_vRF4463MainCommandProcessor+0
0x4286	0xB001    ADD	SP, SP, #4
;uarthandler.c, 570 :: 		}
L_end_vUSARTReceivedFromUSART1:
0x4288	0xF8DDE000  LDR	LR, [SP, #0]
0x428C	0xB001    ADD	SP, SP, #4
0x428E	0x4770    BX	LR
0x4290	0x10002000  	_ulUSARTActiveBuffer1BytesReceived+0
0x4294	0x00002000  	_ucUSARTActiveBuffer1+0
0x4298	0x20042000  	_ulUSART1ByteReceived+0
0x429C	0x10042000  	_ucUSART1RXBuffer+0
0x42A0	0x20082000  	_fUSART1Buffer+0
; end of _vUSARTReceivedFromUSART1
_vUSARTCleanBuffer:
;uarthandler.c, 553 :: 		void vUSARTCleanBuffer ( unsigned char *ucBuffer, unsigned int uiCnt ) {
0x2EA4	0xB081    SUB	SP, SP, #4
0x2EA6	0xF8CDE000  STR	LR, [SP, #0]
;uarthandler.c, 555 :: 		vUSARTStartMEMtoMEMZero( ucBuffer, uiCnt );
0x2EAA	0xF8BD0008  LDRH	R0, [SP, #8]
0x2EAE	0xB401    PUSH	(R0)
0x2EB0	0x9802    LDR	R0, [SP, #8]
0x2EB2	0xB401    PUSH	(R0)
0x2EB4	0xF7FEFF7E  BL	_vUSARTStartMEMtoMEMZero+0
0x2EB8	0xB002    ADD	SP, SP, #8
;uarthandler.c, 556 :: 		}
L_end_vUSARTCleanBuffer:
0x2EBA	0xF8DDE000  LDR	LR, [SP, #0]
0x2EBE	0xB001    ADD	SP, SP, #4
0x2EC0	0x4770    BX	LR
; end of _vUSARTCleanBuffer
_vUSARTStartMEMtoMEMZero:
;uarthandler.c, 265 :: 		unsigned char vUSARTStartMEMtoMEMZero ( unsigned long *pcBufferDestination, unsigned long ulSizeInBytes ) {
0x1DB4	0xB081    SUB	SP, SP, #4
;uarthandler.c, 287 :: 		while ( DMA2_S4CRbits.EN );
L_vUSARTStartMEMtoMEMZero237:
0x1DB6	0x4812    LDR	R0, [PC, #72]
0x1DB8	0x6800    LDR	R0, [R0, #0]
0x1DBA	0xB100    CBZ	R0, L_vUSARTStartMEMtoMEMZero238
0x1DBC	0xE7FB    B	L_vUSARTStartMEMtoMEMZero237
L_vUSARTStartMEMtoMEMZero238:
;uarthandler.c, 289 :: 		if ( ulSizeInBytes > 0 ) {                // la transmision anterior termino?
0x1DBE	0x9802    LDR	R0, [SP, #8]
0x1DC0	0x2800    CMP	R0, #0
0x1DC2	0xD91A    BLS	L_vUSARTStartMEMtoMEMZero239
;uarthandler.c, 290 :: 		DMA2_S4CRbits.EN = 0;                  // Desabilita la recepci?n para poder modificar los par?metros
0x1DC4	0x2100    MOVS	R1, #0
0x1DC6	0xB249    SXTB	R1, R1
0x1DC8	0x480D    LDR	R0, [PC, #52]
0x1DCA	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 291 :: 		while ( DMA2_S4CRbits.EN );            // espera a que se haya desabilitado realmente
L_vUSARTStartMEMtoMEMZero240:
0x1DCC	0x480C    LDR	R0, [PC, #48]
0x1DCE	0x6800    LDR	R0, [R0, #0]
0x1DD0	0xB100    CBZ	R0, L_vUSARTStartMEMtoMEMZero241
0x1DD2	0xE7FB    B	L_vUSARTStartMEMtoMEMZero240
L_vUSARTStartMEMtoMEMZero241:
;uarthandler.c, 294 :: 		DMA2_S4PAR = ( unsigned long ) &ucUSARTNull;          // Direccion de periferico a rutear
0x1DD4	0x490B    LDR	R1, [PC, #44]
0x1DD6	0x480C    LDR	R0, [PC, #48]
0x1DD8	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 295 :: 		DMA2_S4M0AR = ( unsigned long ) pcBufferDestination;  // Direccion de la memoria a rutear
0x1DDA	0x9901    LDR	R1, [SP, #4]
0x1DDC	0x480B    LDR	R0, [PC, #44]
0x1DDE	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 297 :: 		DMA2_S4NDTR = ulSizeInBytes;           // Tamagno de datos a manejar (Header + Payload)
0x1DE0	0x9902    LDR	R1, [SP, #8]
0x1DE2	0x480B    LDR	R0, [PC, #44]
0x1DE4	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 298 :: 		DMA2_S4CRbits.EN = 1;
0x1DE6	0x2101    MOVS	R1, #1
0x1DE8	0xB249    SXTB	R1, R1
0x1DEA	0x4805    LDR	R0, [PC, #20]
0x1DEC	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 299 :: 		while ( DMA2_S4CRbits.EN );
L_vUSARTStartMEMtoMEMZero242:
0x1DEE	0x4804    LDR	R0, [PC, #16]
0x1DF0	0x6800    LDR	R0, [R0, #0]
0x1DF2	0xB100    CBZ	R0, L_vUSARTStartMEMtoMEMZero243
0x1DF4	0xE7FB    B	L_vUSARTStartMEMtoMEMZero242
L_vUSARTStartMEMtoMEMZero243:
;uarthandler.c, 300 :: 		return 1;                              // indica que transmitio
0x1DF6	0x2001    MOVS	R0, #1
0x1DF8	0xE000    B	L_end_vUSARTStartMEMtoMEMZero
;uarthandler.c, 301 :: 		}
L_vUSARTStartMEMtoMEMZero239:
;uarthandler.c, 302 :: 		return 0;                                 // indica que NO transmitio
0x1DFA	0x2000    MOVS	R0, #0
;uarthandler.c, 304 :: 		}
L_end_vUSARTStartMEMtoMEMZero:
0x1DFC	0xB001    ADD	SP, SP, #4
0x1DFE	0x4770    BX	LR
0x1E00	0x8E00424C  	DMA2_S4CRbits+0
0x1E04	0x20912000  	_ucUSARTNull+0
0x1E08	0x64784002  	DMA2_S4PAR+0
0x1E0C	0x647C4002  	DMA2_S4M0AR+0
0x1E10	0x64744002  	DMA2_S4NDTR+0
; end of _vUSARTStartMEMtoMEMZero
_vUSARTStartMEMtoMEM:
;uarthandler.c, 354 :: 		unsigned char vUSARTStartMEMtoMEM ( unsigned long *pcBufferOrigin, unsigned long *pcBufferDestination, unsigned long ulSizeInBytes ) {
0x2D88	0xB081    SUB	SP, SP, #4
;uarthandler.c, 376 :: 		while ( DMA2_S1CRbits.EN );
L_vUSARTStartMEMtoMEM246:
0x2D8A	0x4812    LDR	R0, [PC, #72]
0x2D8C	0x6800    LDR	R0, [R0, #0]
0x2D8E	0xB100    CBZ	R0, L_vUSARTStartMEMtoMEM247
0x2D90	0xE7FB    B	L_vUSARTStartMEMtoMEM246
L_vUSARTStartMEMtoMEM247:
;uarthandler.c, 378 :: 		if ( ulSizeInBytes > 0 ) {                // la transmision anterior termino?
0x2D92	0x9803    LDR	R0, [SP, #12]
0x2D94	0x2800    CMP	R0, #0
0x2D96	0xD91A    BLS	L_vUSARTStartMEMtoMEM248
;uarthandler.c, 379 :: 		DMA2_S1CRbits.EN = 0;                  // Desabilita la recepci?n para poder modificar los par?metros
0x2D98	0x2100    MOVS	R1, #0
0x2D9A	0xB249    SXTB	R1, R1
0x2D9C	0x480D    LDR	R0, [PC, #52]
0x2D9E	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 380 :: 		while ( DMA2_S1CRbits.EN );            // espera a que se haya desabilitado realmente
L_vUSARTStartMEMtoMEM249:
0x2DA0	0x480C    LDR	R0, [PC, #48]
0x2DA2	0x6800    LDR	R0, [R0, #0]
0x2DA4	0xB100    CBZ	R0, L_vUSARTStartMEMtoMEM250
0x2DA6	0xE7FB    B	L_vUSARTStartMEMtoMEM249
L_vUSARTStartMEMtoMEM250:
;uarthandler.c, 383 :: 		DMA2_S1PAR = ( unsigned long ) pcBufferOrigin;        // Direccion de periferico a rutear
0x2DA8	0x9901    LDR	R1, [SP, #4]
0x2DAA	0x480B    LDR	R0, [PC, #44]
0x2DAC	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 384 :: 		DMA2_S1M0AR = ( unsigned long ) pcBufferDestination;  // Direccion de la memoria a rutear
0x2DAE	0x9902    LDR	R1, [SP, #8]
0x2DB0	0x480A    LDR	R0, [PC, #40]
0x2DB2	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 386 :: 		DMA2_S1NDTR = ulSizeInBytes;           // Tamagno de datos a manejar (Header + Payload)
0x2DB4	0x9903    LDR	R1, [SP, #12]
0x2DB6	0x480A    LDR	R0, [PC, #40]
0x2DB8	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 387 :: 		DMA2_S1CRbits.EN = 1;
0x2DBA	0x2101    MOVS	R1, #1
0x2DBC	0xB249    SXTB	R1, R1
0x2DBE	0x4805    LDR	R0, [PC, #20]
0x2DC0	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 388 :: 		while ( DMA2_S1CRbits.EN );
L_vUSARTStartMEMtoMEM251:
0x2DC2	0x4804    LDR	R0, [PC, #16]
0x2DC4	0x6800    LDR	R0, [R0, #0]
0x2DC6	0xB100    CBZ	R0, L_vUSARTStartMEMtoMEM252
0x2DC8	0xE7FB    B	L_vUSARTStartMEMtoMEM251
L_vUSARTStartMEMtoMEM252:
;uarthandler.c, 389 :: 		return 1;                              // indica que transmitio
0x2DCA	0x2001    MOVS	R0, #1
0x2DCC	0xE000    B	L_end_vUSARTStartMEMtoMEM
;uarthandler.c, 390 :: 		}
L_vUSARTStartMEMtoMEM248:
;uarthandler.c, 391 :: 		return 0;                                 // indica que NO transmitio
0x2DCE	0x2000    MOVS	R0, #0
;uarthandler.c, 393 :: 		}
L_end_vUSARTStartMEMtoMEM:
0x2DD0	0xB001    ADD	SP, SP, #4
0x2DD2	0x4770    BX	LR
0x2DD4	0x8500424C  	DMA2_S1CRbits+0
0x2DD8	0x64304002  	DMA2_S1PAR+0
0x2DDC	0x64344002  	DMA2_S1M0AR+0
0x2DE0	0x642C4002  	DMA2_S1NDTR+0
; end of _vUSARTStartMEMtoMEM
_vRF4463MainCommandProcessor:
;DriverRF4463PROMain.c, 137 :: 		void vRF4463MainCommandProcessor ( unsigned char *ucBuffer ) {
0x315C	0xB0B0    SUB	SP, SP, #192
0x315E	0xF8CDE000  STR	LR, [SP, #0]
;DriverRF4463PROMain.c, 138 :: 		unsigned char ucCommand [ 32 ] = { 0x00 };
0x3162	0xF10D0B16  ADD	R11, SP, #22
0x3166	0xF10B0AA3  ADD	R10, R11, #163
0x316A	0xF8DFC2D4  LDR	R12, [PC, #724]
0x316E	0xF000FFC3  BL	___CC2DW+0
;DriverRF4463PROMain.c, 140 :: 		unsigned char ucLongArgument[ 64 ] = { 0x00 };     // Espera argumentos de hasta 11 bytes
;DriverRF4463PROMain.c, 141 :: 		unsigned char ucCounterBuffer = 0;
;DriverRF4463PROMain.c, 142 :: 		unsigned char ucCounterCommand = 0;
;DriverRF4463PROMain.c, 143 :: 		unsigned char ucCounterLongArgument = 0;
;DriverRF4463PROMain.c, 145 :: 		unsigned char ucTXT [ 64 ] = { 0x00 };             // string de conversiones temporales
;DriverRF4463PROMain.c, 147 :: 		ulArgument = 0;
0x3172	0x2100    MOVS	R1, #0
0x3174	0x48B3    LDR	R0, [PC, #716]
0x3176	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 150 :: 		if ( ucBuffer[ 0 ] > '@' && ucBuffer[ 0 ] <= 'z' ) {
0x3178	0x9830    LDR	R0, [SP, #192]
0x317A	0x1C00    ADDS	R0, R0, #0
0x317C	0x7800    LDRB	R0, [R0, #0]
0x317E	0x2840    CMP	R0, #64
0x3180	0xD951    BLS	L_vRF4463MainCommandProcessor272
0x3182	0x9830    LDR	R0, [SP, #192]
0x3184	0x1C00    ADDS	R0, R0, #0
0x3186	0x7800    LDRB	R0, [R0, #0]
0x3188	0x287A    CMP	R0, #122
0x318A	0xD84C    BHI	L_vRF4463MainCommandProcessor272
L__vRF4463MainCommandProcessor480:
;DriverRF4463PROMain.c, 152 :: 		while ( ucBuffer[ ucCounterBuffer ] != '|' && ucCounterCommand < 32 ) {      // primer token
L_vRF4463MainCommandProcessor273:
0x318C	0xF89D1076  LDRB	R1, [SP, #118]
0x3190	0x9830    LDR	R0, [SP, #192]
0x3192	0x1840    ADDS	R0, R0, R1
0x3194	0x7800    LDRB	R0, [R0, #0]
0x3196	0x287C    CMP	R0, #124
0x3198	0xD01F    BEQ	L_vRF4463MainCommandProcessor274
0x319A	0xF89D0077  LDRB	R0, [SP, #119]
0x319E	0x2820    CMP	R0, #32
0x31A0	0xD21B    BCS	L_vRF4463MainCommandProcessor274
L__vRF4463MainCommandProcessor479:
;DriverRF4463PROMain.c, 153 :: 		ucCommand[ ucCounterCommand++ ] = toupper( ucBuffer[ ucCounterBuffer++ ] );
0x31A2	0xF10D0116  ADD	R1, SP, #22
0x31A6	0xF89D0077  LDRB	R0, [SP, #119]
0x31AA	0x1808    ADDS	R0, R1, R0
0x31AC	0x902F    STR	R0, [SP, #188]
0x31AE	0xF89D1076  LDRB	R1, [SP, #118]
0x31B2	0x9830    LDR	R0, [SP, #192]
0x31B4	0x1840    ADDS	R0, R0, R1
0x31B6	0x7800    LDRB	R0, [R0, #0]
0x31B8	0xB2C4    UXTB	R4, R0
0x31BA	0xB2E0    UXTB	R0, R4
0x31BC	0xF7FEFE7E  BL	_toupper+0
0x31C0	0x992F    LDR	R1, [SP, #188]
0x31C2	0x7008    STRB	R0, [R1, #0]
0x31C4	0xF89D0077  LDRB	R0, [SP, #119]
0x31C8	0x1C40    ADDS	R0, R0, #1
0x31CA	0xF88D0077  STRB	R0, [SP, #119]
0x31CE	0xF89D0076  LDRB	R0, [SP, #118]
0x31D2	0x1C40    ADDS	R0, R0, #1
0x31D4	0xF88D0076  STRB	R0, [SP, #118]
;DriverRF4463PROMain.c, 154 :: 		}
0x31D8	0xE7D8    B	L_vRF4463MainCommandProcessor273
L_vRF4463MainCommandProcessor274:
;DriverRF4463PROMain.c, 156 :: 		ucCounterBuffer++;                                                           // evita el Token
0x31DA	0xF89D0076  LDRB	R0, [SP, #118]
0x31DE	0x1C40    ADDS	R0, R0, #1
0x31E0	0xF88D0076  STRB	R0, [SP, #118]
;DriverRF4463PROMain.c, 158 :: 		while ( ucBuffer[ ucCounterBuffer ] != CHR_CR && ucCounterLongArgument < 64 ) {   // segundo token
L_vRF4463MainCommandProcessor277:
0x31E4	0xF89D1076  LDRB	R1, [SP, #118]
0x31E8	0x9830    LDR	R0, [SP, #192]
0x31EA	0x1840    ADDS	R0, R0, R1
0x31EC	0x7800    LDRB	R0, [R0, #0]
0x31EE	0x280D    CMP	R0, #13
0x31F0	0xD019    BEQ	L_vRF4463MainCommandProcessor278
0x31F2	0xF89D0078  LDRB	R0, [SP, #120]
0x31F6	0x2840    CMP	R0, #64
0x31F8	0xD215    BCS	L_vRF4463MainCommandProcessor278
L__vRF4463MainCommandProcessor478:
;DriverRF4463PROMain.c, 159 :: 		ucLongArgument[ ucCounterLongArgument ] = ucBuffer[ ucCounterBuffer ] ;   //  toupper(
0x31FA	0xF10D0136  ADD	R1, SP, #54
0x31FE	0xF89D0078  LDRB	R0, [SP, #120]
0x3202	0x180A    ADDS	R2, R1, R0
0x3204	0xF89D1076  LDRB	R1, [SP, #118]
0x3208	0x9830    LDR	R0, [SP, #192]
0x320A	0x1840    ADDS	R0, R0, R1
0x320C	0x7800    LDRB	R0, [R0, #0]
0x320E	0x7010    STRB	R0, [R2, #0]
;DriverRF4463PROMain.c, 160 :: 		ucCounterBuffer++;
0x3210	0xF89D0076  LDRB	R0, [SP, #118]
0x3214	0x1C40    ADDS	R0, R0, #1
0x3216	0xF88D0076  STRB	R0, [SP, #118]
;DriverRF4463PROMain.c, 161 :: 		ucCounterLongArgument++;
0x321A	0xF89D0078  LDRB	R0, [SP, #120]
0x321E	0x1C40    ADDS	R0, R0, #1
0x3220	0xF88D0078  STRB	R0, [SP, #120]
;DriverRF4463PROMain.c, 162 :: 		}
0x3224	0xE7DE    B	L_vRF4463MainCommandProcessor277
L_vRF4463MainCommandProcessor278:
;DriverRF4463PROMain.c, 163 :: 		}
L_vRF4463MainCommandProcessor272:
;DriverRF4463PROMain.c, 167 :: 		if ( memcmp( CMD_RADIO_POWER_SET, ucCommand, sizeof( CMD_RADIO_POWER_SET ) ) == 0x00 ) {
0x3226	0xF10D0416  ADD	R4, SP, #22
0x322A	0x220A    MOVS	R2, #10
0x322C	0xB212    SXTH	R2, R2
0x322E	0x4621    MOV	R1, R4
0x3230	0x4885    LDR	R0, [PC, #532]
0x3232	0xF7FEFE29  BL	_memcmp+0
0x3236	0x2800    CMP	R0, #0
0x3238	0xD129    BNE	L_vRF4463MainCommandProcessor281
;DriverRF4463PROMain.c, 168 :: 		ulArgument = StrToShort( ucLongArgument );
0x323A	0xF10D0436  ADD	R4, SP, #54
0x323E	0x4620    MOV	R0, R4
0x3240	0xF7FEFD2A  BL	_StrToShort+0
0x3244	0x497F    LDR	R1, [PC, #508]
0x3246	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 170 :: 		if ( ulArgument > 0 && ulArgument <= 127 ) {
0x3248	0x487E    LDR	R0, [PC, #504]
0x324A	0x6800    LDR	R0, [R0, #0]
0x324C	0x2800    CMP	R0, #0
0x324E	0xD913    BLS	L_vRF4463MainCommandProcessor284
0x3250	0x487C    LDR	R0, [PC, #496]
0x3252	0x6800    LDR	R0, [R0, #0]
0x3254	0x287F    CMP	R0, #127
0x3256	0xD80F    BHI	L_vRF4463MainCommandProcessor284
L__vRF4463MainCommandProcessor477:
;DriverRF4463PROMain.c, 171 :: 		ucRF4463Power = ulArgument;
0x3258	0x487A    LDR	R0, [PC, #488]
0x325A	0x6801    LDR	R1, [R0, #0]
0x325C	0x487B    LDR	R0, [PC, #492]
0x325E	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 172 :: 		vRF4463MainApplyChanges();
0x3260	0xF7FEFFB0  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 173 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3264	0x487A    LDR	R0, [PC, #488]
0x3266	0xF7FDFA33  BL	_strlen+0
0x326A	0xB401    PUSH	(R0)
0x326C	0x4878    LDR	R0, [PC, #480]
0x326E	0xB401    PUSH	(R0)
0x3270	0xF000FF9E  BL	_vUSART1Start_TX+0
0x3274	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 174 :: 		}
0x3276	0xE008    B	L_vRF4463MainCommandProcessor285
L_vRF4463MainCommandProcessor284:
;DriverRF4463PROMain.c, 176 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x3278	0x4876    LDR	R0, [PC, #472]
0x327A	0xF7FDFA29  BL	_strlen+0
0x327E	0xB401    PUSH	(R0)
0x3280	0x4874    LDR	R0, [PC, #464]
0x3282	0xB401    PUSH	(R0)
0x3284	0xF000FF94  BL	_vUSART1Start_TX+0
0x3288	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 177 :: 		}
L_vRF4463MainCommandProcessor285:
;DriverRF4463PROMain.c, 178 :: 		}
0x328A	0xF000BEA0  B	L_vRF4463MainCommandProcessor286
L_vRF4463MainCommandProcessor281:
;DriverRF4463PROMain.c, 182 :: 		else if ( memcmp( CMD_RADIO_BAND_SET, ucCommand, sizeof( CMD_RADIO_BAND_SET ) ) == 0x00 ) {
0x328E	0xF10D0416  ADD	R4, SP, #22
0x3292	0x2209    MOVS	R2, #9
0x3294	0xB212    SXTH	R2, R2
0x3296	0x4621    MOV	R1, R4
0x3298	0x486F    LDR	R0, [PC, #444]
0x329A	0xF7FEFDF5  BL	_memcmp+0
0x329E	0x2800    CMP	R0, #0
0x32A0	0xD147    BNE	L_vRF4463MainCommandProcessor287
;DriverRF4463PROMain.c, 183 :: 		ulArgument = StrToInt( ucLongArgument );
0x32A2	0xF10D0436  ADD	R4, SP, #54
0x32A6	0x4620    MOV	R0, R4
0x32A8	0xF7FEFEFC  BL	_StrToInt+0
0x32AC	0x4965    LDR	R1, [PC, #404]
0x32AE	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 185 :: 		if ( ulArgument == 433 || ulArgument == 868 || ulArgument == 915 ) {
0x32B0	0x4864    LDR	R0, [PC, #400]
0x32B2	0x6801    LDR	R1, [R0, #0]
0x32B4	0xF24010B1  MOVW	R0, #433
0x32B8	0x4281    CMP	R1, R0
0x32BA	0xD00B    BEQ	L__vRF4463MainCommandProcessor476
0x32BC	0x4861    LDR	R0, [PC, #388]
0x32BE	0x6800    LDR	R0, [R0, #0]
0x32C0	0xF5B07F59  CMP	R0, #868
0x32C4	0xD006    BEQ	L__vRF4463MainCommandProcessor476
0x32C6	0x485F    LDR	R0, [PC, #380]
0x32C8	0x6801    LDR	R1, [R0, #0]
0x32CA	0xF2403093  MOVW	R0, #915
0x32CE	0x4281    CMP	R1, R0
0x32D0	0xD000    BEQ	L__vRF4463MainCommandProcessor476
0x32D2	0xE023    B	L_vRF4463MainCommandProcessor290
L__vRF4463MainCommandProcessor476:
;DriverRF4463PROMain.c, 186 :: 		ucRF4463Freq3 = ucLongArgument[ 0 ] - 48;
0x32D4	0xF10D0036  ADD	R0, SP, #54
0x32D8	0x1C00    ADDS	R0, R0, #0
0x32DA	0x7800    LDRB	R0, [R0, #0]
0x32DC	0xF2A00130  SUBW	R1, R0, #48
0x32E0	0x485E    LDR	R0, [PC, #376]
0x32E2	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 187 :: 		ucRF4463Freq2 = ucLongArgument[ 1 ] - 48;
0x32E4	0xF10D0036  ADD	R0, SP, #54
0x32E8	0x1C40    ADDS	R0, R0, #1
0x32EA	0x7800    LDRB	R0, [R0, #0]
0x32EC	0xF2A00130  SUBW	R1, R0, #48
0x32F0	0x485B    LDR	R0, [PC, #364]
0x32F2	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 188 :: 		ucRF4463Freq1 = ucLongArgument[ 2 ] - 48;
0x32F4	0xF10D0036  ADD	R0, SP, #54
0x32F8	0x1C80    ADDS	R0, R0, #2
0x32FA	0x7800    LDRB	R0, [R0, #0]
0x32FC	0xF2A00130  SUBW	R1, R0, #48
0x3300	0x4858    LDR	R0, [PC, #352]
0x3302	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 189 :: 		vRF4463MainApplyChanges();
0x3304	0xF7FEFF5E  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 190 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3308	0x4851    LDR	R0, [PC, #324]
0x330A	0xF7FDF9E1  BL	_strlen+0
0x330E	0xB401    PUSH	(R0)
0x3310	0x484F    LDR	R0, [PC, #316]
0x3312	0xB401    PUSH	(R0)
0x3314	0xF000FF4C  BL	_vUSART1Start_TX+0
0x3318	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 191 :: 		}
0x331A	0xE008    B	L_vRF4463MainCommandProcessor291
L_vRF4463MainCommandProcessor290:
;DriverRF4463PROMain.c, 193 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x331C	0x484D    LDR	R0, [PC, #308]
0x331E	0xF7FDF9D7  BL	_strlen+0
0x3322	0xB401    PUSH	(R0)
0x3324	0x484B    LDR	R0, [PC, #300]
0x3326	0xB401    PUSH	(R0)
0x3328	0xF000FF42  BL	_vUSART1Start_TX+0
0x332C	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 194 :: 		}
L_vRF4463MainCommandProcessor291:
;DriverRF4463PROMain.c, 195 :: 		}
0x332E	0xF000BE4E  B	L_vRF4463MainCommandProcessor292
L_vRF4463MainCommandProcessor287:
;DriverRF4463PROMain.c, 199 :: 		else if ( memcmp( CMD_RADIO_RATE_SET, ucCommand, sizeof( CMD_RADIO_RATE_SET ) ) == 0x00 ) {
0x3332	0xF10D0416  ADD	R4, SP, #22
0x3336	0x2209    MOVS	R2, #9
0x3338	0xB212    SXTH	R2, R2
0x333A	0x4621    MOV	R1, R4
0x333C	0x484A    LDR	R0, [PC, #296]
0x333E	0xF7FEFDA3  BL	_memcmp+0
0x3342	0x2800    CMP	R0, #0
0x3344	0xF0408115  BNE	L_vRF4463MainCommandProcessor293
;DriverRF4463PROMain.c, 200 :: 		ulArgument = StrToLong( ucLongArgument );
0x3348	0xF10D0436  ADD	R4, SP, #54
0x334C	0x4620    MOV	R0, R4
0x334E	0xF7FEFE1B  BL	_StrToLong+0
0x3352	0x493C    LDR	R1, [PC, #240]
0x3354	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 202 :: 		switch ( ulArgument ) {
0x3356	0xE0C7    B	L_vRF4463MainCommandProcessor294
;DriverRF4463PROMain.c, 203 :: 		case 500      : ucRF4463Rate = dr_500;
L_vRF4463MainCommandProcessor296:
0x3358	0x210A    MOVS	R1, #10
0x335A	0x4844    LDR	R0, [PC, #272]
0x335C	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 204 :: 		vRF4463MainApplyChanges();
0x335E	0xF7FEFF31  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 205 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3362	0x483B    LDR	R0, [PC, #236]
0x3364	0xF7FDF9B4  BL	_strlen+0
0x3368	0xB401    PUSH	(R0)
0x336A	0x4839    LDR	R0, [PC, #228]
0x336C	0xB401    PUSH	(R0)
0x336E	0xF000FF1F  BL	_vUSART1Start_TX+0
0x3372	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 206 :: 		break;
0x3374	0xE0FB    B	L_vRF4463MainCommandProcessor295
;DriverRF4463PROMain.c, 207 :: 		case 1200     : ucRF4463Rate = dr_1p2;
L_vRF4463MainCommandProcessor297:
0x3376	0x2100    MOVS	R1, #0
0x3378	0x483C    LDR	R0, [PC, #240]
0x337A	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 208 :: 		vRF4463MainApplyChanges();
0x337C	0xF7FEFF22  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 209 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3380	0x4833    LDR	R0, [PC, #204]
0x3382	0xF7FDF9A5  BL	_strlen+0
0x3386	0xB401    PUSH	(R0)
0x3388	0x4831    LDR	R0, [PC, #196]
0x338A	0xB401    PUSH	(R0)
0x338C	0xF000FF10  BL	_vUSART1Start_TX+0
0x3390	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 210 :: 		break;
0x3392	0xE0EC    B	L_vRF4463MainCommandProcessor295
;DriverRF4463PROMain.c, 211 :: 		case 2400     : ucRF4463Rate = dr_2p4;
L_vRF4463MainCommandProcessor298:
0x3394	0x2101    MOVS	R1, #1
0x3396	0x4835    LDR	R0, [PC, #212]
0x3398	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 212 :: 		vRF4463MainApplyChanges();
0x339A	0xF7FEFF13  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 213 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x339E	0x482C    LDR	R0, [PC, #176]
0x33A0	0xF7FDF996  BL	_strlen+0
0x33A4	0xB401    PUSH	(R0)
0x33A6	0x482A    LDR	R0, [PC, #168]
0x33A8	0xB401    PUSH	(R0)
0x33AA	0xF000FF01  BL	_vUSART1Start_TX+0
0x33AE	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 214 :: 		break;
0x33B0	0xE0DD    B	L_vRF4463MainCommandProcessor295
;DriverRF4463PROMain.c, 215 :: 		case 4800     : ucRF4463Rate = dr_4p8;
L_vRF4463MainCommandProcessor299:
0x33B2	0x2102    MOVS	R1, #2
0x33B4	0x482D    LDR	R0, [PC, #180]
0x33B6	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 216 :: 		vRF4463MainApplyChanges();
0x33B8	0xF7FEFF04  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 217 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x33BC	0x4824    LDR	R0, [PC, #144]
0x33BE	0xF7FDF987  BL	_strlen+0
0x33C2	0xB401    PUSH	(R0)
0x33C4	0x4822    LDR	R0, [PC, #136]
0x33C6	0xB401    PUSH	(R0)
0x33C8	0xF000FEF2  BL	_vUSART1Start_TX+0
0x33CC	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 218 :: 		break;
0x33CE	0xE0CE    B	L_vRF4463MainCommandProcessor295
;DriverRF4463PROMain.c, 219 :: 		case 9600     : ucRF4463Rate = dr_9p6;
L_vRF4463MainCommandProcessor300:
0x33D0	0x2103    MOVS	R1, #3
0x33D2	0x4826    LDR	R0, [PC, #152]
0x33D4	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 220 :: 		vRF4463MainApplyChanges();
0x33D6	0xF7FEFEF5  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 221 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x33DA	0x481D    LDR	R0, [PC, #116]
0x33DC	0xF7FDF978  BL	_strlen+0
0x33E0	0xB401    PUSH	(R0)
0x33E2	0x481B    LDR	R0, [PC, #108]
0x33E4	0xB401    PUSH	(R0)
0x33E6	0xF000FEE3  BL	_vUSART1Start_TX+0
0x33EA	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 222 :: 		break;
0x33EC	0xE0BF    B	L_vRF4463MainCommandProcessor295
;DriverRF4463PROMain.c, 223 :: 		case 19200    : ucRF4463Rate = dr_19p2;
L_vRF4463MainCommandProcessor301:
0x33EE	0x2104    MOVS	R1, #4
0x33F0	0x481E    LDR	R0, [PC, #120]
0x33F2	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 224 :: 		vRF4463MainApplyChanges();
0x33F4	0xF7FEFEE6  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 225 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x33F8	0x4815    LDR	R0, [PC, #84]
0x33FA	0xF7FDF969  BL	_strlen+0
0x33FE	0xB401    PUSH	(R0)
0x3400	0x4813    LDR	R0, [PC, #76]
0x3402	0xB401    PUSH	(R0)
0x3404	0xF000FED4  BL	_vUSART1Start_TX+0
0x3408	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 226 :: 		break;
0x340A	0xE0B0    B	L_vRF4463MainCommandProcessor295
;DriverRF4463PROMain.c, 227 :: 		case 38400    : ucRF4463Rate = dr_38p4;
L_vRF4463MainCommandProcessor302:
0x340C	0x2105    MOVS	R1, #5
0x340E	0x4817    LDR	R0, [PC, #92]
0x3410	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 228 :: 		vRF4463MainApplyChanges();
0x3412	0xF7FEFED7  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 229 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3416	0x480E    LDR	R0, [PC, #56]
0x3418	0xF7FDF95A  BL	_strlen+0
0x341C	0xB401    PUSH	(R0)
0x341E	0x480C    LDR	R0, [PC, #48]
0x3420	0xB401    PUSH	(R0)
0x3422	0xF000FEC5  BL	_vUSART1Start_TX+0
0x3426	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 230 :: 		break;
0x3428	0xE0A1    B	L_vRF4463MainCommandProcessor295
;DriverRF4463PROMain.c, 231 :: 		case 76800    : ucRF4463Rate = dr_76p8;
L_vRF4463MainCommandProcessor303:
0x342A	0x2106    MOVS	R1, #6
0x342C	0x480F    LDR	R0, [PC, #60]
0x342E	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 232 :: 		vRF4463MainApplyChanges();
0x3430	0xF7FEFEC8  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 233 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3434	0x4806    LDR	R0, [PC, #24]
0x3436	0xF7FDF94B  BL	_strlen+0
0x343A	0xB401    PUSH	(R0)
0x343C	0x4804    LDR	R0, [PC, #16]
0x343E	0xE017    B	#46
0x3440	0x7F2C0000  	?ICSvRF4463MainCommandProcessor_ucCommand_L0+0
0x3444	0x23382000  	vRF4463MainCommandProcessor_ulArgument_L0+0
0x3448	0x200C2000  	_CMD_RADIO_POWER_SET+0
0x344C	0x23362000  	_ucRF4463Power+0
0x3450	0x20162000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x3454	0x203E2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x3458	0x205E2000  	_CMD_RADIO_BAND_SET+0
0x345C	0x23372000  	_ucRF4463Freq3+0
0x3460	0x233C2000  	_ucRF4463Freq2+0
0x3464	0x233D2000  	_ucRF4463Freq1+0
0x3468	0x20672000  	_CMD_RADIO_RATE_SET+0
0x346C	0x233E2000  	_ucRF4463Rate+0
0x3470	0xB401    PUSH	(R0)
0x3472	0xF000FE9D  BL	_vUSART1Start_TX+0
0x3476	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 234 :: 		break;
0x3478	0xE079    B	L_vRF4463MainCommandProcessor295
;DriverRF4463PROMain.c, 235 :: 		case 115200   : ucRF4463Rate = dr_115p2;
L_vRF4463MainCommandProcessor304:
0x347A	0x2107    MOVS	R1, #7
0x347C	0x48AB    LDR	R0, [PC, #684]
0x347E	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 236 :: 		vRF4463MainApplyChanges();
0x3480	0xF7FEFEA0  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 237 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3484	0x48AA    LDR	R0, [PC, #680]
0x3486	0xF7FDF923  BL	_strlen+0
0x348A	0xB401    PUSH	(R0)
0x348C	0x48A8    LDR	R0, [PC, #672]
0x348E	0xB401    PUSH	(R0)
0x3490	0xF000FE8E  BL	_vUSART1Start_TX+0
0x3494	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 238 :: 		break;
0x3496	0xE06A    B	L_vRF4463MainCommandProcessor295
;DriverRF4463PROMain.c, 239 :: 		case 256000   : ucRF4463Rate = dr_256k;
L_vRF4463MainCommandProcessor305:
0x3498	0x2108    MOVS	R1, #8
0x349A	0x48A4    LDR	R0, [PC, #656]
0x349C	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 240 :: 		vRF4463MainApplyChanges();
0x349E	0xF7FEFE91  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 241 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x34A2	0x48A3    LDR	R0, [PC, #652]
0x34A4	0xF7FDF914  BL	_strlen+0
0x34A8	0xB401    PUSH	(R0)
0x34AA	0x48A1    LDR	R0, [PC, #644]
0x34AC	0xB401    PUSH	(R0)
0x34AE	0xF000FE7F  BL	_vUSART1Start_TX+0
0x34B2	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 242 :: 		break;
0x34B4	0xE05B    B	L_vRF4463MainCommandProcessor295
;DriverRF4463PROMain.c, 243 :: 		case 500000   : ucRF4463Rate = dr_500k;
L_vRF4463MainCommandProcessor306:
0x34B6	0x2109    MOVS	R1, #9
0x34B8	0x489C    LDR	R0, [PC, #624]
0x34BA	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 244 :: 		vRF4463MainApplyChanges();
0x34BC	0xF7FEFE82  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 245 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x34C0	0x489B    LDR	R0, [PC, #620]
0x34C2	0xF7FDF905  BL	_strlen+0
0x34C6	0xB401    PUSH	(R0)
0x34C8	0x4899    LDR	R0, [PC, #612]
0x34CA	0xB401    PUSH	(R0)
0x34CC	0xF000FE70  BL	_vUSART1Start_TX+0
0x34D0	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 246 :: 		break;
0x34D2	0xE04C    B	L_vRF4463MainCommandProcessor295
;DriverRF4463PROMain.c, 247 :: 		default       : vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
L_vRF4463MainCommandProcessor307:
0x34D4	0x4897    LDR	R0, [PC, #604]
0x34D6	0xF7FDF8FB  BL	_strlen+0
0x34DA	0xB401    PUSH	(R0)
0x34DC	0x4895    LDR	R0, [PC, #596]
0x34DE	0xB401    PUSH	(R0)
0x34E0	0xF000FE66  BL	_vUSART1Start_TX+0
0x34E4	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 248 :: 		}
0x34E6	0xE042    B	L_vRF4463MainCommandProcessor295
L_vRF4463MainCommandProcessor294:
0x34E8	0x4893    LDR	R0, [PC, #588]
0x34EA	0x6800    LDR	R0, [R0, #0]
0x34EC	0xF5B07FFA  CMP	R0, #500
0x34F0	0xF43FAF32  BEQ	L_vRF4463MainCommandProcessor296
0x34F4	0x4890    LDR	R0, [PC, #576]
0x34F6	0x6800    LDR	R0, [R0, #0]
0x34F8	0xF5B06F96  CMP	R0, #1200
0x34FC	0xF43FAF3B  BEQ	L_vRF4463MainCommandProcessor297
0x3500	0x488D    LDR	R0, [PC, #564]
0x3502	0x6800    LDR	R0, [R0, #0]
0x3504	0xF5B06F16  CMP	R0, #2400
0x3508	0xF43FAF44  BEQ	L_vRF4463MainCommandProcessor298
0x350C	0x488A    LDR	R0, [PC, #552]
0x350E	0x6800    LDR	R0, [R0, #0]
0x3510	0xF5B05F96  CMP	R0, #4800
0x3514	0xF43FAF4D  BEQ	L_vRF4463MainCommandProcessor299
0x3518	0x4887    LDR	R0, [PC, #540]
0x351A	0x6800    LDR	R0, [R0, #0]
0x351C	0xF5B05F16  CMP	R0, #9600
0x3520	0xF43FAF56  BEQ	L_vRF4463MainCommandProcessor300
0x3524	0x4884    LDR	R0, [PC, #528]
0x3526	0x6800    LDR	R0, [R0, #0]
0x3528	0xF5B04F96  CMP	R0, #19200
0x352C	0xF43FAF5F  BEQ	L_vRF4463MainCommandProcessor301
0x3530	0x4881    LDR	R0, [PC, #516]
0x3532	0x6800    LDR	R0, [R0, #0]
0x3534	0xF5B04F16  CMP	R0, #38400
0x3538	0xF43FAF68  BEQ	L_vRF4463MainCommandProcessor302
0x353C	0x487E    LDR	R0, [PC, #504]
0x353E	0x6800    LDR	R0, [R0, #0]
0x3540	0xF5B03F96  CMP	R0, #76800
0x3544	0xF43FAF71  BEQ	L_vRF4463MainCommandProcessor303
0x3548	0x487B    LDR	R0, [PC, #492]
0x354A	0x6800    LDR	R0, [R0, #0]
0x354C	0xF5B03FE1  CMP	R0, #115200
0x3550	0xF43FAF93  BEQ	L_vRF4463MainCommandProcessor304
0x3554	0x4878    LDR	R0, [PC, #480]
0x3556	0x6800    LDR	R0, [R0, #0]
0x3558	0xF5B03F7A  CMP	R0, #256000
0x355C	0xF43FAF9C  BEQ	L_vRF4463MainCommandProcessor305
0x3560	0x4875    LDR	R0, [PC, #468]
0x3562	0x6801    LDR	R1, [R0, #0]
0x3564	0x4875    LDR	R0, [PC, #468]
0x3566	0x4281    CMP	R1, R0
0x3568	0xF43FAFA5  BEQ	L_vRF4463MainCommandProcessor306
0x356C	0xE7B2    B	L_vRF4463MainCommandProcessor307
L_vRF4463MainCommandProcessor295:
;DriverRF4463PROMain.c, 249 :: 		}
0x356E	0xF000BD2E  B	L_vRF4463MainCommandProcessor308
L_vRF4463MainCommandProcessor293:
;DriverRF4463PROMain.c, 253 :: 		else if ( memcmp( CMD_RADIO_CHANNEL_SET, ucCommand, sizeof( CMD_RADIO_CHANNEL_SET ) ) == 0x00 ) {
0x3572	0xF10D0416  ADD	R4, SP, #22
0x3576	0x220C    MOVS	R2, #12
0x3578	0xB212    SXTH	R2, R2
0x357A	0x4621    MOV	R1, R4
0x357C	0x4870    LDR	R0, [PC, #448]
0x357E	0xF7FEFC83  BL	_memcmp+0
0x3582	0x2800    CMP	R0, #0
0x3584	0xD129    BNE	L_vRF4463MainCommandProcessor309
;DriverRF4463PROMain.c, 254 :: 		ulArgument = StrToInt( ucLongArgument );
0x3586	0xF10D0436  ADD	R4, SP, #54
0x358A	0x4620    MOV	R0, R4
0x358C	0xF7FEFD8A  BL	_StrToInt+0
0x3590	0x4969    LDR	R1, [PC, #420]
0x3592	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 256 :: 		if ( ulArgument >= 0 && ulArgument <= 50 ) {
0x3594	0x4868    LDR	R0, [PC, #416]
0x3596	0x6800    LDR	R0, [R0, #0]
0x3598	0x2800    CMP	R0, #0
0x359A	0xD313    BCC	L_vRF4463MainCommandProcessor312
0x359C	0x4866    LDR	R0, [PC, #408]
0x359E	0x6800    LDR	R0, [R0, #0]
0x35A0	0x2832    CMP	R0, #50
0x35A2	0xD80F    BHI	L_vRF4463MainCommandProcessor312
L__vRF4463MainCommandProcessor475:
;DriverRF4463PROMain.c, 257 :: 		ucRF4463FreqChannel = ulArgument;    // Se aplica al ejecutar funciones de TX o RX
0x35A4	0x4864    LDR	R0, [PC, #400]
0x35A6	0x6801    LDR	R1, [R0, #0]
0x35A8	0x4866    LDR	R0, [PC, #408]
0x35AA	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 258 :: 		vRF4463MainApplyChanges();
0x35AC	0xF7FEFE0A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 259 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x35B0	0x485F    LDR	R0, [PC, #380]
0x35B2	0xF7FDF88D  BL	_strlen+0
0x35B6	0xB401    PUSH	(R0)
0x35B8	0x485D    LDR	R0, [PC, #372]
0x35BA	0xB401    PUSH	(R0)
0x35BC	0xF000FDF8  BL	_vUSART1Start_TX+0
0x35C0	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 260 :: 		}
0x35C2	0xE008    B	L_vRF4463MainCommandProcessor313
L_vRF4463MainCommandProcessor312:
;DriverRF4463PROMain.c, 262 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x35C4	0x485B    LDR	R0, [PC, #364]
0x35C6	0xF7FDF883  BL	_strlen+0
0x35CA	0xB401    PUSH	(R0)
0x35CC	0x4859    LDR	R0, [PC, #356]
0x35CE	0xB401    PUSH	(R0)
0x35D0	0xF000FDEE  BL	_vUSART1Start_TX+0
0x35D4	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 263 :: 		}
L_vRF4463MainCommandProcessor313:
;DriverRF4463PROMain.c, 264 :: 		}
0x35D6	0xF000BCFA  B	L_vRF4463MainCommandProcessor314
L_vRF4463MainCommandProcessor309:
;DriverRF4463PROMain.c, 268 :: 		else if ( memcmp( CMD_RADIO_BW_SET, ucCommand, sizeof( CMD_RADIO_BW_SET ) ) == 0x00 ) {
0x35DA	0xF10D0416  ADD	R4, SP, #22
0x35DE	0x2207    MOVS	R2, #7
0x35E0	0xB212    SXTH	R2, R2
0x35E2	0x4621    MOV	R1, R4
0x35E4	0x4858    LDR	R0, [PC, #352]
0x35E6	0xF7FEFC4F  BL	_memcmp+0
0x35EA	0x2800    CMP	R0, #0
0x35EC	0xD12B    BNE	L_vRF4463MainCommandProcessor315
;DriverRF4463PROMain.c, 269 :: 		ulArgument = StrToInt( ucLongArgument );
0x35EE	0xF10D0436  ADD	R4, SP, #54
0x35F2	0x4620    MOV	R0, R4
0x35F4	0xF7FEFD56  BL	_StrToInt+0
0x35F8	0x494F    LDR	R1, [PC, #316]
0x35FA	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 271 :: 		if ( ulArgument == 250 || ulArgument == 500 ) {
0x35FC	0x484E    LDR	R0, [PC, #312]
0x35FE	0x6800    LDR	R0, [R0, #0]
0x3600	0x28FA    CMP	R0, #250
0x3602	0xD005    BEQ	L__vRF4463MainCommandProcessor474
0x3604	0x484C    LDR	R0, [PC, #304]
0x3606	0x6800    LDR	R0, [R0, #0]
0x3608	0xF5B07FFA  CMP	R0, #500
0x360C	0xD000    BEQ	L__vRF4463MainCommandProcessor474
0x360E	0xE00F    B	L_vRF4463MainCommandProcessor318
L__vRF4463MainCommandProcessor474:
;DriverRF4463PROMain.c, 272 :: 		ulRF4463Step = ulArgument;
0x3610	0x4849    LDR	R0, [PC, #292]
0x3612	0x6801    LDR	R1, [R0, #0]
0x3614	0x484D    LDR	R0, [PC, #308]
0x3616	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 273 :: 		vRF4463MainApplyChanges();
0x3618	0xF7FEFDD4  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 274 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x361C	0x4844    LDR	R0, [PC, #272]
0x361E	0xF7FDF857  BL	_strlen+0
0x3622	0xB401    PUSH	(R0)
0x3624	0x4842    LDR	R0, [PC, #264]
0x3626	0xB401    PUSH	(R0)
0x3628	0xF000FDC2  BL	_vUSART1Start_TX+0
0x362C	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 275 :: 		}
0x362E	0xE008    B	L_vRF4463MainCommandProcessor319
L_vRF4463MainCommandProcessor318:
;DriverRF4463PROMain.c, 277 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x3630	0x4840    LDR	R0, [PC, #256]
0x3632	0xF7FDF84D  BL	_strlen+0
0x3636	0xB401    PUSH	(R0)
0x3638	0x483E    LDR	R0, [PC, #248]
0x363A	0xB401    PUSH	(R0)
0x363C	0xF000FDB8  BL	_vUSART1Start_TX+0
0x3640	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 278 :: 		}
L_vRF4463MainCommandProcessor319:
;DriverRF4463PROMain.c, 279 :: 		}
0x3642	0xF000BCC4  B	L_vRF4463MainCommandProcessor320
L_vRF4463MainCommandProcessor315:
;DriverRF4463PROMain.c, 286 :: 		else if ( memcmp( CMD_RADIO_MODE_SET, ucCommand, sizeof( CMD_RADIO_MODE_SET ) ) == 0x00 ) {
0x3646	0xF10D0416  ADD	R4, SP, #22
0x364A	0x2209    MOVS	R2, #9
0x364C	0xB212    SXTH	R2, R2
0x364E	0x4621    MOV	R1, R4
0x3650	0x483F    LDR	R0, [PC, #252]
0x3652	0xF7FEFC19  BL	_memcmp+0
0x3656	0x2800    CMP	R0, #0
0x3658	0xF04080C9  BNE	L_vRF4463MainCommandProcessor321
;DriverRF4463PROMain.c, 288 :: 		ucCounterCommand = 0;
0x365C	0x2000    MOVS	R0, #0
0x365E	0xF88D0077  STRB	R0, [SP, #119]
;DriverRF4463PROMain.c, 290 :: 		while ( ucLongArgument[ ucCounterCommand ] != ucUSARTNull && ucCounterCommand < 32 ) {
L_vRF4463MainCommandProcessor322:
0x3662	0xF10D0136  ADD	R1, SP, #54
0x3666	0xF89D0077  LDRB	R0, [SP, #119]
0x366A	0x1808    ADDS	R0, R1, R0
0x366C	0x7801    LDRB	R1, [R0, #0]
0x366E	0x4839    LDR	R0, [PC, #228]
0x3670	0x7800    LDRB	R0, [R0, #0]
0x3672	0x4281    CMP	R1, R0
0x3674	0xD01B    BEQ	L_vRF4463MainCommandProcessor323
0x3676	0xF89D0077  LDRB	R0, [SP, #119]
0x367A	0x2820    CMP	R0, #32
0x367C	0xD217    BCS	L_vRF4463MainCommandProcessor323
L__vRF4463MainCommandProcessor473:
;DriverRF4463PROMain.c, 291 :: 		ucLongArgument[ ucCounterCommand ] = toupper( ucLongArgument[ ucCounterCommand ] );
0x367E	0xF10D0136  ADD	R1, SP, #54
0x3682	0xF89D0077  LDRB	R0, [SP, #119]
0x3686	0x1808    ADDS	R0, R1, R0
0x3688	0x902F    STR	R0, [SP, #188]
0x368A	0xF10D0136  ADD	R1, SP, #54
0x368E	0xF89D0077  LDRB	R0, [SP, #119]
0x3692	0x1808    ADDS	R0, R1, R0
0x3694	0x7800    LDRB	R0, [R0, #0]
0x3696	0xB2C4    UXTB	R4, R0
0x3698	0xB2E0    UXTB	R0, R4
0x369A	0xF7FEFC0F  BL	_toupper+0
0x369E	0x992F    LDR	R1, [SP, #188]
0x36A0	0x7008    STRB	R0, [R1, #0]
;DriverRF4463PROMain.c, 292 :: 		ucCounterCommand++;
0x36A2	0xF89D0077  LDRB	R0, [SP, #119]
0x36A6	0x1C40    ADDS	R0, R0, #1
0x36A8	0xF88D0077  STRB	R0, [SP, #119]
;DriverRF4463PROMain.c, 293 :: 		}
0x36AC	0xE7D9    B	L_vRF4463MainCommandProcessor322
L_vRF4463MainCommandProcessor323:
;DriverRF4463PROMain.c, 296 :: 		if ( memcmp( ARG_RADIO_MODE_STBY, ucLongArgument, sizeof( ARG_RADIO_MODE_STBY ) ) == 0x00 ) {
0x36AE	0xF10D0436  ADD	R4, SP, #54
0x36B2	0x2205    MOVS	R2, #5
0x36B4	0xB212    SXTH	R2, R2
0x36B6	0x4621    MOV	R1, R4
0x36B8	0x4827    LDR	R0, [PC, #156]
0x36BA	0xF7FEFBE5  BL	_memcmp+0
0x36BE	0xB960    CBNZ	R0, L_vRF4463MainCommandProcessor326
;DriverRF4463PROMain.c, 297 :: 		ucRF4463Mode = rf_off;
0x36C0	0x2104    MOVS	R1, #4
0x36C2	0x4826    LDR	R0, [PC, #152]
0x36C4	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 298 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_STBY, strlen( ANS_COMMAND_MODE_STBY ) );
0x36C6	0x4826    LDR	R0, [PC, #152]
0x36C8	0xF7FDF802  BL	_strlen+0
0x36CC	0xB401    PUSH	(R0)
0x36CE	0x4824    LDR	R0, [PC, #144]
0x36D0	0xB401    PUSH	(R0)
0x36D2	0xF000FD6D  BL	_vUSART1Start_TX+0
0x36D6	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 299 :: 		}
0x36D8	0xE087    B	L_vRF4463MainCommandProcessor327
L_vRF4463MainCommandProcessor326:
;DriverRF4463PROMain.c, 300 :: 		else if ( memcmp( ARG_RADIO_MODE_TX_CONT, ucLongArgument, sizeof( ARG_RADIO_MODE_TX_CONT ) ) == 0x00 ) {
0x36DA	0xF10D0436  ADD	R4, SP, #54
0x36DE	0x2208    MOVS	R2, #8
0x36E0	0xB212    SXTH	R2, R2
0x36E2	0x4621    MOV	R1, R4
0x36E4	0x481F    LDR	R0, [PC, #124]
0x36E6	0xF7FEFBCF  BL	_memcmp+0
0x36EA	0xB970    CBNZ	R0, L_vRF4463MainCommandProcessor328
;DriverRF4463PROMain.c, 301 :: 		ucRF4463Mode = tx_test_mode;
0x36EC	0x2102    MOVS	R1, #2
0x36EE	0x481B    LDR	R0, [PC, #108]
0x36F0	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 302 :: 		vRF4463MainApplyChanges();
0x36F2	0xF7FEFD67  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 303 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_TX_CONT, strlen( ANS_COMMAND_MODE_TX_CONT ) );
0x36F6	0x481C    LDR	R0, [PC, #112]
0x36F8	0xF7FCFFEA  BL	_strlen+0
0x36FC	0xB401    PUSH	(R0)
0x36FE	0x481A    LDR	R0, [PC, #104]
0x3700	0xB401    PUSH	(R0)
0x3702	0xF000FD55  BL	_vUSART1Start_TX+0
0x3706	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 304 :: 		}
0x3708	0xE06F    B	L_vRF4463MainCommandProcessor329
L_vRF4463MainCommandProcessor328:
;DriverRF4463PROMain.c, 305 :: 		else if ( memcmp( ARG_RADIO_MODE_RX_CONT, ucLongArgument, sizeof( ARG_RADIO_MODE_RX_CONT ) ) == 0x00 ) {
0x370A	0xF10D0436  ADD	R4, SP, #54
0x370E	0x2208    MOVS	R2, #8
0x3710	0xB212    SXTH	R2, R2
0x3712	0x4621    MOV	R1, R4
0x3714	0x4815    LDR	R0, [PC, #84]
0x3716	0xF7FEFBB7  BL	_memcmp+0
0x371A	0xBB88    CBNZ	R0, L_vRF4463MainCommandProcessor330
;DriverRF4463PROMain.c, 306 :: 		ucRF4463Mode = rx_test_mode;
0x371C	0x2103    MOVS	R1, #3
0x371E	0x480F    LDR	R0, [PC, #60]
0x3720	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 307 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_RX_CONT, strlen( ANS_COMMAND_MODE_RX_CONT ) );
0x3722	0x4813    LDR	R0, [PC, #76]
0x3724	0xF7FCFFD4  BL	_strlen+0
0x3728	0xB401    PUSH	(R0)
0x372A	0xE023    B	#70
0x372C	0x233E2000  	_ucRF4463Rate+0
0x3730	0x20162000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x3734	0x203E2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x3738	0x23382000  	vRF4463MainCommandProcessor_ulArgument_L0+0
0x373C	0xA1200007  	#500000
0x3740	0x20702000  	_CMD_RADIO_CHANNEL_SET+0
0x3744	0x207C2000  	_ucRF4463FreqChannel+0
0x3748	0x207D2000  	_CMD_RADIO_BW_SET+0
0x374C	0x20842000  	_ulRF4463Step+0
0x3750	0x20882000  	_CMD_RADIO_MODE_SET+0
0x3754	0x20912000  	_ucUSARTNull+0
0x3758	0x20922000  	_ARG_RADIO_MODE_STBY+0
0x375C	0x233F2000  	_ucRF4463Mode+0
0x3760	0x20972000  	_ANS_COMMAND_MODE_STBY+0
0x3764	0x20B92000  	_ARG_RADIO_MODE_TX_CONT+0
0x3768	0x20C12000  	_ANS_COMMAND_MODE_TX_CONT+0
0x376C	0x20E32000  	_ARG_RADIO_MODE_RX_CONT+0
0x3770	0x20EB2000  	_ANS_COMMAND_MODE_RX_CONT+0
0x3774	0x48AD    LDR	R0, [PC, #692]
0x3776	0xB401    PUSH	(R0)
0x3778	0xF000FD1A  BL	_vUSART1Start_TX+0
0x377C	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 308 :: 		}
0x377E	0xE034    B	L_vRF4463MainCommandProcessor331
L_vRF4463MainCommandProcessor330:
;DriverRF4463PROMain.c, 309 :: 		else if ( memcmp( ARG_RADIO_MODE_TX_MASTER, ucLongArgument, sizeof( ARG_RADIO_MODE_TX_MASTER ) ) == 0x00 ) {
0x3780	0xF10D0436  ADD	R4, SP, #54
0x3784	0x220A    MOVS	R2, #10
0x3786	0xB212    SXTH	R2, R2
0x3788	0x4621    MOV	R1, R4
0x378A	0x48A9    LDR	R0, [PC, #676]
0x378C	0xF7FEFB7C  BL	_memcmp+0
0x3790	0xB960    CBNZ	R0, L_vRF4463MainCommandProcessor332
;DriverRF4463PROMain.c, 310 :: 		ucRF4463Mode = master_mode;
0x3792	0x2100    MOVS	R1, #0
0x3794	0x48A7    LDR	R0, [PC, #668]
0x3796	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 311 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_TX_MASTER, strlen( ANS_COMMAND_MODE_TX_MASTER ) );
0x3798	0x48A7    LDR	R0, [PC, #668]
0x379A	0xF7FCFF99  BL	_strlen+0
0x379E	0xB401    PUSH	(R0)
0x37A0	0x48A5    LDR	R0, [PC, #660]
0x37A2	0xB401    PUSH	(R0)
0x37A4	0xF000FD04  BL	_vUSART1Start_TX+0
0x37A8	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 312 :: 		}
0x37AA	0xE01E    B	L_vRF4463MainCommandProcessor333
L_vRF4463MainCommandProcessor332:
;DriverRF4463PROMain.c, 313 :: 		else if ( memcmp( ARG_RADIO_MODE_RX_SLAVE, ucLongArgument, sizeof( ARG_RADIO_MODE_RX_SLAVE ) ) == 0x00 ) {
0x37AC	0xF10D0436  ADD	R4, SP, #54
0x37B0	0x2209    MOVS	R2, #9
0x37B2	0xB212    SXTH	R2, R2
0x37B4	0x4621    MOV	R1, R4
0x37B6	0x48A1    LDR	R0, [PC, #644]
0x37B8	0xF7FEFB66  BL	_memcmp+0
0x37BC	0xB960    CBNZ	R0, L_vRF4463MainCommandProcessor334
;DriverRF4463PROMain.c, 314 :: 		ucRF4463Mode = slave_mode;
0x37BE	0x2101    MOVS	R1, #1
0x37C0	0x489C    LDR	R0, [PC, #624]
0x37C2	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 315 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_RX_SLAVE, strlen( ANS_COMMAND_MODE_RX_SLAVE ) );
0x37C4	0x489E    LDR	R0, [PC, #632]
0x37C6	0xF7FCFF83  BL	_strlen+0
0x37CA	0xB401    PUSH	(R0)
0x37CC	0x489C    LDR	R0, [PC, #624]
0x37CE	0xB401    PUSH	(R0)
0x37D0	0xF000FCEE  BL	_vUSART1Start_TX+0
0x37D4	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 316 :: 		}
0x37D6	0xE008    B	L_vRF4463MainCommandProcessor335
L_vRF4463MainCommandProcessor334:
;DriverRF4463PROMain.c, 318 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x37D8	0x489A    LDR	R0, [PC, #616]
0x37DA	0xF7FCFF79  BL	_strlen+0
0x37DE	0xB401    PUSH	(R0)
0x37E0	0x4898    LDR	R0, [PC, #608]
0x37E2	0xB401    PUSH	(R0)
0x37E4	0xF000FCE4  BL	_vUSART1Start_TX+0
0x37E8	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 319 :: 		}
L_vRF4463MainCommandProcessor335:
L_vRF4463MainCommandProcessor333:
L_vRF4463MainCommandProcessor331:
L_vRF4463MainCommandProcessor329:
L_vRF4463MainCommandProcessor327:
;DriverRF4463PROMain.c, 320 :: 		}
0x37EA	0xF000BBF0  B	L_vRF4463MainCommandProcessor336
L_vRF4463MainCommandProcessor321:
;DriverRF4463PROMain.c, 325 :: 		else if ( memcmp( CMD_RADIO_PACKET_SEND, ucCommand, sizeof( CMD_RADIO_PACKET_SEND ) ) == 0x00 ) {
0x37EE	0xF10D0416  ADD	R4, SP, #22
0x37F2	0x220C    MOVS	R2, #12
0x37F4	0xB212    SXTH	R2, R2
0x37F6	0x4621    MOV	R1, R4
0x37F8	0x4893    LDR	R0, [PC, #588]
0x37FA	0xF7FEFB45  BL	_memcmp+0
0x37FE	0x2800    CMP	R0, #0
0x3800	0xD13C    BNE	L_vRF4463MainCommandProcessor337
;DriverRF4463PROMain.c, 327 :: 		if ( ucRF4463Mode == rf_off ) {
0x3802	0x488C    LDR	R0, [PC, #560]
0x3804	0x7800    LDRB	R0, [R0, #0]
0x3806	0x2804    CMP	R0, #4
0x3808	0xD12D    BNE	L_vRF4463MainCommandProcessor338
;DriverRF4463PROMain.c, 328 :: 		vUSARTStartMEMtoMEMZero( ucRF4463TXdata, sizeof( ucRF4463TXdata ));
0x380A	0x2042    MOVS	R0, #66
0x380C	0xB401    PUSH	(R0)
0x380E	0x488F    LDR	R0, [PC, #572]
0x3810	0xB401    PUSH	(R0)
0x3812	0xF7FEFACF  BL	_vUSARTStartMEMtoMEMZero+0
0x3816	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 329 :: 		vRF4463MainSetTXString();
0x3818	0xF001FC60  BL	_vRF4463MainSetTXString+0
;DriverRF4463PROMain.c, 330 :: 		ucLongArgument[ ucCounterLongArgument++ ] = ucRF4463ChecksumGenerator( ucLongArgument, ucCounterLongArgument );
0x381C	0xF10D0136  ADD	R1, SP, #54
0x3820	0xF89D0078  LDRB	R0, [SP, #120]
0x3824	0x1808    ADDS	R0, R1, R0
0x3826	0x902F    STR	R0, [SP, #188]
0x3828	0xF89D0078  LDRB	R0, [SP, #120]
0x382C	0xB401    PUSH	(R0)
0x382E	0xF10D003A  ADD	R0, SP, #58
0x3832	0xB401    PUSH	(R0)
0x3834	0xF7FEFB84  BL	_ucRF4463ChecksumGenerator+0
0x3838	0xB002    ADD	SP, SP, #8
0x383A	0x992F    LDR	R1, [SP, #188]
0x383C	0x7008    STRB	R0, [R1, #0]
0x383E	0xF89D0078  LDRB	R0, [SP, #120]
0x3842	0x1C40    ADDS	R0, R0, #1
0x3844	0xF88D0078  STRB	R0, [SP, #120]
;DriverRF4463PROMain.c, 331 :: 		vUSARTStartMEMtoMEM( ucLongArgument, ucRF4463TXdata + 4, ucCounterLongArgument );
0x3848	0xF89D0078  LDRB	R0, [SP, #120]
0x384C	0xB401    PUSH	(R0)
0x384E	0x4880    LDR	R0, [PC, #512]
0x3850	0xB401    PUSH	(R0)
0x3852	0xF10D003E  ADD	R0, SP, #62
0x3856	0xB401    PUSH	(R0)
0x3858	0xF7FFFA96  BL	_vUSARTStartMEMtoMEM+0
0x385C	0xB003    ADD	SP, SP, #12
;DriverRF4463PROMain.c, 333 :: 		ucRF4463SendMessage = 1;
0x385E	0x2101    MOVS	R1, #1
0x3860	0x487C    LDR	R0, [PC, #496]
0x3862	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 335 :: 		}
0x3864	0xE008    B	L_vRF4463MainCommandProcessor339
L_vRF4463MainCommandProcessor338:
;DriverRF4463PROMain.c, 337 :: 		vUSART1Start_TX( ANS_COMMAND_WRONG_MODE, strlen( ANS_COMMAND_WRONG_MODE ) );
0x3866	0x487C    LDR	R0, [PC, #496]
0x3868	0xF7FCFF32  BL	_strlen+0
0x386C	0xB401    PUSH	(R0)
0x386E	0x487A    LDR	R0, [PC, #488]
0x3870	0xB401    PUSH	(R0)
0x3872	0xF000FC9D  BL	_vUSART1Start_TX+0
0x3876	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 338 :: 		}
L_vRF4463MainCommandProcessor339:
;DriverRF4463PROMain.c, 339 :: 		}
0x3878	0xF000BBA9  B	L_vRF4463MainCommandProcessor340
L_vRF4463MainCommandProcessor337:
;DriverRF4463PROMain.c, 344 :: 		else if ( memcmp( CMD_RADIO_GET_STATUS, ucCommand, sizeof( CMD_RADIO_GET_STATUS ) ) == 0x00 ) {
0x387C	0xF10D0416  ADD	R4, SP, #22
0x3880	0x220B    MOVS	R2, #11
0x3882	0xB212    SXTH	R2, R2
0x3884	0x4621    MOV	R1, R4
0x3886	0x4875    LDR	R0, [PC, #468]
0x3888	0xF7FEFAFE  BL	_memcmp+0
0x388C	0x2800    CMP	R0, #0
0x388E	0xF0408182  BNE	L_vRF4463MainCommandProcessor341
;DriverRF4463PROMain.c, 345 :: 		vUSART1Start_TX( ANS_STATUS_REPORT, strlen( ANS_STATUS_REPORT ) );
0x3892	0x4873    LDR	R0, [PC, #460]
0x3894	0xF7FCFF1C  BL	_strlen+0
0x3898	0xB401    PUSH	(R0)
0x389A	0x4871    LDR	R0, [PC, #452]
0x389C	0xB401    PUSH	(R0)
0x389E	0xF000FC87  BL	_vUSART1Start_TX+0
0x38A2	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 348 :: 		sprintf( ucTXT, "[ STATUS ] DECIMAL POWER: %d\r\n" , ucRF4463Power );
0x38A4	0x486F    LDR	R0, [PC, #444]
0x38A6	0x7800    LDRB	R0, [R0, #0]
0x38A8	0xB401    PUSH	(R0)
0x38AA	0x486F    LDR	R0, [PC, #444]
0x38AC	0xB401    PUSH	(R0)
0x38AE	0xF10D0081  ADD	R0, SP, #129
0x38B2	0xB401    PUSH	(R0)
0x38B4	0xF7FEFBDC  BL	_sprintf+0
0x38B8	0xB003    ADD	SP, SP, #12
;DriverRF4463PROMain.c, 349 :: 		vUSART1Start_TX( ucTXT, strlen( ucTXT ) );
0x38BA	0xF10D0479  ADD	R4, SP, #121
0x38BE	0x4620    MOV	R0, R4
0x38C0	0xF7FCFF06  BL	_strlen+0
0x38C4	0xB401    PUSH	(R0)
0x38C6	0xF10D007D  ADD	R0, SP, #125
0x38CA	0xB401    PUSH	(R0)
0x38CC	0xF000FC70  BL	_vUSART1Start_TX+0
0x38D0	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 352 :: 		ulArgument = ( ( ucRF4463Freq3 * 100 ) + ( ucRF4463Freq2 * 10 ) + ucRF4463Freq1 ) * 1000UL;
0x38D2	0x4866    LDR	R0, [PC, #408]
0x38D4	0x7801    LDRB	R1, [R0, #0]
0x38D6	0x2064    MOVS	R0, #100
0x38D8	0xB200    SXTH	R0, R0
0x38DA	0xFB01F200  MUL	R2, R1, R0
0x38DE	0xB212    SXTH	R2, R2
0x38E0	0x4863    LDR	R0, [PC, #396]
0x38E2	0x7801    LDRB	R1, [R0, #0]
0x38E4	0x200A    MOVS	R0, #10
0x38E6	0xB200    SXTH	R0, R0
0x38E8	0x4348    MULS	R0, R1, R0
0x38EA	0xB200    SXTH	R0, R0
0x38EC	0x1811    ADDS	R1, R2, R0
0x38EE	0xB209    SXTH	R1, R1
0x38F0	0x4860    LDR	R0, [PC, #384]
0x38F2	0x7800    LDRB	R0, [R0, #0]
0x38F4	0x1809    ADDS	R1, R1, R0
0x38F6	0xB209    SXTH	R1, R1
0x38F8	0xF44F707A  MOV	R0, #1000
0x38FC	0x4341    MULS	R1, R0, R1
0x38FE	0x485E    LDR	R0, [PC, #376]
0x3900	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 353 :: 		sprintf( ucTXT, "[ STATUS ] BAND: %lu KHz\r\n" , ulArgument );
0x3902	0x485D    LDR	R0, [PC, #372]
0x3904	0x6800    LDR	R0, [R0, #0]
0x3906	0xB401    PUSH	(R0)
0x3908	0x485C    LDR	R0, [PC, #368]
0x390A	0xB401    PUSH	(R0)
0x390C	0xF10D0081  ADD	R0, SP, #129
0x3910	0xB401    PUSH	(R0)
0x3912	0xF7FEFBAD  BL	_sprintf+0
0x3916	0xB003    ADD	SP, SP, #12
;DriverRF4463PROMain.c, 354 :: 		vUSART1Start_TX( ucTXT, strlen( ucTXT ) );
0x3918	0xF10D0479  ADD	R4, SP, #121
0x391C	0x4620    MOV	R0, R4
0x391E	0xF7FCFED7  BL	_strlen+0
0x3922	0xB401    PUSH	(R0)
0x3924	0xF10D007D  ADD	R0, SP, #125
0x3928	0xB401    PUSH	(R0)
0x392A	0xF000FC41  BL	_vUSART1Start_TX+0
0x392E	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 357 :: 		switch ( ucRF4463Rate ) {
0x3930	0xE035    B	L_vRF4463MainCommandProcessor342
;DriverRF4463PROMain.c, 358 :: 		case dr_1p2    : ulArgument = 1200;
L_vRF4463MainCommandProcessor344:
0x3932	0xF24041B0  MOVW	R1, #1200
0x3936	0x4850    LDR	R0, [PC, #320]
0x3938	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 359 :: 		break;
0x393A	0xE05C    B	L_vRF4463MainCommandProcessor343
;DriverRF4463PROMain.c, 360 :: 		case dr_2p4    : ulArgument = 2400;
L_vRF4463MainCommandProcessor345:
0x393C	0xF6401160  MOVW	R1, #2400
0x3940	0x484D    LDR	R0, [PC, #308]
0x3942	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 361 :: 		break;
0x3944	0xE057    B	L_vRF4463MainCommandProcessor343
;DriverRF4463PROMain.c, 362 :: 		case dr_4p8    : ulArgument = 4800;
L_vRF4463MainCommandProcessor346:
0x3946	0xF24121C0  MOVW	R1, #4800
0x394A	0x484B    LDR	R0, [PC, #300]
0x394C	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 363 :: 		break;
0x394E	0xE052    B	L_vRF4463MainCommandProcessor343
;DriverRF4463PROMain.c, 364 :: 		case dr_9p6    : ulArgument = 9600;
L_vRF4463MainCommandProcessor347:
0x3950	0xF2425180  MOVW	R1, #9600
0x3954	0x4848    LDR	R0, [PC, #288]
0x3956	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 365 :: 		break;
0x3958	0xE04D    B	L_vRF4463MainCommandProcessor343
;DriverRF4463PROMain.c, 366 :: 		case dr_19p2   : ulArgument = 19200;
L_vRF4463MainCommandProcessor348:
0x395A	0xF6443100  MOVW	R1, #19200
0x395E	0x4846    LDR	R0, [PC, #280]
0x3960	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 367 :: 		break;
0x3962	0xE048    B	L_vRF4463MainCommandProcessor343
;DriverRF4463PROMain.c, 368 :: 		case dr_38p4   : ulArgument = 38400;
L_vRF4463MainCommandProcessor349:
0x3964	0xF2496100  MOVW	R1, #38400
0x3968	0x4843    LDR	R0, [PC, #268]
0x396A	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 369 :: 		break;
0x396C	0xE043    B	L_vRF4463MainCommandProcessor343
;DriverRF4463PROMain.c, 370 :: 		case dr_76p8   : ulArgument = 76800;
L_vRF4463MainCommandProcessor350:
0x396E	0xF44F3196  MOV	R1, #76800
0x3972	0x4841    LDR	R0, [PC, #260]
0x3974	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 371 :: 		break;
0x3976	0xE03E    B	L_vRF4463MainCommandProcessor343
;DriverRF4463PROMain.c, 372 :: 		case dr_115p2  : ulArgument = 115200;
L_vRF4463MainCommandProcessor351:
0x3978	0xF44F31E1  MOV	R1, #115200
0x397C	0x483E    LDR	R0, [PC, #248]
0x397E	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 373 :: 		break;
0x3980	0xE039    B	L_vRF4463MainCommandProcessor343
;DriverRF4463PROMain.c, 374 :: 		case dr_256k   : ulArgument = 256000;
L_vRF4463MainCommandProcessor352:
0x3982	0xF44F317A  MOV	R1, #256000
0x3986	0x483C    LDR	R0, [PC, #240]
0x3988	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 375 :: 		break;
0x398A	0xE034    B	L_vRF4463MainCommandProcessor343
;DriverRF4463PROMain.c, 376 :: 		case dr_500k   : ulArgument = 500000;
L_vRF4463MainCommandProcessor353:
0x398C	0x493C    LDR	R1, [PC, #240]
0x398E	0x483A    LDR	R0, [PC, #232]
0x3990	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 377 :: 		break;
0x3992	0xE030    B	L_vRF4463MainCommandProcessor343
;DriverRF4463PROMain.c, 378 :: 		case dr_500    : ulArgument = 500;
L_vRF4463MainCommandProcessor354:
0x3994	0xF24011F4  MOVW	R1, #500
0x3998	0x4837    LDR	R0, [PC, #220]
0x399A	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 379 :: 		break;
0x399C	0xE02B    B	L_vRF4463MainCommandProcessor343
;DriverRF4463PROMain.c, 380 :: 		}
L_vRF4463MainCommandProcessor342:
0x399E	0x4839    LDR	R0, [PC, #228]
0x39A0	0x7800    LDRB	R0, [R0, #0]
0x39A2	0x2800    CMP	R0, #0
0x39A4	0xD0C5    BEQ	L_vRF4463MainCommandProcessor344
0x39A6	0x4837    LDR	R0, [PC, #220]
0x39A8	0x7800    LDRB	R0, [R0, #0]
0x39AA	0x2801    CMP	R0, #1
0x39AC	0xD0C6    BEQ	L_vRF4463MainCommandProcessor345
0x39AE	0x4835    LDR	R0, [PC, #212]
0x39B0	0x7800    LDRB	R0, [R0, #0]
0x39B2	0x2802    CMP	R0, #2
0x39B4	0xD0C7    BEQ	L_vRF4463MainCommandProcessor346
0x39B6	0x4833    LDR	R0, [PC, #204]
0x39B8	0x7800    LDRB	R0, [R0, #0]
0x39BA	0x2803    CMP	R0, #3
0x39BC	0xD0C8    BEQ	L_vRF4463MainCommandProcessor347
0x39BE	0x4831    LDR	R0, [PC, #196]
0x39C0	0x7800    LDRB	R0, [R0, #0]
0x39C2	0x2804    CMP	R0, #4
0x39C4	0xD0C9    BEQ	L_vRF4463MainCommandProcessor348
0x39C6	0x482F    LDR	R0, [PC, #188]
0x39C8	0x7800    LDRB	R0, [R0, #0]
0x39CA	0x2805    CMP	R0, #5
0x39CC	0xD0CA    BEQ	L_vRF4463MainCommandProcessor349
0x39CE	0x482D    LDR	R0, [PC, #180]
0x39D0	0x7800    LDRB	R0, [R0, #0]
0x39D2	0x2806    CMP	R0, #6
0x39D4	0xD0CB    BEQ	L_vRF4463MainCommandProcessor350
0x39D6	0x482B    LDR	R0, [PC, #172]
0x39D8	0x7800    LDRB	R0, [R0, #0]
0x39DA	0x2807    CMP	R0, #7
0x39DC	0xD0CC    BEQ	L_vRF4463MainCommandProcessor351
0x39DE	0x4829    LDR	R0, [PC, #164]
0x39E0	0x7800    LDRB	R0, [R0, #0]
0x39E2	0x2808    CMP	R0, #8
0x39E4	0xD0CD    BEQ	L_vRF4463MainCommandProcessor352
0x39E6	0x4827    LDR	R0, [PC, #156]
0x39E8	0x7800    LDRB	R0, [R0, #0]
0x39EA	0x2809    CMP	R0, #9
0x39EC	0xD0CE    BEQ	L_vRF4463MainCommandProcessor353
0x39EE	0x4825    LDR	R0, [PC, #148]
0x39F0	0x7800    LDRB	R0, [R0, #0]
0x39F2	0x280A    CMP	R0, #10
0x39F4	0xD0CE    BEQ	L_vRF4463MainCommandProcessor354
L_vRF4463MainCommandProcessor343:
;DriverRF4463PROMain.c, 381 :: 		sprintf( ucTXT, "[ STATUS ] DATA RATE: %lu\r\n" , ulArgument );
0x39F6	0x4820    LDR	R0, [PC, #128]
0x39F8	0x6800    LDR	R0, [R0, #0]
0x39FA	0xB401    PUSH	(R0)
0x39FC	0x4822    LDR	R0, [PC, #136]
0x39FE	0xB401    PUSH	(R0)
0x3A00	0xF10D0081  ADD	R0, SP, #129
0x3A04	0xB401    PUSH	(R0)
0x3A06	0xF7FEFB33  BL	_sprintf+0
0x3A0A	0xB003    ADD	SP, SP, #12
;DriverRF4463PROMain.c, 382 :: 		vUSART1Start_TX( ucTXT, strlen( ucTXT ) );
0x3A0C	0xF10D0479  ADD	R4, SP, #121
0x3A10	0x4620    MOV	R0, R4
0x3A12	0xF7FCFE5D  BL	_strlen+0
0x3A16	0xB401    PUSH	(R0)
0x3A18	0xF10D007D  ADD	R0, SP, #125
0x3A1C	0xB401    PUSH	(R0)
0x3A1E	0xF000FBC7  BL	_vUSART1Start_TX+0
0x3A22	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 385 :: 		sprintf( ucTXT, "[ STATUS ] CHANNEL: %d\r\n" , ucRF4463FreqChannel );
0x3A24	0x4819    LDR	R0, [PC, #100]
0x3A26	0x7800    LDRB	R0, [R0, #0]
0x3A28	0xF000B832  B	#100
0x3A2C	0x20EB2000  	_ANS_COMMAND_MODE_RX_CONT+0
0x3A30	0x210D2000  	_ARG_RADIO_MODE_TX_MASTER+0
0x3A34	0x233F2000  	_ucRF4463Mode+0
0x3A38	0x21172000  	_ANS_COMMAND_MODE_TX_MASTER+0
0x3A3C	0x213B2000  	_ARG_RADIO_MODE_RX_SLAVE+0
0x3A40	0x21442000  	_ANS_COMMAND_MODE_RX_SLAVE+0
0x3A44	0x203E2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x3A48	0x21672000  	_CMD_RADIO_PACKET_SEND+0
0x3A4C	0x21732000  	_ucRF4463TXdata+0
0x3A50	0x21772000  	_ucRF4463TXdata+4
0x3A54	0x21B52000  	_ucRF4463SendMessage+0
0x3A58	0x21B62000  	_ANS_COMMAND_WRONG_MODE+0
0x3A5C	0x21CF2000  	_CMD_RADIO_GET_STATUS+0
0x3A60	0x21DA2000  	_ANS_STATUS_REPORT+0
0x3A64	0x23362000  	_ucRF4463Power+0
0x3A68	0x89700000  	?lstr_3_DriverRF4463PROMain+0
0x3A6C	0x23372000  	_ucRF4463Freq3+0
0x3A70	0x233C2000  	_ucRF4463Freq2+0
0x3A74	0x233D2000  	_ucRF4463Freq1+0
0x3A78	0x23382000  	vRF4463MainCommandProcessor_ulArgument_L0+0
0x3A7C	0x89AB0000  	?lstr_4_DriverRF4463PROMain+0
0x3A80	0xA1200007  	#500000
0x3A84	0x233E2000  	_ucRF4463Rate+0
0x3A88	0x898F0000  	?lstr_5_DriverRF4463PROMain+0
0x3A8C	0x207C2000  	_ucRF4463FreqChannel+0
0x3A90	0xB401    PUSH	(R0)
0x3A92	0x489D    LDR	R0, [PC, #628]
0x3A94	0xB401    PUSH	(R0)
0x3A96	0xF10D0081  ADD	R0, SP, #129
0x3A9A	0xB401    PUSH	(R0)
0x3A9C	0xF7FEFAE8  BL	_sprintf+0
0x3AA0	0xB003    ADD	SP, SP, #12
;DriverRF4463PROMain.c, 386 :: 		vUSART1Start_TX( ucTXT, strlen( ucTXT ) );
0x3AA2	0xF10D0479  ADD	R4, SP, #121
0x3AA6	0x4620    MOV	R0, R4
0x3AA8	0xF7FCFE12  BL	_strlen+0
0x3AAC	0xB401    PUSH	(R0)
0x3AAE	0xF10D007D  ADD	R0, SP, #125
0x3AB2	0xB401    PUSH	(R0)
0x3AB4	0xF000FB7C  BL	_vUSART1Start_TX+0
0x3AB8	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 389 :: 		sprintf( ucTXT, "[ STATUS ] BW: %lu KHz\r\n" , ulRF4463Step );
0x3ABA	0x4894    LDR	R0, [PC, #592]
0x3ABC	0x6800    LDR	R0, [R0, #0]
0x3ABE	0xB401    PUSH	(R0)
0x3AC0	0x4893    LDR	R0, [PC, #588]
0x3AC2	0xB401    PUSH	(R0)
0x3AC4	0xF10D0081  ADD	R0, SP, #129
0x3AC8	0xB401    PUSH	(R0)
0x3ACA	0xF7FEFAD1  BL	_sprintf+0
0x3ACE	0xB003    ADD	SP, SP, #12
;DriverRF4463PROMain.c, 390 :: 		vUSART1Start_TX( ucTXT, strlen( ucTXT ) );
0x3AD0	0xF10D0479  ADD	R4, SP, #121
0x3AD4	0x4620    MOV	R0, R4
0x3AD6	0xF7FCFDFB  BL	_strlen+0
0x3ADA	0xB401    PUSH	(R0)
0x3ADC	0xF10D007D  ADD	R0, SP, #125
0x3AE0	0xB401    PUSH	(R0)
0x3AE2	0xF000FB65  BL	_vUSART1Start_TX+0
0x3AE6	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 394 :: 		vUSART1Start_TX( "[ STATUS ] MODE: ", 17 );
0x3AE8	0x2011    MOVS	R0, #17
0x3AEA	0xB401    PUSH	(R0)
0x3AEC	0xF10D0B08  ADD	R11, SP, #8
0x3AF0	0xF10B0A12  ADD	R10, R11, #18
0x3AF4	0xF8DFC21C  LDR	R12, [PC, #540]
0x3AF8	0xF000FAFE  BL	___CC2DW+0
0x3AFC	0xA802    ADD	R0, SP, #8
0x3AFE	0xB401    PUSH	(R0)
0x3B00	0xF000FB56  BL	_vUSART1Start_TX+0
0x3B04	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 396 :: 		switch ( ucRF4463Mode ) {
0x3B06	0xE031    B	L_vRF4463MainCommandProcessor355
;DriverRF4463PROMain.c, 397 :: 		case rf_off        : vUSART1Start_TX( ANS_COMMAND_MODE_STBY, strlen( ANS_COMMAND_MODE_STBY ) );
L_vRF4463MainCommandProcessor357:
0x3B08	0x4883    LDR	R0, [PC, #524]
0x3B0A	0xF7FCFDE1  BL	_strlen+0
0x3B0E	0xB401    PUSH	(R0)
0x3B10	0x4881    LDR	R0, [PC, #516]
0x3B12	0xB401    PUSH	(R0)
0x3B14	0xF000FB4C  BL	_vUSART1Start_TX+0
0x3B18	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 398 :: 		break;
0x3B1A	0xE03B    B	L_vRF4463MainCommandProcessor356
;DriverRF4463PROMain.c, 399 :: 		case tx_test_mode  : vUSART1Start_TX( ANS_COMMAND_MODE_TX_CONT, strlen( ANS_COMMAND_MODE_TX_CONT ) );
L_vRF4463MainCommandProcessor358:
0x3B1C	0x487F    LDR	R0, [PC, #508]
0x3B1E	0xF7FCFDD7  BL	_strlen+0
0x3B22	0xB401    PUSH	(R0)
0x3B24	0x487D    LDR	R0, [PC, #500]
0x3B26	0xB401    PUSH	(R0)
0x3B28	0xF000FB42  BL	_vUSART1Start_TX+0
0x3B2C	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 400 :: 		break;
0x3B2E	0xE031    B	L_vRF4463MainCommandProcessor356
;DriverRF4463PROMain.c, 401 :: 		case rx_test_mode  : vUSART1Start_TX( ANS_COMMAND_MODE_RX_CONT, strlen( ANS_COMMAND_MODE_RX_CONT ) );
L_vRF4463MainCommandProcessor359:
0x3B30	0x487B    LDR	R0, [PC, #492]
0x3B32	0xF7FCFDCD  BL	_strlen+0
0x3B36	0xB401    PUSH	(R0)
0x3B38	0x4879    LDR	R0, [PC, #484]
0x3B3A	0xB401    PUSH	(R0)
0x3B3C	0xF000FB38  BL	_vUSART1Start_TX+0
0x3B40	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 402 :: 		break;
0x3B42	0xE027    B	L_vRF4463MainCommandProcessor356
;DriverRF4463PROMain.c, 403 :: 		case master_mode   : vUSART1Start_TX( ANS_COMMAND_MODE_TX_MASTER, strlen( ANS_COMMAND_MODE_TX_MASTER ) );
L_vRF4463MainCommandProcessor360:
0x3B44	0x4877    LDR	R0, [PC, #476]
0x3B46	0xF7FCFDC3  BL	_strlen+0
0x3B4A	0xB401    PUSH	(R0)
0x3B4C	0x4875    LDR	R0, [PC, #468]
0x3B4E	0xB401    PUSH	(R0)
0x3B50	0xF000FB2E  BL	_vUSART1Start_TX+0
0x3B54	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 404 :: 		break;
0x3B56	0xE01D    B	L_vRF4463MainCommandProcessor356
;DriverRF4463PROMain.c, 405 :: 		case slave_mode    : vUSART1Start_TX( ANS_COMMAND_MODE_RX_SLAVE, strlen( ANS_COMMAND_MODE_RX_SLAVE ) );
L_vRF4463MainCommandProcessor361:
0x3B58	0x4873    LDR	R0, [PC, #460]
0x3B5A	0xF7FCFDB9  BL	_strlen+0
0x3B5E	0xB401    PUSH	(R0)
0x3B60	0x4871    LDR	R0, [PC, #452]
0x3B62	0xB401    PUSH	(R0)
0x3B64	0xF000FB24  BL	_vUSART1Start_TX+0
0x3B68	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 406 :: 		break;
0x3B6A	0xE013    B	L_vRF4463MainCommandProcessor356
;DriverRF4463PROMain.c, 407 :: 		}
L_vRF4463MainCommandProcessor355:
0x3B6C	0x486F    LDR	R0, [PC, #444]
0x3B6E	0x7800    LDRB	R0, [R0, #0]
0x3B70	0x2804    CMP	R0, #4
0x3B72	0xD0C9    BEQ	L_vRF4463MainCommandProcessor357
0x3B74	0x486D    LDR	R0, [PC, #436]
0x3B76	0x7800    LDRB	R0, [R0, #0]
0x3B78	0x2802    CMP	R0, #2
0x3B7A	0xD0CF    BEQ	L_vRF4463MainCommandProcessor358
0x3B7C	0x486B    LDR	R0, [PC, #428]
0x3B7E	0x7800    LDRB	R0, [R0, #0]
0x3B80	0x2803    CMP	R0, #3
0x3B82	0xD0D5    BEQ	L_vRF4463MainCommandProcessor359
0x3B84	0x4869    LDR	R0, [PC, #420]
0x3B86	0x7800    LDRB	R0, [R0, #0]
0x3B88	0x2800    CMP	R0, #0
0x3B8A	0xD0DB    BEQ	L_vRF4463MainCommandProcessor360
0x3B8C	0x4867    LDR	R0, [PC, #412]
0x3B8E	0x7800    LDRB	R0, [R0, #0]
0x3B90	0x2801    CMP	R0, #1
0x3B92	0xD0E1    BEQ	L_vRF4463MainCommandProcessor361
L_vRF4463MainCommandProcessor356:
;DriverRF4463PROMain.c, 408 :: 		}
0x3B94	0xE21B    B	L_vRF4463MainCommandProcessor362
L_vRF4463MainCommandProcessor341:
;DriverRF4463PROMain.c, 412 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_1_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_1_SET ) ) == 0x00 ) {
0x3B96	0xF10D0416  ADD	R4, SP, #22
0x3B9A	0x220C    MOVS	R2, #12
0x3B9C	0xB212    SXTH	R2, R2
0x3B9E	0x4621    MOV	R1, R4
0x3BA0	0x4863    LDR	R0, [PC, #396]
0x3BA2	0xF7FEF971  BL	_memcmp+0
0x3BA6	0x2800    CMP	R0, #0
0x3BA8	0xD12F    BNE	L_vRF4463MainCommandProcessor363
;DriverRF4463PROMain.c, 413 :: 		ulArgument = StrToLong( ucLongArgument );
0x3BAA	0xF10D0436  ADD	R4, SP, #54
0x3BAE	0x4620    MOV	R0, R4
0x3BB0	0xF7FEF9EA  BL	_StrToLong+0
0x3BB4	0x495F    LDR	R1, [PC, #380]
0x3BB6	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 414 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x3BB8	0x485E    LDR	R0, [PC, #376]
0x3BBA	0x6800    LDR	R0, [R0, #0]
0x3BBC	0x2800    CMP	R0, #0
0x3BBE	0xD31A    BCC	L_vRF4463MainCommandProcessor366
0x3BC0	0x485C    LDR	R0, [PC, #368]
0x3BC2	0x6800    LDR	R0, [R0, #0]
0x3BC4	0xF1B00FFF  CMP	R0, #255
0x3BC8	0xD815    BHI	L_vRF4463MainCommandProcessor366
L__vRF4463MainCommandProcessor472:
;DriverRF4463PROMain.c, 415 :: 		ucRF4463ByteMatch1 = ulArgument;
0x3BCA	0x485A    LDR	R0, [PC, #360]
0x3BCC	0x6801    LDR	R1, [R0, #0]
0x3BCE	0x485A    LDR	R0, [PC, #360]
0x3BD0	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 416 :: 		ucRF4463MatchEnabled = 1;
0x3BD2	0x2101    MOVS	R1, #1
0x3BD4	0x4859    LDR	R0, [PC, #356]
0x3BD6	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 417 :: 		ucRF4463MatchEnableReg = 0x40;
0x3BD8	0x2140    MOVS	R1, #64
0x3BDA	0x4859    LDR	R0, [PC, #356]
0x3BDC	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 418 :: 		vRF4463MainApplyChanges();
0x3BDE	0xF7FEFAF1  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 419 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3BE2	0x4858    LDR	R0, [PC, #352]
0x3BE4	0xF7FCFD74  BL	_strlen+0
0x3BE8	0xB401    PUSH	(R0)
0x3BEA	0x4856    LDR	R0, [PC, #344]
0x3BEC	0xB401    PUSH	(R0)
0x3BEE	0xF000FADF  BL	_vUSART1Start_TX+0
0x3BF2	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 420 :: 		}
0x3BF4	0xE008    B	L_vRF4463MainCommandProcessor367
L_vRF4463MainCommandProcessor366:
;DriverRF4463PROMain.c, 422 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x3BF6	0x4854    LDR	R0, [PC, #336]
0x3BF8	0xF7FCFD6A  BL	_strlen+0
0x3BFC	0xB401    PUSH	(R0)
0x3BFE	0x4852    LDR	R0, [PC, #328]
0x3C00	0xB401    PUSH	(R0)
0x3C02	0xF000FAD5  BL	_vUSART1Start_TX+0
0x3C06	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 423 :: 		}
L_vRF4463MainCommandProcessor367:
;DriverRF4463PROMain.c, 424 :: 		}
0x3C08	0xE1E1    B	L_vRF4463MainCommandProcessor368
L_vRF4463MainCommandProcessor363:
;DriverRF4463PROMain.c, 428 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_2_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_2_SET ) ) == 0x00 ) {
0x3C0A	0xF10D0416  ADD	R4, SP, #22
0x3C0E	0x220C    MOVS	R2, #12
0x3C10	0xB212    SXTH	R2, R2
0x3C12	0x4621    MOV	R1, R4
0x3C14	0x484D    LDR	R0, [PC, #308]
0x3C16	0xF7FEF937  BL	_memcmp+0
0x3C1A	0x2800    CMP	R0, #0
0x3C1C	0xD12F    BNE	L_vRF4463MainCommandProcessor369
;DriverRF4463PROMain.c, 429 :: 		ulArgument = StrToLong( ucLongArgument );
0x3C1E	0xF10D0436  ADD	R4, SP, #54
0x3C22	0x4620    MOV	R0, R4
0x3C24	0xF7FEF9B0  BL	_StrToLong+0
0x3C28	0x4942    LDR	R1, [PC, #264]
0x3C2A	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 430 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x3C2C	0x4841    LDR	R0, [PC, #260]
0x3C2E	0x6800    LDR	R0, [R0, #0]
0x3C30	0x2800    CMP	R0, #0
0x3C32	0xD31A    BCC	L_vRF4463MainCommandProcessor372
0x3C34	0x483F    LDR	R0, [PC, #252]
0x3C36	0x6800    LDR	R0, [R0, #0]
0x3C38	0xF1B00FFF  CMP	R0, #255
0x3C3C	0xD815    BHI	L_vRF4463MainCommandProcessor372
L__vRF4463MainCommandProcessor471:
;DriverRF4463PROMain.c, 431 :: 		ucRF4463ByteMatch2 = ulArgument;
0x3C3E	0x483D    LDR	R0, [PC, #244]
0x3C40	0x6801    LDR	R1, [R0, #0]
0x3C42	0x4843    LDR	R0, [PC, #268]
0x3C44	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 432 :: 		ucRF4463MatchEnabled = 1;
0x3C46	0x2101    MOVS	R1, #1
0x3C48	0x483C    LDR	R0, [PC, #240]
0x3C4A	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 433 :: 		ucRF4463MatchEnableReg = 0x40;
0x3C4C	0x2140    MOVS	R1, #64
0x3C4E	0x483C    LDR	R0, [PC, #240]
0x3C50	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 434 :: 		vRF4463MainApplyChanges();
0x3C52	0xF7FEFAB7  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 435 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3C56	0x483B    LDR	R0, [PC, #236]
0x3C58	0xF7FCFD3A  BL	_strlen+0
0x3C5C	0xB401    PUSH	(R0)
0x3C5E	0x4839    LDR	R0, [PC, #228]
0x3C60	0xB401    PUSH	(R0)
0x3C62	0xF000FAA5  BL	_vUSART1Start_TX+0
0x3C66	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 436 :: 		}
0x3C68	0xE008    B	L_vRF4463MainCommandProcessor373
L_vRF4463MainCommandProcessor372:
;DriverRF4463PROMain.c, 438 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x3C6A	0x4837    LDR	R0, [PC, #220]
0x3C6C	0xF7FCFD30  BL	_strlen+0
0x3C70	0xB401    PUSH	(R0)
0x3C72	0x4835    LDR	R0, [PC, #212]
0x3C74	0xB401    PUSH	(R0)
0x3C76	0xF000FA9B  BL	_vUSART1Start_TX+0
0x3C7A	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 439 :: 		}
L_vRF4463MainCommandProcessor373:
;DriverRF4463PROMain.c, 440 :: 		}
0x3C7C	0xE1A7    B	L_vRF4463MainCommandProcessor374
L_vRF4463MainCommandProcessor369:
;DriverRF4463PROMain.c, 444 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_3_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_3_SET ) ) == 0x00 ) {
0x3C7E	0xF10D0416  ADD	R4, SP, #22
0x3C82	0x220C    MOVS	R2, #12
0x3C84	0xB212    SXTH	R2, R2
0x3C86	0x4621    MOV	R1, R4
0x3C88	0x4832    LDR	R0, [PC, #200]
0x3C8A	0xF7FEF8FD  BL	_memcmp+0
0x3C8E	0x2800    CMP	R0, #0
0x3C90	0xD12F    BNE	L_vRF4463MainCommandProcessor375
;DriverRF4463PROMain.c, 445 :: 		ulArgument = StrToLong( ucLongArgument );
0x3C92	0xF10D0436  ADD	R4, SP, #54
0x3C96	0x4620    MOV	R0, R4
0x3C98	0xF7FEF976  BL	_StrToLong+0
0x3C9C	0x4925    LDR	R1, [PC, #148]
0x3C9E	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 446 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x3CA0	0x4824    LDR	R0, [PC, #144]
0x3CA2	0x6800    LDR	R0, [R0, #0]
0x3CA4	0x2800    CMP	R0, #0
0x3CA6	0xD31A    BCC	L_vRF4463MainCommandProcessor378
0x3CA8	0x4822    LDR	R0, [PC, #136]
0x3CAA	0x6800    LDR	R0, [R0, #0]
0x3CAC	0xF1B00FFF  CMP	R0, #255
0x3CB0	0xD815    BHI	L_vRF4463MainCommandProcessor378
L__vRF4463MainCommandProcessor470:
;DriverRF4463PROMain.c, 447 :: 		ucRF4463ByteMatch3 = ulArgument;
0x3CB2	0x4820    LDR	R0, [PC, #128]
0x3CB4	0x6801    LDR	R1, [R0, #0]
0x3CB6	0x4828    LDR	R0, [PC, #160]
0x3CB8	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 448 :: 		ucRF4463MatchEnabled = 1;
0x3CBA	0x2101    MOVS	R1, #1
0x3CBC	0x481F    LDR	R0, [PC, #124]
0x3CBE	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 449 :: 		ucRF4463MatchEnableReg = 0x40;
0x3CC0	0x2140    MOVS	R1, #64
0x3CC2	0x481F    LDR	R0, [PC, #124]
0x3CC4	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 450 :: 		vRF4463MainApplyChanges();
0x3CC6	0xF7FEFA7D  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 451 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3CCA	0x481E    LDR	R0, [PC, #120]
0x3CCC	0xF7FCFD00  BL	_strlen+0
0x3CD0	0xB401    PUSH	(R0)
0x3CD2	0x481C    LDR	R0, [PC, #112]
0x3CD4	0xB401    PUSH	(R0)
0x3CD6	0xF000FA6B  BL	_vUSART1Start_TX+0
0x3CDA	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 452 :: 		}
0x3CDC	0xE008    B	L_vRF4463MainCommandProcessor379
L_vRF4463MainCommandProcessor378:
;DriverRF4463PROMain.c, 454 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x3CDE	0x481A    LDR	R0, [PC, #104]
0x3CE0	0xF7FCFCF6  BL	_strlen+0
0x3CE4	0xB401    PUSH	(R0)
0x3CE6	0x4818    LDR	R0, [PC, #96]
0x3CE8	0xB401    PUSH	(R0)
0x3CEA	0xF000FA61  BL	_vUSART1Start_TX+0
0x3CEE	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 455 :: 		}
L_vRF4463MainCommandProcessor379:
;DriverRF4463PROMain.c, 456 :: 		}
0x3CF0	0xE16D    B	L_vRF4463MainCommandProcessor380
L_vRF4463MainCommandProcessor375:
;DriverRF4463PROMain.c, 460 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_4_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_4_SET ) ) == 0x00 ) {
0x3CF2	0xF10D0416  ADD	R4, SP, #22
0x3CF6	0x220C    MOVS	R2, #12
0x3CF8	0xB212    SXTH	R2, R2
0x3CFA	0x4621    MOV	R1, R4
0x3CFC	0x4817    LDR	R0, [PC, #92]
0x3CFE	0xF7FEF8C3  BL	_memcmp+0
0x3D02	0x2800    CMP	R0, #0
0x3D04	0xF000B82C  B	#88
0x3D08	0x89DF0000  	?lstr_6_DriverRF4463PROMain+0
0x3D0C	0x20842000  	_ulRF4463Step+0
0x3D10	0x89C60000  	?lstr_7_DriverRF4463PROMain+0
0x3D14	0x7F1A0000  	?ICS?lstr8_DriverRF4463PROMain+0
0x3D18	0x20972000  	_ANS_COMMAND_MODE_STBY+0
0x3D1C	0x20C12000  	_ANS_COMMAND_MODE_TX_CONT+0
0x3D20	0x20EB2000  	_ANS_COMMAND_MODE_RX_CONT+0
0x3D24	0x21172000  	_ANS_COMMAND_MODE_TX_MASTER+0
0x3D28	0x21442000  	_ANS_COMMAND_MODE_RX_SLAVE+0
0x3D2C	0x233F2000  	_ucRF4463Mode+0
0x3D30	0x21FF2000  	_CMD_RADIO_MATCH_BYTE_1_SET+0
0x3D34	0x23382000  	vRF4463MainCommandProcessor_ulArgument_L0+0
0x3D38	0x220B2000  	_ucRF4463ByteMatch1+0
0x3D3C	0x220C2000  	_ucRF4463MatchEnabled+0
0x3D40	0x220D2000  	_ucRF4463MatchEnableReg+0
0x3D44	0x20162000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x3D48	0x203E2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x3D4C	0x220E2000  	_CMD_RADIO_MATCH_BYTE_2_SET+0
0x3D50	0x221A2000  	_ucRF4463ByteMatch2+0
0x3D54	0x221B2000  	_CMD_RADIO_MATCH_BYTE_3_SET+0
0x3D58	0x22272000  	_ucRF4463ByteMatch3+0
0x3D5C	0x22282000  	_CMD_RADIO_MATCH_BYTE_4_SET+0
0x3D60	0xD12F    BNE	L_vRF4463MainCommandProcessor381
;DriverRF4463PROMain.c, 461 :: 		ulArgument = StrToLong( ucLongArgument );
0x3D62	0xF10D0436  ADD	R4, SP, #54
0x3D66	0x4620    MOV	R0, R4
0x3D68	0xF7FEF90E  BL	_StrToLong+0
0x3D6C	0x499A    LDR	R1, [PC, #616]
0x3D6E	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 462 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x3D70	0x4899    LDR	R0, [PC, #612]
0x3D72	0x6800    LDR	R0, [R0, #0]
0x3D74	0x2800    CMP	R0, #0
0x3D76	0xD31A    BCC	L_vRF4463MainCommandProcessor384
0x3D78	0x4897    LDR	R0, [PC, #604]
0x3D7A	0x6800    LDR	R0, [R0, #0]
0x3D7C	0xF1B00FFF  CMP	R0, #255
0x3D80	0xD815    BHI	L_vRF4463MainCommandProcessor384
L__vRF4463MainCommandProcessor469:
;DriverRF4463PROMain.c, 463 :: 		ucRF4463ByteMatch4 = ulArgument;
0x3D82	0x4895    LDR	R0, [PC, #596]
0x3D84	0x6801    LDR	R1, [R0, #0]
0x3D86	0x4895    LDR	R0, [PC, #596]
0x3D88	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 464 :: 		ucRF4463MatchEnabled = 1;
0x3D8A	0x2101    MOVS	R1, #1
0x3D8C	0x4894    LDR	R0, [PC, #592]
0x3D8E	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 465 :: 		ucRF4463MatchEnableReg = 0x40;
0x3D90	0x2140    MOVS	R1, #64
0x3D92	0x4894    LDR	R0, [PC, #592]
0x3D94	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 466 :: 		vRF4463MainApplyChanges();
0x3D96	0xF7FEFA15  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 467 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3D9A	0x4893    LDR	R0, [PC, #588]
0x3D9C	0xF7FCFC98  BL	_strlen+0
0x3DA0	0xB401    PUSH	(R0)
0x3DA2	0x4891    LDR	R0, [PC, #580]
0x3DA4	0xB401    PUSH	(R0)
0x3DA6	0xF000FA03  BL	_vUSART1Start_TX+0
0x3DAA	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 468 :: 		}
0x3DAC	0xE008    B	L_vRF4463MainCommandProcessor385
L_vRF4463MainCommandProcessor384:
;DriverRF4463PROMain.c, 470 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x3DAE	0x488F    LDR	R0, [PC, #572]
0x3DB0	0xF7FCFC8E  BL	_strlen+0
0x3DB4	0xB401    PUSH	(R0)
0x3DB6	0x488D    LDR	R0, [PC, #564]
0x3DB8	0xB401    PUSH	(R0)
0x3DBA	0xF000F9F9  BL	_vUSART1Start_TX+0
0x3DBE	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 471 :: 		}
L_vRF4463MainCommandProcessor385:
;DriverRF4463PROMain.c, 472 :: 		}
0x3DC0	0xE105    B	L_vRF4463MainCommandProcessor386
L_vRF4463MainCommandProcessor381:
;DriverRF4463PROMain.c, 476 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_1_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_1_SET ) ) == 0x00 ) {
0x3DC2	0xF10D0416  ADD	R4, SP, #22
0x3DC6	0x220B    MOVS	R2, #11
0x3DC8	0xB212    SXTH	R2, R2
0x3DCA	0x4621    MOV	R1, R4
0x3DCC	0x4888    LDR	R0, [PC, #544]
0x3DCE	0xF7FEF85B  BL	_memcmp+0
0x3DD2	0x2800    CMP	R0, #0
0x3DD4	0xD12C    BNE	L_vRF4463MainCommandProcessor387
;DriverRF4463PROMain.c, 477 :: 		ulArgument = StrToLong( ucLongArgument );
0x3DD6	0xF10D0436  ADD	R4, SP, #54
0x3DDA	0x4620    MOV	R0, R4
0x3DDC	0xF7FEF8D4  BL	_StrToLong+0
0x3DE0	0x497D    LDR	R1, [PC, #500]
0x3DE2	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 478 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x3DE4	0x487C    LDR	R0, [PC, #496]
0x3DE6	0x6800    LDR	R0, [R0, #0]
0x3DE8	0x2800    CMP	R0, #0
0x3DEA	0xD317    BCC	L_vRF4463MainCommandProcessor390
0x3DEC	0x487A    LDR	R0, [PC, #488]
0x3DEE	0x6800    LDR	R0, [R0, #0]
0x3DF0	0xF1B00FFF  CMP	R0, #255
0x3DF4	0xD812    BHI	L_vRF4463MainCommandProcessor390
L__vRF4463MainCommandProcessor468:
;DriverRF4463PROMain.c, 479 :: 		ucRF4463ByteMask1 = ulArgument;
0x3DF6	0x4878    LDR	R0, [PC, #480]
0x3DF8	0x6801    LDR	R1, [R0, #0]
0x3DFA	0x487E    LDR	R0, [PC, #504]
0x3DFC	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 480 :: 		ucRF4463MatchEnabled = 1;
0x3DFE	0x2101    MOVS	R1, #1
0x3E00	0x4877    LDR	R0, [PC, #476]
0x3E02	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 481 :: 		vRF4463MainApplyChanges();
0x3E04	0xF7FEF9DE  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 482 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3E08	0x4877    LDR	R0, [PC, #476]
0x3E0A	0xF7FCFC61  BL	_strlen+0
0x3E0E	0xB401    PUSH	(R0)
0x3E10	0x4875    LDR	R0, [PC, #468]
0x3E12	0xB401    PUSH	(R0)
0x3E14	0xF000F9CC  BL	_vUSART1Start_TX+0
0x3E18	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 483 :: 		}
0x3E1A	0xE008    B	L_vRF4463MainCommandProcessor391
L_vRF4463MainCommandProcessor390:
;DriverRF4463PROMain.c, 485 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x3E1C	0x4873    LDR	R0, [PC, #460]
0x3E1E	0xF7FCFC57  BL	_strlen+0
0x3E22	0xB401    PUSH	(R0)
0x3E24	0x4871    LDR	R0, [PC, #452]
0x3E26	0xB401    PUSH	(R0)
0x3E28	0xF000F9C2  BL	_vUSART1Start_TX+0
0x3E2C	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 486 :: 		}
L_vRF4463MainCommandProcessor391:
;DriverRF4463PROMain.c, 487 :: 		}
0x3E2E	0xE0CE    B	L_vRF4463MainCommandProcessor392
L_vRF4463MainCommandProcessor387:
;DriverRF4463PROMain.c, 491 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_2_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_2_SET ) ) == 0x00 ) {
0x3E30	0xF10D0416  ADD	R4, SP, #22
0x3E34	0x220B    MOVS	R2, #11
0x3E36	0xB212    SXTH	R2, R2
0x3E38	0x4621    MOV	R1, R4
0x3E3A	0x486F    LDR	R0, [PC, #444]
0x3E3C	0xF7FEF824  BL	_memcmp+0
0x3E40	0x2800    CMP	R0, #0
0x3E42	0xD12C    BNE	L_vRF4463MainCommandProcessor393
;DriverRF4463PROMain.c, 492 :: 		ulArgument = StrToLong( ucLongArgument );
0x3E44	0xF10D0436  ADD	R4, SP, #54
0x3E48	0x4620    MOV	R0, R4
0x3E4A	0xF7FEF89D  BL	_StrToLong+0
0x3E4E	0x4962    LDR	R1, [PC, #392]
0x3E50	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 493 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x3E52	0x4861    LDR	R0, [PC, #388]
0x3E54	0x6800    LDR	R0, [R0, #0]
0x3E56	0x2800    CMP	R0, #0
0x3E58	0xD317    BCC	L_vRF4463MainCommandProcessor396
0x3E5A	0x485F    LDR	R0, [PC, #380]
0x3E5C	0x6800    LDR	R0, [R0, #0]
0x3E5E	0xF1B00FFF  CMP	R0, #255
0x3E62	0xD812    BHI	L_vRF4463MainCommandProcessor396
L__vRF4463MainCommandProcessor467:
;DriverRF4463PROMain.c, 494 :: 		ucRF4463ByteMask2 = ulArgument;
0x3E64	0x485C    LDR	R0, [PC, #368]
0x3E66	0x6801    LDR	R1, [R0, #0]
0x3E68	0x4864    LDR	R0, [PC, #400]
0x3E6A	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 495 :: 		ucRF4463MatchEnabled = 1;
0x3E6C	0x2101    MOVS	R1, #1
0x3E6E	0x485C    LDR	R0, [PC, #368]
0x3E70	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 496 :: 		vRF4463MainApplyChanges();
0x3E72	0xF7FEF9A7  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 497 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3E76	0x485C    LDR	R0, [PC, #368]
0x3E78	0xF7FCFC2A  BL	_strlen+0
0x3E7C	0xB401    PUSH	(R0)
0x3E7E	0x485A    LDR	R0, [PC, #360]
0x3E80	0xB401    PUSH	(R0)
0x3E82	0xF000F995  BL	_vUSART1Start_TX+0
0x3E86	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 498 :: 		}
0x3E88	0xE008    B	L_vRF4463MainCommandProcessor397
L_vRF4463MainCommandProcessor396:
;DriverRF4463PROMain.c, 500 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x3E8A	0x4858    LDR	R0, [PC, #352]
0x3E8C	0xF7FCFC20  BL	_strlen+0
0x3E90	0xB401    PUSH	(R0)
0x3E92	0x4856    LDR	R0, [PC, #344]
0x3E94	0xB401    PUSH	(R0)
0x3E96	0xF000F98B  BL	_vUSART1Start_TX+0
0x3E9A	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 501 :: 		}
L_vRF4463MainCommandProcessor397:
;DriverRF4463PROMain.c, 502 :: 		}
0x3E9C	0xE097    B	L_vRF4463MainCommandProcessor398
L_vRF4463MainCommandProcessor393:
;DriverRF4463PROMain.c, 506 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_3_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_3_SET ) ) == 0x00 ) {
0x3E9E	0xF10D0416  ADD	R4, SP, #22
0x3EA2	0x220B    MOVS	R2, #11
0x3EA4	0xB212    SXTH	R2, R2
0x3EA6	0x4621    MOV	R1, R4
0x3EA8	0x4855    LDR	R0, [PC, #340]
0x3EAA	0xF7FDFFED  BL	_memcmp+0
0x3EAE	0x2800    CMP	R0, #0
0x3EB0	0xD12C    BNE	L_vRF4463MainCommandProcessor399
;DriverRF4463PROMain.c, 507 :: 		ulArgument = StrToLong( ucLongArgument );
0x3EB2	0xF10D0436  ADD	R4, SP, #54
0x3EB6	0x4620    MOV	R0, R4
0x3EB8	0xF7FEF866  BL	_StrToLong+0
0x3EBC	0x4946    LDR	R1, [PC, #280]
0x3EBE	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 508 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x3EC0	0x4845    LDR	R0, [PC, #276]
0x3EC2	0x6800    LDR	R0, [R0, #0]
0x3EC4	0x2800    CMP	R0, #0
0x3EC6	0xD317    BCC	L_vRF4463MainCommandProcessor402
0x3EC8	0x4843    LDR	R0, [PC, #268]
0x3ECA	0x6800    LDR	R0, [R0, #0]
0x3ECC	0xF1B00FFF  CMP	R0, #255
0x3ED0	0xD812    BHI	L_vRF4463MainCommandProcessor402
L__vRF4463MainCommandProcessor466:
;DriverRF4463PROMain.c, 509 :: 		ucRF4463ByteMask3 = ulArgument;
0x3ED2	0x4841    LDR	R0, [PC, #260]
0x3ED4	0x6801    LDR	R1, [R0, #0]
0x3ED6	0x484B    LDR	R0, [PC, #300]
0x3ED8	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 510 :: 		ucRF4463MatchEnabled = 1;
0x3EDA	0x2101    MOVS	R1, #1
0x3EDC	0x4840    LDR	R0, [PC, #256]
0x3EDE	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 511 :: 		vRF4463MainApplyChanges();
0x3EE0	0xF7FEF970  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 512 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3EE4	0x4840    LDR	R0, [PC, #256]
0x3EE6	0xF7FCFBF3  BL	_strlen+0
0x3EEA	0xB401    PUSH	(R0)
0x3EEC	0x483E    LDR	R0, [PC, #248]
0x3EEE	0xB401    PUSH	(R0)
0x3EF0	0xF000F95E  BL	_vUSART1Start_TX+0
0x3EF4	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 513 :: 		}
0x3EF6	0xE008    B	L_vRF4463MainCommandProcessor403
L_vRF4463MainCommandProcessor402:
;DriverRF4463PROMain.c, 515 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x3EF8	0x483C    LDR	R0, [PC, #240]
0x3EFA	0xF7FCFBE9  BL	_strlen+0
0x3EFE	0xB401    PUSH	(R0)
0x3F00	0x483A    LDR	R0, [PC, #232]
0x3F02	0xB401    PUSH	(R0)
0x3F04	0xF000F954  BL	_vUSART1Start_TX+0
0x3F08	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 516 :: 		}
L_vRF4463MainCommandProcessor403:
;DriverRF4463PROMain.c, 517 :: 		}
0x3F0A	0xE060    B	L_vRF4463MainCommandProcessor404
L_vRF4463MainCommandProcessor399:
;DriverRF4463PROMain.c, 521 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_4_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_4_SET ) ) == 0x00 ) {
0x3F0C	0xF10D0416  ADD	R4, SP, #22
0x3F10	0x220B    MOVS	R2, #11
0x3F12	0xB212    SXTH	R2, R2
0x3F14	0x4621    MOV	R1, R4
0x3F16	0x483C    LDR	R0, [PC, #240]
0x3F18	0xF7FDFFB6  BL	_memcmp+0
0x3F1C	0x2800    CMP	R0, #0
0x3F1E	0xD12C    BNE	L_vRF4463MainCommandProcessor405
;DriverRF4463PROMain.c, 522 :: 		ulArgument = StrToLong( ucLongArgument );
0x3F20	0xF10D0436  ADD	R4, SP, #54
0x3F24	0x4620    MOV	R0, R4
0x3F26	0xF7FEF82F  BL	_StrToLong+0
0x3F2A	0x492B    LDR	R1, [PC, #172]
0x3F2C	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 523 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x3F2E	0x482A    LDR	R0, [PC, #168]
0x3F30	0x6800    LDR	R0, [R0, #0]
0x3F32	0x2800    CMP	R0, #0
0x3F34	0xD317    BCC	L_vRF4463MainCommandProcessor408
0x3F36	0x4828    LDR	R0, [PC, #160]
0x3F38	0x6800    LDR	R0, [R0, #0]
0x3F3A	0xF1B00FFF  CMP	R0, #255
0x3F3E	0xD812    BHI	L_vRF4463MainCommandProcessor408
L__vRF4463MainCommandProcessor465:
;DriverRF4463PROMain.c, 524 :: 		ucRF4463ByteMask4 = ulArgument;
0x3F40	0x4825    LDR	R0, [PC, #148]
0x3F42	0x6801    LDR	R1, [R0, #0]
0x3F44	0x4831    LDR	R0, [PC, #196]
0x3F46	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 525 :: 		ucRF4463MatchEnabled = 1;
0x3F48	0x2101    MOVS	R1, #1
0x3F4A	0x4825    LDR	R0, [PC, #148]
0x3F4C	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 526 :: 		vRF4463MainApplyChanges();
0x3F4E	0xF7FEF939  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 527 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3F52	0x4825    LDR	R0, [PC, #148]
0x3F54	0xF7FCFBBC  BL	_strlen+0
0x3F58	0xB401    PUSH	(R0)
0x3F5A	0x4823    LDR	R0, [PC, #140]
0x3F5C	0xB401    PUSH	(R0)
0x3F5E	0xF000F927  BL	_vUSART1Start_TX+0
0x3F62	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 528 :: 		}
0x3F64	0xE008    B	L_vRF4463MainCommandProcessor409
L_vRF4463MainCommandProcessor408:
;DriverRF4463PROMain.c, 530 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x3F66	0x4821    LDR	R0, [PC, #132]
0x3F68	0xF7FCFBB2  BL	_strlen+0
0x3F6C	0xB401    PUSH	(R0)
0x3F6E	0x481F    LDR	R0, [PC, #124]
0x3F70	0xB401    PUSH	(R0)
0x3F72	0xF000F91D  BL	_vUSART1Start_TX+0
0x3F76	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 531 :: 		}
L_vRF4463MainCommandProcessor409:
;DriverRF4463PROMain.c, 532 :: 		}
0x3F78	0xE029    B	L_vRF4463MainCommandProcessor410
L_vRF4463MainCommandProcessor405:
;DriverRF4463PROMain.c, 536 :: 		else if ( memcmp( CMD_RADIO_MATCH_UNSET, ucCommand, sizeof( CMD_RADIO_MATCH_UNSET ) ) == 0x00 ) {
0x3F7A	0xF10D0416  ADD	R4, SP, #22
0x3F7E	0x220C    MOVS	R2, #12
0x3F80	0xB212    SXTH	R2, R2
0x3F82	0x4621    MOV	R1, R4
0x3F84	0x4822    LDR	R0, [PC, #136]
0x3F86	0xF7FDFF7F  BL	_memcmp+0
0x3F8A	0xB970    CBNZ	R0, L_vRF4463MainCommandProcessor411
;DriverRF4463PROMain.c, 538 :: 		ucRF4463MatchEnableReg = 1;
0x3F8C	0x2101    MOVS	R1, #1
0x3F8E	0x4815    LDR	R0, [PC, #84]
0x3F90	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 539 :: 		vRF4463MainApplyChanges();
0x3F92	0xF7FEF917  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 540 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x3F96	0x4814    LDR	R0, [PC, #80]
0x3F98	0xF7FCFB9A  BL	_strlen+0
0x3F9C	0xB401    PUSH	(R0)
0x3F9E	0x4812    LDR	R0, [PC, #72]
0x3FA0	0xB401    PUSH	(R0)
0x3FA2	0xF000F905  BL	_vUSART1Start_TX+0
0x3FA6	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 545 :: 		}
0x3FA8	0xE011    B	L_vRF4463MainCommandProcessor412
L_vRF4463MainCommandProcessor411:
;DriverRF4463PROMain.c, 549 :: 		vUSART1Start_TX( ANS_DEBUG_COMMAND_UNKNOWN, strlen( ANS_DEBUG_COMMAND_UNKNOWN ) );
0x3FAA	0x481A    LDR	R0, [PC, #104]
0x3FAC	0xF7FCFB90  BL	_strlen+0
0x3FB0	0xB401    PUSH	(R0)
0x3FB2	0x4818    LDR	R0, [PC, #96]
0x3FB4	0xB401    PUSH	(R0)
0x3FB6	0xF000F8FB  BL	_vUSART1Start_TX+0
0x3FBA	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 550 :: 		vUSART1Start_TX( ucBuffer, strlen( ucBuffer ) );  // DEPURACION
0x3FBC	0x9830    LDR	R0, [SP, #192]
0x3FBE	0xF7FCFB87  BL	_strlen+0
0x3FC2	0xB401    PUSH	(R0)
0x3FC4	0x9831    LDR	R0, [SP, #196]
0x3FC6	0xB401    PUSH	(R0)
0x3FC8	0xF000F8F2  BL	_vUSART1Start_TX+0
0x3FCC	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 551 :: 		}
L_vRF4463MainCommandProcessor412:
L_vRF4463MainCommandProcessor410:
L_vRF4463MainCommandProcessor404:
L_vRF4463MainCommandProcessor398:
L_vRF4463MainCommandProcessor392:
L_vRF4463MainCommandProcessor386:
L_vRF4463MainCommandProcessor380:
L_vRF4463MainCommandProcessor374:
L_vRF4463MainCommandProcessor368:
L_vRF4463MainCommandProcessor362:
L_vRF4463MainCommandProcessor340:
L_vRF4463MainCommandProcessor336:
L_vRF4463MainCommandProcessor320:
L_vRF4463MainCommandProcessor314:
L_vRF4463MainCommandProcessor308:
L_vRF4463MainCommandProcessor292:
L_vRF4463MainCommandProcessor286:
;DriverRF4463PROMain.c, 552 :: 		}
L_end_vRF4463MainCommandProcessor:
0x3FCE	0xF8DDE000  LDR	LR, [SP, #0]
0x3FD2	0xB030    ADD	SP, SP, #192
0x3FD4	0x4770    BX	LR
0x3FD6	0xBF00    NOP
0x3FD8	0x23382000  	vRF4463MainCommandProcessor_ulArgument_L0+0
0x3FDC	0x22342000  	_ucRF4463ByteMatch4+0
0x3FE0	0x220C2000  	_ucRF4463MatchEnabled+0
0x3FE4	0x220D2000  	_ucRF4463MatchEnableReg+0
0x3FE8	0x20162000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x3FEC	0x203E2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x3FF0	0x22352000  	_CMD_RADIO_MATCH_MASK_1_SET+0
0x3FF4	0x22402000  	_ucRF4463ByteMask1+0
0x3FF8	0x22412000  	_CMD_RADIO_MATCH_MASK_2_SET+0
0x3FFC	0x224C2000  	_ucRF4463ByteMask2+0
0x4000	0x224D2000  	_CMD_RADIO_MATCH_MASK_3_SET+0
0x4004	0x22582000  	_ucRF4463ByteMask3+0
0x4008	0x22592000  	_CMD_RADIO_MATCH_MASK_4_SET+0
0x400C	0x22642000  	_ucRF4463ByteMask4+0
0x4010	0x22652000  	_CMD_RADIO_MATCH_UNSET+0
0x4014	0x22712000  	_ANS_DEBUG_COMMAND_UNKNOWN+0
; end of _vRF4463MainCommandProcessor
_toupper:
;__Lib_CType.c, 76 :: 		
; character start address is: 0 (R0)
0x1EBC	0xB081    SUB	SP, SP, #4
; character end address is: 0 (R0)
; character start address is: 0 (R0)
;__Lib_CType.c, 77 :: 		
0x1EBE	0x287A    CMP	R0, #122
0x1EC0	0xD808    BHI	L__toupper47
0x1EC2	0x2861    CMP	R0, #97
0x1EC4	0xD307    BCC	L__toupper48
L__toupper44:
;__Lib_CType.c, 78 :: 		
0x1EC6	0xF64F71DF  MOVW	R1, #65503
0x1ECA	0xB209    SXTH	R1, R1
0x1ECC	0xEA000101  AND	R1, R0, R1, LSL #0
0x1ED0	0xB2C8    UXTB	R0, R1
; character end address is: 0 (R0)
;__Lib_CType.c, 77 :: 		
0x1ED2	0xE7FF    B	L__toupper46
L__toupper47:
L__toupper46:
; character start address is: 0 (R0)
; character end address is: 0 (R0)
0x1ED4	0xE7FF    B	L__toupper45
L__toupper48:
L__toupper45:
;__Lib_CType.c, 79 :: 		
; character start address is: 0 (R0)
; character end address is: 0 (R0)
;__Lib_CType.c, 80 :: 		
L_end_toupper:
0x1ED6	0xB001    ADD	SP, SP, #4
0x1ED8	0x4770    BX	LR
; end of _toupper
_memcmp:
;__Lib_CString.c, 30 :: 		
; n start address is: 8 (R2)
; s2 start address is: 4 (R1)
; s1 start address is: 0 (R0)
0x1E88	0xB081    SUB	SP, SP, #4
; n end address is: 8 (R2)
; s2 end address is: 4 (R1)
; s1 end address is: 0 (R0)
; s1 start address is: 0 (R0)
; s2 start address is: 4 (R1)
; n start address is: 8 (R2)
0x1E8A	0xF8AD2000  STRH	R2, [SP, #0]
; s1 end address is: 0 (R0)
; n end address is: 8 (R2)
; s2 end address is: 4 (R1)
0x1E8E	0x4602    MOV	R2, R0
0x1E90	0xF9BD0000  LDRSH	R0, [SP, #0]
;__Lib_CString.c, 31 :: 		
L_memcmp4:
; n start address is: 0 (R0)
; n start address is: 0 (R0)
; s2 start address is: 4 (R1)
; s1 start address is: 8 (R2)
0x1E94	0xB204    SXTH	R4, R0
0x1E96	0x1E43    SUBS	R3, R0, #1
0x1E98	0xB218    SXTH	R0, R3
; n end address is: 0 (R0)
0x1E9A	0xB15C    CBZ	R4, L_memcmp5
; n end address is: 0 (R0)
;__Lib_CString.c, 32 :: 		
; n start address is: 0 (R0)
0x1E9C	0x7814    LDRB	R4, [R2, #0]
0x1E9E	0x780B    LDRB	R3, [R1, #0]
0x1EA0	0x429C    CMP	R4, R3
0x1EA2	0xD004    BEQ	L_memcmp6
; n end address is: 0 (R0)
;__Lib_CString.c, 33 :: 		
0x1EA4	0x7814    LDRB	R4, [R2, #0]
; s1 end address is: 8 (R2)
0x1EA6	0x780B    LDRB	R3, [R1, #0]
; s2 end address is: 4 (R1)
0x1EA8	0x1AE3    SUB	R3, R4, R3
0x1EAA	0xB218    SXTH	R0, R3
0x1EAC	0xE004    B	L_end_memcmp
L_memcmp6:
;__Lib_CString.c, 37 :: 		
; s2 start address is: 4 (R1)
; s1 start address is: 8 (R2)
; n start address is: 0 (R0)
0x1EAE	0x1C52    ADDS	R2, R2, #1
;__Lib_CString.c, 38 :: 		
0x1EB0	0x1C49    ADDS	R1, R1, #1
;__Lib_CString.c, 39 :: 		
; n end address is: 0 (R0)
; s1 end address is: 8 (R2)
; s2 end address is: 4 (R1)
0x1EB2	0xE7EF    B	L_memcmp4
L_memcmp5:
;__Lib_CString.c, 40 :: 		
0x1EB4	0x2000    MOVS	R0, #0
0x1EB6	0xB200    SXTH	R0, R0
;__Lib_CString.c, 41 :: 		
L_end_memcmp:
0x1EB8	0xB001    ADD	SP, SP, #4
0x1EBA	0x4770    BX	LR
; end of _memcmp
_StrToShort:
;__Lib_Conversions.c, 918 :: 		
; byte_in start address is: 0 (R0)
0x1C98	0xB085    SUB	SP, SP, #20
0x1C9A	0xF8CDE000  STR	LR, [SP, #0]
0x1C9E	0x4605    MOV	R5, R0
; byte_in end address is: 0 (R0)
; byte_in start address is: 20 (R5)
;__Lib_Conversions.c, 920 :: 		
0x1CA0	0x2100    MOVS	R1, #0
0x1CA2	0xF88D100C  STRB	R1, [SP, #12]
0x1CA6	0x2100    MOVS	R1, #0
0x1CA8	0xF88D100D  STRB	R1, [SP, #13]
0x1CAC	0x2100    MOVS	R1, #0
0x1CAE	0xF88D100E  STRB	R1, [SP, #14]
0x1CB2	0xF88D100F  STRB	R1, [SP, #15]
0x1CB6	0xF88D1010  STRB	R1, [SP, #16]
;__Lib_Conversions.c, 921 :: 		
;__Lib_Conversions.c, 922 :: 		
; result start address is: 12 (R3)
0x1CBA	0x2300    MOVS	R3, #0
0x1CBC	0xB25B    SXTB	R3, R3
;__Lib_Conversions.c, 923 :: 		
;__Lib_Conversions.c, 925 :: 		
0x1CBE	0xF88D3004  STRB	R3, [SP, #4]
0x1CC2	0x4628    MOV	R0, R5
0x1CC4	0xF7FEFD04  BL	_strlen+0
0x1CC8	0xF99D3004  LDRSB	R3, [SP, #4]
; i1 start address is: 16 (R4)
0x1CCC	0xB2C4    UXTB	R4, R0
;__Lib_Conversions.c, 926 :: 		
0x1CCE	0xB2C1    UXTB	R1, R0
0x1CD0	0x2904    CMP	R1, #4
0x1CD2	0xF2008069  BHI	L_StrToShort176
;__Lib_Conversions.c, 928 :: 		
0x1CD6	0xAA03    ADD	R2, SP, #12
0x1CD8	0xF10D010D  ADD	R1, SP, #13
0x1CDC	0xF88D4004  STRB	R4, [SP, #4]
0x1CE0	0xF88D3005  STRB	R3, [SP, #5]
0x1CE4	0x9502    STR	R5, [SP, #8]
0x1CE6	0x4628    MOV	R0, R5
0x1CE8	0xF7FEFD9A  BL	__Lib_Conversions_Forward_Input+0
0x1CEC	0x9D02    LDR	R5, [SP, #8]
0x1CEE	0xF99D3005  LDRSB	R3, [SP, #5]
0x1CF2	0xF89D4004  LDRB	R4, [SP, #4]
; multiplier start address is: 0 (R0)
0x1CF6	0xB280    UXTH	R0, R0
;__Lib_Conversions.c, 930 :: 		
0x1CF8	0xF89D100C  LDRB	R1, [SP, #12]
0x1CFC	0x2901    CMP	R1, #1
0x1CFE	0xD850    BHI	L_StrToShort177
;__Lib_Conversions.c, 932 :: 		
0x1D00	0x7829    LDRB	R1, [R5, #0]
0x1D02	0x292D    CMP	R1, #45
0x1D04	0xD01E    BEQ	L_StrToShort178
; byte_in end address is: 20 (R5)
;__Lib_Conversions.c, 934 :: 		
; i start address is: 8 (R2)
0x1D06	0x2200    MOVS	R2, #0
; i1 end address is: 16 (R4)
; multiplier end address is: 0 (R0)
; result end address is: 12 (R3)
; i end address is: 8 (R2)
0x1D08	0xB285    UXTH	R5, R0
0x1D0A	0xB2E0    UXTB	R0, R4
L_StrToShort179:
; i start address is: 8 (R2)
; multiplier start address is: 20 (R5)
; i1 start address is: 0 (R0)
; result start address is: 12 (R3)
0x1D0C	0x4282    CMP	R2, R0
0x1D0E	0xD210    BCS	L_StrToShort180
;__Lib_Conversions.c, 936 :: 		
0x1D10	0xF10D010D  ADD	R1, SP, #13
0x1D14	0x1889    ADDS	R1, R1, R2
0x1D16	0x7809    LDRB	R1, [R1, #0]
0x1D18	0x3930    SUBS	R1, #48
0x1D1A	0xB209    SXTH	R1, R1
0x1D1C	0x4369    MULS	R1, R5, R1
0x1D1E	0xB289    UXTH	R1, R1
0x1D20	0x1859    ADDS	R1, R3, R1
0x1D22	0xB24B    SXTB	R3, R1
;__Lib_Conversions.c, 937 :: 		
0x1D24	0x210A    MOVS	R1, #10
0x1D26	0xFBB5F5F1  UDIV	R5, R5, R1
0x1D2A	0xB2AD    UXTH	R5, R5
;__Lib_Conversions.c, 934 :: 		
0x1D2C	0x1C52    ADDS	R2, R2, #1
0x1D2E	0xB2D2    UXTB	R2, R2
;__Lib_Conversions.c, 938 :: 		
; multiplier end address is: 20 (R5)
; i1 end address is: 0 (R0)
; i end address is: 8 (R2)
0x1D30	0xE7EC    B	L_StrToShort179
L_StrToShort180:
;__Lib_Conversions.c, 939 :: 		
0x1D32	0xF06F017F  MVN	R1, #127
0x1D36	0x428B    CMP	R3, R1
0x1D38	0xD102    BNE	L__StrToShort469
; result end address is: 12 (R3)
;__Lib_Conversions.c, 940 :: 		
; result start address is: 0 (R0)
0x1D3A	0x2000    MOVS	R0, #0
0x1D3C	0xB240    SXTB	R0, R0
; result end address is: 0 (R0)
0x1D3E	0xE000    B	L_StrToShort182
L__StrToShort469:
;__Lib_Conversions.c, 939 :: 		
0x1D40	0xB258    SXTB	R0, R3
;__Lib_Conversions.c, 940 :: 		
L_StrToShort182:
;__Lib_Conversions.c, 941 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x1D42	0xE02D    B	L_StrToShort183
L_StrToShort178:
;__Lib_Conversions.c, 942 :: 		
; result start address is: 12 (R3)
; multiplier start address is: 0 (R0)
; i1 start address is: 16 (R4)
; byte_in start address is: 20 (R5)
0x1D44	0x462A    MOV	R2, R5
0x1D46	0x212D    MOVS	R1, #45
0x1D48	0x7029    STRB	R1, [R5, #0]
; byte_in end address is: 20 (R5)
0x1D4A	0x7811    LDRB	R1, [R2, #0]
0x1D4C	0xB329    CBZ	R1, L__StrToShort471
0x1D4E	0xF89D100C  LDRB	R1, [SP, #12]
0x1D52	0x2901    CMP	R1, #1
0x1D54	0xD123    BNE	L__StrToShort472
L__StrToShort466:
;__Lib_Conversions.c, 944 :: 		
; i start address is: 8 (R2)
0x1D56	0x2201    MOVS	R2, #1
; i1 end address is: 16 (R4)
; multiplier end address is: 0 (R0)
; result end address is: 12 (R3)
; i end address is: 8 (R2)
0x1D58	0xF8AD0004  STRH	R0, [SP, #4]
0x1D5C	0xB2E0    UXTB	R0, R4
0x1D5E	0xF8BD4004  LDRH	R4, [SP, #4]
L_StrToShort187:
; i start address is: 8 (R2)
; multiplier start address is: 16 (R4)
; i1 start address is: 0 (R0)
; result start address is: 12 (R3)
0x1D62	0x4282    CMP	R2, R0
0x1D64	0xD210    BCS	L_StrToShort188
;__Lib_Conversions.c, 946 :: 		
0x1D66	0xF10D010D  ADD	R1, SP, #13
0x1D6A	0x1889    ADDS	R1, R1, R2
0x1D6C	0x7809    LDRB	R1, [R1, #0]
0x1D6E	0x3930    SUBS	R1, #48
0x1D70	0xB209    SXTH	R1, R1
0x1D72	0x4361    MULS	R1, R4, R1
0x1D74	0xB289    UXTH	R1, R1
0x1D76	0x1859    ADDS	R1, R3, R1
0x1D78	0xB24B    SXTB	R3, R1
;__Lib_Conversions.c, 947 :: 		
0x1D7A	0x210A    MOVS	R1, #10
0x1D7C	0xFBB4F4F1  UDIV	R4, R4, R1
0x1D80	0xB2A4    UXTH	R4, R4
;__Lib_Conversions.c, 944 :: 		
0x1D82	0x1C52    ADDS	R2, R2, #1
0x1D84	0xB2D2    UXTB	R2, R2
;__Lib_Conversions.c, 948 :: 		
; i1 end address is: 0 (R0)
; multiplier end address is: 16 (R4)
; i end address is: 8 (R2)
0x1D86	0xE7EC    B	L_StrToShort187
L_StrToShort188:
;__Lib_Conversions.c, 949 :: 		
0x1D88	0x4259    RSBS	R1, R3, #0
; result end address is: 12 (R3)
; result start address is: 0 (R0)
0x1D8A	0xB248    SXTB	R0, R1
;__Lib_Conversions.c, 950 :: 		
0x1D8C	0xB249    SXTB	R1, R1
0x1D8E	0x297F    CMP	R1, #127
0x1D90	0xD102    BNE	L__StrToShort470
;__Lib_Conversions.c, 951 :: 		
0x1D92	0x2000    MOVS	R0, #0
0x1D94	0xB240    SXTB	R0, R0
; result end address is: 0 (R0)
0x1D96	0xE7FF    B	L_StrToShort190
L__StrToShort470:
;__Lib_Conversions.c, 950 :: 		
;__Lib_Conversions.c, 951 :: 		
L_StrToShort190:
;__Lib_Conversions.c, 942 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x1D98	0xE000    B	L__StrToShort468
L__StrToShort471:
0x1D9A	0xB258    SXTB	R0, R3
L__StrToShort468:
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x1D9C	0xE000    B	L__StrToShort467
L__StrToShort472:
0x1D9E	0xB258    SXTB	R0, R3
L__StrToShort467:
;__Lib_Conversions.c, 952 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
L_StrToShort183:
;__Lib_Conversions.c, 953 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x1DA0	0xE001    B	L_StrToShort191
L_StrToShort177:
;__Lib_Conversions.c, 954 :: 		
; result start address is: 0 (R0)
0x1DA2	0x2000    MOVS	R0, #0
0x1DA4	0xB240    SXTB	R0, R0
; result end address is: 0 (R0)
L_StrToShort191:
;__Lib_Conversions.c, 955 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x1DA6	0xE001    B	L_StrToShort192
L_StrToShort176:
;__Lib_Conversions.c, 956 :: 		
; result start address is: 0 (R0)
0x1DA8	0x2000    MOVS	R0, #0
0x1DAA	0xB240    SXTB	R0, R0
; result end address is: 0 (R0)
L_StrToShort192:
;__Lib_Conversions.c, 957 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
;__Lib_Conversions.c, 958 :: 		
L_end_StrToShort:
0x1DAC	0xF8DDE000  LDR	LR, [SP, #0]
0x1DB0	0xB005    ADD	SP, SP, #20
0x1DB2	0x4770    BX	LR
; end of _StrToShort
_strlen:
;__Lib_CString.c, 143 :: 		
; s start address is: 0 (R0)
0x06D0	0xB081    SUB	SP, SP, #4
0x06D2	0x4601    MOV	R1, R0
; s end address is: 0 (R0)
; s start address is: 4 (R1)
;__Lib_CString.c, 146 :: 		
; cp start address is: 0 (R0)
0x06D4	0x4608    MOV	R0, R1
; s end address is: 4 (R1)
; cp end address is: 0 (R0)
0x06D6	0x460B    MOV	R3, R1
;__Lib_CString.c, 147 :: 		
L_strlen36:
; cp start address is: 0 (R0)
; s start address is: 12 (R3)
0x06D8	0x4602    MOV	R2, R0
0x06DA	0x1C40    ADDS	R0, R0, #1
0x06DC	0x7811    LDRB	R1, [R2, #0]
0x06DE	0xB101    CBZ	R1, L_strlen37
;__Lib_CString.c, 148 :: 		
0x06E0	0xE7FA    B	L_strlen36
L_strlen37:
;__Lib_CString.c, 149 :: 		
0x06E2	0x1AC1    SUB	R1, R0, R3
; s end address is: 12 (R3)
; cp end address is: 0 (R0)
0x06E4	0x1E49    SUBS	R1, R1, #1
0x06E6	0xB208    SXTH	R0, R1
;__Lib_CString.c, 150 :: 		
L_end_strlen:
0x06E8	0xB001    ADD	SP, SP, #4
0x06EA	0x4770    BX	LR
; end of _strlen
__Lib_Conversions_Forward_Input:
;__Lib_Conversions.c, 777 :: 		
; counter start address is: 8 (R2)
; buf_str2 start address is: 4 (R1)
; byte_in start address is: 0 (R0)
0x0820	0xB081    SUB	SP, SP, #4
0x0822	0xF8CDE000  STR	LR, [SP, #0]
0x0826	0x4604    MOV	R4, R0
0x0828	0x460D    MOV	R5, R1
0x082A	0x4616    MOV	R6, R2
; counter end address is: 8 (R2)
; buf_str2 end address is: 4 (R1)
; byte_in end address is: 0 (R0)
; byte_in start address is: 16 (R4)
; buf_str2 start address is: 20 (R5)
; counter start address is: 24 (R6)
;__Lib_Conversions.c, 779 :: 		
0x082C	0x4620    MOV	R0, R4
0x082E	0xF7FFFF4F  BL	_strlen+0
; i start address is: 28 (R7)
0x0832	0xB2C7    UXTB	R7, R0
;__Lib_Conversions.c, 781 :: 		
; multiplier start address is: 40 (R10)
0x0834	0xF04F0A01  MOV	R10, #1
0x0838	0xF2400B00  MOVW	R11, #0
; byte_in end address is: 16 (R4)
; buf_str2 end address is: 20 (R5)
; counter end address is: 24 (R6)
; multiplier end address is: 40 (R10)
; i end address is: 28 (R7)
0x083C	0x4622    MOV	R2, R4
0x083E	0x4629    MOV	R1, R5
0x0840	0x4630    MOV	R0, R6
;__Lib_Conversions.c, 783 :: 		
L___Lib_Conversions_Forward_Input139:
; multiplier start address is: 40 (R10)
; byte_in start address is: 8 (R2)
; buf_str2 start address is: 4 (R1)
; counter start address is: 0 (R0)
; i start address is: 28 (R7)
; counter start address is: 0 (R0)
; counter end address is: 0 (R0)
; buf_str2 start address is: 4 (R1)
; buf_str2 end address is: 4 (R1)
; byte_in start address is: 8 (R2)
; byte_in end address is: 8 (R2)
0x0842	0x2F00    CMP	R7, #0
0x0844	0xD91E    BLS	L___Lib_Conversions_Forward_Input140
; counter end address is: 0 (R0)
; buf_str2 end address is: 4 (R1)
; byte_in end address is: 8 (R2)
;__Lib_Conversions.c, 785 :: 		
; byte_in start address is: 8 (R2)
; buf_str2 start address is: 4 (R1)
; counter start address is: 0 (R0)
0x0846	0x19D3    ADDS	R3, R2, R7
0x0848	0x1E5B    SUBS	R3, R3, #1
0x084A	0x781B    LDRB	R3, [R3, #0]
; tmp start address is: 16 (R4)
0x084C	0xB2DC    UXTB	R4, R3
;__Lib_Conversions.c, 786 :: 		
0x084E	0x2B30    CMP	R3, #48
0x0850	0xD312    BCC	L___Lib_Conversions_Forward_Input438
0x0852	0x2C39    CMP	R4, #57
0x0854	0xD810    BHI	L___Lib_Conversions_Forward_Input437
; tmp end address is: 16 (R4)
L___Lib_Conversions_Forward_Input436:
;__Lib_Conversions.c, 788 :: 		
0x0856	0x19CB    ADDS	R3, R1, R7
0x0858	0x1E5C    SUBS	R4, R3, #1
0x085A	0x19D3    ADDS	R3, R2, R7
0x085C	0x1E5B    SUBS	R3, R3, #1
0x085E	0x781B    LDRB	R3, [R3, #0]
0x0860	0x7023    STRB	R3, [R4, #0]
;__Lib_Conversions.c, 789 :: 		
0x0862	0x250A    MOVS	R5, #10
0x0864	0x2600    MOVS	R6, #0
0x0866	0xFBAA3405  UMULL	R3, R4, R10, R5
0x086A	0xFB0B4405  MLA	R4, R11, R5, R4
0x086E	0xFB0A4406  MLA	R4, R10, R6, R4
0x0872	0x469A    MOV	R10, R3
0x0874	0x46A3    MOV	R11, R4
;__Lib_Conversions.c, 790 :: 		
0x0876	0xE002    B	L___Lib_Conversions_Forward_Input144
;__Lib_Conversions.c, 786 :: 		
L___Lib_Conversions_Forward_Input438:
L___Lib_Conversions_Forward_Input437:
;__Lib_Conversions.c, 792 :: 		
0x0878	0x7803    LDRB	R3, [R0, #0]
0x087A	0x1C5B    ADDS	R3, R3, #1
0x087C	0x7003    STRB	R3, [R0, #0]
; multiplier end address is: 40 (R10)
L___Lib_Conversions_Forward_Input144:
;__Lib_Conversions.c, 793 :: 		
; multiplier start address is: 40 (R10)
0x087E	0x1E7F    SUBS	R7, R7, #1
0x0880	0xB2FF    UXTB	R7, R7
;__Lib_Conversions.c, 794 :: 		
; counter end address is: 0 (R0)
; buf_str2 end address is: 4 (R1)
; byte_in end address is: 8 (R2)
; i end address is: 28 (R7)
0x0882	0xE7DE    B	L___Lib_Conversions_Forward_Input139
L___Lib_Conversions_Forward_Input140:
;__Lib_Conversions.c, 795 :: 		
0x0884	0x220A    MOVS	R2, #10
0x0886	0x2300    MOVS	R3, #0
0x0888	0x4650    MOV	R0, R10
0x088A	0x4659    MOV	R1, R11
0x088C	0xF7FFFD46  BL	__Div_64x64_U+0
; multiplier end address is: 40 (R10)
;__Lib_Conversions.c, 797 :: 		
;__Lib_Conversions.c, 798 :: 		
L_end_Forward_Input:
0x0890	0xF8DDE000  LDR	LR, [SP, #0]
0x0894	0xB001    ADD	SP, SP, #4
0x0896	0x4770    BX	LR
; end of __Lib_Conversions_Forward_Input
__Div_64x64_U:
;__Lib_Math.c, 373 :: 		
0x031C	0xB081    SUB	SP, SP, #4
;__Lib_Math.c, 376 :: 		
0x031E	0xE92D41F0  PUSH	(R4, R5, R6, R7, R8, R14)
;__Lib_Math.c, 377 :: 		
0x0322	0x461C    MOV	R4, R3
;__Lib_Math.c, 378 :: 		
0x0324	0x4615    MOV	R5, R2
;__Lib_Math.c, 380 :: 		
0x0326	0x428C    CMP	R4, R1
;__Lib_Math.c, 381 :: 		
0x0328	0xBF08    IT	EQ
;__Lib_Math.c, 382 :: 		
0x032A	0x4285    CMPEQ	R5, R0
;__Lib_Math.c, 383 :: 		
0x032C	0xBF82    ITTT	HI
;__Lib_Math.c, 384 :: 		
0x032E	0xF04F0300  MOVHI	R3, #0
;__Lib_Math.c, 385 :: 		
0x0332	0xF04F0200  MOVHI	R2, #0
;__Lib_Math.c, 387 :: 		
0x0336	0xE0E4    BHI	__me_label_return
;__Lib_Math.c, 392 :: 		
0x0338	0x2C00    CMP	R4, #0
;__Lib_Math.c, 393 :: 		
0x033A	0xBF08    IT	EQ
;__Lib_Math.c, 394 :: 		
0x033C	0x2D00    CMPEQ	R5, #0
;__Lib_Math.c, 397 :: 		
0x033E	0xD107    BNE	__me_not_zero_
;__Lib_Math.c, 399 :: 		
0x0340	0x2900    CMP	R1, #0
;__Lib_Math.c, 400 :: 		
0x0342	0xBF0E    ITEE	EQ
;__Lib_Math.c, 401 :: 		
0x0344	0x2800    CMPEQ	R0, #0
;__Lib_Math.c, 404 :: 		
0x0346	0xF06F0000  MVNNE	R0, #0
;__Lib_Math.c, 405 :: 		
0x034A	0xF06F0100  MVNNE	R1, #0
;__Lib_Math.c, 411 :: 		
0x034E	0xE0DE    B	__me_lab_end
;__Lib_Math.c, 419 :: 		
__me_not_zero_:
;__Lib_Math.c, 420 :: 		
0x0350	0xF05F0900  MOVS	R9, #0
;__Lib_Math.c, 421 :: 		
0x0354	0xF05F0E00  MOVS	LR, #0
;__Lib_Math.c, 426 :: 		
0x0358	0x2C00    CMP	R4, #0
;__Lib_Math.c, 427 :: 		
0x035A	0xBF08    IT	EQ
;__Lib_Math.c, 428 :: 		
0x035C	0x428D    CMPEQ	R5, R1
;__Lib_Math.c, 429 :: 		
0x035E	0xBF9C    ITT	LS
;__Lib_Math.c, 430 :: 		
0x0360	0x462C    MOVLS	R4, R5
;__Lib_Math.c, 431 :: 		
0x0362	0xF04F0500  MOVLS	R5, #0
;__Lib_Math.c, 434 :: 		
0x0366	0x0C07    LSRS	R7, R0, #16
;__Lib_Math.c, 435 :: 		
0x0368	0xEA474701  ORR	R7, R7, R1, LSL #16
;__Lib_Math.c, 436 :: 		
0x036C	0x0C0E    LSRS	R6, R1, #16
;__Lib_Math.c, 437 :: 		
0x036E	0x42B4    CMP	R4, R6
;__Lib_Math.c, 438 :: 		
0x0370	0xBF08    IT	EQ
;__Lib_Math.c, 439 :: 		
0x0372	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 441 :: 		
0x0374	0xBF9E    ITTT	LS
;__Lib_Math.c, 442 :: 		
0x0376	0xEA5F4404  LSLSLS	R4, R4, #16
;__Lib_Math.c, 443 :: 		
0x037A	0xEA444415  ORRLS	R4, R4, R5, LSR #16
;__Lib_Math.c, 444 :: 		
0x037E	0xEA5F4505  LSLSLS	R5, R5, #16
;__Lib_Math.c, 447 :: 		
0x0382	0x0A07    LSRS	R7, R0, #8
;__Lib_Math.c, 448 :: 		
0x0384	0xEA476701  ORR	R7, R7, R1, LSL #24
;__Lib_Math.c, 449 :: 		
0x0388	0x0A0E    LSRS	R6, R1, #8
;__Lib_Math.c, 450 :: 		
0x038A	0x42B4    CMP	R4, R6
;__Lib_Math.c, 451 :: 		
0x038C	0xBF08    IT	EQ
;__Lib_Math.c, 452 :: 		
0x038E	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 454 :: 		
0x0390	0xBF9E    ITTT	LS
;__Lib_Math.c, 455 :: 		
0x0392	0xEA5F2404  LSLSLS	R4, R4, #8
;__Lib_Math.c, 456 :: 		
0x0396	0xEA446415  ORRLS	R4, R4, R5, LSR #24
;__Lib_Math.c, 457 :: 		
0x039A	0xEA5F2505  LSLSLS	R5, R5, #8
;__Lib_Math.c, 461 :: 		
0x039E	0x0847    LSRS	R7, R0, #1
;__Lib_Math.c, 462 :: 		
0x03A0	0xEA4777C1  ORR	R7, R7, R1, LSL #31
;__Lib_Math.c, 463 :: 		
0x03A4	0x084E    LSRS	R6, R1, #1
;__Lib_Math.c, 464 :: 		
0x03A6	0x42B4    CMP	R4, R6
;__Lib_Math.c, 465 :: 		
0x03A8	0xBF08    IT	EQ
;__Lib_Math.c, 466 :: 		
0x03AA	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 467 :: 		
0x03AC	0xF2008094  BHI	__me_mod1
;__Lib_Math.c, 469 :: 		
0x03B0	0x0887    LSRS	R7, R0, #2
;__Lib_Math.c, 470 :: 		
0x03B2	0xEA477781  ORR	R7, R7, R1, LSL #30
;__Lib_Math.c, 471 :: 		
0x03B6	0x088E    LSRS	R6, R1, #2
;__Lib_Math.c, 472 :: 		
0x03B8	0x42B4    CMP	R4, R6
;__Lib_Math.c, 473 :: 		
0x03BA	0xBF08    IT	EQ
;__Lib_Math.c, 474 :: 		
0x03BC	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 475 :: 		
0x03BE	0xF200807D  BHI	__me_mod2
;__Lib_Math.c, 477 :: 		
0x03C2	0x08C7    LSRS	R7, R0, #3
;__Lib_Math.c, 478 :: 		
0x03C4	0xEA477741  ORR	R7, R7, R1, LSL #29
;__Lib_Math.c, 479 :: 		
0x03C8	0x08CE    LSRS	R6, R1, #3
;__Lib_Math.c, 480 :: 		
0x03CA	0x42B4    CMP	R4, R6
;__Lib_Math.c, 481 :: 		
0x03CC	0xBF08    IT	EQ
;__Lib_Math.c, 482 :: 		
0x03CE	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 483 :: 		
0x03D0	0xD866    BHI	__me_mod3
;__Lib_Math.c, 485 :: 		
0x03D2	0x0907    LSRS	R7, R0, #4
;__Lib_Math.c, 486 :: 		
0x03D4	0xEA477701  ORR	R7, R7, R1, LSL #28
;__Lib_Math.c, 487 :: 		
0x03D8	0x090E    LSRS	R6, R1, #4
;__Lib_Math.c, 488 :: 		
0x03DA	0x42B4    CMP	R4, R6
;__Lib_Math.c, 489 :: 		
0x03DC	0xBF08    IT	EQ
;__Lib_Math.c, 490 :: 		
0x03DE	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 491 :: 		
0x03E0	0xD850    BHI	__me_mod4
;__Lib_Math.c, 493 :: 		
0x03E2	0x0947    LSRS	R7, R0, #5
;__Lib_Math.c, 494 :: 		
0x03E4	0xEA4767C1  ORR	R7, R7, R1, LSL #27
;__Lib_Math.c, 495 :: 		
0x03E8	0x094E    LSRS	R6, R1, #5
;__Lib_Math.c, 496 :: 		
0x03EA	0x42B4    CMP	R4, R6
;__Lib_Math.c, 497 :: 		
0x03EC	0xBF08    IT	EQ
;__Lib_Math.c, 498 :: 		
0x03EE	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 499 :: 		
0x03F0	0xD83A    BHI	__me_mod5
;__Lib_Math.c, 501 :: 		
0x03F2	0x0987    LSRS	R7, R0, #6
;__Lib_Math.c, 502 :: 		
0x03F4	0xEA476781  ORR	R7, R7, R1, LSL #26
;__Lib_Math.c, 503 :: 		
0x03F8	0x098E    LSRS	R6, R1, #6
;__Lib_Math.c, 504 :: 		
0x03FA	0x42B4    CMP	R4, R6
;__Lib_Math.c, 505 :: 		
0x03FC	0xBF08    IT	EQ
;__Lib_Math.c, 506 :: 		
0x03FE	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 507 :: 		
0x0400	0xD824    BHI	__me_mod6
;__Lib_Math.c, 509 :: 		
0x0402	0x09C7    LSRS	R7, R0, #7
;__Lib_Math.c, 510 :: 		
0x0404	0xEA476741  ORR	R7, R7, R1, LSL #25
;__Lib_Math.c, 511 :: 		
0x0408	0x09CE    LSRS	R6, R1, #7
;__Lib_Math.c, 512 :: 		
0x040A	0x42B4    CMP	R4, R6
;__Lib_Math.c, 513 :: 		
0x040C	0xBF08    IT	EQ
;__Lib_Math.c, 514 :: 		
0x040E	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 515 :: 		
0x0410	0xD80D    BHI	__me_mod7
;__Lib_Math.c, 520 :: 		
__me_divll:
;__Lib_Math.c, 521 :: 		
0x0412	0x01E6    LSLS	R6, R4, #7
;__Lib_Math.c, 522 :: 		
0x0414	0xEA466655  ORR	R6, R6, R5, LSR #25
;__Lib_Math.c, 523 :: 		
0x0418	0x01EF    LSLS	R7, R5, #7
;__Lib_Math.c, 524 :: 		
0x041A	0x42B1    CMP	R1, R6
;__Lib_Math.c, 525 :: 		
0x041C	0xBF08    IT	EQ
;__Lib_Math.c, 526 :: 		
0x041E	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 527 :: 		
0x0420	0xD301    BCC	__me_label_1
;__Lib_Math.c, 528 :: 		
0x0422	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 529 :: 		
0x0424	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 530 :: 		
__me_label_1:
;__Lib_Math.c, 531 :: 		
0x0426	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 532 :: 		
0x042A	0xEB5E0E0E  ADCS	LR, LR, LR, LSL #0
;__Lib_Math.c, 535 :: 		
__me_mod7:
;__Lib_Math.c, 536 :: 		
0x042E	0x01A6    LSLS	R6, R4, #6
;__Lib_Math.c, 537 :: 		
0x0430	0xEA466695  ORR	R6, R6, R5, LSR #26
;__Lib_Math.c, 538 :: 		
0x0434	0xEA4F1785  LSL	R7, R5, #6
;__Lib_Math.c, 539 :: 		
0x0438	0x42B1    CMP	R1, R6
;__Lib_Math.c, 540 :: 		
0x043A	0xBF08    IT	EQ
;__Lib_Math.c, 541 :: 		
0x043C	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 543 :: 		
0x043E	0xD301    BCC	__me_label_2
;__Lib_Math.c, 544 :: 		
0x0440	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 545 :: 		
0x0442	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 546 :: 		
__me_label_2:
;__Lib_Math.c, 547 :: 		
0x0444	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 548 :: 		
0x0448	0xEB4E0E0E  ADC	LR, LR, LR, LSL #0
;__Lib_Math.c, 550 :: 		
__me_mod6:
;__Lib_Math.c, 551 :: 		
0x044C	0x0166    LSLS	R6, R4, #5
;__Lib_Math.c, 552 :: 		
0x044E	0xEA4666D5  ORR	R6, R6, R5, LSR #27
;__Lib_Math.c, 553 :: 		
0x0452	0x016F    LSLS	R7, R5, #5
;__Lib_Math.c, 554 :: 		
0x0454	0x42B1    CMP	R1, R6
;__Lib_Math.c, 555 :: 		
0x0456	0xBF08    IT	EQ
;__Lib_Math.c, 556 :: 		
0x0458	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 558 :: 		
0x045A	0xD301    BCC	__me_label_3
;__Lib_Math.c, 559 :: 		
0x045C	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 560 :: 		
0x045E	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 561 :: 		
__me_label_3:
;__Lib_Math.c, 562 :: 		
0x0460	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 563 :: 		
0x0464	0xEB4E0E0E  ADC	LR, LR, LR, LSL #0
;__Lib_Math.c, 565 :: 		
__me_mod5:
;__Lib_Math.c, 566 :: 		
0x0468	0x0126    LSLS	R6, R4, #4
;__Lib_Math.c, 567 :: 		
0x046A	0xEA467615  ORR	R6, R6, R5, LSR #28
;__Lib_Math.c, 568 :: 		
0x046E	0x012F    LSLS	R7, R5, #4
;__Lib_Math.c, 569 :: 		
0x0470	0x42B1    CMP	R1, R6
;__Lib_Math.c, 570 :: 		
0x0472	0xBF08    IT	EQ
;__Lib_Math.c, 571 :: 		
0x0474	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 573 :: 		
0x0476	0xD301    BCC	__me_label_4
;__Lib_Math.c, 574 :: 		
0x0478	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 575 :: 		
0x047A	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 576 :: 		
__me_label_4:
;__Lib_Math.c, 577 :: 		
0x047C	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 578 :: 		
0x0480	0xEB5E0E0E  ADCS	LR, LR, LR, LSL #0
;__Lib_Math.c, 580 :: 		
__me_mod4:
;__Lib_Math.c, 581 :: 		
0x0484	0x00E6    LSLS	R6, R4, #3
;__Lib_Math.c, 582 :: 		
0x0486	0xEA467655  ORR	R6, R6, R5, LSR #29
;__Lib_Math.c, 583 :: 		
0x048A	0x00EF    LSLS	R7, R5, #3
;__Lib_Math.c, 584 :: 		
0x048C	0x42B1    CMP	R1, R6
;__Lib_Math.c, 585 :: 		
0x048E	0xBF08    IT	EQ
;__Lib_Math.c, 586 :: 		
0x0490	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 588 :: 		
0x0492	0xD301    BCC	__me_label_5
;__Lib_Math.c, 589 :: 		
0x0494	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 590 :: 		
0x0496	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 591 :: 		
__me_label_5:
;__Lib_Math.c, 592 :: 		
0x0498	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 593 :: 		
0x049C	0xEB4E0E0E  ADC	LR, LR, LR, LSL #0
;__Lib_Math.c, 595 :: 		
__me_mod3:
;__Lib_Math.c, 596 :: 		
0x04A0	0x00A6    LSLS	R6, R4, #2
;__Lib_Math.c, 597 :: 		
0x04A2	0xEA467695  ORR	R6, R6, R5, LSR #30
;__Lib_Math.c, 598 :: 		
0x04A6	0x00AF    LSLS	R7, R5, #2
;__Lib_Math.c, 599 :: 		
0x04A8	0x42B1    CMP	R1, R6
;__Lib_Math.c, 600 :: 		
0x04AA	0xBF08    IT	EQ
;__Lib_Math.c, 601 :: 		
0x04AC	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 603 :: 		
0x04AE	0xD301    BCC	__me_label_6
;__Lib_Math.c, 604 :: 		
0x04B0	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 605 :: 		
0x04B2	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 606 :: 		
__me_label_6:
;__Lib_Math.c, 607 :: 		
0x04B4	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 608 :: 		
0x04B8	0xEB4E0E0E  ADC	LR, LR, LR, LSL #0
;__Lib_Math.c, 610 :: 		
__me_mod2:
;__Lib_Math.c, 611 :: 		
0x04BC	0x0066    LSLS	R6, R4, #1
;__Lib_Math.c, 612 :: 		
0x04BE	0xEA4676D5  ORR	R6, R6, R5, LSR #31
;__Lib_Math.c, 613 :: 		
0x04C2	0x006F    LSLS	R7, R5, #1
;__Lib_Math.c, 614 :: 		
0x04C4	0x42B1    CMP	R1, R6
;__Lib_Math.c, 615 :: 		
0x04C6	0xBF08    IT	EQ
;__Lib_Math.c, 616 :: 		
0x04C8	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 618 :: 		
0x04CA	0xD301    BCC	__me_label_7
;__Lib_Math.c, 619 :: 		
0x04CC	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 620 :: 		
0x04CE	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 621 :: 		
__me_label_7:
;__Lib_Math.c, 622 :: 		
0x04D0	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 623 :: 		
0x04D4	0xEB5E0E0E  ADCS	LR, LR, LR, LSL #0
;__Lib_Math.c, 625 :: 		
__me_mod1:
;__Lib_Math.c, 626 :: 		
0x04D8	0x42A1    CMP	R1, R4
;__Lib_Math.c, 627 :: 		
0x04DA	0xBF08    IT	EQ
;__Lib_Math.c, 628 :: 		
0x04DC	0x42A8    CMPEQ	R0, R5
;__Lib_Math.c, 630 :: 		
0x04DE	0xD301    BCC	__me_label_8
;__Lib_Math.c, 631 :: 		
0x04E0	0x1B40    SUBS	R0, R0, R5
;__Lib_Math.c, 632 :: 		
0x04E2	0x41A1    SBCS	R1, R4
;__Lib_Math.c, 633 :: 		
__me_label_8:
;__Lib_Math.c, 634 :: 		
0x04E4	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 635 :: 		
0x04E8	0xEB5E0E0E  ADCS	LR, LR, LR, LSL #0
;__Lib_Math.c, 639 :: 		
0x04EC	0x42A3    CMP	R3, R4
;__Lib_Math.c, 640 :: 		
0x04EE	0xBF08    IT	EQ
;__Lib_Math.c, 641 :: 		
0x04F0	0x42AA    CMPEQ	R2, R5
;__Lib_Math.c, 642 :: 		
0x04F2	0xBF3E    ITTT	CC
;__Lib_Math.c, 643 :: 		
0x04F4	0x0A2D    LSRCC	R5, R5, #8
;__Lib_Math.c, 644 :: 		
0x04F6	0xEA456504  ORRCC	R5, R5, R4, LSL #24
;__Lib_Math.c, 645 :: 		
0x04FA	0x0A24    LSRCC	R4, R4, #8
;__Lib_Math.c, 646 :: 		
0x04FC	0xD389    BCC	__me_divll
;__Lib_Math.c, 650 :: 		
0x04FE	0x4673    MOV	R3, LR
;__Lib_Math.c, 651 :: 		
0x0500	0x464A    MOV	R2, R9
;__Lib_Math.c, 654 :: 		
__me_label_return:
;__Lib_Math.c, 655 :: 		
0x0502	0x461E    MOV	R6, R3
;__Lib_Math.c, 656 :: 		
0x0504	0x4617    MOV	R7, R2
;__Lib_Math.c, 657 :: 		
0x0506	0x460B    MOV	R3, R1
;__Lib_Math.c, 658 :: 		
0x0508	0x4602    MOV	R2, R0
;__Lib_Math.c, 659 :: 		
0x050A	0x4631    MOV	R1, R6
;__Lib_Math.c, 660 :: 		
0x050C	0x4638    MOV	R0, R7
;__Lib_Math.c, 663 :: 		
__me_lab_end:
;__Lib_Math.c, 664 :: 		
0x050E	0xE8BD41F0  POP	(R4, R5, R6, R7, R8, R14)
;__Lib_Math.c, 683 :: 		
L_end__Div_64x64_U:
0x0512	0xB001    ADD	SP, SP, #4
0x0514	0x4770    BX	LR
; end of __Div_64x64_U
_vRF4463MainApplyChanges:
;DriverRF4463PROMain.c, 121 :: 		void vRF4463MainApplyChanges () {
0x21C4	0xB081    SUB	SP, SP, #4
0x21C6	0xF8CDE000  STR	LR, [SP, #0]
;DriverRF4463PROMain.c, 122 :: 		VRF4463SDNReset();
0x21CA	0xF002F86D  BL	_VRF4463SDNReset+0
;DriverRF4463PROMain.c, 123 :: 		vRF4463Init();
0x21CE	0xF002F8C3  BL	_vRF4463Init+0
;DriverRF4463PROMain.c, 124 :: 		vRF4463ClearInterrupts();
0x21D2	0xF002FE83  BL	_vRF4463ClearInterrupts+0
;DriverRF4463PROMain.c, 125 :: 		}
L_end_vRF4463MainApplyChanges:
0x21D6	0xF8DDE000  LDR	LR, [SP, #0]
0x21DA	0xB001    ADD	SP, SP, #4
0x21DC	0x4770    BX	LR
; end of _vRF4463MainApplyChanges
_StrToInt:
;__Lib_Conversions.c, 975 :: 		
; byte_in start address is: 0 (R0)
0x20A4	0xB085    SUB	SP, SP, #20
0x20A6	0xF8CDE000  STR	LR, [SP, #0]
0x20AA	0x4605    MOV	R5, R0
; byte_in end address is: 0 (R0)
; byte_in start address is: 20 (R5)
;__Lib_Conversions.c, 977 :: 		
0x20AC	0x2100    MOVS	R1, #0
0x20AE	0xF88D100C  STRB	R1, [SP, #12]
0x20B2	0x2100    MOVS	R1, #0
0x20B4	0xF88D100D  STRB	R1, [SP, #13]
0x20B8	0x2100    MOVS	R1, #0
0x20BA	0xF88D100E  STRB	R1, [SP, #14]
0x20BE	0xF88D100F  STRB	R1, [SP, #15]
0x20C2	0xF88D1010  STRB	R1, [SP, #16]
0x20C6	0xF88D1011  STRB	R1, [SP, #17]
0x20CA	0xF88D1012  STRB	R1, [SP, #18]
;__Lib_Conversions.c, 978 :: 		
;__Lib_Conversions.c, 979 :: 		
; result start address is: 12 (R3)
0x20CE	0xF2400300  MOVW	R3, #0
0x20D2	0xB21B    SXTH	R3, R3
;__Lib_Conversions.c, 980 :: 		
;__Lib_Conversions.c, 982 :: 		
0x20D4	0xF8AD3004  STRH	R3, [SP, #4]
0x20D8	0x4628    MOV	R0, R5
0x20DA	0xF7FEFAF9  BL	_strlen+0
0x20DE	0xF9BD3004  LDRSH	R3, [SP, #4]
; i1 start address is: 16 (R4)
0x20E2	0xB2C4    UXTB	R4, R0
;__Lib_Conversions.c, 983 :: 		
0x20E4	0xB2C1    UXTB	R1, R0
0x20E6	0x2906    CMP	R1, #6
0x20E8	0xF2008063  BHI	L_StrToInt193
;__Lib_Conversions.c, 985 :: 		
0x20EC	0xAA03    ADD	R2, SP, #12
0x20EE	0xF10D010D  ADD	R1, SP, #13
0x20F2	0xF88D4004  STRB	R4, [SP, #4]
0x20F6	0xF8AD3006  STRH	R3, [SP, #6]
0x20FA	0x9502    STR	R5, [SP, #8]
0x20FC	0x4628    MOV	R0, R5
0x20FE	0xF7FEFB8F  BL	__Lib_Conversions_Forward_Input+0
0x2102	0x9D02    LDR	R5, [SP, #8]
0x2104	0xF9BD3006  LDRSH	R3, [SP, #6]
0x2108	0xF89D4004  LDRB	R4, [SP, #4]
; multiplier start address is: 24 (R6)
0x210C	0x4606    MOV	R6, R0
;__Lib_Conversions.c, 987 :: 		
0x210E	0xF89D100C  LDRB	R1, [SP, #12]
0x2112	0x2901    CMP	R1, #1
0x2114	0xD84A    BHI	L_StrToInt194
;__Lib_Conversions.c, 989 :: 		
0x2116	0x7829    LDRB	R1, [R5, #0]
0x2118	0x292D    CMP	R1, #45
0x211A	0xD01B    BEQ	L_StrToInt195
; byte_in end address is: 20 (R5)
;__Lib_Conversions.c, 991 :: 		
; i start address is: 0 (R0)
0x211C	0x2000    MOVS	R0, #0
; i1 end address is: 16 (R4)
; multiplier end address is: 24 (R6)
; i end address is: 0 (R0)
; result end address is: 12 (R3)
0x211E	0xB2E2    UXTB	R2, R4
0x2120	0x4635    MOV	R5, R6
L_StrToInt196:
; i start address is: 0 (R0)
; multiplier start address is: 20 (R5)
; i1 start address is: 8 (R2)
; result start address is: 12 (R3)
0x2122	0x4290    CMP	R0, R2
0x2124	0xD20E    BCS	L_StrToInt197
;__Lib_Conversions.c, 993 :: 		
0x2126	0xF10D010D  ADD	R1, SP, #13
0x212A	0x1809    ADDS	R1, R1, R0
0x212C	0x7809    LDRB	R1, [R1, #0]
0x212E	0x3930    SUBS	R1, #48
0x2130	0xB209    SXTH	R1, R1
0x2132	0x4369    MULS	R1, R5, R1
0x2134	0x1859    ADDS	R1, R3, R1
0x2136	0xB20B    SXTH	R3, R1
;__Lib_Conversions.c, 994 :: 		
0x2138	0x210A    MOVS	R1, #10
0x213A	0xFBB5F5F1  UDIV	R5, R5, R1
;__Lib_Conversions.c, 991 :: 		
0x213E	0x1C40    ADDS	R0, R0, #1
0x2140	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 995 :: 		
; i1 end address is: 8 (R2)
; multiplier end address is: 20 (R5)
; i end address is: 0 (R0)
0x2142	0xE7EE    B	L_StrToInt196
L_StrToInt197:
;__Lib_Conversions.c, 996 :: 		
0x2144	0x491E    LDR	R1, [PC, #120]
0x2146	0x428B    CMP	R3, R1
0x2148	0xD102    BNE	L__StrToInt476
; result end address is: 12 (R3)
;__Lib_Conversions.c, 997 :: 		
; result start address is: 0 (R0)
0x214A	0x2000    MOVS	R0, #0
0x214C	0xB200    SXTH	R0, R0
; result end address is: 0 (R0)
0x214E	0xE000    B	L_StrToInt199
L__StrToInt476:
;__Lib_Conversions.c, 996 :: 		
0x2150	0xB218    SXTH	R0, R3
;__Lib_Conversions.c, 997 :: 		
L_StrToInt199:
;__Lib_Conversions.c, 998 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x2152	0xE02A    B	L_StrToInt200
L_StrToInt195:
;__Lib_Conversions.c, 999 :: 		
; result start address is: 12 (R3)
; multiplier start address is: 24 (R6)
; i1 start address is: 16 (R4)
; byte_in start address is: 20 (R5)
0x2154	0x462A    MOV	R2, R5
0x2156	0x212D    MOVS	R1, #45
0x2158	0x7029    STRB	R1, [R5, #0]
; byte_in end address is: 20 (R5)
0x215A	0x7811    LDRB	R1, [R2, #0]
0x215C	0xB311    CBZ	R1, L__StrToInt478
0x215E	0xF89D100C  LDRB	R1, [SP, #12]
0x2162	0x2901    CMP	R1, #1
0x2164	0xD120    BNE	L__StrToInt479
L__StrToInt473:
;__Lib_Conversions.c, 1001 :: 		
; i start address is: 8 (R2)
0x2166	0x2201    MOVS	R2, #1
; i1 end address is: 16 (R4)
; multiplier end address is: 24 (R6)
; result end address is: 12 (R3)
; i end address is: 8 (R2)
0x2168	0xB2E0    UXTB	R0, R4
0x216A	0x4634    MOV	R4, R6
L_StrToInt204:
; i start address is: 8 (R2)
; multiplier start address is: 16 (R4)
; i1 start address is: 0 (R0)
; result start address is: 12 (R3)
0x216C	0x4282    CMP	R2, R0
0x216E	0xD20E    BCS	L_StrToInt205
;__Lib_Conversions.c, 1003 :: 		
0x2170	0xF10D010D  ADD	R1, SP, #13
0x2174	0x1889    ADDS	R1, R1, R2
0x2176	0x7809    LDRB	R1, [R1, #0]
0x2178	0x3930    SUBS	R1, #48
0x217A	0xB209    SXTH	R1, R1
0x217C	0x4361    MULS	R1, R4, R1
0x217E	0x1859    ADDS	R1, R3, R1
0x2180	0xB20B    SXTH	R3, R1
;__Lib_Conversions.c, 1004 :: 		
0x2182	0x210A    MOVS	R1, #10
0x2184	0xFBB4F4F1  UDIV	R4, R4, R1
;__Lib_Conversions.c, 1001 :: 		
0x2188	0x1C52    ADDS	R2, R2, #1
0x218A	0xB2D2    UXTB	R2, R2
;__Lib_Conversions.c, 1005 :: 		
; i1 end address is: 0 (R0)
; multiplier end address is: 16 (R4)
; i end address is: 8 (R2)
0x218C	0xE7EE    B	L_StrToInt204
L_StrToInt205:
;__Lib_Conversions.c, 1006 :: 		
0x218E	0x425A    RSBS	R2, R3, #0
0x2190	0xB212    SXTH	R2, R2
; result end address is: 12 (R3)
; result start address is: 0 (R0)
0x2192	0xB210    SXTH	R0, R2
;__Lib_Conversions.c, 1007 :: 		
0x2194	0xF64771FF  MOVW	R1, #32767
0x2198	0x428A    CMP	R2, R1
0x219A	0xD102    BNE	L__StrToInt477
;__Lib_Conversions.c, 1008 :: 		
0x219C	0x2000    MOVS	R0, #0
0x219E	0xB200    SXTH	R0, R0
; result end address is: 0 (R0)
0x21A0	0xE7FF    B	L_StrToInt207
L__StrToInt477:
;__Lib_Conversions.c, 1007 :: 		
;__Lib_Conversions.c, 1008 :: 		
L_StrToInt207:
;__Lib_Conversions.c, 999 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x21A2	0xE000    B	L__StrToInt475
L__StrToInt478:
0x21A4	0xB218    SXTH	R0, R3
L__StrToInt475:
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x21A6	0xE000    B	L__StrToInt474
L__StrToInt479:
0x21A8	0xB218    SXTH	R0, R3
L__StrToInt474:
;__Lib_Conversions.c, 1009 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
L_StrToInt200:
;__Lib_Conversions.c, 1010 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x21AA	0xE001    B	L_StrToInt208
L_StrToInt194:
;__Lib_Conversions.c, 1011 :: 		
; result start address is: 0 (R0)
0x21AC	0x2000    MOVS	R0, #0
0x21AE	0xB200    SXTH	R0, R0
; result end address is: 0 (R0)
L_StrToInt208:
;__Lib_Conversions.c, 1012 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x21B0	0xE001    B	L_StrToInt209
L_StrToInt193:
;__Lib_Conversions.c, 1013 :: 		
; result start address is: 0 (R0)
0x21B2	0x2000    MOVS	R0, #0
0x21B4	0xB200    SXTH	R0, R0
; result end address is: 0 (R0)
L_StrToInt209:
;__Lib_Conversions.c, 1014 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
;__Lib_Conversions.c, 1015 :: 		
L_end_StrToInt:
0x21B6	0xF8DDE000  LDR	LR, [SP, #0]
0x21BA	0xB005    ADD	SP, SP, #20
0x21BC	0x4770    BX	LR
0x21BE	0xBF00    NOP
0x21C0	0x8000FFFF  	#-32768
; end of _StrToInt
_StrToLong:
;__Lib_Conversions.c, 1074 :: 		
; dWord_in start address is: 0 (R0)
0x1F88	0xB085    SUB	SP, SP, #20
0x1F8A	0xF8CDE000  STR	LR, [SP, #0]
0x1F8E	0x4604    MOV	R4, R0
; dWord_in end address is: 0 (R0)
; dWord_in start address is: 16 (R4)
;__Lib_Conversions.c, 1076 :: 		
0x1F90	0xF10D0B05  ADD	R11, SP, #5
0x1F94	0xF10B0A0B  ADD	R10, R11, #11
0x1F98	0xF8DFC09C  LDR	R12, [PC, #156]
0x1F9C	0xF002F8AC  BL	___CC2DW+0
;__Lib_Conversions.c, 1077 :: 		
;__Lib_Conversions.c, 1078 :: 		
0x1FA0	0xF04F0100  MOV	R1, #0
0x1FA4	0x9104    STR	R1, [SP, #16]
;__Lib_Conversions.c, 1079 :: 		
;__Lib_Conversions.c, 1081 :: 		
0x1FA6	0x4620    MOV	R0, R4
0x1FA8	0xF7FEFB92  BL	_strlen+0
0x1FAC	0xF88D0004  STRB	R0, [SP, #4]
;__Lib_Conversions.c, 1083 :: 		
0x1FB0	0xB2C1    UXTB	R1, R0
0x1FB2	0x290A    CMP	R1, #10
0x1FB4	0xD839    BHI	L_StrToLong217
;__Lib_Conversions.c, 1085 :: 		
0x1FB6	0xF10D0205  ADD	R2, SP, #5
0x1FBA	0xF10D0106  ADD	R1, SP, #6
0x1FBE	0x4620    MOV	R0, R4
; dWord_in end address is: 16 (R4)
0x1FC0	0xF7FEFC2E  BL	__Lib_Conversions_Forward_Input+0
; multiplier start address is: 16 (R4)
0x1FC4	0x4604    MOV	R4, R0
0x1FC6	0x460D    MOV	R5, R1
;__Lib_Conversions.c, 1087 :: 		
0x1FC8	0xF89D1005  LDRB	R1, [SP, #5]
0x1FCC	0xBB51    CBNZ	R1, L_StrToLong218
;__Lib_Conversions.c, 1089 :: 		
; i start address is: 44 (R11)
0x1FCE	0xF2400B00  MOVW	R11, #0
; multiplier end address is: 16 (R4)
; i end address is: 44 (R11)
0x1FD2	0xFA5FFA8B  UXTB	R10, R11
L_StrToLong219:
; i start address is: 40 (R10)
; multiplier start address is: 16 (R4)
0x1FD6	0xF89D1004  LDRB	R1, [SP, #4]
0x1FDA	0x458A    CMP	R10, R1
0x1FDC	0xD221    BCS	L_StrToLong220
;__Lib_Conversions.c, 1091 :: 		
0x1FDE	0xF10D0106  ADD	R1, SP, #6
0x1FE2	0xEB01010A  ADD	R1, R1, R10, LSL #0
0x1FE6	0x7809    LDRB	R1, [R1, #0]
0x1FE8	0x3930    SUBS	R1, #48
0x1FEA	0xB209    SXTH	R1, R1
0x1FEC	0xFBA12304  UMULL	R2, R3, R1, R4
0x1FF0	0xFB023304  MLA	R3, R2, R4, R3
0x1FF4	0xFB013305  MLA	R3, R1, R5, R3
0x1FF8	0x9904    LDR	R1, [SP, #16]
0x1FFA	0x1889    ADDS	R1, R1, R2
0x1FFC	0x415A    ADCS	R2, R3
0x1FFE	0x9104    STR	R1, [SP, #16]
;__Lib_Conversions.c, 1092 :: 		
0x2000	0x220A    MOVS	R2, #10
0x2002	0x2300    MOVS	R3, #0
0x2004	0x4620    MOV	R0, R4
0x2006	0x4629    MOV	R1, R5
0x2008	0xF7FEF988  BL	__Div_64x64_U+0
; multiplier end address is: 16 (R4)
; multiplier start address is: 8 (R2)
0x200C	0x4602    MOV	R2, R0
0x200E	0x460B    MOV	R3, R1
;__Lib_Conversions.c, 1089 :: 		
0x2010	0xF10A0101  ADD	R1, R10, #1
; i end address is: 40 (R10)
; i start address is: 44 (R11)
0x2014	0xFA5FFB81  UXTB	R11, R1
;__Lib_Conversions.c, 1093 :: 		
0x2018	0x4614    MOV	R4, R2
0x201A	0x461D    MOV	R5, R3
; multiplier end address is: 8 (R2)
; i end address is: 44 (R11)
0x201C	0xFA5FFA8B  UXTB	R10, R11
0x2020	0xE7D9    B	L_StrToLong219
L_StrToLong220:
;__Lib_Conversions.c, 1094 :: 		
0x2022	0xE001    B	L_StrToLong222
L_StrToLong218:
;__Lib_Conversions.c, 1095 :: 		
0x2024	0x2100    MOVS	R1, #0
0x2026	0x9104    STR	R1, [SP, #16]
L_StrToLong222:
;__Lib_Conversions.c, 1096 :: 		
0x2028	0xE001    B	L_StrToLong223
L_StrToLong217:
;__Lib_Conversions.c, 1097 :: 		
0x202A	0x2100    MOVS	R1, #0
0x202C	0x9104    STR	R1, [SP, #16]
L_StrToLong223:
;__Lib_Conversions.c, 1098 :: 		
0x202E	0x9804    LDR	R0, [SP, #16]
;__Lib_Conversions.c, 1099 :: 		
L_end_StrToLong:
0x2030	0xF8DDE000  LDR	LR, [SP, #0]
0x2034	0xB005    ADD	SP, SP, #20
0x2036	0x4770    BX	LR
0x2038	0x8A3B0000  	?ICSStrToLong_counter_L0+0
; end of _StrToLong
_ucRF4463ChecksumGenerator:
;driverrf4463pro.c, 388 :: 		char ucRF4463ChecksumGenerator ( unsigned char *ucBuffer, unsigned char ucBufferLenght ) {
0x1F40	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 389 :: 		unsigned short ucCounter = 0;
0x1F42	0x2000    MOVS	R0, #0
0x1F44	0xF88D0004  STRB	R0, [SP, #4]
0x1F48	0x2000    MOVS	R0, #0
0x1F4A	0xF88D0005  STRB	R0, [SP, #5]
;driverrf4463pro.c, 390 :: 		unsigned char ucChecksum = 0;
;driverrf4463pro.c, 392 :: 		for ( ucCounter = 0; ucCounter < ucBufferLenght ; ucCounter++ ) {
0x1F4E	0x2000    MOVS	R0, #0
0x1F50	0xF88D0004  STRB	R0, [SP, #4]
L_ucRF4463ChecksumGenerator83:
0x1F54	0xF89D100C  LDRB	R1, [SP, #12]
0x1F58	0xF89D0004  LDRB	R0, [SP, #4]
0x1F5C	0x4288    CMP	R0, R1
0x1F5E	0xD20F    BCS	L_ucRF4463ChecksumGenerator84
;driverrf4463pro.c, 393 :: 		ucChecksum += ucBuffer[ ucCounter ];
0x1F60	0xF89D1004  LDRB	R1, [SP, #4]
0x1F64	0x9802    LDR	R0, [SP, #8]
0x1F66	0x1840    ADDS	R0, R0, R1
0x1F68	0x7801    LDRB	R1, [R0, #0]
0x1F6A	0xF89D0005  LDRB	R0, [SP, #5]
0x1F6E	0x1840    ADDS	R0, R0, R1
0x1F70	0xF88D0005  STRB	R0, [SP, #5]
;driverrf4463pro.c, 392 :: 		for ( ucCounter = 0; ucCounter < ucBufferLenght ; ucCounter++ ) {
0x1F74	0xF89D0004  LDRB	R0, [SP, #4]
0x1F78	0x1C40    ADDS	R0, R0, #1
0x1F7A	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 394 :: 		}
0x1F7E	0xE7E9    B	L_ucRF4463ChecksumGenerator83
L_ucRF4463ChecksumGenerator84:
;driverrf4463pro.c, 396 :: 		return ucChecksum;
0x1F80	0xF89D0005  LDRB	R0, [SP, #5]
;driverrf4463pro.c, 397 :: 		}
L_end_ucRF4463ChecksumGenerator:
0x1F84	0xB002    ADD	SP, SP, #8
0x1F86	0x4770    BX	LR
; end of _ucRF4463ChecksumGenerator
_sprintf:
;__Lib_Sprintf.c, 727 :: 		
0x2070	0xB083    SUB	SP, SP, #12
0x2072	0xF8CDE000  STR	LR, [SP, #0]
; wh start address is: 8 (R2)
0x2076	0x9A03    LDR	R2, [SP, #12]
0x2078	0x9804    LDR	R0, [SP, #16]
0x207A	0x9004    STR	R0, [SP, #16]
;__Lib_Sprintf.c, 732 :: 		
0x207C	0xA902    ADD	R1, SP, #8
0x207E	0xA804    ADD	R0, SP, #16
0x2080	0x1D00    ADDS	R0, R0, #4
0x2082	0x6008    STR	R0, [R1, #0]
;__Lib_Sprintf.c, 733 :: 		
0x2084	0x9201    STR	R2, [SP, #4]
0x2086	0x4610    MOV	R0, R2
0x2088	0x460A    MOV	R2, R1
0x208A	0x9904    LDR	R1, [SP, #16]
0x208C	0xF7FEFC04  BL	__Lib_Sprintf__doprntf+0
0x2090	0x9A01    LDR	R2, [SP, #4]
; cnt start address is: 12 (R3)
0x2092	0xB203    SXTH	R3, R0
;__Lib_Sprintf.c, 734 :: 		
0x2094	0x1811    ADDS	R1, R2, R0
; wh end address is: 8 (R2)
0x2096	0x2000    MOVS	R0, #0
0x2098	0x7008    STRB	R0, [R1, #0]
;__Lib_Sprintf.c, 735 :: 		
0x209A	0xB218    SXTH	R0, R3
; cnt end address is: 12 (R3)
;__Lib_Sprintf.c, 736 :: 		
L_end_sprintf:
0x209C	0xF8DDE000  LDR	LR, [SP, #0]
0x20A0	0xB003    ADD	SP, SP, #12
0x20A2	0x4770    BX	LR
; end of _sprintf
__Lib_Sprintf__doprntf:
;__Lib_Sprintf.c, 187 :: 		
; ap start address is: 8 (R2)
; f start address is: 4 (R1)
; pb start address is: 0 (R0)
0x0898	0xB08B    SUB	SP, SP, #44
0x089A	0xF8CDE000  STR	LR, [SP, #0]
; ap end address is: 8 (R2)
; f end address is: 4 (R1)
; pb end address is: 0 (R0)
; pb start address is: 0 (R0)
; f start address is: 4 (R1)
; ap start address is: 8 (R2)
;__Lib_Sprintf.c, 193 :: 		
; ccnt start address is: 24 (R6)
0x089E	0xF2400600  MOVW	R6, #0
0x08A2	0xB236    SXTH	R6, R6
; pb end address is: 0 (R0)
; ap end address is: 8 (R2)
; ccnt end address is: 24 (R6)
; f end address is: 4 (R1)
0x08A4	0x4615    MOV	R5, R2
0x08A6	0x4602    MOV	R2, R0
0x08A8	0x4608    MOV	R0, R1
;__Lib_Sprintf.c, 223 :: 		
L___Lib_Sprintf__doprntf10:
; f start address is: 28 (R7)
; ccnt start address is: 24 (R6)
; ap start address is: 20 (R5)
; ap start address is: 20 (R5)
; ap end address is: 20 (R5)
; f start address is: 0 (R0)
; pb start address is: 8 (R2)
0x08AA	0x4604    MOV	R4, R0
0x08AC	0x1C47    ADDS	R7, R0, #1
; f end address is: 0 (R0)
; f start address is: 28 (R7)
; f end address is: 28 (R7)
0x08AE	0x7823    LDRB	R3, [R4, #0]
0x08B0	0xF88D3014  STRB	R3, [SP, #20]
0x08B4	0x2B00    CMP	R3, #0
0x08B6	0xF00181E9  BEQ	L___Lib_Sprintf__doprntf11
; ap end address is: 20 (R5)
; f end address is: 28 (R7)
;__Lib_Sprintf.c, 224 :: 		
; f start address is: 28 (R7)
; ap start address is: 20 (R5)
0x08BA	0xF89D3014  LDRB	R3, [SP, #20]
0x08BE	0x2B25    CMP	R3, #37
0x08C0	0xD007    BEQ	L___Lib_Sprintf__doprntf12
;__Lib_Sprintf.c, 225 :: 		
0x08C2	0xF89D3014  LDRB	R3, [SP, #20]
0x08C6	0x7013    STRB	R3, [R2, #0]
0x08C8	0x1C52    ADDS	R2, R2, #1
0x08CA	0x1C76    ADDS	R6, R6, #1
0x08CC	0xB236    SXTH	R6, R6
;__Lib_Sprintf.c, 226 :: 		
0x08CE	0x4638    MOV	R0, R7
0x08D0	0xE7EB    B	L___Lib_Sprintf__doprntf10
;__Lib_Sprintf.c, 227 :: 		
L___Lib_Sprintf__doprntf12:
;__Lib_Sprintf.c, 228 :: 		
; width start address is: 16 (R4)
0x08D2	0x2400    MOVS	R4, #0
0x08D4	0xB224    SXTH	R4, R4
;__Lib_Sprintf.c, 229 :: 		
; flag start address is: 0 (R0)
0x08D6	0x2000    MOVS	R0, #0
; f end address is: 28 (R7)
; flag end address is: 0 (R0)
;__Lib_Sprintf.c, 230 :: 		
L___Lib_Sprintf__doprntf13:
;__Lib_Sprintf.c, 231 :: 		
; flag start address is: 0 (R0)
; width start address is: 16 (R4)
; width end address is: 16 (R4)
; f start address is: 28 (R7)
; pb start address is: 8 (R2)
; pb end address is: 8 (R2)
; ap start address is: 20 (R5)
; ap end address is: 20 (R5)
; ccnt start address is: 24 (R6)
; ccnt end address is: 24 (R6)
0x08D8	0xE01E    B	L___Lib_Sprintf__doprntf16
; width end address is: 16 (R4)
; ap end address is: 20 (R5)
; pb end address is: 8 (R2)
; ccnt end address is: 24 (R6)
;__Lib_Sprintf.c, 232 :: 		
L___Lib_Sprintf__doprntf18:
;__Lib_Sprintf.c, 233 :: 		
; ccnt start address is: 24 (R6)
; pb start address is: 8 (R2)
; ap start address is: 20 (R5)
; width start address is: 16 (R4)
0x08DA	0xF0400008  ORR	R0, R0, #8
0x08DE	0xB280    UXTH	R0, R0
;__Lib_Sprintf.c, 234 :: 		
0x08E0	0x1C7B    ADDS	R3, R7, #1
; f end address is: 28 (R7)
; f start address is: 4 (R1)
0x08E2	0x4619    MOV	R1, R3
;__Lib_Sprintf.c, 235 :: 		
; f end address is: 4 (R1)
0x08E4	0x460F    MOV	R7, R1
0x08E6	0xE027    B	L___Lib_Sprintf__doprntf15
;__Lib_Sprintf.c, 237 :: 		
L___Lib_Sprintf__doprntf19:
;__Lib_Sprintf.c, 238 :: 		
; f start address is: 28 (R7)
0x08E8	0xF0400001  ORR	R0, R0, #1
0x08EC	0xB280    UXTH	R0, R0
;__Lib_Sprintf.c, 239 :: 		
0x08EE	0x1C79    ADDS	R1, R7, #1
; f end address is: 28 (R7)
; f start address is: 4 (R1)
;__Lib_Sprintf.c, 240 :: 		
; f end address is: 4 (R1)
0x08F0	0x460F    MOV	R7, R1
0x08F2	0xE021    B	L___Lib_Sprintf__doprntf15
;__Lib_Sprintf.c, 242 :: 		
L___Lib_Sprintf__doprntf20:
;__Lib_Sprintf.c, 243 :: 		
; f start address is: 28 (R7)
0x08F4	0xF0400002  ORR	R0, R0, #2
0x08F8	0xB280    UXTH	R0, R0
;__Lib_Sprintf.c, 244 :: 		
0x08FA	0x1C79    ADDS	R1, R7, #1
; f end address is: 28 (R7)
; f start address is: 4 (R1)
;__Lib_Sprintf.c, 245 :: 		
; f end address is: 4 (R1)
0x08FC	0x460F    MOV	R7, R1
0x08FE	0xE01B    B	L___Lib_Sprintf__doprntf15
;__Lib_Sprintf.c, 247 :: 		
L___Lib_Sprintf__doprntf21:
;__Lib_Sprintf.c, 248 :: 		
; f start address is: 28 (R7)
0x0900	0xF4406000  ORR	R0, R0, #2048
0x0904	0xB280    UXTH	R0, R0
;__Lib_Sprintf.c, 249 :: 		
0x0906	0x1C79    ADDS	R1, R7, #1
; f end address is: 28 (R7)
; f start address is: 4 (R1)
;__Lib_Sprintf.c, 250 :: 		
; f end address is: 4 (R1)
0x0908	0x460F    MOV	R7, R1
0x090A	0xE015    B	L___Lib_Sprintf__doprntf15
;__Lib_Sprintf.c, 252 :: 		
L___Lib_Sprintf__doprntf22:
;__Lib_Sprintf.c, 253 :: 		
; f start address is: 28 (R7)
0x090C	0xF0400004  ORR	R0, R0, #4
0x0910	0xB280    UXTH	R0, R0
;__Lib_Sprintf.c, 254 :: 		
0x0912	0x1C79    ADDS	R1, R7, #1
; f end address is: 28 (R7)
; f start address is: 4 (R1)
;__Lib_Sprintf.c, 255 :: 		
; f end address is: 4 (R1)
0x0914	0x460F    MOV	R7, R1
0x0916	0xE00F    B	L___Lib_Sprintf__doprntf15
;__Lib_Sprintf.c, 256 :: 		
L___Lib_Sprintf__doprntf16:
; f start address is: 28 (R7)
0x0918	0x783B    LDRB	R3, [R7, #0]
0x091A	0x2B2D    CMP	R3, #45
0x091C	0xD0DD    BEQ	L___Lib_Sprintf__doprntf18
0x091E	0x783B    LDRB	R3, [R7, #0]
0x0920	0x2B20    CMP	R3, #32
0x0922	0xD0E1    BEQ	L___Lib_Sprintf__doprntf19
0x0924	0x783B    LDRB	R3, [R7, #0]
0x0926	0x2B2B    CMP	R3, #43
0x0928	0xD0E4    BEQ	L___Lib_Sprintf__doprntf20
0x092A	0x783B    LDRB	R3, [R7, #0]
0x092C	0x2B23    CMP	R3, #35
0x092E	0xD0E7    BEQ	L___Lib_Sprintf__doprntf21
0x0930	0x783B    LDRB	R3, [R7, #0]
0x0932	0x2B30    CMP	R3, #48
0x0934	0xD0EA    BEQ	L___Lib_Sprintf__doprntf22
;__Lib_Sprintf.c, 257 :: 		
0x0936	0xE000    B	L___Lib_Sprintf__doprntf14
; f end address is: 28 (R7)
; flag end address is: 0 (R0)
;__Lib_Sprintf.c, 258 :: 		
L___Lib_Sprintf__doprntf15:
; f start address is: 28 (R7)
; flag start address is: 0 (R0)
0x0938	0xE7CE    B	L___Lib_Sprintf__doprntf13
L___Lib_Sprintf__doprntf14:
;__Lib_Sprintf.c, 259 :: 		
0x093A	0xF0000302  AND	R3, R0, #2
0x093E	0xB29B    UXTH	R3, R3
0x0940	0xB133    CBZ	R3, L___Lib_Sprintf__doprntf354
;__Lib_Sprintf.c, 260 :: 		
0x0942	0xF64F73FE  MOVW	R3, #65534
0x0946	0x4018    ANDS	R0, R3
0x0948	0xB280    UXTH	R0, R0
; flag end address is: 0 (R0)
0x094A	0xFA1FF880  UXTH	R8, R0
0x094E	0xE001    B	L___Lib_Sprintf__doprntf23
L___Lib_Sprintf__doprntf354:
;__Lib_Sprintf.c, 259 :: 		
0x0950	0xFA1FF880  UXTH	R8, R0
;__Lib_Sprintf.c, 260 :: 		
L___Lib_Sprintf__doprntf23:
;__Lib_Sprintf.c, 261 :: 		
; flag start address is: 32 (R8)
0x0954	0xF0080308  AND	R3, R8, #8
0x0958	0xB29B    UXTH	R3, R3
0x095A	0xB133    CBZ	R3, L___Lib_Sprintf__doprntf355
;__Lib_Sprintf.c, 262 :: 		
0x095C	0xF64F73FB  MOVW	R3, #65531
0x0960	0xEA080803  AND	R8, R8, R3, LSL #0
0x0964	0xFA1FF888  UXTH	R8, R8
; flag end address is: 32 (R8)
0x0968	0xE7FF    B	L___Lib_Sprintf__doprntf24
L___Lib_Sprintf__doprntf355:
;__Lib_Sprintf.c, 261 :: 		
;__Lib_Sprintf.c, 262 :: 		
L___Lib_Sprintf__doprntf24:
;__Lib_Sprintf.c, 263 :: 		
; flag start address is: 32 (R8)
0x096A	0x783B    LDRB	R3, [R7, #0]
0x096C	0xB2D8    UXTB	R0, R3
0x096E	0xF7FFFC0B  BL	_isdigit+0
0x0972	0xB328    CBZ	R0, L___Lib_Sprintf__doprntf25
; width end address is: 16 (R4)
;__Lib_Sprintf.c, 264 :: 		
; width start address is: 0 (R0)
0x0974	0x2000    MOVS	R0, #0
0x0976	0xB200    SXTH	R0, R0
; width end address is: 0 (R0)
; f end address is: 28 (R7)
0x0978	0x4639    MOV	R1, R7
;__Lib_Sprintf.c, 265 :: 		
0x097A	0xE001    B	L___Lib_Sprintf__doprntf26
L___Lib_Sprintf__doprntf356:
;__Lib_Sprintf.c, 267 :: 		
0x097C	0xB238    SXTH	R0, R7
0x097E	0x4649    MOV	R1, R9
;__Lib_Sprintf.c, 265 :: 		
L___Lib_Sprintf__doprntf26:
;__Lib_Sprintf.c, 266 :: 		
; width start address is: 28 (R7)
; width start address is: 0 (R0)
; f start address is: 36 (R9)
; flag start address is: 32 (R8)
; flag end address is: 32 (R8)
; ccnt start address is: 24 (R6)
; ccnt end address is: 24 (R6)
; ap start address is: 20 (R5)
; ap end address is: 20 (R5)
; pb start address is: 8 (R2)
; pb end address is: 8 (R2)
; f start address is: 4 (R1)
0x0980	0x230A    MOVS	R3, #10
0x0982	0xB21B    SXTH	R3, R3
0x0984	0xFB00F703  MUL	R7, R0, R3
0x0988	0xB23F    SXTH	R7, R7
; width end address is: 0 (R0)
0x098A	0x780B    LDRB	R3, [R1, #0]
0x098C	0x18FF    ADDS	R7, R7, R3
0x098E	0xB23F    SXTH	R7, R7
0x0990	0x3F30    SUBS	R7, #48
0x0992	0xB23F    SXTH	R7, R7
; width start address is: 28 (R7)
; width end address is: 28 (R7)
0x0994	0x1C4B    ADDS	R3, R1, #1
; f end address is: 4 (R1)
; f start address is: 36 (R9)
0x0996	0x4699    MOV	R9, R3
; f end address is: 36 (R9)
;__Lib_Sprintf.c, 267 :: 		
0x0998	0x781B    LDRB	R3, [R3, #0]
0x099A	0xB2D8    UXTB	R0, R3
0x099C	0xF7FFFBF4  BL	_isdigit+0
0x09A0	0x2800    CMP	R0, #0
0x09A2	0xD1EB    BNE	L___Lib_Sprintf__doprntf356
; f end address is: 36 (R9)
; width end address is: 28 (R7)
; flag end address is: 32 (R8)
; ap end address is: 20 (R5)
; pb end address is: 8 (R2)
; ccnt end address is: 24 (R6)
;__Lib_Sprintf.c, 268 :: 		
; ccnt start address is: 24 (R6)
; pb start address is: 8 (R2)
; ap start address is: 20 (R5)
; flag start address is: 32 (R8)
; width start address is: 28 (R7)
; f start address is: 36 (R9)
0x09A4	0xF8AD6004  STRH	R6, [SP, #4]
; f end address is: 36 (R9)
; width end address is: 28 (R7)
0x09A8	0xF8AD7006  STRH	R7, [SP, #6]
0x09AC	0x4617    MOV	R7, R2
0x09AE	0x462E    MOV	R6, R5
0x09B0	0xFA1FF088  UXTH	R0, R8
0x09B4	0x4649    MOV	R1, R9
0x09B6	0xF9BD2006  LDRSH	R2, [SP, #6]
0x09BA	0xF9BD5004  LDRSH	R5, [SP, #4]
0x09BE	0xE014    B	L___Lib_Sprintf__doprntf29
L___Lib_Sprintf__doprntf25:
;__Lib_Sprintf.c, 270 :: 		
; f start address is: 28 (R7)
; width start address is: 16 (R4)
0x09C0	0x783B    LDRB	R3, [R7, #0]
0x09C2	0x2B2A    CMP	R3, #42
0x09C4	0xD106    BNE	L___Lib_Sprintf__doprntf357
; width end address is: 16 (R4)
;__Lib_Sprintf.c, 271 :: 		
0x09C6	0x682C    LDR	R4, [R5, #0]
0x09C8	0x1D23    ADDS	R3, R4, #4
0x09CA	0x602B    STR	R3, [R5, #0]
0x09CC	0xF9B40000  LDRSH	R0, [R4, #0]
; width start address is: 0 (R0)
;__Lib_Sprintf.c, 272 :: 		
0x09D0	0x1C79    ADDS	R1, R7, #1
; f end address is: 28 (R7)
; f start address is: 4 (R1)
; width end address is: 0 (R0)
; f end address is: 4 (R1)
;__Lib_Sprintf.c, 273 :: 		
0x09D2	0xE001    B	L___Lib_Sprintf__doprntf30
L___Lib_Sprintf__doprntf357:
;__Lib_Sprintf.c, 270 :: 		
0x09D4	0x4639    MOV	R1, R7
0x09D6	0xB220    SXTH	R0, R4
;__Lib_Sprintf.c, 273 :: 		
L___Lib_Sprintf__doprntf30:
; f start address is: 4 (R1)
; width start address is: 0 (R0)
0x09D8	0xF8AD6004  STRH	R6, [SP, #4]
; width end address is: 0 (R0)
; flag end address is: 32 (R8)
; ap end address is: 20 (R5)
; pb end address is: 8 (R2)
; ccnt end address is: 24 (R6)
; f end address is: 4 (R1)
0x09DC	0x4617    MOV	R7, R2
0x09DE	0xB202    SXTH	R2, R0
0x09E0	0xFA1FF088  UXTH	R0, R8
0x09E4	0x462E    MOV	R6, R5
0x09E6	0xF9BD5004  LDRSH	R5, [SP, #4]
L___Lib_Sprintf__doprntf29:
;__Lib_Sprintf.c, 274 :: 		
; width start address is: 8 (R2)
; f start address is: 4 (R1)
; flag start address is: 0 (R0)
; ccnt start address is: 20 (R5)
; ap start address is: 24 (R6)
; pb start address is: 28 (R7)
0x09EA	0x780B    LDRB	R3, [R1, #0]
0x09EC	0x2B2E    CMP	R3, #46
0x09EE	0xD146    BNE	L___Lib_Sprintf__doprntf31
;__Lib_Sprintf.c, 275 :: 		
0x09F0	0x1C4B    ADDS	R3, R1, #1
; f end address is: 4 (R1)
; f start address is: 32 (R8)
0x09F2	0x4698    MOV	R8, R3
0x09F4	0x781B    LDRB	R3, [R3, #0]
0x09F6	0x2B2A    CMP	R3, #42
0x09F8	0xD110    BNE	L___Lib_Sprintf__doprntf32
;__Lib_Sprintf.c, 276 :: 		
0x09FA	0x6834    LDR	R4, [R6, #0]
0x09FC	0x1D23    ADDS	R3, R4, #4
0x09FE	0x6033    STR	R3, [R6, #0]
0x0A00	0xF9B41000  LDRSH	R1, [R4, #0]
; prec start address is: 4 (R1)
;__Lib_Sprintf.c, 277 :: 		
0x0A04	0xF1080301  ADD	R3, R8, #1
; f end address is: 32 (R8)
; f start address is: 12 (R3)
;__Lib_Sprintf.c, 278 :: 		
0x0A08	0xF8AD2004  STRH	R2, [SP, #4]
; prec end address is: 4 (R1)
; f end address is: 12 (R3)
0x0A0C	0xB22A    SXTH	R2, R5
0x0A0E	0x461D    MOV	R5, R3
0x0A10	0x4633    MOV	R3, R6
0x0A12	0xB20E    SXTH	R6, R1
0x0A14	0x463C    MOV	R4, R7
0x0A16	0xF9BD1004  LDRSH	R1, [SP, #4]
0x0A1A	0xE027    B	L___Lib_Sprintf__doprntf33
L___Lib_Sprintf__doprntf32:
;__Lib_Sprintf.c, 279 :: 		
; prec start address is: 36 (R9)
; f start address is: 32 (R8)
0x0A1C	0xF2400900  MOVW	R9, #0
0x0A20	0xFA0FF989  SXTH	R9, R9
; f end address is: 32 (R8)
; width end address is: 8 (R2)
; ap end address is: 24 (R6)
; prec end address is: 36 (R9)
; pb end address is: 28 (R7)
; ccnt end address is: 20 (R5)
; flag end address is: 0 (R0)
0x0A24	0xFA1FFA80  UXTH	R10, R0
;__Lib_Sprintf.c, 280 :: 		
L___Lib_Sprintf__doprntf34:
; prec start address is: 36 (R9)
; f start address is: 32 (R8)
; pb start address is: 28 (R7)
; ap start address is: 24 (R6)
; ccnt start address is: 20 (R5)
; flag start address is: 40 (R10)
; width start address is: 8 (R2)
0x0A28	0xF8983000  LDRB	R3, [R8, #0]
0x0A2C	0xB2D8    UXTB	R0, R3
0x0A2E	0xF7FFFBAB  BL	_isdigit+0
0x0A32	0xB190    CBZ	R0, L___Lib_Sprintf__doprntf35
;__Lib_Sprintf.c, 281 :: 		
0x0A34	0x230A    MOVS	R3, #10
0x0A36	0xB21B    SXTH	R3, R3
0x0A38	0xFB03F909  MUL	R9, R3, R9
0x0A3C	0xFA0FF989  SXTH	R9, R9
; prec end address is: 36 (R9)
0x0A40	0xF8983000  LDRB	R3, [R8, #0]
0x0A44	0xEB090903  ADD	R9, R9, R3, LSL #0
0x0A48	0xFA0FF989  SXTH	R9, R9
0x0A4C	0xF1A90930  SUB	R9, R9, #48
0x0A50	0xFA0FF989  SXTH	R9, R9
; prec start address is: 36 (R9)
0x0A54	0xF1080801  ADD	R8, R8, #1
0x0A58	0xE7E6    B	L___Lib_Sprintf__doprntf34
L___Lib_Sprintf__doprntf35:
;__Lib_Sprintf.c, 282 :: 		
0x0A5A	0x4633    MOV	R3, R6
; f end address is: 32 (R8)
; width end address is: 8 (R2)
; ap end address is: 24 (R6)
; prec end address is: 36 (R9)
; pb end address is: 28 (R7)
; ccnt end address is: 20 (R5)
0x0A5C	0xFA0FF689  SXTH	R6, R9
0x0A60	0xB211    SXTH	R1, R2
0x0A62	0xB22A    SXTH	R2, R5
0x0A64	0x4645    MOV	R5, R8
0x0A66	0x463C    MOV	R4, R7
0x0A68	0xFA1FF08A  UXTH	R0, R10
L___Lib_Sprintf__doprntf33:
; flag end address is: 40 (R10)
; width start address is: 4 (R1)
; flag start address is: 0 (R0)
; ccnt start address is: 8 (R2)
; ap start address is: 12 (R3)
; pb start address is: 16 (R4)
; f start address is: 20 (R5)
; prec start address is: 24 (R6)
0x0A6C	0x9501    STR	R5, [SP, #4]
; ap end address is: 12 (R3)
; prec end address is: 24 (R6)
; width end address is: 4 (R1)
; ccnt end address is: 8 (R2)
; pb end address is: 16 (R4)
; f end address is: 20 (R5)
0x0A6E	0xB285    UXTH	R5, R0
0x0A70	0xB230    SXTH	R0, R6
0x0A72	0xB20E    SXTH	R6, R1
0x0A74	0xB217    SXTH	R7, R2
0x0A76	0x4698    MOV	R8, R3
0x0A78	0x46A1    MOV	R9, R4
0x0A7A	0x9901    LDR	R1, [SP, #4]
0x0A7C	0xE00A    B	L___Lib_Sprintf__doprntf36
L___Lib_Sprintf__doprntf31:
;__Lib_Sprintf.c, 284 :: 		
; f start address is: 4 (R1)
; ccnt start address is: 20 (R5)
; pb start address is: 28 (R7)
; prec start address is: 16 (R4)
; ap start address is: 24 (R6)
; width start address is: 8 (R2)
0x0A7E	0x2400    MOVS	R4, #0
0x0A80	0xB224    SXTH	R4, R4
;__Lib_Sprintf.c, 286 :: 		
0x0A82	0xF4405080  ORR	R0, R0, #4096
0x0A86	0xB280    UXTH	R0, R0
; width end address is: 8 (R2)
; ap end address is: 24 (R6)
; prec end address is: 16 (R4)
; pb end address is: 28 (R7)
; ccnt end address is: 20 (R5)
; f end address is: 4 (R1)
; flag end address is: 0 (R0)
0x0A88	0x46B0    MOV	R8, R6
0x0A8A	0xB216    SXTH	R6, R2
0x0A8C	0x46B9    MOV	R9, R7
0x0A8E	0xB22F    SXTH	R7, R5
0x0A90	0xB285    UXTH	R5, R0
0x0A92	0xB220    SXTH	R0, R4
;__Lib_Sprintf.c, 288 :: 		
L___Lib_Sprintf__doprntf36:
;__Lib_Sprintf.c, 290 :: 		
; flag start address is: 20 (R5)
; prec start address is: 0 (R0)
; pb start address is: 36 (R9)
; ap start address is: 32 (R8)
; ccnt start address is: 28 (R7)
; f start address is: 4 (R1)
; width start address is: 24 (R6)
; width start address is: 24 (R6)
; width end address is: 24 (R6)
; flag end address is: 20 (R5)
; f end address is: 4 (R1)
____doprntf_loop:
;__Lib_Sprintf.c, 292 :: 		
; width start address is: 24 (R6)
; f start address is: 40 (R10)
; width end address is: 24 (R6)
; f start address is: 4 (R1)
; ccnt start address is: 28 (R7)
; ccnt end address is: 28 (R7)
; ap start address is: 32 (R8)
; ap end address is: 32 (R8)
; pb start address is: 36 (R9)
; pb end address is: 36 (R9)
; prec start address is: 0 (R0)
; prec end address is: 0 (R0)
; flag start address is: 20 (R5)
0x0A94	0x460C    MOV	R4, R1
0x0A96	0xF1010A01  ADD	R10, R1, #1
; f end address is: 4 (R1)
; f start address is: 40 (R10)
; f end address is: 40 (R10)
0x0A9A	0x7823    LDRB	R3, [R4, #0]
0x0A9C	0xF88D3014  STRB	R3, [SP, #20]
0x0AA0	0xE0CB    B	L___Lib_Sprintf__doprntf37
; f end address is: 40 (R10)
; pb end address is: 36 (R9)
; ap end address is: 32 (R8)
; ccnt end address is: 28 (R7)
; width end address is: 24 (R6)
; prec end address is: 0 (R0)
; flag end address is: 20 (R5)
;__Lib_Sprintf.c, 293 :: 		
L___Lib_Sprintf__doprntf39:
;__Lib_Sprintf.c, 294 :: 		
; ccnt start address is: 28 (R7)
0x0AA2	0xB238    SXTH	R0, R7
; ccnt end address is: 28 (R7)
0x0AA4	0xF001B8F3  B	L_end__doprntf
;__Lib_Sprintf.c, 295 :: 		
L___Lib_Sprintf__doprntf40:
;__Lib_Sprintf.c, 296 :: 		
; flag start address is: 20 (R5)
; prec start address is: 0 (R0)
; width start address is: 24 (R6)
; ccnt start address is: 28 (R7)
; ap start address is: 32 (R8)
; pb start address is: 36 (R9)
; f start address is: 40 (R10)
L___Lib_Sprintf__doprntf41:
;__Lib_Sprintf.c, 298 :: 		
0x0AA8	0xF0450510  ORR	R5, R5, #16
0x0AAC	0xB2AD    UXTH	R5, R5
;__Lib_Sprintf.c, 299 :: 		
0x0AAE	0x4651    MOV	R1, R10
0x0AB0	0xE7F0    B	____doprntf_loop
;__Lib_Sprintf.c, 313 :: 		
L___Lib_Sprintf__doprntf42:
;__Lib_Sprintf.c, 314 :: 		
0x0AB2	0xF4456B80  ORR	R11, R5, #1024
0x0AB6	0xFA1FFB8B  UXTH	R11, R11
; flag end address is: 20 (R5)
; flag start address is: 44 (R11)
;__Lib_Sprintf.c, 315 :: 		
; flag end address is: 44 (R11)
0x0ABA	0xE10D    B	L___Lib_Sprintf__doprntf38
;__Lib_Sprintf.c, 317 :: 		
L___Lib_Sprintf__doprntf43:
;__Lib_Sprintf.c, 318 :: 		
; flag start address is: 20 (R5)
0x0ABC	0xF0450120  ORR	R1, R5, #32
0x0AC0	0xB289    UXTH	R1, R1
; flag end address is: 20 (R5)
; flag start address is: 4 (R1)
; flag end address is: 4 (R1)
;__Lib_Sprintf.c, 319 :: 		
0x0AC2	0xE000    B	L___Lib_Sprintf__doprntf44
L___Lib_Sprintf__doprntf358:
;__Lib_Sprintf.c, 380 :: 		
0x0AC4	0xB2A9    UXTH	R1, R5
;__Lib_Sprintf.c, 319 :: 		
L___Lib_Sprintf__doprntf44:
;__Lib_Sprintf.c, 320 :: 		
; flag start address is: 4 (R1)
0x0AC6	0xF4417B80  ORR	R11, R1, #256
0x0ACA	0xFA1FFB8B  UXTH	R11, R11
; flag end address is: 4 (R1)
; flag start address is: 44 (R11)
;__Lib_Sprintf.c, 321 :: 		
; flag end address is: 44 (R11)
0x0ACE	0xE103    B	L___Lib_Sprintf__doprntf38
;__Lib_Sprintf.c, 322 :: 		
L___Lib_Sprintf__doprntf45:
;__Lib_Sprintf.c, 323 :: 		
; flag start address is: 20 (R5)
0x0AD0	0xF4457B00  ORR	R11, R5, #512
0x0AD4	0xFA1FFB8B  UXTH	R11, R11
; flag end address is: 20 (R5)
; flag start address is: 44 (R11)
;__Lib_Sprintf.c, 324 :: 		
; flag end address is: 44 (R11)
0x0AD8	0xE0FE    B	L___Lib_Sprintf__doprntf38
;__Lib_Sprintf.c, 326 :: 		
L___Lib_Sprintf__doprntf46:
;__Lib_Sprintf.c, 327 :: 		
; flag start address is: 20 (R5)
0x0ADA	0xF0450B40  ORR	R11, R5, #64
0x0ADE	0xFA1FFB8B  UXTH	R11, R11
; flag end address is: 20 (R5)
; flag start address is: 44 (R11)
;__Lib_Sprintf.c, 328 :: 		
; flag end address is: 44 (R11)
0x0AE2	0xE0F9    B	L___Lib_Sprintf__doprntf38
;__Lib_Sprintf.c, 330 :: 		
L___Lib_Sprintf__doprntf47:
;__Lib_Sprintf.c, 331 :: 		
; flag start address is: 20 (R5)
L___Lib_Sprintf__doprntf48:
;__Lib_Sprintf.c, 332 :: 		
0x0AE4	0xFA1FFB85  UXTH	R11, R5
0x0AE8	0xE0F6    B	L___Lib_Sprintf__doprntf38
;__Lib_Sprintf.c, 334 :: 		
L___Lib_Sprintf__doprntf49:
;__Lib_Sprintf.c, 336 :: 		
L___Lib_Sprintf__doprntf50:
;__Lib_Sprintf.c, 337 :: 		
0x0AEA	0xF0450120  ORR	R1, R5, #32
0x0AEE	0xB289    UXTH	R1, R1
; flag end address is: 20 (R5)
; flag start address is: 4 (R1)
; flag end address is: 4 (R1)
;__Lib_Sprintf.c, 338 :: 		
0x0AF0	0xE000    B	L___Lib_Sprintf__doprntf51
L___Lib_Sprintf__doprntf359:
;__Lib_Sprintf.c, 380 :: 		
0x0AF2	0xB2A9    UXTH	R1, R5
;__Lib_Sprintf.c, 338 :: 		
L___Lib_Sprintf__doprntf51:
;__Lib_Sprintf.c, 339 :: 		
; flag start address is: 4 (R1)
0x0AF4	0xF0410B80  ORR	R11, R1, #128
0x0AF8	0xFA1FFB8B  UXTH	R11, R11
; flag end address is: 4 (R1)
; flag start address is: 44 (R11)
;__Lib_Sprintf.c, 340 :: 		
; flag end address is: 44 (R11)
0x0AFC	0xE0EC    B	L___Lib_Sprintf__doprntf38
;__Lib_Sprintf.c, 342 :: 		
L___Lib_Sprintf__doprntf52:
;__Lib_Sprintf.c, 343 :: 		
; flag start address is: 20 (R5)
0x0AFE	0xF8D84000  LDR	R4, [R8, #0]
0x0B02	0x1D23    ADDS	R3, R4, #4
0x0B04	0xF8C83000  STR	R3, [R8, #0]
0x0B08	0x6823    LDR	R3, [R4, #0]
0x0B0A	0x9308    STR	R3, [SP, #32]
;__Lib_Sprintf.c, 347 :: 		
0x0B0C	0xB90B    CBNZ	R3, L___Lib_Sprintf__doprntf53
;__Lib_Sprintf.c, 348 :: 		
0x0B0E	0x4BFC    LDR	R3, [PC, #1008]
0x0B10	0x9308    STR	R3, [SP, #32]
L___Lib_Sprintf__doprntf53:
;__Lib_Sprintf.c, 349 :: 		
0x0B12	0x2300    MOVS	R3, #0
0x0B14	0xF8AD3024  STRH	R3, [SP, #36]
; f end address is: 40 (R10)
; pb end address is: 36 (R9)
; ap end address is: 32 (R8)
; ccnt end address is: 28 (R7)
; width end address is: 24 (R6)
; prec end address is: 0 (R0)
; flag end address is: 20 (R5)
0x0B18	0xB2AA    UXTH	R2, R5
0x0B1A	0x464D    MOV	R5, R9
0x0B1C	0x4651    MOV	R1, R10
;__Lib_Sprintf.c, 350 :: 		
L___Lib_Sprintf__doprntf54:
; f start address is: 4 (R1)
; flag start address is: 8 (R2)
; prec start address is: 0 (R0)
; pb start address is: 20 (R5)
; ap start address is: 32 (R8)
; ccnt start address is: 28 (R7)
; width start address is: 24 (R6)
0x0B1E	0xF8BD4024  LDRH	R4, [SP, #36]
0x0B22	0x9B08    LDR	R3, [SP, #32]
0x0B24	0x191B    ADDS	R3, R3, R4
0x0B26	0x781B    LDRB	R3, [R3, #0]
0x0B28	0xB12B    CBZ	R3, L___Lib_Sprintf__doprntf55
;__Lib_Sprintf.c, 351 :: 		
0x0B2A	0xF8BD3024  LDRH	R3, [SP, #36]
0x0B2E	0x1C5B    ADDS	R3, R3, #1
0x0B30	0xF8AD3024  STRH	R3, [SP, #36]
0x0B34	0xE7F3    B	L___Lib_Sprintf__doprntf54
L___Lib_Sprintf__doprntf55:
;__Lib_Sprintf.c, 352 :: 		
0x0B36	0x462C    MOV	R4, R5
; ccnt end address is: 28 (R7)
; width end address is: 24 (R6)
; flag end address is: 8 (R2)
; pb end address is: 20 (R5)
; prec end address is: 0 (R0)
; f end address is: 4 (R1)
0x0B38	0x460D    MOV	R5, R1
0x0B3A	0xB239    SXTH	R1, R7
0x0B3C	0xB207    SXTH	R7, R0
0x0B3E	0xB290    UXTH	R0, R2
0x0B40	0x4642    MOV	R2, R8
____doprntf_dostring:
; ap end address is: 32 (R8)
;__Lib_Sprintf.c, 353 :: 		
; width start address is: 24 (R6)
; ccnt start address is: 4 (R1)
; ap start address is: 8 (R2)
; pb start address is: 16 (R4)
; prec start address is: 28 (R7)
; flag start address is: 0 (R0)
; f start address is: 20 (R5)
0x0B42	0xB12F    CBZ	R7, L___Lib_Sprintf__doprntf318
0x0B44	0xF8BD3024  LDRH	R3, [SP, #36]
0x0B48	0x429F    CMP	R7, R3
0x0B4A	0xD201    BCS	L___Lib_Sprintf__doprntf317
L___Lib_Sprintf__doprntf316:
;__Lib_Sprintf.c, 354 :: 		
0x0B4C	0xF8AD7024  STRH	R7, [SP, #36]
; prec end address is: 28 (R7)
;__Lib_Sprintf.c, 353 :: 		
L___Lib_Sprintf__doprntf318:
L___Lib_Sprintf__doprntf317:
;__Lib_Sprintf.c, 355 :: 		
0x0B50	0xF8BD3024  LDRH	R3, [SP, #36]
0x0B54	0x429E    CMP	R6, R3
0x0B56	0xD904    BLS	L___Lib_Sprintf__doprntf59
;__Lib_Sprintf.c, 356 :: 		
0x0B58	0xF8BD3024  LDRH	R3, [SP, #36]
0x0B5C	0x1AF6    SUB	R6, R6, R3
0x0B5E	0xB236    SXTH	R6, R6
; width end address is: 24 (R6)
0x0B60	0xE001    B	L___Lib_Sprintf__doprntf60
L___Lib_Sprintf__doprntf59:
;__Lib_Sprintf.c, 358 :: 		
; width start address is: 24 (R6)
0x0B62	0x2600    MOVS	R6, #0
0x0B64	0xB236    SXTH	R6, R6
; width end address is: 24 (R6)
L___Lib_Sprintf__doprntf60:
;__Lib_Sprintf.c, 359 :: 		
; width start address is: 24 (R6)
0x0B66	0xF0000308  AND	R3, R0, #8
0x0B6A	0xB29B    UXTH	R3, R3
0x0B6C	0xB9AB    CBNZ	R3, L___Lib_Sprintf__doprntf360
; width end address is: 24 (R6)
; pb end address is: 16 (R4)
; ccnt end address is: 4 (R1)
; f end address is: 20 (R5)
; ap end address is: 8 (R2)
; flag end address is: 0 (R0)
0x0B6E	0x4627    MOV	R7, R4
;__Lib_Sprintf.c, 360 :: 		
L___Lib_Sprintf__doprntf62:
; width start address is: 24 (R6)
; f start address is: 20 (R5)
; flag start address is: 0 (R0)
; pb start address is: 28 (R7)
; ap start address is: 8 (R2)
; ccnt start address is: 4 (R1)
0x0B70	0xB234    SXTH	R4, R6
0x0B72	0x1E76    SUBS	R6, R6, #1
0x0B74	0xB236    SXTH	R6, R6
0x0B76	0xB12C    CBZ	R4, L___Lib_Sprintf__doprntf63
;__Lib_Sprintf.c, 361 :: 		
0x0B78	0x2320    MOVS	R3, #32
0x0B7A	0x703B    STRB	R3, [R7, #0]
0x0B7C	0x1C7F    ADDS	R7, R7, #1
0x0B7E	0x1C49    ADDS	R1, R1, #1
0x0B80	0xB209    SXTH	R1, R1
0x0B82	0xE7F5    B	L___Lib_Sprintf__doprntf62
L___Lib_Sprintf__doprntf63:
0x0B84	0xF8AD6004  STRH	R6, [SP, #4]
; pb end address is: 28 (R7)
; ccnt end address is: 4 (R1)
; f end address is: 20 (R5)
; ap end address is: 8 (R2)
; flag end address is: 0 (R0)
0x0B88	0x9202    STR	R2, [SP, #8]
0x0B8A	0x462A    MOV	R2, R5
0x0B8C	0xB285    UXTH	R5, R0
0x0B8E	0xB208    SXTH	R0, R1
0x0B90	0x463E    MOV	R6, R7
0x0B92	0x9902    LDR	R1, [SP, #8]
0x0B94	0xF9BD7004  LDRSH	R7, [SP, #4]
0x0B98	0xE008    B	L___Lib_Sprintf__doprntf61
; width end address is: 24 (R6)
L___Lib_Sprintf__doprntf360:
;__Lib_Sprintf.c, 359 :: 		
0x0B9A	0xF8AD0004  STRH	R0, [SP, #4]
0x0B9E	0xB237    SXTH	R7, R6
0x0BA0	0x4626    MOV	R6, R4
0x0BA2	0xB208    SXTH	R0, R1
0x0BA4	0x4611    MOV	R1, R2
0x0BA6	0x462A    MOV	R2, R5
0x0BA8	0xF8BD5004  LDRH	R5, [SP, #4]
;__Lib_Sprintf.c, 361 :: 		
L___Lib_Sprintf__doprntf61:
;__Lib_Sprintf.c, 362 :: 		
; width start address is: 28 (R7)
; f start address is: 8 (R2)
; flag start address is: 20 (R5)
; pb start address is: 24 (R6)
; ap start address is: 4 (R1)
; ccnt start address is: 0 (R0)
; ap end address is: 4 (R1)
; width end address is: 28 (R7)
; f end address is: 8 (R2)
; pb end address is: 24 (R6)
; ccnt end address is: 0 (R0)
; flag end address is: 20 (R5)
L___Lib_Sprintf__doprntf64:
; ccnt start address is: 0 (R0)
; ap start address is: 4 (R1)
; pb start address is: 24 (R6)
; flag start address is: 20 (R5)
; f start address is: 8 (R2)
; width start address is: 28 (R7)
0x0BAC	0xF8BD4024  LDRH	R4, [SP, #36]
0x0BB0	0xF8BD3024  LDRH	R3, [SP, #36]
0x0BB4	0x1E5B    SUBS	R3, R3, #1
0x0BB6	0xF8AD3024  STRH	R3, [SP, #36]
0x0BBA	0xB14C    CBZ	R4, L___Lib_Sprintf__doprntf65
;__Lib_Sprintf.c, 363 :: 		
0x0BBC	0x9B08    LDR	R3, [SP, #32]
0x0BBE	0x781B    LDRB	R3, [R3, #0]
0x0BC0	0x7033    STRB	R3, [R6, #0]
0x0BC2	0x1C76    ADDS	R6, R6, #1
0x0BC4	0x9B08    LDR	R3, [SP, #32]
0x0BC6	0x1C5B    ADDS	R3, R3, #1
0x0BC8	0x9308    STR	R3, [SP, #32]
0x0BCA	0x1C40    ADDS	R0, R0, #1
0x0BCC	0xB200    SXTH	R0, R0
0x0BCE	0xE7ED    B	L___Lib_Sprintf__doprntf64
L___Lib_Sprintf__doprntf65:
;__Lib_Sprintf.c, 365 :: 		
0x0BD0	0xF0050308  AND	R3, R5, #8
0x0BD4	0xB29B    UXTH	R3, R3
; flag end address is: 20 (R5)
0x0BD6	0xB183    CBZ	R3, L___Lib_Sprintf__doprntf361
; ap end address is: 4 (R1)
; width end address is: 28 (R7)
; f end address is: 8 (R2)
; pb end address is: 24 (R6)
; ccnt end address is: 0 (R0)
0x0BD8	0xB23D    SXTH	R5, R7
;__Lib_Sprintf.c, 366 :: 		
L___Lib_Sprintf__doprntf67:
; width start address is: 20 (R5)
; width start address is: 20 (R5)
; f start address is: 8 (R2)
; pb start address is: 24 (R6)
; ap start address is: 4 (R1)
; ccnt start address is: 0 (R0)
0x0BDA	0xB22C    SXTH	R4, R5
0x0BDC	0x1E6D    SUBS	R5, R5, #1
0x0BDE	0xB22D    SXTH	R5, R5
; width end address is: 20 (R5)
0x0BE0	0xB12C    CBZ	R4, L___Lib_Sprintf__doprntf68
; width end address is: 20 (R5)
;__Lib_Sprintf.c, 367 :: 		
; width start address is: 20 (R5)
0x0BE2	0x2320    MOVS	R3, #32
0x0BE4	0x7033    STRB	R3, [R6, #0]
0x0BE6	0x1C76    ADDS	R6, R6, #1
0x0BE8	0x1C40    ADDS	R0, R0, #1
0x0BEA	0xB200    SXTH	R0, R0
; width end address is: 20 (R5)
0x0BEC	0xE7F5    B	L___Lib_Sprintf__doprntf67
L___Lib_Sprintf__doprntf68:
0x0BEE	0x9201    STR	R2, [SP, #4]
; f end address is: 8 (R2)
; pb end address is: 24 (R6)
; ccnt end address is: 0 (R0)
0x0BF0	0x4632    MOV	R2, R6
0x0BF2	0xB206    SXTH	R6, R0
0x0BF4	0x460D    MOV	R5, R1
0x0BF6	0x9801    LDR	R0, [SP, #4]
0x0BF8	0xE004    B	L___Lib_Sprintf__doprntf66
; ap end address is: 4 (R1)
L___Lib_Sprintf__doprntf361:
;__Lib_Sprintf.c, 365 :: 		
0x0BFA	0x9601    STR	R6, [SP, #4]
0x0BFC	0xB206    SXTH	R6, R0
0x0BFE	0x4610    MOV	R0, R2
0x0C00	0x460D    MOV	R5, R1
0x0C02	0x9A01    LDR	R2, [SP, #4]
;__Lib_Sprintf.c, 367 :: 		
L___Lib_Sprintf__doprntf66:
;__Lib_Sprintf.c, 368 :: 		
; f start address is: 0 (R0)
; pb start address is: 8 (R2)
; ap start address is: 20 (R5)
; ccnt start address is: 24 (R6)
; f end address is: 0 (R0)
; ap end address is: 20 (R5)
; pb end address is: 8 (R2)
; ccnt end address is: 24 (R6)
0x0C04	0xE651    B	L___Lib_Sprintf__doprntf10
;__Lib_Sprintf.c, 369 :: 		
L___Lib_Sprintf__doprntf69:
;__Lib_Sprintf.c, 370 :: 		
; flag start address is: 20 (R5)
; prec start address is: 0 (R0)
; width start address is: 24 (R6)
; ccnt start address is: 28 (R7)
; ap start address is: 32 (R8)
; pb start address is: 36 (R9)
; f start address is: 40 (R10)
0x0C06	0xF8D84000  LDR	R4, [R8, #0]
0x0C0A	0x1D23    ADDS	R3, R4, #4
0x0C0C	0xF8C83000  STR	R3, [R8, #0]
0x0C10	0xF9B43000  LDRSH	R3, [R4, #0]
0x0C14	0xF88D3014  STRB	R3, [SP, #20]
;__Lib_Sprintf.c, 371 :: 		
L___Lib_Sprintf__doprntf70:
;__Lib_Sprintf.c, 372 :: 		
0x0C18	0xAB05    ADD	R3, SP, #20
0x0C1A	0x9308    STR	R3, [SP, #32]
;__Lib_Sprintf.c, 373 :: 		
0x0C1C	0x2301    MOVS	R3, #1
0x0C1E	0xF8AD3024  STRH	R3, [SP, #36]
;__Lib_Sprintf.c, 374 :: 		
0x0C22	0xB239    SXTH	R1, R7
0x0C24	0xB207    SXTH	R7, R0
0x0C26	0xB2A8    UXTH	R0, R5
0x0C28	0x4655    MOV	R5, R10
0x0C2A	0x464C    MOV	R4, R9
0x0C2C	0x4642    MOV	R2, R8
0x0C2E	0xE788    B	____doprntf_dostring
;__Lib_Sprintf.c, 376 :: 		
L___Lib_Sprintf__doprntf71:
;__Lib_Sprintf.c, 377 :: 		
0x0C30	0xF0450BC0  ORR	R11, R5, #192
0x0C34	0xFA1FFB8B  UXTH	R11, R11
; flag end address is: 20 (R5)
; flag start address is: 44 (R11)
;__Lib_Sprintf.c, 378 :: 		
; flag end address is: 44 (R11)
0x0C38	0xE04E    B	L___Lib_Sprintf__doprntf38
;__Lib_Sprintf.c, 380 :: 		
L___Lib_Sprintf__doprntf37:
; flag start address is: 20 (R5)
0x0C3A	0xF89D3014  LDRB	R3, [SP, #20]
0x0C3E	0x2B00    CMP	R3, #0
0x0C40	0xF43FAF2F  BEQ	L___Lib_Sprintf__doprntf39
0x0C44	0xF89D3014  LDRB	R3, [SP, #20]
0x0C48	0x2B6C    CMP	R3, #108
0x0C4A	0xF43FAF2D  BEQ	L___Lib_Sprintf__doprntf40
0x0C4E	0xF89D3014  LDRB	R3, [SP, #20]
0x0C52	0x2B4C    CMP	R3, #76
0x0C54	0xF43FAF28  BEQ	L___Lib_Sprintf__doprntf41
0x0C58	0xF89D3014  LDRB	R3, [SP, #20]
0x0C5C	0x2B66    CMP	R3, #102
0x0C5E	0xF43FAF28  BEQ	L___Lib_Sprintf__doprntf42
0x0C62	0xF89D3014  LDRB	R3, [SP, #20]
0x0C66	0x2B45    CMP	R3, #69
0x0C68	0xF43FAF28  BEQ	L___Lib_Sprintf__doprntf43
0x0C6C	0xF89D3014  LDRB	R3, [SP, #20]
0x0C70	0x2B65    CMP	R3, #101
0x0C72	0xF43FAF27  BEQ	L___Lib_Sprintf__doprntf358
0x0C76	0xF89D3014  LDRB	R3, [SP, #20]
0x0C7A	0x2B67    CMP	R3, #103
0x0C7C	0xF43FAF28  BEQ	L___Lib_Sprintf__doprntf45
0x0C80	0xF89D3014  LDRB	R3, [SP, #20]
0x0C84	0x2B6F    CMP	R3, #111
0x0C86	0xF43FAF28  BEQ	L___Lib_Sprintf__doprntf46
0x0C8A	0xF89D3014  LDRB	R3, [SP, #20]
0x0C8E	0x2B64    CMP	R3, #100
0x0C90	0xF43FAF28  BEQ	L___Lib_Sprintf__doprntf47
0x0C94	0xF89D3014  LDRB	R3, [SP, #20]
0x0C98	0x2B69    CMP	R3, #105
0x0C9A	0xF43FAF23  BEQ	L___Lib_Sprintf__doprntf48
0x0C9E	0xF89D3014  LDRB	R3, [SP, #20]
0x0CA2	0x2B70    CMP	R3, #112
0x0CA4	0xF43FAF21  BEQ	L___Lib_Sprintf__doprntf49
0x0CA8	0xF89D3014  LDRB	R3, [SP, #20]
0x0CAC	0x2B58    CMP	R3, #88
0x0CAE	0xF43FAF1C  BEQ	L___Lib_Sprintf__doprntf50
0x0CB2	0xF89D3014  LDRB	R3, [SP, #20]
0x0CB6	0x2B78    CMP	R3, #120
0x0CB8	0xF43FAF1B  BEQ	L___Lib_Sprintf__doprntf359
0x0CBC	0xF89D3014  LDRB	R3, [SP, #20]
0x0CC0	0x2B73    CMP	R3, #115
0x0CC2	0xF43FAF1C  BEQ	L___Lib_Sprintf__doprntf52
0x0CC6	0xF89D3014  LDRB	R3, [SP, #20]
0x0CCA	0x2B63    CMP	R3, #99
0x0CCC	0xD09B    BEQ	L___Lib_Sprintf__doprntf69
0x0CCE	0xF89D3014  LDRB	R3, [SP, #20]
0x0CD2	0x2B75    CMP	R3, #117
0x0CD4	0xD0AC    BEQ	L___Lib_Sprintf__doprntf71
0x0CD6	0xE79F    B	L___Lib_Sprintf__doprntf70
; flag end address is: 20 (R5)
L___Lib_Sprintf__doprntf38:
;__Lib_Sprintf.c, 382 :: 		
; flag start address is: 44 (R11)
0x0CD8	0xF40B63E0  AND	R3, R11, #1792
0x0CDC	0xB29B    UXTH	R3, R3
0x0CDE	0x2B00    CMP	R3, #0
0x0CE0	0xF0008558  BEQ	L___Lib_Sprintf__doprntf72
;__Lib_Sprintf.c, 383 :: 		
0x0CE4	0xF40B5380  AND	R3, R11, #4096
0x0CE8	0xB29B    UXTH	R3, R3
0x0CEA	0xB123    CBZ	R3, L___Lib_Sprintf__doprntf362
;__Lib_Sprintf.c, 384 :: 		
0x0CEC	0x2006    MOVS	R0, #6
0x0CEE	0xB200    SXTH	R0, R0
; prec end address is: 0 (R0)
0x0CF0	0xFA0FFC80  SXTH	R12, R0
0x0CF4	0xE001    B	L___Lib_Sprintf__doprntf73
L___Lib_Sprintf__doprntf362:
;__Lib_Sprintf.c, 383 :: 		
0x0CF6	0xFA0FFC80  SXTH	R12, R0
;__Lib_Sprintf.c, 384 :: 		
L___Lib_Sprintf__doprntf73:
;__Lib_Sprintf.c, 385 :: 		
; prec start address is: 48 (R12)
0x0CFA	0xF8D84000  LDR	R4, [R8, #0]
0x0CFE	0x1D23    ADDS	R3, R4, #4
0x0D00	0xF8C83000  STR	R3, [R8, #0]
0x0D04	0xED140A00  VLDR.32	S0, [R4, #0]
0x0D08	0xED8D0A06  VSTR.32	S0, [SP, #24]
;__Lib_Sprintf.c, 386 :: 		
0x0D0C	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x0D10	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0D14	0xDA0A    BGE	L___Lib_Sprintf__doprntf363
;__Lib_Sprintf.c, 387 :: 		
0x0D16	0xED9D0A06  VLDR.32	S0, [SP, #24]
0x0D1A	0xEEB10A40  VNEG.F32	S0, S0
0x0D1E	0xED8D0A06  VSTR.32	S0, [SP, #24]
;__Lib_Sprintf.c, 388 :: 		
0x0D22	0xF04B0B03  ORR	R11, R11, #3
0x0D26	0xFA1FFB8B  UXTH	R11, R11
; flag end address is: 44 (R11)
;__Lib_Sprintf.c, 389 :: 		
0x0D2A	0xE7FF    B	L___Lib_Sprintf__doprntf74
L___Lib_Sprintf__doprntf363:
;__Lib_Sprintf.c, 386 :: 		
;__Lib_Sprintf.c, 389 :: 		
L___Lib_Sprintf__doprntf74:
;__Lib_Sprintf.c, 390 :: 		
; flag start address is: 44 (R11)
0x0D2C	0x2300    MOVS	R3, #0
0x0D2E	0xB21B    SXTH	R3, R3
0x0D30	0xF8AD301C  STRH	R3, [SP, #28]
;__Lib_Sprintf.c, 391 :: 		
0x0D34	0xED9D0A06  VLDR.32	S0, [SP, #24]
0x0D38	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x0D3C	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0D40	0xD04A    BEQ	L___Lib_Sprintf__doprntf75
;__Lib_Sprintf.c, 392 :: 		
0x0D42	0xAC07    ADD	R4, SP, #28
0x0D44	0xAB06    ADD	R3, SP, #24
0x0D46	0x681B    LDR	R3, [R3, #0]
0x0D48	0x0DDB    LSRS	R3, R3, #23
0x0D4A	0xF00303FF  AND	R3, R3, #255
0x0D4E	0x3B7E    SUBS	R3, #126
0x0D50	0x8023    STRH	R3, [R4, #0]
;__Lib_Sprintf.c, 393 :: 		
0x0D52	0xF9BD301C  LDRSH	R3, [SP, #28]
0x0D56	0x1E5C    SUBS	R4, R3, #1
0x0D58	0xB224    SXTH	R4, R4
0x0D5A	0xF8AD401C  STRH	R4, [SP, #28]
;__Lib_Sprintf.c, 394 :: 		
0x0D5E	0x2303    MOVS	R3, #3
0x0D60	0xB21B    SXTH	R3, R3
0x0D62	0x435C    MULS	R4, R3, R4
0x0D64	0xB224    SXTH	R4, R4
0x0D66	0xF8AD401C  STRH	R4, [SP, #28]
;__Lib_Sprintf.c, 395 :: 		
0x0D6A	0x230A    MOVS	R3, #10
0x0D6C	0xB21B    SXTH	R3, R3
0x0D6E	0xFB94F3F3  SDIV	R3, R4, R3
0x0D72	0xB21B    SXTH	R3, R3
0x0D74	0xF8AD301C  STRH	R3, [SP, #28]
;__Lib_Sprintf.c, 396 :: 		
0x0D78	0x2B00    CMP	R3, #0
0x0D7A	0xDA04    BGE	L___Lib_Sprintf__doprntf76
;__Lib_Sprintf.c, 397 :: 		
0x0D7C	0xF9BD301C  LDRSH	R3, [SP, #28]
0x0D80	0x1E5B    SUBS	R3, R3, #1
0x0D82	0xF8AD301C  STRH	R3, [SP, #28]
L___Lib_Sprintf__doprntf76:
;__Lib_Sprintf.c, 398 :: 		
0x0D86	0xF9BD301C  LDRSH	R3, [SP, #28]
0x0D8A	0x425B    RSBS	R3, R3, #0
0x0D8C	0xB258    SXTB	R0, R3
0x0D8E	0xF7FFFA07  BL	__Lib_Sprintf_scale+0
0x0D92	0xEDDD0A06  VLDR.32	S1, [SP, #24]
0x0D96	0xEE200A80  VMUL.F32	S0, S1, S0
0x0D9A	0xED8D0A08  VSTR.32	S0, [SP, #32]
;__Lib_Sprintf.c, 399 :: 		
0x0D9E	0xEDDD0A08  VLDR.32	S1, [SP, #32]
0x0DA2	0xEEB70A00  VMOV.F32	S0, #1
0x0DA6	0xEEF40AC0  VCMPE.F32	S1, S0
0x0DAA	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0DAE	0xDA05    BGE	L___Lib_Sprintf__doprntf77
;__Lib_Sprintf.c, 400 :: 		
0x0DB0	0xF9BD301C  LDRSH	R3, [SP, #28]
0x0DB4	0x1E5B    SUBS	R3, R3, #1
0x0DB6	0xF8AD301C  STRH	R3, [SP, #28]
0x0DBA	0xE00D    B	L___Lib_Sprintf__doprntf78
L___Lib_Sprintf__doprntf77:
;__Lib_Sprintf.c, 402 :: 		
0x0DBC	0xEDDD0A08  VLDR.32	S1, [SP, #32]
0x0DC0	0xEEB20A04  VMOV.F32	S0, #10
0x0DC4	0xEEF40AC0  VCMPE.F32	S1, S0
0x0DC8	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0DCC	0xDB04    BLT	L___Lib_Sprintf__doprntf79
;__Lib_Sprintf.c, 403 :: 		
0x0DCE	0xF9BD301C  LDRSH	R3, [SP, #28]
0x0DD2	0x1C5B    ADDS	R3, R3, #1
0x0DD4	0xF8AD301C  STRH	R3, [SP, #28]
L___Lib_Sprintf__doprntf79:
L___Lib_Sprintf__doprntf78:
;__Lib_Sprintf.c, 404 :: 		
L___Lib_Sprintf__doprntf75:
;__Lib_Sprintf.c, 405 :: 		
0x0DD8	0xF9BD301C  LDRSH	R3, [SP, #28]
0x0DDC	0x2B00    CMP	R3, #0
0x0DDE	0xDC03    BGT	L___Lib_Sprintf__doprntf80
;__Lib_Sprintf.c, 406 :: 		
0x0DE0	0x2301    MOVS	R3, #1
0x0DE2	0xF88D3014  STRB	R3, [SP, #20]
0x0DE6	0xE003    B	L___Lib_Sprintf__doprntf81
L___Lib_Sprintf__doprntf80:
;__Lib_Sprintf.c, 408 :: 		
0x0DE8	0xF9BD301C  LDRSH	R3, [SP, #28]
0x0DEC	0xF88D3014  STRB	R3, [SP, #20]
L___Lib_Sprintf__doprntf81:
;__Lib_Sprintf.c, 409 :: 		
0x0DF0	0xF40B7380  AND	R3, R11, #256
0x0DF4	0xB29B    UXTH	R3, R3
0x0DF6	0xB983    CBNZ	R3, L___Lib_Sprintf__doprntf322
0x0DF8	0xF40B7300  AND	R3, R11, #512
0x0DFC	0xB29B    UXTH	R3, R3
0x0DFE	0xB15B    CBZ	R3, L___Lib_Sprintf__doprntf321
0x0E00	0xF9BD401C  LDRSH	R4, [SP, #28]
0x0E04	0xF06F0303  MVN	R3, #3
0x0E08	0x429C    CMP	R4, R3
0x0E0A	0xDB04    BLT	L___Lib_Sprintf__doprntf320
0x0E0C	0xF9BD301C  LDRSH	R3, [SP, #28]
0x0E10	0x4563    CMP	R3, R12
0x0E12	0xDA00    BGE	L___Lib_Sprintf__doprntf319
0x0E14	0xE000    B	L___Lib_Sprintf__doprntf314
L___Lib_Sprintf__doprntf320:
L___Lib_Sprintf__doprntf319:
0x0E16	0xE000    B	L___Lib_Sprintf__doprntf313
L___Lib_Sprintf__doprntf314:
L___Lib_Sprintf__doprntf321:
0x0E18	0xE258    B	L___Lib_Sprintf__doprntf88
L___Lib_Sprintf__doprntf313:
L___Lib_Sprintf__doprntf322:
;__Lib_Sprintf.c, 410 :: 		
0x0E1A	0xF1BC0F00  CMP	R12, #0
0x0E1E	0xD009    BEQ	L___Lib_Sprintf__doprntf364
0x0E20	0xF40B7300  AND	R3, R11, #512
0x0E24	0xB29B    UXTH	R3, R3
0x0E26	0xB133    CBZ	R3, L___Lib_Sprintf__doprntf365
L___Lib_Sprintf__doprntf312:
;__Lib_Sprintf.c, 411 :: 		
0x0E28	0xF1AC0001  SUB	R0, R12, #1
0x0E2C	0xB200    SXTH	R0, R0
; prec end address is: 48 (R12)
; prec start address is: 0 (R0)
; prec end address is: 0 (R0)
0x0E2E	0xFA0FFC80  SXTH	R12, R0
;__Lib_Sprintf.c, 410 :: 		
0x0E32	0xE7FF    B	L___Lib_Sprintf__doprntf324
L___Lib_Sprintf__doprntf364:
L___Lib_Sprintf__doprntf324:
; prec start address is: 48 (R12)
; prec end address is: 48 (R12)
0x0E34	0xE7FF    B	L___Lib_Sprintf__doprntf323
L___Lib_Sprintf__doprntf365:
L___Lib_Sprintf__doprntf323:
;__Lib_Sprintf.c, 412 :: 		
; prec start address is: 48 (R12)
0x0E36	0xFA1FF38C  UXTH	R3, R12
0x0E3A	0x2B08    CMP	R3, #8
0x0E3C	0xD903    BLS	L___Lib_Sprintf__doprntf92
;__Lib_Sprintf.c, 413 :: 		
0x0E3E	0x2308    MOVS	R3, #8
0x0E40	0xF88D3014  STRB	R3, [SP, #20]
0x0E44	0xE001    B	L___Lib_Sprintf__doprntf93
L___Lib_Sprintf__doprntf92:
;__Lib_Sprintf.c, 415 :: 		
0x0E46	0xF88DC014  STRB	R12, [SP, #20]
L___Lib_Sprintf__doprntf93:
;__Lib_Sprintf.c, 416 :: 		
0x0E4A	0xED9D0A06  VLDR.32	S0, [SP, #24]
0x0E4E	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x0E52	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0E56	0xD070    BEQ	L___Lib_Sprintf__doprntf94
;__Lib_Sprintf.c, 417 :: 		
0x0E58	0xF9BD001C  LDRSH	R0, [SP, #28]
0x0E5C	0xF7FFF9A0  BL	__Lib_Sprintf_scale+0
0x0E60	0xEDDD0A06  VLDR.32	S1, [SP, #24]
0x0E64	0xEE800A80  VDIV.F32	S0, S1, S0
0x0E68	0xED8D0A06  VSTR.32	S0, [SP, #24]
;__Lib_Sprintf.c, 418 :: 		
0x0E6C	0xF89D3014  LDRB	R3, [SP, #20]
0x0E70	0x425B    RSBS	R3, R3, #0
0x0E72	0xB258    SXTB	R0, R3
0x0E74	0xF7FFF994  BL	__Lib_Sprintf_scale+0
0x0E78	0xEDDD0A06  VLDR.32	S1, [SP, #24]
0x0E7C	0xEEC00A80  VDIV.F32	S1, S1, S0
0x0E80	0xEDCD0A06  VSTR.32	S1, [SP, #24]
;__Lib_Sprintf.c, 419 :: 		
0x0E84	0xEEBC0A60  VCVT.U32.F32	S0, S1
0x0E88	0xEE103A10  VMOV	R3, S0
0x0E8C	0xEE003A10  VMOV	S0, R3
0x0E90	0xEEB80A40  VCVT.F32.U32	S0, S0
0x0E94	0xEE700AC0  VSUB.F32	S1, S1, S0
0x0E98	0xEEB60A00  VMOV.F32	S0, #0.5
0x0E9C	0xEEF40AC0  VCMPE.F32	S1, S0
0x0EA0	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0EA4	0xDB07    BLT	L___Lib_Sprintf__doprntf95
;__Lib_Sprintf.c, 420 :: 		
0x0EA6	0xEDDD0A06  VLDR.32	S1, [SP, #24]
0x0EAA	0xEEB60A00  VMOV.F32	S0, #0.5
0x0EAE	0xEE300A80  VADD.F32	S0, S1, S0
0x0EB2	0xED8D0A06  VSTR.32	S0, [SP, #24]
L___Lib_Sprintf__doprntf95:
;__Lib_Sprintf.c, 421 :: 		
0x0EB6	0xED9D0A06  VLDR.32	S0, [SP, #24]
0x0EBA	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x0EBE	0xEE105A10  VMOV	R5, S0
0x0EC2	0xF89D3014  LDRB	R3, [SP, #20]
0x0EC6	0x1C5B    ADDS	R3, R3, #1
0x0EC8	0xB21B    SXTH	R3, R3
0x0ECA	0x009C    LSLS	R4, R3, #2
0x0ECC	0x4B0D    LDR	R3, [PC, #52]
0x0ECE	0x191B    ADDS	R3, R3, R4
0x0ED0	0x681B    LDR	R3, [R3, #0]
0x0ED2	0x429D    CMP	R5, R3
0x0ED4	0xD30E    BCC	L___Lib_Sprintf__doprntf96
;__Lib_Sprintf.c, 422 :: 		
0x0ED6	0xEDDD0A06  VLDR.32	S1, [SP, #24]
0x0EDA	0x4B0B    LDR	R3, [PC, #44]
0x0EDC	0xEE003A10  VMOV	S0, R3
0x0EE0	0xEE200A80  VMUL.F32	S0, S1, S0
0x0EE4	0xED8D0A06  VSTR.32	S0, [SP, #24]
;__Lib_Sprintf.c, 423 :: 		
0x0EE8	0xF9BD301C  LDRSH	R3, [SP, #28]
0x0EEC	0x1C5B    ADDS	R3, R3, #1
0x0EEE	0xF8AD301C  STRH	R3, [SP, #28]
;__Lib_Sprintf.c, 424 :: 		
0x0EF2	0xE022    B	L___Lib_Sprintf__doprntf97
L___Lib_Sprintf__doprntf96:
;__Lib_Sprintf.c, 426 :: 		
0x0EF4	0xED9D0A06  VLDR.32	S0, [SP, #24]
0x0EF8	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x0EFC	0xF000B806  B	#12
0x0F00	0x231E2000  	?lstr1___Lib_Sprintf+0
0x0F04	0x89280000  	__Lib_Sprintf_dpowers+0
0x0F08	0xCCCD3DCC  	#1036831949
0x0F0C	0xEE105A10  VMOV	R5, S0
0x0F10	0xF89D3014  LDRB	R3, [SP, #20]
0x0F14	0x009C    LSLS	R4, R3, #2
0x0F16	0x4BFB    LDR	R3, [PC, #1004]
0x0F18	0x191B    ADDS	R3, R3, R4
0x0F1A	0x681B    LDR	R3, [R3, #0]
0x0F1C	0x429D    CMP	R5, R3
0x0F1E	0xD20C    BCS	L___Lib_Sprintf__doprntf98
;__Lib_Sprintf.c, 427 :: 		
0x0F20	0xEDDD0A06  VLDR.32	S1, [SP, #24]
0x0F24	0xEEB20A04  VMOV.F32	S0, #10
0x0F28	0xEE200A80  VMUL.F32	S0, S1, S0
0x0F2C	0xED8D0A06  VSTR.32	S0, [SP, #24]
;__Lib_Sprintf.c, 428 :: 		
0x0F30	0xF9BD301C  LDRSH	R3, [SP, #28]
0x0F34	0x1E5B    SUBS	R3, R3, #1
0x0F36	0xF8AD301C  STRH	R3, [SP, #28]
;__Lib_Sprintf.c, 429 :: 		
L___Lib_Sprintf__doprntf98:
L___Lib_Sprintf__doprntf97:
;__Lib_Sprintf.c, 430 :: 		
L___Lib_Sprintf__doprntf94:
;__Lib_Sprintf.c, 431 :: 		
0x0F3A	0xF40B7300  AND	R3, R11, #512
0x0F3E	0xB29B    UXTH	R3, R3
0x0F40	0x2B00    CMP	R3, #0
0x0F42	0xD041    BEQ	L___Lib_Sprintf__doprntf367
0x0F44	0xF40B6300  AND	R3, R11, #2048
0x0F48	0xB29B    UXTH	R3, R3
0x0F4A	0x2B00    CMP	R3, #0
0x0F4C	0xD145    BNE	L___Lib_Sprintf__doprntf368
L___Lib_Sprintf__doprntf311:
;__Lib_Sprintf.c, 432 :: 		
0x0F4E	0xF1BC0F0A  CMP	R12, #10
0x0F52	0xDD04    BLE	L___Lib_Sprintf__doprntf366
; prec end address is: 48 (R12)
;__Lib_Sprintf.c, 433 :: 		
; prec start address is: 0 (R0)
0x0F54	0x200A    MOVS	R0, #10
0x0F56	0xB200    SXTH	R0, R0
; prec end address is: 0 (R0)
0x0F58	0xFA0FFC80  SXTH	R12, R0
0x0F5C	0xE7FF    B	L___Lib_Sprintf__doprntf102
L___Lib_Sprintf__doprntf366:
;__Lib_Sprintf.c, 432 :: 		
;__Lib_Sprintf.c, 433 :: 		
L___Lib_Sprintf__doprntf102:
;__Lib_Sprintf.c, 434 :: 		
; prec start address is: 48 (R12)
0x0F5E	0xED9D0A06  VLDR.32	S0, [SP, #24]
0x0F62	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x0F66	0xEE103A10  VMOV	R3, S0
0x0F6A	0x9308    STR	R3, [SP, #32]
; flag end address is: 44 (R11)
; f end address is: 40 (R10)
; prec end address is: 48 (R12)
; pb end address is: 36 (R9)
; ap end address is: 32 (R8)
; ccnt end address is: 28 (R7)
; width end address is: 24 (R6)
;__Lib_Sprintf.c, 435 :: 		
L___Lib_Sprintf__doprntf103:
; prec start address is: 48 (R12)
; flag start address is: 44 (R11)
; f start address is: 40 (R10)
; pb start address is: 36 (R9)
; ap start address is: 32 (R8)
; ccnt start address is: 28 (R7)
; width start address is: 24 (R6)
0x0F6C	0x9B08    LDR	R3, [SP, #32]
0x0F6E	0xB183    CBZ	R3, L___Lib_Sprintf__doprntf326
0x0F70	0x9D08    LDR	R5, [SP, #32]
0x0F72	0x240A    MOVS	R4, #10
0x0F74	0xFBB5F3F4  UDIV	R3, R5, R4
0x0F78	0xFB045313  MLS	R3, R4, R3, R5
0x0F7C	0xB94B    CBNZ	R3, L___Lib_Sprintf__doprntf325
L___Lib_Sprintf__doprntf310:
;__Lib_Sprintf.c, 436 :: 		
0x0F7E	0xF1AC0C01  SUB	R12, R12, #1
0x0F82	0xFA0FFC8C  SXTH	R12, R12
;__Lib_Sprintf.c, 437 :: 		
0x0F86	0x9C08    LDR	R4, [SP, #32]
0x0F88	0x230A    MOVS	R3, #10
0x0F8A	0xFBB4F3F3  UDIV	R3, R4, R3
0x0F8E	0x9308    STR	R3, [SP, #32]
;__Lib_Sprintf.c, 438 :: 		
0x0F90	0xE7EC    B	L___Lib_Sprintf__doprntf103
;__Lib_Sprintf.c, 435 :: 		
L___Lib_Sprintf__doprntf326:
L___Lib_Sprintf__doprntf325:
;__Lib_Sprintf.c, 439 :: 		
0x0F92	0xF89D3014  LDRB	R3, [SP, #20]
0x0F96	0x459C    CMP	R12, R3
0x0F98	0xDA0E    BGE	L___Lib_Sprintf__doprntf107
;__Lib_Sprintf.c, 440 :: 		
0x0F9A	0xF89D3014  LDRB	R3, [SP, #20]
0x0F9E	0xEBA3030C  SUB	R3, R3, R12, LSL #0
0x0FA2	0xB258    SXTB	R0, R3
0x0FA4	0xF7FFF8FC  BL	__Lib_Sprintf_scale+0
0x0FA8	0xEDDD0A06  VLDR.32	S1, [SP, #24]
0x0FAC	0xEE800A80  VDIV.F32	S0, S1, S0
0x0FB0	0xED8D0A06  VSTR.32	S0, [SP, #24]
;__Lib_Sprintf.c, 441 :: 		
0x0FB4	0xF88DC014  STRB	R12, [SP, #20]
;__Lib_Sprintf.c, 442 :: 		
L___Lib_Sprintf__doprntf107:
;__Lib_Sprintf.c, 431 :: 		
0x0FB8	0xB233    SXTH	R3, R6
; f end address is: 40 (R10)
; prec end address is: 48 (R12)
; pb end address is: 36 (R9)
; ap end address is: 32 (R8)
; ccnt end address is: 28 (R7)
; width end address is: 24 (R6)
0x0FBA	0x4644    MOV	R4, R8
0x0FBC	0x4652    MOV	R2, R10
0x0FBE	0xFA1FF08B  UXTH	R0, R11
0x0FC2	0xFA0FF18C  SXTH	R1, R12
0x0FC6	0xE006    B	L___Lib_Sprintf__doprntf328
; flag end address is: 44 (R11)
L___Lib_Sprintf__doprntf367:
0x0FC8	0xFA0FF18C  SXTH	R1, R12
0x0FCC	0xFA1FF08B  UXTH	R0, R11
0x0FD0	0x4652    MOV	R2, R10
0x0FD2	0x4644    MOV	R4, R8
0x0FD4	0xB233    SXTH	R3, R6
L___Lib_Sprintf__doprntf328:
; prec start address is: 4 (R1)
; flag start address is: 0 (R0)
; f start address is: 8 (R2)
; pb start address is: 36 (R9)
; ap start address is: 16 (R4)
; ccnt start address is: 28 (R7)
; width start address is: 12 (R3)
0x0FD6	0xB21D    SXTH	R5, R3
; prec end address is: 4 (R1)
; ap end address is: 16 (R4)
; f end address is: 8 (R2)
; pb end address is: 36 (R9)
; ccnt end address is: 28 (R7)
; width end address is: 12 (R3)
; flag end address is: 0 (R0)
0x0FD8	0xE006    B	L___Lib_Sprintf__doprntf327
L___Lib_Sprintf__doprntf368:
0x0FDA	0xFA0FF18C  SXTH	R1, R12
0x0FDE	0xFA1FF08B  UXTH	R0, R11
0x0FE2	0x4652    MOV	R2, R10
0x0FE4	0x4644    MOV	R4, R8
0x0FE6	0xB235    SXTH	R5, R6
L___Lib_Sprintf__doprntf327:
;__Lib_Sprintf.c, 444 :: 		
; prec start address is: 4 (R1)
; flag start address is: 0 (R0)
; f start address is: 8 (R2)
; pb start address is: 36 (R9)
; ap start address is: 16 (R4)
; ccnt start address is: 28 (R7)
; width start address is: 20 (R5)
0x0FE8	0x1D4B    ADDS	R3, R1, #5
0x0FEA	0xB21B    SXTH	R3, R3
0x0FEC	0x1AED    SUB	R5, R5, R3
0x0FEE	0xB22D    SXTH	R5, R5
;__Lib_Sprintf.c, 445 :: 		
0x0FF0	0xB921    CBNZ	R1, L___Lib_Sprintf__doprntf330
0x0FF2	0xF4006300  AND	R3, R0, #2048
0x0FF6	0xB29B    UXTH	R3, R3
0x0FF8	0xB903    CBNZ	R3, L___Lib_Sprintf__doprntf329
0x0FFA	0xE001    B	L___Lib_Sprintf__doprntf110
L___Lib_Sprintf__doprntf330:
L___Lib_Sprintf__doprntf329:
;__Lib_Sprintf.c, 446 :: 		
0x0FFC	0x1E6D    SUBS	R5, R5, #1
0x0FFE	0xB22D    SXTH	R5, R5
; width end address is: 20 (R5)
L___Lib_Sprintf__doprntf110:
;__Lib_Sprintf.c, 447 :: 		
; width start address is: 20 (R5)
0x1000	0xF0000303  AND	R3, R0, #3
0x1004	0xB29B    UXTH	R3, R3
0x1006	0xB113    CBZ	R3, L___Lib_Sprintf__doprntf369
;__Lib_Sprintf.c, 448 :: 		
0x1008	0x1E6D    SUBS	R5, R5, #1
0x100A	0xB22D    SXTH	R5, R5
; width end address is: 20 (R5)
0x100C	0xE7FF    B	L___Lib_Sprintf__doprntf111
L___Lib_Sprintf__doprntf369:
;__Lib_Sprintf.c, 447 :: 		
;__Lib_Sprintf.c, 448 :: 		
L___Lib_Sprintf__doprntf111:
;__Lib_Sprintf.c, 449 :: 		
; width start address is: 20 (R5)
0x100E	0xF0000304  AND	R3, R0, #4
0x1012	0xB29B    UXTH	R3, R3
0x1014	0x2B00    CMP	R3, #0
0x1016	0xD03E    BEQ	L___Lib_Sprintf__doprntf112
;__Lib_Sprintf.c, 450 :: 		
0x1018	0xF0000302  AND	R3, R0, #2
0x101C	0xB29B    UXTH	R3, R3
0x101E	0xB1AB    CBZ	R3, L___Lib_Sprintf__doprntf113
;__Lib_Sprintf.c, 451 :: 		
0x1020	0xF0000301  AND	R3, R0, #1
0x1024	0xB29B    UXTH	R3, R3
0x1026	0xB11B    CBZ	R3, L___Lib_Sprintf__doprntf114
0x1028	0x232D    MOVS	R3, #45
0x102A	0xF88D300C  STRB	R3, [SP, #12]
0x102E	0xE002    B	L___Lib_Sprintf__doprntf115
L___Lib_Sprintf__doprntf114:
0x1030	0x232B    MOVS	R3, #43
0x1032	0xF88D300C  STRB	R3, [SP, #12]
L___Lib_Sprintf__doprntf115:
0x1036	0xF89D300C  LDRB	R3, [SP, #12]
0x103A	0xF8893000  STRB	R3, [R9, #0]
0x103E	0xF1090601  ADD	R6, R9, #1
; pb end address is: 36 (R9)
; pb start address is: 24 (R6)
0x1042	0x1C7B    ADDS	R3, R7, #1
0x1044	0xB21B    SXTH	R3, R3
; ccnt end address is: 28 (R7)
; ccnt start address is: 12 (R3)
0x1046	0x4637    MOV	R7, R6
; pb end address is: 24 (R6)
; ccnt end address is: 12 (R3)
0x1048	0xB21E    SXTH	R6, R3
0x104A	0xE010    B	L___Lib_Sprintf__doprntf116
L___Lib_Sprintf__doprntf113:
;__Lib_Sprintf.c, 453 :: 		
; ccnt start address is: 28 (R7)
; pb start address is: 36 (R9)
0x104C	0xF0000301  AND	R3, R0, #1
0x1050	0xB29B    UXTH	R3, R3
0x1052	0xB143    CBZ	R3, L___Lib_Sprintf__doprntf370
;__Lib_Sprintf.c, 454 :: 		
0x1054	0x2320    MOVS	R3, #32
0x1056	0xF8893000  STRB	R3, [R9, #0]
0x105A	0xF1090601  ADD	R6, R9, #1
; pb end address is: 36 (R9)
; pb start address is: 24 (R6)
0x105E	0x1C7F    ADDS	R7, R7, #1
0x1060	0xB23F    SXTH	R7, R7
; pb end address is: 24 (R6)
; ccnt end address is: 28 (R7)
0x1062	0xB23B    SXTH	R3, R7
0x1064	0xE001    B	L___Lib_Sprintf__doprntf117
L___Lib_Sprintf__doprntf370:
;__Lib_Sprintf.c, 453 :: 		
0x1066	0xB23B    SXTH	R3, R7
0x1068	0x464E    MOV	R6, R9
;__Lib_Sprintf.c, 454 :: 		
L___Lib_Sprintf__doprntf117:
; ccnt start address is: 12 (R3)
; pb start address is: 24 (R6)
0x106A	0x4637    MOV	R7, R6
; pb end address is: 24 (R6)
; ccnt end address is: 12 (R3)
0x106C	0xB21E    SXTH	R6, R3
L___Lib_Sprintf__doprntf116:
;__Lib_Sprintf.c, 455 :: 		
; pb start address is: 28 (R7)
; ccnt start address is: 24 (R6)
; prec end address is: 4 (R1)
; ap end address is: 16 (R4)
; f end address is: 8 (R2)
; width end address is: 20 (R5)
; pb end address is: 28 (R7)
; ccnt end address is: 24 (R6)
; flag end address is: 0 (R0)
L___Lib_Sprintf__doprntf118:
; ccnt start address is: 24 (R6)
; pb start address is: 28 (R7)
; width start address is: 20 (R5)
; ap start address is: 16 (R4)
; f start address is: 8 (R2)
; flag start address is: 0 (R0)
; prec start address is: 4 (R1)
0x106E	0x2D00    CMP	R5, #0
0x1070	0xDD07    BLE	L___Lib_Sprintf__doprntf119
;__Lib_Sprintf.c, 456 :: 		
0x1072	0x2330    MOVS	R3, #48
0x1074	0x703B    STRB	R3, [R7, #0]
0x1076	0x1C7F    ADDS	R7, R7, #1
0x1078	0x1C76    ADDS	R6, R6, #1
0x107A	0xB236    SXTH	R6, R6
;__Lib_Sprintf.c, 457 :: 		
0x107C	0x1E6D    SUBS	R5, R5, #1
0x107E	0xB22D    SXTH	R5, R5
;__Lib_Sprintf.c, 458 :: 		
0x1080	0xE7F5    B	L___Lib_Sprintf__doprntf118
L___Lib_Sprintf__doprntf119:
;__Lib_Sprintf.c, 459 :: 		
0x1082	0xF8AD1004  STRH	R1, [SP, #4]
; pb end address is: 28 (R7)
; ccnt end address is: 24 (R6)
0x1086	0x4611    MOV	R1, R2
0x1088	0xB22A    SXTH	R2, R5
0x108A	0x46B8    MOV	R8, R7
0x108C	0xB287    UXTH	R7, R0
0x108E	0x4620    MOV	R0, R4
0x1090	0xF9BD5004  LDRSH	R5, [SP, #4]
0x1094	0xE050    B	L___Lib_Sprintf__doprntf120
L___Lib_Sprintf__doprntf112:
;__Lib_Sprintf.c, 461 :: 		
; ccnt start address is: 28 (R7)
; pb start address is: 36 (R9)
0x1096	0xF0000308  AND	R3, R0, #8
0x109A	0xB29B    UXTH	R3, R3
0x109C	0xB9B3    CBNZ	R3, L___Lib_Sprintf__doprntf371
; prec end address is: 4 (R1)
; ap end address is: 16 (R4)
; f end address is: 8 (R2)
; width end address is: 20 (R5)
; pb end address is: 36 (R9)
; ccnt end address is: 28 (R7)
; flag end address is: 0 (R0)
0x109E	0xB23E    SXTH	R6, R7
0x10A0	0xB287    UXTH	R7, R0
0x10A2	0xB208    SXTH	R0, R1
0x10A4	0x46C8    MOV	R8, R9
;__Lib_Sprintf.c, 462 :: 		
L___Lib_Sprintf__doprntf122:
; width start address is: 20 (R5)
; ccnt start address is: 24 (R6)
; ap start address is: 16 (R4)
; pb start address is: 32 (R8)
; f start address is: 8 (R2)
; flag start address is: 28 (R7)
; prec start address is: 0 (R0)
0x10A6	0x2D00    CMP	R5, #0
0x10A8	0xDD09    BLE	L___Lib_Sprintf__doprntf123
;__Lib_Sprintf.c, 463 :: 		
0x10AA	0x2320    MOVS	R3, #32
0x10AC	0xF8883000  STRB	R3, [R8, #0]
0x10B0	0xF1080801  ADD	R8, R8, #1
0x10B4	0x1C76    ADDS	R6, R6, #1
0x10B6	0xB236    SXTH	R6, R6
;__Lib_Sprintf.c, 464 :: 		
0x10B8	0x1E6D    SUBS	R5, R5, #1
0x10BA	0xB22D    SXTH	R5, R5
;__Lib_Sprintf.c, 465 :: 		
0x10BC	0xE7F3    B	L___Lib_Sprintf__doprntf122
L___Lib_Sprintf__doprntf123:
0x10BE	0x9401    STR	R4, [SP, #4]
; f end address is: 8 (R2)
; flag end address is: 28 (R7)
; pb end address is: 32 (R8)
; width end address is: 20 (R5)
; prec end address is: 0 (R0)
; ccnt end address is: 24 (R6)
0x10C0	0x4614    MOV	R4, R2
0x10C2	0xB229    SXTH	R1, R5
0x10C4	0xB235    SXTH	R5, R6
0x10C6	0x4646    MOV	R6, R8
0x10C8	0x9A01    LDR	R2, [SP, #4]
0x10CA	0xE00A    B	L___Lib_Sprintf__doprntf121
; ap end address is: 16 (R4)
L___Lib_Sprintf__doprntf371:
;__Lib_Sprintf.c, 461 :: 		
0x10CC	0x9201    STR	R2, [SP, #4]
0x10CE	0xF8AD7008  STRH	R7, [SP, #8]
0x10D2	0xB287    UXTH	R7, R0
0x10D4	0xB208    SXTH	R0, R1
0x10D6	0xB229    SXTH	R1, R5
0x10D8	0x4622    MOV	R2, R4
0x10DA	0x464E    MOV	R6, R9
0x10DC	0xF9BD5008  LDRSH	R5, [SP, #8]
0x10E0	0x9C01    LDR	R4, [SP, #4]
;__Lib_Sprintf.c, 465 :: 		
L___Lib_Sprintf__doprntf121:
;__Lib_Sprintf.c, 466 :: 		
; width start address is: 4 (R1)
; ccnt start address is: 20 (R5)
; ap start address is: 8 (R2)
; pb start address is: 24 (R6)
; f start address is: 16 (R4)
; flag start address is: 28 (R7)
; prec start address is: 0 (R0)
0x10E2	0xF0070302  AND	R3, R7, #2
0x10E6	0xB29B    UXTH	R3, R3
0x10E8	0xB19B    CBZ	R3, L___Lib_Sprintf__doprntf124
;__Lib_Sprintf.c, 467 :: 		
0x10EA	0xF0070301  AND	R3, R7, #1
0x10EE	0xB29B    UXTH	R3, R3
0x10F0	0xB11B    CBZ	R3, L___Lib_Sprintf__doprntf125
0x10F2	0x232D    MOVS	R3, #45
0x10F4	0xF88D300D  STRB	R3, [SP, #13]
0x10F8	0xE002    B	L___Lib_Sprintf__doprntf126
L___Lib_Sprintf__doprntf125:
0x10FA	0x232B    MOVS	R3, #43
0x10FC	0xF88D300D  STRB	R3, [SP, #13]
L___Lib_Sprintf__doprntf126:
0x1100	0xF89D300D  LDRB	R3, [SP, #13]
0x1104	0x7033    STRB	R3, [R6, #0]
0x1106	0x1C76    ADDS	R6, R6, #1
0x1108	0x1C6B    ADDS	R3, R5, #1
0x110A	0xB21B    SXTH	R3, R3
; ccnt end address is: 20 (R5)
; ccnt start address is: 12 (R3)
0x110C	0x46B0    MOV	R8, R6
; ccnt end address is: 12 (R3)
0x110E	0xB21E    SXTH	R6, R3
0x1110	0xE00E    B	L___Lib_Sprintf__doprntf127
L___Lib_Sprintf__doprntf124:
;__Lib_Sprintf.c, 469 :: 		
; ccnt start address is: 20 (R5)
0x1112	0xF0070301  AND	R3, R7, #1
0x1116	0xB29B    UXTH	R3, R3
0x1118	0xB13B    CBZ	R3, L___Lib_Sprintf__doprntf372
;__Lib_Sprintf.c, 470 :: 		
0x111A	0x2320    MOVS	R3, #32
0x111C	0x7033    STRB	R3, [R6, #0]
0x111E	0x1C76    ADDS	R6, R6, #1
0x1120	0x1C6D    ADDS	R5, R5, #1
0x1122	0xB22D    SXTH	R5, R5
; pb end address is: 24 (R6)
; ccnt end address is: 20 (R5)
0x1124	0x4633    MOV	R3, R6
0x1126	0xB22E    SXTH	R6, R5
0x1128	0xE001    B	L___Lib_Sprintf__doprntf128
L___Lib_Sprintf__doprntf372:
;__Lib_Sprintf.c, 469 :: 		
0x112A	0x4633    MOV	R3, R6
0x112C	0xB22E    SXTH	R6, R5
;__Lib_Sprintf.c, 470 :: 		
L___Lib_Sprintf__doprntf128:
; ccnt start address is: 24 (R6)
; pb start address is: 12 (R3)
; pb end address is: 12 (R3)
; ccnt end address is: 24 (R6)
0x112E	0x4698    MOV	R8, R3
L___Lib_Sprintf__doprntf127:
;__Lib_Sprintf.c, 471 :: 		
; pb start address is: 32 (R8)
; ccnt start address is: 24 (R6)
0x1130	0xB205    SXTH	R5, R0
; f end address is: 16 (R4)
; width end address is: 4 (R1)
; flag end address is: 28 (R7)
; pb end address is: 32 (R8)
; prec end address is: 0 (R0)
; ap end address is: 8 (R2)
; ccnt end address is: 24 (R6)
0x1132	0x4610    MOV	R0, R2
0x1134	0xB20A    SXTH	R2, R1
0x1136	0x4621    MOV	R1, R4
L___Lib_Sprintf__doprntf120:
;__Lib_Sprintf.c, 472 :: 		
; ccnt start address is: 24 (R6)
; pb start address is: 32 (R8)
; prec start address is: 20 (R5)
; flag start address is: 28 (R7)
; f start address is: 4 (R1)
; ap start address is: 0 (R0)
; width start address is: 8 (R2)
0x1138	0xED9D0A06  VLDR.32	S0, [SP, #24]
0x113C	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x1140	0xEE103A10  VMOV	R3, S0
0x1144	0x9308    STR	R3, [SP, #32]
;__Lib_Sprintf.c, 473 :: 		
0x1146	0xF89D3014  LDRB	R3, [SP, #20]
0x114A	0x009C    LSLS	R4, R3, #2
0x114C	0x4B6D    LDR	R3, [PC, #436]
0x114E	0x191B    ADDS	R3, R3, R4
0x1150	0x681C    LDR	R4, [R3, #0]
0x1152	0x9B08    LDR	R3, [SP, #32]
0x1154	0xFBB3F3F4  UDIV	R3, R3, R4
0x1158	0x3330    ADDS	R3, #48
0x115A	0xF8883000  STRB	R3, [R8, #0]
0x115E	0xF1080801  ADD	R8, R8, #1
0x1162	0x1C74    ADDS	R4, R6, #1
0x1164	0xB224    SXTH	R4, R4
; ccnt end address is: 24 (R6)
; ccnt start address is: 16 (R4)
;__Lib_Sprintf.c, 474 :: 		
0x1166	0xB92D    CBNZ	R5, L___Lib_Sprintf__doprntf332
0x1168	0xF4076300  AND	R3, R7, #2048
0x116C	0xB29B    UXTH	R3, R3
0x116E	0xB90B    CBNZ	R3, L___Lib_Sprintf__doprntf331
; prec end address is: 20 (R5)
0x1170	0x4645    MOV	R5, R8
0x1172	0xE041    B	L___Lib_Sprintf__doprntf131
L___Lib_Sprintf__doprntf332:
; prec start address is: 20 (R5)
L___Lib_Sprintf__doprntf331:
;__Lib_Sprintf.c, 475 :: 		
0x1174	0x232E    MOVS	R3, #46
0x1176	0xF8883000  STRB	R3, [R8, #0]
0x117A	0xF1080901  ADD	R9, R8, #1
; pb end address is: 32 (R8)
; pb start address is: 36 (R9)
0x117E	0xF1040801  ADD	R8, R4, #1
0x1182	0xFA0FF888  SXTH	R8, R8
; ccnt end address is: 16 (R4)
; ccnt start address is: 32 (R8)
;__Lib_Sprintf.c, 476 :: 		
0x1186	0xF89D3014  LDRB	R3, [SP, #20]
0x118A	0x1AEC    SUB	R4, R5, R3
0x118C	0xB224    SXTH	R4, R4
; prec end address is: 20 (R5)
; prec start address is: 16 (R4)
; width end address is: 8 (R2)
; flag end address is: 28 (R7)
; pb end address is: 36 (R9)
; ccnt end address is: 32 (R8)
; prec end address is: 16 (R4)
; ap end address is: 0 (R0)
; f end address is: 4 (R1)
0x118E	0x460E    MOV	R6, R1
0x1190	0xB211    SXTH	R1, R2
0x1192	0x4602    MOV	R2, R0
0x1194	0xB220    SXTH	R0, R4
;__Lib_Sprintf.c, 477 :: 		
L___Lib_Sprintf__doprntf132:
; prec start address is: 0 (R0)
; ccnt start address is: 32 (R8)
; pb start address is: 36 (R9)
; width start address is: 4 (R1)
; ap start address is: 8 (R2)
; f start address is: 24 (R6)
; flag start address is: 28 (R7)
0x1196	0xF89D3014  LDRB	R3, [SP, #20]
0x119A	0xB1DB    CBZ	R3, L___Lib_Sprintf__doprntf133
;__Lib_Sprintf.c, 478 :: 		
0x119C	0xF89D3014  LDRB	R3, [SP, #20]
0x11A0	0x1E5B    SUBS	R3, R3, #1
0x11A2	0xB2DB    UXTB	R3, R3
0x11A4	0xF88D3014  STRB	R3, [SP, #20]
0x11A8	0x009C    LSLS	R4, R3, #2
0x11AA	0x4B56    LDR	R3, [PC, #344]
0x11AC	0x191B    ADDS	R3, R3, R4
0x11AE	0x681C    LDR	R4, [R3, #0]
0x11B0	0x9B08    LDR	R3, [SP, #32]
0x11B2	0xFBB3F5F4  UDIV	R5, R3, R4
0x11B6	0x240A    MOVS	R4, #10
0x11B8	0xFBB5F3F4  UDIV	R3, R5, R4
0x11BC	0xFB045313  MLS	R3, R4, R3, R5
0x11C0	0x3330    ADDS	R3, #48
0x11C2	0xF8893000  STRB	R3, [R9, #0]
0x11C6	0xF1090901  ADD	R9, R9, #1
0x11CA	0xF1080801  ADD	R8, R8, #1
0x11CE	0xFA0FF888  SXTH	R8, R8
;__Lib_Sprintf.c, 479 :: 		
0x11D2	0xE7E0    B	L___Lib_Sprintf__doprntf132
L___Lib_Sprintf__doprntf133:
;__Lib_Sprintf.c, 480 :: 		
0x11D4	0xB204    SXTH	R4, R0
; f end address is: 24 (R6)
; flag end address is: 28 (R7)
; pb end address is: 36 (R9)
; ccnt end address is: 32 (R8)
; prec end address is: 0 (R0)
; ap end address is: 8 (R2)
0x11D6	0x4610    MOV	R0, R2
0x11D8	0xB20A    SXTH	R2, R1
0x11DA	0x4631    MOV	R1, R6
0x11DC	0x464E    MOV	R6, R9
0x11DE	0xFA0FF588  SXTH	R5, R8
L___Lib_Sprintf__doprntf134:
; width end address is: 4 (R1)
; flag start address is: 28 (R7)
; f start address is: 4 (R1)
; ap start address is: 0 (R0)
; width start address is: 8 (R2)
; pb start address is: 24 (R6)
; ccnt start address is: 20 (R5)
; prec start address is: 16 (R4)
0x11E2	0xB13C    CBZ	R4, L___Lib_Sprintf__doprntf135
;__Lib_Sprintf.c, 481 :: 		
0x11E4	0x2330    MOVS	R3, #48
0x11E6	0x7033    STRB	R3, [R6, #0]
0x11E8	0x1C76    ADDS	R6, R6, #1
0x11EA	0x1C6D    ADDS	R5, R5, #1
0x11EC	0xB22D    SXTH	R5, R5
;__Lib_Sprintf.c, 482 :: 		
0x11EE	0x1E64    SUBS	R4, R4, #1
0x11F0	0xB224    SXTH	R4, R4
;__Lib_Sprintf.c, 483 :: 		
; prec end address is: 16 (R4)
0x11F2	0xE7F6    B	L___Lib_Sprintf__doprntf134
L___Lib_Sprintf__doprntf135:
;__Lib_Sprintf.c, 484 :: 		
; width end address is: 8 (R2)
; flag end address is: 28 (R7)
; ap end address is: 0 (R0)
; ccnt end address is: 20 (R5)
; f end address is: 4 (R1)
0x11F4	0xB22C    SXTH	R4, R5
0x11F6	0x4635    MOV	R5, R6
L___Lib_Sprintf__doprntf131:
; pb end address is: 24 (R6)
;__Lib_Sprintf.c, 485 :: 		
; ccnt start address is: 16 (R4)
; pb start address is: 20 (R5)
; width start address is: 8 (R2)
; ap start address is: 0 (R0)
; f start address is: 4 (R1)
; flag start address is: 28 (R7)
0x11F8	0xF0070320  AND	R3, R7, #32
0x11FC	0xB29B    UXTH	R3, R3
0x11FE	0xB12B    CBZ	R3, L___Lib_Sprintf__doprntf136
;__Lib_Sprintf.c, 486 :: 		
0x1200	0x2345    MOVS	R3, #69
0x1202	0x702B    STRB	R3, [R5, #0]
0x1204	0x1C6D    ADDS	R5, R5, #1
0x1206	0x1C64    ADDS	R4, R4, #1
0x1208	0xB224    SXTH	R4, R4
0x120A	0xE004    B	L___Lib_Sprintf__doprntf137
L___Lib_Sprintf__doprntf136:
;__Lib_Sprintf.c, 488 :: 		
0x120C	0x2365    MOVS	R3, #101
0x120E	0x702B    STRB	R3, [R5, #0]
0x1210	0x1C6D    ADDS	R5, R5, #1
0x1212	0x1C64    ADDS	R4, R4, #1
0x1214	0xB224    SXTH	R4, R4
; ccnt end address is: 16 (R4)
; pb end address is: 20 (R5)
L___Lib_Sprintf__doprntf137:
;__Lib_Sprintf.c, 489 :: 		
; ccnt start address is: 16 (R4)
; pb start address is: 20 (R5)
0x1216	0xF9BD301C  LDRSH	R3, [SP, #28]
0x121A	0x2B00    CMP	R3, #0
0x121C	0xDA0B    BGE	L___Lib_Sprintf__doprntf138
;__Lib_Sprintf.c, 490 :: 		
0x121E	0xF9BD301C  LDRSH	R3, [SP, #28]
0x1222	0x425B    RSBS	R3, R3, #0
0x1224	0xF8AD301C  STRH	R3, [SP, #28]
;__Lib_Sprintf.c, 491 :: 		
0x1228	0x232D    MOVS	R3, #45
0x122A	0x702B    STRB	R3, [R5, #0]
0x122C	0xF1050801  ADD	R8, R5, #1
; pb end address is: 20 (R5)
; pb start address is: 32 (R8)
0x1230	0x1C65    ADDS	R5, R4, #1
0x1232	0xB22D    SXTH	R5, R5
; ccnt end address is: 16 (R4)
; ccnt start address is: 20 (R5)
;__Lib_Sprintf.c, 492 :: 		
; pb end address is: 32 (R8)
; ccnt end address is: 20 (R5)
0x1234	0xE005    B	L___Lib_Sprintf__doprntf139
L___Lib_Sprintf__doprntf138:
;__Lib_Sprintf.c, 494 :: 		
; pb start address is: 20 (R5)
; ccnt start address is: 16 (R4)
0x1236	0x232B    MOVS	R3, #43
0x1238	0x702B    STRB	R3, [R5, #0]
0x123A	0xF1050801  ADD	R8, R5, #1
; pb end address is: 20 (R5)
; pb start address is: 32 (R8)
0x123E	0x1C65    ADDS	R5, R4, #1
0x1240	0xB22D    SXTH	R5, R5
; ccnt end address is: 16 (R4)
; ccnt start address is: 20 (R5)
; pb end address is: 32 (R8)
; ccnt end address is: 20 (R5)
L___Lib_Sprintf__doprntf139:
;__Lib_Sprintf.c, 495 :: 		
; ccnt start address is: 20 (R5)
; pb start address is: 32 (R8)
0x1242	0xF9BD401C  LDRSH	R4, [SP, #28]
0x1246	0x230A    MOVS	R3, #10
0x1248	0xB21B    SXTH	R3, R3
0x124A	0xFB94F3F3  SDIV	R3, R4, R3
0x124E	0xB21B    SXTH	R3, R3
0x1250	0x3330    ADDS	R3, #48
0x1252	0xF8883000  STRB	R3, [R8, #0]
0x1256	0xF1080601  ADD	R6, R8, #1
; pb end address is: 32 (R8)
; pb start address is: 36 (R9)
0x125A	0x46B1    MOV	R9, R6
0x125C	0xF1050801  ADD	R8, R5, #1
0x1260	0xFA0FF888  SXTH	R8, R8
; ccnt end address is: 20 (R5)
; ccnt start address is: 32 (R8)
;__Lib_Sprintf.c, 496 :: 		
0x1264	0xF9BD501C  LDRSH	R5, [SP, #28]
0x1268	0x240A    MOVS	R4, #10
0x126A	0xB224    SXTH	R4, R4
0x126C	0xFB95F3F4  SDIV	R3, R5, R4
0x1270	0xFB045313  MLS	R3, R4, R3, R5
0x1274	0xB21B    SXTH	R3, R3
0x1276	0x3330    ADDS	R3, #48
0x1278	0x7033    STRB	R3, [R6, #0]
0x127A	0xF1090401  ADD	R4, R9, #1
; pb end address is: 36 (R9)
; pb start address is: 16 (R4)
0x127E	0xF1080501  ADD	R5, R8, #1
0x1282	0xB22D    SXTH	R5, R5
; ccnt end address is: 32 (R8)
; ccnt start address is: 20 (R5)
;__Lib_Sprintf.c, 497 :: 		
0x1284	0xF0070308  AND	R3, R7, #8
0x1288	0xB29B    UXTH	R3, R3
; flag end address is: 28 (R7)
0x128A	0xB19B    CBZ	R3, L___Lib_Sprintf__doprntf374
0x128C	0x2A00    CMP	R2, #0
0x128E	0xDD17    BLE	L___Lib_Sprintf__doprntf375
L___Lib_Sprintf__doprntf307:
;__Lib_Sprintf.c, 498 :: 		
0x1290	0xF8AD5004  STRH	R5, [SP, #4]
; ccnt end address is: 20 (R5)
0x1294	0xB215    SXTH	R5, R2
0x1296	0xF9BD2004  LDRSH	R2, [SP, #4]
0x129A	0xE7FF    B	L___Lib_Sprintf__doprntf143
; width end address is: 8 (R2)
L___Lib_Sprintf__doprntf373:
;__Lib_Sprintf.c, 500 :: 		
;__Lib_Sprintf.c, 498 :: 		
L___Lib_Sprintf__doprntf143:
;__Lib_Sprintf.c, 499 :: 		
; ccnt start address is: 8 (R2)
; ccnt start address is: 8 (R2)
; width start address is: 20 (R5)
; pb start address is: 16 (R4)
; f start address is: 4 (R1)
; f end address is: 4 (R1)
; ap start address is: 0 (R0)
; ap end address is: 0 (R0)
; width start address is: 20 (R5)
0x129C	0x2320    MOVS	R3, #32
0x129E	0x7023    STRB	R3, [R4, #0]
0x12A0	0x1C64    ADDS	R4, R4, #1
; pb end address is: 16 (R4)
0x12A2	0x1C52    ADDS	R2, R2, #1
0x12A4	0xB212    SXTH	R2, R2
; ccnt end address is: 8 (R2)
;__Lib_Sprintf.c, 500 :: 		
0x12A6	0x1E6B    SUBS	R3, R5, #1
0x12A8	0xB21B    SXTH	R3, R3
0x12AA	0xB21D    SXTH	R5, R3
; width end address is: 20 (R5)
0x12AC	0x2B00    CMP	R3, #0
0x12AE	0xD1F5    BNE	L___Lib_Sprintf__doprntf373
; width end address is: 20 (R5)
; ccnt end address is: 8 (R2)
; ap end address is: 0 (R0)
; pb end address is: 16 (R4)
; f end address is: 4 (R1)
0x12B0	0x4623    MOV	R3, R4
;__Lib_Sprintf.c, 497 :: 		
0x12B2	0xE001    B	L___Lib_Sprintf__doprntf334
L___Lib_Sprintf__doprntf374:
0x12B4	0xB22A    SXTH	R2, R5
0x12B6	0x4623    MOV	R3, R4
L___Lib_Sprintf__doprntf334:
; ccnt start address is: 8 (R2)
; pb start address is: 12 (R3)
; f start address is: 4 (R1)
; ap start address is: 0 (R0)
0x12B8	0x4605    MOV	R5, R0
; ccnt end address is: 8 (R2)
; ap end address is: 0 (R0)
; pb end address is: 12 (R3)
; f end address is: 4 (R1)
0x12BA	0xB216    SXTH	R6, R2
0x12BC	0x461A    MOV	R2, R3
0x12BE	0xE002    B	L___Lib_Sprintf__doprntf333
L___Lib_Sprintf__doprntf375:
0x12C0	0xB22E    SXTH	R6, R5
0x12C2	0x4605    MOV	R5, R0
0x12C4	0x4622    MOV	R2, R4
L___Lib_Sprintf__doprntf333:
;__Lib_Sprintf.c, 501 :: 		
; ccnt start address is: 24 (R6)
; pb start address is: 8 (R2)
; f start address is: 4 (R1)
; ap start address is: 20 (R5)
; ap end address is: 20 (R5)
; pb end address is: 8 (R2)
; ccnt end address is: 24 (R6)
; f end address is: 4 (R1)
0x12C6	0x4608    MOV	R0, R1
0x12C8	0xF7FFBAEF  B	L___Lib_Sprintf__doprntf10
;__Lib_Sprintf.c, 502 :: 		
L___Lib_Sprintf__doprntf88:
;__Lib_Sprintf.c, 505 :: 		
; width start address is: 24 (R6)
; ccnt start address is: 28 (R7)
; ap start address is: 32 (R8)
; pb start address is: 36 (R9)
; prec start address is: 48 (R12)
; f start address is: 40 (R10)
; flag start address is: 44 (R11)
0x12CC	0xF40B7300  AND	R3, R11, #512
0x12D0	0xB29B    UXTH	R3, R3
0x12D2	0x2B00    CMP	R3, #0
0x12D4	0xF0008073  BEQ	L___Lib_Sprintf__doprntf377
;__Lib_Sprintf.c, 506 :: 		
0x12D8	0xF9BD301C  LDRSH	R3, [SP, #28]
0x12DC	0x2B00    CMP	R3, #0
0x12DE	0xDA07    BGE	L___Lib_Sprintf__doprntf376
;__Lib_Sprintf.c, 507 :: 		
0x12E0	0xF9BD301C  LDRSH	R3, [SP, #28]
0x12E4	0x1E5B    SUBS	R3, R3, #1
0x12E6	0xB21B    SXTH	R3, R3
0x12E8	0xEBAC0003  SUB	R0, R12, R3, LSL #0
0x12EC	0xB200    SXTH	R0, R0
; prec end address is: 48 (R12)
; prec start address is: 0 (R0)
; prec end address is: 0 (R0)
0x12EE	0xE001    B	L___Lib_Sprintf__doprntf147
L___Lib_Sprintf__doprntf376:
;__Lib_Sprintf.c, 506 :: 		
0x12F0	0xFA0FF08C  SXTH	R0, R12
;__Lib_Sprintf.c, 507 :: 		
L___Lib_Sprintf__doprntf147:
;__Lib_Sprintf.c, 508 :: 		
; prec start address is: 0 (R0)
0x12F4	0xED9D0A06  VLDR.32	S0, [SP, #24]
0x12F8	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x12FC	0xEE103A10  VMOV	R3, S0
0x1300	0x9308    STR	R3, [SP, #32]
0x1302	0xE001    B	#2
0x1304	0x89280000  	__Lib_Sprintf_dpowers+0
;__Lib_Sprintf.c, 509 :: 		
0x1308	0x2301    MOVS	R3, #1
0x130A	0xF88D3014  STRB	R3, [SP, #20]
; flag end address is: 44 (R11)
; f end address is: 40 (R10)
; pb end address is: 36 (R9)
; ap end address is: 32 (R8)
; ccnt end address is: 28 (R7)
; width end address is: 24 (R6)
; prec end address is: 0 (R0)
0x130E	0xFA1FF58B  UXTH	R5, R11
L___Lib_Sprintf__doprntf148:
; prec start address is: 0 (R0)
; flag start address is: 20 (R5)
; f start address is: 40 (R10)
; pb start address is: 36 (R9)
; ap start address is: 32 (R8)
; ccnt start address is: 28 (R7)
; width start address is: 24 (R6)
0x1312	0xF89D3014  LDRB	R3, [SP, #20]
0x1316	0x2B0A    CMP	R3, #10
0x1318	0xD00F    BEQ	L___Lib_Sprintf__doprntf149
;__Lib_Sprintf.c, 510 :: 		
0x131A	0xF89D3014  LDRB	R3, [SP, #20]
0x131E	0x009C    LSLS	R4, R3, #2
0x1320	0x4BF8    LDR	R3, [PC, #992]
0x1322	0x191B    ADDS	R3, R3, R4
0x1324	0x681C    LDR	R4, [R3, #0]
0x1326	0x9B08    LDR	R3, [SP, #32]
0x1328	0x42A3    CMP	R3, R4
0x132A	0xD200    BCS	L___Lib_Sprintf__doprntf151
;__Lib_Sprintf.c, 511 :: 		
0x132C	0xE005    B	L___Lib_Sprintf__doprntf149
L___Lib_Sprintf__doprntf151:
;__Lib_Sprintf.c, 509 :: 		
0x132E	0xF89D3014  LDRB	R3, [SP, #20]
0x1332	0x1C5B    ADDS	R3, R3, #1
0x1334	0xF88D3014  STRB	R3, [SP, #20]
;__Lib_Sprintf.c, 511 :: 		
0x1338	0xE7EB    B	L___Lib_Sprintf__doprntf148
L___Lib_Sprintf__doprntf149:
;__Lib_Sprintf.c, 512 :: 		
0x133A	0xF89D3014  LDRB	R3, [SP, #20]
0x133E	0x1AC4    SUB	R4, R0, R3
; prec end address is: 0 (R0)
; prec start address is: 44 (R11)
0x1340	0xFA0FFB84  SXTH	R11, R4
;__Lib_Sprintf.c, 513 :: 		
0x1344	0xED9D0A08  VLDR.32	S0, [SP, #32]
0x1348	0xEEF80A40  VCVT.F32.U32	S1, S0
0x134C	0xED9D0A06  VLDR.32	S0, [SP, #24]
0x1350	0xEE300A60  VSUB.F32	S0, S0, S1
0x1354	0xED8D0A0A  VSTR.32	S0, [SP, #40]
0x1358	0xB260    SXTB	R0, R4
0x135A	0xF7FEFF21  BL	__Lib_Sprintf_scale+0
0x135E	0xEDDD0A0A  VLDR.32	S1, [SP, #40]
0x1362	0xEE600A80  VMUL.F32	S1, S1, S0
0x1366	0xEEB60A00  VMOV.F32	S0, #0.5
0x136A	0xEE300A80  VADD.F32	S0, S1, S0
0x136E	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x1372	0xEE103A10  VMOV	R3, S0
0x1376	0x9308    STR	R3, [SP, #32]
; prec end address is: 44 (R11)
; f end address is: 40 (R10)
; pb end address is: 36 (R9)
; ap end address is: 32 (R8)
; ccnt end address is: 28 (R7)
; width end address is: 24 (R6)
; flag end address is: 20 (R5)
0x1378	0xB239    SXTH	R1, R7
0x137A	0xB2AF    UXTH	R7, R5
0x137C	0xB230    SXTH	R0, R6
0x137E	0x464E    MOV	R6, R9
0x1380	0x4642    MOV	R2, R8
0x1382	0xFA0FF88B  SXTH	R8, R11
;__Lib_Sprintf.c, 514 :: 		
L___Lib_Sprintf__doprntf152:
; prec start address is: 32 (R8)
; width start address is: 0 (R0)
; ccnt start address is: 4 (R1)
; ap start address is: 8 (R2)
; pb start address is: 24 (R6)
; f start address is: 40 (R10)
; flag start address is: 28 (R7)
0x1386	0xF1B80F00  CMP	R8, #0
0x138A	0xD010    BEQ	L___Lib_Sprintf__doprntf336
0x138C	0x9D08    LDR	R5, [SP, #32]
0x138E	0x240A    MOVS	R4, #10
0x1390	0xFBB5F3F4  UDIV	R3, R5, R4
0x1394	0xFB045313  MLS	R3, R4, R3, R5
0x1398	0xB94B    CBNZ	R3, L___Lib_Sprintf__doprntf335
L___Lib_Sprintf__doprntf306:
;__Lib_Sprintf.c, 515 :: 		
0x139A	0x9C08    LDR	R4, [SP, #32]
0x139C	0x230A    MOVS	R3, #10
0x139E	0xFBB4F3F3  UDIV	R3, R4, R3
0x13A2	0x9308    STR	R3, [SP, #32]
;__Lib_Sprintf.c, 516 :: 		
0x13A4	0xF1A80801  SUB	R8, R8, #1
0x13A8	0xFA0FF888  SXTH	R8, R8
;__Lib_Sprintf.c, 517 :: 		
0x13AC	0xE7EB    B	L___Lib_Sprintf__doprntf152
;__Lib_Sprintf.c, 514 :: 		
L___Lib_Sprintf__doprntf336:
L___Lib_Sprintf__doprntf335:
;__Lib_Sprintf.c, 518 :: 		
0x13AE	0x46B1    MOV	R9, R6
; prec end address is: 32 (R8)
; f end address is: 40 (R10)
; pb end address is: 24 (R6)
; flag end address is: 28 (R7)
; ccnt end address is: 4 (R1)
; ap end address is: 8 (R2)
0x13B0	0xB206    SXTH	R6, R0
0x13B2	0xB2BD    UXTH	R5, R7
0x13B4	0xB20F    SXTH	R7, R1
0x13B6	0xFA0FF488  SXTH	R4, R8
0x13BA	0x4690    MOV	R8, R2
0x13BC	0xE003    B	L___Lib_Sprintf__doprntf146
; width end address is: 0 (R0)
L___Lib_Sprintf__doprntf377:
;__Lib_Sprintf.c, 505 :: 		
0x13BE	0xFA1FF58B  UXTH	R5, R11
0x13C2	0xFA0FF48C  SXTH	R4, R12
;__Lib_Sprintf.c, 518 :: 		
L___Lib_Sprintf__doprntf146:
;__Lib_Sprintf.c, 519 :: 		
; flag start address is: 20 (R5)
; prec start address is: 16 (R4)
; f start address is: 40 (R10)
; pb start address is: 36 (R9)
; ap start address is: 32 (R8)
; ccnt start address is: 28 (R7)
; width start address is: 24 (R6)
0x13C6	0x2C0C    CMP	R4, #12
0x13C8	0xDC08    BGT	L___Lib_Sprintf__doprntf156
;__Lib_Sprintf.c, 520 :: 		
0x13CA	0xB2E0    UXTB	R0, R4
0x13CC	0xF7FFF920  BL	__Lib_Sprintf_fround+0
0x13D0	0xEDDD0A06  VLDR.32	S1, [SP, #24]
0x13D4	0xEE300A80  VADD.F32	S0, S1, S0
0x13D8	0xED8D0A06  VSTR.32	S0, [SP, #24]
L___Lib_Sprintf__doprntf156:
;__Lib_Sprintf.c, 523 :: 		
0x13DC	0xED9D0A06  VLDR.32	S0, [SP, #24]
0x13E0	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x13E4	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x13E8	0xD039    BEQ	L___Lib_Sprintf__doprntf339
0x13EA	0xED9D0A06  VLDR.32	S0, [SP, #24]
0x13EE	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x13F2	0xEE103A10  VMOV	R3, S0
0x13F6	0xBB93    CBNZ	R3, L___Lib_Sprintf__doprntf338
0x13F8	0xF9BD301C  LDRSH	R3, [SP, #28]
0x13FC	0x2B01    CMP	R3, #1
0x13FE	0xDD2E    BLE	L___Lib_Sprintf__doprntf337
L___Lib_Sprintf__doprntf305:
;__Lib_Sprintf.c, 526 :: 		
0x1400	0xF9BD001C  LDRSH	R0, [SP, #28]
0x1404	0xF7FEFECC  BL	__Lib_Sprintf_scale+0
0x1408	0xEDDD0A06  VLDR.32	S1, [SP, #24]
0x140C	0xEEC00A80  VDIV.F32	S1, S1, S0
0x1410	0x4BBD    LDR	R3, [PC, #756]
0x1412	0xEE003A10  VMOV	S0, R3
0x1416	0xEEF40AC0  VCMPE.F32	S1, S0
0x141A	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x141E	0xDA05    BGE	L___Lib_Sprintf__doprntf160
;__Lib_Sprintf.c, 527 :: 		
0x1420	0xF9BD301C  LDRSH	R3, [SP, #28]
0x1424	0x3B09    SUBS	R3, #9
0x1426	0xF8AD301C  STRH	R3, [SP, #28]
0x142A	0xE004    B	L___Lib_Sprintf__doprntf161
L___Lib_Sprintf__doprntf160:
;__Lib_Sprintf.c, 529 :: 		
0x142C	0xF9BD301C  LDRSH	R3, [SP, #28]
0x1430	0x3B08    SUBS	R3, #8
0x1432	0xF8AD301C  STRH	R3, [SP, #28]
L___Lib_Sprintf__doprntf161:
;__Lib_Sprintf.c, 530 :: 		
0x1436	0xF9BD001C  LDRSH	R0, [SP, #28]
0x143A	0xF7FEFEB1  BL	__Lib_Sprintf_scale+0
0x143E	0xEDDD0A06  VLDR.32	S1, [SP, #24]
0x1442	0xEE800A80  VDIV.F32	S0, S1, S0
0x1446	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x144A	0xEE103A10  VMOV	R3, S0
0x144E	0x9308    STR	R3, [SP, #32]
;__Lib_Sprintf.c, 531 :: 		
0x1450	0xF04F0300  MOV	R3, #0
0x1454	0xEE003A10  VMOV	S0, R3
0x1458	0xED8D0A06  VSTR.32	S0, [SP, #24]
;__Lib_Sprintf.c, 532 :: 		
0x145C	0xE014    B	L___Lib_Sprintf__doprntf162
;__Lib_Sprintf.c, 523 :: 		
L___Lib_Sprintf__doprntf339:
L___Lib_Sprintf__doprntf338:
L___Lib_Sprintf__doprntf337:
;__Lib_Sprintf.c, 534 :: 		
0x145E	0xED9D0A06  VLDR.32	S0, [SP, #24]
0x1462	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x1466	0xEE103A10  VMOV	R3, S0
0x146A	0x9308    STR	R3, [SP, #32]
;__Lib_Sprintf.c, 535 :: 		
0x146C	0xED9D0A08  VLDR.32	S0, [SP, #32]
0x1470	0xEEF80A40  VCVT.F32.U32	S1, S0
0x1474	0xED9D0A06  VLDR.32	S0, [SP, #24]
0x1478	0xEE300A60  VSUB.F32	S0, S0, S1
0x147C	0xED8D0A06  VSTR.32	S0, [SP, #24]
;__Lib_Sprintf.c, 536 :: 		
0x1480	0x2300    MOVS	R3, #0
0x1482	0xB21B    SXTH	R3, R3
0x1484	0xF8AD301C  STRH	R3, [SP, #28]
;__Lib_Sprintf.c, 537 :: 		
L___Lib_Sprintf__doprntf162:
;__Lib_Sprintf.c, 538 :: 		
0x1488	0x2301    MOVS	R3, #1
0x148A	0xF88D3014  STRB	R3, [SP, #20]
; f end address is: 40 (R10)
; pb end address is: 36 (R9)
; ap end address is: 32 (R8)
; ccnt end address is: 28 (R7)
; width end address is: 24 (R6)
; prec end address is: 16 (R4)
; flag end address is: 20 (R5)
0x148E	0xB222    SXTH	R2, R4
0x1490	0x4651    MOV	R1, R10
0x1492	0x4640    MOV	R0, R8
0x1494	0xFA0FF886  SXTH	R8, R6
0x1498	0xB23E    SXTH	R6, R7
0x149A	0x464F    MOV	R7, R9
L___Lib_Sprintf__doprntf163:
; width start address is: 32 (R8)
; ccnt start address is: 24 (R6)
; ap start address is: 0 (R0)
; pb start address is: 28 (R7)
; f start address is: 4 (R1)
; prec start address is: 8 (R2)
; flag start address is: 20 (R5)
0x149C	0xF89D3014  LDRB	R3, [SP, #20]
0x14A0	0x2B0A    CMP	R3, #10
0x14A2	0xD00F    BEQ	L___Lib_Sprintf__doprntf164
;__Lib_Sprintf.c, 539 :: 		
0x14A4	0xF89D3014  LDRB	R3, [SP, #20]
0x14A8	0x009C    LSLS	R4, R3, #2
0x14AA	0x4B96    LDR	R3, [PC, #600]
0x14AC	0x191B    ADDS	R3, R3, R4
0x14AE	0x681C    LDR	R4, [R3, #0]
0x14B0	0x9B08    LDR	R3, [SP, #32]
0x14B2	0x42A3    CMP	R3, R4
0x14B4	0xD200    BCS	L___Lib_Sprintf__doprntf166
;__Lib_Sprintf.c, 540 :: 		
0x14B6	0xE005    B	L___Lib_Sprintf__doprntf164
L___Lib_Sprintf__doprntf166:
;__Lib_Sprintf.c, 538 :: 		
0x14B8	0xF89D3014  LDRB	R3, [SP, #20]
0x14BC	0x1C5B    ADDS	R3, R3, #1
0x14BE	0xF88D3014  STRB	R3, [SP, #20]
;__Lib_Sprintf.c, 540 :: 		
0x14C2	0xE7EB    B	L___Lib_Sprintf__doprntf163
L___Lib_Sprintf__doprntf164:
;__Lib_Sprintf.c, 541 :: 		
0x14C4	0xF89D3014  LDRB	R3, [SP, #20]
0x14C8	0x18D4    ADDS	R4, R2, R3
0x14CA	0xB224    SXTH	R4, R4
0x14CC	0xF9BD301C  LDRSH	R3, [SP, #28]
0x14D0	0x18E3    ADDS	R3, R4, R3
0x14D2	0xB21B    SXTH	R3, R3
0x14D4	0xEBA80403  SUB	R4, R8, R3, LSL #0
0x14D8	0xB224    SXTH	R4, R4
; width end address is: 32 (R8)
; width start address is: 16 (R4)
;__Lib_Sprintf.c, 542 :: 		
0x14DA	0xF4056300  AND	R3, R5, #2048
0x14DE	0xB29B    UXTH	R3, R3
0x14E0	0xB90B    CBNZ	R3, L___Lib_Sprintf__doprntf341
0x14E2	0xB902    CBNZ	R2, L___Lib_Sprintf__doprntf340
0x14E4	0xE001    B	L___Lib_Sprintf__doprntf169
L___Lib_Sprintf__doprntf341:
L___Lib_Sprintf__doprntf340:
;__Lib_Sprintf.c, 543 :: 		
0x14E6	0x1E64    SUBS	R4, R4, #1
0x14E8	0xB224    SXTH	R4, R4
; width end address is: 16 (R4)
L___Lib_Sprintf__doprntf169:
;__Lib_Sprintf.c, 544 :: 		
; width start address is: 16 (R4)
0x14EA	0xF0050303  AND	R3, R5, #3
0x14EE	0xB29B    UXTH	R3, R3
0x14F0	0xB113    CBZ	R3, L___Lib_Sprintf__doprntf378
;__Lib_Sprintf.c, 545 :: 		
0x14F2	0x1E64    SUBS	R4, R4, #1
0x14F4	0xB224    SXTH	R4, R4
; width end address is: 16 (R4)
0x14F6	0xE7FF    B	L___Lib_Sprintf__doprntf170
L___Lib_Sprintf__doprntf378:
;__Lib_Sprintf.c, 544 :: 		
;__Lib_Sprintf.c, 545 :: 		
L___Lib_Sprintf__doprntf170:
;__Lib_Sprintf.c, 546 :: 		
; width start address is: 16 (R4)
0x14F8	0xF0050304  AND	R3, R5, #4
0x14FC	0xB29B    UXTH	R3, R3
0x14FE	0x2B00    CMP	R3, #0
0x1500	0xD038    BEQ	L___Lib_Sprintf__doprntf171
;__Lib_Sprintf.c, 547 :: 		
0x1502	0xF0050302  AND	R3, R5, #2
0x1506	0xB29B    UXTH	R3, R3
0x1508	0xB18B    CBZ	R3, L___Lib_Sprintf__doprntf172
;__Lib_Sprintf.c, 548 :: 		
0x150A	0xF0050301  AND	R3, R5, #1
0x150E	0xB29B    UXTH	R3, R3
0x1510	0xB11B    CBZ	R3, L___Lib_Sprintf__doprntf173
0x1512	0x232D    MOVS	R3, #45
0x1514	0xF88D300E  STRB	R3, [SP, #14]
0x1518	0xE002    B	L___Lib_Sprintf__doprntf174
L___Lib_Sprintf__doprntf173:
0x151A	0x232B    MOVS	R3, #43
0x151C	0xF88D300E  STRB	R3, [SP, #14]
L___Lib_Sprintf__doprntf174:
0x1520	0xF89D300E  LDRB	R3, [SP, #14]
0x1524	0x703B    STRB	R3, [R7, #0]
0x1526	0x1C7F    ADDS	R7, R7, #1
0x1528	0x1C76    ADDS	R6, R6, #1
0x152A	0xB236    SXTH	R6, R6
0x152C	0xE00F    B	L___Lib_Sprintf__doprntf175
L___Lib_Sprintf__doprntf172:
;__Lib_Sprintf.c, 550 :: 		
0x152E	0xF0050301  AND	R3, R5, #1
0x1532	0xB29B    UXTH	R3, R3
0x1534	0xB13B    CBZ	R3, L___Lib_Sprintf__doprntf379
;__Lib_Sprintf.c, 551 :: 		
0x1536	0x2320    MOVS	R3, #32
0x1538	0x703B    STRB	R3, [R7, #0]
0x153A	0x1C7F    ADDS	R7, R7, #1
0x153C	0x1C76    ADDS	R6, R6, #1
0x153E	0xB236    SXTH	R6, R6
; pb end address is: 28 (R7)
; ccnt end address is: 24 (R6)
0x1540	0xB233    SXTH	R3, R6
0x1542	0x463E    MOV	R6, R7
0x1544	0xE001    B	L___Lib_Sprintf__doprntf176
L___Lib_Sprintf__doprntf379:
;__Lib_Sprintf.c, 550 :: 		
0x1546	0xB233    SXTH	R3, R6
0x1548	0x463E    MOV	R6, R7
;__Lib_Sprintf.c, 551 :: 		
L___Lib_Sprintf__doprntf176:
; ccnt start address is: 12 (R3)
; pb start address is: 24 (R6)
0x154A	0x4637    MOV	R7, R6
; pb end address is: 24 (R6)
; ccnt end address is: 12 (R3)
0x154C	0xB21E    SXTH	R6, R3
L___Lib_Sprintf__doprntf175:
;__Lib_Sprintf.c, 552 :: 		
; pb start address is: 28 (R7)
; ccnt start address is: 24 (R6)
; prec end address is: 8 (R2)
; ap end address is: 0 (R0)
; pb end address is: 28 (R7)
; width end address is: 16 (R4)
; ccnt end address is: 24 (R6)
; flag end address is: 20 (R5)
; f end address is: 4 (R1)
L___Lib_Sprintf__doprntf177:
; ccnt start address is: 24 (R6)
; pb start address is: 28 (R7)
; width start address is: 16 (R4)
; flag start address is: 20 (R5)
; prec start address is: 8 (R2)
; f start address is: 4 (R1)
; ap start address is: 0 (R0)
0x154E	0x2C00    CMP	R4, #0
0x1550	0xDD07    BLE	L___Lib_Sprintf__doprntf178
;__Lib_Sprintf.c, 553 :: 		
0x1552	0x2330    MOVS	R3, #48
0x1554	0x703B    STRB	R3, [R7, #0]
0x1556	0x1C7F    ADDS	R7, R7, #1
0x1558	0x1C76    ADDS	R6, R6, #1
0x155A	0xB236    SXTH	R6, R6
;__Lib_Sprintf.c, 554 :: 		
0x155C	0x1E64    SUBS	R4, R4, #1
0x155E	0xB224    SXTH	R4, R4
;__Lib_Sprintf.c, 555 :: 		
0x1560	0xE7F5    B	L___Lib_Sprintf__doprntf177
L___Lib_Sprintf__doprntf178:
;__Lib_Sprintf.c, 556 :: 		
0x1562	0x9001    STR	R0, [SP, #4]
0x1564	0x46B9    MOV	R9, R7
0x1566	0xB227    SXTH	R7, R4
0x1568	0xFA0FF886  SXTH	R8, R6
0x156C	0xB2AE    UXTH	R6, R5
0x156E	0xB210    SXTH	R0, R2
0x1570	0x9A01    LDR	R2, [SP, #4]
0x1572	0xE048    B	L___Lib_Sprintf__doprntf179
L___Lib_Sprintf__doprntf171:
;__Lib_Sprintf.c, 558 :: 		
0x1574	0xF0050308  AND	R3, R5, #8
0x1578	0xB29B    UXTH	R3, R3
0x157A	0xB98B    CBNZ	R3, L___Lib_Sprintf__doprntf380
; prec end address is: 8 (R2)
; ap end address is: 0 (R0)
; pb end address is: 28 (R7)
; width end address is: 16 (R4)
; ccnt end address is: 24 (R6)
; flag end address is: 20 (R5)
; f end address is: 4 (R1)
;__Lib_Sprintf.c, 559 :: 		
L___Lib_Sprintf__doprntf181:
; width start address is: 16 (R4)
; flag start address is: 20 (R5)
; prec start address is: 8 (R2)
; f start address is: 4 (R1)
; pb start address is: 28 (R7)
; ap start address is: 0 (R0)
; ccnt start address is: 24 (R6)
0x157C	0x2C00    CMP	R4, #0
0x157E	0xDD07    BLE	L___Lib_Sprintf__doprntf182
;__Lib_Sprintf.c, 560 :: 		
0x1580	0x2320    MOVS	R3, #32
0x1582	0x703B    STRB	R3, [R7, #0]
0x1584	0x1C7F    ADDS	R7, R7, #1
0x1586	0x1C76    ADDS	R6, R6, #1
0x1588	0xB236    SXTH	R6, R6
;__Lib_Sprintf.c, 561 :: 		
0x158A	0x1E64    SUBS	R4, R4, #1
0x158C	0xB224    SXTH	R4, R4
;__Lib_Sprintf.c, 562 :: 		
0x158E	0xE7F5    B	L___Lib_Sprintf__doprntf181
L___Lib_Sprintf__doprntf182:
0x1590	0xF8AD4004  STRH	R4, [SP, #4]
; ap end address is: 0 (R0)
; pb end address is: 28 (R7)
; width end address is: 16 (R4)
; ccnt end address is: 24 (R6)
; flag end address is: 20 (R5)
; f end address is: 4 (R1)
0x1594	0x460C    MOV	R4, R1
0x1596	0xB2A9    UXTH	R1, R5
0x1598	0x4605    MOV	R5, R0
0x159A	0xF9BD0004  LDRSH	R0, [SP, #4]
0x159E	0xE004    B	L___Lib_Sprintf__doprntf180
; prec end address is: 8 (R2)
L___Lib_Sprintf__doprntf380:
;__Lib_Sprintf.c, 558 :: 		
0x15A0	0x9101    STR	R1, [SP, #4]
0x15A2	0xB2A9    UXTH	R1, R5
0x15A4	0x4605    MOV	R5, R0
0x15A6	0xB220    SXTH	R0, R4
0x15A8	0x9C01    LDR	R4, [SP, #4]
;__Lib_Sprintf.c, 562 :: 		
L___Lib_Sprintf__doprntf180:
;__Lib_Sprintf.c, 563 :: 		
; width start address is: 0 (R0)
; flag start address is: 4 (R1)
; prec start address is: 8 (R2)
; f start address is: 16 (R4)
; pb start address is: 28 (R7)
; ap start address is: 20 (R5)
; ccnt start address is: 24 (R6)
0x15AA	0xF0010302  AND	R3, R1, #2
0x15AE	0xB29B    UXTH	R3, R3
0x15B0	0xB193    CBZ	R3, L___Lib_Sprintf__doprntf183
;__Lib_Sprintf.c, 564 :: 		
0x15B2	0xF0010301  AND	R3, R1, #1
0x15B6	0xB29B    UXTH	R3, R3
0x15B8	0xB11B    CBZ	R3, L___Lib_Sprintf__doprntf184
0x15BA	0x232D    MOVS	R3, #45
0x15BC	0xF88D300F  STRB	R3, [SP, #15]
0x15C0	0xE002    B	L___Lib_Sprintf__doprntf185
L___Lib_Sprintf__doprntf184:
0x15C2	0x232B    MOVS	R3, #43
0x15C4	0xF88D300F  STRB	R3, [SP, #15]
L___Lib_Sprintf__doprntf185:
0x15C8	0xF89D300F  LDRB	R3, [SP, #15]
0x15CC	0x703B    STRB	R3, [R7, #0]
0x15CE	0x1C7F    ADDS	R7, R7, #1
0x15D0	0x1C73    ADDS	R3, R6, #1
0x15D2	0xB21B    SXTH	R3, R3
; ccnt end address is: 24 (R6)
; ccnt start address is: 12 (R3)
; ccnt end address is: 12 (R3)
0x15D4	0x463E    MOV	R6, R7
0x15D6	0xE00E    B	L___Lib_Sprintf__doprntf186
L___Lib_Sprintf__doprntf183:
;__Lib_Sprintf.c, 566 :: 		
; ccnt start address is: 24 (R6)
0x15D8	0xF0010301  AND	R3, R1, #1
0x15DC	0xB29B    UXTH	R3, R3
0x15DE	0xB133    CBZ	R3, L___Lib_Sprintf__doprntf381
;__Lib_Sprintf.c, 567 :: 		
0x15E0	0x2320    MOVS	R3, #32
0x15E2	0x703B    STRB	R3, [R7, #0]
0x15E4	0x1C7F    ADDS	R7, R7, #1
0x15E6	0x1C76    ADDS	R6, R6, #1
0x15E8	0xB236    SXTH	R6, R6
; pb end address is: 28 (R7)
; ccnt end address is: 24 (R6)
0x15EA	0x463B    MOV	R3, R7
0x15EC	0xE000    B	L___Lib_Sprintf__doprntf187
L___Lib_Sprintf__doprntf381:
;__Lib_Sprintf.c, 566 :: 		
0x15EE	0x463B    MOV	R3, R7
;__Lib_Sprintf.c, 567 :: 		
L___Lib_Sprintf__doprntf187:
; ccnt start address is: 24 (R6)
; pb start address is: 12 (R3)
0x15F0	0x9301    STR	R3, [SP, #4]
; pb end address is: 12 (R3)
; ccnt end address is: 24 (R6)
0x15F2	0xB233    SXTH	R3, R6
0x15F4	0x9E01    LDR	R6, [SP, #4]
L___Lib_Sprintf__doprntf186:
;__Lib_Sprintf.c, 568 :: 		
; pb start address is: 24 (R6)
; ccnt start address is: 12 (R3)
0x15F6	0xB207    SXTH	R7, R0
; width end address is: 0 (R0)
; prec end address is: 8 (R2)
; f end address is: 16 (R4)
; pb end address is: 24 (R6)
; flag end address is: 4 (R1)
; ccnt end address is: 12 (R3)
; ap end address is: 20 (R5)
0x15F8	0xB210    SXTH	R0, R2
0x15FA	0x462A    MOV	R2, R5
0x15FC	0x46B1    MOV	R9, R6
0x15FE	0xB28E    UXTH	R6, R1
0x1600	0x4621    MOV	R1, R4
0x1602	0xFA0FF883  SXTH	R8, R3
L___Lib_Sprintf__doprntf179:
;__Lib_Sprintf.c, 569 :: 		
; ccnt start address is: 32 (R8)
; pb start address is: 36 (R9)
; ap start address is: 8 (R2)
; f start address is: 4 (R1)
; prec start address is: 0 (R0)
; flag start address is: 24 (R6)
; width start address is: 28 (R7)
; flag end address is: 24 (R6)
; width end address is: 28 (R7)
; pb end address is: 36 (R9)
; ccnt end address is: 32 (R8)
; prec end address is: 0 (R0)
; ap end address is: 8 (R2)
; f end address is: 4 (R1)
L___Lib_Sprintf__doprntf188:
; width start address is: 28 (R7)
; flag start address is: 24 (R6)
; prec start address is: 0 (R0)
; f start address is: 4 (R1)
; ap start address is: 8 (R2)
; pb start address is: 36 (R9)
; ccnt start address is: 32 (R8)
0x1606	0xF89D4014  LDRB	R4, [SP, #20]
0x160A	0xF89D3014  LDRB	R3, [SP, #20]
0x160E	0x1E5B    SUBS	R3, R3, #1
0x1610	0xF88D3014  STRB	R3, [SP, #20]
0x1614	0xB1BC    CBZ	R4, L___Lib_Sprintf__doprntf189
;__Lib_Sprintf.c, 570 :: 		
0x1616	0xF89D3014  LDRB	R3, [SP, #20]
0x161A	0x009C    LSLS	R4, R3, #2
0x161C	0x4B39    LDR	R3, [PC, #228]
0x161E	0x191B    ADDS	R3, R3, R4
0x1620	0x681C    LDR	R4, [R3, #0]
0x1622	0x9B08    LDR	R3, [SP, #32]
0x1624	0xFBB3F5F4  UDIV	R5, R3, R4
0x1628	0x240A    MOVS	R4, #10
0x162A	0xFBB5F3F4  UDIV	R3, R5, R4
0x162E	0xFB045313  MLS	R3, R4, R3, R5
0x1632	0x3330    ADDS	R3, #48
0x1634	0xF8893000  STRB	R3, [R9, #0]
0x1638	0xF1090901  ADD	R9, R9, #1
0x163C	0xF1080801  ADD	R8, R8, #1
0x1640	0xFA0FF888  SXTH	R8, R8
0x1644	0xE7DF    B	L___Lib_Sprintf__doprntf188
L___Lib_Sprintf__doprntf189:
;__Lib_Sprintf.c, 571 :: 		
; width end address is: 28 (R7)
; pb end address is: 36 (R9)
; ccnt end address is: 32 (R8)
; prec end address is: 0 (R0)
; ap end address is: 8 (R2)
; f end address is: 4 (R1)
0x1646	0x460D    MOV	R5, R1
0x1648	0x4614    MOV	R4, R2
0x164A	0x46CA    MOV	R10, R9
0x164C	0xFA0FF988  SXTH	R9, R8
L___Lib_Sprintf__doprntf190:
; flag end address is: 24 (R6)
; ccnt start address is: 36 (R9)
; pb start address is: 40 (R10)
; ap start address is: 16 (R4)
; f start address is: 20 (R5)
; prec start address is: 0 (R0)
; flag start address is: 24 (R6)
; width start address is: 28 (R7)
0x1650	0xF9BD301C  LDRSH	R3, [SP, #28]
0x1654	0x2B00    CMP	R3, #0
0x1656	0xDD0E    BLE	L___Lib_Sprintf__doprntf191
;__Lib_Sprintf.c, 572 :: 		
0x1658	0x2330    MOVS	R3, #48
0x165A	0xF88A3000  STRB	R3, [R10, #0]
0x165E	0xF10A0A01  ADD	R10, R10, #1
0x1662	0xF1090901  ADD	R9, R9, #1
0x1666	0xFA0FF989  SXTH	R9, R9
;__Lib_Sprintf.c, 573 :: 		
0x166A	0xF9BD301C  LDRSH	R3, [SP, #28]
0x166E	0x1E5B    SUBS	R3, R3, #1
0x1670	0xF8AD301C  STRH	R3, [SP, #28]
;__Lib_Sprintf.c, 574 :: 		
0x1674	0xE7EC    B	L___Lib_Sprintf__doprntf190
L___Lib_Sprintf__doprntf191:
;__Lib_Sprintf.c, 575 :: 		
0x1676	0x2808    CMP	R0, #8
0x1678	0xDD03    BLE	L___Lib_Sprintf__doprntf192
;__Lib_Sprintf.c, 576 :: 		
0x167A	0x2308    MOVS	R3, #8
0x167C	0xF88D3014  STRB	R3, [SP, #20]
0x1680	0xE001    B	L___Lib_Sprintf__doprntf193
L___Lib_Sprintf__doprntf192:
;__Lib_Sprintf.c, 578 :: 		
0x1682	0xF88D0014  STRB	R0, [SP, #20]
L___Lib_Sprintf__doprntf193:
;__Lib_Sprintf.c, 579 :: 		
0x1686	0xF89D3014  LDRB	R3, [SP, #20]
0x168A	0x1AC3    SUB	R3, R0, R3
; prec end address is: 0 (R0)
; prec start address is: 32 (R8)
0x168C	0xFA0FF883  SXTH	R8, R3
;__Lib_Sprintf.c, 580 :: 		
0x1690	0xF89D3014  LDRB	R3, [SP, #20]
0x1694	0xB923    CBNZ	R3, L___Lib_Sprintf__doprntf343
0x1696	0xF4066300  AND	R3, R6, #2048
0x169A	0xB29B    UXTH	R3, R3
0x169C	0xB903    CBNZ	R3, L___Lib_Sprintf__doprntf342
0x169E	0xE00A    B	L___Lib_Sprintf__doprntf196
L___Lib_Sprintf__doprntf343:
L___Lib_Sprintf__doprntf342:
;__Lib_Sprintf.c, 581 :: 		
0x16A0	0x232E    MOVS	R3, #46
0x16A2	0xF88A3000  STRB	R3, [R10, #0]
0x16A6	0xF10A0301  ADD	R3, R10, #1
; pb end address is: 40 (R10)
; pb start address is: 0 (R0)
0x16AA	0x4618    MOV	R0, R3
0x16AC	0xF1090901  ADD	R9, R9, #1
0x16B0	0xFA0FF989  SXTH	R9, R9
; pb end address is: 0 (R0)
; ccnt end address is: 36 (R9)
0x16B4	0x4682    MOV	R10, R0
L___Lib_Sprintf__doprntf196:
;__Lib_Sprintf.c, 583 :: 		
; ccnt start address is: 36 (R9)
; pb start address is: 40 (R10)
0x16B6	0xF89D0014  LDRB	R0, [SP, #20]
0x16BA	0xF7FEFD71  BL	__Lib_Sprintf_scale+0
0x16BE	0xEDDD0A06  VLDR.32	S1, [SP, #24]
0x16C2	0xEE200A80  VMUL.F32	S0, S1, S0
0x16C6	0xEEBD0A40  VCVT.S32.F32	S0, S0
0x16CA	0xEE103A10  VMOV	R3, S0
0x16CE	0x9308    STR	R3, [SP, #32]
; flag end address is: 24 (R6)
; width end address is: 28 (R7)
; prec end address is: 32 (R8)
; ccnt end address is: 36 (R9)
; pb end address is: 40 (R10)
; ap end address is: 16 (R4)
; f end address is: 20 (R5)
0x16D0	0xB239    SXTH	R1, R7
0x16D2	0x4627    MOV	R7, R4
0x16D4	0xB2B2    UXTH	R2, R6
0x16D6	0x462E    MOV	R6, R5
0x16D8	0xFA0FF088  SXTH	R0, R8
0x16DC	0xFA0FF889  SXTH	R8, R9
0x16E0	0x46D1    MOV	R9, R10
;__Lib_Sprintf.c, 584 :: 		
L___Lib_Sprintf__doprntf197:
; pb start address is: 36 (R9)
; ccnt start address is: 32 (R8)
; prec start address is: 0 (R0)
; width start address is: 4 (R1)
; flag start address is: 8 (R2)
; f start address is: 24 (R6)
; ap start address is: 28 (R7)
0x16E2	0xF89D3014  LDRB	R3, [SP, #20]
0x16E6	0xB303    CBZ	R3, L___Lib_Sprintf__doprntf198
;__Lib_Sprintf.c, 585 :: 		
0x16E8	0xF89D3014  LDRB	R3, [SP, #20]
0x16EC	0x1E5B    SUBS	R3, R3, #1
0x16EE	0xB2DB    UXTB	R3, R3
0x16F0	0xF88D3014  STRB	R3, [SP, #20]
0x16F4	0x009C    LSLS	R4, R3, #2
0x16F6	0x4B03    LDR	R3, [PC, #12]
0x16F8	0x191B    ADDS	R3, R3, R4
0x16FA	0x681C    LDR	R4, [R3, #0]
0x16FC	0x9B08    LDR	R3, [SP, #32]
0x16FE	0xFBB3F5F4  UDIV	R5, R3, R4
0x1702	0xE003    B	#6
0x1704	0x89280000  	__Lib_Sprintf_dpowers+0
0x1708	0x705F4089  	#1082749023
0x170C	0x240A    MOVS	R4, #10
0x170E	0xFBB5F3F4  UDIV	R3, R5, R4
0x1712	0xFB045313  MLS	R3, R4, R3, R5
0x1716	0x3330    ADDS	R3, #48
0x1718	0xF8893000  STRB	R3, [R9, #0]
0x171C	0xF1090901  ADD	R9, R9, #1
0x1720	0xF1080801  ADD	R8, R8, #1
0x1724	0xFA0FF888  SXTH	R8, R8
0x1728	0xE7DB    B	L___Lib_Sprintf__doprntf197
L___Lib_Sprintf__doprntf198:
;__Lib_Sprintf.c, 587 :: 		
0x172A	0xB20D    SXTH	R5, R1
; width end address is: 4 (R1)
; f end address is: 24 (R6)
; pb end address is: 36 (R9)
; ccnt end address is: 32 (R8)
; flag end address is: 8 (R2)
; prec end address is: 0 (R0)
0x172C	0x4631    MOV	R1, R6
0x172E	0xB206    SXTH	R6, R0
0x1730	0x4638    MOV	R0, R7
0x1732	0x464F    MOV	R7, R9
0x1734	0xB294    UXTH	R4, R2
0x1736	0xFA0FF288  SXTH	R2, R8
L___Lib_Sprintf__doprntf199:
; ap end address is: 28 (R7)
; ap start address is: 0 (R0)
; f start address is: 4 (R1)
; flag start address is: 16 (R4)
; width start address is: 20 (R5)
; prec start address is: 24 (R6)
; ccnt start address is: 8 (R2)
; pb start address is: 28 (R7)
0x173A	0xB13E    CBZ	R6, L___Lib_Sprintf__doprntf200
;__Lib_Sprintf.c, 588 :: 		
0x173C	0x2330    MOVS	R3, #48
0x173E	0x703B    STRB	R3, [R7, #0]
0x1740	0x1C7F    ADDS	R7, R7, #1
0x1742	0x1C52    ADDS	R2, R2, #1
0x1744	0xB212    SXTH	R2, R2
;__Lib_Sprintf.c, 589 :: 		
0x1746	0x1E76    SUBS	R6, R6, #1
0x1748	0xB236    SXTH	R6, R6
;__Lib_Sprintf.c, 590 :: 		
; prec end address is: 24 (R6)
0x174A	0xE7F6    B	L___Lib_Sprintf__doprntf199
L___Lib_Sprintf__doprntf200:
;__Lib_Sprintf.c, 591 :: 		
0x174C	0xF0040308  AND	R3, R4, #8
0x1750	0xB29B    UXTH	R3, R3
; flag end address is: 16 (R4)
0x1752	0xB193    CBZ	R3, L___Lib_Sprintf__doprntf383
0x1754	0x2D00    CMP	R5, #0
0x1756	0xDD16    BLE	L___Lib_Sprintf__doprntf384
L___Lib_Sprintf__doprntf302:
;__Lib_Sprintf.c, 592 :: 		
; ccnt end address is: 8 (R2)
; pb end address is: 28 (R7)
0x1758	0xB214    SXTH	R4, R2
0x175A	0xB22A    SXTH	R2, R5
0x175C	0x463D    MOV	R5, R7
0x175E	0xE7FF    B	L___Lib_Sprintf__doprntf204
; width end address is: 20 (R5)
L___Lib_Sprintf__doprntf382:
;__Lib_Sprintf.c, 594 :: 		
;__Lib_Sprintf.c, 592 :: 		
L___Lib_Sprintf__doprntf204:
;__Lib_Sprintf.c, 593 :: 		
; pb start address is: 20 (R5)
; pb start address is: 20 (R5)
; ccnt start address is: 16 (R4)
; width start address is: 8 (R2)
; ccnt start address is: 16 (R4)
; width start address is: 8 (R2)
; f start address is: 4 (R1)
; f end address is: 4 (R1)
; ap start address is: 0 (R0)
; ap end address is: 0 (R0)
0x1760	0x2320    MOVS	R3, #32
0x1762	0x702B    STRB	R3, [R5, #0]
0x1764	0x1C6D    ADDS	R5, R5, #1
; pb end address is: 20 (R5)
0x1766	0x1C64    ADDS	R4, R4, #1
0x1768	0xB224    SXTH	R4, R4
; ccnt end address is: 16 (R4)
;__Lib_Sprintf.c, 594 :: 		
0x176A	0x1E53    SUBS	R3, R2, #1
0x176C	0xB21B    SXTH	R3, R3
0x176E	0xB21A    SXTH	R2, R3
; width end address is: 8 (R2)
0x1770	0x2B00    CMP	R3, #0
0x1772	0xD1F5    BNE	L___Lib_Sprintf__doprntf382
; width end address is: 8 (R2)
; ccnt end address is: 16 (R4)
; ap end address is: 0 (R0)
; pb end address is: 20 (R5)
; f end address is: 4 (R1)
0x1774	0xB223    SXTH	R3, R4
0x1776	0x462A    MOV	R2, R5
;__Lib_Sprintf.c, 591 :: 		
0x1778	0xE001    B	L___Lib_Sprintf__doprntf345
L___Lib_Sprintf__doprntf383:
0x177A	0xB213    SXTH	R3, R2
0x177C	0x463A    MOV	R2, R7
L___Lib_Sprintf__doprntf345:
; pb start address is: 8 (R2)
; ccnt start address is: 12 (R3)
; f start address is: 4 (R1)
; ap start address is: 0 (R0)
0x177E	0x4605    MOV	R5, R0
; ap end address is: 0 (R0)
; ccnt end address is: 12 (R3)
; pb end address is: 8 (R2)
; f end address is: 4 (R1)
0x1780	0xB21E    SXTH	R6, R3
0x1782	0x4613    MOV	R3, R2
0x1784	0xE002    B	L___Lib_Sprintf__doprntf344
L___Lib_Sprintf__doprntf384:
0x1786	0x463B    MOV	R3, R7
0x1788	0xB216    SXTH	R6, R2
0x178A	0x4605    MOV	R5, R0
L___Lib_Sprintf__doprntf344:
;__Lib_Sprintf.c, 595 :: 		
; pb start address is: 12 (R3)
; ccnt start address is: 24 (R6)
; f start address is: 4 (R1)
; ap start address is: 20 (R5)
0x178C	0x461A    MOV	R2, R3
; pb end address is: 12 (R3)
; ap end address is: 20 (R5)
; ccnt end address is: 24 (R6)
; f end address is: 4 (R1)
0x178E	0x4608    MOV	R0, R1
0x1790	0xF7FFB88B  B	L___Lib_Sprintf__doprntf10
;__Lib_Sprintf.c, 596 :: 		
L___Lib_Sprintf__doprntf72:
;__Lib_Sprintf.c, 598 :: 		
; prec start address is: 0 (R0)
; width start address is: 24 (R6)
; ccnt start address is: 28 (R7)
; ap start address is: 32 (R8)
; pb start address is: 36 (R9)
; f start address is: 40 (R10)
; flag start address is: 44 (R11)
0x1794	0xF00B03C0  AND	R3, R11, #192
0x1798	0xB29B    UXTH	R3, R3
0x179A	0xBB0B    CBNZ	R3, L___Lib_Sprintf__doprntf207
;__Lib_Sprintf.c, 600 :: 		
0x179C	0xF00B0310  AND	R3, R11, #16
0x17A0	0xB29B    UXTH	R3, R3
0x17A2	0xB13B    CBZ	R3, L___Lib_Sprintf__doprntf208
;__Lib_Sprintf.c, 601 :: 		
0x17A4	0xF8D84000  LDR	R4, [R8, #0]
0x17A8	0x1D23    ADDS	R3, R4, #4
0x17AA	0xF8C83000  STR	R3, [R8, #0]
0x17AE	0x6823    LDR	R3, [R4, #0]
0x17B0	0x9308    STR	R3, [SP, #32]
0x17B2	0xE007    B	L___Lib_Sprintf__doprntf209
L___Lib_Sprintf__doprntf208:
;__Lib_Sprintf.c, 604 :: 		
0x17B4	0xF8D84000  LDR	R4, [R8, #0]
0x17B8	0x1D23    ADDS	R3, R4, #4
0x17BA	0xF8C83000  STR	R3, [R8, #0]
0x17BE	0xF9B43000  LDRSH	R3, [R4, #0]
0x17C2	0x9308    STR	R3, [SP, #32]
L___Lib_Sprintf__doprntf209:
;__Lib_Sprintf.c, 605 :: 		
0x17C4	0x9B08    LDR	R3, [SP, #32]
0x17C6	0x2B00    CMP	R3, #0
0x17C8	0xDA07    BGE	L___Lib_Sprintf__doprntf385
;__Lib_Sprintf.c, 606 :: 		
0x17CA	0xF04B0303  ORR	R3, R11, #3
; flag end address is: 44 (R11)
; flag start address is: 4 (R1)
0x17CE	0xB299    UXTH	R1, R3
;__Lib_Sprintf.c, 607 :: 		
0x17D0	0x9B08    LDR	R3, [SP, #32]
0x17D2	0x425B    RSBS	R3, R3, #0
0x17D4	0x9308    STR	R3, [SP, #32]
; flag end address is: 4 (R1)
0x17D6	0xB28A    UXTH	R2, R1
;__Lib_Sprintf.c, 608 :: 		
0x17D8	0xE001    B	L___Lib_Sprintf__doprntf210
L___Lib_Sprintf__doprntf385:
;__Lib_Sprintf.c, 605 :: 		
0x17DA	0xFA1FF28B  UXTH	R2, R11
;__Lib_Sprintf.c, 608 :: 		
L___Lib_Sprintf__doprntf210:
;__Lib_Sprintf.c, 609 :: 		
; flag start address is: 8 (R2)
; flag end address is: 8 (R2)
0x17DE	0xE014    B	L___Lib_Sprintf__doprntf211
L___Lib_Sprintf__doprntf207:
;__Lib_Sprintf.c, 612 :: 		
; flag start address is: 44 (R11)
0x17E0	0xF00B0310  AND	R3, R11, #16
0x17E4	0xB29B    UXTH	R3, R3
0x17E6	0xB13B    CBZ	R3, L___Lib_Sprintf__doprntf212
;__Lib_Sprintf.c, 613 :: 		
0x17E8	0xF8D84000  LDR	R4, [R8, #0]
0x17EC	0x1D23    ADDS	R3, R4, #4
0x17EE	0xF8C83000  STR	R3, [R8, #0]
0x17F2	0x6823    LDR	R3, [R4, #0]
0x17F4	0x9308    STR	R3, [SP, #32]
0x17F6	0xE006    B	L___Lib_Sprintf__doprntf213
L___Lib_Sprintf__doprntf212:
;__Lib_Sprintf.c, 616 :: 		
0x17F8	0xF8D84000  LDR	R4, [R8, #0]
0x17FC	0x1D23    ADDS	R3, R4, #4
0x17FE	0xF8C83000  STR	R3, [R8, #0]
0x1802	0x8823    LDRH	R3, [R4, #0]
0x1804	0x9308    STR	R3, [SP, #32]
L___Lib_Sprintf__doprntf213:
;__Lib_Sprintf.c, 617 :: 		
0x1806	0xFA1FF28B  UXTH	R2, R11
L___Lib_Sprintf__doprntf211:
; flag end address is: 44 (R11)
;__Lib_Sprintf.c, 618 :: 		
; flag start address is: 8 (R2)
0x180A	0xB928    CBNZ	R0, L___Lib_Sprintf__doprntf386
0x180C	0x9B08    LDR	R3, [SP, #32]
0x180E	0xB92B    CBNZ	R3, L___Lib_Sprintf__doprntf387
L___Lib_Sprintf__doprntf301:
;__Lib_Sprintf.c, 619 :: 		
0x1810	0x1C40    ADDS	R0, R0, #1
0x1812	0xB200    SXTH	R0, R0
; prec end address is: 0 (R0)
0x1814	0xB204    SXTH	R4, R0
;__Lib_Sprintf.c, 618 :: 		
0x1816	0xE000    B	L___Lib_Sprintf__doprntf347
L___Lib_Sprintf__doprntf386:
0x1818	0xB204    SXTH	R4, R0
L___Lib_Sprintf__doprntf347:
; prec start address is: 16 (R4)
; prec end address is: 16 (R4)
0x181A	0xE000    B	L___Lib_Sprintf__doprntf346
L___Lib_Sprintf__doprntf387:
0x181C	0xB204    SXTH	R4, R0
L___Lib_Sprintf__doprntf346:
;__Lib_Sprintf.c, 620 :: 		
; prec start address is: 16 (R4)
0x181E	0xF00203C0  AND	R3, R2, #192
0x1822	0xB2DD    UXTB	R5, R3
0x1824	0xE063    B	L___Lib_Sprintf__doprntf217
;__Lib_Sprintf.c, 621 :: 		
L___Lib_Sprintf__doprntf219:
;__Lib_Sprintf.c, 622 :: 		
L___Lib_Sprintf__doprntf220:
;__Lib_Sprintf.c, 623 :: 		
0x1826	0x2301    MOVS	R3, #1
0x1828	0xF88D3014  STRB	R3, [SP, #20]
; f end address is: 40 (R10)
; pb end address is: 36 (R9)
; ap end address is: 32 (R8)
; ccnt end address is: 28 (R7)
; width end address is: 24 (R6)
; prec end address is: 16 (R4)
; flag end address is: 8 (R2)
0x182C	0xF8CD8004  STR	R8, [SP, #4]
0x1830	0xFA0FF887  SXTH	R8, R7
0x1834	0x464F    MOV	R7, R9
0x1836	0xFA0FF986  SXTH	R9, R6
0x183A	0x4651    MOV	R1, R10
0x183C	0xB220    SXTH	R0, R4
0x183E	0x9E01    LDR	R6, [SP, #4]
L___Lib_Sprintf__doprntf221:
; prec start address is: 0 (R0)
; flag start address is: 8 (R2)
; f start address is: 4 (R1)
; pb start address is: 28 (R7)
; ap start address is: 24 (R6)
; ccnt start address is: 32 (R8)
; width start address is: 36 (R9)
0x1840	0xF89D3014  LDRB	R3, [SP, #20]
0x1844	0x2B0A    CMP	R3, #10
0x1846	0xD00F    BEQ	L___Lib_Sprintf__doprntf222
;__Lib_Sprintf.c, 624 :: 		
0x1848	0xF89D3014  LDRB	R3, [SP, #20]
0x184C	0x009C    LSLS	R4, R3, #2
0x184E	0x4BF2    LDR	R3, [PC, #968]
0x1850	0x191B    ADDS	R3, R3, R4
0x1852	0x681C    LDR	R4, [R3, #0]
0x1854	0x9B08    LDR	R3, [SP, #32]
0x1856	0x42A3    CMP	R3, R4
0x1858	0xD200    BCS	L___Lib_Sprintf__doprntf224
;__Lib_Sprintf.c, 625 :: 		
0x185A	0xE005    B	L___Lib_Sprintf__doprntf222
L___Lib_Sprintf__doprntf224:
;__Lib_Sprintf.c, 623 :: 		
0x185C	0xF89D3014  LDRB	R3, [SP, #20]
0x1860	0x1C5B    ADDS	R3, R3, #1
0x1862	0xF88D3014  STRB	R3, [SP, #20]
;__Lib_Sprintf.c, 625 :: 		
0x1866	0xE7EB    B	L___Lib_Sprintf__doprntf221
L___Lib_Sprintf__doprntf222:
;__Lib_Sprintf.c, 626 :: 		
0x1868	0xB204    SXTH	R4, R0
; ap end address is: 24 (R6)
; ccnt end address is: 32 (R8)
; pb end address is: 28 (R7)
; prec end address is: 0 (R0)
; width end address is: 36 (R9)
; f end address is: 4 (R1)
0x186A	0x4630    MOV	R0, R6
0x186C	0xFA0FF689  SXTH	R6, R9
0x1870	0xFA0FF588  SXTH	R5, R8
0x1874	0xE047    B	L___Lib_Sprintf__doprntf218
;__Lib_Sprintf.c, 628 :: 		
L___Lib_Sprintf__doprntf225:
;__Lib_Sprintf.c, 629 :: 		
; prec start address is: 16 (R4)
; width start address is: 24 (R6)
; ccnt start address is: 28 (R7)
; ap start address is: 32 (R8)
; pb start address is: 36 (R9)
; f start address is: 40 (R10)
0x1876	0x2301    MOVS	R3, #1
0x1878	0xF88D3014  STRB	R3, [SP, #20]
; f end address is: 40 (R10)
; pb end address is: 36 (R9)
; ap end address is: 32 (R8)
; ccnt end address is: 28 (R7)
; width end address is: 24 (R6)
; prec end address is: 16 (R4)
; flag end address is: 8 (R2)
0x187C	0x4651    MOV	R1, R10
0x187E	0xB220    SXTH	R0, R4
L___Lib_Sprintf__doprntf226:
; prec start address is: 0 (R0)
; flag start address is: 8 (R2)
; f start address is: 4 (R1)
; pb start address is: 36 (R9)
; ap start address is: 32 (R8)
; ccnt start address is: 28 (R7)
; width start address is: 24 (R6)
0x1880	0xF89D3014  LDRB	R3, [SP, #20]
0x1884	0x2B08    CMP	R3, #8
0x1886	0xD00F    BEQ	L___Lib_Sprintf__doprntf227
;__Lib_Sprintf.c, 630 :: 		
0x1888	0xF89D3014  LDRB	R3, [SP, #20]
0x188C	0x009C    LSLS	R4, R3, #2
0x188E	0x4BE3    LDR	R3, [PC, #908]
0x1890	0x191B    ADDS	R3, R3, R4
0x1892	0x681C    LDR	R4, [R3, #0]
0x1894	0x9B08    LDR	R3, [SP, #32]
0x1896	0x42A3    CMP	R3, R4
0x1898	0xD200    BCS	L___Lib_Sprintf__doprntf229
;__Lib_Sprintf.c, 631 :: 		
0x189A	0xE005    B	L___Lib_Sprintf__doprntf227
L___Lib_Sprintf__doprntf229:
;__Lib_Sprintf.c, 629 :: 		
0x189C	0xF89D3014  LDRB	R3, [SP, #20]
0x18A0	0x1C5B    ADDS	R3, R3, #1
0x18A2	0xF88D3014  STRB	R3, [SP, #20]
;__Lib_Sprintf.c, 631 :: 		
0x18A6	0xE7EB    B	L___Lib_Sprintf__doprntf226
L___Lib_Sprintf__doprntf227:
;__Lib_Sprintf.c, 632 :: 		
0x18A8	0xB204    SXTH	R4, R0
; prec end address is: 0 (R0)
; f end address is: 4 (R1)
0x18AA	0x4640    MOV	R0, R8
0x18AC	0xB23D    SXTH	R5, R7
0x18AE	0x464F    MOV	R7, R9
0x18B0	0xE029    B	L___Lib_Sprintf__doprntf218
;__Lib_Sprintf.c, 634 :: 		
L___Lib_Sprintf__doprntf230:
;__Lib_Sprintf.c, 635 :: 		
; prec start address is: 16 (R4)
; f start address is: 40 (R10)
0x18B2	0x2301    MOVS	R3, #1
0x18B4	0xF88D3014  STRB	R3, [SP, #20]
; f end address is: 40 (R10)
; pb end address is: 36 (R9)
; ap end address is: 32 (R8)
; ccnt end address is: 28 (R7)
; width end address is: 24 (R6)
; prec end address is: 16 (R4)
; flag end address is: 8 (R2)
0x18B8	0x4651    MOV	R1, R10
0x18BA	0xB220    SXTH	R0, R4
L___Lib_Sprintf__doprntf231:
; prec start address is: 0 (R0)
; flag start address is: 8 (R2)
; f start address is: 4 (R1)
; pb start address is: 36 (R9)
; ap start address is: 32 (R8)
; ccnt start address is: 28 (R7)
; width start address is: 24 (R6)
0x18BC	0xF89D3014  LDRB	R3, [SP, #20]
0x18C0	0x2B0C    CMP	R3, #12
0x18C2	0xD00F    BEQ	L___Lib_Sprintf__doprntf232
;__Lib_Sprintf.c, 636 :: 		
0x18C4	0xF89D3014  LDRB	R3, [SP, #20]
0x18C8	0x009C    LSLS	R4, R3, #2
0x18CA	0x4BD5    LDR	R3, [PC, #852]
0x18CC	0x191B    ADDS	R3, R3, R4
0x18CE	0x681C    LDR	R4, [R3, #0]
0x18D0	0x9B08    LDR	R3, [SP, #32]
0x18D2	0x42A3    CMP	R3, R4
0x18D4	0xD200    BCS	L___Lib_Sprintf__doprntf234
;__Lib_Sprintf.c, 637 :: 		
0x18D6	0xE005    B	L___Lib_Sprintf__doprntf232
L___Lib_Sprintf__doprntf234:
;__Lib_Sprintf.c, 635 :: 		
0x18D8	0xF89D3014  LDRB	R3, [SP, #20]
0x18DC	0x1C5B    ADDS	R3, R3, #1
0x18DE	0xF88D3014  STRB	R3, [SP, #20]
;__Lib_Sprintf.c, 637 :: 		
0x18E2	0xE7EB    B	L___Lib_Sprintf__doprntf231
L___Lib_Sprintf__doprntf232:
;__Lib_Sprintf.c, 638 :: 		
0x18E4	0xB204    SXTH	R4, R0
; prec end address is: 0 (R0)
; f end address is: 4 (R1)
0x18E6	0x4640    MOV	R0, R8
0x18E8	0xB23D    SXTH	R5, R7
0x18EA	0x464F    MOV	R7, R9
0x18EC	0xE00B    B	L___Lib_Sprintf__doprntf218
;__Lib_Sprintf.c, 639 :: 		
L___Lib_Sprintf__doprntf217:
; prec start address is: 16 (R4)
; f start address is: 40 (R10)
0x18EE	0x2D00    CMP	R5, #0
0x18F0	0xD099    BEQ	L___Lib_Sprintf__doprntf219
0x18F2	0x2DC0    CMP	R5, #192
0x18F4	0xD097    BEQ	L___Lib_Sprintf__doprntf220
0x18F6	0x2D80    CMP	R5, #128
0x18F8	0xD0BD    BEQ	L___Lib_Sprintf__doprntf225
0x18FA	0x2D40    CMP	R5, #64
0x18FC	0xD0D9    BEQ	L___Lib_Sprintf__doprntf230
; f end address is: 40 (R10)
; pb end address is: 36 (R9)
; ap end address is: 32 (R8)
; ccnt end address is: 28 (R7)
; width end address is: 24 (R6)
; prec end address is: 16 (R4)
; flag end address is: 8 (R2)
0x18FE	0x4651    MOV	R1, R10
0x1900	0xB23D    SXTH	R5, R7
0x1902	0x464F    MOV	R7, R9
0x1904	0x4640    MOV	R0, R8
L___Lib_Sprintf__doprntf218:
;__Lib_Sprintf.c, 640 :: 		
; width start address is: 24 (R6)
; ccnt start address is: 20 (R5)
; ap start address is: 0 (R0)
; pb start address is: 28 (R7)
; f start address is: 4 (R1)
; flag start address is: 8 (R2)
; prec start address is: 16 (R4)
0x1906	0xF89D3014  LDRB	R3, [SP, #20]
0x190A	0x42A3    CMP	R3, R4
0x190C	0xDA02    BGE	L___Lib_Sprintf__doprntf235
;__Lib_Sprintf.c, 641 :: 		
0x190E	0xF88D4014  STRB	R4, [SP, #20]
0x1912	0xE007    B	L___Lib_Sprintf__doprntf236
L___Lib_Sprintf__doprntf235:
;__Lib_Sprintf.c, 643 :: 		
0x1914	0xF89D3014  LDRB	R3, [SP, #20]
0x1918	0x429C    CMP	R4, R3
0x191A	0xDA03    BGE	L___Lib_Sprintf__doprntf388
; prec end address is: 16 (R4)
;__Lib_Sprintf.c, 644 :: 		
; prec start address is: 12 (R3)
0x191C	0xF89D3014  LDRB	R3, [SP, #20]
; prec end address is: 12 (R3)
0x1920	0xB21C    SXTH	R4, R3
0x1922	0xE7FF    B	L___Lib_Sprintf__doprntf237
L___Lib_Sprintf__doprntf388:
;__Lib_Sprintf.c, 643 :: 		
;__Lib_Sprintf.c, 644 :: 		
L___Lib_Sprintf__doprntf237:
; prec start address is: 16 (R4)
; prec end address is: 16 (R4)
L___Lib_Sprintf__doprntf236:
;__Lib_Sprintf.c, 645 :: 		
; prec start address is: 16 (R4)
0x1924	0xB136    CBZ	R6, L___Lib_Sprintf__doprntf389
0x1926	0xF0020303  AND	R3, R2, #3
0x192A	0xB29B    UXTH	R3, R3
0x192C	0xB11B    CBZ	R3, L___Lib_Sprintf__doprntf390
L___Lib_Sprintf__doprntf300:
;__Lib_Sprintf.c, 646 :: 		
0x192E	0x1E76    SUBS	R6, R6, #1
0x1930	0xB236    SXTH	R6, R6
; width end address is: 24 (R6)
;__Lib_Sprintf.c, 645 :: 		
0x1932	0xE7FF    B	L___Lib_Sprintf__doprntf349
L___Lib_Sprintf__doprntf389:
L___Lib_Sprintf__doprntf349:
; width start address is: 24 (R6)
; width end address is: 24 (R6)
0x1934	0xE7FF    B	L___Lib_Sprintf__doprntf348
L___Lib_Sprintf__doprntf390:
L___Lib_Sprintf__doprntf348:
;__Lib_Sprintf.c, 647 :: 		
; width start address is: 24 (R6)
0x1936	0x42A6    CMP	R6, R4
0x1938	0xDD02    BLE	L___Lib_Sprintf__doprntf241
;__Lib_Sprintf.c, 648 :: 		
0x193A	0x1B36    SUB	R6, R6, R4
0x193C	0xB236    SXTH	R6, R6
; width end address is: 24 (R6)
0x193E	0xE001    B	L___Lib_Sprintf__doprntf242
L___Lib_Sprintf__doprntf241:
;__Lib_Sprintf.c, 650 :: 		
; width start address is: 24 (R6)
0x1940	0x2600    MOVS	R6, #0
0x1942	0xB236    SXTH	R6, R6
; width end address is: 24 (R6)
L___Lib_Sprintf__doprntf242:
;__Lib_Sprintf.c, 651 :: 		
; width start address is: 24 (R6)
0x1944	0xF64003C4  MOVW	R3, #2244
0x1948	0xEA020303  AND	R3, R2, R3, LSL #0
0x194C	0xB29B    UXTH	R3, R3
0x194E	0xF5B36F04  CMP	R3, #2112
0x1952	0xD104    BNE	L___Lib_Sprintf__doprntf243
;__Lib_Sprintf.c, 652 :: 		
0x1954	0xB116    CBZ	R6, L___Lib_Sprintf__doprntf391
;__Lib_Sprintf.c, 653 :: 		
0x1956	0x1E76    SUBS	R6, R6, #1
0x1958	0xB236    SXTH	R6, R6
; width end address is: 24 (R6)
0x195A	0xE7FF    B	L___Lib_Sprintf__doprntf244
L___Lib_Sprintf__doprntf391:
;__Lib_Sprintf.c, 652 :: 		
;__Lib_Sprintf.c, 653 :: 		
L___Lib_Sprintf__doprntf244:
;__Lib_Sprintf.c, 654 :: 		
; width start address is: 24 (R6)
0x195C	0xE00E    B	L___Lib_Sprintf__doprntf245
L___Lib_Sprintf__doprntf243:
;__Lib_Sprintf.c, 656 :: 		
0x195E	0xF402630C  AND	R3, R2, #2240
0x1962	0xB29B    UXTH	R3, R3
0x1964	0xF5B36F08  CMP	R3, #2176
0x1968	0xD108    BNE	L___Lib_Sprintf__doprntf392
;__Lib_Sprintf.c, 657 :: 		
0x196A	0x2E02    CMP	R6, #2
0x196C	0xDD02    BLE	L___Lib_Sprintf__doprntf247
;__Lib_Sprintf.c, 658 :: 		
0x196E	0x1EB3    SUBS	R3, R6, #2
0x1970	0xB21B    SXTH	R3, R3
; width end address is: 24 (R6)
; width start address is: 12 (R3)
; width end address is: 12 (R3)
0x1972	0xE001    B	L___Lib_Sprintf__doprntf248
L___Lib_Sprintf__doprntf247:
;__Lib_Sprintf.c, 660 :: 		
; width start address is: 12 (R3)
0x1974	0x2300    MOVS	R3, #0
0x1976	0xB21B    SXTH	R3, R3
; width end address is: 12 (R3)
L___Lib_Sprintf__doprntf248:
;__Lib_Sprintf.c, 661 :: 		
; width start address is: 12 (R3)
0x1978	0xB21E    SXTH	R6, R3
; width end address is: 12 (R3)
0x197A	0xE7FF    B	L___Lib_Sprintf__doprntf246
L___Lib_Sprintf__doprntf392:
;__Lib_Sprintf.c, 656 :: 		
;__Lib_Sprintf.c, 661 :: 		
L___Lib_Sprintf__doprntf246:
; width start address is: 24 (R6)
; width end address is: 24 (R6)
L___Lib_Sprintf__doprntf245:
;__Lib_Sprintf.c, 662 :: 		
; width start address is: 24 (R6)
0x197C	0xF0020304  AND	R3, R2, #4
0x1980	0xB29B    UXTH	R3, R3
0x1982	0x2B00    CMP	R3, #0
0x1984	0xF0008079  BEQ	L___Lib_Sprintf__doprntf249
;__Lib_Sprintf.c, 663 :: 		
0x1988	0xF0020302  AND	R3, R2, #2
0x198C	0xB29B    UXTH	R3, R3
0x198E	0xB1A3    CBZ	R3, L___Lib_Sprintf__doprntf250
;__Lib_Sprintf.c, 664 :: 		
0x1990	0xF0020301  AND	R3, R2, #1
0x1994	0xB29B    UXTH	R3, R3
0x1996	0xB11B    CBZ	R3, L___Lib_Sprintf__doprntf251
0x1998	0x232D    MOVS	R3, #45
0x199A	0xF88D3010  STRB	R3, [SP, #16]
0x199E	0xE002    B	L___Lib_Sprintf__doprntf252
L___Lib_Sprintf__doprntf251:
0x19A0	0x232B    MOVS	R3, #43
0x19A2	0xF88D3010  STRB	R3, [SP, #16]
L___Lib_Sprintf__doprntf252:
0x19A6	0xF89D3010  LDRB	R3, [SP, #16]
0x19AA	0x703B    STRB	R3, [R7, #0]
0x19AC	0x1C7F    ADDS	R7, R7, #1
0x19AE	0xF1050A01  ADD	R10, R5, #1
0x19B2	0xFA0FFA8A  SXTH	R10, R10
; ccnt end address is: 20 (R5)
; ccnt start address is: 40 (R10)
0x19B6	0x463B    MOV	R3, R7
; ccnt end address is: 40 (R10)
0x19B8	0xE02E    B	L___Lib_Sprintf__doprntf253
L___Lib_Sprintf__doprntf250:
;__Lib_Sprintf.c, 666 :: 		
; ccnt start address is: 20 (R5)
0x19BA	0xF0020301  AND	R3, R2, #1
0x19BE	0xB29B    UXTH	R3, R3
0x19C0	0xB133    CBZ	R3, L___Lib_Sprintf__doprntf254
;__Lib_Sprintf.c, 667 :: 		
0x19C2	0x2320    MOVS	R3, #32
0x19C4	0x703B    STRB	R3, [R7, #0]
0x19C6	0x1C7F    ADDS	R7, R7, #1
0x19C8	0x1C6B    ADDS	R3, R5, #1
0x19CA	0xB21B    SXTH	R3, R3
; ccnt end address is: 20 (R5)
; ccnt start address is: 12 (R3)
; ccnt end address is: 12 (R3)
0x19CC	0x463D    MOV	R5, R7
0x19CE	0xE020    B	L___Lib_Sprintf__doprntf255
L___Lib_Sprintf__doprntf254:
;__Lib_Sprintf.c, 669 :: 		
; ccnt start address is: 20 (R5)
0x19D0	0xF402630C  AND	R3, R2, #2240
0x19D4	0xB29B    UXTH	R3, R3
0x19D6	0xF5B36F08  CMP	R3, #2176
0x19DA	0xD118    BNE	L___Lib_Sprintf__doprntf393
;__Lib_Sprintf.c, 670 :: 		
0x19DC	0x2330    MOVS	R3, #48
0x19DE	0x703B    STRB	R3, [R7, #0]
0x19E0	0x1C7F    ADDS	R7, R7, #1
0x19E2	0x1C6D    ADDS	R5, R5, #1
0x19E4	0xB22D    SXTH	R5, R5
;__Lib_Sprintf.c, 671 :: 		
0x19E6	0xF0020320  AND	R3, R2, #32
0x19EA	0xB29B    UXTH	R3, R3
0x19EC	0xB11B    CBZ	R3, L___Lib_Sprintf__doprntf257
0x19EE	0x2358    MOVS	R3, #88
0x19F0	0xF88D3011  STRB	R3, [SP, #17]
0x19F4	0xE002    B	L___Lib_Sprintf__doprntf258
L___Lib_Sprintf__doprntf257:
0x19F6	0x2378    MOVS	R3, #120
0x19F8	0xF88D3011  STRB	R3, [SP, #17]
L___Lib_Sprintf__doprntf258:
0x19FC	0xF89D3011  LDRB	R3, [SP, #17]
0x1A00	0x703B    STRB	R3, [R7, #0]
0x1A02	0x1C7F    ADDS	R7, R7, #1
0x1A04	0x1C6D    ADDS	R5, R5, #1
0x1A06	0xB22D    SXTH	R5, R5
; pb end address is: 28 (R7)
; ccnt end address is: 20 (R5)
0x1A08	0xB22B    SXTH	R3, R5
0x1A0A	0x463D    MOV	R5, R7
;__Lib_Sprintf.c, 672 :: 		
0x1A0C	0xE001    B	L___Lib_Sprintf__doprntf256
L___Lib_Sprintf__doprntf393:
;__Lib_Sprintf.c, 669 :: 		
0x1A0E	0xB22B    SXTH	R3, R5
0x1A10	0x463D    MOV	R5, R7
;__Lib_Sprintf.c, 672 :: 		
L___Lib_Sprintf__doprntf256:
; ccnt start address is: 12 (R3)
; pb start address is: 20 (R5)
; pb end address is: 20 (R5)
; ccnt end address is: 12 (R3)
L___Lib_Sprintf__doprntf255:
; pb start address is: 20 (R5)
; ccnt start address is: 12 (R3)
0x1A12	0xFA0FFA83  SXTH	R10, R3
; pb end address is: 20 (R5)
; ccnt end address is: 12 (R3)
0x1A16	0x462B    MOV	R3, R5
L___Lib_Sprintf__doprntf253:
;__Lib_Sprintf.c, 673 :: 		
; ccnt start address is: 40 (R10)
; pb start address is: 12 (R3)
0x1A18	0xB326    CBZ	R6, L___Lib_Sprintf__doprntf395
; width end address is: 24 (R6)
; prec end address is: 16 (R4)
; flag end address is: 8 (R2)
; ap end address is: 0 (R0)
; pb end address is: 12 (R3)
; f end address is: 4 (R1)
0x1A1A	0x4605    MOV	R5, R0
0x1A1C	0x460F    MOV	R7, R1
0x1A1E	0xFA1FF882  UXTH	R8, R2
0x1A22	0xFA0FF984  SXTH	R9, R4
0x1A26	0x469B    MOV	R11, R3
;__Lib_Sprintf.c, 674 :: 		
0x1A28	0xE002    B	L___Lib_Sprintf__doprntf260
L___Lib_Sprintf__doprntf394:
;__Lib_Sprintf.c, 676 :: 		
0x1A2A	0xFA0FF68B  SXTH	R6, R11
0x1A2E	0x46E3    MOV	R11, R12
;__Lib_Sprintf.c, 674 :: 		
L___Lib_Sprintf__doprntf260:
;__Lib_Sprintf.c, 675 :: 		
; f start address is: 28 (R7)
; ap start address is: 20 (R5)
; flag start address is: 32 (R8)
; width start address is: 44 (R11)
; pb start address is: 48 (R12)
; prec start address is: 36 (R9)
; pb start address is: 44 (R11)
; ccnt start address is: 40 (R10)
; width start address is: 24 (R6)
; prec start address is: 36 (R9)
; prec end address is: 36 (R9)
; flag start address is: 32 (R8)
; flag end address is: 32 (R8)
; f start address is: 28 (R7)
; f end address is: 28 (R7)
; ap start address is: 20 (R5)
; ap end address is: 20 (R5)
0x1A30	0x2330    MOVS	R3, #48
0x1A32	0xF88B3000  STRB	R3, [R11, #0]
0x1A36	0xF10B0301  ADD	R3, R11, #1
; pb end address is: 44 (R11)
; pb start address is: 48 (R12)
0x1A3A	0x469C    MOV	R12, R3
; pb end address is: 48 (R12)
0x1A3C	0xF10A0A01  ADD	R10, R10, #1
0x1A40	0xFA0FFA8A  SXTH	R10, R10
; ccnt end address is: 40 (R10)
;__Lib_Sprintf.c, 676 :: 		
0x1A44	0x1E73    SUBS	R3, R6, #1
0x1A46	0xB21B    SXTH	R3, R3
; width end address is: 24 (R6)
; width start address is: 44 (R11)
0x1A48	0xFA0FFB83  SXTH	R11, R3
; width end address is: 44 (R11)
0x1A4C	0x2B00    CMP	R3, #0
0x1A4E	0xD1EC    BNE	L___Lib_Sprintf__doprntf394
; prec end address is: 36 (R9)
; pb end address is: 48 (R12)
; width end address is: 44 (R11)
; ccnt end address is: 40 (R10)
; flag end address is: 32 (R8)
; ap end address is: 20 (R5)
; f end address is: 28 (R7)
0x1A50	0x4628    MOV	R0, R5
0x1A52	0x4639    MOV	R1, R7
0x1A54	0xFA1FF288  UXTH	R2, R8
0x1A58	0xFA0FF489  SXTH	R4, R9
0x1A5C	0xFA0FF68B  SXTH	R6, R11
0x1A60	0x4663    MOV	R3, R12
0x1A62	0xE7FF    B	L___Lib_Sprintf__doprntf259
L___Lib_Sprintf__doprntf395:
;__Lib_Sprintf.c, 673 :: 		
;__Lib_Sprintf.c, 676 :: 		
L___Lib_Sprintf__doprntf259:
;__Lib_Sprintf.c, 677 :: 		
; pb start address is: 12 (R3)
; ccnt start address is: 40 (R10)
; width start address is: 24 (R6)
; prec start address is: 16 (R4)
; flag start address is: 8 (R2)
; f start address is: 4 (R1)
; ap start address is: 0 (R0)
0x1A64	0xFA0FF986  SXTH	R9, R6
; ccnt end address is: 40 (R10)
; pb end address is: 12 (R3)
0x1A68	0xFA1FF882  UXTH	R8, R2
0x1A6C	0x4602    MOV	R2, R0
0x1A6E	0xB220    SXTH	R0, R4
0x1A70	0x461C    MOV	R4, R3
0x1A72	0x460F    MOV	R7, R1
0x1A74	0xFA0FF18A  SXTH	R1, R10
0x1A78	0xE06E    B	L___Lib_Sprintf__doprntf263
L___Lib_Sprintf__doprntf249:
;__Lib_Sprintf.c, 679 :: 		
; ccnt start address is: 20 (R5)
; pb start address is: 28 (R7)
0x1A7A	0xB1A6    CBZ	R6, L___Lib_Sprintf__doprntf397
0x1A7C	0xF0020308  AND	R3, R2, #8
0x1A80	0xB29B    UXTH	R3, R3
0x1A82	0xB98B    CBNZ	R3, L___Lib_Sprintf__doprntf398
L___Lib_Sprintf__doprntf299:
;__Lib_Sprintf.c, 680 :: 		
0x1A84	0xE001    B	L___Lib_Sprintf__doprntf267
; width end address is: 24 (R6)
L___Lib_Sprintf__doprntf396:
;__Lib_Sprintf.c, 682 :: 		
0x1A86	0xFA0FF688  SXTH	R6, R8
;__Lib_Sprintf.c, 680 :: 		
L___Lib_Sprintf__doprntf267:
;__Lib_Sprintf.c, 681 :: 		
; width start address is: 24 (R6)
; width start address is: 32 (R8)
; prec start address is: 16 (R4)
; prec end address is: 16 (R4)
; flag start address is: 8 (R2)
; flag end address is: 8 (R2)
; f start address is: 4 (R1)
; f end address is: 4 (R1)
; pb start address is: 28 (R7)
; ap start address is: 0 (R0)
; ap end address is: 0 (R0)
; ccnt start address is: 20 (R5)
0x1A8A	0x2320    MOVS	R3, #32
0x1A8C	0x703B    STRB	R3, [R7, #0]
0x1A8E	0x1C7F    ADDS	R7, R7, #1
; pb end address is: 28 (R7)
0x1A90	0x1C6D    ADDS	R5, R5, #1
0x1A92	0xB22D    SXTH	R5, R5
; ccnt end address is: 20 (R5)
;__Lib_Sprintf.c, 682 :: 		
0x1A94	0x1E73    SUBS	R3, R6, #1
0x1A96	0xB21B    SXTH	R3, R3
; width end address is: 24 (R6)
; width start address is: 32 (R8)
0x1A98	0xFA0FF883  SXTH	R8, R3
; width end address is: 32 (R8)
0x1A9C	0x2B00    CMP	R3, #0
0x1A9E	0xD1F2    BNE	L___Lib_Sprintf__doprntf396
; width end address is: 32 (R8)
; prec end address is: 16 (R4)
; flag end address is: 8 (R2)
; ap end address is: 0 (R0)
; pb end address is: 28 (R7)
; ccnt end address is: 20 (R5)
; f end address is: 4 (R1)
0x1AA0	0xFA0FF688  SXTH	R6, R8
;__Lib_Sprintf.c, 679 :: 		
0x1AA4	0xE7FF    B	L___Lib_Sprintf__doprntf351
L___Lib_Sprintf__doprntf397:
L___Lib_Sprintf__doprntf351:
; width start address is: 24 (R6)
; prec start address is: 16 (R4)
; flag start address is: 8 (R2)
; f start address is: 4 (R1)
; pb start address is: 28 (R7)
; ap start address is: 0 (R0)
; ccnt start address is: 20 (R5)
; width end address is: 24 (R6)
; prec end address is: 16 (R4)
; flag end address is: 8 (R2)
; ap end address is: 0 (R0)
; pb end address is: 28 (R7)
; ccnt end address is: 20 (R5)
; f end address is: 4 (R1)
0x1AA6	0xE7FF    B	L___Lib_Sprintf__doprntf350
L___Lib_Sprintf__doprntf398:
L___Lib_Sprintf__doprntf350:
;__Lib_Sprintf.c, 683 :: 		
; width start address is: 24 (R6)
; prec start address is: 16 (R4)
; flag start address is: 8 (R2)
; f start address is: 4 (R1)
; pb start address is: 28 (R7)
; ap start address is: 0 (R0)
; ccnt start address is: 20 (R5)
0x1AA8	0xF0020302  AND	R3, R2, #2
0x1AAC	0xB29B    UXTH	R3, R3
0x1AAE	0xB18B    CBZ	R3, L___Lib_Sprintf__doprntf270
;__Lib_Sprintf.c, 684 :: 		
0x1AB0	0xF0020301  AND	R3, R2, #1
0x1AB4	0xB29B    UXTH	R3, R3
0x1AB6	0xB11B    CBZ	R3, L___Lib_Sprintf__doprntf271
0x1AB8	0x232D    MOVS	R3, #45
0x1ABA	0xF88D3012  STRB	R3, [SP, #18]
0x1ABE	0xE002    B	L___Lib_Sprintf__doprntf272
L___Lib_Sprintf__doprntf271:
0x1AC0	0x232B    MOVS	R3, #43
0x1AC2	0xF88D3012  STRB	R3, [SP, #18]
L___Lib_Sprintf__doprntf272:
0x1AC6	0xF89D3012  LDRB	R3, [SP, #18]
0x1ACA	0x703B    STRB	R3, [R7, #0]
0x1ACC	0x1C7F    ADDS	R7, R7, #1
0x1ACE	0x1C6D    ADDS	R5, R5, #1
0x1AD0	0xB22D    SXTH	R5, R5
0x1AD2	0xE009    B	L___Lib_Sprintf__doprntf273
L___Lib_Sprintf__doprntf270:
;__Lib_Sprintf.c, 686 :: 		
0x1AD4	0xF0020301  AND	R3, R2, #1
0x1AD8	0xB29B    UXTH	R3, R3
0x1ADA	0xB12B    CBZ	R3, L___Lib_Sprintf__doprntf399
;__Lib_Sprintf.c, 687 :: 		
0x1ADC	0x2320    MOVS	R3, #32
0x1ADE	0x703B    STRB	R3, [R7, #0]
0x1AE0	0x1C7F    ADDS	R7, R7, #1
0x1AE2	0x1C6D    ADDS	R5, R5, #1
0x1AE4	0xB22D    SXTH	R5, R5
; pb end address is: 28 (R7)
; ccnt end address is: 20 (R5)
0x1AE6	0xE7FF    B	L___Lib_Sprintf__doprntf274
L___Lib_Sprintf__doprntf399:
;__Lib_Sprintf.c, 686 :: 		
;__Lib_Sprintf.c, 687 :: 		
L___Lib_Sprintf__doprntf274:
; ccnt start address is: 20 (R5)
; pb start address is: 28 (R7)
; pb end address is: 28 (R7)
; ccnt end address is: 20 (R5)
L___Lib_Sprintf__doprntf273:
;__Lib_Sprintf.c, 688 :: 		
; pb start address is: 28 (R7)
; ccnt start address is: 20 (R5)
0x1AE8	0xF402630C  AND	R3, R2, #2240
0x1AEC	0xB29B    UXTH	R3, R3
0x1AEE	0xF5B36F04  CMP	R3, #2112
0x1AF2	0xD106    BNE	L___Lib_Sprintf__doprntf275
;__Lib_Sprintf.c, 689 :: 		
0x1AF4	0x2330    MOVS	R3, #48
0x1AF6	0x703B    STRB	R3, [R7, #0]
0x1AF8	0x1C7F    ADDS	R7, R7, #1
0x1AFA	0x1C6B    ADDS	R3, R5, #1
0x1AFC	0xB21B    SXTH	R3, R3
; ccnt end address is: 20 (R5)
; ccnt start address is: 12 (R3)
; ccnt end address is: 12 (R3)
0x1AFE	0x463D    MOV	R5, R7
0x1B00	0xE021    B	L___Lib_Sprintf__doprntf276
L___Lib_Sprintf__doprntf275:
;__Lib_Sprintf.c, 691 :: 		
; ccnt start address is: 20 (R5)
0x1B02	0xF402630C  AND	R3, R2, #2240
0x1B06	0xB29B    UXTH	R3, R3
0x1B08	0xF5B36F08  CMP	R3, #2176
0x1B0C	0xD117    BNE	L___Lib_Sprintf__doprntf400
;__Lib_Sprintf.c, 692 :: 		
0x1B0E	0x2330    MOVS	R3, #48
0x1B10	0x703B    STRB	R3, [R7, #0]
0x1B12	0x1C7F    ADDS	R7, R7, #1
0x1B14	0x1C6D    ADDS	R5, R5, #1
0x1B16	0xB22D    SXTH	R5, R5
;__Lib_Sprintf.c, 693 :: 		
0x1B18	0xF0020320  AND	R3, R2, #32
0x1B1C	0xB29B    UXTH	R3, R3
0x1B1E	0xB11B    CBZ	R3, L___Lib_Sprintf__doprntf278
0x1B20	0x2358    MOVS	R3, #88
0x1B22	0xF88D3013  STRB	R3, [SP, #19]
0x1B26	0xE002    B	L___Lib_Sprintf__doprntf279
L___Lib_Sprintf__doprntf278:
0x1B28	0x2378    MOVS	R3, #120
0x1B2A	0xF88D3013  STRB	R3, [SP, #19]
L___Lib_Sprintf__doprntf279:
0x1B2E	0xF89D3013  LDRB	R3, [SP, #19]
0x1B32	0x703B    STRB	R3, [R7, #0]
0x1B34	0x1C7F    ADDS	R7, R7, #1
0x1B36	0x1C6D    ADDS	R5, R5, #1
0x1B38	0xB22D    SXTH	R5, R5
; pb end address is: 28 (R7)
; ccnt end address is: 20 (R5)
0x1B3A	0x463B    MOV	R3, R7
;__Lib_Sprintf.c, 694 :: 		
0x1B3C	0xE000    B	L___Lib_Sprintf__doprntf277
L___Lib_Sprintf__doprntf400:
;__Lib_Sprintf.c, 691 :: 		
0x1B3E	0x463B    MOV	R3, R7
;__Lib_Sprintf.c, 694 :: 		
L___Lib_Sprintf__doprntf277:
; ccnt start address is: 20 (R5)
; pb start address is: 12 (R3)
0x1B40	0x9301    STR	R3, [SP, #4]
; ccnt end address is: 20 (R5)
; pb end address is: 12 (R3)
0x1B42	0xB22B    SXTH	R3, R5
0x1B44	0x9D01    LDR	R5, [SP, #4]
L___Lib_Sprintf__doprntf276:
;__Lib_Sprintf.c, 695 :: 		
; pb start address is: 20 (R5)
; ccnt start address is: 12 (R3)
0x1B46	0xFA0FF986  SXTH	R9, R6
; width end address is: 24 (R6)
; prec end address is: 16 (R4)
; flag end address is: 8 (R2)
; ap end address is: 0 (R0)
; pb end address is: 20 (R5)
; ccnt end address is: 12 (R3)
; f end address is: 4 (R1)
0x1B4A	0xFA1FF882  UXTH	R8, R2
0x1B4E	0x4602    MOV	R2, R0
0x1B50	0xB220    SXTH	R0, R4
0x1B52	0x462C    MOV	R4, R5
0x1B54	0x460F    MOV	R7, R1
0x1B56	0xB219    SXTH	R1, R3
L___Lib_Sprintf__doprntf263:
;__Lib_Sprintf.c, 696 :: 		
; ccnt start address is: 4 (R1)
; pb start address is: 16 (R4)
; ap start address is: 8 (R2)
; f start address is: 28 (R7)
; flag start address is: 32 (R8)
; prec start address is: 0 (R0)
; width start address is: 36 (R9)
; prec end address is: 0 (R0)
; pb end address is: 16 (R4)
; ccnt end address is: 4 (R1)
; flag end address is: 32 (R8)
; width end address is: 36 (R9)
; ap end address is: 8 (R2)
; f end address is: 28 (R7)
L___Lib_Sprintf__doprntf280:
; width start address is: 36 (R9)
; prec start address is: 0 (R0)
; flag start address is: 32 (R8)
; f start address is: 28 (R7)
; ap start address is: 8 (R2)
; pb start address is: 16 (R4)
; ccnt start address is: 4 (R1)
0x1B58	0xF89D3014  LDRB	R3, [SP, #20]
0x1B5C	0x4298    CMP	R0, R3
0x1B5E	0xDD05    BLE	L___Lib_Sprintf__doprntf281
;__Lib_Sprintf.c, 697 :: 		
0x1B60	0x2330    MOVS	R3, #48
0x1B62	0x7023    STRB	R3, [R4, #0]
0x1B64	0x1C64    ADDS	R4, R4, #1
0x1B66	0x1C49    ADDS	R1, R1, #1
0x1B68	0xB209    SXTH	R1, R1
0x1B6A	0xE7F5    B	L___Lib_Sprintf__doprntf280
L___Lib_Sprintf__doprntf281:
;__Lib_Sprintf.c, 698 :: 		
; pb end address is: 16 (R4)
; ccnt end address is: 4 (R1)
; flag end address is: 32 (R8)
; width end address is: 36 (R9)
; ap end address is: 8 (R2)
; f end address is: 28 (R7)
0x1B6C	0xB205    SXTH	R5, R0
0x1B6E	0xB208    SXTH	R0, R1
0x1B70	0x4621    MOV	R1, R4
L___Lib_Sprintf__doprntf282:
; prec end address is: 0 (R0)
; ccnt start address is: 0 (R0)
; prec start address is: 40 (R10)
; pb start address is: 4 (R1)
; ap start address is: 8 (R2)
; f start address is: 28 (R7)
; flag start address is: 32 (R8)
; prec start address is: 20 (R5)
; width start address is: 36 (R9)
0x1B72	0xB22C    SXTH	R4, R5
0x1B74	0x1E6B    SUBS	R3, R5, #1
; prec end address is: 20 (R5)
; prec start address is: 40 (R10)
0x1B76	0xFA0FFA83  SXTH	R10, R3
; prec end address is: 40 (R10)
0x1B7A	0x2C00    CMP	R4, #0
0x1B7C	0xF0008063  BEQ	L___Lib_Sprintf__doprntf283
; prec end address is: 40 (R10)
;__Lib_Sprintf.c, 699 :: 		
; prec start address is: 40 (R10)
0x1B80	0xF00803C0  AND	R3, R8, #192
0x1B84	0xB2DE    UXTB	R6, R3
0x1B86	0xE042    B	L___Lib_Sprintf__doprntf284
;__Lib_Sprintf.c, 700 :: 		
L___Lib_Sprintf__doprntf286:
;__Lib_Sprintf.c, 701 :: 		
L___Lib_Sprintf__doprntf287:
;__Lib_Sprintf.c, 702 :: 		
0x1B88	0xEA4F048A  LSL	R4, R10, #2
0x1B8C	0x4B22    LDR	R3, [PC, #136]
0x1B8E	0x191B    ADDS	R3, R3, R4
0x1B90	0x681C    LDR	R4, [R3, #0]
0x1B92	0x9B08    LDR	R3, [SP, #32]
0x1B94	0xFBB3F5F4  UDIV	R5, R3, R4
0x1B98	0x240A    MOVS	R4, #10
0x1B9A	0xFBB5F3F4  UDIV	R3, R5, R4
0x1B9E	0xFB045313  MLS	R3, R4, R3, R5
0x1BA2	0x3330    ADDS	R3, #48
0x1BA4	0xF88D3014  STRB	R3, [SP, #20]
;__Lib_Sprintf.c, 703 :: 		
0x1BA8	0xE044    B	L___Lib_Sprintf__doprntf285
;__Lib_Sprintf.c, 705 :: 		
L___Lib_Sprintf__doprntf288:
;__Lib_Sprintf.c, 706 :: 		
0x1BAA	0xF0080320  AND	R3, R8, #32
0x1BAE	0xB29B    UXTH	R3, R3
0x1BB0	0xB17B    CBZ	R3, L___Lib_Sprintf__doprntf289
;__Lib_Sprintf.c, 707 :: 		
0x1BB2	0xEA4F048A  LSL	R4, R10, #2
0x1BB6	0x4B19    LDR	R3, [PC, #100]
0x1BB8	0x191B    ADDS	R3, R3, R4
0x1BBA	0x681C    LDR	R4, [R3, #0]
0x1BBC	0x9B08    LDR	R3, [SP, #32]
0x1BBE	0xFBB3F3F4  UDIV	R3, R3, R4
0x1BC2	0xF003040F  AND	R4, R3, #15
0x1BC6	0x4B17    LDR	R3, [PC, #92]
0x1BC8	0x191B    ADDS	R3, R3, R4
0x1BCA	0x781B    LDRB	R3, [R3, #0]
0x1BCC	0xF88D3014  STRB	R3, [SP, #20]
0x1BD0	0xE00E    B	L___Lib_Sprintf__doprntf290
L___Lib_Sprintf__doprntf289:
;__Lib_Sprintf.c, 709 :: 		
0x1BD2	0xEA4F048A  LSL	R4, R10, #2
0x1BD6	0x4B11    LDR	R3, [PC, #68]
0x1BD8	0x191B    ADDS	R3, R3, R4
0x1BDA	0x681C    LDR	R4, [R3, #0]
0x1BDC	0x9B08    LDR	R3, [SP, #32]
0x1BDE	0xFBB3F3F4  UDIV	R3, R3, R4
0x1BE2	0xF003040F  AND	R4, R3, #15
0x1BE6	0x4B10    LDR	R3, [PC, #64]
0x1BE8	0x191B    ADDS	R3, R3, R4
0x1BEA	0x781B    LDRB	R3, [R3, #0]
0x1BEC	0xF88D3014  STRB	R3, [SP, #20]
L___Lib_Sprintf__doprntf290:
;__Lib_Sprintf.c, 710 :: 		
0x1BF0	0xE020    B	L___Lib_Sprintf__doprntf285
;__Lib_Sprintf.c, 712 :: 		
L___Lib_Sprintf__doprntf291:
;__Lib_Sprintf.c, 713 :: 		
0x1BF2	0xEA4F048A  LSL	R4, R10, #2
0x1BF6	0x4B0A    LDR	R3, [PC, #40]
0x1BF8	0x191B    ADDS	R3, R3, R4
0x1BFA	0x681C    LDR	R4, [R3, #0]
0x1BFC	0x9B08    LDR	R3, [SP, #32]
0x1BFE	0xFBB3F3F4  UDIV	R3, R3, R4
0x1C02	0xF0030307  AND	R3, R3, #7
0x1C06	0x3330    ADDS	R3, #48
0x1C08	0xF88D3014  STRB	R3, [SP, #20]
;__Lib_Sprintf.c, 714 :: 		
0x1C0C	0xE012    B	L___Lib_Sprintf__doprntf285
;__Lib_Sprintf.c, 715 :: 		
L___Lib_Sprintf__doprntf284:
0x1C0E	0x2E00    CMP	R6, #0
0x1C10	0xD0BA    BEQ	L___Lib_Sprintf__doprntf286
0x1C12	0x2EC0    CMP	R6, #192
0x1C14	0xD0B8    BEQ	L___Lib_Sprintf__doprntf287
0x1C16	0xE009    B	#18
0x1C18	0x89280000  	__Lib_Sprintf_dpowers+0
0x1C1C	0x89500000  	__Lib_Sprintf_hexpowers+0
0x1C20	0x88F80000  	__Lib_Sprintf_octpowers+0
0x1C24	0x8A1C0000  	__Lib_Sprintf_hexb+0
0x1C28	0x8A0B0000  	__Lib_Sprintf_hexs+0
0x1C2C	0x2E80    CMP	R6, #128
0x1C2E	0xD0BC    BEQ	L___Lib_Sprintf__doprntf288
0x1C30	0x2E40    CMP	R6, #64
0x1C32	0xD0DE    BEQ	L___Lib_Sprintf__doprntf291
L___Lib_Sprintf__doprntf285:
;__Lib_Sprintf.c, 716 :: 		
0x1C34	0xF89D3014  LDRB	R3, [SP, #20]
0x1C38	0x700B    STRB	R3, [R1, #0]
0x1C3A	0x1C49    ADDS	R1, R1, #1
0x1C3C	0x1C40    ADDS	R0, R0, #1
0x1C3E	0xB200    SXTH	R0, R0
;__Lib_Sprintf.c, 717 :: 		
; prec end address is: 40 (R10)
0x1C40	0xFA0FF58A  SXTH	R5, R10
0x1C44	0xE795    B	L___Lib_Sprintf__doprntf282
L___Lib_Sprintf__doprntf283:
;__Lib_Sprintf.c, 718 :: 		
0x1C46	0xF0080308  AND	R3, R8, #8
0x1C4A	0xB29B    UXTH	R3, R3
; flag end address is: 32 (R8)
0x1C4C	0xB193    CBZ	R3, L___Lib_Sprintf__doprntf402
0x1C4E	0xF1B90F00  CMP	R9, #0
0x1C52	0xDD14    BLE	L___Lib_Sprintf__doprntf403
L___Lib_Sprintf__doprntf298:
;__Lib_Sprintf.c, 719 :: 		
; f end address is: 28 (R7)
0x1C54	0x463D    MOV	R5, R7
0x1C56	0xFA0FF489  SXTH	R4, R9
0x1C5A	0xE7FF    B	L___Lib_Sprintf__doprntf295
; width end address is: 36 (R9)
L___Lib_Sprintf__doprntf401:
;__Lib_Sprintf.c, 721 :: 		
;__Lib_Sprintf.c, 719 :: 		
L___Lib_Sprintf__doprntf295:
;__Lib_Sprintf.c, 720 :: 		
; width start address is: 16 (R4)
; f start address is: 20 (R5)
; width start address is: 16 (R4)
; f start address is: 20 (R5)
; f end address is: 20 (R5)
; ap start address is: 8 (R2)
; ap end address is: 8 (R2)
; pb start address is: 4 (R1)
; ccnt start address is: 0 (R0)
0x1C5C	0x2320    MOVS	R3, #32
0x1C5E	0x700B    STRB	R3, [R1, #0]
0x1C60	0x1C49    ADDS	R1, R1, #1
; pb end address is: 4 (R1)
0x1C62	0x1C40    ADDS	R0, R0, #1
0x1C64	0xB200    SXTH	R0, R0
; ccnt end address is: 0 (R0)
;__Lib_Sprintf.c, 721 :: 		
0x1C66	0x1E63    SUBS	R3, R4, #1
0x1C68	0xB21B    SXTH	R3, R3
0x1C6A	0xB21C    SXTH	R4, R3
; width end address is: 16 (R4)
0x1C6C	0x2B00    CMP	R3, #0
0x1C6E	0xD1F5    BNE	L___Lib_Sprintf__doprntf401
; f end address is: 20 (R5)
; width end address is: 16 (R4)
; ap end address is: 8 (R2)
; pb end address is: 4 (R1)
; ccnt end address is: 0 (R0)
0x1C70	0x462B    MOV	R3, R5
;__Lib_Sprintf.c, 718 :: 		
0x1C72	0xE000    B	L___Lib_Sprintf__doprntf353
L___Lib_Sprintf__doprntf402:
0x1C74	0x463B    MOV	R3, R7
L___Lib_Sprintf__doprntf353:
; f start address is: 12 (R3)
; ap start address is: 8 (R2)
; pb start address is: 4 (R1)
; ccnt start address is: 0 (R0)
0x1C76	0xB206    SXTH	R6, R0
; ap end address is: 8 (R2)
; pb end address is: 4 (R1)
; ccnt end address is: 0 (R0)
; f end address is: 12 (R3)
0x1C78	0x4615    MOV	R5, R2
0x1C7A	0x460A    MOV	R2, R1
0x1C7C	0xE003    B	L___Lib_Sprintf__doprntf352
L___Lib_Sprintf__doprntf403:
0x1C7E	0x463B    MOV	R3, R7
0x1C80	0x4615    MOV	R5, R2
0x1C82	0x460A    MOV	R2, R1
0x1C84	0xB206    SXTH	R6, R0
L___Lib_Sprintf__doprntf352:
;__Lib_Sprintf.c, 722 :: 		
; f start address is: 12 (R3)
; ap start address is: 20 (R5)
; pb start address is: 8 (R2)
; ccnt start address is: 24 (R6)
; f end address is: 12 (R3)
; ap end address is: 20 (R5)
; pb end address is: 8 (R2)
0x1C86	0x4618    MOV	R0, R3
0x1C88	0xF7FEBE0F  B	L___Lib_Sprintf__doprntf10
L___Lib_Sprintf__doprntf11:
;__Lib_Sprintf.c, 723 :: 		
0x1C8C	0xB230    SXTH	R0, R6
; ccnt end address is: 24 (R6)
;__Lib_Sprintf.c, 725 :: 		
L_end__doprntf:
0x1C8E	0xF8DDE000  LDR	LR, [SP, #0]
0x1C92	0xB00B    ADD	SP, SP, #44
0x1C94	0x4770    BX	LR
; end of __Lib_Sprintf__doprntf
_isdigit:
;__Lib_CType.c, 23 :: 		
; character start address is: 0 (R0)
0x0188	0xB081    SUB	SP, SP, #4
; character end address is: 0 (R0)
; character start address is: 0 (R0)
;__Lib_CType.c, 24 :: 		
0x018A	0x2839    CMP	R0, #57
0x018C	0xD803    BHI	L_isdigit9
0x018E	0x2830    CMP	R0, #48
0x0190	0xD301    BCC	L_isdigit9
; character end address is: 0 (R0)
0x0192	0x2101    MOVS	R1, #1
0x0194	0xE000    B	L_isdigit8
L_isdigit9:
0x0196	0x2100    MOVS	R1, #0
L_isdigit8:
0x0198	0xB2C8    UXTB	R0, R1
;__Lib_CType.c, 25 :: 		
L_end_isdigit:
0x019A	0xB001    ADD	SP, SP, #4
0x019C	0x4770    BX	LR
; end of _isdigit
__Lib_Sprintf_scale:
;__Lib_Sprintf.c, 145 :: 		
; scl start address is: 0 (R0)
0x01A0	0xB081    SUB	SP, SP, #4
; scl end address is: 0 (R0)
; scl start address is: 0 (R0)
;__Lib_Sprintf.c, 146 :: 		
0x01A2	0x2800    CMP	R0, #0
0x01A4	0xDA57    BGE	L___Lib_Sprintf_scale3
;__Lib_Sprintf.c, 147 :: 		
0x01A6	0x4241    RSBS	R1, R0, #0
0x01A8	0xB248    SXTB	R0, R1
;__Lib_Sprintf.c, 148 :: 		
0x01AA	0xB249    SXTB	R1, R1
0x01AC	0x296E    CMP	R1, #110
0x01AE	0xDB2F    BLT	L___Lib_Sprintf_scale4
;__Lib_Sprintf.c, 149 :: 		
0x01B0	0x2164    MOVS	R1, #100
0x01B2	0xB249    SXTB	R1, R1
0x01B4	0xFB90F1F1  SDIV	R1, R0, R1
0x01B8	0xB249    SXTB	R1, R1
0x01BA	0x3112    ADDS	R1, #18
0x01BC	0xB209    SXTH	R1, R1
0x01BE	0x008A    LSLS	R2, R1, #2
0x01C0	0x4950    LDR	R1, [PC, #320]
0x01C2	0x1889    ADDS	R1, R1, R2
0x01C4	0xED510A00  VLDR.32	S1, [R1, #0]
0x01C8	0x2164    MOVS	R1, #100
0x01CA	0xB249    SXTB	R1, R1
0x01CC	0xFB90F2F1  SDIV	R2, R0, R1
0x01D0	0xFB010212  MLS	R2, R1, R2, R0
0x01D4	0xB252    SXTB	R2, R2
0x01D6	0x210A    MOVS	R1, #10
0x01D8	0xB249    SXTB	R1, R1
0x01DA	0xFB92F1F1  SDIV	R1, R2, R1
0x01DE	0xB249    SXTB	R1, R1
0x01E0	0x3109    ADDS	R1, #9
0x01E2	0xB209    SXTH	R1, R1
0x01E4	0x008A    LSLS	R2, R1, #2
0x01E6	0x4947    LDR	R1, [PC, #284]
0x01E8	0x1889    ADDS	R1, R1, R2
0x01EA	0xED110A00  VLDR.32	S0, [R1, #0]
0x01EE	0xEE600A80  VMUL.F32	S1, S1, S0
0x01F2	0x220A    MOVS	R2, #10
0x01F4	0xB252    SXTB	R2, R2
0x01F6	0xFB90F1F2  SDIV	R1, R0, R2
0x01FA	0xFB020111  MLS	R1, R2, R1, R0
0x01FE	0xB249    SXTB	R1, R1
; scl end address is: 0 (R0)
0x0200	0x008A    LSLS	R2, R1, #2
0x0202	0x4940    LDR	R1, [PC, #256]
0x0204	0x1889    ADDS	R1, R1, R2
0x0206	0xED110A00  VLDR.32	S0, [R1, #0]
0x020A	0xEE200A80  VMUL.F32	S0, S1, S0
0x020E	0xE076    B	L_end_scale
L___Lib_Sprintf_scale4:
;__Lib_Sprintf.c, 151 :: 		
; scl start address is: 0 (R0)
0x0210	0x280A    CMP	R0, #10
0x0212	0xDD1A    BLE	L___Lib_Sprintf_scale6
;__Lib_Sprintf.c, 152 :: 		
0x0214	0x210A    MOVS	R1, #10
0x0216	0xB249    SXTB	R1, R1
0x0218	0xFB90F1F1  SDIV	R1, R0, R1
0x021C	0xB249    SXTB	R1, R1
0x021E	0x3109    ADDS	R1, #9
0x0220	0xB209    SXTH	R1, R1
0x0222	0x008A    LSLS	R2, R1, #2
0x0224	0x4937    LDR	R1, [PC, #220]
0x0226	0x1889    ADDS	R1, R1, R2
0x0228	0xED510A00  VLDR.32	S1, [R1, #0]
0x022C	0x220A    MOVS	R2, #10
0x022E	0xB252    SXTB	R2, R2
0x0230	0xFB90F1F2  SDIV	R1, R0, R2
0x0234	0xFB020111  MLS	R1, R2, R1, R0
0x0238	0xB249    SXTB	R1, R1
; scl end address is: 0 (R0)
0x023A	0x008A    LSLS	R2, R1, #2
0x023C	0x4931    LDR	R1, [PC, #196]
0x023E	0x1889    ADDS	R1, R1, R2
0x0240	0xED110A00  VLDR.32	S0, [R1, #0]
0x0244	0xEE200A80  VMUL.F32	S0, S1, S0
0x0248	0xE059    B	L_end_scale
L___Lib_Sprintf_scale6:
;__Lib_Sprintf.c, 153 :: 		
; scl start address is: 0 (R0)
0x024A	0x0082    LSLS	R2, R0, #2
; scl end address is: 0 (R0)
0x024C	0x492D    LDR	R1, [PC, #180]
0x024E	0x1889    ADDS	R1, R1, R2
0x0250	0xED110A00  VLDR.32	S0, [R1, #0]
0x0254	0xE053    B	L_end_scale
;__Lib_Sprintf.c, 154 :: 		
L___Lib_Sprintf_scale3:
;__Lib_Sprintf.c, 155 :: 		
; scl start address is: 0 (R0)
0x0256	0x286E    CMP	R0, #110
0x0258	0xDB2F    BLT	L___Lib_Sprintf_scale7
;__Lib_Sprintf.c, 156 :: 		
0x025A	0x2164    MOVS	R1, #100
0x025C	0xB249    SXTB	R1, R1
0x025E	0xFB90F1F1  SDIV	R1, R0, R1
0x0262	0xB249    SXTB	R1, R1
0x0264	0x3112    ADDS	R1, #18
0x0266	0xB209    SXTH	R1, R1
0x0268	0x008A    LSLS	R2, R1, #2
0x026A	0x4927    LDR	R1, [PC, #156]
0x026C	0x1889    ADDS	R1, R1, R2
0x026E	0xED510A00  VLDR.32	S1, [R1, #0]
0x0272	0x2164    MOVS	R1, #100
0x0274	0xB249    SXTB	R1, R1
0x0276	0xFB90F2F1  SDIV	R2, R0, R1
0x027A	0xFB010212  MLS	R2, R1, R2, R0
0x027E	0xB252    SXTB	R2, R2
0x0280	0x210A    MOVS	R1, #10
0x0282	0xB249    SXTB	R1, R1
0x0284	0xFB92F1F1  SDIV	R1, R2, R1
0x0288	0xB249    SXTB	R1, R1
0x028A	0x3109    ADDS	R1, #9
0x028C	0xB209    SXTH	R1, R1
0x028E	0x008A    LSLS	R2, R1, #2
0x0290	0x491D    LDR	R1, [PC, #116]
0x0292	0x1889    ADDS	R1, R1, R2
0x0294	0xED110A00  VLDR.32	S0, [R1, #0]
0x0298	0xEE600A80  VMUL.F32	S1, S1, S0
0x029C	0x220A    MOVS	R2, #10
0x029E	0xB252    SXTB	R2, R2
0x02A0	0xFB90F1F2  SDIV	R1, R0, R2
0x02A4	0xFB020111  MLS	R1, R2, R1, R0
0x02A8	0xB249    SXTB	R1, R1
; scl end address is: 0 (R0)
0x02AA	0x008A    LSLS	R2, R1, #2
0x02AC	0x4916    LDR	R1, [PC, #88]
0x02AE	0x1889    ADDS	R1, R1, R2
0x02B0	0xED110A00  VLDR.32	S0, [R1, #0]
0x02B4	0xEE200A80  VMUL.F32	S0, S1, S0
0x02B8	0xE021    B	L_end_scale
L___Lib_Sprintf_scale7:
;__Lib_Sprintf.c, 158 :: 		
; scl start address is: 0 (R0)
0x02BA	0x280A    CMP	R0, #10
0x02BC	0xDD1A    BLE	L___Lib_Sprintf_scale9
;__Lib_Sprintf.c, 159 :: 		
0x02BE	0x210A    MOVS	R1, #10
0x02C0	0xB249    SXTB	R1, R1
0x02C2	0xFB90F1F1  SDIV	R1, R0, R1
0x02C6	0xB249    SXTB	R1, R1
0x02C8	0x3109    ADDS	R1, #9
0x02CA	0xB209    SXTH	R1, R1
0x02CC	0x008A    LSLS	R2, R1, #2
0x02CE	0x490E    LDR	R1, [PC, #56]
0x02D0	0x1889    ADDS	R1, R1, R2
0x02D2	0xED510A00  VLDR.32	S1, [R1, #0]
0x02D6	0x220A    MOVS	R2, #10
0x02D8	0xB252    SXTB	R2, R2
0x02DA	0xFB90F1F2  SDIV	R1, R0, R2
0x02DE	0xFB020111  MLS	R1, R2, R1, R0
0x02E2	0xB249    SXTB	R1, R1
; scl end address is: 0 (R0)
0x02E4	0x008A    LSLS	R2, R1, #2
0x02E6	0x4908    LDR	R1, [PC, #32]
0x02E8	0x1889    ADDS	R1, R1, R2
0x02EA	0xED110A00  VLDR.32	S0, [R1, #0]
0x02EE	0xEE200A80  VMUL.F32	S0, S1, S0
0x02F2	0xE004    B	L_end_scale
L___Lib_Sprintf_scale9:
;__Lib_Sprintf.c, 160 :: 		
; scl start address is: 0 (R0)
0x02F4	0x0082    LSLS	R2, R0, #2
; scl end address is: 0 (R0)
0x02F6	0x4904    LDR	R1, [PC, #16]
0x02F8	0x1889    ADDS	R1, R1, R2
0x02FA	0xED110A00  VLDR.32	S0, [R1, #0]
;__Lib_Sprintf.c, 161 :: 		
L_end_scale:
0x02FE	0xB001    ADD	SP, SP, #4
0x0300	0x4770    BX	LR
0x0302	0xBF00    NOP
0x0304	0x88900000  	__Lib_Sprintf__npowers_+0
0x0308	0x885C0000  	__Lib_Sprintf__powers_+0
; end of __Lib_Sprintf_scale
__Lib_Sprintf_fround:
;__Lib_Sprintf.c, 132 :: 		
; prec start address is: 0 (R0)
0x0610	0xB081    SUB	SP, SP, #4
; prec end address is: 0 (R0)
; prec start address is: 0 (R0)
;__Lib_Sprintf.c, 134 :: 		
0x0612	0x286E    CMP	R0, #110
0x0614	0xD32F    BCC	L___Lib_Sprintf_fround0
;__Lib_Sprintf.c, 135 :: 		
0x0616	0x2164    MOVS	R1, #100
0x0618	0xFBB0F1F1  UDIV	R1, R0, R1
0x061C	0xB2C9    UXTB	R1, R1
0x061E	0x3112    ADDS	R1, #18
0x0620	0xB209    SXTH	R1, R1
0x0622	0x008A    LSLS	R2, R1, #2
0x0624	0x4929    LDR	R1, [PC, #164]
0x0626	0x1889    ADDS	R1, R1, R2
0x0628	0xED510A00  VLDR.32	S1, [R1, #0]
0x062C	0xEEB60A00  VMOV.F32	S0, #0.5
0x0630	0xEE600A20  VMUL.F32	S1, S0, S1
0x0634	0x2164    MOVS	R1, #100
0x0636	0xFBB0F2F1  UDIV	R2, R0, R1
0x063A	0xFB010212  MLS	R2, R1, R2, R0
0x063E	0xB2D2    UXTB	R2, R2
0x0640	0x210A    MOVS	R1, #10
0x0642	0xFBB2F1F1  UDIV	R1, R2, R1
0x0646	0xB2C9    UXTB	R1, R1
0x0648	0x3109    ADDS	R1, #9
0x064A	0xB209    SXTH	R1, R1
0x064C	0x008A    LSLS	R2, R1, #2
0x064E	0x491F    LDR	R1, [PC, #124]
0x0650	0x1889    ADDS	R1, R1, R2
0x0652	0xED110A00  VLDR.32	S0, [R1, #0]
0x0656	0xEE600A80  VMUL.F32	S1, S1, S0
0x065A	0x220A    MOVS	R2, #10
0x065C	0xFBB0F1F2  UDIV	R1, R0, R2
0x0660	0xFB020111  MLS	R1, R2, R1, R0
0x0664	0xB2C9    UXTB	R1, R1
; prec end address is: 0 (R0)
0x0666	0x008A    LSLS	R2, R1, #2
0x0668	0x4918    LDR	R1, [PC, #96]
0x066A	0x1889    ADDS	R1, R1, R2
0x066C	0xED110A00  VLDR.32	S0, [R1, #0]
0x0670	0xEE200A80  VMUL.F32	S0, S1, S0
0x0674	0xE027    B	L_end_fround
L___Lib_Sprintf_fround0:
;__Lib_Sprintf.c, 137 :: 		
; prec start address is: 0 (R0)
0x0676	0x280A    CMP	R0, #10
0x0678	0xD91C    BLS	L___Lib_Sprintf_fround2
;__Lib_Sprintf.c, 138 :: 		
0x067A	0x210A    MOVS	R1, #10
0x067C	0xFBB0F1F1  UDIV	R1, R0, R1
0x0680	0xB2C9    UXTB	R1, R1
0x0682	0x3109    ADDS	R1, #9
0x0684	0xB209    SXTH	R1, R1
0x0686	0x008A    LSLS	R2, R1, #2
0x0688	0x4910    LDR	R1, [PC, #64]
0x068A	0x1889    ADDS	R1, R1, R2
0x068C	0xED510A00  VLDR.32	S1, [R1, #0]
0x0690	0xEEB60A00  VMOV.F32	S0, #0.5
0x0694	0xEE600A20  VMUL.F32	S1, S0, S1
0x0698	0x220A    MOVS	R2, #10
0x069A	0xFBB0F1F2  UDIV	R1, R0, R2
0x069E	0xFB020111  MLS	R1, R2, R1, R0
0x06A2	0xB2C9    UXTB	R1, R1
; prec end address is: 0 (R0)
0x06A4	0x008A    LSLS	R2, R1, #2
0x06A6	0x4909    LDR	R1, [PC, #36]
0x06A8	0x1889    ADDS	R1, R1, R2
0x06AA	0xED110A00  VLDR.32	S0, [R1, #0]
0x06AE	0xEE200A80  VMUL.F32	S0, S1, S0
0x06B2	0xE008    B	L_end_fround
L___Lib_Sprintf_fround2:
;__Lib_Sprintf.c, 139 :: 		
; prec start address is: 0 (R0)
0x06B4	0x0082    LSLS	R2, R0, #2
; prec end address is: 0 (R0)
0x06B6	0x4905    LDR	R1, [PC, #20]
0x06B8	0x1889    ADDS	R1, R1, R2
0x06BA	0xED510A00  VLDR.32	S1, [R1, #0]
0x06BE	0xEEB60A00  VMOV.F32	S0, #0.5
0x06C2	0xEE200A20  VMUL.F32	S0, S0, S1
;__Lib_Sprintf.c, 140 :: 		
L_end_fround:
0x06C6	0xB001    ADD	SP, SP, #4
0x06C8	0x4770    BX	LR
0x06CA	0xBF00    NOP
0x06CC	0x88900000  	__Lib_Sprintf__npowers_+0
; end of __Lib_Sprintf_fround
_vRF4463TxData:
;driverrf4463pro.c, 586 :: 		void vRF4463TxData( void ) {
0x4FD0	0xB086    SUB	SP, SP, #24
0x4FD2	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 589 :: 		ucRF4463IRQ = 0;
0x4FD6	0x2100    MOVS	R1, #0
0x4FD8	0x482B    LDR	R0, [PC, #172]
0x4FDA	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 591 :: 		Flag.is_tx = 1;
0x4FDC	0x2101    MOVS	R1, #1
0x4FDE	0xB249    SXTB	R1, R1
0x4FE0	0x482A    LDR	R0, [PC, #168]
0x4FE2	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 592 :: 		LED_RED ^= 1;
0x4FE4	0x482A    LDR	R0, [PC, #168]
0x4FE6	0x6800    LDR	R0, [R0, #0]
0x4FE8	0xF0800101  EOR	R1, R0, #1
0x4FEC	0xB2C9    UXTB	R1, R1
0x4FEE	0x4828    LDR	R0, [PC, #160]
0x4FF0	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 593 :: 		Delay_ms( 30 );
0x4FF2	0xF24A277E  MOVW	R7, #41598
0x4FF6	0xF2C00719  MOVT	R7, #25
L_vRF4463TxData95:
0x4FFA	0x1E7F    SUBS	R7, R7, #1
0x4FFC	0xD1FD    BNE	L_vRF4463TxData95
0x4FFE	0xBF00    NOP
0x5000	0xBF00    NOP
0x5002	0xBF00    NOP
0x5004	0xBF00    NOP
0x5006	0xBF00    NOP
;driverrf4463pro.c, 594 :: 		LED_RED ^= 1;
0x5008	0x4821    LDR	R0, [PC, #132]
0x500A	0x6800    LDR	R0, [R0, #0]
0x500C	0xF0800101  EOR	R1, R0, #1
0x5010	0xB2C9    UXTB	R1, R1
0x5012	0x481F    LDR	R0, [PC, #124]
0x5014	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 595 :: 		vRF4463FifoReset();            // fifo_reset();  // Buffer empty
0x5016	0xF7FDFDD3  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 596 :: 		spi_write_fifo();              // Fill the buffer with data
0x501A	0xF7FDFD73  BL	_spi_write_fifo+0
;driverrf4463pro.c, 597 :: 		vRF4463EnableTxInterrupt();    // enable_tx_interrupt();
0x501E	0xF7FDFE47  BL	_vRF4463EnableTxInterrupt+0
;driverrf4463pro.c, 598 :: 		vRF4463ClearInterrupts();       // clr_interrupt();  // Clear interrupt factor
0x5022	0xF7FFFF5B  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 599 :: 		vRF4463TxStart();              // tx_start();    // Enter launch mode, start launch
0x5026	0xF7FDFE1D  BL	_vRF4463TxStart+0
;driverrf4463pro.c, 600 :: 		rf_timeout = 0;
0x502A	0x2100    MOVS	R1, #0
0x502C	0x4819    LDR	R0, [PC, #100]
0x502E	0x8001    STRH	R1, [R0, #0]
;driverrf4463pro.c, 602 :: 		Flag.rf_reach_timeout = 0;
0x5030	0x2100    MOVS	R1, #0
0x5032	0xB249    SXTB	R1, R1
0x5034	0x4818    LDR	R0, [PC, #96]
0x5036	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 604 :: 		if ( ucRF4463IRQ ) {
0x5038	0x4813    LDR	R0, [PC, #76]
0x503A	0x7800    LDRB	R0, [R0, #0]
0x503C	0xB160    CBZ	R0, L_vRF4463TxData97
;driverrf4463pro.c, 605 :: 		UART1_Write_Text( "[ UART1 ] TX INT\r\n" );
0x503E	0xF10D0B04  ADD	R11, SP, #4
0x5042	0xF10B0A13  ADD	R10, R11, #19
0x5046	0xF8DFC054  LDR	R12, [PC, #84]
0x504A	0xF7FFF855  BL	___CC2DW+0
0x504E	0xA801    ADD	R0, SP, #4
0x5050	0x4604    MOV	R4, R0
0x5052	0x4620    MOV	R0, R4
0x5054	0xF7FDFB3C  BL	_UART1_Write_Text+0
;driverrf4463pro.c, 606 :: 		}
L_vRF4463TxData97:
;driverrf4463pro.c, 609 :: 		while ( nIRQ ) {     //nIRQ
L_vRF4463TxData98:
0x5058	0x4811    LDR	R0, [PC, #68]
0x505A	0x6800    LDR	R0, [R0, #0]
0x505C	0xB140    CBZ	R0, L_vRF4463TxData99
;driverrf4463pro.c, 612 :: 		if ( Flag.rf_reach_timeout ) {
0x505E	0x490E    LDR	R1, [PC, #56]
0x5060	0x6808    LDR	R0, [R1, #0]
0x5062	0xB120    CBZ	R0, L_vRF4463TxData100
;driverrf4463pro.c, 613 :: 		VRF4463SDNReset();
0x5064	0xF7FFF920  BL	_VRF4463SDNReset+0
;driverrf4463pro.c, 614 :: 		vRF4463Init();        //SI4463_init();  // RF Module initialization
0x5068	0xF7FFF976  BL	_vRF4463Init+0
;driverrf4463pro.c, 615 :: 		break;                // Forced out
0x506C	0xE000    B	L_vRF4463TxData99
;driverrf4463pro.c, 616 :: 		}
L_vRF4463TxData100:
;driverrf4463pro.c, 617 :: 		}
0x506E	0xE7F3    B	L_vRF4463TxData98
L_vRF4463TxData99:
;driverrf4463pro.c, 619 :: 		tx_cnt++;
0x5070	0x480C    LDR	R0, [PC, #48]
0x5072	0x6800    LDR	R0, [R0, #0]
0x5074	0x1C41    ADDS	R1, R0, #1
0x5076	0x480B    LDR	R0, [PC, #44]
0x5078	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 621 :: 		vRF4463RxInit();          // rx_init();                //rf After the transmission is completed, enter the receiving mode
0x507A	0xF7FDFF23  BL	_vRF4463RxInit+0
;driverrf4463pro.c, 622 :: 		}
L_end_vRF4463TxData:
0x507E	0xF8DDE000  LDR	LR, [SP, #0]
0x5082	0xB006    ADD	SP, SP, #24
0x5084	0x4770    BX	LR
0x5086	0xBF00    NOP
0x5088	0x22872000  	DriverRF4463PROMain_ucRF4463IRQ+0
0x508C	0x6A842204  	_Flag+0
0x5090	0x02984241  	GPIOC_ODRbits+0
0x5094	0x23982000  	_rf_timeout+0
0x5098	0x6A882204  	_Flag+0
0x509C	0x89F80000  	?ICS?lstr1_DriverRF4463PROMain+0
0x50A0	0x82284241  	GPIOD_IDRbits+0
0x50A4	0x22882000  	_tx_cnt+0
; end of _vRF4463TxData
_vRF4463FifoReset:
;driverrf4463pro.c, 435 :: 		void vRF4463FifoReset( void ) {
0x2BC0	0xB082    SUB	SP, SP, #8
0x2BC2	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 438 :: 		p[ 0 ] = FIFO_INFO;
0x2BC6	0xA801    ADD	R0, SP, #4
0x2BC8	0x1C01    ADDS	R1, R0, #0
0x2BCA	0x2015    MOVS	R0, #21
0x2BCC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 439 :: 		p[ 1 ] = 0x03;   // reset tx ,rx fifo
0x2BCE	0xA801    ADD	R0, SP, #4
0x2BD0	0x1C41    ADDS	R1, R0, #1
0x2BD2	0x2003    MOVS	R0, #3
0x2BD4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 440 :: 		spi_write( 2, p );
0x2BD6	0xA801    ADD	R0, SP, #4
0x2BD8	0xB401    PUSH	(R0)
0x2BDA	0x2002    MOVS	R0, #2
0x2BDC	0xB401    PUSH	(R0)
0x2BDE	0xF7FFF919  BL	_spi_write+0
0x2BE2	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 441 :: 		}
L_end_vRF4463FifoReset:
0x2BE4	0xF8DDE000  LDR	LR, [SP, #0]
0x2BE8	0xB002    ADD	SP, SP, #8
0x2BEA	0x4770    BX	LR
; end of _vRF4463FifoReset
_spi_write_fifo:
;driverrf4463pro.c, 922 :: 		void spi_write_fifo( void ) {
0x2B04	0xB082    SUB	SP, SP, #8
0x2B06	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 925 :: 		i = 0;
0x2B0A	0x2000    MOVS	R0, #0
0x2B0C	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 926 :: 		while ( i != 0xFF ) {
L_spi_write_fifo137:
0x2B10	0xF89D0004  LDRB	R0, [SP, #4]
0x2B14	0xF1B00FFF  CMP	R0, #255
0x2B18	0xD004    BEQ	L_spi_write_fifo138
;driverrf4463pro.c, 927 :: 		i = check_cts();                // Check if you can send Command
0x2B1A	0xF7FDFE4D  BL	_check_cts+0
0x2B1E	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 928 :: 		}
0x2B22	0xE7F5    B	L_spi_write_fifo137
L_spi_write_fifo138:
;driverrf4463pro.c, 930 :: 		nSEL = 1;
0x2B24	0x2101    MOVS	R1, #1
0x2B26	0xB249    SXTB	R1, R1
0x2B28	0x4821    LDR	R0, [PC, #132]
0x2B2A	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 931 :: 		nSEL = 0;
0x2B2C	0x2100    MOVS	R1, #0
0x2B2E	0xB249    SXTB	R1, R1
0x2B30	0x481F    LDR	R0, [PC, #124]
0x2B32	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 932 :: 		ucRf4463SPIByte( WRITE_TX_FIFO );
0x2B34	0x2066    MOVS	R0, #102
0x2B36	0xB401    PUSH	(R0)
0x2B38	0xF000F90A  BL	_ucRf4463SPIByte+0
0x2B3C	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 934 :: 		if ( ucRF4463Mode == tx_test_mode) {
0x2B3E	0x481D    LDR	R0, [PC, #116]
0x2B40	0x7800    LDRB	R0, [R0, #0]
0x2B42	0x2802    CMP	R0, #2
0x2B44	0xD116    BNE	L_spi_write_fifo139
;driverrf4463pro.c, 935 :: 		for ( i = 0; i < payload_length; i++ ) {
0x2B46	0x2000    MOVS	R0, #0
0x2B48	0xF88D0004  STRB	R0, [SP, #4]
L_spi_write_fifo140:
0x2B4C	0xF89D0004  LDRB	R0, [SP, #4]
0x2B50	0x2842    CMP	R0, #66
0x2B52	0xD20E    BCS	L_spi_write_fifo141
;driverrf4463pro.c, 936 :: 		ucRf4463SPIByte( tx_test_aa_data[ i ] );   // Send 10 test data
0x2B54	0xF89D1004  LDRB	R1, [SP, #4]
0x2B58	0x4817    LDR	R0, [PC, #92]
0x2B5A	0x1840    ADDS	R0, R0, R1
0x2B5C	0x7800    LDRB	R0, [R0, #0]
0x2B5E	0xB401    PUSH	(R0)
0x2B60	0xF000F8F6  BL	_ucRf4463SPIByte+0
0x2B64	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 935 :: 		for ( i = 0; i < payload_length; i++ ) {
0x2B66	0xF89D0004  LDRB	R0, [SP, #4]
0x2B6A	0x1C40    ADDS	R0, R0, #1
0x2B6C	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 937 :: 		}
0x2B70	0xE7EC    B	L_spi_write_fifo140
L_spi_write_fifo141:
;driverrf4463pro.c, 938 :: 		}
0x2B72	0xE015    B	L_spi_write_fifo143
L_spi_write_fifo139:
;driverrf4463pro.c, 940 :: 		for ( i = 0; i < payload_length; i++ ) {
0x2B74	0x2000    MOVS	R0, #0
0x2B76	0xF88D0004  STRB	R0, [SP, #4]
L_spi_write_fifo144:
0x2B7A	0xF89D0004  LDRB	R0, [SP, #4]
0x2B7E	0x2842    CMP	R0, #66
0x2B80	0xD20E    BCS	L_spi_write_fifo145
;driverrf4463pro.c, 941 :: 		ucRf4463SPIByte( ucRF4463TXdata[ i ] );
0x2B82	0xF89D1004  LDRB	R1, [SP, #4]
0x2B86	0x480D    LDR	R0, [PC, #52]
0x2B88	0x1840    ADDS	R0, R0, R1
0x2B8A	0x7800    LDRB	R0, [R0, #0]
0x2B8C	0xB401    PUSH	(R0)
0x2B8E	0xF000F8DF  BL	_ucRf4463SPIByte+0
0x2B92	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 940 :: 		for ( i = 0; i < payload_length; i++ ) {
0x2B94	0xF89D0004  LDRB	R0, [SP, #4]
0x2B98	0x1C40    ADDS	R0, R0, #1
0x2B9A	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 942 :: 		}
0x2B9E	0xE7EC    B	L_spi_write_fifo144
L_spi_write_fifo145:
;driverrf4463pro.c, 943 :: 		}
L_spi_write_fifo143:
;driverrf4463pro.c, 944 :: 		nSEL = 1;
0x2BA0	0x2101    MOVS	R1, #1
0x2BA2	0xB249    SXTB	R1, R1
0x2BA4	0x4802    LDR	R0, [PC, #8]
0x2BA6	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 945 :: 		}
L_end_spi_write_fifo:
0x2BA8	0xF8DDE000  LDR	LR, [SP, #0]
0x2BAC	0xB002    ADD	SP, SP, #8
0x2BAE	0x4770    BX	LR
0x2BB0	0x82B44241  	GPIOD_ODRbits+0
0x2BB4	0x233F2000  	_ucRF4463Mode+0
0x2BB8	0x8A2D0000  	_tx_test_aa_data+0
0x2BBC	0x21732000  	_ucRF4463TXdata+0
; end of _spi_write_fifo
_vRF4463EnableTxInterrupt:
;driverrf4463pro.c, 488 :: 		void vRF4463EnableTxInterrupt( void ) {
0x2CB0	0xB083    SUB	SP, SP, #12
0x2CB2	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 491 :: 		p[ 0 ] = 0x11;
0x2CB6	0xA801    ADD	R0, SP, #4
0x2CB8	0x1C01    ADDS	R1, R0, #0
0x2CBA	0x2011    MOVS	R0, #17
0x2CBC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 492 :: 		p[ 1 ] = 0x01;            // 0x0100
0x2CBE	0xA801    ADD	R0, SP, #4
0x2CC0	0x1C41    ADDS	R1, R0, #1
0x2CC2	0x2001    MOVS	R0, #1
0x2CC4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 493 :: 		p[ 2 ] = 0x02;            // 2Parameters
0x2CC6	0xA801    ADD	R0, SP, #4
0x2CC8	0x1C81    ADDS	R1, R0, #2
0x2CCA	0x2002    MOVS	R0, #2
0x2CCC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 494 :: 		p[ 3 ] = 0x00;            // 0x0100
0x2CCE	0xA801    ADD	R0, SP, #4
0x2CD0	0x1CC1    ADDS	R1, R0, #3
0x2CD2	0x2000    MOVS	R0, #0
0x2CD4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 495 :: 		p[ 4 ] = 0x01;            // Ph  int
0x2CD6	0xA801    ADD	R0, SP, #4
0x2CD8	0x1D01    ADDS	R1, R0, #4
0x2CDA	0x2001    MOVS	R0, #1
0x2CDC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 496 :: 		p[ 5 ] = 0x20;            //  enable  packet sent interrupt
0x2CDE	0xA801    ADD	R0, SP, #4
0x2CE0	0x1D41    ADDS	R1, R0, #5
0x2CE2	0x2020    MOVS	R0, #32
0x2CE4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 497 :: 		spi_write( 0x06, p );     // enable  packet receive interrupt
0x2CE6	0xA801    ADD	R0, SP, #4
0x2CE8	0xB401    PUSH	(R0)
0x2CEA	0x2006    MOVS	R0, #6
0x2CEC	0xB401    PUSH	(R0)
0x2CEE	0xF7FFF891  BL	_spi_write+0
0x2CF2	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 498 :: 		}
L_end_vRF4463EnableTxInterrupt:
0x2CF4	0xF8DDE000  LDR	LR, [SP, #0]
0x2CF8	0xB003    ADD	SP, SP, #12
0x2CFA	0x4770    BX	LR
; end of _vRF4463EnableTxInterrupt
_vRF4463TxStart:
;driverrf4463pro.c, 514 :: 		void vRF4463TxStart( void ) {
0x2C64	0xB083    SUB	SP, SP, #12
0x2C66	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 517 :: 		p[ 0 ] = START_TX ;              // start Command
0x2C6A	0xA801    ADD	R0, SP, #4
0x2C6C	0x1C01    ADDS	R1, R0, #0
0x2C6E	0x2031    MOVS	R0, #49
0x2C70	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 518 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 1 default
0x2C72	0xA801    ADD	R0, SP, #4
0x2C74	0x1C41    ADDS	R1, R0, #1
0x2C76	0x480D    LDR	R0, [PC, #52]
0x2C78	0x7800    LDRB	R0, [R0, #0]
0x2C7A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 519 :: 		p[ 2 ] = 0x30;                   // Back after launch Readymode, Do not retransmit, launch immediately
0x2C7C	0xA801    ADD	R0, SP, #4
0x2C7E	0x1C81    ADDS	R1, R0, #2
0x2C80	0x2030    MOVS	R0, #48
0x2C82	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 520 :: 		p[ 3 ] = 0;
0x2C84	0xA801    ADD	R0, SP, #4
0x2C86	0x1CC1    ADDS	R1, R0, #3
0x2C88	0x2000    MOVS	R0, #0
0x2C8A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 521 :: 		p[ 4 ] = 0;                      // payload_length; // Total to transmit 10 bytes
0x2C8C	0xA801    ADD	R0, SP, #4
0x2C8E	0x1D01    ADDS	R1, R0, #4
0x2C90	0x2000    MOVS	R0, #0
0x2C92	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 522 :: 		spi_write( 5, p );
0x2C94	0xA801    ADD	R0, SP, #4
0x2C96	0xB401    PUSH	(R0)
0x2C98	0x2005    MOVS	R0, #5
0x2C9A	0xB401    PUSH	(R0)
0x2C9C	0xF7FFF8BA  BL	_spi_write+0
0x2CA0	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 523 :: 		}
L_end_vRF4463TxStart:
0x2CA2	0xF8DDE000  LDR	LR, [SP, #0]
0x2CA6	0xB003    ADD	SP, SP, #12
0x2CA8	0x4770    BX	LR
0x2CAA	0xBF00    NOP
0x2CAC	0x207C2000  	_ucRF4463FreqChannel+0
; end of _vRF4463TxStart
_UART1_Write_Text:
;__Lib_UART_123_45_6.c, 78 :: 		
; uart_text start address is: 0 (R0)
0x26D0	0xB081    SUB	SP, SP, #4
0x26D2	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 79 :: 		
0x26D6	0x4601    MOV	R1, R0
; uart_text end address is: 0 (R0)
0x26D8	0x4803    LDR	R0, [PC, #12]
0x26DA	0xF7FFFCAF  BL	__Lib_UART_123_45_6_UARTx_Write_Text+0
;__Lib_UART_123_45_6.c, 80 :: 		
L_end_UART1_Write_Text:
0x26DE	0xF8DDE000  LDR	LR, [SP, #0]
0x26E2	0xB001    ADD	SP, SP, #4
0x26E4	0x4770    BX	LR
0x26E6	0xBF00    NOP
0x26E8	0x10004001  	USART1_SR+0
; end of _UART1_Write_Text
__Lib_UART_123_45_6_UARTx_Write_Text:
;__Lib_UART_123_45_6.c, 67 :: 		
; uart_text start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x203C	0xB081    SUB	SP, SP, #4
0x203E	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; uart_text start address is: 4 (R1)
;__Lib_UART_123_45_6.c, 68 :: 		
; counter start address is: 24 (R6)
0x2042	0x2600    MOVS	R6, #0
;__Lib_UART_123_45_6.c, 70 :: 		
0x2044	0x780A    LDRB	R2, [R1, #0]
; data_ start address is: 12 (R3)
0x2046	0xB2D3    UXTB	R3, R2
; UART_Base end address is: 0 (R0)
; uart_text end address is: 4 (R1)
; data_ end address is: 12 (R3)
; counter end address is: 24 (R6)
0x2048	0x4605    MOV	R5, R0
0x204A	0xB2D8    UXTB	R0, R3
0x204C	0x460C    MOV	R4, R1
;__Lib_UART_123_45_6.c, 71 :: 		
L___Lib_UART_123_45_6_UARTx_Write_Text2:
; data_ start address is: 0 (R0)
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
; counter start address is: 24 (R6)
; uart_text start address is: 16 (R4)
; uart_text end address is: 16 (R4)
; UART_Base start address is: 20 (R5)
; UART_Base end address is: 20 (R5)
0x204E	0xB150    CBZ	R0, L___Lib_UART_123_45_6_UARTx_Write_Text3
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
;__Lib_UART_123_45_6.c, 72 :: 		
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
0x2050	0xB2C1    UXTB	R1, R0
; data_ end address is: 0 (R0)
0x2052	0x4628    MOV	R0, R5
0x2054	0xF7FEFBD4  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 73 :: 		
0x2058	0x1C72    ADDS	R2, R6, #1
0x205A	0xB2D2    UXTB	R2, R2
0x205C	0xB2D6    UXTB	R6, R2
;__Lib_UART_123_45_6.c, 74 :: 		
0x205E	0x18A2    ADDS	R2, R4, R2
0x2060	0x7812    LDRB	R2, [R2, #0]
; data_ start address is: 0 (R0)
0x2062	0xB2D0    UXTB	R0, R2
;__Lib_UART_123_45_6.c, 75 :: 		
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
; counter end address is: 24 (R6)
; data_ end address is: 0 (R0)
0x2064	0xE7F3    B	L___Lib_UART_123_45_6_UARTx_Write_Text2
L___Lib_UART_123_45_6_UARTx_Write_Text3:
;__Lib_UART_123_45_6.c, 76 :: 		
L_end_UARTx_Write_Text:
0x2066	0xF8DDE000  LDR	LR, [SP, #0]
0x206A	0xB001    ADD	SP, SP, #4
0x206C	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write_Text
__Lib_UART_123_45_6_UARTx_Write:
;__Lib_UART_123_45_6.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0800	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x0802	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x0806	0x4601    MOV	R1, R0
0x0808	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45_6.c, 36 :: 		
L___Lib_UART_123_45_6_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x080C	0x680B    LDR	R3, [R1, #0]
0x080E	0xF3C312C0  UBFX	R2, R3, #7, #1
0x0812	0xB902    CBNZ	R2, L___Lib_UART_123_45_6_UARTx_Write1
;__Lib_UART_123_45_6.c, 37 :: 		
0x0814	0xE7FA    B	L___Lib_UART_123_45_6_UARTx_Write0
L___Lib_UART_123_45_6_UARTx_Write1:
;__Lib_UART_123_45_6.c, 38 :: 		
0x0816	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x0818	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 39 :: 		
L_end_UARTx_Write:
0x081A	0xB001    ADD	SP, SP, #4
0x081C	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write
_vRF4463RxInit:
;driverrf4463pro.c, 569 :: 		void vRF4463RxInit( void ) {
0x2EC4	0xB081    SUB	SP, SP, #4
0x2EC6	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 570 :: 		Flag.is_tx = 0;
0x2ECA	0x2100    MOVS	R1, #0
0x2ECC	0xB249    SXTB	R1, R1
0x2ECE	0x480A    LDR	R0, [PC, #40]
0x2ED0	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 571 :: 		vRF4463FifoReset();           // fifo_reset();  // Buffer empty
0x2ED2	0xF7FFFE75  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 572 :: 		vRF4463EnableRxInterrupt();   // enable_rx_interrupt();
0x2ED6	0xF7FFF983  BL	_vRF4463EnableRxInterrupt+0
;driverrf4463pro.c, 573 :: 		vRF4463ClearInterrupts();      // clr_interrupt();  // Clear interrupt factor
0x2EDA	0xF001FFFF  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 575 :: 		if ( ucRF4463Mode == rx_test_mode ) {
0x2EDE	0x4807    LDR	R0, [PC, #28]
0x2EE0	0x7800    LDRB	R0, [R0, #0]
0x2EE2	0x2803    CMP	R0, #3
0x2EE4	0xD102    BNE	L_vRF4463RxInit93
;driverrf4463pro.c, 576 :: 		vRF4463RxStartTest();      // rx_start_test();
0x2EE6	0xF7FFF9A5  BL	_vRF4463RxStartTest+0
;driverrf4463pro.c, 577 :: 		}
0x2EEA	0xE001    B	L_vRF4463RxInit94
L_vRF4463RxInit93:
;driverrf4463pro.c, 579 :: 		vRF4463RxStart();        // rx_start();    // Enter receiving mode, after receiving data, return to Readymode
0x2EEC	0xF7FEFFF6  BL	_vRF4463RxStart+0
;driverrf4463pro.c, 580 :: 		}
L_vRF4463RxInit94:
;driverrf4463pro.c, 581 :: 		}
L_end_vRF4463RxInit:
0x2EF0	0xF8DDE000  LDR	LR, [SP, #0]
0x2EF4	0xB001    ADD	SP, SP, #4
0x2EF6	0x4770    BX	LR
0x2EF8	0x6A842204  	_Flag+0
0x2EFC	0x233F2000  	_ucRF4463Mode+0
; end of _vRF4463RxInit
_vRF4463EnableRxInterrupt:
;driverrf4463pro.c, 472 :: 		void vRF4463EnableRxInterrupt( void ) {
0x21E0	0xB083    SUB	SP, SP, #12
0x21E2	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 475 :: 		p[ 0 ] = 0x11;
0x21E6	0xA801    ADD	R0, SP, #4
0x21E8	0x1C01    ADDS	R1, R0, #0
0x21EA	0x2011    MOVS	R0, #17
0x21EC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 476 :: 		p[ 1 ] = 0x01;            // 0x0100
0x21EE	0xA801    ADD	R0, SP, #4
0x21F0	0x1C41    ADDS	R1, R0, #1
0x21F2	0x2001    MOVS	R0, #1
0x21F4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 477 :: 		p[ 2 ] = 0x03;            // 3Parameters
0x21F6	0xA801    ADD	R0, SP, #4
0x21F8	0x1C81    ADDS	R1, R0, #2
0x21FA	0x2003    MOVS	R0, #3
0x21FC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 478 :: 		p[ 3 ] = 0x00;            // 0100
0x21FE	0xA801    ADD	R0, SP, #4
0x2200	0x1CC1    ADDS	R1, R0, #3
0x2202	0x2000    MOVS	R0, #0
0x2204	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 479 :: 		p[ 4 ] = 0x03;            // ph, modem int       0x03;
0x2206	0xA801    ADD	R0, SP, #4
0x2208	0x1D01    ADDS	R1, R0, #4
0x220A	0x2003    MOVS	R0, #3
0x220C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 480 :: 		p[ 5 ] = 0x18;            // 0x10;   // Pack received int
0x220E	0xA801    ADD	R0, SP, #4
0x2210	0x1D41    ADDS	R1, R0, #5
0x2212	0x2018    MOVS	R0, #24
0x2214	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 481 :: 		p[ 6 ] = 0x00;            //preamble int, sync int setting
0x2216	0xA801    ADD	R0, SP, #4
0x2218	0x1D81    ADDS	R1, R0, #6
0x221A	0x2000    MOVS	R0, #0
0x221C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 482 :: 		spi_write( 0x07, p );     // enable  packet receive interrupt
0x221E	0xA801    ADD	R0, SP, #4
0x2220	0xB401    PUSH	(R0)
0x2222	0x2007    MOVS	R0, #7
0x2224	0xB401    PUSH	(R0)
0x2226	0xF7FFFDF5  BL	_spi_write+0
0x222A	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 483 :: 		}
L_end_vRF4463EnableRxInterrupt:
0x222C	0xF8DDE000  LDR	LR, [SP, #0]
0x2230	0xB003    ADD	SP, SP, #12
0x2232	0x4770    BX	LR
; end of _vRF4463EnableRxInterrupt
_vRF4463RxStartTest:
;driverrf4463pro.c, 547 :: 		void vRF4463RxStartTest( void ) {
0x2234	0xB083    SUB	SP, SP, #12
0x2236	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 550 :: 		LED_GREEN = 1;
0x223A	0x2101    MOVS	R1, #1
0x223C	0xB249    SXTB	R1, R1
0x223E	0x4817    LDR	R0, [PC, #92]
0x2240	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 552 :: 		p[ 0 ] = START_RX;        // start Command
0x2242	0xA801    ADD	R0, SP, #4
0x2244	0x1C01    ADDS	R1, R0, #0
0x2246	0x2032    MOVS	R0, #50
0x2248	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 553 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 0
0x224A	0xA801    ADD	R0, SP, #4
0x224C	0x1C41    ADDS	R1, R0, #1
0x224E	0x4814    LDR	R0, [PC, #80]
0x2250	0x7800    LDRB	R0, [R0, #0]
0x2252	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 554 :: 		p[ 2 ] = 0x00;            // Enter receiving mode immediately
0x2254	0xA801    ADD	R0, SP, #4
0x2256	0x1C81    ADDS	R1, R0, #2
0x2258	0x2000    MOVS	R0, #0
0x225A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 555 :: 		p[ 3 ] = 0;
0x225C	0xA801    ADD	R0, SP, #4
0x225E	0x1CC1    ADDS	R1, R0, #3
0x2260	0x2000    MOVS	R0, #0
0x2262	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 557 :: 		p[ 4 ] = 0;
0x2264	0xA801    ADD	R0, SP, #4
0x2266	0x1D01    ADDS	R1, R0, #4
0x2268	0x2000    MOVS	R0, #0
0x226A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 558 :: 		p[ 5 ] = 0;               // unchanged after preamble timeout
0x226C	0xA801    ADD	R0, SP, #4
0x226E	0x1D41    ADDS	R1, R0, #5
0x2270	0x2000    MOVS	R0, #0
0x2272	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 561 :: 		p[ 6 ] = 0x08;
0x2274	0xA801    ADD	R0, SP, #4
0x2276	0x1D81    ADDS	R1, R0, #6
0x2278	0x2008    MOVS	R0, #8
0x227A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 562 :: 		p[ 7 ] = 0x08;
0x227C	0xA801    ADD	R0, SP, #4
0x227E	0x1DC1    ADDS	R1, R0, #7
0x2280	0x2008    MOVS	R0, #8
0x2282	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 563 :: 		spi_write( 8, p );
0x2284	0xA801    ADD	R0, SP, #4
0x2286	0xB401    PUSH	(R0)
0x2288	0x2008    MOVS	R0, #8
0x228A	0xB401    PUSH	(R0)
0x228C	0xF7FFFDC2  BL	_spi_write+0
0x2290	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 564 :: 		}
L_end_vRF4463RxStartTest:
0x2292	0xF8DDE000  LDR	LR, [SP, #0]
0x2296	0xB003    ADD	SP, SP, #12
0x2298	0x4770    BX	LR
0x229A	0xBF00    NOP
0x229C	0x029C4241  	GPIOC_ODRbits+0
0x22A0	0x207C2000  	_ucRF4463FreqChannel+0
; end of _vRF4463RxStartTest
_vRF4463RxStart:
;driverrf4463pro.c, 528 :: 		void vRF4463RxStart( void ) {
0x1EDC	0xB083    SUB	SP, SP, #12
0x1EDE	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 531 :: 		p[ 0 ] = START_RX ;              // start Command
0x1EE2	0xA801    ADD	R0, SP, #4
0x1EE4	0x1C01    ADDS	R1, R0, #0
0x1EE6	0x2032    MOVS	R0, #50
0x1EE8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 532 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 0
0x1EEA	0xA801    ADD	R0, SP, #4
0x1EEC	0x1C41    ADDS	R1, R0, #1
0x1EEE	0x4813    LDR	R0, [PC, #76]
0x1EF0	0x7800    LDRB	R0, [R0, #0]
0x1EF2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 533 :: 		p[ 2 ] = 0x00;                   // Enter receiving mode immediately
0x1EF4	0xA801    ADD	R0, SP, #4
0x1EF6	0x1C81    ADDS	R1, R0, #2
0x1EF8	0x2000    MOVS	R0, #0
0x1EFA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 534 :: 		p[ 3 ] = 0;
0x1EFC	0xA801    ADD	R0, SP, #4
0x1EFE	0x1CC1    ADDS	R1, R0, #3
0x1F00	0x2000    MOVS	R0, #0
0x1F02	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 535 :: 		p[ 4 ] = 0;                      // payload_length; // Total to receive 10 bytes
0x1F04	0xA801    ADD	R0, SP, #4
0x1F06	0x1D01    ADDS	R1, R0, #4
0x1F08	0x2000    MOVS	R0, #0
0x1F0A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 536 :: 		p[ 5 ] = 0;                      // unchanged after preamble timeout
0x1F0C	0xA801    ADD	R0, SP, #4
0x1F0E	0x1D41    ADDS	R1, R0, #5
0x1F10	0x2000    MOVS	R0, #0
0x1F12	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 539 :: 		p[ 6 ] = 0x08;
0x1F14	0xA801    ADD	R0, SP, #4
0x1F16	0x1D81    ADDS	R1, R0, #6
0x1F18	0x2008    MOVS	R0, #8
0x1F1A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 540 :: 		p[ 7 ] = 0x08;
0x1F1C	0xA801    ADD	R0, SP, #4
0x1F1E	0x1DC1    ADDS	R1, R0, #7
0x1F20	0x2008    MOVS	R0, #8
0x1F22	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 541 :: 		spi_write( 8, p );
0x1F24	0xA801    ADD	R0, SP, #4
0x1F26	0xB401    PUSH	(R0)
0x1F28	0x2008    MOVS	R0, #8
0x1F2A	0xB401    PUSH	(R0)
0x1F2C	0xF7FFFF72  BL	_spi_write+0
0x1F30	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 542 :: 		}
L_end_vRF4463RxStart:
0x1F32	0xF8DDE000  LDR	LR, [SP, #0]
0x1F36	0xB003    ADD	SP, SP, #12
0x1F38	0x4770    BX	LR
0x1F3A	0xBF00    NOP
0x1F3C	0x207C2000  	_ucRF4463FreqChannel+0
; end of _vRF4463RxStart
_vRF4463TxCont:
;driverrf4463pro.c, 627 :: 		void vRF4463TxCont( void ) {
0x4018	0xB081    SUB	SP, SP, #4
0x401A	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 630 :: 		LED_RED = 1;
0x401E	0x2101    MOVS	R1, #1
0x4020	0xB249    SXTB	R1, R1
0x4022	0x480F    LDR	R0, [PC, #60]
0x4024	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 631 :: 		vRF4463FifoReset();                     //  fifo_reset();  // Buffer empty
0x4026	0xF7FEFDCB  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 632 :: 		spi_write_fifo();                       // Fill the buffer with data
0x402A	0xF7FEFD6B  BL	_spi_write_fifo+0
;driverrf4463pro.c, 633 :: 		vRF4463EnableTxInterrupt();             //  enable_tx_interrupt();
0x402E	0xF7FEFE3F  BL	_vRF4463EnableTxInterrupt+0
;driverrf4463pro.c, 634 :: 		vRF4463ClearInterrupts();               //  clr_interrupt();  // Clear interrupt factor
0x4032	0xF000FF53  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 635 :: 		vRF4463TxStart();                       //  tx_start();    // Enter launch mode, start launch
0x4036	0xF7FEFE15  BL	_vRF4463TxStart+0
;driverrf4463pro.c, 636 :: 		rf_timeout = 0;
0x403A	0x2100    MOVS	R1, #0
0x403C	0x4809    LDR	R0, [PC, #36]
0x403E	0x8001    STRH	R1, [R0, #0]
;driverrf4463pro.c, 637 :: 		Flag.rf_reach_timeout = 0;
0x4040	0x2100    MOVS	R1, #0
0x4042	0xB249    SXTB	R1, R1
0x4044	0x4808    LDR	R0, [PC, #32]
0x4046	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 639 :: 		ucRF4463IRQ = 0;
0x4048	0x2100    MOVS	R1, #0
0x404A	0x4808    LDR	R0, [PC, #32]
0x404C	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 642 :: 		while( nIRQ ) {          //nIRQ ) {
L_vRF4463TxCont101:
0x404E	0x4808    LDR	R0, [PC, #32]
0x4050	0x6800    LDR	R0, [R0, #0]
0x4052	0xB100    CBZ	R0, L_vRF4463TxCont102
;driverrf4463pro.c, 650 :: 		}
0x4054	0xE7FB    B	L_vRF4463TxCont101
L_vRF4463TxCont102:
;driverrf4463pro.c, 651 :: 		}
L_end_vRF4463TxCont:
0x4056	0xF8DDE000  LDR	LR, [SP, #0]
0x405A	0xB001    ADD	SP, SP, #4
0x405C	0x4770    BX	LR
0x405E	0xBF00    NOP
0x4060	0x02984241  	GPIOC_ODRbits+0
0x4064	0x23982000  	_rf_timeout+0
0x4068	0x6A882204  	_Flag+0
0x406C	0x22872000  	DriverRF4463PROMain_ucRF4463IRQ+0
0x4070	0x82284241  	GPIOD_IDRbits+0
; end of _vRF4463TxCont
_spi_read_fifo:
;driverrf4463pro.c, 950 :: 		void spi_read_fifo( void ) {
0x4074	0xB083    SUB	SP, SP, #12
0x4076	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 953 :: 		i = 0;
0x407A	0x2000    MOVS	R0, #0
0x407C	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 954 :: 		while ( i != 0xFF ) {
L_spi_read_fifo147:
0x4080	0xF89D0004  LDRB	R0, [SP, #4]
0x4084	0xF1B00FFF  CMP	R0, #255
0x4088	0xD004    BEQ	L_spi_read_fifo148
;driverrf4463pro.c, 955 :: 		i = check_cts();                   // Check if you can send Command
0x408A	0xF7FCFB95  BL	_check_cts+0
0x408E	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 956 :: 		}
0x4092	0xE7F5    B	L_spi_read_fifo147
L_spi_read_fifo148:
;driverrf4463pro.c, 958 :: 		nSEL = 1;
0x4094	0x2101    MOVS	R1, #1
0x4096	0xB249    SXTB	R1, R1
0x4098	0x4815    LDR	R0, [PC, #84]
0x409A	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 959 :: 		nSEL = 0;
0x409C	0x2100    MOVS	R1, #0
0x409E	0xB249    SXTB	R1, R1
0x40A0	0x4813    LDR	R0, [PC, #76]
0x40A2	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 960 :: 		ucRf4463SPIByte( READ_RX_FIFO );
0x40A4	0x2077    MOVS	R0, #119
0x40A6	0xB401    PUSH	(R0)
0x40A8	0xF7FEFE52  BL	_ucRf4463SPIByte+0
0x40AC	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 961 :: 		for ( i = 0; i < payload_length; i++ ) {
0x40AE	0x2000    MOVS	R0, #0
0x40B0	0xF88D0004  STRB	R0, [SP, #4]
L_spi_read_fifo149:
0x40B4	0xF89D0004  LDRB	R0, [SP, #4]
0x40B8	0x2842    CMP	R0, #66
0x40BA	0xD211    BCS	L_spi_read_fifo150
;driverrf4463pro.c, 962 :: 		rx_buf[ i ] = ucRf4463SPIByte( 0xFF );      // Receive 10 test data
0x40BC	0xF89D1004  LDRB	R1, [SP, #4]
0x40C0	0x480C    LDR	R0, [PC, #48]
0x40C2	0x1840    ADDS	R0, R0, R1
0x40C4	0x9002    STR	R0, [SP, #8]
0x40C6	0x20FF    MOVS	R0, #255
0x40C8	0xB401    PUSH	(R0)
0x40CA	0xF7FEFE41  BL	_ucRf4463SPIByte+0
0x40CE	0xB001    ADD	SP, SP, #4
0x40D0	0x9902    LDR	R1, [SP, #8]
0x40D2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 961 :: 		for ( i = 0; i < payload_length; i++ ) {
0x40D4	0xF89D0004  LDRB	R0, [SP, #4]
0x40D8	0x1C40    ADDS	R0, R0, #1
0x40DA	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 963 :: 		}
0x40DE	0xE7E9    B	L_spi_read_fifo149
L_spi_read_fifo150:
;driverrf4463pro.c, 964 :: 		nSEL = 1;
0x40E0	0x2101    MOVS	R1, #1
0x40E2	0xB249    SXTB	R1, R1
0x40E4	0x4802    LDR	R0, [PC, #8]
0x40E6	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 965 :: 		}
L_end_spi_read_fifo:
0x40E8	0xF8DDE000  LDR	LR, [SP, #0]
0x40EC	0xB003    ADD	SP, SP, #12
0x40EE	0x4770    BX	LR
0x40F0	0x82B44241  	GPIOD_ODRbits+0
0x40F4	0x23552000  	_rx_buf+0
; end of _spi_read_fifo
__Lib_System_4XX_InitialSetUpRCCRCC2:
;__Lib_System_4XX.c, 465 :: 		
0x54B4	0xB082    SUB	SP, SP, #8
0x54B6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_4XX.c, 468 :: 		
; ulRCC_CR start address is: 8 (R2)
0x54BA	0x4A92    LDR	R2, [PC, #584]
;__Lib_System_4XX.c, 469 :: 		
; ulRCC_PLLCFGR start address is: 12 (R3)
0x54BC	0x4B92    LDR	R3, [PC, #584]
;__Lib_System_4XX.c, 470 :: 		
; ulRCC_CFGR start address is: 16 (R4)
0x54BE	0x4C93    LDR	R4, [PC, #588]
;__Lib_System_4XX.c, 471 :: 		
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x54C0	0x4893    LDR	R0, [PC, #588]
;__Lib_System_4XX.c, 472 :: 		
; Fosc_kHz start address is: 4 (R1)
0x54C2	0x4994    LDR	R1, [PC, #592]
;__Lib_System_4XX.c, 474 :: 		
0x54C4	0x2803    CMP	R0, #3
0x54C6	0xF040803C  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC234
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 475 :: 		
0x54CA	0x4893    LDR	R0, [PC, #588]
0x54CC	0x4281    CMP	R1, R0
0x54CE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC235
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 476 :: 		
0x54D0	0x4892    LDR	R0, [PC, #584]
0x54D2	0x6800    LDR	R0, [R0, #0]
0x54D4	0xF0400105  ORR	R1, R0, #5
0x54D8	0x4890    LDR	R0, [PC, #576]
0x54DA	0x6001    STR	R1, [R0, #0]
0x54DC	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC236
L___Lib_System_4XX_InitialSetUpRCCRCC235:
;__Lib_System_4XX.c, 477 :: 		
; Fosc_kHz start address is: 4 (R1)
0x54DE	0x4890    LDR	R0, [PC, #576]
0x54E0	0x4281    CMP	R1, R0
0x54E2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC237
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 478 :: 		
0x54E4	0x488D    LDR	R0, [PC, #564]
0x54E6	0x6800    LDR	R0, [R0, #0]
0x54E8	0xF0400104  ORR	R1, R0, #4
0x54EC	0x488B    LDR	R0, [PC, #556]
0x54EE	0x6001    STR	R1, [R0, #0]
0x54F0	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC238
L___Lib_System_4XX_InitialSetUpRCCRCC237:
;__Lib_System_4XX.c, 479 :: 		
; Fosc_kHz start address is: 4 (R1)
0x54F2	0x488C    LDR	R0, [PC, #560]
0x54F4	0x4281    CMP	R1, R0
0x54F6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC239
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 480 :: 		
0x54F8	0x4888    LDR	R0, [PC, #544]
0x54FA	0x6800    LDR	R0, [R0, #0]
0x54FC	0xF0400103  ORR	R1, R0, #3
0x5500	0x4886    LDR	R0, [PC, #536]
0x5502	0x6001    STR	R1, [R0, #0]
0x5504	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC240
L___Lib_System_4XX_InitialSetUpRCCRCC239:
;__Lib_System_4XX.c, 481 :: 		
; Fosc_kHz start address is: 4 (R1)
0x5506	0xF64E2060  MOVW	R0, #60000
0x550A	0x4281    CMP	R1, R0
0x550C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC241
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 482 :: 		
0x550E	0x4883    LDR	R0, [PC, #524]
0x5510	0x6800    LDR	R0, [R0, #0]
0x5512	0xF0400102  ORR	R1, R0, #2
0x5516	0x4881    LDR	R0, [PC, #516]
0x5518	0x6001    STR	R1, [R0, #0]
0x551A	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC242
L___Lib_System_4XX_InitialSetUpRCCRCC241:
;__Lib_System_4XX.c, 483 :: 		
; Fosc_kHz start address is: 4 (R1)
0x551C	0xF2475030  MOVW	R0, #30000
0x5520	0x4281    CMP	R1, R0
0x5522	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC243
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 484 :: 		
0x5524	0x487D    LDR	R0, [PC, #500]
0x5526	0x6800    LDR	R0, [R0, #0]
0x5528	0xF0400101  ORR	R1, R0, #1
0x552C	0x487B    LDR	R0, [PC, #492]
0x552E	0x6001    STR	R1, [R0, #0]
0x5530	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC244
L___Lib_System_4XX_InitialSetUpRCCRCC243:
;__Lib_System_4XX.c, 486 :: 		
0x5532	0x487A    LDR	R0, [PC, #488]
0x5534	0x6801    LDR	R1, [R0, #0]
0x5536	0xF06F0007  MVN	R0, #7
0x553A	0x4001    ANDS	R1, R0
0x553C	0x4877    LDR	R0, [PC, #476]
0x553E	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC244:
L___Lib_System_4XX_InitialSetUpRCCRCC242:
L___Lib_System_4XX_InitialSetUpRCCRCC240:
L___Lib_System_4XX_InitialSetUpRCCRCC238:
L___Lib_System_4XX_InitialSetUpRCCRCC236:
;__Lib_System_4XX.c, 487 :: 		
0x5540	0xE10C    B	L___Lib_System_4XX_InitialSetUpRCCRCC245
L___Lib_System_4XX_InitialSetUpRCCRCC234:
;__Lib_System_4XX.c, 488 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x5542	0x2802    CMP	R0, #2
0x5544	0xF0408046  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC246
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 489 :: 		
0x5548	0x4877    LDR	R0, [PC, #476]
0x554A	0x4281    CMP	R1, R0
0x554C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC247
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 490 :: 		
0x554E	0x4873    LDR	R0, [PC, #460]
0x5550	0x6800    LDR	R0, [R0, #0]
0x5552	0xF0400106  ORR	R1, R0, #6
0x5556	0x4871    LDR	R0, [PC, #452]
0x5558	0x6001    STR	R1, [R0, #0]
0x555A	0xE03A    B	L___Lib_System_4XX_InitialSetUpRCCRCC248
L___Lib_System_4XX_InitialSetUpRCCRCC247:
;__Lib_System_4XX.c, 491 :: 		
; Fosc_kHz start address is: 4 (R1)
0x555C	0x4870    LDR	R0, [PC, #448]
0x555E	0x4281    CMP	R1, R0
0x5560	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC249
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 492 :: 		
0x5562	0x486E    LDR	R0, [PC, #440]
0x5564	0x6800    LDR	R0, [R0, #0]
0x5566	0xF0400105  ORR	R1, R0, #5
0x556A	0x486C    LDR	R0, [PC, #432]
0x556C	0x6001    STR	R1, [R0, #0]
0x556E	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC250
L___Lib_System_4XX_InitialSetUpRCCRCC249:
;__Lib_System_4XX.c, 493 :: 		
; Fosc_kHz start address is: 4 (R1)
0x5570	0x486E    LDR	R0, [PC, #440]
0x5572	0x4281    CMP	R1, R0
0x5574	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC251
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 494 :: 		
0x5576	0x4869    LDR	R0, [PC, #420]
0x5578	0x6800    LDR	R0, [R0, #0]
0x557A	0xF0400104  ORR	R1, R0, #4
0x557E	0x4867    LDR	R0, [PC, #412]
0x5580	0x6001    STR	R1, [R0, #0]
0x5582	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC252
L___Lib_System_4XX_InitialSetUpRCCRCC251:
;__Lib_System_4XX.c, 495 :: 		
; Fosc_kHz start address is: 4 (R1)
0x5584	0x486A    LDR	R0, [PC, #424]
0x5586	0x4281    CMP	R1, R0
0x5588	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC253
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 496 :: 		
0x558A	0x4864    LDR	R0, [PC, #400]
0x558C	0x6800    LDR	R0, [R0, #0]
0x558E	0xF0400103  ORR	R1, R0, #3
0x5592	0x4862    LDR	R0, [PC, #392]
0x5594	0x6001    STR	R1, [R0, #0]
0x5596	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC254
L___Lib_System_4XX_InitialSetUpRCCRCC253:
;__Lib_System_4XX.c, 497 :: 		
; Fosc_kHz start address is: 4 (R1)
0x5598	0xF64B3080  MOVW	R0, #48000
0x559C	0x4281    CMP	R1, R0
0x559E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC255
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 498 :: 		
0x55A0	0x485E    LDR	R0, [PC, #376]
0x55A2	0x6800    LDR	R0, [R0, #0]
0x55A4	0xF0400102  ORR	R1, R0, #2
0x55A8	0x485C    LDR	R0, [PC, #368]
0x55AA	0x6001    STR	R1, [R0, #0]
0x55AC	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC256
L___Lib_System_4XX_InitialSetUpRCCRCC255:
;__Lib_System_4XX.c, 499 :: 		
; Fosc_kHz start address is: 4 (R1)
0x55AE	0xF64550C0  MOVW	R0, #24000
0x55B2	0x4281    CMP	R1, R0
0x55B4	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC257
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 500 :: 		
0x55B6	0x4859    LDR	R0, [PC, #356]
0x55B8	0x6800    LDR	R0, [R0, #0]
0x55BA	0xF0400101  ORR	R1, R0, #1
0x55BE	0x4857    LDR	R0, [PC, #348]
0x55C0	0x6001    STR	R1, [R0, #0]
0x55C2	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC258
L___Lib_System_4XX_InitialSetUpRCCRCC257:
;__Lib_System_4XX.c, 502 :: 		
0x55C4	0x4855    LDR	R0, [PC, #340]
0x55C6	0x6801    LDR	R1, [R0, #0]
0x55C8	0xF06F0007  MVN	R0, #7
0x55CC	0x4001    ANDS	R1, R0
0x55CE	0x4853    LDR	R0, [PC, #332]
0x55D0	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC258:
L___Lib_System_4XX_InitialSetUpRCCRCC256:
L___Lib_System_4XX_InitialSetUpRCCRCC254:
L___Lib_System_4XX_InitialSetUpRCCRCC252:
L___Lib_System_4XX_InitialSetUpRCCRCC250:
L___Lib_System_4XX_InitialSetUpRCCRCC248:
;__Lib_System_4XX.c, 503 :: 		
0x55D2	0xE0C3    B	L___Lib_System_4XX_InitialSetUpRCCRCC259
L___Lib_System_4XX_InitialSetUpRCCRCC246:
;__Lib_System_4XX.c, 504 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x55D4	0x2801    CMP	R0, #1
0x55D6	0xF0408051  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC260
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 505 :: 		
0x55DA	0x4851    LDR	R0, [PC, #324]
0x55DC	0x4281    CMP	R1, R0
0x55DE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC261
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 506 :: 		
0x55E0	0x484E    LDR	R0, [PC, #312]
0x55E2	0x6800    LDR	R0, [R0, #0]
0x55E4	0xF0400107  ORR	R1, R0, #7
0x55E8	0x484C    LDR	R0, [PC, #304]
0x55EA	0x6001    STR	R1, [R0, #0]
0x55EC	0xE045    B	L___Lib_System_4XX_InitialSetUpRCCRCC262
L___Lib_System_4XX_InitialSetUpRCCRCC261:
;__Lib_System_4XX.c, 507 :: 		
; Fosc_kHz start address is: 4 (R1)
0x55EE	0x4851    LDR	R0, [PC, #324]
0x55F0	0x4281    CMP	R1, R0
0x55F2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC263
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 508 :: 		
0x55F4	0x4849    LDR	R0, [PC, #292]
0x55F6	0x6800    LDR	R0, [R0, #0]
0x55F8	0xF0400106  ORR	R1, R0, #6
0x55FC	0x4847    LDR	R0, [PC, #284]
0x55FE	0x6001    STR	R1, [R0, #0]
0x5600	0xE03B    B	L___Lib_System_4XX_InitialSetUpRCCRCC264
L___Lib_System_4XX_InitialSetUpRCCRCC263:
;__Lib_System_4XX.c, 509 :: 		
; Fosc_kHz start address is: 4 (R1)
0x5602	0x4848    LDR	R0, [PC, #288]
0x5604	0x4281    CMP	R1, R0
0x5606	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC265
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 510 :: 		
0x5608	0x4844    LDR	R0, [PC, #272]
0x560A	0x6800    LDR	R0, [R0, #0]
0x560C	0xF0400105  ORR	R1, R0, #5
0x5610	0x4842    LDR	R0, [PC, #264]
0x5612	0x6001    STR	R1, [R0, #0]
0x5614	0xE031    B	L___Lib_System_4XX_InitialSetUpRCCRCC266
L___Lib_System_4XX_InitialSetUpRCCRCC265:
;__Lib_System_4XX.c, 511 :: 		
; Fosc_kHz start address is: 4 (R1)
0x5616	0x4846    LDR	R0, [PC, #280]
0x5618	0x4281    CMP	R1, R0
0x561A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC267
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 512 :: 		
0x561C	0x483F    LDR	R0, [PC, #252]
0x561E	0x6800    LDR	R0, [R0, #0]
0x5620	0xF0400104  ORR	R1, R0, #4
0x5624	0x483D    LDR	R0, [PC, #244]
0x5626	0x6001    STR	R1, [R0, #0]
0x5628	0xE027    B	L___Lib_System_4XX_InitialSetUpRCCRCC268
L___Lib_System_4XX_InitialSetUpRCCRCC267:
;__Lib_System_4XX.c, 513 :: 		
; Fosc_kHz start address is: 4 (R1)
0x562A	0xF24D20F0  MOVW	R0, #54000
0x562E	0x4281    CMP	R1, R0
0x5630	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC269
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 514 :: 		
0x5632	0x483A    LDR	R0, [PC, #232]
0x5634	0x6800    LDR	R0, [R0, #0]
0x5636	0xF0400103  ORR	R1, R0, #3
0x563A	0x4838    LDR	R0, [PC, #224]
0x563C	0x6001    STR	R1, [R0, #0]
0x563E	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC270
L___Lib_System_4XX_InitialSetUpRCCRCC269:
;__Lib_System_4XX.c, 515 :: 		
; Fosc_kHz start address is: 4 (R1)
0x5640	0xF64840A0  MOVW	R0, #36000
0x5644	0x4281    CMP	R1, R0
0x5646	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC271
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 516 :: 		
0x5648	0x4834    LDR	R0, [PC, #208]
0x564A	0x6800    LDR	R0, [R0, #0]
0x564C	0xF0400102  ORR	R1, R0, #2
0x5650	0x4832    LDR	R0, [PC, #200]
0x5652	0x6001    STR	R1, [R0, #0]
0x5654	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC272
L___Lib_System_4XX_InitialSetUpRCCRCC271:
;__Lib_System_4XX.c, 517 :: 		
; Fosc_kHz start address is: 4 (R1)
0x5656	0xF2446050  MOVW	R0, #18000
0x565A	0x4281    CMP	R1, R0
0x565C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC273
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 518 :: 		
0x565E	0x482F    LDR	R0, [PC, #188]
0x5660	0x6800    LDR	R0, [R0, #0]
0x5662	0xF0400101  ORR	R1, R0, #1
0x5666	0x482D    LDR	R0, [PC, #180]
0x5668	0x6001    STR	R1, [R0, #0]
0x566A	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC274
L___Lib_System_4XX_InitialSetUpRCCRCC273:
;__Lib_System_4XX.c, 520 :: 		
0x566C	0x482B    LDR	R0, [PC, #172]
0x566E	0x6801    LDR	R1, [R0, #0]
0x5670	0xF06F0007  MVN	R0, #7
0x5674	0x4001    ANDS	R1, R0
0x5676	0x4829    LDR	R0, [PC, #164]
0x5678	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC274:
L___Lib_System_4XX_InitialSetUpRCCRCC272:
L___Lib_System_4XX_InitialSetUpRCCRCC270:
L___Lib_System_4XX_InitialSetUpRCCRCC268:
L___Lib_System_4XX_InitialSetUpRCCRCC266:
L___Lib_System_4XX_InitialSetUpRCCRCC264:
L___Lib_System_4XX_InitialSetUpRCCRCC262:
;__Lib_System_4XX.c, 521 :: 		
0x567A	0xE06F    B	L___Lib_System_4XX_InitialSetUpRCCRCC275
L___Lib_System_4XX_InitialSetUpRCCRCC260:
;__Lib_System_4XX.c, 522 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x567C	0x2800    CMP	R0, #0
0x567E	0xF040806D  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC276
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 523 :: 		
0x5682	0x482D    LDR	R0, [PC, #180]
0x5684	0x4281    CMP	R1, R0
0x5686	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC277
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 524 :: 		
0x5688	0x4824    LDR	R0, [PC, #144]
0x568A	0x6800    LDR	R0, [R0, #0]
0x568C	0xF0400107  ORR	R1, R0, #7
0x5690	0x4822    LDR	R0, [PC, #136]
0x5692	0x6001    STR	R1, [R0, #0]
0x5694	0xE062    B	L___Lib_System_4XX_InitialSetUpRCCRCC278
L___Lib_System_4XX_InitialSetUpRCCRCC277:
;__Lib_System_4XX.c, 525 :: 		
; Fosc_kHz start address is: 4 (R1)
0x5696	0x4825    LDR	R0, [PC, #148]
0x5698	0x4281    CMP	R1, R0
0x569A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC279
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 526 :: 		
0x569C	0x481F    LDR	R0, [PC, #124]
0x569E	0x6800    LDR	R0, [R0, #0]
0x56A0	0xF0400106  ORR	R1, R0, #6
0x56A4	0x481D    LDR	R0, [PC, #116]
0x56A6	0x6001    STR	R1, [R0, #0]
0x56A8	0xE058    B	L___Lib_System_4XX_InitialSetUpRCCRCC280
L___Lib_System_4XX_InitialSetUpRCCRCC279:
;__Lib_System_4XX.c, 527 :: 		
; Fosc_kHz start address is: 4 (R1)
0x56AA	0x4824    LDR	R0, [PC, #144]
0x56AC	0x4281    CMP	R1, R0
0x56AE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC281
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 528 :: 		
0x56B0	0x481A    LDR	R0, [PC, #104]
0x56B2	0x6800    LDR	R0, [R0, #0]
0x56B4	0xF0400105  ORR	R1, R0, #5
0x56B8	0x4818    LDR	R0, [PC, #96]
0x56BA	0x6001    STR	R1, [R0, #0]
0x56BC	0xE04E    B	L___Lib_System_4XX_InitialSetUpRCCRCC282
L___Lib_System_4XX_InitialSetUpRCCRCC281:
;__Lib_System_4XX.c, 529 :: 		
; Fosc_kHz start address is: 4 (R1)
0x56BE	0xF5B14F7A  CMP	R1, #64000
0x56C2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC283
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 530 :: 		
0x56C4	0x4815    LDR	R0, [PC, #84]
0x56C6	0x6800    LDR	R0, [R0, #0]
0x56C8	0xF0400104  ORR	R1, R0, #4
0x56CC	0x4813    LDR	R0, [PC, #76]
0x56CE	0x6001    STR	R1, [R0, #0]
0x56D0	0xE044    B	L___Lib_System_4XX_InitialSetUpRCCRCC284
L___Lib_System_4XX_InitialSetUpRCCRCC283:
;__Lib_System_4XX.c, 531 :: 		
; Fosc_kHz start address is: 4 (R1)
0x56D2	0xF64B3080  MOVW	R0, #48000
0x56D6	0x4281    CMP	R1, R0
0x56D8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC285
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 532 :: 		
0x56DA	0x4810    LDR	R0, [PC, #64]
0x56DC	0x6800    LDR	R0, [R0, #0]
0x56DE	0xF0400103  ORR	R1, R0, #3
0x56E2	0x480E    LDR	R0, [PC, #56]
0x56E4	0x6001    STR	R1, [R0, #0]
0x56E6	0xE039    B	L___Lib_System_4XX_InitialSetUpRCCRCC286
L___Lib_System_4XX_InitialSetUpRCCRCC285:
;__Lib_System_4XX.c, 533 :: 		
; Fosc_kHz start address is: 4 (R1)
0x56E8	0xF5B14FFA  CMP	R1, #32000
0x56EC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC287
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 534 :: 		
0x56EE	0x480B    LDR	R0, [PC, #44]
0x56F0	0x6800    LDR	R0, [R0, #0]
0x56F2	0xF0400102  ORR	R1, R0, #2
0x56F6	0x4809    LDR	R0, [PC, #36]
0x56F8	0x6001    STR	R1, [R0, #0]
0x56FA	0xE02F    B	L___Lib_System_4XX_InitialSetUpRCCRCC288
L___Lib_System_4XX_InitialSetUpRCCRCC287:
;__Lib_System_4XX.c, 535 :: 		
; Fosc_kHz start address is: 4 (R1)
0x56FC	0xF5B15F7A  CMP	R1, #16000
0x5700	0xD925    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC289
0x5702	0xE01D    B	#58
0x5704	0x00800101  	#16842880
0x5708	0x54190440  	#71324697
0x570C	0x94020060  	#6329346
0x5710	0x00030000  	#3
0x5714	0x90400002  	#168000
0x5718	0x49F00002  	#150000
0x571C	0x3C004002  	FLASH_ACR+0
0x5720	0xD4C00001  	#120000
0x5724	0x5F900001  	#90000
0x5728	0x32800002  	#144000
0x572C	0x77000001  	#96000
0x5730	0x19400001  	#72000
0x5734	0xA5E00001  	#108000
0x5738	0xB5800001  	#112000
0x573C	0x38800001  	#80000
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 536 :: 		
0x5740	0x482D    LDR	R0, [PC, #180]
0x5742	0x6800    LDR	R0, [R0, #0]
0x5744	0xF0400101  ORR	R1, R0, #1
0x5748	0x482B    LDR	R0, [PC, #172]
0x574A	0x6001    STR	R1, [R0, #0]
0x574C	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC290
L___Lib_System_4XX_InitialSetUpRCCRCC289:
;__Lib_System_4XX.c, 538 :: 		
0x574E	0x482A    LDR	R0, [PC, #168]
0x5750	0x6801    LDR	R1, [R0, #0]
0x5752	0xF06F0007  MVN	R0, #7
0x5756	0x4001    ANDS	R1, R0
0x5758	0x4827    LDR	R0, [PC, #156]
0x575A	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC290:
L___Lib_System_4XX_InitialSetUpRCCRCC288:
L___Lib_System_4XX_InitialSetUpRCCRCC286:
L___Lib_System_4XX_InitialSetUpRCCRCC284:
L___Lib_System_4XX_InitialSetUpRCCRCC282:
L___Lib_System_4XX_InitialSetUpRCCRCC280:
L___Lib_System_4XX_InitialSetUpRCCRCC278:
;__Lib_System_4XX.c, 539 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC276:
L___Lib_System_4XX_InitialSetUpRCCRCC275:
L___Lib_System_4XX_InitialSetUpRCCRCC259:
L___Lib_System_4XX_InitialSetUpRCCRCC245:
;__Lib_System_4XX.c, 541 :: 		
0x575C	0x2101    MOVS	R1, #1
0x575E	0xB249    SXTB	R1, R1
0x5760	0x4826    LDR	R0, [PC, #152]
0x5762	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 542 :: 		
0x5764	0x4826    LDR	R0, [PC, #152]
0x5766	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 544 :: 		
0x5768	0xF7FEFCD0  BL	__Lib_System_4XX_SystemClockSetDefault+0
;__Lib_System_4XX.c, 546 :: 		
0x576C	0x4825    LDR	R0, [PC, #148]
0x576E	0x6003    STR	R3, [R0, #0]
; ulRCC_PLLCFGR end address is: 12 (R3)
;__Lib_System_4XX.c, 547 :: 		
0x5770	0x4825    LDR	R0, [PC, #148]
0x5772	0x6004    STR	R4, [R0, #0]
;__Lib_System_4XX.c, 548 :: 		
0x5774	0x4825    LDR	R0, [PC, #148]
0x5776	0xEA020100  AND	R1, R2, R0, LSL #0
0x577A	0x4825    LDR	R0, [PC, #148]
0x577C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 550 :: 		
0x577E	0xF0020001  AND	R0, R2, #1
0x5782	0xB140    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2102
; ulRCC_CFGR end address is: 16 (R4)
; ulRCC_CR end address is: 8 (R2)
0x5784	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 551 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC292:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x5786	0x4822    LDR	R0, [PC, #136]
0x5788	0x6800    LDR	R0, [R0, #0]
0x578A	0xF0000002  AND	R0, R0, #2
0x578E	0x2800    CMP	R0, #0
0x5790	0xD100    BNE	L___Lib_System_4XX_InitialSetUpRCCRCC293
;__Lib_System_4XX.c, 552 :: 		
0x5792	0xE7F8    B	L___Lib_System_4XX_InitialSetUpRCCRCC292
L___Lib_System_4XX_InitialSetUpRCCRCC293:
;__Lib_System_4XX.c, 553 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x5794	0xE000    B	L___Lib_System_4XX_InitialSetUpRCCRCC291
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2102:
;__Lib_System_4XX.c, 550 :: 		
0x5796	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 553 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC291:
;__Lib_System_4XX.c, 555 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x5798	0xF4023080  AND	R0, R2, #65536
0x579C	0xB148    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2103
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_4XX.c, 556 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC295:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x579E	0x481C    LDR	R0, [PC, #112]
0x57A0	0x6800    LDR	R0, [R0, #0]
0x57A2	0xF4003000  AND	R0, R0, #131072
0x57A6	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC296
;__Lib_System_4XX.c, 557 :: 		
0x57A8	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC295
L___Lib_System_4XX_InitialSetUpRCCRCC296:
;__Lib_System_4XX.c, 558 :: 		
0x57AA	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x57AC	0x460A    MOV	R2, R1
0x57AE	0x9901    LDR	R1, [SP, #4]
0x57B0	0xE002    B	L___Lib_System_4XX_InitialSetUpRCCRCC294
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2103:
;__Lib_System_4XX.c, 555 :: 		
0x57B2	0x9101    STR	R1, [SP, #4]
0x57B4	0x4611    MOV	R1, R2
0x57B6	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_4XX.c, 558 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC294:
;__Lib_System_4XX.c, 560 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x57B8	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x57BC	0xB170    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2104
;__Lib_System_4XX.c, 561 :: 		
0x57BE	0x4814    LDR	R0, [PC, #80]
0x57C0	0x6800    LDR	R0, [R0, #0]
0x57C2	0xF0407180  ORR	R1, R0, #16777216
0x57C6	0x4812    LDR	R0, [PC, #72]
0x57C8	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x57CA	0x4611    MOV	R1, R2
;__Lib_System_4XX.c, 562 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC298:
; ulRCC_CFGR start address is: 4 (R1)
0x57CC	0x4810    LDR	R0, [PC, #64]
0x57CE	0x6800    LDR	R0, [R0, #0]
0x57D0	0xF0007000  AND	R0, R0, #33554432
0x57D4	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC299
;__Lib_System_4XX.c, 563 :: 		
0x57D6	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC298
L___Lib_System_4XX_InitialSetUpRCCRCC299:
;__Lib_System_4XX.c, 564 :: 		
0x57D8	0x460A    MOV	R2, R1
0x57DA	0xE7FF    B	L___Lib_System_4XX_InitialSetUpRCCRCC297
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_4XX_InitialSetUpRCCRCC2104:
;__Lib_System_4XX.c, 560 :: 		
;__Lib_System_4XX.c, 564 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC297:
;__Lib_System_4XX.c, 567 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2100:
; ulRCC_CFGR start address is: 8 (R2)
0x57DC	0x480A    LDR	R0, [PC, #40]
0x57DE	0x6800    LDR	R0, [R0, #0]
0x57E0	0xF000010C  AND	R1, R0, #12
0x57E4	0x0090    LSLS	R0, R2, #2
0x57E6	0xF000000C  AND	R0, R0, #12
0x57EA	0x4281    CMP	R1, R0
0x57EC	0xD000    BEQ	L___Lib_System_4XX_InitialSetUpRCCRCC2101
;__Lib_System_4XX.c, 568 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x57EE	0xE7F5    B	L___Lib_System_4XX_InitialSetUpRCCRCC2100
L___Lib_System_4XX_InitialSetUpRCCRCC2101:
;__Lib_System_4XX.c, 570 :: 		
L_end_InitialSetUpRCCRCC2:
0x57F0	0xF8DDE000  LDR	LR, [SP, #0]
0x57F4	0xB002    ADD	SP, SP, #8
0x57F6	0x4770    BX	LR
0x57F8	0x3C004002  	FLASH_ACR+0
0x57FC	0x80204247  	FLASH_ACR+0
0x5800	0x80244247  	FLASH_ACR+0
0x5804	0x38044002  	RCC_PLLCFGR+0
0x5808	0x38084002  	RCC_CFGR+0
0x580C	0xFFFF000F  	#1048575
0x5810	0x38004002  	RCC_CR+0
; end of __Lib_System_4XX_InitialSetUpRCCRCC2
__Lib_System_4XX_SystemClockSetDefault:
;__Lib_System_4XX.c, 444 :: 		
0x410C	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 447 :: 		
0x410E	0x480D    LDR	R0, [PC, #52]
0x4110	0x6800    LDR	R0, [R0, #0]
0x4112	0xF0400101  ORR	R1, R0, #1
0x4116	0x480B    LDR	R0, [PC, #44]
0x4118	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 450 :: 		
0x411A	0x2100    MOVS	R1, #0
0x411C	0x480A    LDR	R0, [PC, #40]
0x411E	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 453 :: 		
0x4120	0x4808    LDR	R0, [PC, #32]
0x4122	0x6801    LDR	R1, [R0, #0]
0x4124	0x4809    LDR	R0, [PC, #36]
0x4126	0x4001    ANDS	R1, R0
0x4128	0x4806    LDR	R0, [PC, #24]
0x412A	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 456 :: 		
0x412C	0x4908    LDR	R1, [PC, #32]
0x412E	0x4809    LDR	R0, [PC, #36]
0x4130	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 459 :: 		
0x4132	0x4804    LDR	R0, [PC, #16]
0x4134	0x6801    LDR	R1, [R0, #0]
0x4136	0xF46F2080  MVN	R0, #262144
0x413A	0x4001    ANDS	R1, R0
0x413C	0x4801    LDR	R0, [PC, #4]
0x413E	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 463 :: 		
L_end_SystemClockSetDefault:
0x4140	0xB001    ADD	SP, SP, #4
0x4142	0x4770    BX	LR
0x4144	0x38004002  	RCC_CR+0
0x4148	0x38084002  	RCC_CFGR+0
0x414C	0xFFFFFEF6  	#-17367041
0x4150	0x30102400  	#603992080
0x4154	0x38044002  	RCC_PLLCFGR+0
; end of __Lib_System_4XX_SystemClockSetDefault
__Lib_System_4XX_InitialSetUpFosc:
;__Lib_System_4XX.c, 382 :: 		
0x5B8C	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 383 :: 		
0x5B8E	0x4904    LDR	R1, [PC, #16]
0x5B90	0x4804    LDR	R0, [PC, #16]
0x5B92	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 384 :: 		
0x5B94	0x4904    LDR	R1, [PC, #16]
0x5B96	0x4805    LDR	R0, [PC, #20]
0x5B98	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 385 :: 		
L_end_InitialSetUpFosc:
0x5B9A	0xB001    ADD	SP, SP, #4
0x5B9C	0x4770    BX	LR
0x5B9E	0xBF00    NOP
0x5BA0	0x90400002  	#168000
0x5BA4	0x239C2000  	___System_CLOCK_IN_KHZ+0
0x5BA8	0x00030000  	#3
0x5BAC	0x23A82000  	__VOLTAGE_RANGE+0
; end of __Lib_System_4XX_InitialSetUpFosc
___GenExcept:
;__Lib_System_4XX.c, 327 :: 		
0x5BDC	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 328 :: 		
L___GenExcept30:
0x5BDE	0xE7FE    B	L___GenExcept30
;__Lib_System_4XX.c, 329 :: 		
L_end___GenExcept:
0x5BE0	0xB001    ADD	SP, SP, #4
0x5BE2	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_4XX.c, 360 :: 		
0x5BB0	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 363 :: 		
0x5BB2	0xF64E5088  MOVW	R0, #60808
;__Lib_System_4XX.c, 364 :: 		
0x5BB6	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_4XX.c, 366 :: 		
0x5BBA	0x6801    LDR	R1, [R0, #0]
;__Lib_System_4XX.c, 368 :: 		
0x5BBC	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_4XX.c, 370 :: 		
0x5BC0	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 372 :: 		
0x5BC2	0xBF00    NOP
;__Lib_System_4XX.c, 373 :: 		
0x5BC4	0xBF00    NOP
;__Lib_System_4XX.c, 374 :: 		
0x5BC6	0xBF00    NOP
;__Lib_System_4XX.c, 375 :: 		
0x5BC8	0xBF00    NOP
;__Lib_System_4XX.c, 377 :: 		
0x5BCA	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_4XX.c, 378 :: 		
0x5BCE	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_4XX.c, 379 :: 		
0x5BD2	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_4XX.c, 380 :: 		
L_end___EnableFPU:
0x5BD6	0xB001    ADD	SP, SP, #4
0x5BD8	0x4770    BX	LR
; end of ___EnableFPU
0x8A64	0xB500    PUSH	(R14)
0x8A66	0xF8DFB024  LDR	R11, [PC, #36]
0x8A6A	0xF8DFA024  LDR	R10, [PC, #36]
0x8A6E	0xF8DFC024  LDR	R12, [PC, #36]
0x8A72	0xF7FBFB41  BL	16632
0x8A76	0xF8DFB020  LDR	R11, [PC, #32]
0x8A7A	0xF8DFA020  LDR	R10, [PC, #32]
0x8A7E	0xF8DFC020  LDR	R12, [PC, #32]
0x8A82	0xF7FBFB39  BL	16632
0x8A86	0xBD00    POP	(R15)
0x8A88	0x4770    BX	LR
0x8A8A	0xBF00    NOP
0x8A8C	0x00002000  	#536870912
0x8A90	0x23362000  	#536879926
0x8A94	0x5BE40000  	#23524
0x8A98	0x23382000  	#536879928
0x8A9C	0x233C2000  	#536879932
0x8AA0	0x42A40000  	#17060
0x8B00	0xB500    PUSH	(R14)
0x8B02	0xF8DFB010  LDR	R11, [PC, #16]
0x8B06	0xF8DFA010  LDR	R10, [PC, #16]
0x8B0A	0xF7FBFB33  BL	16756
0x8B0E	0xBD00    POP	(R15)
0x8B10	0x4770    BX	LR
0x8B12	0xBF00    NOP
0x8B14	0x00002000  	#536870912
0x8B18	0x23BC2000  	#536880060
_DMA2Strm7_interrupt:
;uarthandler.c, 192 :: 		void DMA2Strm7_interrupt() iv IVT_INT_DMA2_Stream7 ics ICS_AUTO {
;uarthandler.c, 194 :: 		if ( DMA2_HISRbits.FEIF7 ) {
0x5430	0x4815    LDR	R0, [PC, #84]
0x5432	0x6800    LDR	R0, [R0, #0]
0x5434	0xB120    CBZ	R0, L_DMA2Strm7_interrupt209
;uarthandler.c, 195 :: 		DMA2_HIFCRbits.CFEIF7 = 1;
0x5436	0x2101    MOVS	R1, #1
0x5438	0xB249    SXTB	R1, R1
0x543A	0x4814    LDR	R0, [PC, #80]
0x543C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 196 :: 		}
0x543E	0xE022    B	L_DMA2Strm7_interrupt210
L_DMA2Strm7_interrupt209:
;uarthandler.c, 197 :: 		else if ( DMA2_HISRbits.DMEIF7 ) {
0x5440	0x4813    LDR	R0, [PC, #76]
0x5442	0x6800    LDR	R0, [R0, #0]
0x5444	0xB120    CBZ	R0, L_DMA2Strm7_interrupt211
;uarthandler.c, 198 :: 		DMA2_HIFCRbits.CDMEIF7 = 1;
0x5446	0x2101    MOVS	R1, #1
0x5448	0xB249    SXTB	R1, R1
0x544A	0x4812    LDR	R0, [PC, #72]
0x544C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 199 :: 		}
0x544E	0xE01A    B	L_DMA2Strm7_interrupt212
L_DMA2Strm7_interrupt211:
;uarthandler.c, 200 :: 		else if ( DMA2_HISRbits.TEIF7 ) {     // TRANSFER ERROR INTERRUPT FLAG
0x5450	0x4811    LDR	R0, [PC, #68]
0x5452	0x6800    LDR	R0, [R0, #0]
0x5454	0xB120    CBZ	R0, L_DMA2Strm7_interrupt213
;uarthandler.c, 201 :: 		DMA2_HIFCRbits.CTEIF7 = 1;       // limpia el flag de error
0x5456	0x2101    MOVS	R1, #1
0x5458	0xB249    SXTB	R1, R1
0x545A	0x4810    LDR	R0, [PC, #64]
0x545C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 203 :: 		}
0x545E	0xE012    B	L_DMA2Strm7_interrupt214
L_DMA2Strm7_interrupt213:
;uarthandler.c, 204 :: 		else if ( DMA2_HISRbits.HTIF7 ) {
0x5460	0x480F    LDR	R0, [PC, #60]
0x5462	0x6800    LDR	R0, [R0, #0]
0x5464	0xB120    CBZ	R0, L_DMA2Strm7_interrupt215
;uarthandler.c, 205 :: 		DMA2_HIFCRbits.CHTIF7 = 1;
0x5466	0x2101    MOVS	R1, #1
0x5468	0xB249    SXTB	R1, R1
0x546A	0x480E    LDR	R0, [PC, #56]
0x546C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 206 :: 		}
0x546E	0xE00A    B	L_DMA2Strm7_interrupt216
L_DMA2Strm7_interrupt215:
;uarthandler.c, 207 :: 		else if ( DMA2_HISRbits.TCIF7 ) {     // TRANSFER COMPLETE INTERRUPT FLAG = envio el frame completo
0x5470	0x480D    LDR	R0, [PC, #52]
0x5472	0x6800    LDR	R0, [R0, #0]
0x5474	0xB138    CBZ	R0, L_DMA2Strm7_interrupt217
;uarthandler.c, 208 :: 		DMA2_HIFCRbits.CTCIF7 = 1;       // limpia TODOS LOS FLAGS DE DMA2 CANAL 2
0x5476	0x2101    MOVS	R1, #1
0x5478	0xB249    SXTB	R1, R1
0x547A	0x480C    LDR	R0, [PC, #48]
0x547C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 209 :: 		DMA2_S7CRbits.EN = 0;            // EXPERIMENTAL PARA CAMBIAR EL VALOR DEL CONTADOR
0x547E	0x2100    MOVS	R1, #0
0x5480	0xB249    SXTB	R1, R1
0x5482	0x480B    LDR	R0, [PC, #44]
0x5484	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 211 :: 		}
L_DMA2Strm7_interrupt217:
L_DMA2Strm7_interrupt216:
L_DMA2Strm7_interrupt214:
L_DMA2Strm7_interrupt212:
L_DMA2Strm7_interrupt210:
;uarthandler.c, 212 :: 		}
L_end_DMA2Strm7_interrupt:
0x5486	0x4770    BX	LR
0x5488	0x80D8424C  	DMA2_HISRbits+0
0x548C	0x81D8424C  	DMA2_HIFCRbits+0
0x5490	0x80E0424C  	DMA2_HISRbits+0
0x5494	0x81E0424C  	DMA2_HIFCRbits+0
0x5498	0x80E4424C  	DMA2_HISRbits+0
0x549C	0x81E4424C  	DMA2_HIFCRbits+0
0x54A0	0x80E8424C  	DMA2_HISRbits+0
0x54A4	0x81E8424C  	DMA2_HIFCRbits+0
0x54A8	0x80EC424C  	DMA2_HISRbits+0
0x54AC	0x81EC424C  	DMA2_HIFCRbits+0
0x54B0	0x9700424C  	DMA2_S7CRbits+0
; end of _DMA2Strm7_interrupt
_vUARTISR:
;uarthandler.c, 218 :: 		void vUARTISR() iv IVT_INT_USART1 ics ICS_AUTO{
;uarthandler.c, 219 :: 		LED_BLUE =~ LED_BLUE;
0x5180	0x484D    LDR	R0, [PC, #308]
0x5182	0x6800    LDR	R0, [R0, #0]
0x5184	0xF0800101  EOR	R1, R0, #1
0x5188	0xB2C9    UXTB	R1, R1
0x518A	0x484B    LDR	R0, [PC, #300]
0x518C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 221 :: 		if( USART1_SRbits.RXNE ){
0x518E	0x484B    LDR	R0, [PC, #300]
0x5190	0x6800    LDR	R0, [R0, #0]
0x5192	0x2800    CMP	R0, #0
0x5194	0xF000808F  BEQ	L_vUARTISR218
;uarthandler.c, 222 :: 		ucData1 = USART1_DR;
0x5198	0x4849    LDR	R0, [PC, #292]
0x519A	0x6801    LDR	R1, [R0, #0]
0x519C	0x4849    LDR	R0, [PC, #292]
0x519E	0x7001    STRB	R1, [R0, #0]
;uarthandler.c, 223 :: 		if ( ucData1 != CHR_CR && ucData1 != CHR_LF && ulUSART1ByteReceived < BUFFER_MAX_USART ) {
0x51A0	0x4848    LDR	R0, [PC, #288]
0x51A2	0x7800    LDRB	R0, [R0, #0]
0x51A4	0x280D    CMP	R0, #13
0x51A6	0xF000805A  BEQ	L_vUARTISR221
0x51AA	0x4846    LDR	R0, [PC, #280]
0x51AC	0x7800    LDRB	R0, [R0, #0]
0x51AE	0x280A    CMP	R0, #10
0x51B0	0xF0008055  BEQ	L_vUARTISR221
0x51B4	0x4844    LDR	R0, [PC, #272]
0x51B6	0x6800    LDR	R0, [R0, #0]
0x51B8	0xF5B05F80  CMP	R0, #4096
0x51BC	0xF080804F  BCS	L_vUARTISR221
L__vUARTISR461:
;uarthandler.c, 226 :: 		ucData1 == CHR_s ||
0x51C0	0x4840    LDR	R0, [PC, #256]
0x51C2	0x7800    LDRB	R0, [R0, #0]
0x51C4	0x2853    CMP	R0, #83
0x51C6	0xD014    BEQ	L__vUARTISR460
0x51C8	0x483E    LDR	R0, [PC, #248]
0x51CA	0x7800    LDRB	R0, [R0, #0]
0x51CC	0x2873    CMP	R0, #115
0x51CE	0xD010    BEQ	L__vUARTISR460
;uarthandler.c, 227 :: 		ucData1 == CHR_U ||
0x51D0	0x483C    LDR	R0, [PC, #240]
0x51D2	0x7800    LDRB	R0, [R0, #0]
0x51D4	0x2855    CMP	R0, #85
0x51D6	0xD00C    BEQ	L__vUARTISR460
;uarthandler.c, 228 :: 		ucData1 == CHR_u ||
0x51D8	0x483A    LDR	R0, [PC, #232]
0x51DA	0x7800    LDRB	R0, [R0, #0]
0x51DC	0x2875    CMP	R0, #117
0x51DE	0xD008    BEQ	L__vUARTISR460
;uarthandler.c, 229 :: 		ucData1 == CHR_G ||
0x51E0	0x4838    LDR	R0, [PC, #224]
0x51E2	0x7800    LDRB	R0, [R0, #0]
0x51E4	0x2847    CMP	R0, #71
0x51E6	0xD004    BEQ	L__vUARTISR460
;uarthandler.c, 230 :: 		ucData1 == CHR_g ) &&
0x51E8	0x4836    LDR	R0, [PC, #216]
0x51EA	0x7800    LDRB	R0, [R0, #0]
0x51EC	0x2867    CMP	R0, #103
0x51EE	0xD000    BEQ	L__vUARTISR460
0x51F0	0xE00F    B	L_vUARTISR226
;uarthandler.c, 231 :: 		ulUSART1ByteReceived == 0 ) {
L__vUARTISR460:
0x51F2	0x4835    LDR	R0, [PC, #212]
0x51F4	0x6800    LDR	R0, [R0, #0]
0x51F6	0xB960    CBNZ	R0, L_vUARTISR226
L__vUARTISR459:
;uarthandler.c, 232 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x51F8	0x4833    LDR	R0, [PC, #204]
0x51FA	0x6801    LDR	R1, [R0, #0]
0x51FC	0x4833    LDR	R0, [PC, #204]
0x51FE	0x1841    ADDS	R1, R0, R1
0x5200	0x4830    LDR	R0, [PC, #192]
0x5202	0x7800    LDRB	R0, [R0, #0]
0x5204	0x7008    STRB	R0, [R1, #0]
0x5206	0x4830    LDR	R0, [PC, #192]
0x5208	0x6800    LDR	R0, [R0, #0]
0x520A	0x1C41    ADDS	R1, R0, #1
0x520C	0x482E    LDR	R0, [PC, #184]
0x520E	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 233 :: 		}
0x5210	0xE024    B	L_vUARTISR227
L_vUARTISR226:
;uarthandler.c, 236 :: 		ucUSART1RXBuffer[ 0 ] == CHR_s ||
0x5212	0x482E    LDR	R0, [PC, #184]
0x5214	0x7800    LDRB	R0, [R0, #0]
0x5216	0x2853    CMP	R0, #83
0x5218	0xD014    BEQ	L__vUARTISR458
0x521A	0x482C    LDR	R0, [PC, #176]
0x521C	0x7800    LDRB	R0, [R0, #0]
0x521E	0x2873    CMP	R0, #115
0x5220	0xD010    BEQ	L__vUARTISR458
;uarthandler.c, 237 :: 		ucUSART1RXBuffer[ 0 ] == CHR_U ||
0x5222	0x482A    LDR	R0, [PC, #168]
0x5224	0x7800    LDRB	R0, [R0, #0]
0x5226	0x2855    CMP	R0, #85
0x5228	0xD00C    BEQ	L__vUARTISR458
;uarthandler.c, 238 :: 		ucUSART1RXBuffer[ 0 ] == CHR_u ||
0x522A	0x4828    LDR	R0, [PC, #160]
0x522C	0x7800    LDRB	R0, [R0, #0]
0x522E	0x2875    CMP	R0, #117
0x5230	0xD008    BEQ	L__vUARTISR458
;uarthandler.c, 239 :: 		ucUSART1RXBuffer[ 0 ] == CHR_G ||
0x5232	0x4826    LDR	R0, [PC, #152]
0x5234	0x7800    LDRB	R0, [R0, #0]
0x5236	0x2847    CMP	R0, #71
0x5238	0xD004    BEQ	L__vUARTISR458
;uarthandler.c, 240 :: 		ucUSART1RXBuffer[ 0 ] == CHR_g ) {
0x523A	0x4824    LDR	R0, [PC, #144]
0x523C	0x7800    LDRB	R0, [R0, #0]
0x523E	0x2867    CMP	R0, #103
0x5240	0xD000    BEQ	L__vUARTISR458
0x5242	0xE00B    B	L_vUARTISR230
L__vUARTISR458:
;uarthandler.c, 241 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x5244	0x4820    LDR	R0, [PC, #128]
0x5246	0x6801    LDR	R1, [R0, #0]
0x5248	0x4820    LDR	R0, [PC, #128]
0x524A	0x1841    ADDS	R1, R0, R1
0x524C	0x481D    LDR	R0, [PC, #116]
0x524E	0x7800    LDRB	R0, [R0, #0]
0x5250	0x7008    STRB	R0, [R1, #0]
0x5252	0x481D    LDR	R0, [PC, #116]
0x5254	0x6800    LDR	R0, [R0, #0]
0x5256	0x1C41    ADDS	R1, R0, #1
0x5258	0x481B    LDR	R0, [PC, #108]
0x525A	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 242 :: 		}
L_vUARTISR230:
L_vUARTISR227:
;uarthandler.c, 243 :: 		}
0x525C	0xE02B    B	L_vUARTISR231
L_vUARTISR221:
;uarthandler.c, 245 :: 		else if ( ucData1 == CHR_CR ) {
0x525E	0x4819    LDR	R0, [PC, #100]
0x5260	0x7800    LDRB	R0, [R0, #0]
0x5262	0x280D    CMP	R0, #13
0x5264	0xD10C    BNE	L_vUARTISR232
;uarthandler.c, 246 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x5266	0x4818    LDR	R0, [PC, #96]
0x5268	0x6801    LDR	R1, [R0, #0]
0x526A	0x4818    LDR	R0, [PC, #96]
0x526C	0x1841    ADDS	R1, R0, R1
0x526E	0x4815    LDR	R0, [PC, #84]
0x5270	0x7800    LDRB	R0, [R0, #0]
0x5272	0x7008    STRB	R0, [R1, #0]
0x5274	0x4814    LDR	R0, [PC, #80]
0x5276	0x6800    LDR	R0, [R0, #0]
0x5278	0x1C41    ADDS	R1, R0, #1
0x527A	0x4813    LDR	R0, [PC, #76]
0x527C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 247 :: 		}
0x527E	0xE01A    B	L_vUARTISR233
L_vUARTISR232:
;uarthandler.c, 249 :: 		else if ( ucData1 == CHR_LF && ucUSART1RXBuffer[ ulUSART1ByteReceived - 1 ] == CHR_CR ) {
0x5280	0x4810    LDR	R0, [PC, #64]
0x5282	0x7800    LDRB	R0, [R0, #0]
0x5284	0x280A    CMP	R0, #10
0x5286	0xD116    BNE	L_vUARTISR236
0x5288	0x480F    LDR	R0, [PC, #60]
0x528A	0x6800    LDR	R0, [R0, #0]
0x528C	0x1E41    SUBS	R1, R0, #1
0x528E	0x480F    LDR	R0, [PC, #60]
0x5290	0x1840    ADDS	R0, R0, R1
0x5292	0x7800    LDRB	R0, [R0, #0]
0x5294	0x280D    CMP	R0, #13
0x5296	0xD10E    BNE	L_vUARTISR236
L__vUARTISR457:
;uarthandler.c, 250 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x5298	0x480B    LDR	R0, [PC, #44]
0x529A	0x6801    LDR	R1, [R0, #0]
0x529C	0x480B    LDR	R0, [PC, #44]
0x529E	0x1841    ADDS	R1, R0, R1
0x52A0	0x4808    LDR	R0, [PC, #32]
0x52A2	0x7800    LDRB	R0, [R0, #0]
0x52A4	0x7008    STRB	R0, [R1, #0]
0x52A6	0x4808    LDR	R0, [PC, #32]
0x52A8	0x6800    LDR	R0, [R0, #0]
0x52AA	0x1C41    ADDS	R1, R0, #1
0x52AC	0x4806    LDR	R0, [PC, #24]
0x52AE	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 251 :: 		fUSART1Buffer = READY_TO_READ;
0x52B0	0x2101    MOVS	R1, #1
0x52B2	0x4807    LDR	R0, [PC, #28]
0x52B4	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 252 :: 		}
L_vUARTISR236:
L_vUARTISR233:
L_vUARTISR231:
;uarthandler.c, 253 :: 		}
L_vUARTISR218:
;uarthandler.c, 254 :: 		}
L_end_vUARTISR:
0x52B6	0x4770    BX	LR
0x52B8	0x02A04241  	GPIOC_ODRbits+0
0x52BC	0x00144222  	USART1_SRbits+0
0x52C0	0x10044001  	USART1_DR+0
0x52C4	0x23352000  	_ucData1+0
0x52C8	0x20042000  	_ulUSART1ByteReceived+0
0x52CC	0x10042000  	_ucUSART1RXBuffer+0
0x52D0	0x20082000  	_fUSART1Buffer+0
; end of _vUARTISR
_Timer2_interrupt:
;DriverRF4463PROMain.c, 113 :: 		void Timer2_interrupt() iv IVT_INT_TIM2 {
;DriverRF4463PROMain.c, 114 :: 		TIM2_SR.UIF = 0;
0x52D4	0x2100    MOVS	R1, #0
0x52D6	0xB249    SXTB	R1, R1
0x52D8	0x4804    LDR	R0, [PC, #16]
0x52DA	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 115 :: 		Flag.rf_reach_timeout = 1; //Enter your code here
0x52DC	0x2101    MOVS	R1, #1
0x52DE	0xB249    SXTB	R1, R1
0x52E0	0x4803    LDR	R0, [PC, #12]
0x52E2	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 116 :: 		Flag.reach_1s = 1;
0x52E4	0x4803    LDR	R0, [PC, #12]
0x52E6	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 117 :: 		}
L_end_Timer2_interrupt:
0x52E8	0x4770    BX	LR
0x52EA	0xBF00    NOP
0x52EC	0x02004200  	TIM2_SR+0
0x52F0	0x6A882204  	_Flag+0
0x52F4	0x6A802204  	_Flag+0
; end of _Timer2_interrupt
_Int_SPI3:
;driverspi.c, 43 :: 		void Int_SPI3() iv IVT_INT_SPI3 ics ICS_AUTO {
;driverspi.c, 45 :: 		if ( SPI3_SRbits.RXNE ) {
0x52F8	0x4807    LDR	R0, [PC, #28]
0x52FA	0x6800    LDR	R0, [R0, #0]
0x52FC	0xB150    CBZ	R0, L_Int_SPI30
;driverspi.c, 46 :: 		ucSPI3ByteReceived = ( unsigned char )SPI3_DR;      // lee el Byte recibido
0x52FE	0x4807    LDR	R0, [PC, #28]
0x5300	0x6801    LDR	R1, [R0, #0]
0x5302	0x4807    LDR	R0, [PC, #28]
0x5304	0x7001    STRB	R1, [R0, #0]
;driverspi.c, 48 :: 		LED_GREEN = ~LED_GREEN;
0x5306	0x4807    LDR	R0, [PC, #28]
0x5308	0x6800    LDR	R0, [R0, #0]
0x530A	0xF0800101  EOR	R1, R0, #1
0x530E	0xB2C9    UXTB	R1, R1
0x5310	0x4804    LDR	R0, [PC, #16]
0x5312	0x6001    STR	R1, [R0, #0]
;driverspi.c, 49 :: 		}
L_Int_SPI30:
;driverspi.c, 50 :: 		}
L_end_Int_SPI3:
0x5314	0x4770    BX	LR
0x5316	0xBF00    NOP
0x5318	0x81004207  	SPI3_SRbits+0
0x531C	0x3C0C4000  	SPI3_DR+0
0x5320	0x22902000  	_ucSPI3ByteReceived+0
0x5324	0x029C4241  	GPIOC_ODRbits+0
; end of _Int_SPI3
_DMA2Strm1_interrupt:
;uarthandler.c, 144 :: 		void DMA2Strm1_interrupt() iv IVT_INT_DMA2_Stream1 ics ICS_AUTO {
;uarthandler.c, 146 :: 		if ( DMA2_LISRbits.FEIF1 ) {
0x53AC	0x4815    LDR	R0, [PC, #84]
0x53AE	0x6800    LDR	R0, [R0, #0]
0x53B0	0xB120    CBZ	R0, L_DMA2Strm1_interrupt191
;uarthandler.c, 147 :: 		DMA2_LIFCRbits.CFEIF1 = 1;
0x53B2	0x2101    MOVS	R1, #1
0x53B4	0xB249    SXTB	R1, R1
0x53B6	0x4814    LDR	R0, [PC, #80]
0x53B8	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 148 :: 		}
0x53BA	0xE022    B	L_DMA2Strm1_interrupt192
L_DMA2Strm1_interrupt191:
;uarthandler.c, 149 :: 		else if ( DMA2_LISRbits.DMEIF1 ) {
0x53BC	0x4813    LDR	R0, [PC, #76]
0x53BE	0x6800    LDR	R0, [R0, #0]
0x53C0	0xB120    CBZ	R0, L_DMA2Strm1_interrupt193
;uarthandler.c, 150 :: 		DMA2_LIFCRbits.CDMEIF1 = 1;
0x53C2	0x2101    MOVS	R1, #1
0x53C4	0xB249    SXTB	R1, R1
0x53C6	0x4812    LDR	R0, [PC, #72]
0x53C8	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 151 :: 		}
0x53CA	0xE01A    B	L_DMA2Strm1_interrupt194
L_DMA2Strm1_interrupt193:
;uarthandler.c, 152 :: 		else if ( DMA2_LISRbits.TEIF1 ) {     // TRANSFER ERROR INTERRUPT FLAG
0x53CC	0x4811    LDR	R0, [PC, #68]
0x53CE	0x6800    LDR	R0, [R0, #0]
0x53D0	0xB120    CBZ	R0, L_DMA2Strm1_interrupt195
;uarthandler.c, 153 :: 		DMA2_LIFCRbits.CTEIF1 = 1;       // limpia el flag de error
0x53D2	0x2101    MOVS	R1, #1
0x53D4	0xB249    SXTB	R1, R1
0x53D6	0x4810    LDR	R0, [PC, #64]
0x53D8	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 155 :: 		}
0x53DA	0xE012    B	L_DMA2Strm1_interrupt196
L_DMA2Strm1_interrupt195:
;uarthandler.c, 156 :: 		else if ( DMA2_LISRbits.HTIF1 ) {
0x53DC	0x480F    LDR	R0, [PC, #60]
0x53DE	0x6800    LDR	R0, [R0, #0]
0x53E0	0xB120    CBZ	R0, L_DMA2Strm1_interrupt197
;uarthandler.c, 157 :: 		DMA2_LIFCRbits.CHTIF1 = 1;
0x53E2	0x2101    MOVS	R1, #1
0x53E4	0xB249    SXTB	R1, R1
0x53E6	0x480E    LDR	R0, [PC, #56]
0x53E8	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 158 :: 		}
0x53EA	0xE00A    B	L_DMA2Strm1_interrupt198
L_DMA2Strm1_interrupt197:
;uarthandler.c, 159 :: 		else if ( DMA2_LISRbits.TCIF1 ) {     // TRANSFER COMPLETE INTERRUPT FLAG = envio el frame completo
0x53EC	0x480D    LDR	R0, [PC, #52]
0x53EE	0x6800    LDR	R0, [R0, #0]
0x53F0	0xB138    CBZ	R0, L_DMA2Strm1_interrupt199
;uarthandler.c, 160 :: 		DMA2_LIFCRbits.CTCIF1 = 1;       // limpia TODOS LOS FLAGS DE DMA2 CANAL 2
0x53F2	0x2101    MOVS	R1, #1
0x53F4	0xB249    SXTB	R1, R1
0x53F6	0x480C    LDR	R0, [PC, #48]
0x53F8	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 161 :: 		DMA2_S1CRbits.EN = 0;            // EXPERIMENTAL PARA CAMBIAR EL VALOR DEL CONTADOR
0x53FA	0x2100    MOVS	R1, #0
0x53FC	0xB249    SXTB	R1, R1
0x53FE	0x480B    LDR	R0, [PC, #44]
0x5400	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 163 :: 		}
L_DMA2Strm1_interrupt199:
L_DMA2Strm1_interrupt198:
L_DMA2Strm1_interrupt196:
L_DMA2Strm1_interrupt194:
L_DMA2Strm1_interrupt192:
;uarthandler.c, 164 :: 		}
L_end_DMA2Strm1_interrupt:
0x5402	0x4770    BX	LR
0x5404	0x8018424C  	DMA2_LISRbits+0
0x5408	0x8118424C  	DMA2_LIFCRbits+0
0x540C	0x8020424C  	DMA2_LISRbits+0
0x5410	0x8120424C  	DMA2_LIFCRbits+0
0x5414	0x8024424C  	DMA2_LISRbits+0
0x5418	0x8124424C  	DMA2_LIFCRbits+0
0x541C	0x8028424C  	DMA2_LISRbits+0
0x5420	0x8128424C  	DMA2_LIFCRbits+0
0x5424	0x802C424C  	DMA2_LISRbits+0
0x5428	0x812C424C  	DMA2_LIFCRbits+0
0x542C	0x8500424C  	DMA2_S1CRbits+0
; end of _DMA2Strm1_interrupt
_DMA2Strm4_interrupt:
;uarthandler.c, 168 :: 		void DMA2Strm4_interrupt() iv IVT_INT_DMA2_Stream4 ics ICS_AUTO {
;uarthandler.c, 170 :: 		if ( DMA2_HISRbits.FEIF4 ) {
0x5328	0x4815    LDR	R0, [PC, #84]
0x532A	0x6800    LDR	R0, [R0, #0]
0x532C	0xB120    CBZ	R0, L_DMA2Strm4_interrupt200
;uarthandler.c, 171 :: 		DMA2_HIFCRbits.CFEIF4 = 1;
0x532E	0x2101    MOVS	R1, #1
0x5330	0xB249    SXTB	R1, R1
0x5332	0x4814    LDR	R0, [PC, #80]
0x5334	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 172 :: 		}
0x5336	0xE022    B	L_DMA2Strm4_interrupt201
L_DMA2Strm4_interrupt200:
;uarthandler.c, 173 :: 		else if ( DMA2_HISRbits.DMEIF4 ) {
0x5338	0x4813    LDR	R0, [PC, #76]
0x533A	0x6800    LDR	R0, [R0, #0]
0x533C	0xB120    CBZ	R0, L_DMA2Strm4_interrupt202
;uarthandler.c, 174 :: 		DMA2_HIFCRbits.CDMEIF4 = 1;
0x533E	0x2101    MOVS	R1, #1
0x5340	0xB249    SXTB	R1, R1
0x5342	0x4812    LDR	R0, [PC, #72]
0x5344	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 175 :: 		}
0x5346	0xE01A    B	L_DMA2Strm4_interrupt203
L_DMA2Strm4_interrupt202:
;uarthandler.c, 176 :: 		else if ( DMA2_HISRbits.TEIF4 ) {     // TRANSFER ERROR INTERRUPT FLAG
0x5348	0x4811    LDR	R0, [PC, #68]
0x534A	0x6800    LDR	R0, [R0, #0]
0x534C	0xB120    CBZ	R0, L_DMA2Strm4_interrupt204
;uarthandler.c, 177 :: 		DMA2_HIFCRbits.CTEIF4 = 1;       // limpia el flag de error
0x534E	0x2101    MOVS	R1, #1
0x5350	0xB249    SXTB	R1, R1
0x5352	0x4810    LDR	R0, [PC, #64]
0x5354	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 179 :: 		}
0x5356	0xE012    B	L_DMA2Strm4_interrupt205
L_DMA2Strm4_interrupt204:
;uarthandler.c, 180 :: 		else if ( DMA2_HISRbits.HTIF4 ) {
0x5358	0x480F    LDR	R0, [PC, #60]
0x535A	0x6800    LDR	R0, [R0, #0]
0x535C	0xB120    CBZ	R0, L_DMA2Strm4_interrupt206
;uarthandler.c, 181 :: 		DMA2_HIFCRbits.CHTIF4 = 1;
0x535E	0x2101    MOVS	R1, #1
0x5360	0xB249    SXTB	R1, R1
0x5362	0x480E    LDR	R0, [PC, #56]
0x5364	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 182 :: 		}
0x5366	0xE00A    B	L_DMA2Strm4_interrupt207
L_DMA2Strm4_interrupt206:
;uarthandler.c, 183 :: 		else if ( DMA2_HISRbits.TCIF4 ) {     // TRANSFER COMPLETE INTERRUPT FLAG = envio el frame completo
0x5368	0x480D    LDR	R0, [PC, #52]
0x536A	0x6800    LDR	R0, [R0, #0]
0x536C	0xB138    CBZ	R0, L_DMA2Strm4_interrupt208
;uarthandler.c, 184 :: 		DMA2_HIFCRbits.CTCIF4 = 1;       // limpia TODOS LOS FLAGS DE DMA2 CANAL 2
0x536E	0x2101    MOVS	R1, #1
0x5370	0xB249    SXTB	R1, R1
0x5372	0x480C    LDR	R0, [PC, #48]
0x5374	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 185 :: 		DMA2_S4CRbits.EN = 0;            // EXPERIMENTAL PARA CAMBIAR EL VALOR DEL CONTADOR
0x5376	0x2100    MOVS	R1, #0
0x5378	0xB249    SXTB	R1, R1
0x537A	0x480B    LDR	R0, [PC, #44]
0x537C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 187 :: 		}
L_DMA2Strm4_interrupt208:
L_DMA2Strm4_interrupt207:
L_DMA2Strm4_interrupt205:
L_DMA2Strm4_interrupt203:
L_DMA2Strm4_interrupt201:
;uarthandler.c, 188 :: 		}
L_end_DMA2Strm4_interrupt:
0x537E	0x4770    BX	LR
0x5380	0x8080424C  	DMA2_HISRbits+0
0x5384	0x8180424C  	DMA2_HIFCRbits+0
0x5388	0x8088424C  	DMA2_HISRbits+0
0x538C	0x8188424C  	DMA2_HIFCRbits+0
0x5390	0x808C424C  	DMA2_HISRbits+0
0x5394	0x818C424C  	DMA2_HIFCRbits+0
0x5398	0x8090424C  	DMA2_HISRbits+0
0x539C	0x8190424C  	DMA2_HIFCRbits+0
0x53A0	0x8094424C  	DMA2_HISRbits+0
0x53A4	0x8194424C  	DMA2_HIFCRbits+0
0x53A8	0x8E00424C  	DMA2_S4CRbits+0
; end of _DMA2Strm4_interrupt
;DriverRF4463PROMain.c,0 :: ?ICSvRF4463MainCommandProcessor_ulArgument_L0 [4]
0x42A4	0x00000000 ;?ICSvRF4463MainCommandProcessor_ulArgument_L0+0
; end of ?ICSvRF4463MainCommandProcessor_ulArgument_L0
;DriverRF4463PROMain.c,0 :: ?ICS_ucUSARTActiveBuffer1 [4096]
0x5BE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+0
0x5BE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4
0x5BEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+8
0x5BF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+12
0x5BF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+16
0x5BF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+20
0x5BFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+24
0x5C00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+28
0x5C04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+32
0x5C08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+36
0x5C0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+40
0x5C10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+44
0x5C14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+48
0x5C18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+52
0x5C1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+56
0x5C20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+60
0x5C24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+64
0x5C28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+68
0x5C2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+72
0x5C30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+76
0x5C34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+80
0x5C38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+84
0x5C3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+88
0x5C40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+92
0x5C44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+96
0x5C48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+100
0x5C4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+104
0x5C50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+108
0x5C54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+112
0x5C58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+116
0x5C5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+120
0x5C60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+124
0x5C64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+128
0x5C68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+132
0x5C6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+136
0x5C70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+140
0x5C74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+144
0x5C78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+148
0x5C7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+152
0x5C80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+156
0x5C84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+160
0x5C88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+164
0x5C8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+168
0x5C90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+172
0x5C94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+176
0x5C98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+180
0x5C9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+184
0x5CA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+188
0x5CA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+192
0x5CA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+196
0x5CAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+200
0x5CB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+204
0x5CB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+208
0x5CB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+212
0x5CBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+216
0x5CC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+220
0x5CC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+224
0x5CC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+228
0x5CCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+232
0x5CD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+236
0x5CD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+240
0x5CD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+244
0x5CDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+248
0x5CE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+252
0x5CE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+256
0x5CE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+260
0x5CEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+264
0x5CF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+268
0x5CF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+272
0x5CF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+276
0x5CFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+280
0x5D00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+284
0x5D04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+288
0x5D08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+292
0x5D0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+296
0x5D10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+300
0x5D14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+304
0x5D18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+308
0x5D1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+312
0x5D20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+316
0x5D24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+320
0x5D28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+324
0x5D2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+328
0x5D30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+332
0x5D34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+336
0x5D38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+340
0x5D3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+344
0x5D40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+348
0x5D44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+352
0x5D48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+356
0x5D4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+360
0x5D50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+364
0x5D54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+368
0x5D58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+372
0x5D5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+376
0x5D60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+380
0x5D64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+384
0x5D68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+388
0x5D6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+392
0x5D70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+396
0x5D74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+400
0x5D78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+404
0x5D7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+408
0x5D80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+412
0x5D84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+416
0x5D88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+420
0x5D8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+424
0x5D90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+428
0x5D94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+432
0x5D98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+436
0x5D9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+440
0x5DA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+444
0x5DA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+448
0x5DA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+452
0x5DAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+456
0x5DB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+460
0x5DB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+464
0x5DB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+468
0x5DBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+472
0x5DC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+476
0x5DC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+480
0x5DC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+484
0x5DCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+488
0x5DD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+492
0x5DD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+496
0x5DD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+500
0x5DDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+504
0x5DE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+508
0x5DE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+512
0x5DE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+516
0x5DEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+520
0x5DF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+524
0x5DF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+528
0x5DF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+532
0x5DFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+536
0x5E00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+540
0x5E04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+544
0x5E08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+548
0x5E0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+552
0x5E10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+556
0x5E14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+560
0x5E18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+564
0x5E1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+568
0x5E20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+572
0x5E24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+576
0x5E28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+580
0x5E2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+584
0x5E30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+588
0x5E34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+592
0x5E38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+596
0x5E3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+600
0x5E40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+604
0x5E44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+608
0x5E48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+612
0x5E4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+616
0x5E50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+620
0x5E54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+624
0x5E58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+628
0x5E5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+632
0x5E60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+636
0x5E64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+640
0x5E68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+644
0x5E6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+648
0x5E70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+652
0x5E74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+656
0x5E78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+660
0x5E7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+664
0x5E80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+668
0x5E84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+672
0x5E88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+676
0x5E8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+680
0x5E90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+684
0x5E94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+688
0x5E98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+692
0x5E9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+696
0x5EA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+700
0x5EA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+704
0x5EA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+708
0x5EAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+712
0x5EB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+716
0x5EB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+720
0x5EB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+724
0x5EBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+728
0x5EC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+732
0x5EC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+736
0x5EC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+740
0x5ECC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+744
0x5ED0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+748
0x5ED4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+752
0x5ED8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+756
0x5EDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+760
0x5EE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+764
0x5EE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+768
0x5EE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+772
0x5EEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+776
0x5EF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+780
0x5EF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+784
0x5EF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+788
0x5EFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+792
0x5F00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+796
0x5F04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+800
0x5F08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+804
0x5F0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+808
0x5F10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+812
0x5F14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+816
0x5F18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+820
0x5F1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+824
0x5F20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+828
0x5F24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+832
0x5F28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+836
0x5F2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+840
0x5F30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+844
0x5F34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+848
0x5F38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+852
0x5F3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+856
0x5F40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+860
0x5F44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+864
0x5F48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+868
0x5F4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+872
0x5F50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+876
0x5F54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+880
0x5F58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+884
0x5F5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+888
0x5F60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+892
0x5F64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+896
0x5F68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+900
0x5F6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+904
0x5F70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+908
0x5F74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+912
0x5F78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+916
0x5F7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+920
0x5F80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+924
0x5F84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+928
0x5F88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+932
0x5F8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+936
0x5F90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+940
0x5F94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+944
0x5F98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+948
0x5F9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+952
0x5FA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+956
0x5FA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+960
0x5FA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+964
0x5FAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+968
0x5FB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+972
0x5FB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+976
0x5FB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+980
0x5FBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+984
0x5FC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+988
0x5FC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+992
0x5FC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+996
0x5FCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1000
0x5FD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1004
0x5FD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1008
0x5FD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1012
0x5FDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1016
0x5FE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1020
0x5FE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1024
0x5FE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1028
0x5FEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1032
0x5FF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1036
0x5FF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1040
0x5FF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1044
0x5FFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1048
0x6000	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1052
0x6004	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1056
0x6008	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1060
0x600C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1064
0x6010	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1068
0x6014	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1072
0x6018	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1076
0x601C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1080
0x6020	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1084
0x6024	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1088
0x6028	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1092
0x602C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1096
0x6030	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1100
0x6034	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1104
0x6038	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1108
0x603C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1112
0x6040	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1116
0x6044	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1120
0x6048	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1124
0x604C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1128
0x6050	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1132
0x6054	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1136
0x6058	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1140
0x605C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1144
0x6060	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1148
0x6064	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1152
0x6068	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1156
0x606C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1160
0x6070	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1164
0x6074	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1168
0x6078	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1172
0x607C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1176
0x6080	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1180
0x6084	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1184
0x6088	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1188
0x608C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1192
0x6090	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1196
0x6094	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1200
0x6098	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1204
0x609C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1208
0x60A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1212
0x60A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1216
0x60A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1220
0x60AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1224
0x60B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1228
0x60B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1232
0x60B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1236
0x60BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1240
0x60C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1244
0x60C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1248
0x60C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1252
0x60CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1256
0x60D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1260
0x60D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1264
0x60D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1268
0x60DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1272
0x60E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1276
0x60E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1280
0x60E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1284
0x60EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1288
0x60F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1292
0x60F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1296
0x60F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1300
0x60FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1304
0x6100	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1308
0x6104	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1312
0x6108	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1316
0x610C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1320
0x6110	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1324
0x6114	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1328
0x6118	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1332
0x611C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1336
0x6120	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1340
0x6124	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1344
0x6128	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1348
0x612C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1352
0x6130	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1356
0x6134	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1360
0x6138	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1364
0x613C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1368
0x6140	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1372
0x6144	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1376
0x6148	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1380
0x614C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1384
0x6150	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1388
0x6154	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1392
0x6158	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1396
0x615C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1400
0x6160	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1404
0x6164	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1408
0x6168	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1412
0x616C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1416
0x6170	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1420
0x6174	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1424
0x6178	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1428
0x617C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1432
0x6180	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1436
0x6184	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1440
0x6188	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1444
0x618C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1448
0x6190	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1452
0x6194	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1456
0x6198	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1460
0x619C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1464
0x61A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1468
0x61A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1472
0x61A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1476
0x61AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1480
0x61B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1484
0x61B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1488
0x61B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1492
0x61BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1496
0x61C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1500
0x61C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1504
0x61C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1508
0x61CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1512
0x61D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1516
0x61D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1520
0x61D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1524
0x61DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1528
0x61E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1532
0x61E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1536
0x61E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1540
0x61EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1544
0x61F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1548
0x61F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1552
0x61F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1556
0x61FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1560
0x6200	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1564
0x6204	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1568
0x6208	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1572
0x620C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1576
0x6210	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1580
0x6214	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1584
0x6218	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1588
0x621C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1592
0x6220	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1596
0x6224	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1600
0x6228	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1604
0x622C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1608
0x6230	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1612
0x6234	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1616
0x6238	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1620
0x623C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1624
0x6240	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1628
0x6244	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1632
0x6248	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1636
0x624C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1640
0x6250	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1644
0x6254	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1648
0x6258	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1652
0x625C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1656
0x6260	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1660
0x6264	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1664
0x6268	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1668
0x626C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1672
0x6270	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1676
0x6274	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1680
0x6278	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1684
0x627C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1688
0x6280	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1692
0x6284	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1696
0x6288	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1700
0x628C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1704
0x6290	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1708
0x6294	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1712
0x6298	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1716
0x629C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1720
0x62A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1724
0x62A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1728
0x62A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1732
0x62AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1736
0x62B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1740
0x62B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1744
0x62B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1748
0x62BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1752
0x62C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1756
0x62C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1760
0x62C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1764
0x62CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1768
0x62D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1772
0x62D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1776
0x62D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1780
0x62DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1784
0x62E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1788
0x62E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1792
0x62E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1796
0x62EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1800
0x62F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1804
0x62F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1808
0x62F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1812
0x62FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1816
0x6300	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1820
0x6304	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1824
0x6308	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1828
0x630C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1832
0x6310	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1836
0x6314	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1840
0x6318	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1844
0x631C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1848
0x6320	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1852
0x6324	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1856
0x6328	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1860
0x632C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1864
0x6330	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1868
0x6334	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1872
0x6338	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1876
0x633C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1880
0x6340	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1884
0x6344	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1888
0x6348	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1892
0x634C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1896
0x6350	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1900
0x6354	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1904
0x6358	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1908
0x635C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1912
0x6360	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1916
0x6364	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1920
0x6368	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1924
0x636C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1928
0x6370	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1932
0x6374	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1936
0x6378	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1940
0x637C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1944
0x6380	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1948
0x6384	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1952
0x6388	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1956
0x638C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1960
0x6390	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1964
0x6394	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1968
0x6398	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1972
0x639C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1976
0x63A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1980
0x63A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1984
0x63A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1988
0x63AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1992
0x63B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1996
0x63B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2000
0x63B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2004
0x63BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2008
0x63C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2012
0x63C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2016
0x63C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2020
0x63CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2024
0x63D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2028
0x63D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2032
0x63D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2036
0x63DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2040
0x63E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2044
0x63E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2048
0x63E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2052
0x63EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2056
0x63F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2060
0x63F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2064
0x63F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2068
0x63FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2072
0x6400	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2076
0x6404	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2080
0x6408	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2084
0x640C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2088
0x6410	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2092
0x6414	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2096
0x6418	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2100
0x641C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2104
0x6420	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2108
0x6424	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2112
0x6428	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2116
0x642C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2120
0x6430	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2124
0x6434	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2128
0x6438	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2132
0x643C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2136
0x6440	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2140
0x6444	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2144
0x6448	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2148
0x644C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2152
0x6450	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2156
0x6454	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2160
0x6458	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2164
0x645C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2168
0x6460	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2172
0x6464	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2176
0x6468	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2180
0x646C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2184
0x6470	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2188
0x6474	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2192
0x6478	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2196
0x647C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2200
0x6480	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2204
0x6484	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2208
0x6488	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2212
0x648C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2216
0x6490	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2220
0x6494	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2224
0x6498	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2228
0x649C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2232
0x64A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2236
0x64A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2240
0x64A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2244
0x64AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2248
0x64B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2252
0x64B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2256
0x64B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2260
0x64BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2264
0x64C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2268
0x64C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2272
0x64C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2276
0x64CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2280
0x64D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2284
0x64D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2288
0x64D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2292
0x64DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2296
0x64E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2300
0x64E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2304
0x64E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2308
0x64EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2312
0x64F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2316
0x64F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2320
0x64F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2324
0x64FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2328
0x6500	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2332
0x6504	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2336
0x6508	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2340
0x650C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2344
0x6510	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2348
0x6514	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2352
0x6518	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2356
0x651C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2360
0x6520	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2364
0x6524	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2368
0x6528	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2372
0x652C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2376
0x6530	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2380
0x6534	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2384
0x6538	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2388
0x653C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2392
0x6540	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2396
0x6544	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2400
0x6548	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2404
0x654C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2408
0x6550	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2412
0x6554	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2416
0x6558	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2420
0x655C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2424
0x6560	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2428
0x6564	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2432
0x6568	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2436
0x656C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2440
0x6570	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2444
0x6574	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2448
0x6578	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2452
0x657C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2456
0x6580	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2460
0x6584	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2464
0x6588	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2468
0x658C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2472
0x6590	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2476
0x6594	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2480
0x6598	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2484
0x659C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2488
0x65A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2492
0x65A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2496
0x65A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2500
0x65AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2504
0x65B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2508
0x65B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2512
0x65B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2516
0x65BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2520
0x65C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2524
0x65C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2528
0x65C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2532
0x65CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2536
0x65D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2540
0x65D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2544
0x65D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2548
0x65DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2552
0x65E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2556
0x65E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2560
0x65E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2564
0x65EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2568
0x65F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2572
0x65F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2576
0x65F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2580
0x65FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2584
0x6600	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2588
0x6604	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2592
0x6608	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2596
0x660C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2600
0x6610	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2604
0x6614	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2608
0x6618	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2612
0x661C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2616
0x6620	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2620
0x6624	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2624
0x6628	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2628
0x662C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2632
0x6630	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2636
0x6634	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2640
0x6638	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2644
0x663C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2648
0x6640	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2652
0x6644	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2656
0x6648	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2660
0x664C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2664
0x6650	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2668
0x6654	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2672
0x6658	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2676
0x665C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2680
0x6660	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2684
0x6664	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2688
0x6668	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2692
0x666C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2696
0x6670	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2700
0x6674	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2704
0x6678	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2708
0x667C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2712
0x6680	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2716
0x6684	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2720
0x6688	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2724
0x668C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2728
0x6690	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2732
0x6694	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2736
0x6698	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2740
0x669C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2744
0x66A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2748
0x66A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2752
0x66A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2756
0x66AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2760
0x66B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2764
0x66B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2768
0x66B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2772
0x66BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2776
0x66C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2780
0x66C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2784
0x66C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2788
0x66CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2792
0x66D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2796
0x66D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2800
0x66D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2804
0x66DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2808
0x66E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2812
0x66E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2816
0x66E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2820
0x66EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2824
0x66F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2828
0x66F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2832
0x66F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2836
0x66FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2840
0x6700	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2844
0x6704	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2848
0x6708	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2852
0x670C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2856
0x6710	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2860
0x6714	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2864
0x6718	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2868
0x671C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2872
0x6720	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2876
0x6724	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2880
0x6728	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2884
0x672C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2888
0x6730	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2892
0x6734	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2896
0x6738	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2900
0x673C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2904
0x6740	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2908
0x6744	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2912
0x6748	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2916
0x674C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2920
0x6750	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2924
0x6754	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2928
0x6758	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2932
0x675C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2936
0x6760	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2940
0x6764	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2944
0x6768	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2948
0x676C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2952
0x6770	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2956
0x6774	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2960
0x6778	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2964
0x677C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2968
0x6780	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2972
0x6784	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2976
0x6788	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2980
0x678C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2984
0x6790	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2988
0x6794	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2992
0x6798	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2996
0x679C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3000
0x67A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3004
0x67A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3008
0x67A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3012
0x67AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3016
0x67B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3020
0x67B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3024
0x67B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3028
0x67BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3032
0x67C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3036
0x67C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3040
0x67C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3044
0x67CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3048
0x67D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3052
0x67D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3056
0x67D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3060
0x67DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3064
0x67E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3068
0x67E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3072
0x67E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3076
0x67EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3080
0x67F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3084
0x67F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3088
0x67F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3092
0x67FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3096
0x6800	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3100
0x6804	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3104
0x6808	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3108
0x680C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3112
0x6810	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3116
0x6814	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3120
0x6818	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3124
0x681C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3128
0x6820	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3132
0x6824	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3136
0x6828	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3140
0x682C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3144
0x6830	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3148
0x6834	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3152
0x6838	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3156
0x683C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3160
0x6840	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3164
0x6844	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3168
0x6848	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3172
0x684C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3176
0x6850	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3180
0x6854	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3184
0x6858	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3188
0x685C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3192
0x6860	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3196
0x6864	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3200
0x6868	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3204
0x686C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3208
0x6870	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3212
0x6874	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3216
0x6878	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3220
0x687C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3224
0x6880	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3228
0x6884	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3232
0x6888	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3236
0x688C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3240
0x6890	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3244
0x6894	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3248
0x6898	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3252
0x689C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3256
0x68A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3260
0x68A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3264
0x68A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3268
0x68AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3272
0x68B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3276
0x68B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3280
0x68B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3284
0x68BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3288
0x68C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3292
0x68C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3296
0x68C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3300
0x68CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3304
0x68D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3308
0x68D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3312
0x68D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3316
0x68DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3320
0x68E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3324
0x68E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3328
0x68E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3332
0x68EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3336
0x68F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3340
0x68F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3344
0x68F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3348
0x68FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3352
0x6900	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3356
0x6904	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3360
0x6908	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3364
0x690C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3368
0x6910	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3372
0x6914	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3376
0x6918	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3380
0x691C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3384
0x6920	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3388
0x6924	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3392
0x6928	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3396
0x692C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3400
0x6930	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3404
0x6934	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3408
0x6938	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3412
0x693C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3416
0x6940	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3420
0x6944	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3424
0x6948	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3428
0x694C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3432
0x6950	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3436
0x6954	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3440
0x6958	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3444
0x695C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3448
0x6960	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3452
0x6964	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3456
0x6968	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3460
0x696C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3464
0x6970	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3468
0x6974	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3472
0x6978	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3476
0x697C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3480
0x6980	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3484
0x6984	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3488
0x6988	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3492
0x698C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3496
0x6990	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3500
0x6994	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3504
0x6998	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3508
0x699C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3512
0x69A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3516
0x69A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3520
0x69A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3524
0x69AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3528
0x69B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3532
0x69B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3536
0x69B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3540
0x69BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3544
0x69C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3548
0x69C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3552
0x69C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3556
0x69CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3560
0x69D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3564
0x69D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3568
0x69D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3572
0x69DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3576
0x69E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3580
0x69E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3584
0x69E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3588
0x69EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3592
0x69F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3596
0x69F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3600
0x69F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3604
0x69FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3608
0x6A00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3612
0x6A04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3616
0x6A08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3620
0x6A0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3624
0x6A10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3628
0x6A14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3632
0x6A18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3636
0x6A1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3640
0x6A20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3644
0x6A24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3648
0x6A28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3652
0x6A2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3656
0x6A30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3660
0x6A34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3664
0x6A38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3668
0x6A3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3672
0x6A40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3676
0x6A44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3680
0x6A48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3684
0x6A4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3688
0x6A50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3692
0x6A54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3696
0x6A58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3700
0x6A5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3704
0x6A60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3708
0x6A64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3712
0x6A68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3716
0x6A6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3720
0x6A70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3724
0x6A74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3728
0x6A78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3732
0x6A7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3736
0x6A80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3740
0x6A84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3744
0x6A88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3748
0x6A8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3752
0x6A90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3756
0x6A94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3760
0x6A98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3764
0x6A9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3768
0x6AA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3772
0x6AA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3776
0x6AA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3780
0x6AAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3784
0x6AB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3788
0x6AB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3792
0x6AB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3796
0x6ABC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3800
0x6AC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3804
0x6AC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3808
0x6AC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3812
0x6ACC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3816
0x6AD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3820
0x6AD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3824
0x6AD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3828
0x6ADC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3832
0x6AE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3836
0x6AE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3840
0x6AE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3844
0x6AEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3848
0x6AF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3852
0x6AF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3856
0x6AF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3860
0x6AFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3864
0x6B00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3868
0x6B04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3872
0x6B08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3876
0x6B0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3880
0x6B10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3884
0x6B14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3888
0x6B18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3892
0x6B1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3896
0x6B20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3900
0x6B24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3904
0x6B28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3908
0x6B2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3912
0x6B30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3916
0x6B34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3920
0x6B38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3924
0x6B3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3928
0x6B40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3932
0x6B44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3936
0x6B48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3940
0x6B4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3944
0x6B50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3948
0x6B54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3952
0x6B58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3956
0x6B5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3960
0x6B60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3964
0x6B64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3968
0x6B68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3972
0x6B6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3976
0x6B70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3980
0x6B74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3984
0x6B78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3988
0x6B7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3992
0x6B80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3996
0x6B84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4000
0x6B88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4004
0x6B8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4008
0x6B90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4012
0x6B94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4016
0x6B98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4020
0x6B9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4024
0x6BA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4028
0x6BA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4032
0x6BA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4036
0x6BAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4040
0x6BB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4044
0x6BB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4048
0x6BB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4052
0x6BBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4056
0x6BC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4060
0x6BC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4064
0x6BC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4068
0x6BCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4072
0x6BD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4076
0x6BD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4080
0x6BD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4084
0x6BDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4088
0x6BE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4092
; end of ?ICS_ucUSARTActiveBuffer1
;DriverRF4463PROMain.c,0 :: ?ICS_ulUSARTActiveBuffer1BytesReceived [4]
0x6BE4	0x00000000 ;?ICS_ulUSARTActiveBuffer1BytesReceived+0
; end of ?ICS_ulUSARTActiveBuffer1BytesReceived
;DriverRF4463PROMain.c,0 :: ?ICS_ucUSART1RXBuffer [4096]
0x6BE8	0x00000000 ;?ICS_ucUSART1RXBuffer+0
0x6BEC	0x00000000 ;?ICS_ucUSART1RXBuffer+4
0x6BF0	0x00000000 ;?ICS_ucUSART1RXBuffer+8
0x6BF4	0x00000000 ;?ICS_ucUSART1RXBuffer+12
0x6BF8	0x00000000 ;?ICS_ucUSART1RXBuffer+16
0x6BFC	0x00000000 ;?ICS_ucUSART1RXBuffer+20
0x6C00	0x00000000 ;?ICS_ucUSART1RXBuffer+24
0x6C04	0x00000000 ;?ICS_ucUSART1RXBuffer+28
0x6C08	0x00000000 ;?ICS_ucUSART1RXBuffer+32
0x6C0C	0x00000000 ;?ICS_ucUSART1RXBuffer+36
0x6C10	0x00000000 ;?ICS_ucUSART1RXBuffer+40
0x6C14	0x00000000 ;?ICS_ucUSART1RXBuffer+44
0x6C18	0x00000000 ;?ICS_ucUSART1RXBuffer+48
0x6C1C	0x00000000 ;?ICS_ucUSART1RXBuffer+52
0x6C20	0x00000000 ;?ICS_ucUSART1RXBuffer+56
0x6C24	0x00000000 ;?ICS_ucUSART1RXBuffer+60
0x6C28	0x00000000 ;?ICS_ucUSART1RXBuffer+64
0x6C2C	0x00000000 ;?ICS_ucUSART1RXBuffer+68
0x6C30	0x00000000 ;?ICS_ucUSART1RXBuffer+72
0x6C34	0x00000000 ;?ICS_ucUSART1RXBuffer+76
0x6C38	0x00000000 ;?ICS_ucUSART1RXBuffer+80
0x6C3C	0x00000000 ;?ICS_ucUSART1RXBuffer+84
0x6C40	0x00000000 ;?ICS_ucUSART1RXBuffer+88
0x6C44	0x00000000 ;?ICS_ucUSART1RXBuffer+92
0x6C48	0x00000000 ;?ICS_ucUSART1RXBuffer+96
0x6C4C	0x00000000 ;?ICS_ucUSART1RXBuffer+100
0x6C50	0x00000000 ;?ICS_ucUSART1RXBuffer+104
0x6C54	0x00000000 ;?ICS_ucUSART1RXBuffer+108
0x6C58	0x00000000 ;?ICS_ucUSART1RXBuffer+112
0x6C5C	0x00000000 ;?ICS_ucUSART1RXBuffer+116
0x6C60	0x00000000 ;?ICS_ucUSART1RXBuffer+120
0x6C64	0x00000000 ;?ICS_ucUSART1RXBuffer+124
0x6C68	0x00000000 ;?ICS_ucUSART1RXBuffer+128
0x6C6C	0x00000000 ;?ICS_ucUSART1RXBuffer+132
0x6C70	0x00000000 ;?ICS_ucUSART1RXBuffer+136
0x6C74	0x00000000 ;?ICS_ucUSART1RXBuffer+140
0x6C78	0x00000000 ;?ICS_ucUSART1RXBuffer+144
0x6C7C	0x00000000 ;?ICS_ucUSART1RXBuffer+148
0x6C80	0x00000000 ;?ICS_ucUSART1RXBuffer+152
0x6C84	0x00000000 ;?ICS_ucUSART1RXBuffer+156
0x6C88	0x00000000 ;?ICS_ucUSART1RXBuffer+160
0x6C8C	0x00000000 ;?ICS_ucUSART1RXBuffer+164
0x6C90	0x00000000 ;?ICS_ucUSART1RXBuffer+168
0x6C94	0x00000000 ;?ICS_ucUSART1RXBuffer+172
0x6C98	0x00000000 ;?ICS_ucUSART1RXBuffer+176
0x6C9C	0x00000000 ;?ICS_ucUSART1RXBuffer+180
0x6CA0	0x00000000 ;?ICS_ucUSART1RXBuffer+184
0x6CA4	0x00000000 ;?ICS_ucUSART1RXBuffer+188
0x6CA8	0x00000000 ;?ICS_ucUSART1RXBuffer+192
0x6CAC	0x00000000 ;?ICS_ucUSART1RXBuffer+196
0x6CB0	0x00000000 ;?ICS_ucUSART1RXBuffer+200
0x6CB4	0x00000000 ;?ICS_ucUSART1RXBuffer+204
0x6CB8	0x00000000 ;?ICS_ucUSART1RXBuffer+208
0x6CBC	0x00000000 ;?ICS_ucUSART1RXBuffer+212
0x6CC0	0x00000000 ;?ICS_ucUSART1RXBuffer+216
0x6CC4	0x00000000 ;?ICS_ucUSART1RXBuffer+220
0x6CC8	0x00000000 ;?ICS_ucUSART1RXBuffer+224
0x6CCC	0x00000000 ;?ICS_ucUSART1RXBuffer+228
0x6CD0	0x00000000 ;?ICS_ucUSART1RXBuffer+232
0x6CD4	0x00000000 ;?ICS_ucUSART1RXBuffer+236
0x6CD8	0x00000000 ;?ICS_ucUSART1RXBuffer+240
0x6CDC	0x00000000 ;?ICS_ucUSART1RXBuffer+244
0x6CE0	0x00000000 ;?ICS_ucUSART1RXBuffer+248
0x6CE4	0x00000000 ;?ICS_ucUSART1RXBuffer+252
0x6CE8	0x00000000 ;?ICS_ucUSART1RXBuffer+256
0x6CEC	0x00000000 ;?ICS_ucUSART1RXBuffer+260
0x6CF0	0x00000000 ;?ICS_ucUSART1RXBuffer+264
0x6CF4	0x00000000 ;?ICS_ucUSART1RXBuffer+268
0x6CF8	0x00000000 ;?ICS_ucUSART1RXBuffer+272
0x6CFC	0x00000000 ;?ICS_ucUSART1RXBuffer+276
0x6D00	0x00000000 ;?ICS_ucUSART1RXBuffer+280
0x6D04	0x00000000 ;?ICS_ucUSART1RXBuffer+284
0x6D08	0x00000000 ;?ICS_ucUSART1RXBuffer+288
0x6D0C	0x00000000 ;?ICS_ucUSART1RXBuffer+292
0x6D10	0x00000000 ;?ICS_ucUSART1RXBuffer+296
0x6D14	0x00000000 ;?ICS_ucUSART1RXBuffer+300
0x6D18	0x00000000 ;?ICS_ucUSART1RXBuffer+304
0x6D1C	0x00000000 ;?ICS_ucUSART1RXBuffer+308
0x6D20	0x00000000 ;?ICS_ucUSART1RXBuffer+312
0x6D24	0x00000000 ;?ICS_ucUSART1RXBuffer+316
0x6D28	0x00000000 ;?ICS_ucUSART1RXBuffer+320
0x6D2C	0x00000000 ;?ICS_ucUSART1RXBuffer+324
0x6D30	0x00000000 ;?ICS_ucUSART1RXBuffer+328
0x6D34	0x00000000 ;?ICS_ucUSART1RXBuffer+332
0x6D38	0x00000000 ;?ICS_ucUSART1RXBuffer+336
0x6D3C	0x00000000 ;?ICS_ucUSART1RXBuffer+340
0x6D40	0x00000000 ;?ICS_ucUSART1RXBuffer+344
0x6D44	0x00000000 ;?ICS_ucUSART1RXBuffer+348
0x6D48	0x00000000 ;?ICS_ucUSART1RXBuffer+352
0x6D4C	0x00000000 ;?ICS_ucUSART1RXBuffer+356
0x6D50	0x00000000 ;?ICS_ucUSART1RXBuffer+360
0x6D54	0x00000000 ;?ICS_ucUSART1RXBuffer+364
0x6D58	0x00000000 ;?ICS_ucUSART1RXBuffer+368
0x6D5C	0x00000000 ;?ICS_ucUSART1RXBuffer+372
0x6D60	0x00000000 ;?ICS_ucUSART1RXBuffer+376
0x6D64	0x00000000 ;?ICS_ucUSART1RXBuffer+380
0x6D68	0x00000000 ;?ICS_ucUSART1RXBuffer+384
0x6D6C	0x00000000 ;?ICS_ucUSART1RXBuffer+388
0x6D70	0x00000000 ;?ICS_ucUSART1RXBuffer+392
0x6D74	0x00000000 ;?ICS_ucUSART1RXBuffer+396
0x6D78	0x00000000 ;?ICS_ucUSART1RXBuffer+400
0x6D7C	0x00000000 ;?ICS_ucUSART1RXBuffer+404
0x6D80	0x00000000 ;?ICS_ucUSART1RXBuffer+408
0x6D84	0x00000000 ;?ICS_ucUSART1RXBuffer+412
0x6D88	0x00000000 ;?ICS_ucUSART1RXBuffer+416
0x6D8C	0x00000000 ;?ICS_ucUSART1RXBuffer+420
0x6D90	0x00000000 ;?ICS_ucUSART1RXBuffer+424
0x6D94	0x00000000 ;?ICS_ucUSART1RXBuffer+428
0x6D98	0x00000000 ;?ICS_ucUSART1RXBuffer+432
0x6D9C	0x00000000 ;?ICS_ucUSART1RXBuffer+436
0x6DA0	0x00000000 ;?ICS_ucUSART1RXBuffer+440
0x6DA4	0x00000000 ;?ICS_ucUSART1RXBuffer+444
0x6DA8	0x00000000 ;?ICS_ucUSART1RXBuffer+448
0x6DAC	0x00000000 ;?ICS_ucUSART1RXBuffer+452
0x6DB0	0x00000000 ;?ICS_ucUSART1RXBuffer+456
0x6DB4	0x00000000 ;?ICS_ucUSART1RXBuffer+460
0x6DB8	0x00000000 ;?ICS_ucUSART1RXBuffer+464
0x6DBC	0x00000000 ;?ICS_ucUSART1RXBuffer+468
0x6DC0	0x00000000 ;?ICS_ucUSART1RXBuffer+472
0x6DC4	0x00000000 ;?ICS_ucUSART1RXBuffer+476
0x6DC8	0x00000000 ;?ICS_ucUSART1RXBuffer+480
0x6DCC	0x00000000 ;?ICS_ucUSART1RXBuffer+484
0x6DD0	0x00000000 ;?ICS_ucUSART1RXBuffer+488
0x6DD4	0x00000000 ;?ICS_ucUSART1RXBuffer+492
0x6DD8	0x00000000 ;?ICS_ucUSART1RXBuffer+496
0x6DDC	0x00000000 ;?ICS_ucUSART1RXBuffer+500
0x6DE0	0x00000000 ;?ICS_ucUSART1RXBuffer+504
0x6DE4	0x00000000 ;?ICS_ucUSART1RXBuffer+508
0x6DE8	0x00000000 ;?ICS_ucUSART1RXBuffer+512
0x6DEC	0x00000000 ;?ICS_ucUSART1RXBuffer+516
0x6DF0	0x00000000 ;?ICS_ucUSART1RXBuffer+520
0x6DF4	0x00000000 ;?ICS_ucUSART1RXBuffer+524
0x6DF8	0x00000000 ;?ICS_ucUSART1RXBuffer+528
0x6DFC	0x00000000 ;?ICS_ucUSART1RXBuffer+532
0x6E00	0x00000000 ;?ICS_ucUSART1RXBuffer+536
0x6E04	0x00000000 ;?ICS_ucUSART1RXBuffer+540
0x6E08	0x00000000 ;?ICS_ucUSART1RXBuffer+544
0x6E0C	0x00000000 ;?ICS_ucUSART1RXBuffer+548
0x6E10	0x00000000 ;?ICS_ucUSART1RXBuffer+552
0x6E14	0x00000000 ;?ICS_ucUSART1RXBuffer+556
0x6E18	0x00000000 ;?ICS_ucUSART1RXBuffer+560
0x6E1C	0x00000000 ;?ICS_ucUSART1RXBuffer+564
0x6E20	0x00000000 ;?ICS_ucUSART1RXBuffer+568
0x6E24	0x00000000 ;?ICS_ucUSART1RXBuffer+572
0x6E28	0x00000000 ;?ICS_ucUSART1RXBuffer+576
0x6E2C	0x00000000 ;?ICS_ucUSART1RXBuffer+580
0x6E30	0x00000000 ;?ICS_ucUSART1RXBuffer+584
0x6E34	0x00000000 ;?ICS_ucUSART1RXBuffer+588
0x6E38	0x00000000 ;?ICS_ucUSART1RXBuffer+592
0x6E3C	0x00000000 ;?ICS_ucUSART1RXBuffer+596
0x6E40	0x00000000 ;?ICS_ucUSART1RXBuffer+600
0x6E44	0x00000000 ;?ICS_ucUSART1RXBuffer+604
0x6E48	0x00000000 ;?ICS_ucUSART1RXBuffer+608
0x6E4C	0x00000000 ;?ICS_ucUSART1RXBuffer+612
0x6E50	0x00000000 ;?ICS_ucUSART1RXBuffer+616
0x6E54	0x00000000 ;?ICS_ucUSART1RXBuffer+620
0x6E58	0x00000000 ;?ICS_ucUSART1RXBuffer+624
0x6E5C	0x00000000 ;?ICS_ucUSART1RXBuffer+628
0x6E60	0x00000000 ;?ICS_ucUSART1RXBuffer+632
0x6E64	0x00000000 ;?ICS_ucUSART1RXBuffer+636
0x6E68	0x00000000 ;?ICS_ucUSART1RXBuffer+640
0x6E6C	0x00000000 ;?ICS_ucUSART1RXBuffer+644
0x6E70	0x00000000 ;?ICS_ucUSART1RXBuffer+648
0x6E74	0x00000000 ;?ICS_ucUSART1RXBuffer+652
0x6E78	0x00000000 ;?ICS_ucUSART1RXBuffer+656
0x6E7C	0x00000000 ;?ICS_ucUSART1RXBuffer+660
0x6E80	0x00000000 ;?ICS_ucUSART1RXBuffer+664
0x6E84	0x00000000 ;?ICS_ucUSART1RXBuffer+668
0x6E88	0x00000000 ;?ICS_ucUSART1RXBuffer+672
0x6E8C	0x00000000 ;?ICS_ucUSART1RXBuffer+676
0x6E90	0x00000000 ;?ICS_ucUSART1RXBuffer+680
0x6E94	0x00000000 ;?ICS_ucUSART1RXBuffer+684
0x6E98	0x00000000 ;?ICS_ucUSART1RXBuffer+688
0x6E9C	0x00000000 ;?ICS_ucUSART1RXBuffer+692
0x6EA0	0x00000000 ;?ICS_ucUSART1RXBuffer+696
0x6EA4	0x00000000 ;?ICS_ucUSART1RXBuffer+700
0x6EA8	0x00000000 ;?ICS_ucUSART1RXBuffer+704
0x6EAC	0x00000000 ;?ICS_ucUSART1RXBuffer+708
0x6EB0	0x00000000 ;?ICS_ucUSART1RXBuffer+712
0x6EB4	0x00000000 ;?ICS_ucUSART1RXBuffer+716
0x6EB8	0x00000000 ;?ICS_ucUSART1RXBuffer+720
0x6EBC	0x00000000 ;?ICS_ucUSART1RXBuffer+724
0x6EC0	0x00000000 ;?ICS_ucUSART1RXBuffer+728
0x6EC4	0x00000000 ;?ICS_ucUSART1RXBuffer+732
0x6EC8	0x00000000 ;?ICS_ucUSART1RXBuffer+736
0x6ECC	0x00000000 ;?ICS_ucUSART1RXBuffer+740
0x6ED0	0x00000000 ;?ICS_ucUSART1RXBuffer+744
0x6ED4	0x00000000 ;?ICS_ucUSART1RXBuffer+748
0x6ED8	0x00000000 ;?ICS_ucUSART1RXBuffer+752
0x6EDC	0x00000000 ;?ICS_ucUSART1RXBuffer+756
0x6EE0	0x00000000 ;?ICS_ucUSART1RXBuffer+760
0x6EE4	0x00000000 ;?ICS_ucUSART1RXBuffer+764
0x6EE8	0x00000000 ;?ICS_ucUSART1RXBuffer+768
0x6EEC	0x00000000 ;?ICS_ucUSART1RXBuffer+772
0x6EF0	0x00000000 ;?ICS_ucUSART1RXBuffer+776
0x6EF4	0x00000000 ;?ICS_ucUSART1RXBuffer+780
0x6EF8	0x00000000 ;?ICS_ucUSART1RXBuffer+784
0x6EFC	0x00000000 ;?ICS_ucUSART1RXBuffer+788
0x6F00	0x00000000 ;?ICS_ucUSART1RXBuffer+792
0x6F04	0x00000000 ;?ICS_ucUSART1RXBuffer+796
0x6F08	0x00000000 ;?ICS_ucUSART1RXBuffer+800
0x6F0C	0x00000000 ;?ICS_ucUSART1RXBuffer+804
0x6F10	0x00000000 ;?ICS_ucUSART1RXBuffer+808
0x6F14	0x00000000 ;?ICS_ucUSART1RXBuffer+812
0x6F18	0x00000000 ;?ICS_ucUSART1RXBuffer+816
0x6F1C	0x00000000 ;?ICS_ucUSART1RXBuffer+820
0x6F20	0x00000000 ;?ICS_ucUSART1RXBuffer+824
0x6F24	0x00000000 ;?ICS_ucUSART1RXBuffer+828
0x6F28	0x00000000 ;?ICS_ucUSART1RXBuffer+832
0x6F2C	0x00000000 ;?ICS_ucUSART1RXBuffer+836
0x6F30	0x00000000 ;?ICS_ucUSART1RXBuffer+840
0x6F34	0x00000000 ;?ICS_ucUSART1RXBuffer+844
0x6F38	0x00000000 ;?ICS_ucUSART1RXBuffer+848
0x6F3C	0x00000000 ;?ICS_ucUSART1RXBuffer+852
0x6F40	0x00000000 ;?ICS_ucUSART1RXBuffer+856
0x6F44	0x00000000 ;?ICS_ucUSART1RXBuffer+860
0x6F48	0x00000000 ;?ICS_ucUSART1RXBuffer+864
0x6F4C	0x00000000 ;?ICS_ucUSART1RXBuffer+868
0x6F50	0x00000000 ;?ICS_ucUSART1RXBuffer+872
0x6F54	0x00000000 ;?ICS_ucUSART1RXBuffer+876
0x6F58	0x00000000 ;?ICS_ucUSART1RXBuffer+880
0x6F5C	0x00000000 ;?ICS_ucUSART1RXBuffer+884
0x6F60	0x00000000 ;?ICS_ucUSART1RXBuffer+888
0x6F64	0x00000000 ;?ICS_ucUSART1RXBuffer+892
0x6F68	0x00000000 ;?ICS_ucUSART1RXBuffer+896
0x6F6C	0x00000000 ;?ICS_ucUSART1RXBuffer+900
0x6F70	0x00000000 ;?ICS_ucUSART1RXBuffer+904
0x6F74	0x00000000 ;?ICS_ucUSART1RXBuffer+908
0x6F78	0x00000000 ;?ICS_ucUSART1RXBuffer+912
0x6F7C	0x00000000 ;?ICS_ucUSART1RXBuffer+916
0x6F80	0x00000000 ;?ICS_ucUSART1RXBuffer+920
0x6F84	0x00000000 ;?ICS_ucUSART1RXBuffer+924
0x6F88	0x00000000 ;?ICS_ucUSART1RXBuffer+928
0x6F8C	0x00000000 ;?ICS_ucUSART1RXBuffer+932
0x6F90	0x00000000 ;?ICS_ucUSART1RXBuffer+936
0x6F94	0x00000000 ;?ICS_ucUSART1RXBuffer+940
0x6F98	0x00000000 ;?ICS_ucUSART1RXBuffer+944
0x6F9C	0x00000000 ;?ICS_ucUSART1RXBuffer+948
0x6FA0	0x00000000 ;?ICS_ucUSART1RXBuffer+952
0x6FA4	0x00000000 ;?ICS_ucUSART1RXBuffer+956
0x6FA8	0x00000000 ;?ICS_ucUSART1RXBuffer+960
0x6FAC	0x00000000 ;?ICS_ucUSART1RXBuffer+964
0x6FB0	0x00000000 ;?ICS_ucUSART1RXBuffer+968
0x6FB4	0x00000000 ;?ICS_ucUSART1RXBuffer+972
0x6FB8	0x00000000 ;?ICS_ucUSART1RXBuffer+976
0x6FBC	0x00000000 ;?ICS_ucUSART1RXBuffer+980
0x6FC0	0x00000000 ;?ICS_ucUSART1RXBuffer+984
0x6FC4	0x00000000 ;?ICS_ucUSART1RXBuffer+988
0x6FC8	0x00000000 ;?ICS_ucUSART1RXBuffer+992
0x6FCC	0x00000000 ;?ICS_ucUSART1RXBuffer+996
0x6FD0	0x00000000 ;?ICS_ucUSART1RXBuffer+1000
0x6FD4	0x00000000 ;?ICS_ucUSART1RXBuffer+1004
0x6FD8	0x00000000 ;?ICS_ucUSART1RXBuffer+1008
0x6FDC	0x00000000 ;?ICS_ucUSART1RXBuffer+1012
0x6FE0	0x00000000 ;?ICS_ucUSART1RXBuffer+1016
0x6FE4	0x00000000 ;?ICS_ucUSART1RXBuffer+1020
0x6FE8	0x00000000 ;?ICS_ucUSART1RXBuffer+1024
0x6FEC	0x00000000 ;?ICS_ucUSART1RXBuffer+1028
0x6FF0	0x00000000 ;?ICS_ucUSART1RXBuffer+1032
0x6FF4	0x00000000 ;?ICS_ucUSART1RXBuffer+1036
0x6FF8	0x00000000 ;?ICS_ucUSART1RXBuffer+1040
0x6FFC	0x00000000 ;?ICS_ucUSART1RXBuffer+1044
0x7000	0x00000000 ;?ICS_ucUSART1RXBuffer+1048
0x7004	0x00000000 ;?ICS_ucUSART1RXBuffer+1052
0x7008	0x00000000 ;?ICS_ucUSART1RXBuffer+1056
0x700C	0x00000000 ;?ICS_ucUSART1RXBuffer+1060
0x7010	0x00000000 ;?ICS_ucUSART1RXBuffer+1064
0x7014	0x00000000 ;?ICS_ucUSART1RXBuffer+1068
0x7018	0x00000000 ;?ICS_ucUSART1RXBuffer+1072
0x701C	0x00000000 ;?ICS_ucUSART1RXBuffer+1076
0x7020	0x00000000 ;?ICS_ucUSART1RXBuffer+1080
0x7024	0x00000000 ;?ICS_ucUSART1RXBuffer+1084
0x7028	0x00000000 ;?ICS_ucUSART1RXBuffer+1088
0x702C	0x00000000 ;?ICS_ucUSART1RXBuffer+1092
0x7030	0x00000000 ;?ICS_ucUSART1RXBuffer+1096
0x7034	0x00000000 ;?ICS_ucUSART1RXBuffer+1100
0x7038	0x00000000 ;?ICS_ucUSART1RXBuffer+1104
0x703C	0x00000000 ;?ICS_ucUSART1RXBuffer+1108
0x7040	0x00000000 ;?ICS_ucUSART1RXBuffer+1112
0x7044	0x00000000 ;?ICS_ucUSART1RXBuffer+1116
0x7048	0x00000000 ;?ICS_ucUSART1RXBuffer+1120
0x704C	0x00000000 ;?ICS_ucUSART1RXBuffer+1124
0x7050	0x00000000 ;?ICS_ucUSART1RXBuffer+1128
0x7054	0x00000000 ;?ICS_ucUSART1RXBuffer+1132
0x7058	0x00000000 ;?ICS_ucUSART1RXBuffer+1136
0x705C	0x00000000 ;?ICS_ucUSART1RXBuffer+1140
0x7060	0x00000000 ;?ICS_ucUSART1RXBuffer+1144
0x7064	0x00000000 ;?ICS_ucUSART1RXBuffer+1148
0x7068	0x00000000 ;?ICS_ucUSART1RXBuffer+1152
0x706C	0x00000000 ;?ICS_ucUSART1RXBuffer+1156
0x7070	0x00000000 ;?ICS_ucUSART1RXBuffer+1160
0x7074	0x00000000 ;?ICS_ucUSART1RXBuffer+1164
0x7078	0x00000000 ;?ICS_ucUSART1RXBuffer+1168
0x707C	0x00000000 ;?ICS_ucUSART1RXBuffer+1172
0x7080	0x00000000 ;?ICS_ucUSART1RXBuffer+1176
0x7084	0x00000000 ;?ICS_ucUSART1RXBuffer+1180
0x7088	0x00000000 ;?ICS_ucUSART1RXBuffer+1184
0x708C	0x00000000 ;?ICS_ucUSART1RXBuffer+1188
0x7090	0x00000000 ;?ICS_ucUSART1RXBuffer+1192
0x7094	0x00000000 ;?ICS_ucUSART1RXBuffer+1196
0x7098	0x00000000 ;?ICS_ucUSART1RXBuffer+1200
0x709C	0x00000000 ;?ICS_ucUSART1RXBuffer+1204
0x70A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1208
0x70A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1212
0x70A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1216
0x70AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1220
0x70B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1224
0x70B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1228
0x70B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1232
0x70BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1236
0x70C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1240
0x70C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1244
0x70C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1248
0x70CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1252
0x70D0	0x00000000 ;?ICS_ucUSART1RXBuffer+1256
0x70D4	0x00000000 ;?ICS_ucUSART1RXBuffer+1260
0x70D8	0x00000000 ;?ICS_ucUSART1RXBuffer+1264
0x70DC	0x00000000 ;?ICS_ucUSART1RXBuffer+1268
0x70E0	0x00000000 ;?ICS_ucUSART1RXBuffer+1272
0x70E4	0x00000000 ;?ICS_ucUSART1RXBuffer+1276
0x70E8	0x00000000 ;?ICS_ucUSART1RXBuffer+1280
0x70EC	0x00000000 ;?ICS_ucUSART1RXBuffer+1284
0x70F0	0x00000000 ;?ICS_ucUSART1RXBuffer+1288
0x70F4	0x00000000 ;?ICS_ucUSART1RXBuffer+1292
0x70F8	0x00000000 ;?ICS_ucUSART1RXBuffer+1296
0x70FC	0x00000000 ;?ICS_ucUSART1RXBuffer+1300
0x7100	0x00000000 ;?ICS_ucUSART1RXBuffer+1304
0x7104	0x00000000 ;?ICS_ucUSART1RXBuffer+1308
0x7108	0x00000000 ;?ICS_ucUSART1RXBuffer+1312
0x710C	0x00000000 ;?ICS_ucUSART1RXBuffer+1316
0x7110	0x00000000 ;?ICS_ucUSART1RXBuffer+1320
0x7114	0x00000000 ;?ICS_ucUSART1RXBuffer+1324
0x7118	0x00000000 ;?ICS_ucUSART1RXBuffer+1328
0x711C	0x00000000 ;?ICS_ucUSART1RXBuffer+1332
0x7120	0x00000000 ;?ICS_ucUSART1RXBuffer+1336
0x7124	0x00000000 ;?ICS_ucUSART1RXBuffer+1340
0x7128	0x00000000 ;?ICS_ucUSART1RXBuffer+1344
0x712C	0x00000000 ;?ICS_ucUSART1RXBuffer+1348
0x7130	0x00000000 ;?ICS_ucUSART1RXBuffer+1352
0x7134	0x00000000 ;?ICS_ucUSART1RXBuffer+1356
0x7138	0x00000000 ;?ICS_ucUSART1RXBuffer+1360
0x713C	0x00000000 ;?ICS_ucUSART1RXBuffer+1364
0x7140	0x00000000 ;?ICS_ucUSART1RXBuffer+1368
0x7144	0x00000000 ;?ICS_ucUSART1RXBuffer+1372
0x7148	0x00000000 ;?ICS_ucUSART1RXBuffer+1376
0x714C	0x00000000 ;?ICS_ucUSART1RXBuffer+1380
0x7150	0x00000000 ;?ICS_ucUSART1RXBuffer+1384
0x7154	0x00000000 ;?ICS_ucUSART1RXBuffer+1388
0x7158	0x00000000 ;?ICS_ucUSART1RXBuffer+1392
0x715C	0x00000000 ;?ICS_ucUSART1RXBuffer+1396
0x7160	0x00000000 ;?ICS_ucUSART1RXBuffer+1400
0x7164	0x00000000 ;?ICS_ucUSART1RXBuffer+1404
0x7168	0x00000000 ;?ICS_ucUSART1RXBuffer+1408
0x716C	0x00000000 ;?ICS_ucUSART1RXBuffer+1412
0x7170	0x00000000 ;?ICS_ucUSART1RXBuffer+1416
0x7174	0x00000000 ;?ICS_ucUSART1RXBuffer+1420
0x7178	0x00000000 ;?ICS_ucUSART1RXBuffer+1424
0x717C	0x00000000 ;?ICS_ucUSART1RXBuffer+1428
0x7180	0x00000000 ;?ICS_ucUSART1RXBuffer+1432
0x7184	0x00000000 ;?ICS_ucUSART1RXBuffer+1436
0x7188	0x00000000 ;?ICS_ucUSART1RXBuffer+1440
0x718C	0x00000000 ;?ICS_ucUSART1RXBuffer+1444
0x7190	0x00000000 ;?ICS_ucUSART1RXBuffer+1448
0x7194	0x00000000 ;?ICS_ucUSART1RXBuffer+1452
0x7198	0x00000000 ;?ICS_ucUSART1RXBuffer+1456
0x719C	0x00000000 ;?ICS_ucUSART1RXBuffer+1460
0x71A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1464
0x71A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1468
0x71A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1472
0x71AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1476
0x71B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1480
0x71B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1484
0x71B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1488
0x71BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1492
0x71C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1496
0x71C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1500
0x71C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1504
0x71CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1508
0x71D0	0x00000000 ;?ICS_ucUSART1RXBuffer+1512
0x71D4	0x00000000 ;?ICS_ucUSART1RXBuffer+1516
0x71D8	0x00000000 ;?ICS_ucUSART1RXBuffer+1520
0x71DC	0x00000000 ;?ICS_ucUSART1RXBuffer+1524
0x71E0	0x00000000 ;?ICS_ucUSART1RXBuffer+1528
0x71E4	0x00000000 ;?ICS_ucUSART1RXBuffer+1532
0x71E8	0x00000000 ;?ICS_ucUSART1RXBuffer+1536
0x71EC	0x00000000 ;?ICS_ucUSART1RXBuffer+1540
0x71F0	0x00000000 ;?ICS_ucUSART1RXBuffer+1544
0x71F4	0x00000000 ;?ICS_ucUSART1RXBuffer+1548
0x71F8	0x00000000 ;?ICS_ucUSART1RXBuffer+1552
0x71FC	0x00000000 ;?ICS_ucUSART1RXBuffer+1556
0x7200	0x00000000 ;?ICS_ucUSART1RXBuffer+1560
0x7204	0x00000000 ;?ICS_ucUSART1RXBuffer+1564
0x7208	0x00000000 ;?ICS_ucUSART1RXBuffer+1568
0x720C	0x00000000 ;?ICS_ucUSART1RXBuffer+1572
0x7210	0x00000000 ;?ICS_ucUSART1RXBuffer+1576
0x7214	0x00000000 ;?ICS_ucUSART1RXBuffer+1580
0x7218	0x00000000 ;?ICS_ucUSART1RXBuffer+1584
0x721C	0x00000000 ;?ICS_ucUSART1RXBuffer+1588
0x7220	0x00000000 ;?ICS_ucUSART1RXBuffer+1592
0x7224	0x00000000 ;?ICS_ucUSART1RXBuffer+1596
0x7228	0x00000000 ;?ICS_ucUSART1RXBuffer+1600
0x722C	0x00000000 ;?ICS_ucUSART1RXBuffer+1604
0x7230	0x00000000 ;?ICS_ucUSART1RXBuffer+1608
0x7234	0x00000000 ;?ICS_ucUSART1RXBuffer+1612
0x7238	0x00000000 ;?ICS_ucUSART1RXBuffer+1616
0x723C	0x00000000 ;?ICS_ucUSART1RXBuffer+1620
0x7240	0x00000000 ;?ICS_ucUSART1RXBuffer+1624
0x7244	0x00000000 ;?ICS_ucUSART1RXBuffer+1628
0x7248	0x00000000 ;?ICS_ucUSART1RXBuffer+1632
0x724C	0x00000000 ;?ICS_ucUSART1RXBuffer+1636
0x7250	0x00000000 ;?ICS_ucUSART1RXBuffer+1640
0x7254	0x00000000 ;?ICS_ucUSART1RXBuffer+1644
0x7258	0x00000000 ;?ICS_ucUSART1RXBuffer+1648
0x725C	0x00000000 ;?ICS_ucUSART1RXBuffer+1652
0x7260	0x00000000 ;?ICS_ucUSART1RXBuffer+1656
0x7264	0x00000000 ;?ICS_ucUSART1RXBuffer+1660
0x7268	0x00000000 ;?ICS_ucUSART1RXBuffer+1664
0x726C	0x00000000 ;?ICS_ucUSART1RXBuffer+1668
0x7270	0x00000000 ;?ICS_ucUSART1RXBuffer+1672
0x7274	0x00000000 ;?ICS_ucUSART1RXBuffer+1676
0x7278	0x00000000 ;?ICS_ucUSART1RXBuffer+1680
0x727C	0x00000000 ;?ICS_ucUSART1RXBuffer+1684
0x7280	0x00000000 ;?ICS_ucUSART1RXBuffer+1688
0x7284	0x00000000 ;?ICS_ucUSART1RXBuffer+1692
0x7288	0x00000000 ;?ICS_ucUSART1RXBuffer+1696
0x728C	0x00000000 ;?ICS_ucUSART1RXBuffer+1700
0x7290	0x00000000 ;?ICS_ucUSART1RXBuffer+1704
0x7294	0x00000000 ;?ICS_ucUSART1RXBuffer+1708
0x7298	0x00000000 ;?ICS_ucUSART1RXBuffer+1712
0x729C	0x00000000 ;?ICS_ucUSART1RXBuffer+1716
0x72A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1720
0x72A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1724
0x72A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1728
0x72AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1732
0x72B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1736
0x72B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1740
0x72B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1744
0x72BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1748
0x72C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1752
0x72C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1756
0x72C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1760
0x72CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1764
0x72D0	0x00000000 ;?ICS_ucUSART1RXBuffer+1768
0x72D4	0x00000000 ;?ICS_ucUSART1RXBuffer+1772
0x72D8	0x00000000 ;?ICS_ucUSART1RXBuffer+1776
0x72DC	0x00000000 ;?ICS_ucUSART1RXBuffer+1780
0x72E0	0x00000000 ;?ICS_ucUSART1RXBuffer+1784
0x72E4	0x00000000 ;?ICS_ucUSART1RXBuffer+1788
0x72E8	0x00000000 ;?ICS_ucUSART1RXBuffer+1792
0x72EC	0x00000000 ;?ICS_ucUSART1RXBuffer+1796
0x72F0	0x00000000 ;?ICS_ucUSART1RXBuffer+1800
0x72F4	0x00000000 ;?ICS_ucUSART1RXBuffer+1804
0x72F8	0x00000000 ;?ICS_ucUSART1RXBuffer+1808
0x72FC	0x00000000 ;?ICS_ucUSART1RXBuffer+1812
0x7300	0x00000000 ;?ICS_ucUSART1RXBuffer+1816
0x7304	0x00000000 ;?ICS_ucUSART1RXBuffer+1820
0x7308	0x00000000 ;?ICS_ucUSART1RXBuffer+1824
0x730C	0x00000000 ;?ICS_ucUSART1RXBuffer+1828
0x7310	0x00000000 ;?ICS_ucUSART1RXBuffer+1832
0x7314	0x00000000 ;?ICS_ucUSART1RXBuffer+1836
0x7318	0x00000000 ;?ICS_ucUSART1RXBuffer+1840
0x731C	0x00000000 ;?ICS_ucUSART1RXBuffer+1844
0x7320	0x00000000 ;?ICS_ucUSART1RXBuffer+1848
0x7324	0x00000000 ;?ICS_ucUSART1RXBuffer+1852
0x7328	0x00000000 ;?ICS_ucUSART1RXBuffer+1856
0x732C	0x00000000 ;?ICS_ucUSART1RXBuffer+1860
0x7330	0x00000000 ;?ICS_ucUSART1RXBuffer+1864
0x7334	0x00000000 ;?ICS_ucUSART1RXBuffer+1868
0x7338	0x00000000 ;?ICS_ucUSART1RXBuffer+1872
0x733C	0x00000000 ;?ICS_ucUSART1RXBuffer+1876
0x7340	0x00000000 ;?ICS_ucUSART1RXBuffer+1880
0x7344	0x00000000 ;?ICS_ucUSART1RXBuffer+1884
0x7348	0x00000000 ;?ICS_ucUSART1RXBuffer+1888
0x734C	0x00000000 ;?ICS_ucUSART1RXBuffer+1892
0x7350	0x00000000 ;?ICS_ucUSART1RXBuffer+1896
0x7354	0x00000000 ;?ICS_ucUSART1RXBuffer+1900
0x7358	0x00000000 ;?ICS_ucUSART1RXBuffer+1904
0x735C	0x00000000 ;?ICS_ucUSART1RXBuffer+1908
0x7360	0x00000000 ;?ICS_ucUSART1RXBuffer+1912
0x7364	0x00000000 ;?ICS_ucUSART1RXBuffer+1916
0x7368	0x00000000 ;?ICS_ucUSART1RXBuffer+1920
0x736C	0x00000000 ;?ICS_ucUSART1RXBuffer+1924
0x7370	0x00000000 ;?ICS_ucUSART1RXBuffer+1928
0x7374	0x00000000 ;?ICS_ucUSART1RXBuffer+1932
0x7378	0x00000000 ;?ICS_ucUSART1RXBuffer+1936
0x737C	0x00000000 ;?ICS_ucUSART1RXBuffer+1940
0x7380	0x00000000 ;?ICS_ucUSART1RXBuffer+1944
0x7384	0x00000000 ;?ICS_ucUSART1RXBuffer+1948
0x7388	0x00000000 ;?ICS_ucUSART1RXBuffer+1952
0x738C	0x00000000 ;?ICS_ucUSART1RXBuffer+1956
0x7390	0x00000000 ;?ICS_ucUSART1RXBuffer+1960
0x7394	0x00000000 ;?ICS_ucUSART1RXBuffer+1964
0x7398	0x00000000 ;?ICS_ucUSART1RXBuffer+1968
0x739C	0x00000000 ;?ICS_ucUSART1RXBuffer+1972
0x73A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1976
0x73A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1980
0x73A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1984
0x73AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1988
0x73B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1992
0x73B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1996
0x73B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2000
0x73BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2004
0x73C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2008
0x73C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2012
0x73C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2016
0x73CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2020
0x73D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2024
0x73D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2028
0x73D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2032
0x73DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2036
0x73E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2040
0x73E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2044
0x73E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2048
0x73EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2052
0x73F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2056
0x73F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2060
0x73F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2064
0x73FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2068
0x7400	0x00000000 ;?ICS_ucUSART1RXBuffer+2072
0x7404	0x00000000 ;?ICS_ucUSART1RXBuffer+2076
0x7408	0x00000000 ;?ICS_ucUSART1RXBuffer+2080
0x740C	0x00000000 ;?ICS_ucUSART1RXBuffer+2084
0x7410	0x00000000 ;?ICS_ucUSART1RXBuffer+2088
0x7414	0x00000000 ;?ICS_ucUSART1RXBuffer+2092
0x7418	0x00000000 ;?ICS_ucUSART1RXBuffer+2096
0x741C	0x00000000 ;?ICS_ucUSART1RXBuffer+2100
0x7420	0x00000000 ;?ICS_ucUSART1RXBuffer+2104
0x7424	0x00000000 ;?ICS_ucUSART1RXBuffer+2108
0x7428	0x00000000 ;?ICS_ucUSART1RXBuffer+2112
0x742C	0x00000000 ;?ICS_ucUSART1RXBuffer+2116
0x7430	0x00000000 ;?ICS_ucUSART1RXBuffer+2120
0x7434	0x00000000 ;?ICS_ucUSART1RXBuffer+2124
0x7438	0x00000000 ;?ICS_ucUSART1RXBuffer+2128
0x743C	0x00000000 ;?ICS_ucUSART1RXBuffer+2132
0x7440	0x00000000 ;?ICS_ucUSART1RXBuffer+2136
0x7444	0x00000000 ;?ICS_ucUSART1RXBuffer+2140
0x7448	0x00000000 ;?ICS_ucUSART1RXBuffer+2144
0x744C	0x00000000 ;?ICS_ucUSART1RXBuffer+2148
0x7450	0x00000000 ;?ICS_ucUSART1RXBuffer+2152
0x7454	0x00000000 ;?ICS_ucUSART1RXBuffer+2156
0x7458	0x00000000 ;?ICS_ucUSART1RXBuffer+2160
0x745C	0x00000000 ;?ICS_ucUSART1RXBuffer+2164
0x7460	0x00000000 ;?ICS_ucUSART1RXBuffer+2168
0x7464	0x00000000 ;?ICS_ucUSART1RXBuffer+2172
0x7468	0x00000000 ;?ICS_ucUSART1RXBuffer+2176
0x746C	0x00000000 ;?ICS_ucUSART1RXBuffer+2180
0x7470	0x00000000 ;?ICS_ucUSART1RXBuffer+2184
0x7474	0x00000000 ;?ICS_ucUSART1RXBuffer+2188
0x7478	0x00000000 ;?ICS_ucUSART1RXBuffer+2192
0x747C	0x00000000 ;?ICS_ucUSART1RXBuffer+2196
0x7480	0x00000000 ;?ICS_ucUSART1RXBuffer+2200
0x7484	0x00000000 ;?ICS_ucUSART1RXBuffer+2204
0x7488	0x00000000 ;?ICS_ucUSART1RXBuffer+2208
0x748C	0x00000000 ;?ICS_ucUSART1RXBuffer+2212
0x7490	0x00000000 ;?ICS_ucUSART1RXBuffer+2216
0x7494	0x00000000 ;?ICS_ucUSART1RXBuffer+2220
0x7498	0x00000000 ;?ICS_ucUSART1RXBuffer+2224
0x749C	0x00000000 ;?ICS_ucUSART1RXBuffer+2228
0x74A0	0x00000000 ;?ICS_ucUSART1RXBuffer+2232
0x74A4	0x00000000 ;?ICS_ucUSART1RXBuffer+2236
0x74A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2240
0x74AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2244
0x74B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2248
0x74B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2252
0x74B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2256
0x74BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2260
0x74C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2264
0x74C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2268
0x74C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2272
0x74CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2276
0x74D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2280
0x74D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2284
0x74D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2288
0x74DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2292
0x74E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2296
0x74E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2300
0x74E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2304
0x74EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2308
0x74F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2312
0x74F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2316
0x74F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2320
0x74FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2324
0x7500	0x00000000 ;?ICS_ucUSART1RXBuffer+2328
0x7504	0x00000000 ;?ICS_ucUSART1RXBuffer+2332
0x7508	0x00000000 ;?ICS_ucUSART1RXBuffer+2336
0x750C	0x00000000 ;?ICS_ucUSART1RXBuffer+2340
0x7510	0x00000000 ;?ICS_ucUSART1RXBuffer+2344
0x7514	0x00000000 ;?ICS_ucUSART1RXBuffer+2348
0x7518	0x00000000 ;?ICS_ucUSART1RXBuffer+2352
0x751C	0x00000000 ;?ICS_ucUSART1RXBuffer+2356
0x7520	0x00000000 ;?ICS_ucUSART1RXBuffer+2360
0x7524	0x00000000 ;?ICS_ucUSART1RXBuffer+2364
0x7528	0x00000000 ;?ICS_ucUSART1RXBuffer+2368
0x752C	0x00000000 ;?ICS_ucUSART1RXBuffer+2372
0x7530	0x00000000 ;?ICS_ucUSART1RXBuffer+2376
0x7534	0x00000000 ;?ICS_ucUSART1RXBuffer+2380
0x7538	0x00000000 ;?ICS_ucUSART1RXBuffer+2384
0x753C	0x00000000 ;?ICS_ucUSART1RXBuffer+2388
0x7540	0x00000000 ;?ICS_ucUSART1RXBuffer+2392
0x7544	0x00000000 ;?ICS_ucUSART1RXBuffer+2396
0x7548	0x00000000 ;?ICS_ucUSART1RXBuffer+2400
0x754C	0x00000000 ;?ICS_ucUSART1RXBuffer+2404
0x7550	0x00000000 ;?ICS_ucUSART1RXBuffer+2408
0x7554	0x00000000 ;?ICS_ucUSART1RXBuffer+2412
0x7558	0x00000000 ;?ICS_ucUSART1RXBuffer+2416
0x755C	0x00000000 ;?ICS_ucUSART1RXBuffer+2420
0x7560	0x00000000 ;?ICS_ucUSART1RXBuffer+2424
0x7564	0x00000000 ;?ICS_ucUSART1RXBuffer+2428
0x7568	0x00000000 ;?ICS_ucUSART1RXBuffer+2432
0x756C	0x00000000 ;?ICS_ucUSART1RXBuffer+2436
0x7570	0x00000000 ;?ICS_ucUSART1RXBuffer+2440
0x7574	0x00000000 ;?ICS_ucUSART1RXBuffer+2444
0x7578	0x00000000 ;?ICS_ucUSART1RXBuffer+2448
0x757C	0x00000000 ;?ICS_ucUSART1RXBuffer+2452
0x7580	0x00000000 ;?ICS_ucUSART1RXBuffer+2456
0x7584	0x00000000 ;?ICS_ucUSART1RXBuffer+2460
0x7588	0x00000000 ;?ICS_ucUSART1RXBuffer+2464
0x758C	0x00000000 ;?ICS_ucUSART1RXBuffer+2468
0x7590	0x00000000 ;?ICS_ucUSART1RXBuffer+2472
0x7594	0x00000000 ;?ICS_ucUSART1RXBuffer+2476
0x7598	0x00000000 ;?ICS_ucUSART1RXBuffer+2480
0x759C	0x00000000 ;?ICS_ucUSART1RXBuffer+2484
0x75A0	0x00000000 ;?ICS_ucUSART1RXBuffer+2488
0x75A4	0x00000000 ;?ICS_ucUSART1RXBuffer+2492
0x75A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2496
0x75AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2500
0x75B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2504
0x75B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2508
0x75B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2512
0x75BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2516
0x75C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2520
0x75C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2524
0x75C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2528
0x75CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2532
0x75D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2536
0x75D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2540
0x75D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2544
0x75DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2548
0x75E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2552
0x75E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2556
0x75E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2560
0x75EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2564
0x75F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2568
0x75F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2572
0x75F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2576
0x75FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2580
0x7600	0x00000000 ;?ICS_ucUSART1RXBuffer+2584
0x7604	0x00000000 ;?ICS_ucUSART1RXBuffer+2588
0x7608	0x00000000 ;?ICS_ucUSART1RXBuffer+2592
0x760C	0x00000000 ;?ICS_ucUSART1RXBuffer+2596
0x7610	0x00000000 ;?ICS_ucUSART1RXBuffer+2600
0x7614	0x00000000 ;?ICS_ucUSART1RXBuffer+2604
0x7618	0x00000000 ;?ICS_ucUSART1RXBuffer+2608
0x761C	0x00000000 ;?ICS_ucUSART1RXBuffer+2612
0x7620	0x00000000 ;?ICS_ucUSART1RXBuffer+2616
0x7624	0x00000000 ;?ICS_ucUSART1RXBuffer+2620
0x7628	0x00000000 ;?ICS_ucUSART1RXBuffer+2624
0x762C	0x00000000 ;?ICS_ucUSART1RXBuffer+2628
0x7630	0x00000000 ;?ICS_ucUSART1RXBuffer+2632
0x7634	0x00000000 ;?ICS_ucUSART1RXBuffer+2636
0x7638	0x00000000 ;?ICS_ucUSART1RXBuffer+2640
0x763C	0x00000000 ;?ICS_ucUSART1RXBuffer+2644
0x7640	0x00000000 ;?ICS_ucUSART1RXBuffer+2648
0x7644	0x00000000 ;?ICS_ucUSART1RXBuffer+2652
0x7648	0x00000000 ;?ICS_ucUSART1RXBuffer+2656
0x764C	0x00000000 ;?ICS_ucUSART1RXBuffer+2660
0x7650	0x00000000 ;?ICS_ucUSART1RXBuffer+2664
0x7654	0x00000000 ;?ICS_ucUSART1RXBuffer+2668
0x7658	0x00000000 ;?ICS_ucUSART1RXBuffer+2672
0x765C	0x00000000 ;?ICS_ucUSART1RXBuffer+2676
0x7660	0x00000000 ;?ICS_ucUSART1RXBuffer+2680
0x7664	0x00000000 ;?ICS_ucUSART1RXBuffer+2684
0x7668	0x00000000 ;?ICS_ucUSART1RXBuffer+2688
0x766C	0x00000000 ;?ICS_ucUSART1RXBuffer+2692
0x7670	0x00000000 ;?ICS_ucUSART1RXBuffer+2696
0x7674	0x00000000 ;?ICS_ucUSART1RXBuffer+2700
0x7678	0x00000000 ;?ICS_ucUSART1RXBuffer+2704
0x767C	0x00000000 ;?ICS_ucUSART1RXBuffer+2708
0x7680	0x00000000 ;?ICS_ucUSART1RXBuffer+2712
0x7684	0x00000000 ;?ICS_ucUSART1RXBuffer+2716
0x7688	0x00000000 ;?ICS_ucUSART1RXBuffer+2720
0x768C	0x00000000 ;?ICS_ucUSART1RXBuffer+2724
0x7690	0x00000000 ;?ICS_ucUSART1RXBuffer+2728
0x7694	0x00000000 ;?ICS_ucUSART1RXBuffer+2732
0x7698	0x00000000 ;?ICS_ucUSART1RXBuffer+2736
0x769C	0x00000000 ;?ICS_ucUSART1RXBuffer+2740
0x76A0	0x00000000 ;?ICS_ucUSART1RXBuffer+2744
0x76A4	0x00000000 ;?ICS_ucUSART1RXBuffer+2748
0x76A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2752
0x76AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2756
0x76B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2760
0x76B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2764
0x76B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2768
0x76BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2772
0x76C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2776
0x76C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2780
0x76C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2784
0x76CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2788
0x76D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2792
0x76D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2796
0x76D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2800
0x76DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2804
0x76E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2808
0x76E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2812
0x76E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2816
0x76EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2820
0x76F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2824
0x76F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2828
0x76F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2832
0x76FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2836
0x7700	0x00000000 ;?ICS_ucUSART1RXBuffer+2840
0x7704	0x00000000 ;?ICS_ucUSART1RXBuffer+2844
0x7708	0x00000000 ;?ICS_ucUSART1RXBuffer+2848
0x770C	0x00000000 ;?ICS_ucUSART1RXBuffer+2852
0x7710	0x00000000 ;?ICS_ucUSART1RXBuffer+2856
0x7714	0x00000000 ;?ICS_ucUSART1RXBuffer+2860
0x7718	0x00000000 ;?ICS_ucUSART1RXBuffer+2864
0x771C	0x00000000 ;?ICS_ucUSART1RXBuffer+2868
0x7720	0x00000000 ;?ICS_ucUSART1RXBuffer+2872
0x7724	0x00000000 ;?ICS_ucUSART1RXBuffer+2876
0x7728	0x00000000 ;?ICS_ucUSART1RXBuffer+2880
0x772C	0x00000000 ;?ICS_ucUSART1RXBuffer+2884
0x7730	0x00000000 ;?ICS_ucUSART1RXBuffer+2888
0x7734	0x00000000 ;?ICS_ucUSART1RXBuffer+2892
0x7738	0x00000000 ;?ICS_ucUSART1RXBuffer+2896
0x773C	0x00000000 ;?ICS_ucUSART1RXBuffer+2900
0x7740	0x00000000 ;?ICS_ucUSART1RXBuffer+2904
0x7744	0x00000000 ;?ICS_ucUSART1RXBuffer+2908
0x7748	0x00000000 ;?ICS_ucUSART1RXBuffer+2912
0x774C	0x00000000 ;?ICS_ucUSART1RXBuffer+2916
0x7750	0x00000000 ;?ICS_ucUSART1RXBuffer+2920
0x7754	0x00000000 ;?ICS_ucUSART1RXBuffer+2924
0x7758	0x00000000 ;?ICS_ucUSART1RXBuffer+2928
0x775C	0x00000000 ;?ICS_ucUSART1RXBuffer+2932
0x7760	0x00000000 ;?ICS_ucUSART1RXBuffer+2936
0x7764	0x00000000 ;?ICS_ucUSART1RXBuffer+2940
0x7768	0x00000000 ;?ICS_ucUSART1RXBuffer+2944
0x776C	0x00000000 ;?ICS_ucUSART1RXBuffer+2948
0x7770	0x00000000 ;?ICS_ucUSART1RXBuffer+2952
0x7774	0x00000000 ;?ICS_ucUSART1RXBuffer+2956
0x7778	0x00000000 ;?ICS_ucUSART1RXBuffer+2960
0x777C	0x00000000 ;?ICS_ucUSART1RXBuffer+2964
0x7780	0x00000000 ;?ICS_ucUSART1RXBuffer+2968
0x7784	0x00000000 ;?ICS_ucUSART1RXBuffer+2972
0x7788	0x00000000 ;?ICS_ucUSART1RXBuffer+2976
0x778C	0x00000000 ;?ICS_ucUSART1RXBuffer+2980
0x7790	0x00000000 ;?ICS_ucUSART1RXBuffer+2984
0x7794	0x00000000 ;?ICS_ucUSART1RXBuffer+2988
0x7798	0x00000000 ;?ICS_ucUSART1RXBuffer+2992
0x779C	0x00000000 ;?ICS_ucUSART1RXBuffer+2996
0x77A0	0x00000000 ;?ICS_ucUSART1RXBuffer+3000
0x77A4	0x00000000 ;?ICS_ucUSART1RXBuffer+3004
0x77A8	0x00000000 ;?ICS_ucUSART1RXBuffer+3008
0x77AC	0x00000000 ;?ICS_ucUSART1RXBuffer+3012
0x77B0	0x00000000 ;?ICS_ucUSART1RXBuffer+3016
0x77B4	0x00000000 ;?ICS_ucUSART1RXBuffer+3020
0x77B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3024
0x77BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3028
0x77C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3032
0x77C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3036
0x77C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3040
0x77CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3044
0x77D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3048
0x77D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3052
0x77D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3056
0x77DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3060
0x77E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3064
0x77E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3068
0x77E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3072
0x77EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3076
0x77F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3080
0x77F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3084
0x77F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3088
0x77FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3092
0x7800	0x00000000 ;?ICS_ucUSART1RXBuffer+3096
0x7804	0x00000000 ;?ICS_ucUSART1RXBuffer+3100
0x7808	0x00000000 ;?ICS_ucUSART1RXBuffer+3104
0x780C	0x00000000 ;?ICS_ucUSART1RXBuffer+3108
0x7810	0x00000000 ;?ICS_ucUSART1RXBuffer+3112
0x7814	0x00000000 ;?ICS_ucUSART1RXBuffer+3116
0x7818	0x00000000 ;?ICS_ucUSART1RXBuffer+3120
0x781C	0x00000000 ;?ICS_ucUSART1RXBuffer+3124
0x7820	0x00000000 ;?ICS_ucUSART1RXBuffer+3128
0x7824	0x00000000 ;?ICS_ucUSART1RXBuffer+3132
0x7828	0x00000000 ;?ICS_ucUSART1RXBuffer+3136
0x782C	0x00000000 ;?ICS_ucUSART1RXBuffer+3140
0x7830	0x00000000 ;?ICS_ucUSART1RXBuffer+3144
0x7834	0x00000000 ;?ICS_ucUSART1RXBuffer+3148
0x7838	0x00000000 ;?ICS_ucUSART1RXBuffer+3152
0x783C	0x00000000 ;?ICS_ucUSART1RXBuffer+3156
0x7840	0x00000000 ;?ICS_ucUSART1RXBuffer+3160
0x7844	0x00000000 ;?ICS_ucUSART1RXBuffer+3164
0x7848	0x00000000 ;?ICS_ucUSART1RXBuffer+3168
0x784C	0x00000000 ;?ICS_ucUSART1RXBuffer+3172
0x7850	0x00000000 ;?ICS_ucUSART1RXBuffer+3176
0x7854	0x00000000 ;?ICS_ucUSART1RXBuffer+3180
0x7858	0x00000000 ;?ICS_ucUSART1RXBuffer+3184
0x785C	0x00000000 ;?ICS_ucUSART1RXBuffer+3188
0x7860	0x00000000 ;?ICS_ucUSART1RXBuffer+3192
0x7864	0x00000000 ;?ICS_ucUSART1RXBuffer+3196
0x7868	0x00000000 ;?ICS_ucUSART1RXBuffer+3200
0x786C	0x00000000 ;?ICS_ucUSART1RXBuffer+3204
0x7870	0x00000000 ;?ICS_ucUSART1RXBuffer+3208
0x7874	0x00000000 ;?ICS_ucUSART1RXBuffer+3212
0x7878	0x00000000 ;?ICS_ucUSART1RXBuffer+3216
0x787C	0x00000000 ;?ICS_ucUSART1RXBuffer+3220
0x7880	0x00000000 ;?ICS_ucUSART1RXBuffer+3224
0x7884	0x00000000 ;?ICS_ucUSART1RXBuffer+3228
0x7888	0x00000000 ;?ICS_ucUSART1RXBuffer+3232
0x788C	0x00000000 ;?ICS_ucUSART1RXBuffer+3236
0x7890	0x00000000 ;?ICS_ucUSART1RXBuffer+3240
0x7894	0x00000000 ;?ICS_ucUSART1RXBuffer+3244
0x7898	0x00000000 ;?ICS_ucUSART1RXBuffer+3248
0x789C	0x00000000 ;?ICS_ucUSART1RXBuffer+3252
0x78A0	0x00000000 ;?ICS_ucUSART1RXBuffer+3256
0x78A4	0x00000000 ;?ICS_ucUSART1RXBuffer+3260
0x78A8	0x00000000 ;?ICS_ucUSART1RXBuffer+3264
0x78AC	0x00000000 ;?ICS_ucUSART1RXBuffer+3268
0x78B0	0x00000000 ;?ICS_ucUSART1RXBuffer+3272
0x78B4	0x00000000 ;?ICS_ucUSART1RXBuffer+3276
0x78B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3280
0x78BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3284
0x78C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3288
0x78C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3292
0x78C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3296
0x78CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3300
0x78D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3304
0x78D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3308
0x78D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3312
0x78DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3316
0x78E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3320
0x78E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3324
0x78E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3328
0x78EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3332
0x78F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3336
0x78F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3340
0x78F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3344
0x78FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3348
0x7900	0x00000000 ;?ICS_ucUSART1RXBuffer+3352
0x7904	0x00000000 ;?ICS_ucUSART1RXBuffer+3356
0x7908	0x00000000 ;?ICS_ucUSART1RXBuffer+3360
0x790C	0x00000000 ;?ICS_ucUSART1RXBuffer+3364
0x7910	0x00000000 ;?ICS_ucUSART1RXBuffer+3368
0x7914	0x00000000 ;?ICS_ucUSART1RXBuffer+3372
0x7918	0x00000000 ;?ICS_ucUSART1RXBuffer+3376
0x791C	0x00000000 ;?ICS_ucUSART1RXBuffer+3380
0x7920	0x00000000 ;?ICS_ucUSART1RXBuffer+3384
0x7924	0x00000000 ;?ICS_ucUSART1RXBuffer+3388
0x7928	0x00000000 ;?ICS_ucUSART1RXBuffer+3392
0x792C	0x00000000 ;?ICS_ucUSART1RXBuffer+3396
0x7930	0x00000000 ;?ICS_ucUSART1RXBuffer+3400
0x7934	0x00000000 ;?ICS_ucUSART1RXBuffer+3404
0x7938	0x00000000 ;?ICS_ucUSART1RXBuffer+3408
0x793C	0x00000000 ;?ICS_ucUSART1RXBuffer+3412
0x7940	0x00000000 ;?ICS_ucUSART1RXBuffer+3416
0x7944	0x00000000 ;?ICS_ucUSART1RXBuffer+3420
0x7948	0x00000000 ;?ICS_ucUSART1RXBuffer+3424
0x794C	0x00000000 ;?ICS_ucUSART1RXBuffer+3428
0x7950	0x00000000 ;?ICS_ucUSART1RXBuffer+3432
0x7954	0x00000000 ;?ICS_ucUSART1RXBuffer+3436
0x7958	0x00000000 ;?ICS_ucUSART1RXBuffer+3440
0x795C	0x00000000 ;?ICS_ucUSART1RXBuffer+3444
0x7960	0x00000000 ;?ICS_ucUSART1RXBuffer+3448
0x7964	0x00000000 ;?ICS_ucUSART1RXBuffer+3452
0x7968	0x00000000 ;?ICS_ucUSART1RXBuffer+3456
0x796C	0x00000000 ;?ICS_ucUSART1RXBuffer+3460
0x7970	0x00000000 ;?ICS_ucUSART1RXBuffer+3464
0x7974	0x00000000 ;?ICS_ucUSART1RXBuffer+3468
0x7978	0x00000000 ;?ICS_ucUSART1RXBuffer+3472
0x797C	0x00000000 ;?ICS_ucUSART1RXBuffer+3476
0x7980	0x00000000 ;?ICS_ucUSART1RXBuffer+3480
0x7984	0x00000000 ;?ICS_ucUSART1RXBuffer+3484
0x7988	0x00000000 ;?ICS_ucUSART1RXBuffer+3488
0x798C	0x00000000 ;?ICS_ucUSART1RXBuffer+3492
0x7990	0x00000000 ;?ICS_ucUSART1RXBuffer+3496
0x7994	0x00000000 ;?ICS_ucUSART1RXBuffer+3500
0x7998	0x00000000 ;?ICS_ucUSART1RXBuffer+3504
0x799C	0x00000000 ;?ICS_ucUSART1RXBuffer+3508
0x79A0	0x00000000 ;?ICS_ucUSART1RXBuffer+3512
0x79A4	0x00000000 ;?ICS_ucUSART1RXBuffer+3516
0x79A8	0x00000000 ;?ICS_ucUSART1RXBuffer+3520
0x79AC	0x00000000 ;?ICS_ucUSART1RXBuffer+3524
0x79B0	0x00000000 ;?ICS_ucUSART1RXBuffer+3528
0x79B4	0x00000000 ;?ICS_ucUSART1RXBuffer+3532
0x79B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3536
0x79BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3540
0x79C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3544
0x79C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3548
0x79C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3552
0x79CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3556
0x79D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3560
0x79D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3564
0x79D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3568
0x79DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3572
0x79E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3576
0x79E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3580
0x79E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3584
0x79EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3588
0x79F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3592
0x79F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3596
0x79F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3600
0x79FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3604
0x7A00	0x00000000 ;?ICS_ucUSART1RXBuffer+3608
0x7A04	0x00000000 ;?ICS_ucUSART1RXBuffer+3612
0x7A08	0x00000000 ;?ICS_ucUSART1RXBuffer+3616
0x7A0C	0x00000000 ;?ICS_ucUSART1RXBuffer+3620
0x7A10	0x00000000 ;?ICS_ucUSART1RXBuffer+3624
0x7A14	0x00000000 ;?ICS_ucUSART1RXBuffer+3628
0x7A18	0x00000000 ;?ICS_ucUSART1RXBuffer+3632
0x7A1C	0x00000000 ;?ICS_ucUSART1RXBuffer+3636
0x7A20	0x00000000 ;?ICS_ucUSART1RXBuffer+3640
0x7A24	0x00000000 ;?ICS_ucUSART1RXBuffer+3644
0x7A28	0x00000000 ;?ICS_ucUSART1RXBuffer+3648
0x7A2C	0x00000000 ;?ICS_ucUSART1RXBuffer+3652
0x7A30	0x00000000 ;?ICS_ucUSART1RXBuffer+3656
0x7A34	0x00000000 ;?ICS_ucUSART1RXBuffer+3660
0x7A38	0x00000000 ;?ICS_ucUSART1RXBuffer+3664
0x7A3C	0x00000000 ;?ICS_ucUSART1RXBuffer+3668
0x7A40	0x00000000 ;?ICS_ucUSART1RXBuffer+3672
0x7A44	0x00000000 ;?ICS_ucUSART1RXBuffer+3676
0x7A48	0x00000000 ;?ICS_ucUSART1RXBuffer+3680
0x7A4C	0x00000000 ;?ICS_ucUSART1RXBuffer+3684
0x7A50	0x00000000 ;?ICS_ucUSART1RXBuffer+3688
0x7A54	0x00000000 ;?ICS_ucUSART1RXBuffer+3692
0x7A58	0x00000000 ;?ICS_ucUSART1RXBuffer+3696
0x7A5C	0x00000000 ;?ICS_ucUSART1RXBuffer+3700
0x7A60	0x00000000 ;?ICS_ucUSART1RXBuffer+3704
0x7A64	0x00000000 ;?ICS_ucUSART1RXBuffer+3708
0x7A68	0x00000000 ;?ICS_ucUSART1RXBuffer+3712
0x7A6C	0x00000000 ;?ICS_ucUSART1RXBuffer+3716
0x7A70	0x00000000 ;?ICS_ucUSART1RXBuffer+3720
0x7A74	0x00000000 ;?ICS_ucUSART1RXBuffer+3724
0x7A78	0x00000000 ;?ICS_ucUSART1RXBuffer+3728
0x7A7C	0x00000000 ;?ICS_ucUSART1RXBuffer+3732
0x7A80	0x00000000 ;?ICS_ucUSART1RXBuffer+3736
0x7A84	0x00000000 ;?ICS_ucUSART1RXBuffer+3740
0x7A88	0x00000000 ;?ICS_ucUSART1RXBuffer+3744
0x7A8C	0x00000000 ;?ICS_ucUSART1RXBuffer+3748
0x7A90	0x00000000 ;?ICS_ucUSART1RXBuffer+3752
0x7A94	0x00000000 ;?ICS_ucUSART1RXBuffer+3756
0x7A98	0x00000000 ;?ICS_ucUSART1RXBuffer+3760
0x7A9C	0x00000000 ;?ICS_ucUSART1RXBuffer+3764
0x7AA0	0x00000000 ;?ICS_ucUSART1RXBuffer+3768
0x7AA4	0x00000000 ;?ICS_ucUSART1RXBuffer+3772
0x7AA8	0x00000000 ;?ICS_ucUSART1RXBuffer+3776
0x7AAC	0x00000000 ;?ICS_ucUSART1RXBuffer+3780
0x7AB0	0x00000000 ;?ICS_ucUSART1RXBuffer+3784
0x7AB4	0x00000000 ;?ICS_ucUSART1RXBuffer+3788
0x7AB8	0x00000000 ;?ICS_ucUSART1RXBuffer+3792
0x7ABC	0x00000000 ;?ICS_ucUSART1RXBuffer+3796
0x7AC0	0x00000000 ;?ICS_ucUSART1RXBuffer+3800
0x7AC4	0x00000000 ;?ICS_ucUSART1RXBuffer+3804
0x7AC8	0x00000000 ;?ICS_ucUSART1RXBuffer+3808
0x7ACC	0x00000000 ;?ICS_ucUSART1RXBuffer+3812
0x7AD0	0x00000000 ;?ICS_ucUSART1RXBuffer+3816
0x7AD4	0x00000000 ;?ICS_ucUSART1RXBuffer+3820
0x7AD8	0x00000000 ;?ICS_ucUSART1RXBuffer+3824
0x7ADC	0x00000000 ;?ICS_ucUSART1RXBuffer+3828
0x7AE0	0x00000000 ;?ICS_ucUSART1RXBuffer+3832
0x7AE4	0x00000000 ;?ICS_ucUSART1RXBuffer+3836
0x7AE8	0x00000000 ;?ICS_ucUSART1RXBuffer+3840
0x7AEC	0x00000000 ;?ICS_ucUSART1RXBuffer+3844
0x7AF0	0x00000000 ;?ICS_ucUSART1RXBuffer+3848
0x7AF4	0x00000000 ;?ICS_ucUSART1RXBuffer+3852
0x7AF8	0x00000000 ;?ICS_ucUSART1RXBuffer+3856
0x7AFC	0x00000000 ;?ICS_ucUSART1RXBuffer+3860
0x7B00	0x00000000 ;?ICS_ucUSART1RXBuffer+3864
0x7B04	0x00000000 ;?ICS_ucUSART1RXBuffer+3868
0x7B08	0x00000000 ;?ICS_ucUSART1RXBuffer+3872
0x7B0C	0x00000000 ;?ICS_ucUSART1RXBuffer+3876
0x7B10	0x00000000 ;?ICS_ucUSART1RXBuffer+3880
0x7B14	0x00000000 ;?ICS_ucUSART1RXBuffer+3884
0x7B18	0x00000000 ;?ICS_ucUSART1RXBuffer+3888
0x7B1C	0x00000000 ;?ICS_ucUSART1RXBuffer+3892
0x7B20	0x00000000 ;?ICS_ucUSART1RXBuffer+3896
0x7B24	0x00000000 ;?ICS_ucUSART1RXBuffer+3900
0x7B28	0x00000000 ;?ICS_ucUSART1RXBuffer+3904
0x7B2C	0x00000000 ;?ICS_ucUSART1RXBuffer+3908
0x7B30	0x00000000 ;?ICS_ucUSART1RXBuffer+3912
0x7B34	0x00000000 ;?ICS_ucUSART1RXBuffer+3916
0x7B38	0x00000000 ;?ICS_ucUSART1RXBuffer+3920
0x7B3C	0x00000000 ;?ICS_ucUSART1RXBuffer+3924
0x7B40	0x00000000 ;?ICS_ucUSART1RXBuffer+3928
0x7B44	0x00000000 ;?ICS_ucUSART1RXBuffer+3932
0x7B48	0x00000000 ;?ICS_ucUSART1RXBuffer+3936
0x7B4C	0x00000000 ;?ICS_ucUSART1RXBuffer+3940
0x7B50	0x00000000 ;?ICS_ucUSART1RXBuffer+3944
0x7B54	0x00000000 ;?ICS_ucUSART1RXBuffer+3948
0x7B58	0x00000000 ;?ICS_ucUSART1RXBuffer+3952
0x7B5C	0x00000000 ;?ICS_ucUSART1RXBuffer+3956
0x7B60	0x00000000 ;?ICS_ucUSART1RXBuffer+3960
0x7B64	0x00000000 ;?ICS_ucUSART1RXBuffer+3964
0x7B68	0x00000000 ;?ICS_ucUSART1RXBuffer+3968
0x7B6C	0x00000000 ;?ICS_ucUSART1RXBuffer+3972
0x7B70	0x00000000 ;?ICS_ucUSART1RXBuffer+3976
0x7B74	0x00000000 ;?ICS_ucUSART1RXBuffer+3980
0x7B78	0x00000000 ;?ICS_ucUSART1RXBuffer+3984
0x7B7C	0x00000000 ;?ICS_ucUSART1RXBuffer+3988
0x7B80	0x00000000 ;?ICS_ucUSART1RXBuffer+3992
0x7B84	0x00000000 ;?ICS_ucUSART1RXBuffer+3996
0x7B88	0x00000000 ;?ICS_ucUSART1RXBuffer+4000
0x7B8C	0x00000000 ;?ICS_ucUSART1RXBuffer+4004
0x7B90	0x00000000 ;?ICS_ucUSART1RXBuffer+4008
0x7B94	0x00000000 ;?ICS_ucUSART1RXBuffer+4012
0x7B98	0x00000000 ;?ICS_ucUSART1RXBuffer+4016
0x7B9C	0x00000000 ;?ICS_ucUSART1RXBuffer+4020
0x7BA0	0x00000000 ;?ICS_ucUSART1RXBuffer+4024
0x7BA4	0x00000000 ;?ICS_ucUSART1RXBuffer+4028
0x7BA8	0x00000000 ;?ICS_ucUSART1RXBuffer+4032
0x7BAC	0x00000000 ;?ICS_ucUSART1RXBuffer+4036
0x7BB0	0x00000000 ;?ICS_ucUSART1RXBuffer+4040
0x7BB4	0x00000000 ;?ICS_ucUSART1RXBuffer+4044
0x7BB8	0x00000000 ;?ICS_ucUSART1RXBuffer+4048
0x7BBC	0x00000000 ;?ICS_ucUSART1RXBuffer+4052
0x7BC0	0x00000000 ;?ICS_ucUSART1RXBuffer+4056
0x7BC4	0x00000000 ;?ICS_ucUSART1RXBuffer+4060
0x7BC8	0x00000000 ;?ICS_ucUSART1RXBuffer+4064
0x7BCC	0x00000000 ;?ICS_ucUSART1RXBuffer+4068
0x7BD0	0x00000000 ;?ICS_ucUSART1RXBuffer+4072
0x7BD4	0x00000000 ;?ICS_ucUSART1RXBuffer+4076
0x7BD8	0x00000000 ;?ICS_ucUSART1RXBuffer+4080
0x7BDC	0x00000000 ;?ICS_ucUSART1RXBuffer+4084
0x7BE0	0x00000000 ;?ICS_ucUSART1RXBuffer+4088
0x7BE4	0x00000000 ;?ICS_ucUSART1RXBuffer+4092
; end of ?ICS_ucUSART1RXBuffer
;DriverRF4463PROMain.c,0 :: ?ICS_ulUSART1ByteReceived [4]
0x7BE8	0x00000000 ;?ICS_ulUSART1ByteReceived+0
; end of ?ICS_ulUSART1ByteReceived
;DriverRF4463PROMain.c,0 :: ?ICS_fUSART1Buffer [4]
0x7BEC	0x00000000 ;?ICS_fUSART1Buffer+0
; end of ?ICS_fUSART1Buffer
;DriverRF4463PROMain.c,0 :: ?ICS_CMD_RADIO_POWER_SET [10]
0x7BF0	0x5F544553 ;?ICS_CMD_RADIO_POWER_SET+0
0x7BF4	0x45574F50 ;?ICS_CMD_RADIO_POWER_SET+4
0x7BF8	0x0052 ;?ICS_CMD_RADIO_POWER_SET+8
; end of ?ICS_CMD_RADIO_POWER_SET
;DriverRF4463PROMain.c,0 :: ?ICS_ANS_COMMAND_VALUE_ACCEPTED [40]
0x7BFA	0x4F43205B ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+0
0x7BFE	0x4E414D4D ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+4
0x7C02	0x205D2044 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+8
0x7C06	0x554C4156 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+12
0x7C0A	0x43412045 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+16
0x7C0E	0x54504543 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+20
0x7C12	0x41204445 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+24
0x7C16	0x4120444E ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+28
0x7C1A	0x494C5050 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+32
0x7C1E	0x000D4445 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+36
; end of ?ICS_ANS_COMMAND_VALUE_ACCEPTED
;DriverRF4463PROMain.c,0 :: ?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE [32]
0x7C22	0x4F43205B ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x7C26	0x4E414D4D ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+4
0x7C2A	0x205D2044 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+8
0x7C2E	0x554C4156 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+12
0x7C32	0x554F2045 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+16
0x7C36	0x464F2054 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+20
0x7C3A	0x4E415220 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+24
0x7C3E	0x000D4547 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+28
; end of ?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE
;,0 :: _initBlock_9 [18]
; Containing: ?ICS_CMD_RADIO_BAND_SET [9]
;             ?ICS_CMD_RADIO_RATE_SET [9]
0x7C42	0x5F544553 ;_initBlock_9+0 : ?ICS_CMD_RADIO_BAND_SET at 0x7C42
0x7C46	0x444E4142 ;_initBlock_9+4
0x7C4A	0x54455300 ;_initBlock_9+8 : ?ICS_CMD_RADIO_RATE_SET at 0x7C4B
0x7C4E	0x5441525F ;_initBlock_9+12
0x7C52	0x0045 ;_initBlock_9+16
; end of _initBlock_9
;DriverRF4463PROMain.c,0 :: ?ICS_CMD_RADIO_CHANNEL_SET [12]
0x7C54	0x5F544553 ;?ICS_CMD_RADIO_CHANNEL_SET+0
0x7C58	0x4E414843 ;?ICS_CMD_RADIO_CHANNEL_SET+4
0x7C5C	0x004C454E ;?ICS_CMD_RADIO_CHANNEL_SET+8
; end of ?ICS_CMD_RADIO_CHANNEL_SET
;,0 :: _initBlock_11 [8]
; Containing: ?ICS_ucRF4463FreqChannel [1]
;             ?ICS_CMD_RADIO_BW_SET [7]
0x7C60	0x54455301 ;_initBlock_11+0 : ?ICS_ucRF4463FreqChannel at 0x7C60 : ?ICS_CMD_RADIO_BW_SET at 0x7C61
0x7C64	0x0057425F ;_initBlock_11+4
; end of _initBlock_11
;DriverRF4463PROMain.c,0 :: ?ICS_ulRF4463Step [4]
0x7C68	0x000000FA ;?ICS_ulRF4463Step+0
; end of ?ICS_ulRF4463Step
;,0 :: _initBlock_13 [10]
; Containing: ?ICS_CMD_RADIO_MODE_SET [9]
;             ?ICS_ucUSARTNull [1]
0x7C6C	0x5F544553 ;_initBlock_13+0 : ?ICS_CMD_RADIO_MODE_SET at 0x7C6C
0x7C70	0x45444F4D ;_initBlock_13+4
0x7C74	0x0000 ;_initBlock_13+8 : ?ICS_ucUSARTNull at 0x7C75
; end of _initBlock_13
;,0 :: _initBlock_14 [178]
; Containing: ?ICS_ARG_RADIO_MODE_STBY [5]
;             ?ICS_ANS_COMMAND_MODE_STBY [34]
;             ?ICS_ARG_RADIO_MODE_TX_CONT [8]
;             ?ICS_ANS_COMMAND_MODE_TX_CONT [34]
;             ?ICS_ARG_RADIO_MODE_RX_CONT [8]
;             ?ICS_ANS_COMMAND_MODE_RX_CONT [34]
;             ?ICS_ARG_RADIO_MODE_TX_MASTER [10]
;             ?ICS_ANS_COMMAND_MODE_TX_MASTER [36]
;             ?ICS_ARG_RADIO_MODE_RX_SLAVE [9]
0x7C76	0x59425453 ;_initBlock_14+0 : ?ICS_ARG_RADIO_MODE_STBY at 0x7C76
0x7C7A	0x43205B00 ;_initBlock_14+4 : ?ICS_ANS_COMMAND_MODE_STBY at 0x7C7B
0x7C7E	0x414D4D4F ;_initBlock_14+8
0x7C82	0x5D20444E ;_initBlock_14+12
0x7C86	0x444F4D20 ;_initBlock_14+16
0x7C8A	0x43412045 ;_initBlock_14+20
0x7C8E	0x45564954 ;_initBlock_14+24
0x7C92	0x5453203A ;_initBlock_14+28
0x7C96	0x42444E41 ;_initBlock_14+32
0x7C9A	0x54000D59 ;_initBlock_14+36 : ?ICS_ARG_RADIO_MODE_TX_CONT at 0x7C9D
0x7C9E	0x4F435F58 ;_initBlock_14+40
0x7CA2	0x5B00544E ;_initBlock_14+44 : ?ICS_ANS_COMMAND_MODE_TX_CONT at 0x7CA5
0x7CA6	0x4D4F4320 ;_initBlock_14+48
0x7CAA	0x444E414D ;_initBlock_14+52
0x7CAE	0x4D205D20 ;_initBlock_14+56
0x7CB2	0x2045444F ;_initBlock_14+60
0x7CB6	0x49544341 ;_initBlock_14+64
0x7CBA	0x203A4556 ;_initBlock_14+68
0x7CBE	0x43205854 ;_initBlock_14+72
0x7CC2	0x0D544E4F ;_initBlock_14+76
0x7CC6	0x5F585200 ;_initBlock_14+80 : ?ICS_ARG_RADIO_MODE_RX_CONT at 0x7CC7
0x7CCA	0x544E4F43 ;_initBlock_14+84
0x7CCE	0x43205B00 ;_initBlock_14+88 : ?ICS_ANS_COMMAND_MODE_RX_CONT at 0x7CCF
0x7CD2	0x414D4D4F ;_initBlock_14+92
0x7CD6	0x5D20444E ;_initBlock_14+96
0x7CDA	0x444F4D20 ;_initBlock_14+100
0x7CDE	0x43412045 ;_initBlock_14+104
0x7CE2	0x45564954 ;_initBlock_14+108
0x7CE6	0x5852203A ;_initBlock_14+112
0x7CEA	0x4E4F4320 ;_initBlock_14+116
0x7CEE	0x54000D54 ;_initBlock_14+120 : ?ICS_ARG_RADIO_MODE_TX_MASTER at 0x7CF1
0x7CF2	0x414D5F58 ;_initBlock_14+124
0x7CF6	0x52455453 ;_initBlock_14+128
0x7CFA	0x43205B00 ;_initBlock_14+132 : ?ICS_ANS_COMMAND_MODE_TX_MASTER at 0x7CFB
0x7CFE	0x414D4D4F ;_initBlock_14+136
0x7D02	0x5D20444E ;_initBlock_14+140
0x7D06	0x444F4D20 ;_initBlock_14+144
0x7D0A	0x43412045 ;_initBlock_14+148
0x7D0E	0x45564954 ;_initBlock_14+152
0x7D12	0x5854203A ;_initBlock_14+156
0x7D16	0x53414D20 ;_initBlock_14+160
0x7D1A	0x0D524554 ;_initBlock_14+164
0x7D1E	0x5F585200 ;_initBlock_14+168 : ?ICS_ARG_RADIO_MODE_RX_SLAVE at 0x7D1F
0x7D22	0x56414C53 ;_initBlock_14+172
0x7D26	0x0045 ;_initBlock_14+176
; end of _initBlock_14
;,0 :: _initBlock_15 [114]
; Containing: ?ICS_ANS_COMMAND_MODE_RX_SLAVE [35]
;             ?ICS_CMD_RADIO_PACKET_SEND [12]
;             ?ICS_ucRF4463TXdata [66]
;             ?ICS_ucRF4463SendMessage [1]
0x7D28	0x4F43205B ;_initBlock_15+0 : ?ICS_ANS_COMMAND_MODE_RX_SLAVE at 0x7D28
0x7D2C	0x4E414D4D ;_initBlock_15+4
0x7D30	0x205D2044 ;_initBlock_15+8
0x7D34	0x45444F4D ;_initBlock_15+12
0x7D38	0x54434120 ;_initBlock_15+16
0x7D3C	0x3A455649 ;_initBlock_15+20
0x7D40	0x20585220 ;_initBlock_15+24
0x7D44	0x56414C53 ;_initBlock_15+28
0x7D48	0x53000D45 ;_initBlock_15+32 : ?ICS_CMD_RADIO_PACKET_SEND at 0x7D4B
0x7D4C	0x5F444E45 ;_initBlock_15+36
0x7D50	0x4B434150 ;_initBlock_15+40
0x7D54	0x01005445 ;_initBlock_15+44 : ?ICS_ucRF4463TXdata at 0x7D57
0x7D58	0x41010101 ;_initBlock_15+48
0x7D5C	0x45444342 ;_initBlock_15+52
0x7D60	0x49484746 ;_initBlock_15+56
0x7D64	0x4D4C4B4A ;_initBlock_15+60
0x7D68	0x51504F4E ;_initBlock_15+64
0x7D6C	0x55545352 ;_initBlock_15+68
0x7D70	0x59585756 ;_initBlock_15+72
0x7D74	0x4342415A ;_initBlock_15+76
0x7D78	0x47464544 ;_initBlock_15+80
0x7D7C	0x4B4A4948 ;_initBlock_15+84
0x7D80	0x4F4E4D4C ;_initBlock_15+88
0x7D84	0x53525150 ;_initBlock_15+92
0x7D88	0x57565554 ;_initBlock_15+96
0x7D8C	0x415A5958 ;_initBlock_15+100
0x7D90	0x45444342 ;_initBlock_15+104
0x7D94	0x11484746 ;_initBlock_15+108
0x7D98	0x00F3 ;_initBlock_15+112 : ?ICS_ucRF4463SendMessage at 0x7D99
; end of _initBlock_15
;,0 :: _initBlock_16 [36]
; Containing: ?ICS_ANS_COMMAND_WRONG_MODE [25]
;             ?ICS_CMD_RADIO_GET_STATUS [11]
0x7D9A	0x4F43205B ;_initBlock_16+0 : ?ICS_ANS_COMMAND_WRONG_MODE at 0x7D9A
0x7D9E	0x4E414D4D ;_initBlock_16+4
0x7DA2	0x205D2044 ;_initBlock_16+8
0x7DA6	0x4E4F5257 ;_initBlock_16+12
0x7DAA	0x4F4D2047 ;_initBlock_16+16
0x7DAE	0x0D214544 ;_initBlock_16+20
0x7DB2	0x54454700 ;_initBlock_16+24 : ?ICS_CMD_RADIO_GET_STATUS at 0x7DB3
0x7DB6	0x4154535F ;_initBlock_16+28
0x7DBA	0x00535554 ;_initBlock_16+32
; end of _initBlock_16
;,0 :: _initBlock_17 [50]
; Containing: ?ICS_ANS_STATUS_REPORT [37]
;             ?ICS_CMD_RADIO_MATCH_BYTE_1_SET [12]
;             ?ICS_ucRF4463ByteMatch1 [1]
0x7DBE	0x5453205B ;_initBlock_17+0 : ?ICS_ANS_STATUS_REPORT at 0x7DBE
0x7DC2	0x53555441 ;_initBlock_17+4
0x7DC6	0x43205D20 ;_initBlock_17+8
0x7DCA	0x45525255 ;_initBlock_17+12
0x7DCE	0x5320544E ;_initBlock_17+16
0x7DD2	0x55544154 ;_initBlock_17+20
0x7DD6	0x2D2D2D53 ;_initBlock_17+24
0x7DDA	0x2D2D2D2D ;_initBlock_17+28
0x7DDE	0x0D2D2D2D ;_initBlock_17+32
0x7DE2	0x54455300 ;_initBlock_17+36 : ?ICS_CMD_RADIO_MATCH_BYTE_1_SET at 0x7DE3
0x7DE6	0x54414D5F ;_initBlock_17+40
0x7DEA	0x315F4843 ;_initBlock_17+44
0x7DEE	0x0100 ;_initBlock_17+48 : ?ICS_ucRF4463ByteMatch1 at 0x7DEF
; end of _initBlock_17
;,0 :: _initBlock_18 [2]
; Containing: ?ICS_ucRF4463MatchEnabled [1]
;             ?ICS_ucRF4463MatchEnableReg [1]
0x7DF0	0x4001 ;_initBlock_18+0 : ?ICS_ucRF4463MatchEnabled at 0x7DF0 : ?ICS_ucRF4463MatchEnableReg at 0x7DF1
; end of _initBlock_18
;DriverRF4463PROMain.c,0 :: ?ICS_CMD_RADIO_MATCH_BYTE_2_SET [12]
0x7DF2	0x5F544553 ;?ICS_CMD_RADIO_MATCH_BYTE_2_SET+0
0x7DF6	0x4354414D ;?ICS_CMD_RADIO_MATCH_BYTE_2_SET+4
0x7DFA	0x00325F48 ;?ICS_CMD_RADIO_MATCH_BYTE_2_SET+8
; end of ?ICS_CMD_RADIO_MATCH_BYTE_2_SET
;,0 :: _initBlock_20 [14]
; Containing: ?ICS_ucRF4463ByteMatch2 [1]
;             ?ICS_CMD_RADIO_MATCH_BYTE_3_SET [12]
;             ?ICS_ucRF4463ByteMatch3 [1]
0x7DFE	0x54455301 ;_initBlock_20+0 : ?ICS_ucRF4463ByteMatch2 at 0x7DFE : ?ICS_CMD_RADIO_MATCH_BYTE_3_SET at 0x7DFF
0x7E02	0x54414D5F ;_initBlock_20+4
0x7E06	0x335F4843 ;_initBlock_20+8
0x7E0A	0x0100 ;_initBlock_20+12 : ?ICS_ucRF4463ByteMatch3 at 0x7E0B
; end of _initBlock_20
;DriverRF4463PROMain.c,0 :: ?ICS_CMD_RADIO_MATCH_BYTE_4_SET [12]
0x7E0C	0x5F544553 ;?ICS_CMD_RADIO_MATCH_BYTE_4_SET+0
0x7E10	0x4354414D ;?ICS_CMD_RADIO_MATCH_BYTE_4_SET+4
0x7E14	0x00345F48 ;?ICS_CMD_RADIO_MATCH_BYTE_4_SET+8
; end of ?ICS_CMD_RADIO_MATCH_BYTE_4_SET
;,0 :: _initBlock_22 [12]
; Containing: ?ICS_ucRF4463ByteMatch4 [1]
;             ?ICS_CMD_RADIO_MATCH_MASK_1_SET [11]
0x7E18	0x54455301 ;_initBlock_22+0 : ?ICS_ucRF4463ByteMatch4 at 0x7E18 : ?ICS_CMD_RADIO_MATCH_MASK_1_SET at 0x7E19
0x7E1C	0x53414D5F ;_initBlock_22+4
0x7E20	0x00315F4B ;_initBlock_22+8
; end of _initBlock_22
;,0 :: _initBlock_23 [12]
; Containing: ?ICS_ucRF4463ByteMask1 [1]
;             ?ICS_CMD_RADIO_MATCH_MASK_2_SET [11]
0x7E24	0x544553FF ;_initBlock_23+0 : ?ICS_ucRF4463ByteMask1 at 0x7E24 : ?ICS_CMD_RADIO_MATCH_MASK_2_SET at 0x7E25
0x7E28	0x53414D5F ;_initBlock_23+4
0x7E2C	0x00325F4B ;_initBlock_23+8
; end of _initBlock_23
;,0 :: _initBlock_24 [12]
; Containing: ?ICS_ucRF4463ByteMask2 [1]
;             ?ICS_CMD_RADIO_MATCH_MASK_3_SET [11]
0x7E30	0x544553FF ;_initBlock_24+0 : ?ICS_ucRF4463ByteMask2 at 0x7E30 : ?ICS_CMD_RADIO_MATCH_MASK_3_SET at 0x7E31
0x7E34	0x53414D5F ;_initBlock_24+4
0x7E38	0x00335F4B ;_initBlock_24+8
; end of _initBlock_24
;,0 :: _initBlock_25 [12]
; Containing: ?ICS_ucRF4463ByteMask3 [1]
;             ?ICS_CMD_RADIO_MATCH_MASK_4_SET [11]
0x7E3C	0x544553FF ;_initBlock_25+0 : ?ICS_ucRF4463ByteMask3 at 0x7E3C : ?ICS_CMD_RADIO_MATCH_MASK_4_SET at 0x7E3D
0x7E40	0x53414D5F ;_initBlock_25+4
0x7E44	0x00345F4B ;_initBlock_25+8
; end of _initBlock_25
;,0 :: _initBlock_26 [36]
; Containing: ?ICS_ucRF4463ByteMask4 [1]
;             ?ICS_CMD_RADIO_MATCH_UNSET [12]
;             ?ICS_ANS_DEBUG_COMMAND_UNKNOWN [22]
;             ?ICSDriverRF4463PROMain_ucRF4463IRQ [1]
0x7E48	0x534E55FF ;_initBlock_26+0 : ?ICS_ucRF4463ByteMask4 at 0x7E48 : ?ICS_CMD_RADIO_MATCH_UNSET at 0x7E49
0x7E4C	0x4D5F5445 ;_initBlock_26+4
0x7E50	0x48435441 ;_initBlock_26+8
0x7E54	0x43205B00 ;_initBlock_26+12 : ?ICS_ANS_DEBUG_COMMAND_UNKNOWN at 0x7E55
0x7E58	0x414D4D4F ;_initBlock_26+16
0x7E5C	0x5D20444E ;_initBlock_26+20
0x7E60	0x4B4E5520 ;_initBlock_26+24
0x7E64	0x4E574F4E ;_initBlock_26+28
0x7E68	0x0000203A ;_initBlock_26+32 : ?ICSDriverRF4463PROMain_ucRF4463IRQ at 0x7E6B
; end of _initBlock_26
;DriverRF4463PROMain.c,0 :: ?ICS_tx_cnt [4]
0x7E6C	0x00000000 ;?ICS_tx_cnt+0
; end of ?ICS_tx_cnt
;DriverRF4463PROMain.c,0 :: ?ICS_rx_cnt [4]
0x7E70	0x00000000 ;?ICS_rx_cnt+0
; end of ?ICS_rx_cnt
;,0 :: _initBlock_29 [42]
; Containing: ?ICS_ucSPI3ByteReceived [1]
;             ?ICS_RF_MODEM_MOD_TYPE_12_data [16]
;             ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data [12]
;             ?ICS_RF_MODEM_AFC_GEAR_7_data [13]
0x7E74	0x0C201100 ;_initBlock_29+0 : ?ICS_ucSPI3ByteReceived at 0x7E74 : ?ICS_RF_MODEM_MOD_TYPE_12_data at 0x7E75
0x7E78	0x00000000 ;_initBlock_29+4
0x7E7C	0x00000000 ;_initBlock_29+8
0x7E80	0x00000000 ;_initBlock_29+12
0x7E84	0x08201100 ;_initBlock_29+16 : ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data at 0x7E85
0x7E88	0x00000018 ;_initBlock_29+20
0x7E8C	0x00000000 ;_initBlock_29+24
0x7E90	0x07201100 ;_initBlock_29+28 : ?ICS_RF_MODEM_AFC_GEAR_7_data at 0x7E91
0x7E94	0x0000002C ;_initBlock_29+32
0x7E98	0x00000000 ;_initBlock_29+36
0x7E9C	0x0000 ;_initBlock_29+40
; end of _initBlock_29
;,0 :: _initBlock_30 [76]
; Containing: ?ICS_RF_MODEM_OOK_CNT1_11_data [15]
;             ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data [16]
;             ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data [16]
;             ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data [16]
;             ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data [13]
0x7E9E	0x420B2011 ;_initBlock_30+0 : ?ICS_RF_MODEM_OOK_CNT1_11_data at 0x7E9E
0x7EA2	0x00000000 ;_initBlock_30+4
0x7EA6	0x00000000 ;_initBlock_30+8
0x7EAA	0x11000000 ;_initBlock_30+12 : ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data at 0x7EAD
0x7EAE	0x00000C21 ;_initBlock_30+16
0x7EB2	0x00000000 ;_initBlock_30+20
0x7EB6	0x00000000 ;_initBlock_30+24
0x7EBA	0x11000000 ;_initBlock_30+28 : ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data at 0x7EBD
0x7EBE	0x000C0C21 ;_initBlock_30+32
0x7EC2	0x00000000 ;_initBlock_30+36
0x7EC6	0x00000000 ;_initBlock_30+40
0x7ECA	0x11000000 ;_initBlock_30+44 : ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data at 0x7ECD
0x7ECE	0x00180C21 ;_initBlock_30+48
0x7ED2	0x00000000 ;_initBlock_30+52
0x7ED6	0x00000000 ;_initBlock_30+56
0x7EDA	0x11000000 ;_initBlock_30+60 : ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data at 0x7EDD
0x7EDE	0x00380920 ;_initBlock_30+64
0x7EE2	0x00000000 ;_initBlock_30+68
0x7EE6	0x00000000 ;_initBlock_30+72
; end of _initBlock_30
;,0 :: _initBlock_31 [24]
; Containing: ?ICS_RF_MODEM_BCR_OSR_1_9_data [13]
;             ?ICS_RF_SYNTH_PFDCP_CPFF_7_data [11]
0x7EEA	0x22092011 ;_initBlock_31+0 : ?ICS_RF_MODEM_BCR_OSR_1_9_data at 0x7EEA
0x7EEE	0x00000000 ;_initBlock_31+4
0x7EF2	0x00000000 ;_initBlock_31+8
0x7EF6	0x07231100 ;_initBlock_31+12 : ?ICS_RF_SYNTH_PFDCP_CPFF_7_data at 0x7EF7
0x7EFA	0x00000000 ;_initBlock_31+16
0x7EFE	0x00000000 ;_initBlock_31+20
; end of _initBlock_31
;,0 :: _initBlock_32 [24]
; Containing: ?ICS?lstr1___Lib_Sprintf [7]
;             ?ICS__Lib_System_4XX_APBAHBPrescTable [16]
;             ?ICS_ucData1 [1]
0x7F02	0x6C756E28 ;_initBlock_32+0 : ?ICS?lstr1___Lib_Sprintf at 0x7F02
0x7F06	0x0000296C ;_initBlock_32+4 : ?ICS__Lib_System_4XX_APBAHBPrescTable at 0x7F09
0x7F0A	0x01000000 ;_initBlock_32+8
0x7F0E	0x01040302 ;_initBlock_32+12
0x7F12	0x06040302 ;_initBlock_32+16
0x7F16	0x00090807 ;_initBlock_32+20 : ?ICS_ucData1 at 0x7F19
; end of _initBlock_32
;DriverRF4463PROMain.c,0 :: ?ICS?lstr8_DriverRF4463PROMain [18]
0x7F1A	0x5453205B ;?ICS?lstr8_DriverRF4463PROMain+0
0x7F1E	0x53555441 ;?ICS?lstr8_DriverRF4463PROMain+4
0x7F22	0x4D205D20 ;?ICS?lstr8_DriverRF4463PROMain+8
0x7F26	0x3A45444F ;?ICS?lstr8_DriverRF4463PROMain+12
0x7F2A	0x0020 ;?ICS?lstr8_DriverRF4463PROMain+16
; end of ?ICS?lstr8_DriverRF4463PROMain
;DriverRF4463PROMain.c,0 :: ?ICSvRF4463MainCommandProcessor_ucCommand_L0 [32]
0x7F2C	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+0
0x7F30	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+4
0x7F34	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+8
0x7F38	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+12
0x7F3C	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+16
0x7F40	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+20
0x7F44	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+24
0x7F48	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+28
; end of ?ICSvRF4463MainCommandProcessor_ucCommand_L0
;DriverRF4463PROMain.c,0 :: ?ICSvRF4463MainCommandProcessor_ucLongArgument_L0 [64]
0x7F4C	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+0
0x7F50	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+4
0x7F54	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+8
0x7F58	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+12
0x7F5C	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+16
0x7F60	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+20
0x7F64	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+24
0x7F68	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+28
0x7F6C	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+32
0x7F70	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+36
0x7F74	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+40
0x7F78	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+44
0x7F7C	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+48
0x7F80	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+52
0x7F84	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+56
0x7F88	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+60
; end of ?ICSvRF4463MainCommandProcessor_ucLongArgument_L0
;,0 :: _initBlock_36 [2]
; Containing: ?ICSvRF4463MainCommandProcessor_ucCounterBuffer_L0 [1]
;             ?ICSvRF4463MainCommandProcessor_ucCounterCommand_L0 [1]
0x7F8C	0x0000 ;_initBlock_36+0 : ?ICSvRF4463MainCommandProcessor_ucCounterBuffer_L0 at 0x7F8C : ?ICSvRF4463MainCommandProcessor_ucCounterCommand_L0 at 0x7F8D
; end of _initBlock_36
;,0 :: _initBlock_37 [1110]
; Containing: ?ICSvRF4463MainCommandProcessor_ucCounterLongArgument_L0 [1]
;             ?ICSvRF4463MainCommandProcessor_ucTXT_L0 [64]
;             RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433 [132]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433 [132]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433 [132]
;             RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850 [132]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850 [132]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850 [132]
;             RF_MODEM_MOD_TYPE_12 [132]
;             RF_MODEM_OOK_CNT1_11_433 [121]
0x7F8E	0x00000000 ;_initBlock_37+0 : ?ICSvRF4463MainCommandProcessor_ucCounterLongArgument_L0 at 0x7F8E : ?ICSvRF4463MainCommandProcessor_ucTXT_L0 at 0x7F8F
0x7F92	0x00000000 ;_initBlock_37+4
0x7F96	0x00000000 ;_initBlock_37+8
0x7F9A	0x00000000 ;_initBlock_37+12
0x7F9E	0x00000000 ;_initBlock_37+16
0x7FA2	0x00000000 ;_initBlock_37+20
0x7FA6	0x00000000 ;_initBlock_37+24
0x7FAA	0x00000000 ;_initBlock_37+28
0x7FAE	0x00000000 ;_initBlock_37+32
0x7FB2	0x00000000 ;_initBlock_37+36
0x7FB6	0x00000000 ;_initBlock_37+40
0x7FBA	0x00000000 ;_initBlock_37+44
0x7FBE	0x00000000 ;_initBlock_37+48
0x7FC2	0x00000000 ;_initBlock_37+52
0x7FC6	0x00000000 ;_initBlock_37+56
0x7FCA	0x00000000 ;_initBlock_37+60
0x7FCE	0x05DEB800 ;_initBlock_37+64 : RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433 at 0x7FCF
0x7FD2	0x030C1617 ;_initBlock_37+68
0x7FD6	0x00FF1500 ;_initBlock_37+72
0x7FDA	0x05DEB800 ;_initBlock_37+76
0x7FDE	0x030C1617 ;_initBlock_37+80
0x7FE2	0x00FF1500 ;_initBlock_37+84
0x7FE6	0xEAC9B900 ;_initBlock_37+88
0x7FEA	0x0A111205 ;_initBlock_37+92
0x7FEE	0x03FC1504 ;_initBlock_37+96
0x7FF2	0x05DEB800 ;_initBlock_37+100
0x7FF6	0x030C1617 ;_initBlock_37+104
0x7FFA	0x00FF1500 ;_initBlock_37+108
0x7FFE	0xEAC9B900 ;_initBlock_37+112
0x8002	0x0A111205 ;_initBlock_37+116
0x8006	0x03FC1504 ;_initBlock_37+120
0x800A	0xD6CEDD00 ;_initBlock_37+124
0x800E	0x0300F6E6 ;_initBlock_37+128
0x8012	0x3FF01503 ;_initBlock_37+132
0x8016	0xD6DBF400 ;_initBlock_37+136
0x801A	0xFEF7ECDF ;_initBlock_37+140
0x801E	0xFFF01501 ;_initBlock_37+144
0x8022	0xD6DBF403 ;_initBlock_37+148
0x8026	0xFEF7ECDF ;_initBlock_37+152
0x802A	0xFFF01501 ;_initBlock_37+156
0x802E	0xDCEC0C03 ;_initBlock_37+160
0x8032	0xF6EDE3DC ;_initBlock_37+164
0x8036	0xFFC015FD ;_initBlock_37+168
0x803A	0xDBC7C80F ;_initBlock_37+172
0x803E	0x070802F2 ;_initBlock_37+176
0x8042	0x0FFC1503 ;_initBlock_37+180
0x8046	0xEAC9B900 ;_initBlock_37+184
0x804A	0x0A111205 ;_initBlock_37+188
0x804E	0x03FC1504 ;_initBlock_37+192
0x8052	0x15000300 ;_initBlock_37+196 : RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433 at 0x8053
0x8056	0xFF0000FF ;_initBlock_37+200
0x805A	0xF57F30C4 ;_initBlock_37+204
0x805E	0x150003B5 ;_initBlock_37+208
0x8062	0xFF0000FF ;_initBlock_37+212
0x8066	0xF57F30C4 ;_initBlock_37+216
0x806A	0x15040AB5 ;_initBlock_37+220
0x806E	0xCC0003FC ;_initBlock_37+224
0x8072	0x21A030A1 ;_initBlock_37+228
0x8076	0x150003D1 ;_initBlock_37+232
0x807A	0xFF0000FF ;_initBlock_37+236
0x807E	0xF57F30C4 ;_initBlock_37+240
0x8082	0x15040AB5 ;_initBlock_37+244
0x8086	0xCC0003FC ;_initBlock_37+248
0x808A	0x21A030A1 ;_initBlock_37+252
0x808E	0x150303D1 ;_initBlock_37+256
0x8092	0x7E003FF0 ;_initBlock_37+260
0x8096	0x58BA1B64 ;_initBlock_37+264
0x809A	0x1501FE0B ;_initBlock_37+268
0x809E	0x5B03FFF0 ;_initBlock_37+272
0x80A2	0x6DC00F47 ;_initBlock_37+276
0x80A6	0x1501FE25 ;_initBlock_37+280
0x80AA	0x5B03FFF0 ;_initBlock_37+284
0x80AE	0x6DC00F47 ;_initBlock_37+288
0x80B2	0x15FDF625 ;_initBlock_37+292
0x80B6	0x390FFFC0 ;_initBlock_37+296
0x80BA	0x7FC3002B ;_initBlock_37+300
0x80BE	0x1503073F ;_initBlock_37+304
0x80C2	0xA2000FFC ;_initBlock_37+308
0x80C6	0x3FAF2681 ;_initBlock_37+312
0x80CA	0x15040AEE ;_initBlock_37+316
0x80CE	0xCC0003FC ;_initBlock_37+320
0x80D2	0x21A030A1 ;_initBlock_37+324
0x80D6	0x30C4FFD1 ;_initBlock_37+328 : RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433 at 0x80D7
0x80DA	0xB8B5F57F ;_initBlock_37+332
0x80DE	0x161705DE ;_initBlock_37+336
0x80E2	0x30C4FF0C ;_initBlock_37+340
0x80E6	0xB8B5F57F ;_initBlock_37+344
0x80EA	0x161705DE ;_initBlock_37+348
0x80EE	0x30A1CC0C ;_initBlock_37+352
0x80F2	0xB9D121A0 ;_initBlock_37+356
0x80F6	0x1205EAC9 ;_initBlock_37+360
0x80FA	0x30C4FF11 ;_initBlock_37+364
0x80FE	0xB8B5F57F ;_initBlock_37+368
0x8102	0x161705DE ;_initBlock_37+372
0x8106	0x30A1CC0C ;_initBlock_37+376
0x810A	0xB9D121A0 ;_initBlock_37+380
0x810E	0x1205EAC9 ;_initBlock_37+384
0x8112	0x1B647E11 ;_initBlock_37+388
0x8116	0xDD0B58BA ;_initBlock_37+392
0x811A	0xF6E6D6CE ;_initBlock_37+396
0x811E	0x0F475B00 ;_initBlock_37+400
0x8122	0xF4256DC0 ;_initBlock_37+404
0x8126	0xECDFD6DB ;_initBlock_37+408
0x812A	0x0F475BF7 ;_initBlock_37+412
0x812E	0xF4256DC0 ;_initBlock_37+416
0x8132	0xECDFD6DB ;_initBlock_37+420
0x8136	0x002B39F7 ;_initBlock_37+424
0x813A	0x0C3F7FC3 ;_initBlock_37+428
0x813E	0xE3DCDCEC ;_initBlock_37+432
0x8142	0x2681A2ED ;_initBlock_37+436
0x8146	0xC8EE3FAF ;_initBlock_37+440
0x814A	0x02F2DBC7 ;_initBlock_37+444
0x814E	0x30A1CC08 ;_initBlock_37+448
0x8152	0xB9D121A0 ;_initBlock_37+452
0x8156	0x1205EAC9 ;_initBlock_37+456
0x815A	0x05DEB811 ;_initBlock_37+460 : RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850 at 0x815B
0x815E	0x030C1617 ;_initBlock_37+464
0x8162	0x00FF1500 ;_initBlock_37+468
0x8166	0x05DEB800 ;_initBlock_37+472
0x816A	0x030C1617 ;_initBlock_37+476
0x816E	0x00FF1500 ;_initBlock_37+480
0x8172	0x1BFCC900 ;_initBlock_37+484
0x8176	0xFC010F1E ;_initBlock_37+488
0x817A	0x00FF15FD ;_initBlock_37+492
0x817E	0x05DEB80F ;_initBlock_37+496
0x8182	0x030C1617 ;_initBlock_37+500
0x8186	0x00FF1500 ;_initBlock_37+504
0x818A	0x1BFCC900 ;_initBlock_37+508
0x818E	0xFC010F1E ;_initBlock_37+512
0x8192	0x00FF15FD ;_initBlock_37+516
0x8196	0x05DEB80F ;_initBlock_37+520
0x819A	0x030C1617 ;_initBlock_37+524
0x819E	0x00FF1500 ;_initBlock_37+528
0x81A2	0xD6CEDD00 ;_initBlock_37+532
0x81A6	0x0300F6E6 ;_initBlock_37+536
0x81AA	0x3FF01503 ;_initBlock_37+540
0x81AE	0x15030300 ;_initBlock_37+544
0x81B2	0x7E003FF0 ;_initBlock_37+548
0x81B6	0x58BA1B64 ;_initBlock_37+552
0x81BA	0xDCEC0C0B ;_initBlock_37+556
0x81BE	0xF6EDE3DC ;_initBlock_37+560
0x81C2	0xFFC015FD ;_initBlock_37+564
0x81C6	0xDBC7C80F ;_initBlock_37+568
0x81CA	0x070802F2 ;_initBlock_37+572
0x81CE	0x0FFC1503 ;_initBlock_37+576
0x81D2	0xEAC9B900 ;_initBlock_37+580
0x81D6	0x0A111205 ;_initBlock_37+584
0x81DA	0x03FC1504 ;_initBlock_37+588
0x81DE	0x15000300 ;_initBlock_37+592 : RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850 at 0x81DF
0x81E2	0xFF0000FF ;_initBlock_37+596
0x81E6	0xF57F30C4 ;_initBlock_37+600
0x81EA	0x150003B5 ;_initBlock_37+604
0x81EE	0xFF0000FF ;_initBlock_37+608
0x81F2	0xF57F30C4 ;_initBlock_37+612
0x81F6	0x15FDFCB5 ;_initBlock_37+616
0x81FA	0xFF0F00FF ;_initBlock_37+620
0x81FE	0xCF510FBA ;_initBlock_37+624
0x8202	0x150003A9 ;_initBlock_37+628
0x8206	0xFF0000FF ;_initBlock_37+632
0x820A	0xF57F30C4 ;_initBlock_37+636
0x820E	0x15FDFCB5 ;_initBlock_37+640
0x8212	0xFF0F00FF ;_initBlock_37+644
0x8216	0xCF510FBA ;_initBlock_37+648
0x821A	0x150003A9 ;_initBlock_37+652
0x821E	0xFF0000FF ;_initBlock_37+656
0x8222	0xF57F30C4 ;_initBlock_37+660
0x8226	0x150303B5 ;_initBlock_37+664
0x822A	0x7E003FF0 ;_initBlock_37+668
0x822E	0x58BA1B64 ;_initBlock_37+672
0x8232	0x15FDF60B ;_initBlock_37+676
0x8236	0x390FFFC0 ;_initBlock_37+680
0x823A	0x7FC3002B ;_initBlock_37+684
0x823E	0x1503073F ;_initBlock_37+688
0x8242	0xA2000FFC ;_initBlock_37+692
0x8246	0x3FAF2681 ;_initBlock_37+696
0x824A	0x15040AEE ;_initBlock_37+700
0x824E	0xCC0003FC ;_initBlock_37+704
0x8252	0x21A030A1 ;_initBlock_37+708
0x8256	0x000000D1 ;_initBlock_37+712
0x825A	0x00000000 ;_initBlock_37+716
0x825E	0x00000000 ;_initBlock_37+720
0x8262	0x30C4FF00 ;_initBlock_37+724 : RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850 at 0x8263
0x8266	0xB8B5F57F ;_initBlock_37+728
0x826A	0x161705DE ;_initBlock_37+732
0x826E	0x30C4FF0C ;_initBlock_37+736
0x8272	0xB8B5F57F ;_initBlock_37+740
0x8276	0x161705DE ;_initBlock_37+744
0x827A	0x0FBAFF0C ;_initBlock_37+748
0x827E	0xC9A9CF51 ;_initBlock_37+752
0x8282	0x0F1E1BFC ;_initBlock_37+756
0x8286	0x30C4FF01 ;_initBlock_37+760
0x828A	0xB8B5F57F ;_initBlock_37+764
0x828E	0x161705DE ;_initBlock_37+768
0x8292	0x0FBAFF0C ;_initBlock_37+772
0x8296	0xC9A9CF51 ;_initBlock_37+776
0x829A	0x0F1E1BFC ;_initBlock_37+780
0x829E	0x30C4FF01 ;_initBlock_37+784
0x82A2	0xB8B5F57F ;_initBlock_37+788
0x82A6	0x161705DE ;_initBlock_37+792
0x82AA	0x1B647E0C ;_initBlock_37+796
0x82AE	0xDD0B58BA ;_initBlock_37+800
0x82B2	0xF6E6D6CE ;_initBlock_37+804
0x82B6	0x1B647E00 ;_initBlock_37+808
0x82BA	0xDD0B58BA ;_initBlock_37+812
0x82BE	0xF6E6D6CE ;_initBlock_37+816
0x82C2	0x002B3900 ;_initBlock_37+820
0x82C6	0x0C3F7FC3 ;_initBlock_37+824
0x82CA	0xE3DCDCEC ;_initBlock_37+828
0x82CE	0x2681A2ED ;_initBlock_37+832
0x82D2	0xC8EE3FAF ;_initBlock_37+836
0x82D6	0x02F2DBC7 ;_initBlock_37+840
0x82DA	0x30A1CC08 ;_initBlock_37+844
0x82DE	0xB9D121A0 ;_initBlock_37+848
0x82E2	0x1205EAC9 ;_initBlock_37+852
0x82E6	0x07000311 ;_initBlock_37+856 : RF_MODEM_MOD_TYPE_12 at 0x82E7
0x82EA	0x04C01200 ;_initBlock_37+860
0x82EE	0x00C0C62D ;_initBlock_37+864
0x82F2	0x07000300 ;_initBlock_37+868
0x82F6	0x04802500 ;_initBlock_37+872
0x82FA	0x00C0C62D ;_initBlock_37+876
0x82FE	0x07000300 ;_initBlock_37+880
0x8302	0x04004B00 ;_initBlock_37+884
0x8306	0x00C0C62D ;_initBlock_37+888
0x830A	0x07000300 ;_initBlock_37+892
0x830E	0x04009600 ;_initBlock_37+896
0x8312	0x00C0C62D ;_initBlock_37+900
0x8316	0x07000300 ;_initBlock_37+904
0x831A	0x04002C01 ;_initBlock_37+908
0x831E	0x00C0C62D ;_initBlock_37+912
0x8322	0x07000301 ;_initBlock_37+916
0x8326	0x08002C01 ;_initBlock_37+920
0x832A	0x00C0C62D ;_initBlock_37+924
0x832E	0x07000301 ;_initBlock_37+928
0x8332	0x08005802 ;_initBlock_37+932
0x8336	0x00C0C62D ;_initBlock_37+936
0x833A	0x07000301 ;_initBlock_37+940
0x833E	0x08008403 ;_initBlock_37+944
0x8342	0x00C0C62D ;_initBlock_37+948
0x8346	0x07000301 ;_initBlock_37+952
0x834A	0x01001027 ;_initBlock_37+956
0x834E	0x0080C3C9 ;_initBlock_37+960
0x8352	0x07000301 ;_initBlock_37+964
0x8356	0x01404B4C ;_initBlock_37+968
0x835A	0x0080C3C9 ;_initBlock_37+972
0x835E	0x0700031B ;_initBlock_37+976
0x8362	0x04D00700 ;_initBlock_37+980
0x8366	0x00C0C62D ;_initBlock_37+984
0x836A	0xD602A400 ;_initBlock_37+988 : RF_MODEM_OOK_CNT1_11_433 at 0x836B
0x836E	0x01AD0083 ;_initBlock_37+992
0x8372	0x000CFF80 ;_initBlock_37+996
0x8376	0x83D602A4 ;_initBlock_37+1000
0x837A	0x8001AD00 ;_initBlock_37+1004
0x837E	0xA4000CFF ;_initBlock_37+1008
0x8382	0x0003D603 ;_initBlock_37+1012
0x8386	0xFF8001CC ;_initBlock_37+1016
0x838A	0x03A4000C ;_initBlock_37+1020
0x838E	0xCC0003D6 ;_initBlock_37+1024
0x8392	0x0CFF8001 ;_initBlock_37+1028
0x8396	0xD603A400 ;_initBlock_37+1032
0x839A	0x01000103 ;_initBlock_37+1036
0x839E	0x000CFF80 ;_initBlock_37+1040
0x83A2	0x03D603A4 ;_initBlock_37+1044
0x83A6	0x80018000 ;_initBlock_37+1048
0x83AA	0xA4000CFF ;_initBlock_37+1052
0x83AE	0x0003D603 ;_initBlock_37+1056
0x83B2	0xFF800140 ;_initBlock_37+1060
0x83B6	0x03A4000C ;_initBlock_37+1064
0x83BA	0x2B0003D6 ;_initBlock_37+1068
0x83BE	0x0CFF8001 ;_initBlock_37+1072
0x83C2	0xD603A400 ;_initBlock_37+1076
0x83C6	0x01D50003 ;_initBlock_37+1080
0x83CA	0x000CFF80 ;_initBlock_37+1084
0x83CE	0x03D603A4 ;_initBlock_37+1088
0x83D2	0x8001D500 ;_initBlock_37+1092
0x83D6	0xA4000CFF ;_initBlock_37+1096
0x83DA	0x0281D602 ;_initBlock_37+1100
0x83DE	0xFF8001B4 ;_initBlock_37+1104
0x83E2	0x000C ;_initBlock_37+1108
; end of _initBlock_37
;DriverRF4463PROMain.c,229 :: _RF_MODEM_OOK_CNT1_11_850 [121]
0x83E4	0x81D602A4 ;_RF_MODEM_OOK_CNT1_11_850+0
0x83E8	0x80019B03 ;_RF_MODEM_OOK_CNT1_11_850+4
0x83EC	0xA4020CFF ;_RF_MODEM_OOK_CNT1_11_850+8
0x83F0	0x0083D602 ;_RF_MODEM_OOK_CNT1_11_850+12
0x83F4	0xFF8001E7 ;_RF_MODEM_OOK_CNT1_11_850+16
0x83F8	0x02A4020C ;_RF_MODEM_OOK_CNT1_11_850+20
0x83FC	0xE70083D6 ;_RF_MODEM_OOK_CNT1_11_850+24
0x8400	0x0CFF8001 ;_RF_MODEM_OOK_CNT1_11_850+28
0x8404	0xD603A402 ;_RF_MODEM_OOK_CNT1_11_850+32
0x8408	0x01110103 ;_RF_MODEM_OOK_CNT1_11_850+36
0x840C	0x020CFF80 ;_RF_MODEM_OOK_CNT1_11_850+40
0x8410	0x03D603A4 ;_RF_MODEM_OOK_CNT1_11_850+44
0x8414	0x80015501 ;_RF_MODEM_OOK_CNT1_11_850+48
0x8418	0xA4020CFF ;_RF_MODEM_OOK_CNT1_11_850+52
0x841C	0x0103D603 ;_RF_MODEM_OOK_CNT1_11_850+56
0x8420	0xFF800100 ;_RF_MODEM_OOK_CNT1_11_850+60
0x8424	0x03A4020C ;_RF_MODEM_OOK_CNT1_11_850+64
0x8428	0x800003D6 ;_RF_MODEM_OOK_CNT1_11_850+68
0x842C	0x0CFF8001 ;_RF_MODEM_OOK_CNT1_11_850+72
0x8430	0xD603A402 ;_RF_MODEM_OOK_CNT1_11_850+76
0x8434	0x01800003 ;_RF_MODEM_OOK_CNT1_11_850+80
0x8438	0x020CFF80 ;_RF_MODEM_OOK_CNT1_11_850+84
0x843C	0x03D603A4 ;_RF_MODEM_OOK_CNT1_11_850+88
0x8440	0x8001D500 ;_RF_MODEM_OOK_CNT1_11_850+92
0x8444	0xA4020CFF ;_RF_MODEM_OOK_CNT1_11_850+96
0x8448	0x0003D603 ;_RF_MODEM_OOK_CNT1_11_850+100
0x844C	0xFF8001D5 ;_RF_MODEM_OOK_CNT1_11_850+104
0x8450	0x02A4020C ;_RF_MODEM_OOK_CNT1_11_850+108
0x8454	0xB40281D6 ;_RF_MODEM_OOK_CNT1_11_850+112
0x8458	0x0CFF8001 ;_RF_MODEM_OOK_CNT1_11_850+116
0x845C	0x02 ;_RF_MODEM_OOK_CNT1_11_850+120
; end of _RF_MODEM_OOK_CNT1_11_850
;__Lib_GPIO_32F4xx_Defs.c,760 :: __GPIO_MODULE_SPI3_PC10_11_12 [108]
0x8460	0x0000062A ;__GPIO_MODULE_SPI3_PC10_11_12+0
0x8464	0x0000062B ;__GPIO_MODULE_SPI3_PC10_11_12+4
0x8468	0x0000062C ;__GPIO_MODULE_SPI3_PC10_11_12+8
0x846C	0xFFFFFFFF ;__GPIO_MODULE_SPI3_PC10_11_12+12
0x8470	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+16
0x8474	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+20
0x8478	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+24
0x847C	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+28
0x8480	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+32
0x8484	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+36
0x8488	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+40
0x848C	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+44
0x8490	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+48
0x8494	0x00000818 ;__GPIO_MODULE_SPI3_PC10_11_12+52
0x8498	0x00000818 ;__GPIO_MODULE_SPI3_PC10_11_12+56
0x849C	0x00000818 ;__GPIO_MODULE_SPI3_PC10_11_12+60
0x84A0	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+64
0x84A4	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+68
0x84A8	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+72
0x84AC	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+76
0x84B0	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+80
0x84B4	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+84
0x84B8	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+88
0x84BC	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+92
0x84C0	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+96
0x84C4	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+100
0x84C8	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+104
; end of __GPIO_MODULE_SPI3_PC10_11_12
;__Lib_GPIO_32F4xx_Defs.c,797 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x84CC	0x00000709 ;__GPIO_MODULE_USART1_PA9_10+0
0x84D0	0x0000070A ;__GPIO_MODULE_USART1_PA9_10+4
0x84D4	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x84D8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x84DC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x84E0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x84E4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x84E8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x84EC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x84F0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x84F4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x84F8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x84FC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x8500	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x8504	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+56
0x8508	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x850C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x8510	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x8514	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x8518	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x851C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x8520	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x8524	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x8528	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x852C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x8530	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x8534	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;,0 :: _initBlock_41 [198]
; Containing: RF_MODEM_BCR_OSR_1_9_850 [99]
;             RF_MODEM_AGC_WINDOW_SIZE_9_850 [99]
0x8538	0xA7000D03 ;_initBlock_41+0 : RF_MODEM_BCR_OSR_1_9_850 at 0x8538
0x853C	0x025400C6 ;_initBlock_41+4
0x8540	0x000D03C2 ;_initBlock_41+8
0x8544	0x5400C6A7 ;_initBlock_41+12
0x8548	0x8701C202 ;_initBlock_41+16
0x854C	0x008B4F01 ;_initBlock_41+20
0x8550	0x00C202A8 ;_initBlock_41+24
0x8554	0x179F02C3 ;_initBlock_41+28
0x8558	0x00029301 ;_initBlock_41+32
0x855C	0x3E056200 ;_initBlock_41+36
0x8560	0x0204052D ;_initBlock_41+40
0x8564	0x07410000 ;_initBlock_41+44
0x8568	0xFF0744DD ;_initBlock_41+48
0x856C	0x41000002 ;_initBlock_41+52
0x8570	0x0744DD07 ;_initBlock_41+56
0x8574	0x000002FF ;_initBlock_41+60
0x8578	0x44DD0741 ;_initBlock_41+64
0x857C	0x0002FF07 ;_initBlock_41+68
0x8580	0x5E047500 ;_initBlock_41+72
0x8584	0x029A057B ;_initBlock_41+76
0x8588	0x083C0000 ;_initBlock_41+80
0x858C	0xFF078988 ;_initBlock_41+84
0x8590	0xAA030002 ;_initBlock_41+88
0x8594	0x00CF8B00 ;_initBlock_41+92
0x8598	0x11C20246 ;_initBlock_41+96 : RF_MODEM_AGC_WINDOW_SIZE_9_850 at 0x859B
0x859C	0x0200ABAB ;_initBlock_41+100
0x85A0	0x2B00FFFF ;_initBlock_41+104
0x85A4	0x00ABAB11 ;_initBlock_41+108
0x85A8	0x00FFFF02 ;_initBlock_41+112
0x85AC	0x5656112B ;_initBlock_41+116
0x85B0	0x55D50200 ;_initBlock_41+120
0x85B4	0x2B112A00 ;_initBlock_41+124
0x85B8	0x6A02002B ;_initBlock_41+128
0x85BC	0x112900AB ;_initBlock_41+132
0x85C0	0x02001515 ;_initBlock_41+136
0x85C4	0x2800AB42 ;_initBlock_41+140
0x85C8	0x000E0E11 ;_initBlock_41+144
0x85CC	0x00552102 ;_initBlock_41+148
0x85D0	0x0E0E1128 ;_initBlock_41+152
0x85D4	0xAB100200 ;_initBlock_41+156
0x85D8	0x0E112800 ;_initBlock_41+160
0x85DC	0x1002000E ;_initBlock_41+164
0x85E0	0x222800AB ;_initBlock_41+168
0x85E4	0x1A000D0D ;_initBlock_41+172
0x85E8	0x28000032 ;_initBlock_41+176
0x85EC	0x00070722 ;_initBlock_41+180
0x85F0	0x009A191A ;_initBlock_41+184
0x85F4	0xCDCD1127 ;_initBlock_41+188
0x85F8	0x00301A00 ;_initBlock_41+192
0x85FC	0x2B00 ;_initBlock_41+196
; end of _initBlock_41
;,0 :: _initBlock_42 [198]
; Containing: RF_MODEM_BCR_OSR_1_9_433 [99]
;             RF_MODEM_AGC_WINDOW_SIZE_9_433 [99]
0x85FE	0xA7000D03 ;_initBlock_42+0 : RF_MODEM_BCR_OSR_1_9_433 at 0x85FE
0x8602	0x025400C6 ;_initBlock_42+4
0x8606	0x018701C2 ;_initBlock_42+8
0x860A	0xA8008B4F ;_initBlock_42+12
0x860E	0xC300C202 ;_initBlock_42+16
0x8612	0x02179F02 ;_initBlock_42+20
0x8616	0x0000021A ;_initBlock_42+24
0x861A	0x2D3E0562 ;_initBlock_42+28
0x861E	0x0002FF07 ;_initBlock_42+32
0x8622	0xDD074100 ;_initBlock_42+36
0x8626	0x02FF0744 ;_initBlock_42+40
0x862A	0x07410000 ;_initBlock_42+44
0x862E	0xFF0744DD ;_initBlock_42+48
0x8632	0x41000002 ;_initBlock_42+52
0x8636	0x0744DD07 ;_initBlock_42+56
0x863A	0x000002FF ;_initBlock_42+60
0x863E	0x44DD0741 ;_initBlock_42+64
0x8642	0x0002FF07 ;_initBlock_42+68
0x8646	0x5E047500 ;_initBlock_42+72
0x864A	0x029A057B ;_initBlock_42+76
0x864E	0x083C0000 ;_initBlock_42+80
0x8652	0xFF078988 ;_initBlock_42+84
0x8656	0xAA030002 ;_initBlock_42+88
0x865A	0x00CF8B00 ;_initBlock_42+92
0x865E	0x11C20246 ;_initBlock_42+96 : RF_MODEM_AGC_WINDOW_SIZE_9_433 at 0x8661
0x8662	0x1A00ABAB ;_initBlock_42+100
0x8666	0x2B000014 ;_initBlock_42+104
0x866A	0x00565611 ;_initBlock_42+108
0x866E	0x0000A01A ;_initBlock_42+112
0x8672	0x2B2B112A ;_initBlock_42+116
0x8676	0x00501A00 ;_initBlock_42+120
0x867A	0x15112900 ;_initBlock_42+124
0x867E	0x281A0015 ;_initBlock_42+128
0x8682	0x11280000 ;_initBlock_42+132
0x8686	0x1A000E0E ;_initBlock_42+136
0x868A	0x28005521 ;_initBlock_42+140
0x868E	0x000E0E11 ;_initBlock_42+144
0x8692	0x00AB101A ;_initBlock_42+148
0x8696	0x0E0E1128 ;_initBlock_42+152
0x869A	0x55081A00 ;_initBlock_42+156
0x869E	0x0E112800 ;_initBlock_42+160
0x86A2	0x051A000E ;_initBlock_42+164
0x86A6	0x2228008E ;_initBlock_42+168
0x86AA	0x1A000D0D ;_initBlock_42+172
0x86AE	0x28000032 ;_initBlock_42+176
0x86B2	0x00070722 ;_initBlock_42+180
0x86B6	0x009A191A ;_initBlock_42+184
0x86BA	0xCDCD1127 ;_initBlock_42+188
0x86BE	0x00301A00 ;_initBlock_42+192
0x86C2	0x2B00 ;_initBlock_42+196
; end of _initBlock_42
;DriverRF4463PROMain.c,88 :: _RF_MODEM_TX_RAMP_DELAY_8_850 [88]
0x86C4	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+0
0x86C8	0x203200C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+4
0x86CC	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+8
0x86D0	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+12
0x86D4	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+16
0x86D8	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+20
0x86DC	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+24
0x86E0	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+28
0x86E4	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+32
0x86E8	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+36
0x86EC	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+40
0x86F0	0x102000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+44
0x86F4	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+48
0x86F8	0x101000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+52
0x86FC	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+56
0x8700	0x201000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+60
0x8704	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+64
0x8708	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+68
0x870C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+72
0x8710	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+76
0x8714	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+80
0x8718	0x21720080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+84
; end of _RF_MODEM_TX_RAMP_DELAY_8_850
;DriverRF4463PROMain.c,74 :: _RF_MODEM_TX_RAMP_DELAY_8_433 [88]
0x871C	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+0
0x8720	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+4
0x8724	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+8
0x8728	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+12
0x872C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+16
0x8730	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+20
0x8734	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+24
0x8738	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+28
0x873C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+32
0x8740	0x10300080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+36
0x8744	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+40
0x8748	0x10200080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+44
0x874C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+48
0x8750	0x10100080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+52
0x8754	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+56
0x8758	0x20100080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+60
0x875C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+64
0x8760	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+68
0x8764	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+72
0x8768	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+76
0x876C	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+80
0x8770	0x21720080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+84
; end of _RF_MODEM_TX_RAMP_DELAY_8_433
;,0 :: _initBlock_45 [154]
; Containing: RF_SYNTH_PFDCP_CPFF_7 [77]
;             RF_MODEM_AFC_GEAR_7_850 [77]
0x8774	0x040B0E2C ;_initBlock_45+0 : RF_SYNTH_PFDCP_CPFF_7 at 0x8774
0x8778	0x2C03730C ;_initBlock_45+4
0x877C	0x0C040B0E ;_initBlock_45+8
0x8780	0x0E2C0373 ;_initBlock_45+12
0x8784	0x730C040B ;_initBlock_45+16
0x8788	0x0B0E2C03 ;_initBlock_45+20
0x878C	0x03730C04 ;_initBlock_45+24
0x8790	0x040B0E2C ;_initBlock_45+28
0x8794	0x2C03730C ;_initBlock_45+32
0x8798	0x0C040B0E ;_initBlock_45+36
0x879C	0x04340373 ;_initBlock_45+40
0x87A0	0x7007040B ;_initBlock_45+44
0x87A4	0x0B043403 ;_initBlock_45+48
0x87A8	0x03700704 ;_initBlock_45+52
0x87AC	0x050B0501 ;_initBlock_45+56
0x87B0	0x01030002 ;_initBlock_45+60
0x87B4	0x02050B05 ;_initBlock_45+64
0x87B8	0x0E2C0300 ;_initBlock_45+68
0x87BC	0x730C040B ;_initBlock_45+72
0x87C0	0x80360403 ;_initBlock_45+76 : RF_MODEM_AFC_GEAR_7_850 at 0x87C1
0x87C4	0x80305201 ;_initBlock_45+80
0x87C8	0x03803604 ;_initBlock_45+84
0x87CC	0x04807F30 ;_initBlock_45+88
0x87D0	0x17078036 ;_initBlock_45+92
0x87D4	0x12008010 ;_initBlock_45+96
0x87D8	0xB1042A80 ;_initBlock_45+100
0x87DC	0x801200A0 ;_initBlock_45+104
0x87E0	0xA09A0254 ;_initBlock_45+108
0x87E4	0xA8801200 ;_initBlock_45+112
0x87E8	0x00A08F01 ;_initBlock_45+116
0x87EC	0x01508112 ;_initBlock_45+120
0x87F0	0x2300A01F ;_initBlock_45+124
0x87F4	0x8400EF83 ;_initBlock_45+128
0x87F8	0x8F2300A0 ;_initBlock_45+132
0x87FC	0xE0C900FF ;_initBlock_45+136
0x8800	0xFF8F2300 ;_initBlock_45+140
0x8804	0x04E02301 ;_initBlock_45+144
0x8808	0x50018036 ;_initBlock_45+148
0x880C	0x8069 ;_initBlock_45+152
; end of _initBlock_45
;DriverRF4463PROMain.c,143 :: _RF_MODEM_AFC_GEAR_7_433 [77]
0x880E	0x03803604 ;_RF_MODEM_AFC_GEAR_7_433+0
0x8812	0x0480AF30 ;_RF_MODEM_AFC_GEAR_7_433+4
0x8816	0x14078036 ;_RF_MODEM_AFC_GEAR_7_433+8
0x881A	0x120080DD ;_RF_MODEM_AFC_GEAR_7_433+12
0x881E	0x3A042A80 ;_RF_MODEM_AFC_GEAR_7_433+16
0x8822	0x801200A0 ;_RF_MODEM_AFC_GEAR_7_433+20
0x8826	0xA05A0254 ;_RF_MODEM_AFC_GEAR_7_433+24
0x882A	0xA8801200 ;_RF_MODEM_AFC_GEAR_7_433+28
0x882E	0x00E06801 ;_RF_MODEM_AFC_GEAR_7_433+32
0x8832	0x01508112 ;_RF_MODEM_AFC_GEAR_7_433+36
0x8836	0x1200E020 ;_RF_MODEM_AFC_GEAR_7_433+40
0x883A	0x03019F82 ;_RF_MODEM_AFC_GEAR_7_433+44
0x883E	0x872300E0 ;_RF_MODEM_AFC_GEAR_7_433+48
0x8842	0xE07700DD ;_RF_MODEM_AFC_GEAR_7_433+52
0x8846	0xFF8F2300 ;_RF_MODEM_AFC_GEAR_7_433+56
0x884A	0x00E0C900 ;_RF_MODEM_AFC_GEAR_7_433+60
0x884E	0x01FF8F23 ;_RF_MODEM_AFC_GEAR_7_433+64
0x8852	0x3604E023 ;_RF_MODEM_AFC_GEAR_7_433+68
0x8856	0x69500180 ;_RF_MODEM_AFC_GEAR_7_433+72
0x885A	0x80 ;_RF_MODEM_AFC_GEAR_7_433+76
; end of _RF_MODEM_AFC_GEAR_7_433
;__Lib_Sprintf.c,66 :: __Lib_Sprintf__powers_ [52]
0x885C	0x3F800000 ;__Lib_Sprintf__powers_+0
0x8860	0x41200000 ;__Lib_Sprintf__powers_+4
0x8864	0x42C80000 ;__Lib_Sprintf__powers_+8
0x8868	0x447A0000 ;__Lib_Sprintf__powers_+12
0x886C	0x461C4000 ;__Lib_Sprintf__powers_+16
0x8870	0x47C35000 ;__Lib_Sprintf__powers_+20
0x8874	0x49742400 ;__Lib_Sprintf__powers_+24
0x8878	0x4B189680 ;__Lib_Sprintf__powers_+28
0x887C	0x4CBEBC20 ;__Lib_Sprintf__powers_+32
0x8880	0x4E6E6B28 ;__Lib_Sprintf__powers_+36
0x8884	0x501502F9 ;__Lib_Sprintf__powers_+40
0x8888	0x60AD78EC ;__Lib_Sprintf__powers_+44
0x888C	0x7149F2CA ;__Lib_Sprintf__powers_+48
; end of __Lib_Sprintf__powers_
;__Lib_Sprintf.c,83 :: __Lib_Sprintf__npowers_ [52]
0x8890	0x3F800000 ;__Lib_Sprintf__npowers_+0
0x8894	0x3DCCCCCD ;__Lib_Sprintf__npowers_+4
0x8898	0x3C23D70A ;__Lib_Sprintf__npowers_+8
0x889C	0x3A83126F ;__Lib_Sprintf__npowers_+12
0x88A0	0x38D1B717 ;__Lib_Sprintf__npowers_+16
0x88A4	0x3727C5AC ;__Lib_Sprintf__npowers_+20
0x88A8	0x358637BD ;__Lib_Sprintf__npowers_+24
0x88AC	0x33D6BF95 ;__Lib_Sprintf__npowers_+28
0x88B0	0x322BCC77 ;__Lib_Sprintf__npowers_+32
0x88B4	0x3089705F ;__Lib_Sprintf__npowers_+36
0x88B8	0x2EDBE6FF ;__Lib_Sprintf__npowers_+40
0x88BC	0x1E3CE508 ;__Lib_Sprintf__npowers_+44
0x88C0	0x0DA24260 ;__Lib_Sprintf__npowers_+48
; end of __Lib_Sprintf__npowers_
;,0 :: _initBlock_49 [34]
; Containing: ?ICS?lstr9_DriverRF4463PROMain [31]
;             ?ICS?lstr10_DriverRF4463PROMain [3]
0x88C4	0x5953205B ;_initBlock_49+0 : ?ICS?lstr9_DriverRF4463PROMain at 0x88C4
0x88C8	0x54532053 ;_initBlock_49+4
0x88CC	0x4632334D ;_initBlock_49+8
0x88D0	0x46525D20 ;_initBlock_49+12
0x88D4	0x64615220 ;_initBlock_49+16
0x88D8	0x72206F69 ;_initBlock_49+20
0x88DC	0x79646165 ;_initBlock_49+24
0x88E0	0x0D000A0D ;_initBlock_49+28 : ?ICS?lstr10_DriverRF4463PROMain at 0x88E3
0x88E4	0x000A ;_initBlock_49+32
; end of _initBlock_49
;DriverRF4463PROMain.c,0 :: ?ICS?lstr11_DriverRF4463PROMain [15]
0x88E6	0x5243205B ;?ICS?lstr11_DriverRF4463PROMain+0
0x88EA	0x205D2043 ;?ICS?lstr11_DriverRF4463PROMain+4
0x88EE	0x6C696146 ;?ICS?lstr11_DriverRF4463PROMain+8
0x88F2	0x000A0D ;?ICS?lstr11_DriverRF4463PROMain+12
; end of ?ICS?lstr11_DriverRF4463PROMain
;__Lib_Sprintf.c,115 :: __Lib_Sprintf_octpowers [48]
0x88F8	0x00000001 ;__Lib_Sprintf_octpowers+0
0x88FC	0x00000008 ;__Lib_Sprintf_octpowers+4
0x8900	0x00000040 ;__Lib_Sprintf_octpowers+8
0x8904	0x00000200 ;__Lib_Sprintf_octpowers+12
0x8908	0x00001000 ;__Lib_Sprintf_octpowers+16
0x890C	0x00008000 ;__Lib_Sprintf_octpowers+20
0x8910	0x00040000 ;__Lib_Sprintf_octpowers+24
0x8914	0x00200000 ;__Lib_Sprintf_octpowers+28
0x8918	0x01000000 ;__Lib_Sprintf_octpowers+32
0x891C	0x08000000 ;__Lib_Sprintf_octpowers+36
0x8920	0x40000000 ;__Lib_Sprintf_octpowers+40
0x8924	0x00000000 ;__Lib_Sprintf_octpowers+44
; end of __Lib_Sprintf_octpowers
;__Lib_Sprintf.c,104 :: __Lib_Sprintf_dpowers [40]
0x8928	0x00000001 ;__Lib_Sprintf_dpowers+0
0x892C	0x0000000A ;__Lib_Sprintf_dpowers+4
0x8930	0x00000064 ;__Lib_Sprintf_dpowers+8
0x8934	0x000003E8 ;__Lib_Sprintf_dpowers+12
0x8938	0x00002710 ;__Lib_Sprintf_dpowers+16
0x893C	0x000186A0 ;__Lib_Sprintf_dpowers+20
0x8940	0x000F4240 ;__Lib_Sprintf_dpowers+24
0x8944	0x00989680 ;__Lib_Sprintf_dpowers+28
0x8948	0x05F5E100 ;__Lib_Sprintf_dpowers+32
0x894C	0x3B9ACA00 ;__Lib_Sprintf_dpowers+36
; end of __Lib_Sprintf_dpowers
;__Lib_Sprintf.c,110 :: __Lib_Sprintf_hexpowers [32]
0x8950	0x00000001 ;__Lib_Sprintf_hexpowers+0
0x8954	0x00000010 ;__Lib_Sprintf_hexpowers+4
0x8958	0x00000100 ;__Lib_Sprintf_hexpowers+8
0x895C	0x00001000 ;__Lib_Sprintf_hexpowers+12
0x8960	0x00010000 ;__Lib_Sprintf_hexpowers+16
0x8964	0x00100000 ;__Lib_Sprintf_hexpowers+20
0x8968	0x01000000 ;__Lib_Sprintf_hexpowers+24
0x896C	0x10000000 ;__Lib_Sprintf_hexpowers+28
; end of __Lib_Sprintf_hexpowers
;,0 :: _initBlock_54 [86]
; Containing: ?lstr_3_DriverRF4463PROMain [31]
;             ?lstr_5_DriverRF4463PROMain [28]
;             ?lstr_4_DriverRF4463PROMain [27]
0x8970	0x5453205B ;_initBlock_54+0 : ?lstr_3_DriverRF4463PROMain at 0x8970
0x8974	0x53555441 ;_initBlock_54+4
0x8978	0x44205D20 ;_initBlock_54+8
0x897C	0x4D494345 ;_initBlock_54+12
0x8980	0x50204C41 ;_initBlock_54+16
0x8984	0x5245574F ;_initBlock_54+20
0x8988	0x6425203A ;_initBlock_54+24
0x898C	0x5B000A0D ;_initBlock_54+28 : ?lstr_5_DriverRF4463PROMain at 0x898F
0x8990	0x41545320 ;_initBlock_54+32
0x8994	0x20535554 ;_initBlock_54+36
0x8998	0x4144205D ;_initBlock_54+40
0x899C	0x52204154 ;_initBlock_54+44
0x89A0	0x3A455441 ;_initBlock_54+48
0x89A4	0x756C2520 ;_initBlock_54+52
0x89A8	0x5B000A0D ;_initBlock_54+56 : ?lstr_4_DriverRF4463PROMain at 0x89AB
0x89AC	0x41545320 ;_initBlock_54+60
0x89B0	0x20535554 ;_initBlock_54+64
0x89B4	0x4142205D ;_initBlock_54+68
0x89B8	0x203A444E ;_initBlock_54+72
0x89BC	0x20756C25 ;_initBlock_54+76
0x89C0	0x0D7A484B ;_initBlock_54+80
0x89C4	0x000A ;_initBlock_54+84
; end of _initBlock_54
;,0 :: _initBlock_55 [50]
; Containing: ?lstr_7_DriverRF4463PROMain [25]
;             ?lstr_6_DriverRF4463PROMain [25]
0x89C6	0x5453205B ;_initBlock_55+0 : ?lstr_7_DriverRF4463PROMain at 0x89C6
0x89CA	0x53555441 ;_initBlock_55+4
0x89CE	0x42205D20 ;_initBlock_55+8
0x89D2	0x25203A57 ;_initBlock_55+12
0x89D6	0x4B20756C ;_initBlock_55+16
0x89DA	0x0A0D7A48 ;_initBlock_55+20
0x89DE	0x53205B00 ;_initBlock_55+24 : ?lstr_6_DriverRF4463PROMain at 0x89DF
0x89E2	0x55544154 ;_initBlock_55+28
0x89E6	0x205D2053 ;_initBlock_55+32
0x89EA	0x4E414843 ;_initBlock_55+36
0x89EE	0x3A4C454E ;_initBlock_55+40
0x89F2	0x0D642520 ;_initBlock_55+44
0x89F6	0x000A ;_initBlock_55+48
; end of _initBlock_55
;,0 :: _initBlock_56 [36]
; Containing: ?ICS?lstr1_DriverRF4463PROMain [19]
;             hexs [17]
0x89F8	0x4155205B ;_initBlock_56+0 : ?ICS?lstr1_DriverRF4463PROMain at 0x89F8
0x89FC	0x20315452 ;_initBlock_56+4
0x8A00	0x5854205D ;_initBlock_56+8
0x8A04	0x544E4920 ;_initBlock_56+12
0x8A08	0x30000A0D ;_initBlock_56+16 : hexs at 0x8A0B
0x8A0C	0x34333231 ;_initBlock_56+20
0x8A10	0x38373635 ;_initBlock_56+24
0x8A14	0x63626139 ;_initBlock_56+28
0x8A18	0x00666564 ;_initBlock_56+32
; end of _initBlock_56
;,0 :: _initBlock_57 [32]
; Containing: hexb [17]
;             tx_test_aa_data [14]
;             ?ICSStrToLong_counter_L0 [1]
0x8A1C	0x33323130 ;_initBlock_57+0 : hexb at 0x8A1C
0x8A20	0x37363534 ;_initBlock_57+4
0x8A24	0x42413938 ;_initBlock_57+8
0x8A28	0x46454443 ;_initBlock_57+12
0x8A2C	0xAAAAAA00 ;_initBlock_57+16 : tx_test_aa_data at 0x8A2D
0x8A30	0xAAAAAAAA ;_initBlock_57+20
0x8A34	0xAAAAAAAA ;_initBlock_57+24
0x8A38	0x00AAAAAA ;_initBlock_57+28 : ?ICSStrToLong_counter_L0 at 0x8A3B
; end of _initBlock_57
;__Lib_Conversions.c,0 :: ?ICSStrToLong_buf_str_L0 [10]
0x8A3C	0x00000000 ;?ICSStrToLong_buf_str_L0+0
0x8A40	0x00000000 ;?ICSStrToLong_buf_str_L0+4
0x8A44	0x0000 ;?ICSStrToLong_buf_str_L0+8
; end of ?ICSStrToLong_buf_str_L0
;__Lib_Conversions.c,0 :: ?ICS__Lib_Conversions_Forward_Input_multiplier_L0 [8]
0x8A48	0x00000001 ;?ICS__Lib_Conversions_Forward_Input_multiplier_L0+0
0x8A4C	0x00000000 ;?ICS__Lib_Conversions_Forward_Input_multiplier_L0+4
; end of ?ICS__Lib_Conversions_Forward_Input_multiplier_L0
;DriverRF4463PROMain.c,375 :: _RF_FRR_CTL_A_MODE_4_data [8]
0x8A50	0x00040211 ;_RF_FRR_CTL_A_MODE_4_data+0
0x8A54	0x00000000 ;_RF_FRR_CTL_A_MODE_4_data+4
; end of _RF_FRR_CTL_A_MODE_4_data
;,0 :: _initBlock_61 [12]
; Containing: RF_POWER_UP_data [7]
;             RF_MODEM_AGC_CONTROL_1_data [5]
0x8A58	0x01000102 ;_initBlock_61+0 : RF_POWER_UP_data at 0x8A58
0x8A5C	0x1180C3C9 ;_initBlock_61+4 : RF_MODEM_AGC_CONTROL_1_data at 0x8A5F
0x8A60	0xE2350120 ;_initBlock_61+8
; end of _initBlock_61
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0188      [22]    _isdigit
0x01A0     [364]    __Lib_Sprintf_scale
0x030C      [16]    _Get_Fosc_kHz
0x031C     [506]    __Div_64x64_U
0x0518     [248]    __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
0x0610     [192]    __Lib_Sprintf_fround
0x06D0      [28]    _strlen
0x06EC     [132]    _RCC_GetClocksFrequency
0x0770      [70]    _GPIO_Alternate_Function_Enable
0x07B8      [72]    _check_cts
0x0800      [30]    __Lib_UART_123_45_6_UARTx_Write
0x0820     [120]    __Lib_Conversions_Forward_Input
0x0898    [5118]    __Lib_Sprintf__doprntf
0x1C98     [284]    _StrToShort
0x1DB4      [96]    _vUSARTStartMEMtoMEMZero
0x1E14     [116]    _spi_write
0x1E88      [52]    _memcmp
0x1EBC      [30]    _toupper
0x1EDC     [100]    _vRF4463RxStart
0x1F40      [72]    _ucRF4463ChecksumGenerator
0x1F88     [180]    _StrToLong
0x203C      [50]    __Lib_UART_123_45_6_UARTx_Write_Text
0x2070      [52]    _sprintf
0x20A4     [288]    _StrToInt
0x21C4      [26]    _vRF4463MainApplyChanges
0x21E0      [84]    _vRF4463EnableRxInterrupt
0x2234     [112]    _vRF4463RxStartTest
0x22A4      [66]    __Lib_SPI_123_SPIx_Init_Advanced
0x22E8     [660]    __Lib_UART_123_45_6_UARTx_Init_Advanced
0x257C     [168]    _GPIO_Clk_Enable
0x2624     [132]    _vInitDMAUSART1_TX
0x26A8      [40]    _UART1_Init_Advanced
0x26D0      [28]    _UART1_Write_Text
0x26EC     [568]    _GPIO_Config
0x2924     [148]    _vUSARTDMAMeToMemZero
0x29B8     [148]    _vUSARTDMAMemToMem
0x2A4C     [182]    _vRF4463GPIO_SET
0x2B04     [188]    _spi_write_fifo
0x2BC0      [44]    _vRF4463FifoReset
0x2BEC     [120]    _NVIC_IntEnable
0x2C64      [76]    _vRF4463TxStart
0x2CB0      [76]    _vRF4463EnableTxInterrupt
0x2CFC      [84]    _SPI3_Init_Advanced
0x2D50      [56]    _ucRf4463SPIByte
0x2D88      [92]    _vUSARTStartMEMtoMEM
0x2DE4     [192]    _spi_read
0x2EA4      [30]    _vUSARTCleanBuffer
0x2EC4      [60]    _vRF4463RxInit
0x2F00     [604]    _rf_init_freq
0x315C    [3772]    _vRF4463MainCommandProcessor
0x4018      [92]    _vRF4463TxCont
0x4074     [132]    _spi_read_fifo
0x40F8      [20]    ___CC2DW
0x410C      [76]    __Lib_System_4XX_SystemClockSetDefault
0x4158      [28]    _GPIO_Digital_Output
0x4174      [58]    ___FillZeros
0x41B0     [128]    _vUSART1Start_TX
0x4230     [116]    _vUSARTReceivedFromUSART1
0x42A8     [176]    _VRF4463SDNReset
0x4358    [2948]    _vRF4463Init
0x4EDC      [74]    _vRF4463ClearInterrupts
0x4F28      [50]    _vRF4463PartInfo
0x4F5C      [88]    _InitTimer2
0x4FB4      [24]    _GPIO_Digital_Input
0x4FD0     [216]    _vRF4463TxData
0x50A8      [52]    _vSPI3Init
0x50DC      [72]    _vRF4463MainSetTXString
0x5124      [92]    _vUSARTConfigUSART1
0x5180     [340]    _vUARTISR
0x52D4      [36]    _Timer2_interrupt
0x52F8      [48]    _Int_SPI3
0x5328     [132]    _DMA2Strm4_interrupt
0x53AC     [132]    _DMA2Strm1_interrupt
0x5430     [132]    _DMA2Strm7_interrupt
0x54B4     [864]    __Lib_System_4XX_InitialSetUpRCCRCC2
0x5818     [884]    _main
0x5B8C      [36]    __Lib_System_4XX_InitialSetUpFosc
0x5BB0      [42]    ___EnableFPU
0x5BDC       [8]    ___GenExcept
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [4]    FARG_FloatToStr_fnum
0x0000       [8]    FARG_LongDoubleToStr_dnum
0x20000000    [4096]    _ucUSARTActiveBuffer1
0x20001000       [4]    _ulUSARTActiveBuffer1BytesReceived
0x20001004    [4096]    _ucUSART1RXBuffer
0x20002004       [4]    _ulUSART1ByteReceived
0x20002008       [4]    _fUSART1Buffer
0x2000200C      [10]    _CMD_RADIO_POWER_SET
0x20002016      [40]    _ANS_COMMAND_VALUE_ACCEPTED
0x2000203E      [32]    _ANS_COMMAND_VALUE_OUT_OF_RANGE
0x2000205E       [9]    _CMD_RADIO_BAND_SET
0x20002067       [9]    _CMD_RADIO_RATE_SET
0x20002070      [12]    _CMD_RADIO_CHANNEL_SET
0x2000207C       [1]    _ucRF4463FreqChannel
0x2000207D       [7]    _CMD_RADIO_BW_SET
0x20002084       [4]    _ulRF4463Step
0x20002088       [9]    _CMD_RADIO_MODE_SET
0x20002091       [1]    _ucUSARTNull
0x20002092       [5]    _ARG_RADIO_MODE_STBY
0x20002097      [34]    _ANS_COMMAND_MODE_STBY
0x200020B9       [8]    _ARG_RADIO_MODE_TX_CONT
0x200020C1      [34]    _ANS_COMMAND_MODE_TX_CONT
0x200020E3       [8]    _ARG_RADIO_MODE_RX_CONT
0x200020EB      [34]    _ANS_COMMAND_MODE_RX_CONT
0x2000210D      [10]    _ARG_RADIO_MODE_TX_MASTER
0x20002117      [36]    _ANS_COMMAND_MODE_TX_MASTER
0x2000213B       [9]    _ARG_RADIO_MODE_RX_SLAVE
0x20002144      [35]    _ANS_COMMAND_MODE_RX_SLAVE
0x20002167      [12]    _CMD_RADIO_PACKET_SEND
0x20002173      [66]    _ucRF4463TXdata
0x200021B5       [1]    _ucRF4463SendMessage
0x200021B6      [25]    _ANS_COMMAND_WRONG_MODE
0x200021CF      [11]    _CMD_RADIO_GET_STATUS
0x200021DA      [37]    _ANS_STATUS_REPORT
0x200021FF      [12]    _CMD_RADIO_MATCH_BYTE_1_SET
0x2000220B       [1]    _ucRF4463ByteMatch1
0x2000220C       [1]    _ucRF4463MatchEnabled
0x2000220D       [1]    _ucRF4463MatchEnableReg
0x2000220E      [12]    _CMD_RADIO_MATCH_BYTE_2_SET
0x2000221A       [1]    _ucRF4463ByteMatch2
0x2000221B      [12]    _CMD_RADIO_MATCH_BYTE_3_SET
0x20002227       [1]    _ucRF4463ByteMatch3
0x20002228      [12]    _CMD_RADIO_MATCH_BYTE_4_SET
0x20002234       [1]    _ucRF4463ByteMatch4
0x20002235      [11]    _CMD_RADIO_MATCH_MASK_1_SET
0x20002240       [1]    _ucRF4463ByteMask1
0x20002241      [11]    _CMD_RADIO_MATCH_MASK_2_SET
0x2000224C       [1]    _ucRF4463ByteMask2
0x2000224D      [11]    _CMD_RADIO_MATCH_MASK_3_SET
0x20002258       [1]    _ucRF4463ByteMask3
0x20002259      [11]    _CMD_RADIO_MATCH_MASK_4_SET
0x20002264       [1]    _ucRF4463ByteMask4
0x20002265      [12]    _CMD_RADIO_MATCH_UNSET
0x20002271      [22]    _ANS_DEBUG_COMMAND_UNKNOWN
0x20002287       [1]    DriverRF4463PROMain_ucRF4463IRQ
0x20002288       [4]    _tx_cnt
0x2000228C       [4]    _rx_cnt
0x20002290       [1]    _ucSPI3ByteReceived
0x20002291      [16]    _RF_MODEM_MOD_TYPE_12_data
0x200022A1      [12]    _RF_MODEM_TX_RAMP_DELAY_8_data
0x200022AD      [13]    _RF_MODEM_AFC_GEAR_7_data
0x200022BA      [15]    _RF_MODEM_OOK_CNT1_11_data
0x200022C9      [16]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data
0x200022D9      [16]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data
0x200022E9      [16]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data
0x200022F9      [13]    _RF_MODEM_AGC_WINDOW_SIZE_9_data
0x20002306      [13]    _RF_MODEM_BCR_OSR_1_9_data
0x20002313      [11]    _RF_SYNTH_PFDCP_CPFF_7_data
0x2000231E       [7]    ?lstr1___Lib_Sprintf
0x20002325      [16]    __Lib_System_4XX_APBAHBPrescTable
0x20002335       [1]    _ucData1
0x20002336       [1]    _ucRF4463Power
0x20002337       [1]    _ucRF4463Freq3
0x20002338       [4]    vRF4463MainCommandProcessor_ulArgument_L0
0x2000233C       [1]    _ucRF4463Freq2
0x2000233D       [1]    _ucRF4463Freq1
0x2000233E       [1]    _ucRF4463Rate
0x2000233F       [1]    _ucRF4463Mode
0x20002340      [20]    _spi_read_buf
0x20002354       [1]    _Flag
0x20002355      [66]    _rx_buf
0x20002397       [1]    _reset_mode
0x20002398       [2]    _rf_timeout
0x2000239C       [4]    ___System_CLOCK_IN_KHZ
0x200023A0       [4]    _SPI_Rd_Ptr
0x200023A4       [4]    _SPI_Wr_Ptr
0x200023A8       [4]    __VOLTAGE_RANGE
0x200023AC       [4]    _UART_Wr_Ptr
0x200023B0       [4]    _UART_Rd_Ptr
0x200023B4       [4]    _UART_Rdy_Ptr
0x200023B8       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x42A4       [4]    ?ICSvRF4463MainCommandProcessor_ulArgument_L0
0x5BE4    [4096]    ?ICS_ucUSARTActiveBuffer1
0x6BE4       [4]    ?ICS_ulUSARTActiveBuffer1BytesReceived
0x6BE8    [4096]    ?ICS_ucUSART1RXBuffer
0x7BE8       [4]    ?ICS_ulUSART1ByteReceived
0x7BEC       [4]    ?ICS_fUSART1Buffer
0x7BF0      [10]    ?ICS_CMD_RADIO_POWER_SET
0x7BFA      [40]    ?ICS_ANS_COMMAND_VALUE_ACCEPTED
0x7C22      [32]    ?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE
0x7C42       [9]    ?ICS_CMD_RADIO_BAND_SET
0x7C4B       [9]    ?ICS_CMD_RADIO_RATE_SET
0x7C54      [12]    ?ICS_CMD_RADIO_CHANNEL_SET
0x7C60       [1]    ?ICS_ucRF4463FreqChannel
0x7C61       [7]    ?ICS_CMD_RADIO_BW_SET
0x7C68       [4]    ?ICS_ulRF4463Step
0x7C6C       [9]    ?ICS_CMD_RADIO_MODE_SET
0x7C75       [1]    ?ICS_ucUSARTNull
0x7C76       [5]    ?ICS_ARG_RADIO_MODE_STBY
0x7C7B      [34]    ?ICS_ANS_COMMAND_MODE_STBY
0x7C9D       [8]    ?ICS_ARG_RADIO_MODE_TX_CONT
0x7CA5      [34]    ?ICS_ANS_COMMAND_MODE_TX_CONT
0x7CC7       [8]    ?ICS_ARG_RADIO_MODE_RX_CONT
0x7CCF      [34]    ?ICS_ANS_COMMAND_MODE_RX_CONT
0x7CF1      [10]    ?ICS_ARG_RADIO_MODE_TX_MASTER
0x7CFB      [36]    ?ICS_ANS_COMMAND_MODE_TX_MASTER
0x7D1F       [9]    ?ICS_ARG_RADIO_MODE_RX_SLAVE
0x7D28      [35]    ?ICS_ANS_COMMAND_MODE_RX_SLAVE
0x7D4B      [12]    ?ICS_CMD_RADIO_PACKET_SEND
0x7D57      [66]    ?ICS_ucRF4463TXdata
0x7D99       [1]    ?ICS_ucRF4463SendMessage
0x7D9A      [25]    ?ICS_ANS_COMMAND_WRONG_MODE
0x7DB3      [11]    ?ICS_CMD_RADIO_GET_STATUS
0x7DBE      [37]    ?ICS_ANS_STATUS_REPORT
0x7DE3      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_1_SET
0x7DEF       [1]    ?ICS_ucRF4463ByteMatch1
0x7DF0       [1]    ?ICS_ucRF4463MatchEnabled
0x7DF1       [1]    ?ICS_ucRF4463MatchEnableReg
0x7DF2      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_2_SET
0x7DFE       [1]    ?ICS_ucRF4463ByteMatch2
0x7DFF      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_3_SET
0x7E0B       [1]    ?ICS_ucRF4463ByteMatch3
0x7E0C      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_4_SET
0x7E18       [1]    ?ICS_ucRF4463ByteMatch4
0x7E19      [11]    ?ICS_CMD_RADIO_MATCH_MASK_1_SET
0x7E24       [1]    ?ICS_ucRF4463ByteMask1
0x7E25      [11]    ?ICS_CMD_RADIO_MATCH_MASK_2_SET
0x7E30       [1]    ?ICS_ucRF4463ByteMask2
0x7E31      [11]    ?ICS_CMD_RADIO_MATCH_MASK_3_SET
0x7E3C       [1]    ?ICS_ucRF4463ByteMask3
0x7E3D      [11]    ?ICS_CMD_RADIO_MATCH_MASK_4_SET
0x7E48       [1]    ?ICS_ucRF4463ByteMask4
0x7E49      [12]    ?ICS_CMD_RADIO_MATCH_UNSET
0x7E55      [22]    ?ICS_ANS_DEBUG_COMMAND_UNKNOWN
0x7E6B       [1]    ?ICSDriverRF4463PROMain_ucRF4463IRQ
0x7E6C       [4]    ?ICS_tx_cnt
0x7E70       [4]    ?ICS_rx_cnt
0x7E74       [1]    ?ICS_ucSPI3ByteReceived
0x7E75      [16]    ?ICS_RF_MODEM_MOD_TYPE_12_data
0x7E85      [12]    ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data
0x7E91      [13]    ?ICS_RF_MODEM_AFC_GEAR_7_data
0x7E9E      [15]    ?ICS_RF_MODEM_OOK_CNT1_11_data
0x7EAD      [16]    ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data
0x7EBD      [16]    ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data
0x7ECD      [16]    ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data
0x7EDD      [13]    ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data
0x7EEA      [13]    ?ICS_RF_MODEM_BCR_OSR_1_9_data
0x7EF7      [11]    ?ICS_RF_SYNTH_PFDCP_CPFF_7_data
0x7F02       [7]    ?ICS?lstr1___Lib_Sprintf
0x7F09      [16]    ?ICS__Lib_System_4XX_APBAHBPrescTable
0x7F19       [1]    ?ICS_ucData1
0x7F1A      [18]    ?ICS?lstr8_DriverRF4463PROMain
0x7F2C      [32]    ?ICSvRF4463MainCommandProcessor_ucCommand_L0
0x7F4C      [64]    ?ICSvRF4463MainCommandProcessor_ucLongArgument_L0
0x7F8C       [1]    ?ICSvRF4463MainCommandProcessor_ucCounterBuffer_L0
0x7F8D       [1]    ?ICSvRF4463MainCommandProcessor_ucCounterCommand_L0
0x7F8E       [1]    ?ICSvRF4463MainCommandProcessor_ucCounterLongArgument_L0
0x7F8F      [64]    ?ICSvRF4463MainCommandProcessor_ucTXT_L0
0x7FCF     [132]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433
0x8053     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433
0x80D7     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433
0x815B     [132]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850
0x81DF     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850
0x8263     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850
0x82E7     [132]    _RF_MODEM_MOD_TYPE_12
0x836B     [121]    _RF_MODEM_OOK_CNT1_11_433
0x83E4     [121]    _RF_MODEM_OOK_CNT1_11_850
0x8460     [108]    __GPIO_MODULE_SPI3_PC10_11_12
0x84CC     [108]    __GPIO_MODULE_USART1_PA9_10
0x8538      [99]    _RF_MODEM_BCR_OSR_1_9_850
0x859B      [99]    _RF_MODEM_AGC_WINDOW_SIZE_9_850
0x85FE      [99]    _RF_MODEM_BCR_OSR_1_9_433
0x8661      [99]    _RF_MODEM_AGC_WINDOW_SIZE_9_433
0x86C4      [88]    _RF_MODEM_TX_RAMP_DELAY_8_850
0x871C      [88]    _RF_MODEM_TX_RAMP_DELAY_8_433
0x8774      [77]    _RF_SYNTH_PFDCP_CPFF_7
0x87C1      [77]    _RF_MODEM_AFC_GEAR_7_850
0x880E      [77]    _RF_MODEM_AFC_GEAR_7_433
0x885C      [52]    __Lib_Sprintf__powers_
0x8890      [52]    __Lib_Sprintf__npowers_
0x88C4      [31]    ?ICS?lstr9_DriverRF4463PROMain
0x88E3       [3]    ?ICS?lstr10_DriverRF4463PROMain
0x88E6      [15]    ?ICS?lstr11_DriverRF4463PROMain
0x88F8      [48]    __Lib_Sprintf_octpowers
0x8928      [40]    __Lib_Sprintf_dpowers
0x8950      [32]    __Lib_Sprintf_hexpowers
0x8970      [31]    ?lstr_3_DriverRF4463PROMain
0x898F      [28]    ?lstr_5_DriverRF4463PROMain
0x89AB      [27]    ?lstr_4_DriverRF4463PROMain
0x89C6      [25]    ?lstr_7_DriverRF4463PROMain
0x89DF      [25]    ?lstr_6_DriverRF4463PROMain
0x89F8      [19]    ?ICS?lstr1_DriverRF4463PROMain
0x8A0B      [17]    __Lib_Sprintf_hexs
0x8A1C      [17]    __Lib_Sprintf_hexb
0x8A2D      [14]    _tx_test_aa_data
0x8A3B       [1]    ?ICSStrToLong_counter_L0
0x8A3C      [10]    ?ICSStrToLong_buf_str_L0
0x8A48       [8]    ?ICS__Lib_Conversions_Forward_Input_multiplier_L0
0x8A50       [8]    _RF_FRR_CTL_A_MODE_4_data
0x8A58       [7]    _RF_POWER_UP_data
0x8A5F       [5]    _RF_MODEM_AGC_CONTROL_1_data
