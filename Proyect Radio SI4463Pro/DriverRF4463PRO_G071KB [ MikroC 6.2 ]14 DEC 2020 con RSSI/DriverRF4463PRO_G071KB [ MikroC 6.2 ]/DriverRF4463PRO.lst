;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 15/12/2020 06:16:46 p. m.
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x35010000  	13569
0x0008	0x3ACD0000  	15053
0x000C	0x3ACD0000  	15053
0x0010	0x3ACD0000  	15053
0x0014	0x3ACD0000  	15053
0x0018	0x3ACD0000  	15053
0x001C	0x3ACD0000  	15053
0x0020	0x3ACD0000  	15053
0x0024	0x3ACD0000  	15053
0x0028	0x3ACD0000  	15053
0x002C	0x3ACD0000  	15053
0x0030	0x3ACD0000  	15053
0x0034	0x3ACD0000  	15053
0x0038	0x3ACD0000  	15053
0x003C	0x3ACD0000  	15053
0x0040	0x3ACD0000  	15053
0x0044	0x3ACD0000  	15053
0x0048	0x3ACD0000  	15053
0x004C	0x3ACD0000  	15053
0x0050	0x3ACD0000  	15053
0x0054	0x3ACD0000  	15053
0x0058	0x3ACD0000  	15053
0x005C	0x3ACD0000  	15053
0x0060	0x3ACD0000  	15053
0x0064	0x3ACD0000  	15053
0x0068	0x3ACD0000  	15053
0x006C	0x34A90000  	13481
0x0070	0x34550000  	13397
0x0074	0x3ACD0000  	15053
0x0078	0x3A790000  	14969
0x007C	0x3ACD0000  	15053
0x0080	0x3ACD0000  	15053
0x0084	0x3ACD0000  	15053
0x0088	0x3ACD0000  	15053
0x008C	0x3ACD0000  	15053
0x0090	0x3ACD0000  	15053
0x0094	0x3ACD0000  	15053
0x0098	0x3ACD0000  	15053
0x009C	0x3ACD0000  	15053
0x00A0	0x3ACD0000  	15053
0x00A4	0x3ACD0000  	15053
0x00A8	0x3ACD0000  	15053
0x00AC	0x3ACD0000  	15053
0x00B0	0x32CD0000  	13005
0x00B4	0x3ACD0000  	15053
0x00B8	0x3ACD0000  	15053
0x00BC	0x3ACD0000  	15053
0x00C0	0x3ACD0000  	15053
0x00C4	0x3ACD0000  	15053
0x00C8	0x3ACD0000  	15053
0x00CC	0x3ACD0000  	15053
0x00D0	0x34250000  	13349
0x00D4	0x32F10000  	13041
0x00D8	0x3ACD0000  	15053
0x00DC	0x3ACD0000  	15053
0x00E0	0x3ACD0000  	15053
0x00E4	0x3ACD0000  	15053
0x00E8	0x3ACD0000  	15053
0x00EC	0x3ACD0000  	15053
0x00F0	0x3ACD0000  	15053
0x00F4	0x3ACD0000  	15053
0x00F8	0x3ACD0000  	15053
0x00FC	0x3ACD0000  	15053
0x0100	0x3ACD0000  	15053
0x0104	0x3ACD0000  	15053
0x0108	0x3ACD0000  	15053
0x010C	0x3ACD0000  	15053
0x0110	0x3ACD0000  	15053
0x0114	0x3ACD0000  	15053
0x0118	0x3ACD0000  	15053
0x011C	0x3ACD0000  	15053
0x0120	0x3ACD0000  	15053
0x0124	0x3ACD0000  	15053
0x0128	0x3ACD0000  	15053
0x012C	0x3ACD0000  	15053
0x0130	0x3ACD0000  	15053
0x0134	0x3ACD0000  	15053
0x0138	0x3ACD0000  	15053
0x013C	0x3ACD0000  	15053
0x0140	0x3ACD0000  	15053
0x0144	0x3ACD0000  	15053
0x0148	0x3ACD0000  	15053
0x014C	0x3ACD0000  	15053
; end of ____SysVT
_main:
;DriverRF4463PROMain.c, 519 :: 		void main() {
0x3500	0xB09C    SUB	SP, SP, #112
0x3502	0xF000FA03  BL	14604
0x3506	0xF003F96D  BL	26596
0x350A	0xF000FAAB  BL	14948
0x350E	0xF003F929  BL	26468
;DriverRF4463PROMain.c, 523 :: 		Delay_ms( 2000 );                    // delay de depuracion
0x3512	0xF24357FF  MOVW	R7, #13823
0x3516	0xF2C0176E  MOVT	R7, #366
L_main368:
0x351A	0x1E7F    SUBS	R7, R7, #1
0x351C	0xD1FD    BNE	L_main368
0x351E	0xBF00    NOP
0x3520	0xBF00    NOP
0x3522	0xBF00    NOP
0x3524	0xBF00    NOP
0x3526	0xBF00    NOP
;DriverRF4463PROMain.c, 528 :: 		GPIO_Digital_Output( &GPIOC_BASE, _GPIO_PINMASK_6 );
0x3528	0xF2400140  MOVW	R1, #64
0x352C	0x489B    LDR	R0, [PC, #620]
0x352E	0xF7FFF981  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 529 :: 		GPIO_Digital_Output( &GPIOC_BASE, _GPIO_PINMASK_7 );
0x3532	0xF2400180  MOVW	R1, #128
0x3536	0x4899    LDR	R0, [PC, #612]
0x3538	0xF7FFF97C  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 530 :: 		GPIO_Digital_Output( &GPIOC_BASE, _GPIO_PINMASK_8 );
0x353C	0xF2401100  MOVW	R1, #256
0x3540	0x4896    LDR	R0, [PC, #600]
0x3542	0xF7FFF977  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 535 :: 		GPIO_Digital_Input( &GPIOC_BASE, _GPIO_PINMASK_12 );          // nIRQ
0x3546	0xF2410100  MOVW	R1, #4096
0x354A	0x4894    LDR	R0, [PC, #592]
0x354C	0xF7FFF966  BL	_GPIO_Digital_Input+0
;DriverRF4463PROMain.c, 537 :: 		GPIO_Digital_Output( &GPIOB_BASE, _GPIO_PINMASK_12 );         // nSEL
0x3550	0xF2410100  MOVW	R1, #4096
0x3554	0x4892    LDR	R0, [PC, #584]
0x3556	0xF7FFF96D  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 538 :: 		GPIO_Digital_Output( &GPIOB_BASE, _GPIO_PINMASK_11 );         // SDN
0x355A	0xF6400100  MOVW	R1, #2048
0x355E	0x4890    LDR	R0, [PC, #576]
0x3560	0xF7FFF968  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 539 :: 		GPIO_Digital_Output( &GPIOC_BASE, _GPIO_PINMASK_11 );         // GPIO0
0x3564	0xF6400100  MOVW	R1, #2048
0x3568	0x488C    LDR	R0, [PC, #560]
0x356A	0xF7FFF963  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 540 :: 		GPIO_Digital_Output( &GPIOC_BASE, _GPIO_PINMASK_10 );         // GPIO1
0x356E	0xF2404100  MOVW	R1, #1024
0x3572	0x488A    LDR	R0, [PC, #552]
0x3574	0xF7FFF95E  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 545 :: 		RCC_APB2ENRbits.AFIOEN = 1;
0x3578	0x2101    MOVS	R1, #1
0x357A	0xB249    SXTB	R1, R1
0x357C	0x4889    LDR	R0, [PC, #548]
0x357E	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 549 :: 		AFIO_EXTICR4  |= 0x0002;
0x3580	0x4889    LDR	R0, [PC, #548]
0x3582	0x6800    LDR	R0, [R0, #0]
0x3584	0xF0400102  ORR	R1, R0, #2
0x3588	0x4887    LDR	R0, [PC, #540]
0x358A	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 553 :: 		EXTI_IMR.B12    |= 1;
0x358C	0x2101    MOVS	R1, #1
0x358E	0x4887    LDR	R0, [PC, #540]
0x3590	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 554 :: 		EXTI_FTSR.B12   |= 1;
0x3592	0x2101    MOVS	R1, #1
0x3594	0x4886    LDR	R0, [PC, #536]
0x3596	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 556 :: 		GPIO_Digital_Output( &GPIOB_BASE, _GPIO_PINMASK_7 );
0x3598	0xF2400180  MOVW	R1, #128
0x359C	0x4880    LDR	R0, [PC, #512]
0x359E	0xF7FFF949  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 557 :: 		Sound_Init( &GPIOB_ODR, 7 );
0x35A2	0x2107    MOVS	R1, #7
0x35A4	0x4883    LDR	R0, [PC, #524]
0x35A6	0xF7FFF88D  BL	_Sound_Init+0
;DriverRF4463PROMain.c, 558 :: 		Sound_Play( 1000, 100 );
0x35AA	0x2164    MOVS	R1, #100
0x35AC	0xF24030E8  MOVW	R0, #1000
0x35B0	0xF7FFF842  BL	_Sound_Play+0
;DriverRF4463PROMain.c, 678 :: 		nSEL = 1;
0x35B4	0x2101    MOVS	R1, #1
0x35B6	0xB249    SXTB	R1, R1
0x35B8	0x487F    LDR	R0, [PC, #508]
0x35BA	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 680 :: 		LED_RED      = 1;
0x35BC	0x487F    LDR	R0, [PC, #508]
0x35BE	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 681 :: 		LED_GREEN    = 1;
0x35C0	0x487F    LDR	R0, [PC, #508]
0x35C2	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 682 :: 		LED_BLUE     = 1;
0x35C4	0x487F    LDR	R0, [PC, #508]
0x35C6	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 684 :: 		Delay_ms( 100 );
0x35C8	0xF644777F  MOVW	R7, #20351
0x35CC	0xF2C00712  MOVT	R7, #18
L_main370:
0x35D0	0x1E7F    SUBS	R7, R7, #1
0x35D2	0xD1FD    BNE	L_main370
0x35D4	0xBF00    NOP
0x35D6	0xBF00    NOP
0x35D8	0xBF00    NOP
0x35DA	0xBF00    NOP
0x35DC	0xBF00    NOP
;DriverRF4463PROMain.c, 686 :: 		LED_RED      = 0;
0x35DE	0x2200    MOVS	R2, #0
0x35E0	0xB252    SXTB	R2, R2
0x35E2	0x4876    LDR	R0, [PC, #472]
0x35E4	0x6002    STR	R2, [R0, #0]
;DriverRF4463PROMain.c, 687 :: 		LED_GREEN    = 1;
0x35E6	0x2101    MOVS	R1, #1
0x35E8	0xB249    SXTB	R1, R1
0x35EA	0x4875    LDR	R0, [PC, #468]
0x35EC	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 688 :: 		LED_BLUE     = 0;
0x35EE	0x4875    LDR	R0, [PC, #468]
0x35F0	0x6002    STR	R2, [R0, #0]
;DriverRF4463PROMain.c, 690 :: 		InitTimer2();
0x35F2	0xF7FFF8BF  BL	_InitTimer2+0
;DriverRF4463PROMain.c, 693 :: 		vUSARTConfigUSART1( 115200 );  // configura todos las parametros de USART
0x35F6	0xF44F30E1  MOV	R0, #115200
0x35FA	0xF7FFF88D  BL	_vUSARTConfigUSART1+0
;DriverRF4463PROMain.c, 697 :: 		vSPI2Init();           // configura todos los parametros de SPI
0x35FE	0xF7FFF927  BL	_vSPI2Init+0
;DriverRF4463PROMain.c, 715 :: 		ucRF4463Freq3 = 9;
0x3602	0x2109    MOVS	R1, #9
0x3604	0x4870    LDR	R0, [PC, #448]
0x3606	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 716 :: 		ucRF4463Freq2 = 1;
0x3608	0x2101    MOVS	R1, #1
0x360A	0x4870    LDR	R0, [PC, #448]
0x360C	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 717 :: 		ucRF4463Freq1 = 5;
0x360E	0x2105    MOVS	R1, #5
0x3610	0x486F    LDR	R0, [PC, #444]
0x3612	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 720 :: 		ucRF4463Power = 127;            // 34
0x3614	0x217F    MOVS	R1, #127
0x3616	0x486F    LDR	R0, [PC, #444]
0x3618	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 722 :: 		ucRF4463Rate  = dr_2p4;                // BAUDRATE
0x361A	0x2101    MOVS	R1, #1
0x361C	0x486E    LDR	R0, [PC, #440]
0x361E	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 725 :: 		ucRF4463Mode  = master_mode;          // para transmision continua usar: tx_test_mode
0x3620	0x2100    MOVS	R1, #0
0x3622	0x486E    LDR	R0, [PC, #440]
0x3624	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 727 :: 		ucRF4463FreqChannel = 1;
0x3626	0x2101    MOVS	R1, #1
0x3628	0x486D    LDR	R0, [PC, #436]
0x362A	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 731 :: 		reset_mode = 0;
0x362C	0x2100    MOVS	R1, #0
0x362E	0x486D    LDR	R0, [PC, #436]
0x3630	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 736 :: 		vRF4463MainSetTXString();    // usada para establecer el encabezdo predeterminado
0x3632	0xF7FFF9FF  BL	_vRF4463MainSetTXString+0
;DriverRF4463PROMain.c, 737 :: 		VRF4463SDNReset();
0x3636	0xF7FFF9BB  BL	_VRF4463SDNReset+0
;DriverRF4463PROMain.c, 738 :: 		vRF4463Init();
0x363A	0xF7FFFA1B  BL	_vRF4463Init+0
;DriverRF4463PROMain.c, 739 :: 		vRF4463ClearInterrupts();
0x363E	0xF7FFF9FD  BL	_vRF4463ClearInterrupts+0
;DriverRF4463PROMain.c, 740 :: 		vRF4463PartInfo ();          // SOLICITA EL MODELO DEL RADIO
0x3642	0xF7FFF961  BL	_vRF4463PartInfo+0
;DriverRF4463PROMain.c, 742 :: 		LED_GREEN    = 0;
0x3646	0x2100    MOVS	R1, #0
0x3648	0xB249    SXTB	R1, R1
0x364A	0x485D    LDR	R0, [PC, #372]
0x364C	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 743 :: 		LED_BLUE     = 0;
0x364E	0x485D    LDR	R0, [PC, #372]
0x3650	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 748 :: 		vUSART1Start_TX( "[ SYS STM32F ]RF Radio ready\r\n", 30 );   // enviado por DMA
0x3652	0xF10D0B06  ADD	R11, SP, #6
0x3656	0xF10B0A1F  ADD	R10, R11, #31
0x365A	0xF8DFC18C  LDR	R12, [PC, #396]
0x365E	0xF7FFF8D3  BL	___CC2DW+0
0x3662	0xF10D0006  ADD	R0, SP, #6
0x3666	0x211E    MOVS	R1, #30
0x3668	0xF7FFF90C  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 753 :: 		if ( ucRF4463Mode == master_mode ) {
0x366C	0x485B    LDR	R0, [PC, #364]
0x366E	0x7800    LDRB	R0, [R0, #0]
0x3670	0xB960    CBNZ	R0, L_main372
;DriverRF4463PROMain.c, 754 :: 		UART1_Write_Text("[ Mode ] = Master\n\r");
0x3672	0xF10D0B25  ADD	R11, SP, #37
0x3676	0xF10B0A14  ADD	R10, R11, #20
0x367A	0xF8DFC170  LDR	R12, [PC, #368]
0x367E	0xF7FFF8C3  BL	___CC2DW+0
0x3682	0xF10D0025  ADD	R0, SP, #37
0x3686	0xF7FFF983  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 756 :: 		}
0x368A	0xE00F    B	L_main373
L_main372:
;DriverRF4463PROMain.c, 759 :: 		else if ( ucRF4463Mode == slave_mode ) {
0x368C	0x4853    LDR	R0, [PC, #332]
0x368E	0x7800    LDRB	R0, [R0, #0]
0x3690	0x2801    CMP	R0, #1
0x3692	0xD10B    BNE	L_main374
;DriverRF4463PROMain.c, 760 :: 		UART1_Write_Text("[ Mode ] = Slave\n\r");
0x3694	0xF10D0B39  ADD	R11, SP, #57
0x3698	0xF10B0A13  ADD	R10, R11, #19
0x369C	0xF8DFC150  LDR	R12, [PC, #336]
0x36A0	0xF7FFF8B2  BL	___CC2DW+0
0x36A4	0xF10D0039  ADD	R0, SP, #57
0x36A8	0xF7FFF972  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 761 :: 		}
L_main374:
L_main373:
;DriverRF4463PROMain.c, 763 :: 		while ( 1 ) {
L_main375:
;DriverRF4463PROMain.c, 766 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x36AC	0x4851    LDR	R0, [PC, #324]
0x36AE	0x6800    LDR	R0, [R0, #0]
0x36B0	0x2801    CMP	R0, #1
0x36B2	0xD101    BNE	L_main377
;DriverRF4463PROMain.c, 767 :: 		vUSARTReceivedFromUSART1();
0x36B4	0xF7FFF93A  BL	_vUSARTReceivedFromUSART1+0
;DriverRF4463PROMain.c, 768 :: 		}
L_main377:
;DriverRF4463PROMain.c, 779 :: 		if ( ucRF4463Mode == master_mode ) {
0x36B8	0x4848    LDR	R0, [PC, #288]
0x36BA	0x7800    LDRB	R0, [R0, #0]
0x36BC	0xB910    CBNZ	R0, L_main378
;DriverRF4463PROMain.c, 780 :: 		vRF4463TxData();
0x36BE	0xF7FEFF6D  BL	_vRF4463TxData+0
;DriverRF4463PROMain.c, 781 :: 		}
0x36C2	0xE00C    B	L_main379
L_main378:
;DriverRF4463PROMain.c, 784 :: 		else if ( ucRF4463Mode == slave_mode ) {
0x36C4	0x4845    LDR	R0, [PC, #276]
0x36C6	0x7800    LDRB	R0, [R0, #0]
0x36C8	0x2801    CMP	R0, #1
0x36CA	0xD102    BNE	L_main380
;DriverRF4463PROMain.c, 785 :: 		vRF4463RxInit();
0x36CC	0xF7FEFC12  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 786 :: 		}
0x36D0	0xE005    B	L_main381
L_main380:
;DriverRF4463PROMain.c, 789 :: 		else if ( ucRF4463Mode == rf_off ) {
0x36D2	0x4842    LDR	R0, [PC, #264]
0x36D4	0x7800    LDRB	R0, [R0, #0]
0x36D6	0x2804    CMP	R0, #4
0x36D8	0xD101    BNE	L_main382
;DriverRF4463PROMain.c, 790 :: 		vRF4463RxInit();
0x36DA	0xF7FEFC0B  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 791 :: 		}
L_main382:
L_main381:
L_main379:
;DriverRF4463PROMain.c, 794 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x36DE	0x483F    LDR	R0, [PC, #252]
0x36E0	0x7800    LDRB	R0, [R0, #0]
0x36E2	0x2802    CMP	R0, #2
0x36E4	0xD10D    BNE	L_main383
;DriverRF4463PROMain.c, 795 :: 		vRF4463TxCont();
0x36E6	0xF7FEFDD5  BL	_vRF4463TxCont+0
;DriverRF4463PROMain.c, 796 :: 		while ( 1 ) {
L_main384:
;DriverRF4463PROMain.c, 798 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x36EA	0x4842    LDR	R0, [PC, #264]
0x36EC	0x6800    LDR	R0, [R0, #0]
0x36EE	0x2801    CMP	R0, #1
0x36F0	0xD100    BNE	L_main386
;DriverRF4463PROMain.c, 799 :: 		break;
0x36F2	0xE006    B	L_main385
;DriverRF4463PROMain.c, 800 :: 		}
L_main386:
;DriverRF4463PROMain.c, 802 :: 		if ( !nIRQ ) {
0x36F4	0x4840    LDR	R0, [PC, #256]
0x36F6	0x6800    LDR	R0, [R0, #0]
0x36F8	0x2800    CMP	R0, #0
0x36FA	0xD101    BNE	L_main387
;DriverRF4463PROMain.c, 803 :: 		vRF4463TxCont();
0x36FC	0xF7FEFDCA  BL	_vRF4463TxCont+0
;DriverRF4463PROMain.c, 804 :: 		}
L_main387:
;DriverRF4463PROMain.c, 805 :: 		}
0x3700	0xE7F3    B	L_main384
L_main385:
;DriverRF4463PROMain.c, 806 :: 		}
L_main383:
;DriverRF4463PROMain.c, 808 :: 		if ( ucRF4463Mode == rx_test_mode ) {
0x3702	0x4836    LDR	R0, [PC, #216]
0x3704	0x7800    LDRB	R0, [R0, #0]
0x3706	0x2803    CMP	R0, #3
0x3708	0xD107    BNE	L_main388
;DriverRF4463PROMain.c, 809 :: 		vRF4463RxInit ();
0x370A	0xF7FEFBF3  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 810 :: 		while ( 1 ) {
L_main389:
;DriverRF4463PROMain.c, 812 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x370E	0x4839    LDR	R0, [PC, #228]
0x3710	0x6800    LDR	R0, [R0, #0]
0x3712	0x2801    CMP	R0, #1
0x3714	0xD100    BNE	L_main391
;DriverRF4463PROMain.c, 813 :: 		break;
0x3716	0xE000    B	L_main390
;DriverRF4463PROMain.c, 814 :: 		}
L_main391:
;DriverRF4463PROMain.c, 817 :: 		}
0x3718	0xE7F9    B	L_main389
L_main390:
;DriverRF4463PROMain.c, 818 :: 		}
L_main388:
;DriverRF4463PROMain.c, 820 :: 		if ( reset_mode == 0 ) {
0x371A	0x4832    LDR	R0, [PC, #200]
0x371C	0x7800    LDRB	R0, [R0, #0]
0x371E	0x2800    CMP	R0, #0
0x3720	0xF04080E4  BNE	L_main392
;DriverRF4463PROMain.c, 822 :: 		while ( 1 ) {
L_main393:
;DriverRF4463PROMain.c, 824 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x3724	0x4833    LDR	R0, [PC, #204]
0x3726	0x6800    LDR	R0, [R0, #0]
0x3728	0x2801    CMP	R0, #1
0x372A	0xD100    BNE	L_main395
;DriverRF4463PROMain.c, 825 :: 		break;
0x372C	0xE0DE    B	L_main394
;DriverRF4463PROMain.c, 826 :: 		}
L_main395:
;DriverRF4463PROMain.c, 828 :: 		if ( Flag.reach_1s ) {
0x372E	0x4933    LDR	R1, [PC, #204]
0x3730	0x6808    LDR	R0, [R1, #0]
0x3732	0xB140    CBZ	R0, L_main396
;DriverRF4463PROMain.c, 829 :: 		Flag.reach_1s = 0;
0x3734	0x2100    MOVS	R1, #0
0x3736	0xB249    SXTB	R1, R1
0x3738	0x4830    LDR	R0, [PC, #192]
0x373A	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 830 :: 		if ( ucRF4463Mode == master_mode ) {
0x373C	0x4827    LDR	R0, [PC, #156]
0x373E	0x7800    LDRB	R0, [R0, #0]
0x3740	0xB908    CBNZ	R0, L_main397
;DriverRF4463PROMain.c, 831 :: 		vRF4463TxData();
0x3742	0xF7FEFF2B  BL	_vRF4463TxData+0
;DriverRF4463PROMain.c, 832 :: 		}
L_main397:
;DriverRF4463PROMain.c, 833 :: 		}
L_main396:
;DriverRF4463PROMain.c, 836 :: 		if ( !Flag.is_tx ) {
0x3746	0x492E    LDR	R1, [PC, #184]
0x3748	0x6808    LDR	R0, [R1, #0]
0x374A	0x2800    CMP	R0, #0
0x374C	0xF04080CD  BNE	L_main398
;DriverRF4463PROMain.c, 837 :: 		if ( !nIRQ ) {          // !nIRQ
0x3750	0x4829    LDR	R0, [PC, #164]
0x3752	0x6800    LDR	R0, [R0, #0]
0x3754	0x2800    CMP	R0, #0
0x3756	0xF04080C8  BNE	L_main399
;DriverRF4463PROMain.c, 838 :: 		spi_read(9,0x22);  // aqui hay que leer  el RSSI
0x375A	0x2122    MOVS	R1, #34
0x375C	0x2009    MOVS	R0, #9
0x375E	0xF7FEFB7B  BL	_spi_read+0
;DriverRF4463PROMain.c, 839 :: 		iVal = ( float ) spi_read_buf[3];
0x3762	0x4828    LDR	R0, [PC, #160]
0x3764	0x7800    LDRB	R0, [R0, #0]
0x3766	0xF7FEFE45  BL	__UnsignedIntegralToFloat+0
0x376A	0x4927    LDR	R1, [PC, #156]
0x376C	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 840 :: 		rssi = ((iVal / 2) - 64) -70;
0x376E	0xF04F4280  MOV	R2, #1073741824
0x3772	0xF7FEFE85  BL	__Div_FP+0
0x3776	0xF04F4285  MOV	R2, #1115684864
0x377A	0xF7FEFDB9  BL	__Sub_FP+0
0x377E	0x4A23    LDR	R2, [PC, #140]
0x3780	0xF7FEFDB6  BL	__Sub_FP+0
0x3784	0x4922    LDR	R1, [PC, #136]
0x3786	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 841 :: 		vRF4463ClearInterrupts();
0x3788	0xF7FFF958  BL	_vRF4463ClearInterrupts+0
;DriverRF4463PROMain.c, 845 :: 		if ( ( spi_read_buf[ 4 ] & 0x08) == 0 ) { // crc error check
0x378C	0x4821    LDR	R0, [PC, #132]
0x378E	0x7800    LDRB	R0, [R0, #0]
0x3790	0xF0000008  AND	R0, R0, #8
0x3794	0xB2C0    UXTB	R0, R0
0x3796	0x2800    CMP	R0, #0
0x3798	0xF000B83E  B	#124
0x379C	0x10004001  	GPIOC_BASE+0
0x37A0	0x0C004001  	GPIOB_BASE+0
0x37A4	0x03004242  	RCC_APB2ENRbits+0
0x37A8	0x00144001  	AFIO_EXTICR4+0
0x37AC	0x80304220  	EXTI_IMR+0
0x37B0	0x81B04220  	EXTI_FTSR+0
0x37B4	0x0C0C4001  	GPIOB_ODR+0
0x37B8	0x81B04221  	GPIOB_ODRbits+0
0x37BC	0x01984222  	GPIOC_ODRbits+0
0x37C0	0x019C4222  	GPIOC_ODRbits+0
0x37C4	0x01A04222  	GPIOC_ODRbits+0
0x37C8	0x22A92000  	_ucRF4463Freq3+0
0x37CC	0x22AC2000  	_ucRF4463Freq2+0
0x37D0	0x22AD2000  	_ucRF4463Freq1+0
0x37D4	0x22AB2000  	_ucRF4463Power+0
0x37D8	0x22A82000  	_ucRF4463Rate+0
0x37DC	0x22AA2000  	_ucRF4463Mode+0
0x37E0	0x21192000  	_ucRF4463FreqChannel+0
0x37E4	0x22FB2000  	_reset_mode+0
0x37E8	0x62D00000  	?ICS?lstr3_DriverRF4463PROMain+0
0x37EC	0x62EF0000  	?ICS?lstr4_DriverRF4463PROMain+0
0x37F0	0x63030000  	?ICS?lstr5_DriverRF4463PROMain+0
0x37F4	0x20082000  	_fUSART1Buffer+0
0x37F8	0x01304222  	GPIOC_IDRbits+0
0x37FC	0x5F402204  	_Flag+0
0x3800	0x5F442204  	_Flag+0
0x3804	0x22972000  	_spi_read_buf+3
0x3808	0x22FC2000  	_iVal+0
0x380C	0x0000428C  	#1116471296
0x3810	0x22B02000  	_rssi+0
0x3814	0x22982000  	_spi_read_buf+4
0x3818	0xD154    BNE	L_main400
;DriverRF4463PROMain.c, 849 :: 		spi_read_fifo();
0x381A	0xF7FEFE01  BL	_spi_read_fifo+0
;DriverRF4463PROMain.c, 850 :: 		vRF4463FifoReset();
0x381E	0xF7FDFB69  BL	_vRF4463FifoReset+0
;DriverRF4463PROMain.c, 852 :: 		chksum = 0;
0x3822	0x2000    MOVS	R0, #0
0x3824	0xF88D0005  STRB	R0, [SP, #5]
;DriverRF4463PROMain.c, 853 :: 		for ( i = 4; i < payload_length - 1; i++ )                // Calculation Checksum
0x3828	0x2004    MOVS	R0, #4
0x382A	0xF88D0004  STRB	R0, [SP, #4]
L_main401:
0x382E	0xF89D0004  LDRB	R0, [SP, #4]
0x3832	0x2841    CMP	R0, #65
0x3834	0xDA0F    BGE	L_main402
;DriverRF4463PROMain.c, 854 :: 		chksum += rx_buf[ i ];
0x3836	0xF89D1004  LDRB	R1, [SP, #4]
0x383A	0x482D    LDR	R0, [PC, #180]
0x383C	0x1840    ADDS	R0, R0, R1
0x383E	0x7801    LDRB	R1, [R0, #0]
0x3840	0xF89D0005  LDRB	R0, [SP, #5]
0x3844	0x1840    ADDS	R0, R0, R1
0x3846	0xF88D0005  STRB	R0, [SP, #5]
;DriverRF4463PROMain.c, 853 :: 		for ( i = 4; i < payload_length - 1; i++ )                // Calculation Checksum
0x384A	0xF89D0004  LDRB	R0, [SP, #4]
0x384E	0x1C40    ADDS	R0, R0, #1
0x3850	0xF88D0004  STRB	R0, [SP, #4]
;DriverRF4463PROMain.c, 854 :: 		chksum += rx_buf[ i ];
0x3854	0xE7EB    B	L_main401
L_main402:
;DriverRF4463PROMain.c, 856 :: 		if ( ( chksum == rx_buf[ payload_length - 1 ] )&&( rx_buf[ 4 ] == 0x41 )) {
0x3856	0x4827    LDR	R0, [PC, #156]
0x3858	0x7801    LDRB	R1, [R0, #0]
0x385A	0xF89D0005  LDRB	R0, [SP, #5]
0x385E	0x4288    CMP	R0, R1
0x3860	0xD12D    BNE	L__main494
0x3862	0x4825    LDR	R0, [PC, #148]
0x3864	0x7800    LDRB	R0, [R0, #0]
0x3866	0x2841    CMP	R0, #65
0x3868	0xD129    BNE	L__main493
L__main492:
;DriverRF4463PROMain.c, 862 :: 		UART1_Write_Text("[ MENSAGGE ] = ");
0x386A	0xF10D0B4C  ADD	R11, SP, #76
0x386E	0xF10B0A10  ADD	R10, R11, #16
0x3872	0xF8DFC088  LDR	R12, [PC, #136]
0x3876	0xF7FEFFC7  BL	___CC2DW+0
0x387A	0xA813    ADD	R0, SP, #76
0x387C	0xF7FFF888  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 863 :: 		vUSART1Start_TX( rx_buf, payload_length );
0x3880	0x2142    MOVS	R1, #66
0x3882	0x481B    LDR	R0, [PC, #108]
0x3884	0xF7FEFFFE  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 864 :: 		vUSART1Start_TX("\r\n", 2);
0x3888	0x200D    MOVS	R0, #13
0x388A	0xF88D005C  STRB	R0, [SP, #92]
0x388E	0x200A    MOVS	R0, #10
0x3890	0xF88D005D  STRB	R0, [SP, #93]
0x3894	0x2000    MOVS	R0, #0
0x3896	0xF88D005E  STRB	R0, [SP, #94]
0x389A	0xA817    ADD	R0, SP, #92
0x389C	0x2102    MOVS	R1, #2
0x389E	0xF7FEFFF1  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 871 :: 		LED_GREEN ^= 1;                                        // Data received
0x38A2	0x4817    LDR	R0, [PC, #92]
0x38A4	0x6800    LDR	R0, [R0, #0]
0x38A6	0xF0800101  EOR	R1, R0, #1
0x38AA	0xB2C9    UXTB	R1, R1
0x38AC	0x4814    LDR	R0, [PC, #80]
0x38AE	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 872 :: 		rx_cnt++;
0x38B0	0x4914    LDR	R1, [PC, #80]
0x38B2	0x6808    LDR	R0, [R1, #0]
0x38B4	0x1C40    ADDS	R0, R0, #1
0x38B6	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 873 :: 		getRSSI();
0x38B8	0xF7FEFE34  BL	_getRSSI+0
;DriverRF4463PROMain.c, 878 :: 		}
0x38BC	0xE001    B	L_main407
;DriverRF4463PROMain.c, 856 :: 		if ( ( chksum == rx_buf[ payload_length - 1 ] )&&( rx_buf[ 4 ] == 0x41 )) {
L__main494:
L__main493:
;DriverRF4463PROMain.c, 880 :: 		vRF4463RxInit();    // The received data is wrong, you must continue to receive
0x38BE	0xF7FEFB19  BL	_vRF4463RxInit+0
L_main407:
;DriverRF4463PROMain.c, 881 :: 		}
0x38C2	0xE012    B	L_main408
L_main400:
;DriverRF4463PROMain.c, 884 :: 		vUSART1Start_TX("[ CRC ] Fail\r\n", 14 );
0x38C4	0xF10D0B5F  ADD	R11, SP, #95
0x38C8	0xF10B0A0F  ADD	R10, R11, #15
0x38CC	0xF8DFC038  LDR	R12, [PC, #56]
0x38D0	0xF7FEFF9A  BL	___CC2DW+0
0x38D4	0xF10D005F  ADD	R0, SP, #95
0x38D8	0x210E    MOVS	R1, #14
0x38DA	0xF7FEFFD3  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 885 :: 		VRF4463SDNReset();
0x38DE	0xF7FFF867  BL	_VRF4463SDNReset+0
;DriverRF4463PROMain.c, 886 :: 		vRF4463Init();
0x38E2	0xF7FFF8C7  BL	_vRF4463Init+0
;DriverRF4463PROMain.c, 887 :: 		vRF4463RxInit();
0x38E6	0xF7FEFB05  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 888 :: 		}
L_main408:
;DriverRF4463PROMain.c, 889 :: 		}
L_main399:
;DriverRF4463PROMain.c, 890 :: 		}
L_main398:
;DriverRF4463PROMain.c, 891 :: 		}
0x38EA	0xE71B    B	L_main393
L_main394:
;DriverRF4463PROMain.c, 892 :: 		}
L_main392:
;DriverRF4463PROMain.c, 893 :: 		}
0x38EC	0xE6DE    B	L_main375
;DriverRF4463PROMain.c, 894 :: 		}
L_end_main:
L__main_end_loop:
0x38EE	0xE7FE    B	L__main_end_loop
0x38F0	0x22B82000  	_rx_buf+0
0x38F4	0x22F92000  	_rx_buf+65
0x38F8	0x22BC2000  	_rx_buf+4
0x38FC	0x63160000  	?ICS?lstr6_DriverRF4463PROMain+0
0x3900	0x019C4222  	GPIOC_ODRbits+0
0x3904	0x22902000  	_rx_cnt+0
0x3908	0x63290000  	?ICS?lstr8_DriverRF4463PROMain+0
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x2808	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x280A	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x280E	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x2812	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x2816	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x2818	0xB001    ADD	SP, SP, #4
0x281A	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x27CC	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x27CE	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x27D2	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x27D6	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x27DA	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x27DC	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x27E0	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x27E2	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x27E4	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x27E6	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x27EA	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x27EE	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x27F0	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x27F4	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x27F6	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x27F8	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x27FC	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x2800	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x2802	0xB001    ADD	SP, SP, #4
0x2804	0x4770    BX	LR
; end of ___FillZeros
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x2834	0xB081    SUB	SP, SP, #4
0x2836	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x283A	0x4A04    LDR	R2, [PC, #16]
0x283C	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x283E	0xF7FEFBED  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x2842	0xF8DDE000  LDR	LR, [SP, #0]
0x2846	0xB001    ADD	SP, SP, #4
0x2848	0x4770    BX	LR
0x284A	0xBF00    NOP
0x284C	0x00140008  	#524308
; end of _GPIO_Digital_Output
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x101C	0xB081    SUB	SP, SP, #4
0x101E	0xF8CDE000  STR	LR, [SP, #0]
0x1022	0xB28C    UXTH	R4, R1
0x1024	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x1026	0x4B77    LDR	R3, [PC, #476]
0x1028	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x102C	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x102E	0x4618    MOV	R0, R3
0x1030	0xF7FFFDC2  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x1034	0xF1B40FFF  CMP	R4, #255
0x1038	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x103A	0x4B73    LDR	R3, [PC, #460]
0x103C	0x429D    CMP	R5, R3
0x103E	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x1040	0xF04F3333  MOV	R3, #858993459
0x1044	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x1046	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x1048	0x2D42    CMP	R5, #66
0x104A	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x104C	0xF04F3344  MOV	R3, #1145324612
0x1050	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x1052	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x1054	0xF64F73FF  MOVW	R3, #65535
0x1058	0x429C    CMP	R4, R3
0x105A	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x105C	0x4B6A    LDR	R3, [PC, #424]
0x105E	0x429D    CMP	R5, R3
0x1060	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x1062	0xF04F3333  MOV	R3, #858993459
0x1066	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x1068	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x106A	0xF04F3333  MOV	R3, #858993459
0x106E	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x1070	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x1072	0x2D42    CMP	R5, #66
0x1074	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x1076	0xF04F3344  MOV	R3, #1145324612
0x107A	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x107C	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x107E	0xF04F3344  MOV	R3, #1145324612
0x1082	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x1084	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x1086	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x1088	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x108A	0xF0050301  AND	R3, R5, #1
0x108E	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x1090	0x2100    MOVS	R1, #0
0x1092	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x1094	0xF0050302  AND	R3, R5, #2
0x1098	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x109A	0xF40573C0  AND	R3, R5, #384
0x109E	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x10A0	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x10A2	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x10A4	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x10A6	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x10A8	0xF0050304  AND	R3, R5, #4
0x10AC	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x10AE	0xF0050320  AND	R3, R5, #32
0x10B2	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x10B4	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x10B6	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x10B8	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x10BA	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x10BC	0xF0050308  AND	R3, R5, #8
0x10C0	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x10C2	0xF0050320  AND	R3, R5, #32
0x10C6	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x10C8	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x10CA	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x10CC	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x10CE	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x10D0	0x4B4E    LDR	R3, [PC, #312]
0x10D2	0xEA050303  AND	R3, R5, R3, LSL #0
0x10D6	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x10D8	0x2003    MOVS	R0, #3
0x10DA	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x10DC	0xF4057300  AND	R3, R5, #512
0x10E0	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x10E2	0x2002    MOVS	R0, #2
0x10E4	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x10E6	0xF4056380  AND	R3, R5, #1024
0x10EA	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x10EC	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x10EE	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x10F0	0xF005030C  AND	R3, R5, #12
0x10F4	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x10F6	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x10F8	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x10FA	0xF00403FF  AND	R3, R4, #255
0x10FE	0xB29B    UXTH	R3, R3
0x1100	0x2B00    CMP	R3, #0
0x1102	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x1104	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x1106	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x1108	0xFA1FF884  UXTH	R8, R4
0x110C	0x4632    MOV	R2, R6
0x110E	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x1110	0x2808    CMP	R0, #8
0x1112	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x1114	0xF04F0301  MOV	R3, #1
0x1118	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x111C	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x1120	0x42A3    CMP	R3, R4
0x1122	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x1124	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x1126	0xF04F030F  MOV	R3, #15
0x112A	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x112C	0x43DB    MVN	R3, R3
0x112E	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x1132	0xFA01F305  LSL	R3, R1, R5
0x1136	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x113A	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x113C	0xF4067381  AND	R3, R6, #258
0x1140	0xF5B37F81  CMP	R3, #258
0x1144	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x1146	0xF2020414  ADDW	R4, R2, #20
0x114A	0xF04F0301  MOV	R3, #1
0x114E	0x4083    LSLS	R3, R0
0x1150	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x1152	0xF0060382  AND	R3, R6, #130
0x1156	0x2B82    CMP	R3, #130
0x1158	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x115A	0xF2020410  ADDW	R4, R2, #16
0x115E	0xF04F0301  MOV	R3, #1
0x1162	0x4083    LSLS	R3, R0
0x1164	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x1166	0x462F    MOV	R7, R5
0x1168	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x116A	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x116C	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x116E	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x1170	0xFA1FF088  UXTH	R0, R8
0x1174	0x460F    MOV	R7, R1
0x1176	0x4631    MOV	R1, R6
0x1178	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x117A	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x117C	0x460F    MOV	R7, R1
0x117E	0x4629    MOV	R1, R5
0x1180	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x1182	0xF1B00FFF  CMP	R0, #255
0x1186	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x1188	0x1D33    ADDS	R3, R6, #4
0x118A	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x118E	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x1190	0x2A08    CMP	R2, #8
0x1192	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x1194	0xF2020408  ADDW	R4, R2, #8
0x1198	0xF04F0301  MOV	R3, #1
0x119C	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x11A0	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x11A4	0x42A3    CMP	R3, R4
0x11A6	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x11A8	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x11AA	0xF04F030F  MOV	R3, #15
0x11AE	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x11B0	0x43DB    MVN	R3, R3
0x11B2	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x11B6	0xFA07F305  LSL	R3, R7, R5
0x11BA	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x11BE	0xF4017381  AND	R3, R1, #258
0x11C2	0xF5B37F81  CMP	R3, #258
0x11C6	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x11C8	0xF2060514  ADDW	R5, R6, #20
0x11CC	0xF2020408  ADDW	R4, R2, #8
0x11D0	0xF04F0301  MOV	R3, #1
0x11D4	0x40A3    LSLS	R3, R4
0x11D6	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x11D8	0xF0010382  AND	R3, R1, #130
0x11DC	0x2B82    CMP	R3, #130
0x11DE	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x11E0	0xF2060510  ADDW	R5, R6, #16
0x11E4	0xF2020408  ADDW	R4, R2, #8
0x11E8	0xF04F0301  MOV	R3, #1
0x11EC	0x40A3    LSLS	R3, R4
0x11EE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x11F0	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x11F2	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x11F4	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x11F6	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x11F8	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x11FC	0xF8DDE000  LDR	LR, [SP, #0]
0x1200	0xB001    ADD	SP, SP, #4
0x1202	0x4770    BX	LR
0x1204	0xFC00FFFF  	#-1024
0x1208	0x00140008  	#524308
0x120C	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0BB8	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x0BBA	0x4919    LDR	R1, [PC, #100]
0x0BBC	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0BC0	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x0BC2	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x0BC4	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0BC6	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0BC8	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0BCA	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0BCC	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0BCE	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0BD0	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x0BD2	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x0BD4	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x0BD6	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0BD8	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0BDA	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0BDC	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0BDE	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x0BE2	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x0BE4	0x490F    LDR	R1, [PC, #60]
0x0BE6	0x4288    CMP	R0, R1
0x0BE8	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0BEA	0x490F    LDR	R1, [PC, #60]
0x0BEC	0x4288    CMP	R0, R1
0x0BEE	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0BF0	0x490E    LDR	R1, [PC, #56]
0x0BF2	0x4288    CMP	R0, R1
0x0BF4	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x0BF6	0x490E    LDR	R1, [PC, #56]
0x0BF8	0x4288    CMP	R0, R1
0x0BFA	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0BFC	0x490D    LDR	R1, [PC, #52]
0x0BFE	0x4288    CMP	R0, R1
0x0C00	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x0C02	0x490D    LDR	R1, [PC, #52]
0x0C04	0x4288    CMP	R0, R1
0x0C06	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x0C08	0x490C    LDR	R1, [PC, #48]
0x0C0A	0x4288    CMP	R0, R1
0x0C0C	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x0C0E	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x0C10	0x490B    LDR	R1, [PC, #44]
0x0C12	0x6809    LDR	R1, [R1, #0]
0x0C14	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0C18	0x4909    LDR	R1, [PC, #36]
0x0C1A	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x0C1C	0xB001    ADD	SP, SP, #4
0x0C1E	0x4770    BX	LR
0x0C20	0xFC00FFFF  	#-1024
0x0C24	0x08004001  	#1073809408
0x0C28	0x0C004001  	#1073810432
0x0C2C	0x10004001  	#1073811456
0x0C30	0x14004001  	#1073812480
0x0C34	0x18004001  	#1073813504
0x0C38	0x1C004001  	#1073814528
0x0C3C	0x20004001  	#1073815552
0x0C40	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Input:
;__Lib_GPIO_32F10x.c, 369 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x281C	0xB081    SUB	SP, SP, #4
0x281E	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 370 :: 		
0x2822	0xF04F0242  MOV	R2, #66
0x2826	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x2828	0xF7FEFBF8  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 371 :: 		
L_end_GPIO_Digital_Input:
0x282C	0xF8DDE000  LDR	LR, [SP, #0]
0x2830	0xB001    ADD	SP, SP, #4
0x2832	0x4770    BX	LR
; end of _GPIO_Digital_Input
_Sound_Init:
;__Lib_Sound.c, 10 :: 		
; snd_pin start address is: 4 (R1)
; snd_port start address is: 0 (R0)
0x26C4	0xB081    SUB	SP, SP, #4
0x26C6	0xF8CDE000  STR	LR, [SP, #0]
0x26CA	0x4683    MOV	R11, R0
0x26CC	0x468C    MOV	R12, R1
; snd_pin end address is: 4 (R1)
; snd_port end address is: 0 (R0)
; snd_port start address is: 44 (R11)
; snd_pin start address is: 48 (R12)
;__Lib_Sound.c, 14 :: 		
0x26CE	0x2201    MOVS	R2, #1
0x26D0	0xB212    SXTH	R2, R2
0x26D2	0xFA02F20C  LSL	R2, R2, R12
0x26D6	0xB212    SXTH	R2, R2
0x26D8	0xB211    SXTH	R1, R2
0x26DA	0x4658    MOV	R0, R11
0x26DC	0xF000F8AA  BL	_GPIO_Digital_Output+0
;__Lib_Sound.c, 17 :: 		
0x26E0	0x4A0A    LDR	R2, [PC, #40]
0x26E2	0xF8C2B000  STR	R11, [R2, #0]
;__Lib_Sound.c, 20 :: 		
0x26E6	0xF04F0201  MOV	R2, #1
0x26EA	0xFA02F30C  LSL	R3, R2, R12
; snd_pin end address is: 48 (R12)
0x26EE	0x4A08    LDR	R2, [PC, #32]
0x26F0	0x6013    STR	R3, [R2, #0]
;__Lib_Sound.c, 21 :: 		
0x26F2	0x43DB    MVN	R3, R3
0x26F4	0x4A07    LDR	R2, [PC, #28]
0x26F6	0x6013    STR	R3, [R2, #0]
;__Lib_Sound.c, 26 :: 		
0x26F8	0xF8DB2000  LDR	R2, [R11, #0]
0x26FC	0x401A    ANDS	R2, R3
0x26FE	0xF8CB2000  STR	R2, [R11, #0]
; snd_port end address is: 44 (R11)
;__Lib_Sound.c, 27 :: 		
L_end_Sound_Init:
0x2702	0xF8DDE000  LDR	LR, [SP, #0]
0x2706	0xB001    ADD	SP, SP, #4
0x2708	0x4770    BX	LR
0x270A	0xBF00    NOP
0x270C	0x23042000  	__Lib_Sound_soundPortAddr+0
0x2710	0x23082000  	__Lib_Sound_pinMask1+0
0x2714	0x230C2000  	__Lib_Sound_pinMask0+0
; end of _Sound_Init
_Sound_Play:
;__Lib_Sound.c, 30 :: 		
; duration_ms start address is: 4 (R1)
; freq_in_hz start address is: 0 (R0)
0x2638	0xB081    SUB	SP, SP, #4
0x263A	0xF8CDE000  STR	LR, [SP, #0]
0x263E	0xB28C    UXTH	R4, R1
0x2640	0xB281    UXTH	R1, R0
; duration_ms end address is: 4 (R1)
; freq_in_hz end address is: 0 (R0)
; freq_in_hz start address is: 4 (R1)
; duration_ms start address is: 16 (R4)
;__Lib_Sound.c, 35 :: 		
0x2642	0xF7FEFE41  BL	_Get_Fosc_kHz+0
0x2646	0xF24032E8  MOVW	R2, #1000
0x264A	0x4342    MULS	R2, R0, R2
;__Lib_Sound.c, 36 :: 		
0x264C	0xFBB2F1F1  UDIV	R1, R2, R1
; freq_in_hz end address is: 4 (R1)
;__Lib_Sound.c, 37 :: 		
0x2650	0x0849    LSRS	R1, R1, #1
; nc start address is: 4 (R1)
;__Lib_Sound.c, 40 :: 		
0x2652	0xF7FEFE39  BL	_Get_Fosc_kHz+0
0x2656	0xFB04F500  MUL	R5, R4, R0
; duration_ms end address is: 16 (R4)
0x265A	0x004A    LSLS	R2, R1, #1
0x265C	0xFBB5F5F2  UDIV	R5, R5, R2
; per_nc start address is: 20 (R5)
;__Lib_Sound.c, 42 :: 		
0x2660	0x220A    MOVS	R2, #10
0x2662	0xFBB1F1F2  UDIV	R1, R1, R2
; nc start address is: 4 (R1)
; nc end address is: 4 (R1)
; per_nc end address is: 20 (R5)
;__Lib_Sound.c, 45 :: 		
L_Sound_Play0:
; nc start address is: 4 (R1)
; nc end address is: 4 (R1)
; per_nc start address is: 20 (R5)
0x2666	0x2D00    CMP	R5, #0
0x2668	0xD919    BLS	L_Sound_Play1
; nc end address is: 4 (R1)
;__Lib_Sound.c, 47 :: 		
; nc start address is: 4 (R1)
0x266A	0x4C13    LDR	R4, [PC, #76]
0x266C	0x6822    LDR	R2, [R4, #0]
0x266E	0x6813    LDR	R3, [R2, #0]
0x2670	0x4A12    LDR	R2, [PC, #72]
0x2672	0x6812    LDR	R2, [R2, #0]
0x2674	0x4313    ORRS	R3, R2
0x2676	0x4622    MOV	R2, R4
0x2678	0x6812    LDR	R2, [R2, #0]
0x267A	0x6013    STR	R3, [R2, #0]
;__Lib_Sound.c, 48 :: 		
0x267C	0x4608    MOV	R0, R1
0x267E	0xF7FEFC2B  BL	_Delay_Cyc+0
;__Lib_Sound.c, 51 :: 		
0x2682	0x4C0D    LDR	R4, [PC, #52]
0x2684	0x6822    LDR	R2, [R4, #0]
0x2686	0x6813    LDR	R3, [R2, #0]
0x2688	0x4A0D    LDR	R2, [PC, #52]
0x268A	0x6812    LDR	R2, [R2, #0]
0x268C	0x4013    ANDS	R3, R2
0x268E	0x4622    MOV	R2, R4
0x2690	0x6812    LDR	R2, [R2, #0]
0x2692	0x6013    STR	R3, [R2, #0]
;__Lib_Sound.c, 52 :: 		
0x2694	0x4608    MOV	R0, R1
0x2696	0xF7FEFC1F  BL	_Delay_Cyc+0
;__Lib_Sound.c, 53 :: 		
0x269A	0x1E6D    SUBS	R5, R5, #1
;__Lib_Sound.c, 54 :: 		
; nc end address is: 4 (R1)
; per_nc end address is: 20 (R5)
0x269C	0xE7E3    B	L_Sound_Play0
L_Sound_Play1:
;__Lib_Sound.c, 55 :: 		
0x269E	0x4C06    LDR	R4, [PC, #24]
0x26A0	0x6822    LDR	R2, [R4, #0]
0x26A2	0x6813    LDR	R3, [R2, #0]
0x26A4	0x4A06    LDR	R2, [PC, #24]
0x26A6	0x6812    LDR	R2, [R2, #0]
0x26A8	0x4013    ANDS	R3, R2
0x26AA	0x4622    MOV	R2, R4
0x26AC	0x6812    LDR	R2, [R2, #0]
0x26AE	0x6013    STR	R3, [R2, #0]
;__Lib_Sound.c, 56 :: 		
L_end_Sound_Play:
0x26B0	0xF8DDE000  LDR	LR, [SP, #0]
0x26B4	0xB001    ADD	SP, SP, #4
0x26B6	0x4770    BX	LR
0x26B8	0x23042000  	__Lib_Sound_soundPortAddr+0
0x26BC	0x23082000  	__Lib_Sound_pinMask1+0
0x26C0	0x230C2000  	__Lib_Sound_pinMask0+0
; end of _Sound_Play
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
0x12C8	0xB081    SUB	SP, SP, #4
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x12CA	0x4802    LDR	R0, [PC, #8]
0x12CC	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x12CE	0xB001    ADD	SP, SP, #4
0x12D0	0x4770    BX	LR
0x12D2	0xBF00    NOP
0x12D4	0x23002000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_Delay_Cyc:
;__Lib_Delays.c, 66 :: 		void Delay_Cyc(unsigned long cycles_div_by_10){  // Cycles_div_by_10 parameter range: min = 1, max = 4294967295
0x0ED8	0xB081    SUB	SP, SP, #4
;__Lib_Delays.c, 71 :: 		nop.w
0x0EDA	0xF3AF8000  NOP
;__Lib_Delays.c, 72 :: 		subs R0,R0,#1
0x0EDE	0x1E40    SUBS	R0, R0, #1
;__Lib_Delays.c, 73 :: 		label1:
label1:
;__Lib_Delays.c, 74 :: 		subs R0,R0,#1
0x0EE0	0x1E40    SUBS	R0, R0, #1
;__Lib_Delays.c, 75 :: 		nop
0x0EE2	0xBF00    NOP
;__Lib_Delays.c, 76 :: 		nop
0x0EE4	0xBF00    NOP
;__Lib_Delays.c, 77 :: 		nop
0x0EE6	0xBF00    NOP
;__Lib_Delays.c, 78 :: 		nop
0x0EE8	0xBF00    NOP
;__Lib_Delays.c, 79 :: 		nop
0x0EEA	0xBF00    NOP
;__Lib_Delays.c, 80 :: 		nop
;__Lib_Delays.c, 81 :: 		nop
;__Lib_Delays.c, 82 :: 		bne label1
0x0EEC	0xD1F8    BNE	label1
;__Lib_Delays.c, 84 :: 		}
L_end_Delay_Cyc:
0x0EEE	0xB001    ADD	SP, SP, #4
0x0EF0	0x4770    BX	LR
; end of _Delay_Cyc
_InitTimer2:
;DriverRF4463PROMain.c, 489 :: 		void InitTimer2(){
0x2774	0xB081    SUB	SP, SP, #4
0x2776	0xF8CDE000  STR	LR, [SP, #0]
;DriverRF4463PROMain.c, 491 :: 		RCC_APB1ENR.TIM2EN = 1;
0x277A	0x2101    MOVS	R1, #1
0x277C	0xB249    SXTB	R1, R1
0x277E	0x480E    LDR	R0, [PC, #56]
0x2780	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 492 :: 		TIM2_CR1.CEN = 0;
0x2782	0x2100    MOVS	R1, #0
0x2784	0xB249    SXTB	R1, R1
0x2786	0x480D    LDR	R0, [PC, #52]
0x2788	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 496 :: 		TIM2_PSC = 674;
0x278A	0xF24021A2  MOVW	R1, #674
0x278E	0x480C    LDR	R0, [PC, #48]
0x2790	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 497 :: 		TIM2_ARR = 63999;
0x2792	0xF64F11FF  MOVW	R1, #63999
0x2796	0x480B    LDR	R0, [PC, #44]
0x2798	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 501 :: 		NVIC_IntEnable( IVT_INT_TIM2 );
0x279A	0xF240002C  MOVW	R0, #44
0x279E	0xF7FFFD07  BL	_NVIC_IntEnable+0
;DriverRF4463PROMain.c, 502 :: 		TIM2_DIER.UIE = 1;
0x27A2	0x2101    MOVS	R1, #1
0x27A4	0xB249    SXTB	R1, R1
0x27A6	0x4808    LDR	R0, [PC, #32]
0x27A8	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 503 :: 		TIM2_CR1.CEN = 1;
0x27AA	0x4804    LDR	R0, [PC, #16]
0x27AC	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 515 :: 		}
L_end_InitTimer2:
0x27AE	0xF8DDE000  LDR	LR, [SP, #0]
0x27B2	0xB001    ADD	SP, SP, #4
0x27B4	0x4770    BX	LR
0x27B6	0xBF00    NOP
0x27B8	0x03804242  	RCC_APB1ENR+0
0x27BC	0x00004200  	TIM2_CR1+0
0x27C0	0x00284000  	TIM2_PSC+0
0x27C4	0x002C4000  	TIM2_ARR+0
0x27C8	0x01804200  	TIM2_DIER+0
; end of _InitTimer2
_NVIC_IntEnable:
;__Lib_System_105_107.c, 156 :: 		
; ivt start address is: 0 (R0)
0x21B0	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_105_107.c, 168 :: 		
0x21B2	0x2804    CMP	R0, #4
0x21B4	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 173 :: 		
0x21B6	0x4919    LDR	R1, [PC, #100]
0x21B8	0x6809    LDR	R1, [R1, #0]
0x21BA	0xF4413280  ORR	R2, R1, #65536
0x21BE	0x4917    LDR	R1, [PC, #92]
0x21C0	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 174 :: 		
0x21C2	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_105_107.c, 175 :: 		
; ivt start address is: 0 (R0)
0x21C4	0x2805    CMP	R0, #5
0x21C6	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 180 :: 		
0x21C8	0x4914    LDR	R1, [PC, #80]
0x21CA	0x6809    LDR	R1, [R1, #0]
0x21CC	0xF4413200  ORR	R2, R1, #131072
0x21D0	0x4912    LDR	R1, [PC, #72]
0x21D2	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 181 :: 		
0x21D4	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_105_107.c, 182 :: 		
; ivt start address is: 0 (R0)
0x21D6	0x2806    CMP	R0, #6
0x21D8	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 187 :: 		
0x21DA	0x4910    LDR	R1, [PC, #64]
0x21DC	0x6809    LDR	R1, [R1, #0]
0x21DE	0xF4412280  ORR	R2, R1, #262144
0x21E2	0x490E    LDR	R1, [PC, #56]
0x21E4	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 188 :: 		
0x21E6	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_105_107.c, 189 :: 		
; ivt start address is: 0 (R0)
0x21E8	0x280F    CMP	R0, #15
0x21EA	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 194 :: 		
0x21EC	0x490C    LDR	R1, [PC, #48]
0x21EE	0x6809    LDR	R1, [R1, #0]
0x21F0	0xF0410202  ORR	R2, R1, #2
0x21F4	0x490A    LDR	R1, [PC, #40]
0x21F6	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 195 :: 		
0x21F8	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_105_107.c, 196 :: 		
; ivt start address is: 0 (R0)
0x21FA	0x2810    CMP	R0, #16
0x21FC	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_105_107.c, 201 :: 		
0x21FE	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x2202	0x0961    LSRS	R1, R4, #5
0x2204	0x008A    LSLS	R2, R1, #2
0x2206	0x4907    LDR	R1, [PC, #28]
0x2208	0x188B    ADDS	R3, R1, R2
;__Lib_System_105_107.c, 202 :: 		
0x220A	0xF004021F  AND	R2, R4, #31
0x220E	0xF04F0101  MOV	R1, #1
0x2212	0x4091    LSLS	R1, R2
0x2214	0x6019    STR	R1, [R3, #0]
;__Lib_System_105_107.c, 203 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_105_107.c, 204 :: 		
L_end_NVIC_IntEnable:
0x2216	0xB001    ADD	SP, SP, #4
0x2218	0x4770    BX	LR
0x221A	0xBF00    NOP
0x221C	0xED24E000  	SCB_SHCRS+0
0x2220	0xE010E000  	STK_CTRL+0
0x2224	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_vUSARTConfigUSART1:
;uarthandler.c, 470 :: 		void vUSARTConfigUSART1 ( unsigned long ulBaudRate ) {
; ulBaudRate start address is: 0 (R0)
0x2718	0xB081    SUB	SP, SP, #4
0x271A	0xF8CDE000  STR	LR, [SP, #0]
; ulBaudRate end address is: 0 (R0)
; ulBaudRate start address is: 0 (R0)
;uarthandler.c, 472 :: 		UART1_Init_Advanced( ulBaudRate, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10 );
0x271E	0x4911    LDR	R1, [PC, #68]
0x2720	0xB402    PUSH	(R1)
0x2722	0xF2400300  MOVW	R3, #0
0x2726	0xF2400200  MOVW	R2, #0
0x272A	0xF2400100  MOVW	R1, #0
; ulBaudRate end address is: 0 (R0)
0x272E	0xF7FFFAC1  BL	_UART1_Init_Advanced+0
0x2732	0xB001    ADD	SP, SP, #4
;uarthandler.c, 473 :: 		Enable_IRQ_USART1;                 // habilita interrupcion por RX de USART1
0x2734	0x2201    MOVS	R2, #1
0x2736	0xB252    SXTB	R2, R2
0x2738	0x490B    LDR	R1, [PC, #44]
0x273A	0x600A    STR	R2, [R1, #0]
;uarthandler.c, 474 :: 		USART1_CR3bits.DMAT = 1;           // habilita transmision mediante DMA
0x273C	0x490B    LDR	R1, [PC, #44]
0x273E	0x600A    STR	R2, [R1, #0]
;uarthandler.c, 475 :: 		vInitDMAUSART1_TX();               // se llama como funcion
0x2740	0xF7FFFA7C  BL	_vInitDMAUSART1_TX+0
;uarthandler.c, 476 :: 		fUSART1Buffer = CLEAR_TO_WRITE;
0x2744	0x2200    MOVS	R2, #0
0x2746	0x490A    LDR	R1, [PC, #40]
0x2748	0x600A    STR	R2, [R1, #0]
;uarthandler.c, 477 :: 		NVIC_IntEnable( IVT_INT_USART1 );  // Habilita vector de interrupcion
0x274A	0xF2400035  MOVW	R0, #53
0x274E	0xF7FFFD2F  BL	_NVIC_IntEnable+0
;uarthandler.c, 478 :: 		vUSARTDMAMemToMem();               // inicializa el DMA MEMtoMEM 1 ( Buffer a Buffer )
0x2752	0xF7FFFAD7  BL	_vUSARTDMAMemToMem+0
;uarthandler.c, 479 :: 		vUSARTDMAMeToMemZero();            // inicializa el DMA MEMtoMEM 2 ( Limpiar buffer )
0x2756	0xF7FFFB15  BL	_vUSARTDMAMeToMemZero+0
;uarthandler.c, 492 :: 		}
L_end_vUSARTConfigUSART1:
0x275A	0xF8DDE000  LDR	LR, [SP, #0]
0x275E	0xB001    ADD	SP, SP, #4
0x2760	0x4770    BX	LR
0x2762	0xBF00    NOP
0x2764	0x61F80000  	__GPIO_MODULE_USART1_PA9_10+0
0x2768	0x01944227  	USART1_CR1bits+0
0x276C	0x029C4227  	USART1_CR3bits+0
0x2770	0x20082000  	_fUSART1Buffer+0
; end of _vUSARTConfigUSART1
_UART1_Init_Advanced:
;__Lib_UART_123_45.c, 372 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x1CB4	0xB081    SUB	SP, SP, #4
0x1CB6	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x1CBA	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 374 :: 		
0x1CBC	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x1CBE	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x1CC0	0xB408    PUSH	(R3)
0x1CC2	0xB293    UXTH	R3, R2
0x1CC4	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x1CC6	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1CC8	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x1CCA	0xF7FEFFBB  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x1CCE	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 375 :: 		
L_end_UART1_Init_Advanced:
0x1CD0	0xF8DDE000  LDR	LR, [SP, #0]
0x1CD4	0xB001    ADD	SP, SP, #4
0x1CD6	0x4770    BX	LR
0x1CD8	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
__Lib_UART_123_45_UARTx_Init_Advanced:
;__Lib_UART_123_45.c, 294 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0C44	0xB089    SUB	SP, SP, #36
0x0C46	0xF8CDE000  STR	LR, [SP, #0]
0x0C4A	0x4683    MOV	R11, R0
0x0C4C	0xB298    UXTH	R0, R3
0x0C4E	0x468C    MOV	R12, R1
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 44 (R11)
; baud_rate start address is: 48 (R12)
; parity start address is: 0 (R0)
; stop_bits start address is: 4 (R1)
0x0C50	0xF8BD1024  LDRH	R1, [SP, #36]
; module start address is: 24 (R6)
0x0C54	0x9E0A    LDR	R6, [SP, #40]
;__Lib_UART_123_45.c, 298 :: 		
0x0C56	0xAC04    ADD	R4, SP, #16
0x0C58	0xF8AD1004  STRH	R1, [SP, #4]
0x0C5C	0xF8AD0008  STRH	R0, [SP, #8]
0x0C60	0x4620    MOV	R0, R4
0x0C62	0xF7FFFBE7  BL	_RCC_GetClocksFrequency+0
0x0C66	0xF8BD0008  LDRH	R0, [SP, #8]
0x0C6A	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 301 :: 		
0x0C6E	0x4C64    LDR	R4, [PC, #400]
0x0C70	0x45A3    CMP	R11, R4
0x0C72	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced15
;__Lib_UART_123_45.c, 302 :: 		
0x0C74	0x2501    MOVS	R5, #1
0x0C76	0xB26D    SXTB	R5, R5
0x0C78	0x4C62    LDR	R4, [PC, #392]
0x0C7A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 303 :: 		
0x0C7C	0x4D62    LDR	R5, [PC, #392]
0x0C7E	0x4C63    LDR	R4, [PC, #396]
0x0C80	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 304 :: 		
0x0C82	0x4D63    LDR	R5, [PC, #396]
0x0C84	0x4C63    LDR	R4, [PC, #396]
0x0C86	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 305 :: 		
0x0C88	0x4D63    LDR	R5, [PC, #396]
0x0C8A	0x4C64    LDR	R4, [PC, #400]
0x0C8C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 306 :: 		
0x0C8E	0x4D64    LDR	R5, [PC, #400]
0x0C90	0x4C64    LDR	R4, [PC, #400]
0x0C92	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 307 :: 		
0x0C94	0x9C07    LDR	R4, [SP, #28]
0x0C96	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 308 :: 		
0x0C98	0xE056    B	L___Lib_UART_123_45_UARTx_Init_Advanced16
L___Lib_UART_123_45_UARTx_Init_Advanced15:
;__Lib_UART_123_45.c, 309 :: 		
0x0C9A	0x4C63    LDR	R4, [PC, #396]
0x0C9C	0x45A3    CMP	R11, R4
0x0C9E	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced17
;__Lib_UART_123_45.c, 310 :: 		
0x0CA0	0x2501    MOVS	R5, #1
0x0CA2	0xB26D    SXTB	R5, R5
0x0CA4	0x4C61    LDR	R4, [PC, #388]
0x0CA6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 311 :: 		
0x0CA8	0x4D61    LDR	R5, [PC, #388]
0x0CAA	0x4C58    LDR	R4, [PC, #352]
0x0CAC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 312 :: 		
0x0CAE	0x4D61    LDR	R5, [PC, #388]
0x0CB0	0x4C58    LDR	R4, [PC, #352]
0x0CB2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 313 :: 		
0x0CB4	0x4D60    LDR	R5, [PC, #384]
0x0CB6	0x4C59    LDR	R4, [PC, #356]
0x0CB8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 314 :: 		
0x0CBA	0x4D60    LDR	R5, [PC, #384]
0x0CBC	0x4C59    LDR	R4, [PC, #356]
0x0CBE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 315 :: 		
0x0CC0	0x9C06    LDR	R4, [SP, #24]
0x0CC2	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 316 :: 		
0x0CC4	0xE040    B	L___Lib_UART_123_45_UARTx_Init_Advanced18
L___Lib_UART_123_45_UARTx_Init_Advanced17:
;__Lib_UART_123_45.c, 317 :: 		
0x0CC6	0x4C5E    LDR	R4, [PC, #376]
0x0CC8	0x45A3    CMP	R11, R4
0x0CCA	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced19
;__Lib_UART_123_45.c, 318 :: 		
0x0CCC	0x2501    MOVS	R5, #1
0x0CCE	0xB26D    SXTB	R5, R5
0x0CD0	0x4C5C    LDR	R4, [PC, #368]
0x0CD2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 319 :: 		
0x0CD4	0x4D5C    LDR	R5, [PC, #368]
0x0CD6	0x4C4D    LDR	R4, [PC, #308]
0x0CD8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 320 :: 		
0x0CDA	0x4D5C    LDR	R5, [PC, #368]
0x0CDC	0x4C4D    LDR	R4, [PC, #308]
0x0CDE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 321 :: 		
0x0CE0	0x4D5B    LDR	R5, [PC, #364]
0x0CE2	0x4C4E    LDR	R4, [PC, #312]
0x0CE4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 322 :: 		
0x0CE6	0x4D5B    LDR	R5, [PC, #364]
0x0CE8	0x4C4E    LDR	R4, [PC, #312]
0x0CEA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 323 :: 		
0x0CEC	0x9C06    LDR	R4, [SP, #24]
0x0CEE	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 324 :: 		
0x0CF0	0xE02A    B	L___Lib_UART_123_45_UARTx_Init_Advanced20
L___Lib_UART_123_45_UARTx_Init_Advanced19:
;__Lib_UART_123_45.c, 325 :: 		
0x0CF2	0x4C59    LDR	R4, [PC, #356]
0x0CF4	0x45A3    CMP	R11, R4
0x0CF6	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced21
;__Lib_UART_123_45.c, 326 :: 		
0x0CF8	0x2501    MOVS	R5, #1
0x0CFA	0xB26D    SXTB	R5, R5
0x0CFC	0x4C57    LDR	R4, [PC, #348]
0x0CFE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 327 :: 		
0x0D00	0x4D57    LDR	R5, [PC, #348]
0x0D02	0x4C42    LDR	R4, [PC, #264]
0x0D04	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 328 :: 		
0x0D06	0x4D57    LDR	R5, [PC, #348]
0x0D08	0x4C42    LDR	R4, [PC, #264]
0x0D0A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 329 :: 		
0x0D0C	0x4D56    LDR	R5, [PC, #344]
0x0D0E	0x4C43    LDR	R4, [PC, #268]
0x0D10	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 330 :: 		
0x0D12	0x4D56    LDR	R5, [PC, #344]
0x0D14	0x4C43    LDR	R4, [PC, #268]
0x0D16	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 331 :: 		
0x0D18	0x9C06    LDR	R4, [SP, #24]
0x0D1A	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 332 :: 		
0x0D1C	0xE014    B	L___Lib_UART_123_45_UARTx_Init_Advanced22
L___Lib_UART_123_45_UARTx_Init_Advanced21:
;__Lib_UART_123_45.c, 333 :: 		
0x0D1E	0x4C54    LDR	R4, [PC, #336]
0x0D20	0x45A3    CMP	R11, R4
0x0D22	0xD111    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced23
;__Lib_UART_123_45.c, 334 :: 		
0x0D24	0x2501    MOVS	R5, #1
0x0D26	0xB26D    SXTB	R5, R5
0x0D28	0x4C52    LDR	R4, [PC, #328]
0x0D2A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 335 :: 		
0x0D2C	0x4D52    LDR	R5, [PC, #328]
0x0D2E	0x4C37    LDR	R4, [PC, #220]
0x0D30	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 336 :: 		
0x0D32	0x4D52    LDR	R5, [PC, #328]
0x0D34	0x4C37    LDR	R4, [PC, #220]
0x0D36	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 337 :: 		
0x0D38	0x4D51    LDR	R5, [PC, #324]
0x0D3A	0x4C38    LDR	R4, [PC, #224]
0x0D3C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 338 :: 		
0x0D3E	0x4D51    LDR	R5, [PC, #324]
0x0D40	0x4C38    LDR	R4, [PC, #224]
0x0D42	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 339 :: 		
0x0D44	0x9C06    LDR	R4, [SP, #24]
0x0D46	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 340 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced23:
L___Lib_UART_123_45_UARTx_Init_Advanced22:
L___Lib_UART_123_45_UARTx_Init_Advanced20:
L___Lib_UART_123_45_UARTx_Init_Advanced18:
L___Lib_UART_123_45_UARTx_Init_Advanced16:
;__Lib_UART_123_45.c, 342 :: 		
0x0D48	0xF8AD1004  STRH	R1, [SP, #4]
; module end address is: 24 (R6)
0x0D4C	0xF8AD0008  STRH	R0, [SP, #8]
0x0D50	0x4630    MOV	R0, R6
0x0D52	0xF7FFFBC3  BL	_GPIO_Alternate_Function_Enable+0
0x0D56	0xF8BD0008  LDRH	R0, [SP, #8]
0x0D5A	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 344 :: 		
0x0D5E	0xF10B0510  ADD	R5, R11, #16
0x0D62	0x2400    MOVS	R4, #0
0x0D64	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 345 :: 		
0x0D66	0xF10B0510  ADD	R5, R11, #16
0x0D6A	0x682C    LDR	R4, [R5, #0]
0x0D6C	0x430C    ORRS	R4, R1
; stop_bits end address is: 4 (R1)
0x0D6E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 346 :: 		
0x0D70	0xF10B050C  ADD	R5, R11, #12
0x0D74	0x2400    MOVS	R4, #0
0x0D76	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 348 :: 		
0x0D78	0xB118    CBZ	R0, L___Lib_UART_123_45_UARTx_Init_Advanced38
;__Lib_UART_123_45.c, 349 :: 		
0x0D7A	0xF4406080  ORR	R0, R0, #1024
0x0D7E	0xB280    UXTH	R0, R0
; parity end address is: 0 (R0)
;__Lib_UART_123_45.c, 350 :: 		
0x0D80	0xE7FF    B	L___Lib_UART_123_45_UARTx_Init_Advanced24
L___Lib_UART_123_45_UARTx_Init_Advanced38:
;__Lib_UART_123_45.c, 348 :: 		
;__Lib_UART_123_45.c, 350 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced24:
;__Lib_UART_123_45.c, 352 :: 		
; parity start address is: 0 (R0)
0x0D82	0xF10B050C  ADD	R5, R11, #12
0x0D86	0x682C    LDR	R4, [R5, #0]
0x0D88	0x4304    ORRS	R4, R0
; parity end address is: 0 (R0)
0x0D8A	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 354 :: 		
0x0D8C	0xF10B060C  ADD	R6, R11, #12
0x0D90	0x2501    MOVS	R5, #1
0x0D92	0x6834    LDR	R4, [R6, #0]
0x0D94	0xF365344D  BFI	R4, R5, #13, #1
0x0D98	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 355 :: 		
0x0D9A	0xF10B060C  ADD	R6, R11, #12
0x0D9E	0x2501    MOVS	R5, #1
0x0DA0	0x6834    LDR	R4, [R6, #0]
0x0DA2	0xF36504C3  BFI	R4, R5, #3, #1
0x0DA6	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 356 :: 		
0x0DA8	0xF10B060C  ADD	R6, R11, #12
0x0DAC	0x2501    MOVS	R5, #1
0x0DAE	0x6834    LDR	R4, [R6, #0]
0x0DB0	0xF3650482  BFI	R4, R5, #2, #1
0x0DB4	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 357 :: 		
0x0DB6	0xF10B0514  ADD	R5, R11, #20
0x0DBA	0x2400    MOVS	R4, #0
0x0DBC	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 362 :: 		
0x0DBE	0x9D03    LDR	R5, [SP, #12]
0x0DC0	0x2419    MOVS	R4, #25
0x0DC2	0x4365    MULS	R5, R4, R5
0x0DC4	0xEA4F048C  LSL	R4, R12, #2
; baud_rate end address is: 48 (R12)
0x0DC8	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45.c, 363 :: 		
0x0DCC	0x2464    MOVS	R4, #100
0x0DCE	0xFBB7F4F4  UDIV	R4, R7, R4
0x0DD2	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45.c, 365 :: 		
0x0DD4	0x0935    LSRS	R5, R6, #4
0x0DD6	0x2464    MOVS	R4, #100
0x0DD8	0x436C    MULS	R4, R5, R4
0x0DDA	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45.c, 366 :: 		
0x0DDC	0x0124    LSLS	R4, R4, #4
0x0DDE	0xF2040532  ADDW	R5, R4, #50
0x0DE2	0x2464    MOVS	R4, #100
0x0DE4	0xFBB5F4F4  UDIV	R4, R5, R4
0x0DE8	0xF004040F  AND	R4, R4, #15
0x0DEC	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45.c, 368 :: 		
0x0DF0	0xF10B0508  ADD	R5, R11, #8
; UART_Base end address is: 44 (R11)
0x0DF4	0xB2A4    UXTH	R4, R4
0x0DF6	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 369 :: 		
L_end_UARTx_Init_Advanced:
0x0DF8	0xF8DDE000  LDR	LR, [SP, #0]
0x0DFC	0xB009    ADD	SP, SP, #36
0x0DFE	0x4770    BX	LR
0x0E00	0x38004001  	USART1_SR+0
0x0E04	0x03384242  	RCC_APB2ENR+0
0x0E08	0xFFFFFFFF  	_UART1_Write+0
0x0E0C	0x23182000  	_UART_Wr_Ptr+0
0x0E10	0xFFFFFFFF  	_UART1_Read+0
0x0E14	0x231C2000  	_UART_Rd_Ptr+0
0x0E18	0xFFFFFFFF  	_UART1_Data_Ready+0
0x0E1C	0x23202000  	_UART_Rdy_Ptr+0
0x0E20	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x0E24	0x23242000  	_UART_Tx_Idle_Ptr+0
0x0E28	0x44004000  	USART2_SR+0
0x0E2C	0x03C44242  	RCC_APB1ENR+0
0x0E30	0xFFFFFFFF  	_UART2_Write+0
0x0E34	0xFFFFFFFF  	_UART2_Read+0
0x0E38	0xFFFFFFFF  	_UART2_Data_Ready+0
0x0E3C	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x0E40	0x48004000  	USART3_SR+0
0x0E44	0x03C84242  	RCC_APB1ENR+0
0x0E48	0xFFFFFFFF  	_UART3_Write+0
0x0E4C	0xFFFFFFFF  	_UART3_Read+0
0x0E50	0xFFFFFFFF  	_UART3_Data_Ready+0
0x0E54	0xFFFFFFFF  	_UART3_Tx_Idle+0
0x0E58	0x4C004000  	UART4_SR+0
0x0E5C	0x03CC4242  	RCC_APB1ENR+0
0x0E60	0xFFFFFFFF  	_UART4_Write+0
0x0E64	0xFFFFFFFF  	_UART4_Read+0
0x0E68	0xFFFFFFFF  	_UART4_Data_Ready+0
0x0E6C	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x0E70	0x50004000  	UART5_SR+0
0x0E74	0x03D04242  	RCC_APB1ENR+0
0x0E78	0xFFFFFFFF  	_UART5_Write+0
0x0E7C	0xFFFFFFFF  	_UART5_Read+0
0x0E80	0xFFFFFFFF  	_UART5_Data_Ready+0
0x0E84	0xFFFFFFFF  	_UART5_Tx_Idle+0
; end of __Lib_UART_123_45_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_105_107.c, 464 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0434	0xB082    SUB	SP, SP, #8
0x0436	0xF8CDE000  STR	LR, [SP, #0]
0x043A	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_105_107.c, 467 :: 		
0x043C	0x1D19    ADDS	R1, R3, #4
0x043E	0x9101    STR	R1, [SP, #4]
0x0440	0xF000FF42  BL	_Get_Fosc_kHz+0
0x0444	0xF24031E8  MOVW	R1, #1000
0x0448	0xFB00F201  MUL	R2, R0, R1
0x044C	0x9901    LDR	R1, [SP, #4]
0x044E	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 470 :: 		
0x0450	0x491F    LDR	R1, [PC, #124]
0x0452	0x7809    LDRB	R1, [R1, #0]
0x0454	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x0458	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 471 :: 		
0x045A	0x491E    LDR	R1, [PC, #120]
0x045C	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x045E	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0460	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 473 :: 		
0x0462	0x1D19    ADDS	R1, R3, #4
0x0464	0x6809    LDR	R1, [R1, #0]
0x0466	0x4081    LSLS	R1, R0
; presc end address is: 0 (R0)
0x0468	0x6019    STR	R1, [R3, #0]
;__Lib_System_105_107.c, 475 :: 		
0x046A	0x4919    LDR	R1, [PC, #100]
0x046C	0x8809    LDRH	R1, [R1, #0]
0x046E	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x0472	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 476 :: 		
0x0474	0x4917    LDR	R1, [PC, #92]
0x0476	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0478	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x047A	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 478 :: 		
0x047C	0xF2030208  ADDW	R2, R3, #8
0x0480	0x1D19    ADDS	R1, R3, #4
0x0482	0x6809    LDR	R1, [R1, #0]
0x0484	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0486	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 480 :: 		
0x0488	0x4911    LDR	R1, [PC, #68]
0x048A	0x8809    LDRH	R1, [R1, #0]
0x048C	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x0490	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 481 :: 		
0x0492	0x4910    LDR	R1, [PC, #64]
0x0494	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0496	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0498	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 483 :: 		
0x049A	0xF203020C  ADDW	R2, R3, #12
0x049E	0x1D19    ADDS	R1, R3, #4
0x04A0	0x6809    LDR	R1, [R1, #0]
0x04A2	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x04A4	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 485 :: 		
0x04A6	0x490A    LDR	R1, [PC, #40]
0x04A8	0x8809    LDRH	R1, [R1, #0]
0x04AA	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x04AE	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 486 :: 		
0x04B0	0x4909    LDR	R1, [PC, #36]
0x04B2	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x04B4	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x04B6	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 488 :: 		
0x04B8	0xF2030210  ADDW	R2, R3, #16
0x04BC	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x04C0	0x6809    LDR	R1, [R1, #0]
0x04C2	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x04C6	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 489 :: 		
L_end_RCC_GetClocksFrequency:
0x04C8	0xF8DDE000  LDR	LR, [SP, #0]
0x04CC	0xB002    ADD	SP, SP, #8
0x04CE	0x4770    BX	LR
0x04D0	0x10044002  	RCC_CFGRbits+0
0x04D4	0x67100000  	__Lib_System_105_107_APBAHBPrescTable+0
0x04D8	0x29AC0000  	__Lib_System_105_107_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x04DC	0xB081    SUB	SP, SP, #4
0x04DE	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x04E2	0x2201    MOVS	R2, #1
0x04E4	0xB252    SXTB	R2, R2
0x04E6	0x493E    LDR	R1, [PC, #248]
0x04E8	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x04EA	0xF2000168  ADDW	R1, R0, #104
0x04EE	0x680B    LDR	R3, [R1, #0]
0x04F0	0xF06F6100  MVN	R1, #134217728
0x04F4	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x04F8	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x04FA	0xF0036100  AND	R1, R3, #134217728
0x04FE	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x0500	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x0502	0xF0024100  AND	R1, R2, #-2147483648
0x0506	0xF1B14F00  CMP	R1, #-2147483648
0x050A	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x050C	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x050E	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x0510	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x0512	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0514	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x0516	0xF4042170  AND	R1, R4, #983040
0x051A	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x051C	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x051E	0xF64F71FF  MOVW	R1, #65535
0x0522	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x0526	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x0528	0xF4041140  AND	R1, R4, #3145728
0x052C	0xF5B11F40  CMP	R1, #3145728
0x0530	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x0532	0xF06F6170  MVN	R1, #251658240
0x0536	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x053A	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x053C	0x492A    LDR	R1, [PC, #168]
0x053E	0x680A    LDR	R2, [R1, #0]
0x0540	0xF06F6170  MVN	R1, #251658240
0x0544	0x400A    ANDS	R2, R1
0x0546	0x4928    LDR	R1, [PC, #160]
0x0548	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x054A	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x054C	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x054E	0xF4041180  AND	R1, R4, #1048576
0x0552	0xF5B11F80  CMP	R1, #1048576
0x0556	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x0558	0xF04F0103  MOV	R1, #3
0x055C	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x055E	0x43C9    MVN	R1, R1
0x0560	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x0564	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x0568	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x056A	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x056C	0x0D61    LSRS	R1, R4, #21
0x056E	0x0109    LSLS	R1, R1, #4
0x0570	0xFA05F101  LSL	R1, R5, R1
0x0574	0x43C9    MVN	R1, R1
0x0576	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x0578	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x057C	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x057E	0x0D61    LSRS	R1, R4, #21
0x0580	0x0109    LSLS	R1, R1, #4
0x0582	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x0586	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x0588	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x058A	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x058E	0xF1B14F00  CMP	R1, #-2147483648
0x0592	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x0594	0x4913    LDR	R1, [PC, #76]
0x0596	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x0598	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x059A	0x4913    LDR	R1, [PC, #76]
0x059C	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x059E	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x05A2	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x05A4	0xEA4F018A  LSL	R1, R10, #2
0x05A8	0xEB090101  ADD	R1, R9, R1, LSL #0
0x05AC	0x6809    LDR	R1, [R1, #0]
0x05AE	0xF1B13FFF  CMP	R1, #-1
0x05B2	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x05B4	0xF1090134  ADD	R1, R9, #52
0x05B8	0xEA4F038A  LSL	R3, R10, #2
0x05BC	0x18C9    ADDS	R1, R1, R3
0x05BE	0x6809    LDR	R1, [R1, #0]
0x05C0	0x460A    MOV	R2, R1
0x05C2	0xEB090103  ADD	R1, R9, R3, LSL #0
0x05C6	0x6809    LDR	R1, [R1, #0]
0x05C8	0x4608    MOV	R0, R1
0x05CA	0x4611    MOV	R1, R2
0x05CC	0xF7FFFEBE  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x05D0	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x05D4	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x05D6	0xF8DDE000  LDR	LR, [SP, #0]
0x05DA	0xB001    ADD	SP, SP, #4
0x05DC	0x4770    BX	LR
0x05DE	0xBF00    NOP
0x05E0	0x03004242  	RCC_APB2ENRbits+0
0x05E4	0x001C4001  	AFIO_MAPR2+0
0x05E8	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x034C	0xB083    SUB	SP, SP, #12
0x034E	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x0352	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x0356	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0358	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x035A	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x035E	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x0360	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x0362	0x4A18    LDR	R2, [PC, #96]
0x0364	0x9202    STR	R2, [SP, #8]
0x0366	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x0368	0x4A17    LDR	R2, [PC, #92]
0x036A	0x9202    STR	R2, [SP, #8]
0x036C	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x036E	0x4A17    LDR	R2, [PC, #92]
0x0370	0x9202    STR	R2, [SP, #8]
0x0372	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x0374	0x4A16    LDR	R2, [PC, #88]
0x0376	0x9202    STR	R2, [SP, #8]
0x0378	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x037A	0x4A16    LDR	R2, [PC, #88]
0x037C	0x9202    STR	R2, [SP, #8]
0x037E	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x0380	0x4A15    LDR	R2, [PC, #84]
0x0382	0x9202    STR	R2, [SP, #8]
0x0384	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x0386	0x4A15    LDR	R2, [PC, #84]
0x0388	0x9202    STR	R2, [SP, #8]
0x038A	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x038C	0x2800    CMP	R0, #0
0x038E	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x0390	0x2801    CMP	R0, #1
0x0392	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x0394	0x2802    CMP	R0, #2
0x0396	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x0398	0x2803    CMP	R0, #3
0x039A	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x039C	0x2804    CMP	R0, #4
0x039E	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x03A0	0x2805    CMP	R0, #5
0x03A2	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x03A4	0x2806    CMP	R0, #6
0x03A6	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x03A8	0x2201    MOVS	R2, #1
0x03AA	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x03AC	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x03B0	0x9802    LDR	R0, [SP, #8]
0x03B2	0x460A    MOV	R2, R1
0x03B4	0xF8BD1004  LDRH	R1, [SP, #4]
0x03B8	0xF000FE30  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x03BC	0xF8DDE000  LDR	LR, [SP, #0]
0x03C0	0xB003    ADD	SP, SP, #12
0x03C2	0x4770    BX	LR
0x03C4	0x08004001  	#1073809408
0x03C8	0x0C004001  	#1073810432
0x03CC	0x10004001  	#1073811456
0x03D0	0x14004001  	#1073812480
0x03D4	0x18004001  	#1073813504
0x03D8	0x1C004001  	#1073814528
0x03DC	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
_vInitDMAUSART1_TX:
;uarthandler.c, 427 :: 		void vInitDMAUSART1_TX () {
0x1C3C	0xB081    SUB	SP, SP, #4
0x1C3E	0xF8CDE000  STR	LR, [SP, #0]
;uarthandler.c, 429 :: 		RCC_AHBENRbits.DMA1EN = 1;    // Habilita clock para DMA1
0x1C42	0x2101    MOVS	R1, #1
0x1C44	0xB249    SXTB	R1, R1
0x1C46	0x4811    LDR	R0, [PC, #68]
0x1C48	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 431 :: 		DMA1_CCR4bits.EN = 0;          // deshabilita DMA USART1 TX (para poder modificar los parametros)
0x1C4A	0x2100    MOVS	R1, #0
0x1C4C	0xB249    SXTB	R1, R1
0x1C4E	0x4810    LDR	R0, [PC, #64]
0x1C50	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 432 :: 		while ( DMA1_CCR4bits.EN );    // espera a que se haya desabilitado realmente
L_vInitDMAUSART1_TX247:
0x1C52	0x480F    LDR	R0, [PC, #60]
0x1C54	0x6800    LDR	R0, [R0, #0]
0x1C56	0xB100    CBZ	R0, L_vInitDMAUSART1_TX248
0x1C58	0xE7FB    B	L_vInitDMAUSART1_TX247
L_vInitDMAUSART1_TX248:
;uarthandler.c, 435 :: 		DMA1_CPAR4 = ( unsigned long ) &USART1_DR;           // Direccion fisica de periferico a rutear
0x1C5A	0x490E    LDR	R1, [PC, #56]
0x1C5C	0x480E    LDR	R0, [PC, #56]
0x1C5E	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 437 :: 		PL0_DMA1_CCR4_bit = 1;         // Prioridad de canal
0x1C60	0x2101    MOVS	R1, #1
0x1C62	0xB249    SXTB	R1, R1
0x1C64	0x480D    LDR	R0, [PC, #52]
0x1C66	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 438 :: 		PL1_DMA1_CCR4_bit = 1;
0x1C68	0x480D    LDR	R0, [PC, #52]
0x1C6A	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 439 :: 		DMA1_CCR4bits.MINC = 1;        // avanza en la direccion de la memoria apuntada
0x1C6C	0x480D    LDR	R0, [PC, #52]
0x1C6E	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 440 :: 		DMA1_CCR4bits.DIR_ = 1;        // direccion memoria a periferico
0x1C70	0x480D    LDR	R0, [PC, #52]
0x1C72	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 441 :: 		DMA1_CCR4bits.TEIE = 1;        // Habilitacion de interrupcion por error en trasmision
0x1C74	0x480D    LDR	R0, [PC, #52]
0x1C76	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 442 :: 		DMA1_CCR4bits.TCIE = 1;        // Interrupcion por transferencia completa
0x1C78	0x480D    LDR	R0, [PC, #52]
0x1C7A	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 444 :: 		NVIC_IntEnable( IVT_INT_DMA1_Channel4 );      // habilita el vector de interrupcion para DMA
0x1C7C	0xF240001E  MOVW	R0, #30
0x1C80	0xF000FA96  BL	_NVIC_IntEnable+0
;uarthandler.c, 465 :: 		}
L_end_vInitDMAUSART1_TX:
0x1C84	0xF8DDE000  LDR	LR, [SP, #0]
0x1C88	0xB001    ADD	SP, SP, #4
0x1C8A	0x4770    BX	LR
0x1C8C	0x02804242  	RCC_AHBENRbits+0
0x1C90	0x08804240  	DMA1_CCR4bits+0
0x1C94	0x38044001  	USART1_DR+0
0x1C98	0x004C4002  	DMA1_CPAR4+0
0x1C9C	0x08B04240  	PL0_DMA1_CCR4_bit+0
0x1CA0	0x08B44240  	PL1_DMA1_CCR4_bit+0
0x1CA4	0x089C4240  	DMA1_CCR4bits+0
0x1CA8	0x08904240  	DMA1_CCR4bits+0
0x1CAC	0x088C4240  	DMA1_CCR4bits+0
0x1CB0	0x08844240  	DMA1_CCR4bits+0
; end of _vInitDMAUSART1_TX
_vUSARTDMAMemToMem:
;uarthandler.c, 342 :: 		void vUSARTDMAMemToMem ( void ) {
0x1D04	0xB081    SUB	SP, SP, #4
0x1D06	0xF8CDE000  STR	LR, [SP, #0]
;uarthandler.c, 345 :: 		RCC_AHBENRbits.DMA1EN = 1;    // Habilita clock para DMA1
0x1D0A	0x2101    MOVS	R1, #1
0x1D0C	0xB249    SXTB	R1, R1
0x1D0E	0x4813    LDR	R0, [PC, #76]
0x1D10	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 347 :: 		DMA1_CCR2bits.EN = 0;          // deshabilita DMA SPI4 RX (para poder modificar los parametros)
0x1D12	0x2100    MOVS	R1, #0
0x1D14	0xB249    SXTB	R1, R1
0x1D16	0x4812    LDR	R0, [PC, #72]
0x1D18	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 348 :: 		while ( DMA1_CCR2bits.EN );    // espera a que se haya desabilitado realmente
L_vUSARTDMAMemToMem232:
0x1D1A	0x4811    LDR	R0, [PC, #68]
0x1D1C	0x6800    LDR	R0, [R0, #0]
0x1D1E	0xB100    CBZ	R0, L_vUSARTDMAMemToMem233
0x1D20	0xE7FB    B	L_vUSARTDMAMemToMem232
L_vUSARTDMAMemToMem233:
;uarthandler.c, 350 :: 		PL0_DMA1_CCR2_bit = 1;         // Prioridad de canal
0x1D22	0x2201    MOVS	R2, #1
0x1D24	0xB252    SXTB	R2, R2
0x1D26	0x480F    LDR	R0, [PC, #60]
0x1D28	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 351 :: 		PL1_DMA1_CCR2_bit = 1;
0x1D2A	0x480F    LDR	R0, [PC, #60]
0x1D2C	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 353 :: 		DMA1_CCR2bits.MINC = 1;        // avanza en la direccion de la memoria apuntada
0x1D2E	0x480F    LDR	R0, [PC, #60]
0x1D30	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 354 :: 		DMA1_CCR2bits.PINC = 1;        // avanza en la direccion del periferico apuntado
0x1D32	0x480F    LDR	R0, [PC, #60]
0x1D34	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 355 :: 		DMA1_CCR2bits.DIR_ = 0;        // se lee de la "periferico" a Memoria
0x1D36	0x2100    MOVS	R1, #0
0x1D38	0xB249    SXTB	R1, R1
0x1D3A	0x480E    LDR	R0, [PC, #56]
0x1D3C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 356 :: 		DMA1_CCR2bits.MEM2MEM = 1;     // direccion memoria a memoria
0x1D3E	0x480E    LDR	R0, [PC, #56]
0x1D40	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 358 :: 		DMA1_CCR2bits.TEIE = 1;        // Habilitacion de interrupcion por error en trasmision
0x1D42	0x480E    LDR	R0, [PC, #56]
0x1D44	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 359 :: 		DMA1_CCR2bits.TCIE = 1;        // Interrupcion por transferencia completa
0x1D46	0x480E    LDR	R0, [PC, #56]
0x1D48	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 361 :: 		NVIC_IntEnable( IVT_INT_DMA1_Channel2 );      // habilita el vector de interrupcion para DMA
0x1D4A	0xF240001C  MOVW	R0, #28
0x1D4E	0xF000FA2F  BL	_NVIC_IntEnable+0
;uarthandler.c, 384 :: 		}
L_end_vUSARTDMAMemToMem:
0x1D52	0xF8DDE000  LDR	LR, [SP, #0]
0x1D56	0xB001    ADD	SP, SP, #4
0x1D58	0x4770    BX	LR
0x1D5A	0xBF00    NOP
0x1D5C	0x02804242  	RCC_AHBENRbits+0
0x1D60	0x03804240  	DMA1_CCR2bits+0
0x1D64	0x03B04240  	PL0_DMA1_CCR2_bit+0
0x1D68	0x03B44240  	PL1_DMA1_CCR2_bit+0
0x1D6C	0x039C4240  	DMA1_CCR2bits+0
0x1D70	0x03984240  	DMA1_CCR2bits+0
0x1D74	0x03904240  	DMA1_CCR2bits+0
0x1D78	0x03B84240  	DMA1_CCR2bits+0
0x1D7C	0x038C4240  	DMA1_CCR2bits+0
0x1D80	0x03844240  	DMA1_CCR2bits+0
; end of _vUSARTDMAMemToMem
_vUSARTDMAMeToMemZero:
;uarthandler.c, 253 :: 		void vUSARTDMAMeToMemZero ( void ) {
0x1D84	0xB081    SUB	SP, SP, #4
0x1D86	0xF8CDE000  STR	LR, [SP, #0]
;uarthandler.c, 256 :: 		RCC_AHBENRbits.DMA1EN = 1;    // Habilita clock para DMA1
0x1D8A	0x2101    MOVS	R1, #1
0x1D8C	0xB249    SXTB	R1, R1
0x1D8E	0x4813    LDR	R0, [PC, #76]
0x1D90	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 258 :: 		DMA1_CCR1bits.EN = 0;          // deshabilita DMA SPI4 RX (para poder modificar los parametros)
0x1D92	0x2100    MOVS	R1, #0
0x1D94	0xB249    SXTB	R1, R1
0x1D96	0x4812    LDR	R0, [PC, #72]
0x1D98	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 259 :: 		while ( DMA1_CCR1bits.EN );    // espera a que se haya desabilitado realmente
L_vUSARTDMAMeToMemZero223:
0x1D9A	0x4811    LDR	R0, [PC, #68]
0x1D9C	0x6800    LDR	R0, [R0, #0]
0x1D9E	0xB100    CBZ	R0, L_vUSARTDMAMeToMemZero224
0x1DA0	0xE7FB    B	L_vUSARTDMAMeToMemZero223
L_vUSARTDMAMeToMemZero224:
;uarthandler.c, 261 :: 		PL0_bit = 1;                   // Prioridad de canal
0x1DA2	0x2201    MOVS	R2, #1
0x1DA4	0xB252    SXTB	R2, R2
0x1DA6	0x480F    LDR	R0, [PC, #60]
0x1DA8	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 262 :: 		PL1_bit = 1;
0x1DAA	0x480F    LDR	R0, [PC, #60]
0x1DAC	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 263 :: 		DMA1_CCR1bits.MINC = 1;        // avanza en la direccion de la memoria apuntada
0x1DAE	0x480F    LDR	R0, [PC, #60]
0x1DB0	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 264 :: 		DMA1_CCR1bits.PINC = 0;        // no avanza en la direccion del periferico apuntado
0x1DB2	0x2100    MOVS	R1, #0
0x1DB4	0xB249    SXTB	R1, R1
0x1DB6	0x480E    LDR	R0, [PC, #56]
0x1DB8	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 265 :: 		DMA1_CCR1bits.DIR_ = 0;        // se lee de la "periferico" a Memoria
0x1DBA	0x480E    LDR	R0, [PC, #56]
0x1DBC	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 266 :: 		DMA1_CCR1bits.MEM2MEM = 1;     // direccion memoria a memoria
0x1DBE	0x480E    LDR	R0, [PC, #56]
0x1DC0	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 268 :: 		DMA1_CCR1bits.TEIE = 1;        // Habilitacion de interrupcion por error en trasmision
0x1DC2	0x480E    LDR	R0, [PC, #56]
0x1DC4	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 269 :: 		DMA1_CCR1bits.TCIE = 1;        // Interrupcion por transferencia completa
0x1DC6	0x480E    LDR	R0, [PC, #56]
0x1DC8	0x6002    STR	R2, [R0, #0]
;uarthandler.c, 271 :: 		NVIC_IntEnable( IVT_INT_DMA1_Channel1 );      // habilita el vector de interrupcion para DMA
0x1DCA	0xF240001B  MOVW	R0, #27
0x1DCE	0xF000F9EF  BL	_NVIC_IntEnable+0
;uarthandler.c, 294 :: 		}
L_end_vUSARTDMAMeToMemZero:
0x1DD2	0xF8DDE000  LDR	LR, [SP, #0]
0x1DD6	0xB001    ADD	SP, SP, #4
0x1DD8	0x4770    BX	LR
0x1DDA	0xBF00    NOP
0x1DDC	0x02804242  	RCC_AHBENRbits+0
0x1DE0	0x01004240  	DMA1_CCR1bits+0
0x1DE4	0x01304240  	PL0_bit+0
0x1DE8	0x01344240  	PL1_bit+0
0x1DEC	0x011C4240  	DMA1_CCR1bits+0
0x1DF0	0x01184240  	DMA1_CCR1bits+0
0x1DF4	0x01104240  	DMA1_CCR1bits+0
0x1DF8	0x01384240  	DMA1_CCR1bits+0
0x1DFC	0x010C4240  	DMA1_CCR1bits+0
0x1E00	0x01044240  	DMA1_CCR1bits+0
; end of _vUSARTDMAMeToMemZero
_vSPI2Init:
;driverspi.c, 90 :: 		void vSPI2Init ( void ) {
0x2850	0xB081    SUB	SP, SP, #4
0x2852	0xF8CDE000  STR	LR, [SP, #0]
;driverspi.c, 92 :: 		_SPI_SS_DISABLE | _SPI_SSM_ENABLE | _SPI_SSI_1, &_GPIO_MODULE_SPI2_PB13_14_15 );
0x2856	0x4A09    LDR	R2, [PC, #36]
0x2858	0xF2403104  MOVW	R1, #772
;driverspi.c, 91 :: 		SPI2_Init_Advanced( _SPI_FPCLK_DIV8, _SPI_MASTER | _SPI_8_BIT | _SPI_CLK_IDLE_LOW | _SPI_FIRST_CLK_EDGE_TRANSITION | _SPI_MSB_FIRST |
0x285C	0x2002    MOVS	R0, #2
;driverspi.c, 92 :: 		_SPI_SS_DISABLE | _SPI_SSM_ENABLE | _SPI_SSI_1, &_GPIO_MODULE_SPI2_PB13_14_15 );
0x285E	0xF7FFFAD1  BL	_SPI2_Init_Advanced+0
;driverspi.c, 94 :: 		SPI2_CR2bits.RXNEIE  = 1;       // habilitacion de ISR para RX
0x2862	0x2101    MOVS	R1, #1
0x2864	0xB249    SXTB	R1, R1
0x2866	0x4806    LDR	R0, [PC, #24]
0x2868	0x6001    STR	R1, [R0, #0]
;driverspi.c, 96 :: 		NVIC_IntEnable( IVT_INT_SPI2 );
0x286A	0xF2400034  MOVW	R0, #52
0x286E	0xF7FFFC9F  BL	_NVIC_IntEnable+0
;driverspi.c, 97 :: 		}
L_end_vSPI2Init:
0x2872	0xF8DDE000  LDR	LR, [SP, #0]
0x2876	0xB001    ADD	SP, SP, #4
0x2878	0x4770    BX	LR
0x287A	0xBF00    NOP
0x287C	0x62640000  	__GPIO_MODULE_SPI2_PB13_14_15+0
0x2880	0x00984207  	SPI2_CR2bits+0
; end of _vSPI2Init
_SPI2_Init_Advanced:
;__Lib_SPI_123.c, 107 :: 		
; module start address is: 8 (R2)
0x1E04	0xB083    SUB	SP, SP, #12
0x1E06	0xF8CDE000  STR	LR, [SP, #0]
0x1E0A	0xF88D0004  STRB	R0, [SP, #4]
0x1E0E	0x9102    STR	R1, [SP, #8]
; module end address is: 8 (R2)
; module start address is: 8 (R2)
;__Lib_SPI_123.c, 108 :: 		
0x1E10	0x4C0B    LDR	R4, [PC, #44]
0x1E12	0x4B0C    LDR	R3, [PC, #48]
0x1E14	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 109 :: 		
0x1E16	0x4C0C    LDR	R4, [PC, #48]
0x1E18	0x4B0C    LDR	R3, [PC, #48]
0x1E1A	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 111 :: 		
0x1E1C	0x2401    MOVS	R4, #1
0x1E1E	0xB264    SXTB	R4, R4
0x1E20	0x4B0B    LDR	R3, [PC, #44]
0x1E22	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 112 :: 		
0x1E24	0x4610    MOV	R0, R2
; module end address is: 8 (R2)
0x1E26	0xF7FEFB59  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_SPI_123.c, 114 :: 		
0x1E2A	0x9A02    LDR	R2, [SP, #8]
0x1E2C	0xF89D1004  LDRB	R1, [SP, #4]
0x1E30	0x4808    LDR	R0, [PC, #32]
0x1E32	0xF7FEFC3F  BL	__Lib_SPI_123_SPIx_Init_Advanced+0
;__Lib_SPI_123.c, 115 :: 		
L_end_SPI2_Init_Advanced:
0x1E36	0xF8DDE000  LDR	LR, [SP, #0]
0x1E3A	0xB003    ADD	SP, SP, #12
0x1E3C	0x4770    BX	LR
0x1E3E	0xBF00    NOP
0x1E40	0xFFFFFFFF  	_SPI2_Read+0
0x1E44	0x23102000  	_SPI_Rd_Ptr+0
0x1E48	0xFFFFFFFF  	_SPI2_Write+0
0x1E4C	0x23142000  	_SPI_Wr_Ptr+0
0x1E50	0x03B84242  	RCC_APB1ENR+0
0x1E54	0x38004000  	SPI2_CR1+0
; end of _SPI2_Init_Advanced
__Lib_SPI_123_SPIx_Init_Advanced:
;__Lib_SPI_123.c, 53 :: 		
; config start address is: 8 (R2)
; clock_divider start address is: 4 (R1)
; base start address is: 0 (R0)
0x06B4	0xB081    SUB	SP, SP, #4
; config end address is: 8 (R2)
; clock_divider end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; clock_divider start address is: 4 (R1)
; config start address is: 8 (R2)
;__Lib_SPI_123.c, 56 :: 		
0x06B6	0x2300    MOVS	R3, #0
0x06B8	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 58 :: 		
0x06BA	0x00CB    LSLS	R3, R1, #3
0x06BC	0xB29B    UXTH	R3, R3
; clock_divider end address is: 4 (R1)
0x06BE	0xEA420303  ORR	R3, R2, R3, LSL #0
;__Lib_SPI_123.c, 60 :: 		
0x06C2	0x6804    LDR	R4, [R0, #0]
0x06C4	0xB29B    UXTH	R3, R3
0x06C6	0xEA440303  ORR	R3, R4, R3, LSL #0
0x06CA	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 61 :: 		
0x06CC	0x1D05    ADDS	R5, R0, #4
0x06CE	0x1413    ASRS	R3, R2, #16
; config end address is: 8 (R2)
0x06D0	0x461C    MOV	R4, R3
0x06D2	0x682B    LDR	R3, [R5, #0]
0x06D4	0xF3640382  BFI	R3, R4, #2, #1
0x06D8	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 63 :: 		
0x06DA	0xF200051C  ADDW	R5, R0, #28
0x06DE	0x2400    MOVS	R4, #0
0x06E0	0x682B    LDR	R3, [R5, #0]
0x06E2	0xF36423CB  BFI	R3, R4, #11, #1
0x06E6	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 64 :: 		
0x06E8	0x2401    MOVS	R4, #1
0x06EA	0x6803    LDR	R3, [R0, #0]
0x06EC	0xF3641386  BFI	R3, R4, #6, #1
0x06F0	0x6003    STR	R3, [R0, #0]
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 65 :: 		
L_end_SPIx_Init_Advanced:
0x06F2	0xB001    ADD	SP, SP, #4
0x06F4	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Init_Advanced
_vRF4463MainSetTXString:
;DriverRF4463PROMain.c, 126 :: 		void vRF4463MainSetTXString () {
0x2A34	0xB081    SUB	SP, SP, #4
;DriverRF4463PROMain.c, 131 :: 		}
L_end_vRF4463MainSetTXString:
0x2A36	0xB001    ADD	SP, SP, #4
0x2A38	0x4770    BX	LR
; end of _vRF4463MainSetTXString
_VRF4463SDNReset:
;driverrf4463pro.c, 955 :: 		void VRF4463SDNReset( void ) {
0x29B0	0xB081    SUB	SP, SP, #4
0x29B2	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 958 :: 		SDN = 1;
0x29B6	0x2101    MOVS	R1, #1
0x29B8	0xB249    SXTB	R1, R1
0x29BA	0x481B    LDR	R0, [PC, #108]
0x29BC	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 959 :: 		Delay_ms( 6 );        // RF Module reset  DELAY
0x29BE	0xF641173F  MOVW	R7, #6463
0x29C2	0xF2C00701  MOVT	R7, #1
0x29C6	0xBF00    NOP
0x29C8	0xBF00    NOP
L_VRF4463SDNReset145:
0x29CA	0x1E7F    SUBS	R7, R7, #1
0x29CC	0xD1FD    BNE	L_VRF4463SDNReset145
0x29CE	0xBF00    NOP
0x29D0	0xBF00    NOP
0x29D2	0xBF00    NOP
;driverrf4463pro.c, 960 :: 		SDN = 0;
0x29D4	0x2100    MOVS	R1, #0
0x29D6	0xB249    SXTB	R1, R1
0x29D8	0x4813    LDR	R0, [PC, #76]
0x29DA	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 961 :: 		Delay_ms( 10 );       // Delay 10ms for RF module to enter working state
0x29DC	0xF24D47BF  MOVW	R7, #54463
0x29E0	0xF2C00701  MOVT	R7, #1
0x29E4	0xBF00    NOP
0x29E6	0xBF00    NOP
L_VRF4463SDNReset147:
0x29E8	0x1E7F    SUBS	R7, R7, #1
0x29EA	0xD1FD    BNE	L_VRF4463SDNReset147
0x29EC	0xBF00    NOP
0x29EE	0xBF00    NOP
0x29F0	0xBF00    NOP
;driverrf4463pro.c, 963 :: 		nSEL = 1;
0x29F2	0x2101    MOVS	R1, #1
0x29F4	0xB249    SXTB	R1, R1
0x29F6	0x480D    LDR	R0, [PC, #52]
0x29F8	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 964 :: 		nSEL = 0;
0x29FA	0x2100    MOVS	R1, #0
0x29FC	0xB249    SXTB	R1, R1
0x29FE	0x480B    LDR	R0, [PC, #44]
0x2A00	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 965 :: 		for ( i = 0; i < 7; i++ ) {
; i start address is: 12 (R3)
0x2A02	0x2300    MOVS	R3, #0
; i end address is: 12 (R3)
L_VRF4463SDNReset149:
; i start address is: 12 (R3)
0x2A04	0x2B07    CMP	R3, #7
0x2A06	0xD207    BCS	L_VRF4463SDNReset150
;driverrf4463pro.c, 966 :: 		ucRf4463SPIByte( RF_POWER_UP_data[ i ] );   // send power up Command
0x2A08	0x4809    LDR	R0, [PC, #36]
0x2A0A	0x18C0    ADDS	R0, R0, R3
0x2A0C	0x7800    LDRB	R0, [R0, #0]
0x2A0E	0xF7FFF965  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 965 :: 		for ( i = 0; i < 7; i++ ) {
0x2A12	0x1C5B    ADDS	R3, R3, #1
0x2A14	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 967 :: 		}
; i end address is: 12 (R3)
0x2A16	0xE7F5    B	L_VRF4463SDNReset149
L_VRF4463SDNReset150:
;driverrf4463pro.c, 968 :: 		nSEL = 1;
0x2A18	0x2101    MOVS	R1, #1
0x2A1A	0xB249    SXTB	R1, R1
0x2A1C	0x4803    LDR	R0, [PC, #12]
0x2A1E	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 971 :: 		}
L_end_VRF4463SDNReset:
0x2A20	0xF8DDE000  LDR	LR, [SP, #0]
0x2A24	0xB001    ADD	SP, SP, #4
0x2A26	0x4770    BX	LR
0x2A28	0x81AC4221  	GPIOB_ODRbits+0
0x2A2C	0x81B04221  	GPIOB_ODRbits+0
0x2A30	0x67580000  	_RF_POWER_UP_data+0
; end of _VRF4463SDNReset
_ucRf4463SPIByte:
;driverrf4463pro.c, 769 :: 		unsigned char ucRf4463SPIByte( unsigned char ucData ) {
; ucData start address is: 0 (R0)
0x1CDC	0xB081    SUB	SP, SP, #4
; ucData end address is: 0 (R0)
; ucData start address is: 0 (R0)
;driverrf4463pro.c, 772 :: 		ucSPI2ByteReceived = 0;
0x1CDE	0x2200    MOVS	R2, #0
0x1CE0	0x4905    LDR	R1, [PC, #20]
0x1CE2	0x700A    STRB	R2, [R1, #0]
;driverrf4463pro.c, 774 :: 		SPI2_DR = ucData;
0x1CE4	0x4905    LDR	R1, [PC, #20]
0x1CE6	0x6008    STR	R0, [R1, #0]
; ucData end address is: 0 (R0)
;driverrf4463pro.c, 778 :: 		while ( SPI2_SRbits.BSY );                // espera a que el buffer este vacio
L_ucRf4463SPIByte109:
0x1CE8	0x4905    LDR	R1, [PC, #20]
0x1CEA	0x6809    LDR	R1, [R1, #0]
0x1CEC	0xB101    CBZ	R1, L_ucRf4463SPIByte110
0x1CEE	0xE7FB    B	L_ucRf4463SPIByte109
L_ucRf4463SPIByte110:
;driverrf4463pro.c, 780 :: 		return ( ucSPI2ByteReceived );
0x1CF0	0x4901    LDR	R1, [PC, #4]
0x1CF2	0x7808    LDRB	R0, [R1, #0]
;driverrf4463pro.c, 816 :: 		}
L_end_ucRf4463SPIByte:
0x1CF4	0xB001    ADD	SP, SP, #4
0x1CF6	0x4770    BX	LR
0x1CF8	0x228A2000  	_ucSPI2ByteReceived+0
0x1CFC	0x380C4000  	SPI2_DR+0
0x1D00	0x011C4207  	SPI2_SRbits+0
; end of _ucRf4463SPIByte
_vRF4463Init:
;driverrf4463pro.c, 53 :: 		void vRF4463Init ( void ) {  // MODE,
0x2A74	0xB086    SUB	SP, SP, #24
0x2A76	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 56 :: 		for ( i = 4; i < 16; i++ ) {
; i start address is: 12 (R3)
0x2A7A	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init1:
; i start address is: 12 (R3)
0x2A7C	0x2B10    CMP	R3, #16
0x2A7E	0xD20F    BCS	L_vRF4463Init2
;driverrf4463pro.c, 57 :: 		RF_MODEM_MOD_TYPE_12_data[ i ] = RF_MODEM_MOD_TYPE_12[ ucRF4463Rate ][ i - 4 ];
0x2A80	0x48AC    LDR	R0, [PC, #688]
0x2A82	0x18C2    ADDS	R2, R0, R3
0x2A84	0x48AC    LDR	R0, [PC, #688]
0x2A86	0x7801    LDRB	R1, [R0, #0]
0x2A88	0x200C    MOVS	R0, #12
0x2A8A	0x4341    MULS	R1, R0, R1
0x2A8C	0x48AB    LDR	R0, [PC, #684]
0x2A8E	0x1841    ADDS	R1, R0, R1
0x2A90	0x1F18    SUBS	R0, R3, #4
0x2A92	0xB200    SXTH	R0, R0
0x2A94	0x1808    ADDS	R0, R1, R0
0x2A96	0x7800    LDRB	R0, [R0, #0]
0x2A98	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 56 :: 		for ( i = 4; i < 16; i++ ) {
0x2A9A	0x1C5B    ADDS	R3, R3, #1
0x2A9C	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 58 :: 		}
; i end address is: 12 (R3)
0x2A9E	0xE7ED    B	L_vRF4463Init1
L_vRF4463Init2:
;driverrf4463pro.c, 61 :: 		if ( ucRF4463Freq3 < 8 ) {
0x2AA0	0x48A7    LDR	R0, [PC, #668]
0x2AA2	0x7800    LDRB	R0, [R0, #0]
0x2AA4	0x2808    CMP	R0, #8
0x2AA6	0xF0808098  BCS	L_vRF4463Init4
;driverrf4463pro.c, 62 :: 		for ( i = 4; i < 12; i++ ) {
; i start address is: 12 (R3)
0x2AAA	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init5:
; i start address is: 12 (R3)
0x2AAC	0x2B0C    CMP	R3, #12
0x2AAE	0xD20E    BCS	L_vRF4463Init6
;driverrf4463pro.c, 63 :: 		RF_MODEM_TX_RAMP_DELAY_8_data[ i ] = RF_MODEM_TX_RAMP_DELAY_8_433[ ucRF4463Rate ][ i - 4 ];
0x2AB0	0x48A4    LDR	R0, [PC, #656]
0x2AB2	0x18C2    ADDS	R2, R0, R3
0x2AB4	0x48A0    LDR	R0, [PC, #640]
0x2AB6	0x7800    LDRB	R0, [R0, #0]
0x2AB8	0x00C1    LSLS	R1, R0, #3
0x2ABA	0x48A3    LDR	R0, [PC, #652]
0x2ABC	0x1841    ADDS	R1, R0, R1
0x2ABE	0x1F18    SUBS	R0, R3, #4
0x2AC0	0xB200    SXTH	R0, R0
0x2AC2	0x1808    ADDS	R0, R1, R0
0x2AC4	0x7800    LDRB	R0, [R0, #0]
0x2AC6	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 62 :: 		for ( i = 4; i < 12; i++ ) {
0x2AC8	0x1C5B    ADDS	R3, R3, #1
0x2ACA	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 64 :: 		}
; i end address is: 12 (R3)
0x2ACC	0xE7EE    B	L_vRF4463Init5
L_vRF4463Init6:
;driverrf4463pro.c, 65 :: 		for ( i = 4; i < 11; i++ ) {
; i start address is: 12 (R3)
0x2ACE	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init8:
; i start address is: 12 (R3)
0x2AD0	0x2B0B    CMP	R3, #11
0x2AD2	0xD20F    BCS	L_vRF4463Init9
;driverrf4463pro.c, 66 :: 		RF_MODEM_AFC_GEAR_7_data[ i ] = RF_MODEM_AFC_GEAR_7_433[ ucRF4463Rate ][ i - 4 ];
0x2AD4	0x489D    LDR	R0, [PC, #628]
0x2AD6	0x18C2    ADDS	R2, R0, R3
0x2AD8	0x4897    LDR	R0, [PC, #604]
0x2ADA	0x7801    LDRB	R1, [R0, #0]
0x2ADC	0x2007    MOVS	R0, #7
0x2ADE	0x4341    MULS	R1, R0, R1
0x2AE0	0x489B    LDR	R0, [PC, #620]
0x2AE2	0x1841    ADDS	R1, R0, R1
0x2AE4	0x1F18    SUBS	R0, R3, #4
0x2AE6	0xB200    SXTH	R0, R0
0x2AE8	0x1808    ADDS	R0, R1, R0
0x2AEA	0x7800    LDRB	R0, [R0, #0]
0x2AEC	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 65 :: 		for ( i = 4; i < 11; i++ ) {
0x2AEE	0x1C5B    ADDS	R3, R3, #1
0x2AF0	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 67 :: 		}
; i end address is: 12 (R3)
0x2AF2	0xE7ED    B	L_vRF4463Init8
L_vRF4463Init9:
;driverrf4463pro.c, 68 :: 		for ( i = 4; i < 15; i++ ) {
; i start address is: 12 (R3)
0x2AF4	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init11:
; i start address is: 12 (R3)
0x2AF6	0x2B0F    CMP	R3, #15
0x2AF8	0xD20F    BCS	L_vRF4463Init12
;driverrf4463pro.c, 69 :: 		RF_MODEM_OOK_CNT1_11_data[ i ] = RF_MODEM_OOK_CNT1_11_433[ ucRF4463Rate ][ i - 4 ];
0x2AFA	0x4896    LDR	R0, [PC, #600]
0x2AFC	0x18C2    ADDS	R2, R0, R3
0x2AFE	0x488E    LDR	R0, [PC, #568]
0x2B00	0x7801    LDRB	R1, [R0, #0]
0x2B02	0x200B    MOVS	R0, #11
0x2B04	0x4341    MULS	R1, R0, R1
0x2B06	0x4894    LDR	R0, [PC, #592]
0x2B08	0x1841    ADDS	R1, R0, R1
0x2B0A	0x1F18    SUBS	R0, R3, #4
0x2B0C	0xB200    SXTH	R0, R0
0x2B0E	0x1808    ADDS	R0, R1, R0
0x2B10	0x7800    LDRB	R0, [R0, #0]
0x2B12	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 68 :: 		for ( i = 4; i < 15; i++ ) {
0x2B14	0x1C5B    ADDS	R3, R3, #1
0x2B16	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 70 :: 		}
; i end address is: 12 (R3)
0x2B18	0xE7ED    B	L_vRF4463Init11
L_vRF4463Init12:
;driverrf4463pro.c, 71 :: 		for ( i = 4; i < 16; i++ ) {
; i start address is: 12 (R3)
0x2B1A	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init14:
; i start address is: 12 (R3)
0x2B1C	0x2B10    CMP	R3, #16
0x2B1E	0xD20F    BCS	L_vRF4463Init15
;driverrf4463pro.c, 72 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x2B20	0x488E    LDR	R0, [PC, #568]
0x2B22	0x18C2    ADDS	R2, R0, R3
0x2B24	0x4884    LDR	R0, [PC, #528]
0x2B26	0x7801    LDRB	R1, [R0, #0]
0x2B28	0x200C    MOVS	R0, #12
0x2B2A	0x4341    MULS	R1, R0, R1
0x2B2C	0x488C    LDR	R0, [PC, #560]
0x2B2E	0x1841    ADDS	R1, R0, R1
0x2B30	0x1F18    SUBS	R0, R3, #4
0x2B32	0xB200    SXTH	R0, R0
0x2B34	0x1808    ADDS	R0, R1, R0
0x2B36	0x7800    LDRB	R0, [R0, #0]
0x2B38	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 71 :: 		for ( i = 4; i < 16; i++ ) {
0x2B3A	0x1C5B    ADDS	R3, R3, #1
0x2B3C	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 73 :: 		}
; i end address is: 12 (R3)
0x2B3E	0xE7ED    B	L_vRF4463Init14
L_vRF4463Init15:
;driverrf4463pro.c, 74 :: 		for ( i = 4; i < 16; i++ ) {
; i start address is: 12 (R3)
0x2B40	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init17:
; i start address is: 12 (R3)
0x2B42	0x2B10    CMP	R3, #16
0x2B44	0xD20F    BCS	L_vRF4463Init18
;driverrf4463pro.c, 75 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x2B46	0x4887    LDR	R0, [PC, #540]
0x2B48	0x18C2    ADDS	R2, R0, R3
0x2B4A	0x487B    LDR	R0, [PC, #492]
0x2B4C	0x7801    LDRB	R1, [R0, #0]
0x2B4E	0x200C    MOVS	R0, #12
0x2B50	0x4341    MULS	R1, R0, R1
0x2B52	0x4885    LDR	R0, [PC, #532]
0x2B54	0x1841    ADDS	R1, R0, R1
0x2B56	0x1F18    SUBS	R0, R3, #4
0x2B58	0xB200    SXTH	R0, R0
0x2B5A	0x1808    ADDS	R0, R1, R0
0x2B5C	0x7800    LDRB	R0, [R0, #0]
0x2B5E	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 74 :: 		for ( i = 4; i < 16; i++ ) {
0x2B60	0x1C5B    ADDS	R3, R3, #1
0x2B62	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 76 :: 		}
; i end address is: 12 (R3)
0x2B64	0xE7ED    B	L_vRF4463Init17
L_vRF4463Init18:
;driverrf4463pro.c, 77 :: 		for ( i = 4; i < 16; i++ ) {
; i start address is: 12 (R3)
0x2B66	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init20:
; i start address is: 12 (R3)
0x2B68	0x2B10    CMP	R3, #16
0x2B6A	0xD20F    BCS	L_vRF4463Init21
;driverrf4463pro.c, 78 :: 		RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x2B6C	0x487F    LDR	R0, [PC, #508]
0x2B6E	0x18C2    ADDS	R2, R0, R3
0x2B70	0x4871    LDR	R0, [PC, #452]
0x2B72	0x7801    LDRB	R1, [R0, #0]
0x2B74	0x200C    MOVS	R0, #12
0x2B76	0x4341    MULS	R1, R0, R1
0x2B78	0x487D    LDR	R0, [PC, #500]
0x2B7A	0x1841    ADDS	R1, R0, R1
0x2B7C	0x1F18    SUBS	R0, R3, #4
0x2B7E	0xB200    SXTH	R0, R0
0x2B80	0x1808    ADDS	R0, R1, R0
0x2B82	0x7800    LDRB	R0, [R0, #0]
0x2B84	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 77 :: 		for ( i = 4; i < 16; i++ ) {
0x2B86	0x1C5B    ADDS	R3, R3, #1
0x2B88	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 79 :: 		}
; i end address is: 12 (R3)
0x2B8A	0xE7ED    B	L_vRF4463Init20
L_vRF4463Init21:
;driverrf4463pro.c, 80 :: 		for ( i = 4; i < 13; i++ ) {
; i start address is: 12 (R3)
0x2B8C	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init23:
; i start address is: 12 (R3)
0x2B8E	0x2B0D    CMP	R3, #13
0x2B90	0xD20F    BCS	L_vRF4463Init24
;driverrf4463pro.c, 81 :: 		RF_MODEM_AGC_WINDOW_SIZE_9_data[ i ] = RF_MODEM_AGC_WINDOW_SIZE_9_433[ ucRF4463Rate ][ i - 4 ];
0x2B92	0x4878    LDR	R0, [PC, #480]
0x2B94	0x18C2    ADDS	R2, R0, R3
0x2B96	0x4868    LDR	R0, [PC, #416]
0x2B98	0x7801    LDRB	R1, [R0, #0]
0x2B9A	0x2009    MOVS	R0, #9
0x2B9C	0x4341    MULS	R1, R0, R1
0x2B9E	0x4876    LDR	R0, [PC, #472]
0x2BA0	0x1841    ADDS	R1, R0, R1
0x2BA2	0x1F18    SUBS	R0, R3, #4
0x2BA4	0xB200    SXTH	R0, R0
0x2BA6	0x1808    ADDS	R0, R1, R0
0x2BA8	0x7800    LDRB	R0, [R0, #0]
0x2BAA	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 80 :: 		for ( i = 4; i < 13; i++ ) {
0x2BAC	0x1C5B    ADDS	R3, R3, #1
0x2BAE	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 82 :: 		}
; i end address is: 12 (R3)
0x2BB0	0xE7ED    B	L_vRF4463Init23
L_vRF4463Init24:
;driverrf4463pro.c, 83 :: 		for ( i = 4; i < 13; i++ ) {
; i start address is: 12 (R3)
0x2BB2	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init26:
; i start address is: 12 (R3)
0x2BB4	0x2B0D    CMP	R3, #13
0x2BB6	0xD20F    BCS	L_vRF4463Init27
;driverrf4463pro.c, 84 :: 		RF_MODEM_BCR_OSR_1_9_data[ i ] = RF_MODEM_BCR_OSR_1_9_433[ ucRF4463Rate ][ i - 4 ];
0x2BB8	0x4870    LDR	R0, [PC, #448]
0x2BBA	0x18C2    ADDS	R2, R0, R3
0x2BBC	0x485E    LDR	R0, [PC, #376]
0x2BBE	0x7801    LDRB	R1, [R0, #0]
0x2BC0	0x2009    MOVS	R0, #9
0x2BC2	0x4341    MULS	R1, R0, R1
0x2BC4	0x486E    LDR	R0, [PC, #440]
0x2BC6	0x1841    ADDS	R1, R0, R1
0x2BC8	0x1F18    SUBS	R0, R3, #4
0x2BCA	0xB200    SXTH	R0, R0
0x2BCC	0x1808    ADDS	R0, R1, R0
0x2BCE	0x7800    LDRB	R0, [R0, #0]
0x2BD0	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 83 :: 		for ( i = 4; i < 13; i++ ) {
0x2BD2	0x1C5B    ADDS	R3, R3, #1
0x2BD4	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 85 :: 		}
; i end address is: 12 (R3)
0x2BD6	0xE7ED    B	L_vRF4463Init26
L_vRF4463Init27:
;driverrf4463pro.c, 86 :: 		}
0x2BD8	0xE096    B	L_vRF4463Init29
L_vRF4463Init4:
;driverrf4463pro.c, 88 :: 		for ( i = 4; i < 12; i++ ) {
; i start address is: 12 (R3)
0x2BDA	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init30:
; i start address is: 12 (R3)
0x2BDC	0x2B0C    CMP	R3, #12
0x2BDE	0xD20E    BCS	L_vRF4463Init31
;driverrf4463pro.c, 89 :: 		RF_MODEM_TX_RAMP_DELAY_8_data[ i ] = RF_MODEM_TX_RAMP_DELAY_8_850[ ucRF4463Rate ][ i - 4 ];
0x2BE0	0x4858    LDR	R0, [PC, #352]
0x2BE2	0x18C2    ADDS	R2, R0, R3
0x2BE4	0x4854    LDR	R0, [PC, #336]
0x2BE6	0x7800    LDRB	R0, [R0, #0]
0x2BE8	0x00C1    LSLS	R1, R0, #3
0x2BEA	0x4866    LDR	R0, [PC, #408]
0x2BEC	0x1841    ADDS	R1, R0, R1
0x2BEE	0x1F18    SUBS	R0, R3, #4
0x2BF0	0xB200    SXTH	R0, R0
0x2BF2	0x1808    ADDS	R0, R1, R0
0x2BF4	0x7800    LDRB	R0, [R0, #0]
0x2BF6	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 88 :: 		for ( i = 4; i < 12; i++ ) {
0x2BF8	0x1C5B    ADDS	R3, R3, #1
0x2BFA	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 90 :: 		}
; i end address is: 12 (R3)
0x2BFC	0xE7EE    B	L_vRF4463Init30
L_vRF4463Init31:
;driverrf4463pro.c, 91 :: 		for ( i = 4; i < 11; i++ ) {
; i start address is: 12 (R3)
0x2BFE	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init33:
; i start address is: 12 (R3)
0x2C00	0x2B0B    CMP	R3, #11
0x2C02	0xD20F    BCS	L_vRF4463Init34
;driverrf4463pro.c, 92 :: 		RF_MODEM_AFC_GEAR_7_data[ i ] = RF_MODEM_AFC_GEAR_7_850[ ucRF4463Rate ][ i - 4 ];
0x2C04	0x4851    LDR	R0, [PC, #324]
0x2C06	0x18C2    ADDS	R2, R0, R3
0x2C08	0x484B    LDR	R0, [PC, #300]
0x2C0A	0x7801    LDRB	R1, [R0, #0]
0x2C0C	0x2007    MOVS	R0, #7
0x2C0E	0x4341    MULS	R1, R0, R1
0x2C10	0x485D    LDR	R0, [PC, #372]
0x2C12	0x1841    ADDS	R1, R0, R1
0x2C14	0x1F18    SUBS	R0, R3, #4
0x2C16	0xB200    SXTH	R0, R0
0x2C18	0x1808    ADDS	R0, R1, R0
0x2C1A	0x7800    LDRB	R0, [R0, #0]
0x2C1C	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 91 :: 		for ( i = 4; i < 11; i++ ) {
0x2C1E	0x1C5B    ADDS	R3, R3, #1
0x2C20	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 93 :: 		}
; i end address is: 12 (R3)
0x2C22	0xE7ED    B	L_vRF4463Init33
L_vRF4463Init34:
;driverrf4463pro.c, 94 :: 		for ( i = 4; i < 15; i++ ) {
; i start address is: 12 (R3)
0x2C24	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init36:
; i start address is: 12 (R3)
0x2C26	0x2B0F    CMP	R3, #15
0x2C28	0xD20F    BCS	L_vRF4463Init37
;driverrf4463pro.c, 95 :: 		RF_MODEM_OOK_CNT1_11_data[ i ] = RF_MODEM_OOK_CNT1_11_850[ ucRF4463Rate ][ i - 4 ];
0x2C2A	0x484A    LDR	R0, [PC, #296]
0x2C2C	0x18C2    ADDS	R2, R0, R3
0x2C2E	0x4842    LDR	R0, [PC, #264]
0x2C30	0x7801    LDRB	R1, [R0, #0]
0x2C32	0x200B    MOVS	R0, #11
0x2C34	0x4341    MULS	R1, R0, R1
0x2C36	0x4855    LDR	R0, [PC, #340]
0x2C38	0x1841    ADDS	R1, R0, R1
0x2C3A	0x1F18    SUBS	R0, R3, #4
0x2C3C	0xB200    SXTH	R0, R0
0x2C3E	0x1808    ADDS	R0, R1, R0
0x2C40	0x7800    LDRB	R0, [R0, #0]
0x2C42	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 94 :: 		for ( i = 4; i < 15; i++ ) {
0x2C44	0x1C5B    ADDS	R3, R3, #1
0x2C46	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 96 :: 		}
; i end address is: 12 (R3)
0x2C48	0xE7ED    B	L_vRF4463Init36
L_vRF4463Init37:
;driverrf4463pro.c, 97 :: 		for ( i = 4; i < 16; i++ ) {
; i start address is: 12 (R3)
0x2C4A	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init39:
; i start address is: 12 (R3)
0x2C4C	0x2B10    CMP	R3, #16
0x2C4E	0xD20F    BCS	L_vRF4463Init40
;driverrf4463pro.c, 98 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x2C50	0x4842    LDR	R0, [PC, #264]
0x2C52	0x18C2    ADDS	R2, R0, R3
0x2C54	0x4838    LDR	R0, [PC, #224]
0x2C56	0x7801    LDRB	R1, [R0, #0]
0x2C58	0x200C    MOVS	R0, #12
0x2C5A	0x4341    MULS	R1, R0, R1
0x2C5C	0x484C    LDR	R0, [PC, #304]
0x2C5E	0x1841    ADDS	R1, R0, R1
0x2C60	0x1F18    SUBS	R0, R3, #4
0x2C62	0xB200    SXTH	R0, R0
0x2C64	0x1808    ADDS	R0, R1, R0
0x2C66	0x7800    LDRB	R0, [R0, #0]
0x2C68	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 97 :: 		for ( i = 4; i < 16; i++ ) {
0x2C6A	0x1C5B    ADDS	R3, R3, #1
0x2C6C	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 99 :: 		}
; i end address is: 12 (R3)
0x2C6E	0xE7ED    B	L_vRF4463Init39
L_vRF4463Init40:
;driverrf4463pro.c, 100 :: 		for ( i = 4; i < 16; i++ ) {
; i start address is: 12 (R3)
0x2C70	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init42:
; i start address is: 12 (R3)
0x2C72	0x2B10    CMP	R3, #16
0x2C74	0xD20F    BCS	L_vRF4463Init43
;driverrf4463pro.c, 101 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x2C76	0x483B    LDR	R0, [PC, #236]
0x2C78	0x18C2    ADDS	R2, R0, R3
0x2C7A	0x482F    LDR	R0, [PC, #188]
0x2C7C	0x7801    LDRB	R1, [R0, #0]
0x2C7E	0x200C    MOVS	R0, #12
0x2C80	0x4341    MULS	R1, R0, R1
0x2C82	0x4844    LDR	R0, [PC, #272]
0x2C84	0x1841    ADDS	R1, R0, R1
0x2C86	0x1F18    SUBS	R0, R3, #4
0x2C88	0xB200    SXTH	R0, R0
0x2C8A	0x1808    ADDS	R0, R1, R0
0x2C8C	0x7800    LDRB	R0, [R0, #0]
0x2C8E	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 100 :: 		for ( i = 4; i < 16; i++ ) {
0x2C90	0x1C5B    ADDS	R3, R3, #1
0x2C92	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 102 :: 		}
; i end address is: 12 (R3)
0x2C94	0xE7ED    B	L_vRF4463Init42
L_vRF4463Init43:
;driverrf4463pro.c, 103 :: 		for ( i = 4; i < 16; i++ ) {
; i start address is: 12 (R3)
0x2C96	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init45:
; i start address is: 12 (R3)
0x2C98	0x2B10    CMP	R3, #16
0x2C9A	0xD20F    BCS	L_vRF4463Init46
;driverrf4463pro.c, 104 :: 		RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x2C9C	0x4833    LDR	R0, [PC, #204]
0x2C9E	0x18C2    ADDS	R2, R0, R3
0x2CA0	0x4825    LDR	R0, [PC, #148]
0x2CA2	0x7801    LDRB	R1, [R0, #0]
0x2CA4	0x200C    MOVS	R0, #12
0x2CA6	0x4341    MULS	R1, R0, R1
0x2CA8	0x483B    LDR	R0, [PC, #236]
0x2CAA	0x1841    ADDS	R1, R0, R1
0x2CAC	0x1F18    SUBS	R0, R3, #4
0x2CAE	0xB200    SXTH	R0, R0
0x2CB0	0x1808    ADDS	R0, R1, R0
0x2CB2	0x7800    LDRB	R0, [R0, #0]
0x2CB4	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 103 :: 		for ( i = 4; i < 16; i++ ) {
0x2CB6	0x1C5B    ADDS	R3, R3, #1
0x2CB8	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 105 :: 		}
; i end address is: 12 (R3)
0x2CBA	0xE7ED    B	L_vRF4463Init45
L_vRF4463Init46:
;driverrf4463pro.c, 106 :: 		for ( i = 4; i < 13; i++ ) {
; i start address is: 12 (R3)
0x2CBC	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init48:
; i start address is: 12 (R3)
0x2CBE	0x2B0D    CMP	R3, #13
0x2CC0	0xD20F    BCS	L_vRF4463Init49
;driverrf4463pro.c, 107 :: 		RF_MODEM_AGC_WINDOW_SIZE_9_data[ i ] = RF_MODEM_AGC_WINDOW_SIZE_9_850[ ucRF4463Rate ][ i - 4 ];
0x2CC2	0x482C    LDR	R0, [PC, #176]
0x2CC4	0x18C2    ADDS	R2, R0, R3
0x2CC6	0x481C    LDR	R0, [PC, #112]
0x2CC8	0x7801    LDRB	R1, [R0, #0]
0x2CCA	0x2009    MOVS	R0, #9
0x2CCC	0x4341    MULS	R1, R0, R1
0x2CCE	0x4833    LDR	R0, [PC, #204]
0x2CD0	0x1841    ADDS	R1, R0, R1
0x2CD2	0x1F18    SUBS	R0, R3, #4
0x2CD4	0xB200    SXTH	R0, R0
0x2CD6	0x1808    ADDS	R0, R1, R0
0x2CD8	0x7800    LDRB	R0, [R0, #0]
0x2CDA	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 106 :: 		for ( i = 4; i < 13; i++ ) {
0x2CDC	0x1C5B    ADDS	R3, R3, #1
0x2CDE	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 108 :: 		}
; i end address is: 12 (R3)
0x2CE0	0xE7ED    B	L_vRF4463Init48
L_vRF4463Init49:
;driverrf4463pro.c, 109 :: 		for ( i = 4; i < 13; i++ ) {
; i start address is: 12 (R3)
0x2CE2	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init51:
; i start address is: 12 (R3)
0x2CE4	0x2B0D    CMP	R3, #13
0x2CE6	0xD20F    BCS	L_vRF4463Init52
;driverrf4463pro.c, 110 :: 		RF_MODEM_BCR_OSR_1_9_data[ i ] = RF_MODEM_BCR_OSR_1_9_850[ ucRF4463Rate ][ i - 4 ];
0x2CE8	0x4824    LDR	R0, [PC, #144]
0x2CEA	0x18C2    ADDS	R2, R0, R3
0x2CEC	0x4812    LDR	R0, [PC, #72]
0x2CEE	0x7801    LDRB	R1, [R0, #0]
0x2CF0	0x2009    MOVS	R0, #9
0x2CF2	0x4341    MULS	R1, R0, R1
0x2CF4	0x482A    LDR	R0, [PC, #168]
0x2CF6	0x1841    ADDS	R1, R0, R1
0x2CF8	0x1F18    SUBS	R0, R3, #4
0x2CFA	0xB200    SXTH	R0, R0
0x2CFC	0x1808    ADDS	R0, R1, R0
0x2CFE	0x7800    LDRB	R0, [R0, #0]
0x2D00	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 109 :: 		for ( i = 4; i < 13; i++ ) {
0x2D02	0x1C5B    ADDS	R3, R3, #1
0x2D04	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 111 :: 		}
; i end address is: 12 (R3)
0x2D06	0xE7ED    B	L_vRF4463Init51
L_vRF4463Init52:
;driverrf4463pro.c, 112 :: 		}
L_vRF4463Init29:
;driverrf4463pro.c, 113 :: 		for ( i = 4; i < 11; i++ ) {
; i start address is: 12 (R3)
0x2D08	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init54:
; i start address is: 12 (R3)
0x2D0A	0x2B0B    CMP	R3, #11
0x2D0C	0xD20F    BCS	L_vRF4463Init55
;driverrf4463pro.c, 114 :: 		RF_SYNTH_PFDCP_CPFF_7_data[ i ] = RF_SYNTH_PFDCP_CPFF_7[ ucRF4463Rate ][ i - 4 ];
0x2D0E	0x4825    LDR	R0, [PC, #148]
0x2D10	0x18C2    ADDS	R2, R0, R3
0x2D12	0x4809    LDR	R0, [PC, #36]
0x2D14	0x7801    LDRB	R1, [R0, #0]
0x2D16	0x2007    MOVS	R0, #7
0x2D18	0x4341    MULS	R1, R0, R1
0x2D1A	0x4823    LDR	R0, [PC, #140]
0x2D1C	0x1841    ADDS	R1, R0, R1
0x2D1E	0x1F18    SUBS	R0, R3, #4
0x2D20	0xB200    SXTH	R0, R0
0x2D22	0x1808    ADDS	R0, R1, R0
0x2D24	0x7800    LDRB	R0, [R0, #0]
0x2D26	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 113 :: 		for ( i = 4; i < 11; i++ ) {
0x2D28	0x1C5B    ADDS	R3, R3, #1
0x2D2A	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 115 :: 		}
; i end address is: 12 (R3)
0x2D2C	0xE7ED    B	L_vRF4463Init54
L_vRF4463Init55:
;driverrf4463pro.c, 119 :: 		vRF4463GPIO_SET( ucRF4463Mode );                              // PARAMETRO CONFIGURABLE
0x2D2E	0x481F    LDR	R0, [PC, #124]
0x2D30	0xF000B83E  B	#124
0x2D34	0x200D2000  	_RF_MODEM_MOD_TYPE_12_data+0
0x2D38	0x22A82000  	_ucRF4463Rate+0
0x2D3C	0x5FFC0000  	_RF_MODEM_MOD_TYPE_12+0
0x2D40	0x22A92000  	_ucRF4463Freq3+0
0x2D44	0x201D2000  	_RF_MODEM_TX_RAMP_DELAY_8_data+0
0x2D48	0x65240000  	_RF_MODEM_TX_RAMP_DELAY_8_433+0
0x2D4C	0x20292000  	_RF_MODEM_AFC_GEAR_7_data+0
0x2D50	0x65D40000  	_RF_MODEM_AFC_GEAR_7_433+0
0x2D54	0x20362000  	_RF_MODEM_OOK_CNT1_11_data+0
0x2D58	0x617D0000  	_RF_MODEM_OOK_CNT1_11_433+0
0x2D5C	0x20452000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+0
0x2D60	0x60800000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+0
0x2D64	0x20552000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x2D68	0x5DEC0000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+0
0x2D6C	0x20652000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x2D70	0x5D680000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+0
0x2D74	0x20752000  	_RF_MODEM_AGC_WINDOW_SIZE_9_data+0
0x2D78	0x64610000  	_RF_MODEM_AGC_WINDOW_SIZE_9_433+0
0x2D7C	0x20822000  	_RF_MODEM_BCR_OSR_1_9_data+0
0x2D80	0x63FE0000  	_RF_MODEM_BCR_OSR_1_9_433+0
0x2D84	0x657C0000  	_RF_MODEM_TX_RAMP_DELAY_8_850+0
0x2D88	0x66210000  	_RF_MODEM_AFC_GEAR_7_850+0
0x2D8C	0x61040000  	_RF_MODEM_OOK_CNT1_11_850+0
0x2D90	0x5EF40000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+0
0x2D94	0x5E700000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+0
0x2D98	0x5F780000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+0
0x2D9C	0x63380000  	_RF_MODEM_AGC_WINDOW_SIZE_9_850+0
0x2DA0	0x639B0000  	_RF_MODEM_BCR_OSR_1_9_850+0
0x2DA4	0x208F2000  	_RF_SYNTH_PFDCP_CPFF_7_data+0
0x2DA8	0x666E0000  	_RF_SYNTH_PFDCP_CPFF_7+0
0x2DAC	0x22AA2000  	_ucRF4463Mode+0
0x2DB0	0x7800    LDRB	R0, [R0, #0]
0x2DB2	0xF7FFF9B7  BL	_vRF4463GPIO_SET+0
;driverrf4463pro.c, 122 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x2DB6	0xAA01    ADD	R2, SP, #4
0x2DB8	0x2011    MOVS	R0, #17
0x2DBA	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 123 :: 		app_command_buf[ 1 ] = 0x00;    // 0x0000
0x2DBC	0x1C51    ADDS	R1, R2, #1
0x2DBE	0x2000    MOVS	R0, #0
0x2DC0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 124 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1 Parameters
0x2DC2	0x1C91    ADDS	R1, R2, #2
0x2DC4	0x2001    MOVS	R0, #1
0x2DC6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 125 :: 		app_command_buf[ 3 ] = 0x00;    // 0x0000
0x2DC8	0x1CD1    ADDS	R1, R2, #3
0x2DCA	0x2000    MOVS	R0, #0
0x2DCC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 126 :: 		app_command_buf[ 4 ] = 98;      // freq  adjustment    ( rango desde 0 - 127 Low cap - High Cap )
0x2DCE	0x1D11    ADDS	R1, R2, #4
0x2DD0	0x2062    MOVS	R0, #98
0x2DD2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 127 :: 		spi_write( 5, app_command_buf );
0x2DD4	0x4611    MOV	R1, R2
0x2DD6	0x2005    MOVS	R0, #5
0x2DD8	0xF7FDFC44  BL	_spi_write+0
;driverrf4463pro.c, 130 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x2DDC	0xAA01    ADD	R2, SP, #4
0x2DDE	0x2011    MOVS	R0, #17
0x2DE0	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 131 :: 		app_command_buf[ 1 ] = 0x00;    // 0x0003
0x2DE2	0x1C51    ADDS	R1, R2, #1
0x2DE4	0x2000    MOVS	R0, #0
0x2DE6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 132 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1 Parameters
0x2DE8	0x1C91    ADDS	R1, R2, #2
0x2DEA	0x2001    MOVS	R0, #1
0x2DEC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 133 :: 		app_command_buf[ 3 ] = 0x03;    // 0x0003
0x2DEE	0x1CD1    ADDS	R1, R2, #3
0x2DF0	0x2003    MOVS	R0, #3
0x2DF2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 134 :: 		app_command_buf[ 4 ] = 0x40;    // tx = rx = 64 byte, ordinary PH,high performance mode  ?????????????????????
0x2DF4	0x1D11    ADDS	R1, R2, #4
0x2DF6	0x2040    MOVS	R0, #64
0x2DF8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 135 :: 		spi_write( 5, app_command_buf );
0x2DFA	0x4611    MOV	R1, R2
0x2DFC	0x2005    MOVS	R0, #5
0x2DFE	0xF7FDFC31  BL	_spi_write+0
;driverrf4463pro.c, 139 :: 		spi_write( 0x08, RF_FRR_CTL_A_MODE_4_data );    // disable all fast response register
0x2E02	0x49DF    LDR	R1, [PC, #892]
0x2E04	0x2008    MOVS	R0, #8
0x2E06	0xF7FDFC2D  BL	_spi_write+0
;driverrf4463pro.c, 142 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x2E0A	0xAA01    ADD	R2, SP, #4
0x2E0C	0x2011    MOVS	R0, #17
0x2E0E	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 143 :: 		app_command_buf[ 1 ] = 0x10;    // 0x1000
0x2E10	0x1C51    ADDS	R1, R2, #1
0x2E12	0x2010    MOVS	R0, #16
0x2E14	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 144 :: 		app_command_buf[ 2 ] = 0x09;    // Total 9 Parameters
0x2E16	0x1C91    ADDS	R1, R2, #2
0x2E18	0x2009    MOVS	R0, #9
0x2E1A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 145 :: 		app_command_buf[ 3 ] = 0x00;    // 0x1000
0x2E1C	0x1CD1    ADDS	R1, R2, #3
0x2E1E	0x2000    MOVS	R0, #0
0x2E20	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 147 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x2E22	0x48D8    LDR	R0, [PC, #864]
0x2E24	0x7800    LDRB	R0, [R0, #0]
0x2E26	0x2802    CMP	R0, #2
0x2E28	0xD104    BNE	L_vRF4463Init57
;driverrf4463pro.c, 148 :: 		app_command_buf[ 4 ] = 0xff;     //  Need to send 255 bytes of Preamble
0x2E2A	0xA801    ADD	R0, SP, #4
0x2E2C	0x1D01    ADDS	R1, R0, #4
0x2E2E	0x20FF    MOVS	R0, #255
0x2E30	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 149 :: 		}
0x2E32	0xE003    B	L_vRF4463Init58
L_vRF4463Init57:
;driverrf4463pro.c, 151 :: 		app_command_buf[ 4 ] = 0x08;   //  Need to send 8 bytes of Preamble
0x2E34	0xA801    ADD	R0, SP, #4
0x2E36	0x1D01    ADDS	R1, R0, #4
0x2E38	0x2008    MOVS	R0, #8
0x2E3A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 152 :: 		}
L_vRF4463Init58:
;driverrf4463pro.c, 155 :: 		app_command_buf[ 5 ]   = 0x14;       // To detect 20 bit sync word,
0x2E3C	0xAA01    ADD	R2, SP, #4
0x2E3E	0x1D51    ADDS	R1, R2, #5
0x2E40	0x2014    MOVS	R0, #20
0x2E42	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 156 :: 		app_command_buf[ 6 ]   = 0x00;       // Non-standard preamble settings, useless
0x2E44	0x1D91    ADDS	R1, R2, #6
0x2E46	0x2000    MOVS	R0, #0
0x2E48	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 157 :: 		app_command_buf[ 7 ]   = 0x0f;       // Time of the preamble Timeout   ????????????????????????????????????????????????????????????
0x2E4A	0x1DD1    ADDS	R1, R2, #7
0x2E4C	0x200F    MOVS	R0, #15
0x2E4E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 158 :: 		app_command_buf[ 8 ]   = 0x31;       // The length of the preamble is   byte Calculation , 1st = 1 NO manchest  Encoding, using standard 1010.??
0x2E50	0xF2020108  ADDW	R1, R2, #8
0x2E54	0x2031    MOVS	R0, #49
0x2E56	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 159 :: 		app_command_buf[ 9 ]   = 0x0;        // Non-standard Preamble Patten 4th byte
0x2E58	0xF2020109  ADDW	R1, R2, #9
0x2E5C	0x2000    MOVS	R0, #0
0x2E5E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 160 :: 		app_command_buf[ 10 ]  = 0x00;       // Non-standard Preamble Patten 3rd byte
0x2E60	0xF202010A  ADDW	R1, R2, #10
0x2E64	0x2000    MOVS	R0, #0
0x2E66	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 161 :: 		app_command_buf[ 11 ]  = 0x00;       // Non-standard Preamble Patten 2nd byte
0x2E68	0xF202010B  ADDW	R1, R2, #11
0x2E6C	0x2000    MOVS	R0, #0
0x2E6E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 162 :: 		app_command_buf[ 12 ]  = 0x00;       // Non-standard Preamble Patten 1st byte
0x2E70	0xF202010C  ADDW	R1, R2, #12
0x2E74	0x2000    MOVS	R0, #0
0x2E76	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 163 :: 		spi_write(13, app_command_buf);
0x2E78	0x4611    MOV	R1, R2
0x2E7A	0x200D    MOVS	R0, #13
0x2E7C	0xF7FDFBF2  BL	_spi_write+0
;driverrf4463pro.c, 166 :: 		app_command_buf[ 0 ] = 0x11;         // SET PROPERTY
0x2E80	0xAA01    ADD	R2, SP, #4
0x2E82	0x2011    MOVS	R0, #17
0x2E84	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 167 :: 		app_command_buf[ 1 ] = 0x11;         // command = 0x1100
0x2E86	0x1C51    ADDS	R1, R2, #1
0x2E88	0x2011    MOVS	R0, #17
0x2E8A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 168 :: 		app_command_buf[ 2 ] = 0x05;         // Total 5 Parameters
0x2E8C	0x1C91    ADDS	R1, R2, #2
0x2E8E	0x2005    MOVS	R0, #5
0x2E90	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 169 :: 		app_command_buf[ 3 ] = 0x00;         // command = 0x1100
0x2E92	0x1CD1    ADDS	R1, R2, #3
0x2E94	0x2000    MOVS	R0, #0
0x2E96	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 170 :: 		app_command_buf[ 4 ] = 0x01;         // The synchronization word is defined and sent in the length field, and the synchronization word cannot be wrong,Not 4FSK, not manchest encoding, only 2 bytes
0x2E98	0x1D11    ADDS	R1, R2, #4
0x2E9A	0x2001    MOVS	R0, #1
0x2E9C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 172 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x2E9E	0x48B9    LDR	R0, [PC, #740]
0x2EA0	0x7800    LDRB	R0, [R0, #0]
0x2EA2	0x2802    CMP	R0, #2
0x2EA4	0xD107    BNE	L_vRF4463Init59
;driverrf4463pro.c, 173 :: 		app_command_buf[ 5 ] = 0x55;      // Sync word 3
0x2EA6	0xAA01    ADD	R2, SP, #4
0x2EA8	0x1D51    ADDS	R1, R2, #5
0x2EAA	0x2055    MOVS	R0, #85
0x2EAC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 174 :: 		app_command_buf[ 6 ] = 0x55;      // Sync word 2
0x2EAE	0x1D91    ADDS	R1, R2, #6
0x2EB0	0x2055    MOVS	R0, #85
0x2EB2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 175 :: 		}
0x2EB4	0xE006    B	L_vRF4463Init60
L_vRF4463Init59:
;driverrf4463pro.c, 177 :: 		app_command_buf[ 5 ] = 0x2d;    // Sync word 3
0x2EB6	0xAA01    ADD	R2, SP, #4
0x2EB8	0x1D51    ADDS	R1, R2, #5
0x2EBA	0x202D    MOVS	R0, #45
0x2EBC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 178 :: 		app_command_buf[ 6 ] = 0xd4;    // Sync word 2
0x2EBE	0x1D91    ADDS	R1, R2, #6
0x2EC0	0x20D4    MOVS	R0, #212
0x2EC2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 179 :: 		}
L_vRF4463Init60:
;driverrf4463pro.c, 181 :: 		app_command_buf[ 7 ] =  0x00;        // Sync word 1
0x2EC4	0xAA01    ADD	R2, SP, #4
0x2EC6	0x1DD1    ADDS	R1, R2, #7
0x2EC8	0x2000    MOVS	R0, #0
0x2ECA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 182 :: 		app_command_buf[ 8 ] = 0x00;         // Sync word 0
0x2ECC	0xF2020108  ADDW	R1, R2, #8
0x2ED0	0x2000    MOVS	R0, #0
0x2ED2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 183 :: 		spi_write( 9, app_command_buf );
0x2ED4	0x4611    MOV	R1, R2
0x2ED6	0x2009    MOVS	R0, #9
0x2ED8	0xF7FDFBC4  BL	_spi_write+0
;driverrf4463pro.c, 186 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x2EDC	0xAA01    ADD	R2, SP, #4
0x2EDE	0x2011    MOVS	R0, #17
0x2EE0	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 187 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1200
0x2EE2	0x1C51    ADDS	R1, R2, #1
0x2EE4	0x2012    MOVS	R0, #18
0x2EE6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 188 :: 		app_command_buf[ 2 ] = 0x01;        // Total 1 Parameters
0x2EE8	0x1C91    ADDS	R1, R2, #2
0x2EEA	0x2001    MOVS	R0, #1
0x2EEC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 189 :: 		app_command_buf[ 3 ] = 0x00;        // command = 0x1200
0x2EEE	0x1CD1    ADDS	R1, R2, #3
0x2EF0	0x2000    MOVS	R0, #0
0x2EF2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 190 :: 		app_command_buf[ 4 ] = 0x85;        // 1?cRC ??,CRC = itu-c, enable crc   ( original 0x81; )
0x2EF4	0x1D11    ADDS	R1, R2, #4
0x2EF6	0x2085    MOVS	R0, #133
0x2EF8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 191 :: 		spi_write( 5, app_command_buf );
0x2EFA	0x4611    MOV	R1, R2
0x2EFC	0x2005    MOVS	R0, #5
0x2EFE	0xF7FDFBB1  BL	_spi_write+0
;driverrf4463pro.c, 194 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x2F02	0xAA01    ADD	R2, SP, #4
0x2F04	0x2011    MOVS	R0, #17
0x2F06	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 195 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1206
0x2F08	0x1C51    ADDS	R1, R2, #1
0x2F0A	0x2012    MOVS	R0, #18
0x2F0C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 196 :: 		app_command_buf[ 2 ] = 0x01;        // Total 1Parameters
0x2F0E	0x1C91    ADDS	R1, R2, #2
0x2F10	0x2001    MOVS	R0, #1
0x2F12	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 197 :: 		app_command_buf[ 3 ] = 0x06;        // command = 0x1206
0x2F14	0x1CD1    ADDS	R1, R2, #3
0x2F16	0x2006    MOVS	R0, #6
0x2F18	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 198 :: 		app_command_buf[ 4 ] = 0x02;        //  tx = rx = 120d--1220 (tx packet,ph enable, not 4fsk, After receiving a packet of data,RX off,CRC Do not flip ,CRC MSB, data MSB
0x2F1A	0x1D11    ADDS	R1, R2, #4
0x2F1C	0x2002    MOVS	R0, #2
0x2F1E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 199 :: 		spi_write( 5, app_command_buf );
0x2F20	0x4611    MOV	R1, R2
0x2F22	0x2005    MOVS	R0, #5
0x2F24	0xF7FDFB9E  BL	_spi_write+0
;driverrf4463pro.c, 202 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x2F28	0xAA01    ADD	R2, SP, #4
0x2F2A	0x2011    MOVS	R0, #17
0x2F2C	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 203 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1208
0x2F2E	0x1C51    ADDS	R1, R2, #1
0x2F30	0x2012    MOVS	R0, #18
0x2F32	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 204 :: 		app_command_buf[ 2 ] = 0x03;        // Total 3 Parameters
0x2F34	0x1C91    ADDS	R1, R2, #2
0x2F36	0x2003    MOVS	R0, #3
0x2F38	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 205 :: 		app_command_buf[ 3 ] = 0x08;        // command = 0x1208
0x2F3A	0x1CD1    ADDS	R1, R2, #3
0x2F3C	0x2008    MOVS	R0, #8
0x2F3E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 206 :: 		app_command_buf[ 4 ] = 0x00;        // Length Field = LSB,  length Only 1 byte,length Not put In FiFo, fixed packet length mode
0x2F40	0x1D11    ADDS	R1, R2, #4
0x2F42	0x2000    MOVS	R0, #0
0x2F44	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 207 :: 		app_command_buf[ 5 ] = 0x00;        // Used for variable packet length mode, which defines which Field contains length Filed
0x2F46	0x1D51    ADDS	R1, R2, #5
0x2F48	0x2000    MOVS	R0, #0
0x2F4A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 208 :: 		app_command_buf[ 6 ] = 0x00;        // Used for variable packet length mode, adjust the length of variable packet length
0x2F4C	0x1D91    ADDS	R1, R2, #6
0x2F4E	0x2000    MOVS	R0, #0
0x2F50	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 209 :: 		spi_write( 7, app_command_buf );
0x2F52	0x4611    MOV	R1, R2
0x2F54	0x2007    MOVS	R0, #7
0x2F56	0xF7FDFB85  BL	_spi_write+0
;driverrf4463pro.c, 212 :: 		app_command_buf[ 0 ]  = 0x11;
0x2F5A	0xAA01    ADD	R2, SP, #4
0x2F5C	0x2011    MOVS	R0, #17
0x2F5E	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 213 :: 		app_command_buf[ 1 ]  = 0x12;       // 0x120d
0x2F60	0x1C51    ADDS	R1, R2, #1
0x2F62	0x2012    MOVS	R0, #18
0x2F64	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 214 :: 		app_command_buf[ 2 ]  = 0x0c;       // Total 12 Parameters
0x2F66	0x1C91    ADDS	R1, R2, #2
0x2F68	0x200C    MOVS	R0, #12
0x2F6A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 215 :: 		app_command_buf[ 3 ]  = 0x0d;       // 0x120d
0x2F6C	0x1CD1    ADDS	R1, R2, #3
0x2F6E	0x200D    MOVS	R0, #13
0x2F70	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 216 :: 		app_command_buf[ 4 ]  = 0x00;       //  Field 1 length (?4?)
0x2F72	0x1D11    ADDS	R1, R2, #4
0x2F74	0x2000    MOVS	R0, #0
0x2F76	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 217 :: 		app_command_buf[ 5 ]  = payload_length;   //  field 1 length, (? 8?), ?Total14???
0x2F78	0x1D51    ADDS	R1, R2, #5
0x2F7A	0x2042    MOVS	R0, #66
0x2F7C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 218 :: 		app_command_buf[ 6 ]  = 0x04;       // field 1 Is not 4FSK,manchest, whiting, PN9,
0x2F7E	0x1D91    ADDS	R1, R2, #6
0x2F80	0x2004    MOVS	R0, #4
0x2F82	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 219 :: 		app_command_buf[ 7 ]  = 0xaa;       // field 1 crc enble, check enbale, There are also launchingCRC,cRC?Seed ?CRC_seed?????
0x2F84	0x1DD1    ADDS	R1, R2, #7
0x2F86	0x20AA    MOVS	R0, #170
0x2F88	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 220 :: 		app_command_buf[ 8 ]  = 0x00;       //  field 2 length(?4?)
0x2F8A	0xF2020108  ADDW	R1, R2, #8
0x2F8E	0x2000    MOVS	R0, #0
0x2F90	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 221 :: 		app_command_buf[ 9 ]  = 0x00;           //  field 2 length, (? 8?), length = 0 Means thisfield did not use
0x2F92	0xF2020109  ADDW	R1, R2, #9
0x2F96	0x2000    MOVS	R0, #0
0x2F98	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 222 :: 		app_command_buf[ 10 ] = 0x00;       // field 2 Is not 4FSK,manchest, whiting, PN9
0x2F9A	0xF202010A  ADDW	R1, R2, #10
0x2F9E	0x2000    MOVS	R0, #0
0x2FA0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 223 :: 		app_command_buf[ 11 ] = 0x00;       //  field 2 ?CRCSet up
0x2FA2	0xF202010B  ADDW	R1, R2, #11
0x2FA6	0x2000    MOVS	R0, #0
0x2FA8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 224 :: 		app_command_buf[ 12 ] = 0x00;       //  field 3 length, (? 8?), length = 0 Means thisfield did not use
0x2FAA	0xF202010C  ADDW	R1, R2, #12
0x2FAE	0x2000    MOVS	R0, #0
0x2FB0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 225 :: 		app_command_buf[ 13 ] = 0x00;           //  field 3 length, (? 8?), length = 0 Means thisfield did not use
0x2FB2	0xF202010D  ADDW	R1, R2, #13
0x2FB6	0x2000    MOVS	R0, #0
0x2FB8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 226 :: 		app_command_buf[ 14 ] = 0x00;       //  field 3 Is not 4FSK,manchest, whiting, PN9
0x2FBA	0xF202010E  ADDW	R1, R2, #14
0x2FBE	0x2000    MOVS	R0, #0
0x2FC0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 227 :: 		app_command_buf[ 15 ] = 0x00;       //  field 3 ?CRCSet up
0x2FC2	0xF202010F  ADDW	R1, R2, #15
0x2FC6	0x2000    MOVS	R0, #0
0x2FC8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 228 :: 		spi_write( 16, app_command_buf );
0x2FCA	0x4611    MOV	R1, R2
0x2FCC	0x2010    MOVS	R0, #16
0x2FCE	0xF7FDFB49  BL	_spi_write+0
;driverrf4463pro.c, 231 :: 		app_command_buf[ 0 ]  = 0x11;
0x2FD2	0xAA01    ADD	R2, SP, #4
0x2FD4	0x2011    MOVS	R0, #17
0x2FD6	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 232 :: 		app_command_buf[ 1 ]  = 0x12;       // 0x1219
0x2FD8	0x1C51    ADDS	R1, R2, #1
0x2FDA	0x2012    MOVS	R0, #18
0x2FDC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 233 :: 		app_command_buf[ 2 ]  = 0x08;       // Total 8Parameters
0x2FDE	0x1C91    ADDS	R1, R2, #2
0x2FE0	0x2008    MOVS	R0, #8
0x2FE2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 234 :: 		app_command_buf[ 3 ]  = 0x19;       // 0x1219
0x2FE4	0x1CD1    ADDS	R1, R2, #3
0x2FE6	0x2019    MOVS	R0, #25
0x2FE8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 235 :: 		app_command_buf[ 4 ]  = 0x00;       // field4 length(?4?)
0x2FEA	0x1D11    ADDS	R1, R2, #4
0x2FEC	0x2000    MOVS	R0, #0
0x2FEE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 236 :: 		app_command_buf[ 5 ]  = 0x00;       // field 4 length, (? 8?), length = 0 Means this field did not use
0x2FF0	0x1D51    ADDS	R1, R2, #5
0x2FF2	0x2000    MOVS	R0, #0
0x2FF4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 237 :: 		app_command_buf[ 6 ]  = 0x00;       // field 4 Is not 4FSK,manchest, whiting, PN9
0x2FF6	0x1D91    ADDS	R1, R2, #6
0x2FF8	0x2000    MOVS	R0, #0
0x2FFA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 238 :: 		app_command_buf[ 7 ]  = 0x00;       // field 4 ?CRCSet up
0x2FFC	0x1DD1    ADDS	R1, R2, #7
0x2FFE	0x2000    MOVS	R0, #0
0x3000	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 239 :: 		app_command_buf[ 8 ]  = 0x00;       // field5 length(?4?)
0x3002	0xF2020108  ADDW	R1, R2, #8
0x3006	0x2000    MOVS	R0, #0
0x3008	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 240 :: 		app_command_buf[ 9 ]  = 0x00;       // field 5 length, (? 8?), length = 0 Means this field did not use
0x300A	0xF2020109  ADDW	R1, R2, #9
0x300E	0x2000    MOVS	R0, #0
0x3010	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 241 :: 		app_command_buf[ 10 ] = 0x00;       // field 5 Is not 4FSK,manchest, whiting, PN9
0x3012	0xF202010A  ADDW	R1, R2, #10
0x3016	0x2000    MOVS	R0, #0
0x3018	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 242 :: 		app_command_buf[ 11 ] = 0x00;       // field 5 ?CRCSet up
0x301A	0xF202010B  ADDW	R1, R2, #11
0x301E	0x2000    MOVS	R0, #0
0x3020	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 243 :: 		spi_write( 12, app_command_buf );
0x3022	0x4611    MOV	R1, R2
0x3024	0x200C    MOVS	R0, #12
0x3026	0xF7FDFB1D  BL	_spi_write+0
;driverrf4463pro.c, 246 :: 		spi_write( 0x10, RF_MODEM_MOD_TYPE_12_data );   // //  2FSK ,  module source = PH fifo, disable manchest, tx, rx Do not flip, deviation Do not flip
0x302A	0x4957    LDR	R1, [PC, #348]
0x302C	0x2010    MOVS	R0, #16
0x302E	0xF7FDFB19  BL	_spi_write+0
;driverrf4463pro.c, 249 :: 		app_command_buf[0] = 0x11;
0x3032	0xAA01    ADD	R2, SP, #4
0x3034	0x2011    MOVS	R0, #17
0x3036	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 250 :: 		app_command_buf[1]  = 0x20;    // 0x200c
0x3038	0x1C51    ADDS	R1, R2, #1
0x303A	0x2020    MOVS	R0, #32
0x303C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 251 :: 		app_command_buf[2]  = 0x01;    // Total 1Parameters
0x303E	0x1C91    ADDS	R1, R2, #2
0x3040	0x2001    MOVS	R0, #1
0x3042	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 252 :: 		app_command_buf[3]  = 0x0c;   // 0x200c
0x3044	0x1CD1    ADDS	R1, R2, #3
0x3046	0x200C    MOVS	R0, #12
0x3048	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 254 :: 		if ( ucRF4463Freq3 < 8 ) {
0x304A	0x4850    LDR	R0, [PC, #320]
0x304C	0x7800    LDRB	R0, [R0, #0]
0x304E	0x2808    CMP	R0, #8
0x3050	0xD216    BCS	L_vRF4463Init61
;driverrf4463pro.c, 255 :: 		if ( ucRF4463Rate >= dr_256k ) {
0x3052	0x484F    LDR	R0, [PC, #316]
0x3054	0x7800    LDRB	R0, [R0, #0]
0x3056	0x2808    CMP	R0, #8
0x3058	0xD304    BCC	L_vRF4463Init62
;driverrf4463pro.c, 256 :: 		app_command_buf[ 4 ] = 0x4f;
0x305A	0xA801    ADD	R0, SP, #4
0x305C	0x1D01    ADDS	R1, R0, #4
0x305E	0x204F    MOVS	R0, #79
0x3060	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 257 :: 		}
0x3062	0xE00C    B	L_vRF4463Init63
L_vRF4463Init62:
;driverrf4463pro.c, 258 :: 		else if ( ucRF4463Rate >= dr_19p2 ) {
0x3064	0x484A    LDR	R0, [PC, #296]
0x3066	0x7800    LDRB	R0, [R0, #0]
0x3068	0x2804    CMP	R0, #4
0x306A	0xD304    BCC	L_vRF4463Init64
;driverrf4463pro.c, 259 :: 		app_command_buf[ 4 ]  = 0x5e;
0x306C	0xA801    ADD	R0, SP, #4
0x306E	0x1D01    ADDS	R1, R0, #4
0x3070	0x205E    MOVS	R0, #94
0x3072	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 260 :: 		}
0x3074	0xE003    B	L_vRF4463Init65
L_vRF4463Init64:
;driverrf4463pro.c, 262 :: 		app_command_buf[ 4 ]  = 0xd2;
0x3076	0xA801    ADD	R0, SP, #4
0x3078	0x1D01    ADDS	R1, R0, #4
0x307A	0x20D2    MOVS	R0, #210
0x307C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 263 :: 		}
L_vRF4463Init65:
L_vRF4463Init63:
;driverrf4463pro.c, 264 :: 		}
0x307E	0xE015    B	L_vRF4463Init66
L_vRF4463Init61:
;driverrf4463pro.c, 266 :: 		if ( ucRF4463Rate >= dr_115p2 ) {
0x3080	0x4843    LDR	R0, [PC, #268]
0x3082	0x7800    LDRB	R0, [R0, #0]
0x3084	0x2807    CMP	R0, #7
0x3086	0xD304    BCC	L_vRF4463Init67
;driverrf4463pro.c, 267 :: 		app_command_buf[ 4 ]  = 0x69;        // 15k
0x3088	0xA801    ADD	R0, SP, #4
0x308A	0x1D01    ADDS	R1, R0, #4
0x308C	0x2069    MOVS	R0, #105
0x308E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 268 :: 		}
0x3090	0xE00C    B	L_vRF4463Init68
L_vRF4463Init67:
;driverrf4463pro.c, 269 :: 		else if ( ucRF4463Rate >= dr_19p2 ) {
0x3092	0x483F    LDR	R0, [PC, #252]
0x3094	0x7800    LDRB	R0, [R0, #0]
0x3096	0x2804    CMP	R0, #4
0x3098	0xD304    BCC	L_vRF4463Init69
;driverrf4463pro.c, 270 :: 		app_command_buf[ 4 ]  = 0x5e;        // 10k
0x309A	0xA801    ADD	R0, SP, #4
0x309C	0x1D01    ADDS	R1, R0, #4
0x309E	0x205E    MOVS	R0, #94
0x30A0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 271 :: 		}
0x30A2	0xE003    B	L_vRF4463Init70
L_vRF4463Init69:
;driverrf4463pro.c, 273 :: 		app_command_buf[ 4 ]  = 0x18; // 8k
0x30A4	0xA801    ADD	R0, SP, #4
0x30A6	0x1D01    ADDS	R1, R0, #4
0x30A8	0x2018    MOVS	R0, #24
0x30AA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 274 :: 		}
L_vRF4463Init70:
L_vRF4463Init68:
;driverrf4463pro.c, 275 :: 		}
L_vRF4463Init66:
;driverrf4463pro.c, 276 :: 		spi_write( 5, app_command_buf );
0x30AC	0xA801    ADD	R0, SP, #4
0x30AE	0x4601    MOV	R1, R0
0x30B0	0x2005    MOVS	R0, #5
0x30B2	0xF7FDFAD7  BL	_spi_write+0
;driverrf4463pro.c, 279 :: 		spi_write( 0x0C, RF_MODEM_TX_RAMP_DELAY_8_data );            // Without this Parameters,Not needed
0x30B6	0x4937    LDR	R1, [PC, #220]
0x30B8	0x200C    MOVS	R0, #12
0x30BA	0xF7FDFAD3  BL	_spi_write+0
;driverrf4463pro.c, 280 :: 		spi_write( 0x0D, RF_MODEM_BCR_OSR_1_9_data );                // Without this Parameters,Not needed
0x30BE	0x4936    LDR	R1, [PC, #216]
0x30C0	0x200D    MOVS	R0, #13
0x30C2	0xF7FDFACF  BL	_spi_write+0
;driverrf4463pro.c, 281 :: 		spi_write( 0x0B, RF_MODEM_AFC_GEAR_7_data );                // Without this Parameters,Not needed
0x30C6	0x4935    LDR	R1, [PC, #212]
0x30C8	0x200B    MOVS	R0, #11
0x30CA	0xF7FDFACB  BL	_spi_write+0
;driverrf4463pro.c, 282 :: 		spi_write( 0x05, RF_MODEM_AGC_CONTROL_1_data );                // Without this Parameters,Not needed
0x30CE	0x4934    LDR	R1, [PC, #208]
0x30D0	0x2005    MOVS	R0, #5
0x30D2	0xF7FDFAC7  BL	_spi_write+0
;driverrf4463pro.c, 283 :: 		spi_write( 0x0D, RF_MODEM_AGC_WINDOW_SIZE_9_data );        // Without this Parameters,Not needed
0x30D6	0x4933    LDR	R1, [PC, #204]
0x30D8	0x200D    MOVS	R0, #13
0x30DA	0xF7FDFAC3  BL	_spi_write+0
;driverrf4463pro.c, 284 :: 		spi_write( 0x0F, RF_MODEM_OOK_CNT1_11_data );                // Without this Parameters,Not needed
0x30DE	0x4932    LDR	R1, [PC, #200]
0x30E0	0x200F    MOVS	R0, #15
0x30E2	0xF7FDFABF  BL	_spi_write+0
;driverrf4463pro.c, 287 :: 		app_command_buf[ 0 ] = 0x11;
0x30E6	0xAA01    ADD	R2, SP, #4
0x30E8	0x2011    MOVS	R0, #17
0x30EA	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 288 :: 		app_command_buf[ 1 ] = 0x20;    // 0x204e
0x30EC	0x1C51    ADDS	R1, R2, #1
0x30EE	0x2020    MOVS	R0, #32
0x30F0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 289 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1Parameters
0x30F2	0x1C91    ADDS	R1, R2, #2
0x30F4	0x2001    MOVS	R0, #1
0x30F6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 290 :: 		app_command_buf[ 3 ] = 0x4e;   // 0x204e
0x30F8	0x1CD1    ADDS	R1, R2, #3
0x30FA	0x204E    MOVS	R0, #78
0x30FC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 292 :: 		if ( ucRF4463Rate == dr_500 ) {
0x30FE	0x4824    LDR	R0, [PC, #144]
0x3100	0x7800    LDRB	R0, [R0, #0]
0x3102	0x280A    CMP	R0, #10
0x3104	0xD104    BNE	L_vRF4463Init71
;driverrf4463pro.c, 293 :: 		app_command_buf[ 4 ] = 0x3a;
0x3106	0xA801    ADD	R0, SP, #4
0x3108	0x1D01    ADDS	R1, R0, #4
0x310A	0x203A    MOVS	R0, #58
0x310C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 294 :: 		}
0x310E	0xE003    B	L_vRF4463Init72
L_vRF4463Init71:
;driverrf4463pro.c, 296 :: 		app_command_buf[ 4 ] = 0x40;  //  rssi Reading deviation, the difference with the true value
0x3110	0xA801    ADD	R0, SP, #4
0x3112	0x1D01    ADDS	R1, R0, #4
0x3114	0x2040    MOVS	R0, #64
0x3116	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 297 :: 		}
L_vRF4463Init72:
;driverrf4463pro.c, 298 :: 		spi_write( 5, app_command_buf );
0x3118	0xA801    ADD	R0, SP, #4
0x311A	0x4601    MOV	R1, R0
0x311C	0x2005    MOVS	R0, #5
0x311E	0xF7FDFAA1  BL	_spi_write+0
;driverrf4463pro.c, 301 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data );  // Without this Parameters,Not needed
0x3122	0x4922    LDR	R1, [PC, #136]
0x3124	0x2010    MOVS	R0, #16
0x3126	0xF7FDFA9D  BL	_spi_write+0
;driverrf4463pro.c, 302 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data );   // Without this Parameters,Not needed
0x312A	0x4921    LDR	R1, [PC, #132]
0x312C	0x2010    MOVS	R0, #16
0x312E	0xF7FDFA99  BL	_spi_write+0
;driverrf4463pro.c, 303 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data );   // Without this Parameters,Not needed
0x3132	0x4920    LDR	R1, [PC, #128]
0x3134	0x2010    MOVS	R0, #16
0x3136	0xF7FDFA95  BL	_spi_write+0
;driverrf4463pro.c, 306 :: 		app_command_buf[ 0 ]  = 0x11;
0x313A	0xAA01    ADD	R2, SP, #4
0x313C	0x2011    MOVS	R0, #17
0x313E	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 307 :: 		app_command_buf[ 1 ]  = 0x22;    // 0x2200
0x3140	0x1C51    ADDS	R1, R2, #1
0x3142	0x2022    MOVS	R0, #34
0x3144	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 308 :: 		app_command_buf[ 2 ]  = 0x04;    // Total 4Parameters
0x3146	0x1C91    ADDS	R1, R2, #2
0x3148	0x2004    MOVS	R0, #4
0x314A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 309 :: 		app_command_buf[ 3 ]  = 0x00;   // 0x2200
0x314C	0x1CD1    ADDS	R1, R2, #3
0x314E	0x2000    MOVS	R0, #0
0x3150	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 310 :: 		app_command_buf[ 4 ]  = 0x08;  //0x10;   //   PA mode  = default , ??Class E mode,?Is not Switch Current mode  ????????
0x3152	0x1D11    ADDS	R1, R2, #4
0x3154	0x2008    MOVS	R0, #8
0x3156	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 312 :: 		if ( ucRF4463Power > 0 || ucRF4463Power < 127 ) {
0x3158	0x4817    LDR	R0, [PC, #92]
0x315A	0x7800    LDRB	R0, [R0, #0]
0x315C	0x2800    CMP	R0, #0
0x315E	0xD804    BHI	L__vRF4463Init411
0x3160	0x4815    LDR	R0, [PC, #84]
0x3162	0x7800    LDRB	R0, [R0, #0]
0x3164	0x287F    CMP	R0, #127
0x3166	0xD300    BCC	L__vRF4463Init410
0x3168	0xE005    B	L_vRF4463Init75
L__vRF4463Init411:
L__vRF4463Init410:
;driverrf4463pro.c, 313 :: 		app_command_buf[ 5 ]  = ucRF4463Power;   //  Set to maximum power
0x316A	0xA801    ADD	R0, SP, #4
0x316C	0x1D41    ADDS	R1, R0, #5
0x316E	0x4812    LDR	R0, [PC, #72]
0x3170	0x7800    LDRB	R0, [R0, #0]
0x3172	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 314 :: 		}
0x3174	0xE023    B	L_vRF4463Init76
L_vRF4463Init75:
;driverrf4463pro.c, 316 :: 		app_command_buf[ 5 ]  = 127;
0x3176	0xA801    ADD	R0, SP, #4
0x3178	0x1D41    ADDS	R1, R0, #5
0x317A	0x207F    MOVS	R0, #127
0x317C	0xF000B81E  B	#60
0x3180	0x67500000  	_RF_FRR_CTL_A_MODE_4_data+0
0x3184	0x22AA2000  	_ucRF4463Mode+0
0x3188	0x200D2000  	_RF_MODEM_MOD_TYPE_12_data+0
0x318C	0x22A92000  	_ucRF4463Freq3+0
0x3190	0x22A82000  	_ucRF4463Rate+0
0x3194	0x201D2000  	_RF_MODEM_TX_RAMP_DELAY_8_data+0
0x3198	0x20822000  	_RF_MODEM_BCR_OSR_1_9_data+0
0x319C	0x20292000  	_RF_MODEM_AFC_GEAR_7_data+0
0x31A0	0x675F0000  	_RF_MODEM_AGC_CONTROL_1_data+0
0x31A4	0x20752000  	_RF_MODEM_AGC_WINDOW_SIZE_9_data+0
0x31A8	0x20362000  	_RF_MODEM_OOK_CNT1_11_data+0
0x31AC	0x20452000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+0
0x31B0	0x20552000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x31B4	0x20652000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x31B8	0x22AB2000  	_ucRF4463Power+0
0x31BC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 317 :: 		}
L_vRF4463Init76:
;driverrf4463pro.c, 319 :: 		app_command_buf[ 6 ] = 0x00; //???????? 0x00;   // CLK duty = 50%, other = Default
0x31BE	0xA801    ADD	R0, SP, #4
0x31C0	0x1D81    ADDS	R1, R0, #6
0x31C2	0x2000    MOVS	R0, #0
0x31C4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 322 :: 		if ( ( ucRF4463Rate <= dr_115p2 ) ) {
0x31C6	0x4835    LDR	R0, [PC, #212]
0x31C8	0x7800    LDRB	R0, [R0, #0]
0x31CA	0x2807    CMP	R0, #7
0x31CC	0xD804    BHI	L_vRF4463Init77
;driverrf4463pro.c, 323 :: 		app_command_buf[ 7 ]  = 0x3d;  // ???????? 0x5d;   // PA ramp time = default
0x31CE	0xA801    ADD	R0, SP, #4
0x31D0	0x1DC1    ADDS	R1, R0, #7
0x31D2	0x203D    MOVS	R0, #61
0x31D4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 324 :: 		}
0x31D6	0xE003    B	L_vRF4463Init78
L_vRF4463Init77:
;driverrf4463pro.c, 326 :: 		app_command_buf[ 7 ]  = 0x5d;
0x31D8	0xA801    ADD	R0, SP, #4
0x31DA	0x1DC1    ADDS	R1, R0, #7
0x31DC	0x205D    MOVS	R0, #93
0x31DE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 327 :: 		}
L_vRF4463Init78:
;driverrf4463pro.c, 328 :: 		spi_write( 8, app_command_buf );
0x31E0	0xA801    ADD	R0, SP, #4
0x31E2	0x4601    MOV	R1, R0
0x31E4	0x2008    MOVS	R0, #8
0x31E6	0xF7FDFA3D  BL	_spi_write+0
;driverrf4463pro.c, 332 :: 		spi_write( 0x0B , RF_SYNTH_PFDCP_CPFF_7_data );      // Without this Parameters,Not needed
0x31EA	0x492D    LDR	R1, [PC, #180]
0x31EC	0x200B    MOVS	R0, #11
0x31EE	0xF7FDFA39  BL	_spi_write+0
;driverrf4463pro.c, 335 :: 		if ( ucRF4463MatchEnabled ) {
0x31F2	0x482C    LDR	R0, [PC, #176]
0x31F4	0x7800    LDRB	R0, [R0, #0]
0x31F6	0x2800    CMP	R0, #0
0x31F8	0xD04A    BEQ	L_vRF4463Init79
;driverrf4463pro.c, 336 :: 		app_command_buf[ 0 ]  = 0x11;               // SetProperty
0x31FA	0xAA01    ADD	R2, SP, #4
0x31FC	0x2011    MOVS	R0, #17
0x31FE	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 337 :: 		app_command_buf[ 1 ]  = 0x30;               // 0x30 group
0x3200	0x1C51    ADDS	R1, R2, #1
0x3202	0x2030    MOVS	R0, #48
0x3204	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 338 :: 		app_command_buf[ 2 ]  = 0x0c;               // Total 12 Parameters
0x3206	0x1C91    ADDS	R1, R2, #2
0x3208	0x200C    MOVS	R0, #12
0x320A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 339 :: 		app_command_buf[ 3 ]  = 0x00;               // 0x00 Index
0x320C	0x1CD1    ADDS	R1, R2, #3
0x320E	0x2000    MOVS	R0, #0
0x3210	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 340 :: 		app_command_buf[ 4 ]  = ucRF4463ByteMatch1; // match 1 Value of
0x3212	0x1D11    ADDS	R1, R2, #4
0x3214	0x4824    LDR	R0, [PC, #144]
0x3216	0x7800    LDRB	R0, [R0, #0]
0x3218	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 341 :: 		app_command_buf[ 5 ]  = ucRF4463ByteMask1;  // match 1 mask
0x321A	0x1D51    ADDS	R1, R2, #5
0x321C	0x4823    LDR	R0, [PC, #140]
0x321E	0x7800    LDRB	R0, [R0, #0]
0x3220	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 342 :: 		app_command_buf[ 6 ]  = ucRF4463MatchEnableReg; //  0x40; // enable match 1, match 1 The distance between the value of and the synchronization word, 0 = match
0x3222	0x1D91    ADDS	R1, R2, #6
0x3224	0x4822    LDR	R0, [PC, #136]
0x3226	0x7800    LDRB	R0, [R0, #0]
0x3228	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 343 :: 		app_command_buf[ 7 ]  = ucRF4463ByteMatch2; // match 2 Value of
0x322A	0x1DD1    ADDS	R1, R2, #7
0x322C	0x4821    LDR	R0, [PC, #132]
0x322E	0x7800    LDRB	R0, [R0, #0]
0x3230	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 344 :: 		app_command_buf[ 8 ]  = ucRF4463ByteMask2;  // match 2 mask
0x3232	0xF2020108  ADDW	R1, R2, #8
0x3236	0x4820    LDR	R0, [PC, #128]
0x3238	0x7800    LDRB	R0, [R0, #0]
0x323A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 345 :: 		app_command_buf[ 9 ]  = 0x01;               // enable match 2, match 2 The distance between the value of and the synchronization word  , and function
0x323C	0xF2020109  ADDW	R1, R2, #9
0x3240	0x2001    MOVS	R0, #1
0x3242	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 346 :: 		app_command_buf[ 10 ] = ucRF4463ByteMatch3; // match 3 Value of
0x3244	0xF202010A  ADDW	R1, R2, #10
0x3248	0x481C    LDR	R0, [PC, #112]
0x324A	0x7800    LDRB	R0, [R0, #0]
0x324C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 347 :: 		app_command_buf[ 11 ] = ucRF4463ByteMask3;  // match 3 mask
0x324E	0xF202010B  ADDW	R1, R2, #11
0x3252	0x481B    LDR	R0, [PC, #108]
0x3254	0x7800    LDRB	R0, [R0, #0]
0x3256	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 348 :: 		app_command_buf[ 12 ] = 0x02;;              // enable match 3, match 3 The distance between the value of and the synchronization word    and function
0x3258	0xF202010C  ADDW	R1, R2, #12
0x325C	0x2002    MOVS	R0, #2
0x325E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 349 :: 		app_command_buf[ 13 ] = ucRF4463ByteMatch4; // match 4 Value of
0x3260	0xF202010D  ADDW	R1, R2, #13
0x3264	0x4817    LDR	R0, [PC, #92]
0x3266	0x7800    LDRB	R0, [R0, #0]
0x3268	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 350 :: 		app_command_buf[ 14 ] = ucRF4463ByteMask4;  // match 4 mask
0x326A	0xF202010E  ADDW	R1, R2, #14
0x326E	0x4816    LDR	R0, [PC, #88]
0x3270	0x7800    LDRB	R0, [R0, #0]
0x3272	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 351 :: 		app_command_buf[ 15 ] = 0x03;               // enable match 4, match 4 The distance between the value of and the synchronization word    and function
0x3274	0xF202010F  ADDW	R1, R2, #15
0x3278	0x2003    MOVS	R0, #3
0x327A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 352 :: 		spi_write( 16, app_command_buf );
0x327C	0x4611    MOV	R1, R2
0x327E	0x2010    MOVS	R0, #16
0x3280	0xF7FDF9F0  BL	_spi_write+0
;driverrf4463pro.c, 354 :: 		if ( ucRF4463MatchEnableReg == 0x00 ) {
0x3284	0x480A    LDR	R0, [PC, #40]
0x3286	0x7800    LDRB	R0, [R0, #0]
0x3288	0xB910    CBNZ	R0, L_vRF4463Init80
;driverrf4463pro.c, 355 :: 		ucRF4463MatchEnabled = 0;                // deshabilita el Match
0x328A	0x2100    MOVS	R1, #0
0x328C	0x4805    LDR	R0, [PC, #20]
0x328E	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 356 :: 		}
L_vRF4463Init80:
;driverrf4463pro.c, 375 :: 		}
L_vRF4463Init79:
;driverrf4463pro.c, 378 :: 		rf_init_freq();     // FUNCION DE FRECUENCIA ( REVISAR PARAMETROS )
0x3290	0xF7FEFE4E  BL	_rf_init_freq+0
;driverrf4463pro.c, 379 :: 		}
L_end_vRF4463Init:
0x3294	0xF8DDE000  LDR	LR, [SP, #0]
0x3298	0xB006    ADD	SP, SP, #24
0x329A	0x4770    BX	LR
0x329C	0x22A82000  	_ucRF4463Rate+0
0x32A0	0x208F2000  	_RF_SYNTH_PFDCP_CPFF_7_data+0
0x32A4	0x209A2000  	_ucRF4463MatchEnabled+0
0x32A8	0x209B2000  	_ucRF4463ByteMatch1+0
0x32AC	0x209C2000  	_ucRF4463ByteMask1+0
0x32B0	0x209D2000  	_ucRF4463MatchEnableReg+0
0x32B4	0x209E2000  	_ucRF4463ByteMatch2+0
0x32B8	0x209F2000  	_ucRF4463ByteMask2+0
0x32BC	0x20A02000  	_ucRF4463ByteMatch3+0
0x32C0	0x20A12000  	_ucRF4463ByteMask3+0
0x32C4	0x20A22000  	_ucRF4463ByteMatch4+0
0x32C8	0x20A32000  	_ucRF4463ByteMask4+0
; end of _vRF4463Init
_vRF4463GPIO_SET:
;driverrf4463pro.c, 385 :: 		void vRF4463GPIO_SET( unsigned char ucData ) {
; ucData start address is: 0 (R0)
0x2124	0xB083    SUB	SP, SP, #12
0x2126	0xF8CDE000  STR	LR, [SP, #0]
; ucData end address is: 0 (R0)
; ucData start address is: 0 (R0)
;driverrf4463pro.c, 388 :: 		ucAppCommandBuf[0] = 0x13;     // gpio Set up
0x212A	0xAA01    ADD	R2, SP, #4
0x212C	0x2113    MOVS	R1, #19
0x212E	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 390 :: 		switch ( ucData ) {
0x2130	0xE01F    B	L_vRF4463GPIO_SET81
; ucData end address is: 0 (R0)
;driverrf4463pro.c, 391 :: 		case tx_normal:
L_vRF4463GPIO_SET83:
;driverrf4463pro.c, 392 :: 		case rx_normal: ucAppCommandBuf[ 1 ] = 3;                 // GPIO0=1
L_vRF4463GPIO_SET84:
0x2132	0xAB01    ADD	R3, SP, #4
0x2134	0x1C5A    ADDS	R2, R3, #1
0x2136	0x2103    MOVS	R1, #3
0x2138	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 393 :: 		ucAppCommandBuf[ 2 ] = 2;                // GPIO1=0
0x213A	0x1C9A    ADDS	R2, R3, #2
0x213C	0x2102    MOVS	R1, #2
0x213E	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 394 :: 		break;
0x2140	0xE021    B	L_vRF4463GPIO_SET82
;driverrf4463pro.c, 396 :: 		case tx_test:   ucAppCommandBuf[ 1 ] = 3;                 // GPIO0=1
L_vRF4463GPIO_SET85:
0x2142	0xAB01    ADD	R3, SP, #4
0x2144	0x1C5A    ADDS	R2, R3, #1
0x2146	0x2103    MOVS	R1, #3
0x2148	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 397 :: 		ucAppCommandBuf[ 2 ] = 3;                // GPIO1=1
0x214A	0x1C9A    ADDS	R2, R3, #2
0x214C	0x2103    MOVS	R1, #3
0x214E	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 398 :: 		break;
0x2150	0xE019    B	L_vRF4463GPIO_SET82
;driverrf4463pro.c, 400 :: 		case rx_test:   ucAppCommandBuf[ 1 ] = 2;                 // GPIO0=0
L_vRF4463GPIO_SET86:
0x2152	0xAB01    ADD	R3, SP, #4
0x2154	0x1C5A    ADDS	R2, R3, #1
0x2156	0x2102    MOVS	R1, #2
0x2158	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 401 :: 		ucAppCommandBuf[ 2 ] = 20;                // GPIO1=RX DATA
0x215A	0x1C9A    ADDS	R2, R3, #2
0x215C	0x2114    MOVS	R1, #20
0x215E	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 402 :: 		break;
0x2160	0xE011    B	L_vRF4463GPIO_SET82
;driverrf4463pro.c, 404 :: 		case rf_off:    ucAppCommandBuf[ 1 ] = 2;                 // GPIO0=0
L_vRF4463GPIO_SET87:
0x2162	0xAB01    ADD	R3, SP, #4
0x2164	0x1C5A    ADDS	R2, R3, #1
0x2166	0x2102    MOVS	R1, #2
0x2168	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 405 :: 		ucAppCommandBuf[ 2 ] = 2;                // GPIO1=0
0x216A	0x1C9A    ADDS	R2, R3, #2
0x216C	0x2102    MOVS	R1, #2
0x216E	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 406 :: 		break;
0x2170	0xE009    B	L_vRF4463GPIO_SET82
;driverrf4463pro.c, 407 :: 		}
L_vRF4463GPIO_SET81:
; ucData start address is: 0 (R0)
0x2172	0x2800    CMP	R0, #0
0x2174	0xD0DD    BEQ	L_vRF4463GPIO_SET83
0x2176	0x2801    CMP	R0, #1
0x2178	0xD0DB    BEQ	L_vRF4463GPIO_SET84
0x217A	0x2802    CMP	R0, #2
0x217C	0xD0E1    BEQ	L_vRF4463GPIO_SET85
0x217E	0x2803    CMP	R0, #3
0x2180	0xD0E7    BEQ	L_vRF4463GPIO_SET86
0x2182	0x2804    CMP	R0, #4
0x2184	0xD0ED    BEQ	L_vRF4463GPIO_SET87
; ucData end address is: 0 (R0)
L_vRF4463GPIO_SET82:
;driverrf4463pro.c, 409 :: 		ucAppCommandBuf[ 3 ]  = 0x21;     //0x20;   //  gpio2, h = tx mode
0x2186	0xAB01    ADD	R3, SP, #4
0x2188	0x1CDA    ADDS	R2, R3, #3
0x218A	0x2121    MOVS	R1, #33
0x218C	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 410 :: 		ucAppCommandBuf[ 4 ]  = 0x20;     // 0x14;  //   gpio3
0x218E	0x1D1A    ADDS	R2, R3, #4
0x2190	0x2120    MOVS	R1, #32
0x2192	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 411 :: 		ucAppCommandBuf[ 5 ]  = 0x27;     // nIRQ
0x2194	0x1D5A    ADDS	R2, R3, #5
0x2196	0x2127    MOVS	R1, #39
0x2198	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 412 :: 		ucAppCommandBuf[ 6 ]  = 0x0b;     // sdo
0x219A	0x1D9A    ADDS	R2, R3, #6
0x219C	0x210B    MOVS	R1, #11
0x219E	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 413 :: 		spi_write( 7, ucAppCommandBuf );
0x21A0	0x4619    MOV	R1, R3
0x21A2	0x2007    MOVS	R0, #7
0x21A4	0xF7FEFA5E  BL	_spi_write+0
;driverrf4463pro.c, 414 :: 		}
L_end_vRF4463GPIO_SET:
0x21A8	0xF8DDE000  LDR	LR, [SP, #0]
0x21AC	0xB003    ADD	SP, SP, #12
0x21AE	0x4770    BX	LR
; end of _vRF4463GPIO_SET
_spi_write:
;driverrf4463pro.c, 821 :: 		void spi_write( unsigned char tx_length, unsigned char *p ) {
; p start address is: 4 (R1)
; tx_length start address is: 0 (R0)
0x0664	0xB081    SUB	SP, SP, #4
0x0666	0xF8CDE000  STR	LR, [SP, #0]
0x066A	0x460A    MOV	R2, R1
0x066C	0xB2C1    UXTB	R1, R0
; p end address is: 4 (R1)
; tx_length end address is: 0 (R0)
; tx_length start address is: 4 (R1)
; p start address is: 8 (R2)
;driverrf4463pro.c, 824 :: 		i = 0;
; i start address is: 0 (R0)
0x066E	0x2000    MOVS	R0, #0
; tx_length end address is: 4 (R1)
; p end address is: 8 (R2)
; i end address is: 0 (R0)
0x0670	0xB2CD    UXTB	R5, R1
0x0672	0x4614    MOV	R4, R2
;driverrf4463pro.c, 825 :: 		while ( i != 0xFF ) {
L_spi_write111:
; i start address is: 0 (R0)
; p start address is: 16 (R4)
; tx_length start address is: 20 (R5)
0x0674	0xF1B00FFF  CMP	R0, #255
0x0678	0xD002    BEQ	L_spi_write112
; i end address is: 0 (R0)
;driverrf4463pro.c, 826 :: 		i = check_cts();
0x067A	0xF7FFFEBF  BL	_check_cts+0
; i start address is: 0 (R0)
;driverrf4463pro.c, 827 :: 		}
; i end address is: 0 (R0)
0x067E	0xE7F9    B	L_spi_write111
L_spi_write112:
;driverrf4463pro.c, 829 :: 		nSEL = 0;                              // habilita escritura
0x0680	0x2300    MOVS	R3, #0
0x0682	0xB25B    SXTB	R3, R3
0x0684	0x4A0A    LDR	R2, [PC, #40]
0x0686	0x6013    STR	R3, [R2, #0]
;driverrf4463pro.c, 831 :: 		for ( i = 0; i < tx_length; i++ ) {
; i start address is: 0 (R0)
0x0688	0x2000    MOVS	R0, #0
; tx_length end address is: 20 (R5)
; i end address is: 0 (R0)
0x068A	0xB2EB    UXTB	R3, R5
0x068C	0xB2C5    UXTB	R5, R0
L_spi_write113:
; i start address is: 20 (R5)
; tx_length start address is: 12 (R3)
; p start address is: 16 (R4)
; p end address is: 16 (R4)
0x068E	0x429D    CMP	R5, R3
0x0690	0xD206    BCS	L_spi_write114
; p end address is: 16 (R4)
;driverrf4463pro.c, 832 :: 		j = *( p + i );
; p start address is: 16 (R4)
0x0692	0x1962    ADDS	R2, R4, R5
;driverrf4463pro.c, 833 :: 		ucRf4463SPIByte( j );
0x0694	0x7810    LDRB	R0, [R2, #0]
0x0696	0xF001FB21  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 831 :: 		for ( i = 0; i < tx_length; i++ ) {
0x069A	0x1C6D    ADDS	R5, R5, #1
0x069C	0xB2ED    UXTB	R5, R5
;driverrf4463pro.c, 834 :: 		}
; tx_length end address is: 12 (R3)
; p end address is: 16 (R4)
; i end address is: 20 (R5)
0x069E	0xE7F6    B	L_spi_write113
L_spi_write114:
;driverrf4463pro.c, 836 :: 		nSEL = 1;                              // desabilita escritura
0x06A0	0x2301    MOVS	R3, #1
0x06A2	0xB25B    SXTB	R3, R3
0x06A4	0x4A02    LDR	R2, [PC, #8]
0x06A6	0x6013    STR	R3, [R2, #0]
;driverrf4463pro.c, 837 :: 		}
L_end_spi_write:
0x06A8	0xF8DDE000  LDR	LR, [SP, #0]
0x06AC	0xB001    ADD	SP, SP, #4
0x06AE	0x4770    BX	LR
0x06B0	0x81B04221  	GPIOB_ODRbits+0
; end of _spi_write
_check_cts:
;driverrf4463pro.c, 842 :: 		unsigned char check_cts( void ) {           // This Command follows the Command and reads the response
0x03FC	0xB081    SUB	SP, SP, #4
0x03FE	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 845 :: 		nSEL = 1;
0x0402	0x2101    MOVS	R1, #1
0x0404	0xB249    SXTB	R1, R1
0x0406	0x480A    LDR	R0, [PC, #40]
0x0408	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 846 :: 		nSEL = 0;
0x040A	0x2100    MOVS	R1, #0
0x040C	0xB249    SXTB	R1, R1
0x040E	0x4808    LDR	R0, [PC, #32]
0x0410	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 847 :: 		ucRf4463SPIByte( 0x44 );
0x0412	0x2044    MOVS	R0, #68
0x0414	0xF001FC62  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 848 :: 		i = ucRf4463SPIByte( 0 );
0x0418	0x2000    MOVS	R0, #0
0x041A	0xF001FC5F  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 849 :: 		nSEL = 1;
0x041E	0x2201    MOVS	R2, #1
0x0420	0xB252    SXTB	R2, R2
0x0422	0x4903    LDR	R1, [PC, #12]
0x0424	0x600A    STR	R2, [R1, #0]
;driverrf4463pro.c, 850 :: 		return ( i );
;driverrf4463pro.c, 851 :: 		}
L_end_check_cts:
0x0426	0xF8DDE000  LDR	LR, [SP, #0]
0x042A	0xB001    ADD	SP, SP, #4
0x042C	0x4770    BX	LR
0x042E	0xBF00    NOP
0x0430	0x81B04221  	GPIOB_ODRbits+0
; end of _check_cts
_rf_init_freq:
;driverrf4463pro.c, 640 :: 		void rf_init_freq ( void ) {
0x1F30	0xB087    SUB	SP, SP, #28
0x1F32	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 646 :: 		ulFrequency = ( ucRF4463Freq3 * 100 ) + ( ucRF4463Freq2 * 10 ) + ucRF4463Freq1;
0x1F36	0x4871    LDR	R0, [PC, #452]
0x1F38	0x7801    LDRB	R1, [R0, #0]
0x1F3A	0x2064    MOVS	R0, #100
0x1F3C	0xB200    SXTH	R0, R0
0x1F3E	0xFB01F200  MUL	R2, R1, R0
0x1F42	0xB212    SXTH	R2, R2
0x1F44	0x486E    LDR	R0, [PC, #440]
0x1F46	0x7801    LDRB	R1, [R0, #0]
0x1F48	0x200A    MOVS	R0, #10
0x1F4A	0xB200    SXTH	R0, R0
0x1F4C	0x4348    MULS	R0, R1, R0
0x1F4E	0xB200    SXTH	R0, R0
0x1F50	0x1812    ADDS	R2, R2, R0
0x1F52	0x486C    LDR	R0, [PC, #432]
0x1F54	0x7800    LDRB	R0, [R0, #0]
0x1F56	0x1812    ADDS	R2, R2, R0
; ulFrequency start address is: 8 (R2)
0x1F58	0xB212    SXTH	R2, R2
;driverrf4463pro.c, 648 :: 		ulFrequency = ( ulFrequency * 10000 );
0x1F5A	0xF2427010  MOVW	R0, #10000
0x1F5E	0xFB02F100  MUL	R1, R2, R0
0x1F62	0x460A    MOV	R2, R1
;driverrf4463pro.c, 651 :: 		if ( ulFrequency >= 7600000 ) {
0x1F64	0x4868    LDR	R0, [PC, #416]
0x1F66	0x4281    CMP	R1, R0
0x1F68	0xD309    BCC	L_rf_init_freq96
;driverrf4463pro.c, 652 :: 		ucOUTDIV = 4;
0x1F6A	0x2004    MOVS	R0, #4
0x1F6C	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 653 :: 		ucBAND = 0;
0x1F70	0x2000    MOVS	R0, #0
0x1F72	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 654 :: 		ucVCO = 0xFF;
0x1F76	0x20FF    MOVS	R0, #255
0x1F78	0xF88D0005  STRB	R0, [SP, #5]
;driverrf4463pro.c, 655 :: 		}
0x1F7C	0xE03C    B	L_rf_init_freq97
L_rf_init_freq96:
;driverrf4463pro.c, 658 :: 		else if ( ulFrequency >= 5460000 ) {
0x1F7E	0x4863    LDR	R0, [PC, #396]
0x1F80	0x4282    CMP	R2, R0
0x1F82	0xD309    BCC	L_rf_init_freq98
;driverrf4463pro.c, 659 :: 		ucOUTDIV = 6;
0x1F84	0x2006    MOVS	R0, #6
0x1F86	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 660 :: 		ucBAND   = 1;
0x1F8A	0x2001    MOVS	R0, #1
0x1F8C	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 661 :: 		ucVCO    = 0xFE;
0x1F90	0x20FE    MOVS	R0, #254
0x1F92	0xF88D0005  STRB	R0, [SP, #5]
;driverrf4463pro.c, 662 :: 		}
0x1F96	0xE02F    B	L_rf_init_freq99
L_rf_init_freq98:
;driverrf4463pro.c, 665 :: 		else if ( ulFrequency >= 3850000 ) {
0x1F98	0x485D    LDR	R0, [PC, #372]
0x1F9A	0x4282    CMP	R2, R0
0x1F9C	0xD309    BCC	L_rf_init_freq100
;driverrf4463pro.c, 666 :: 		ucOUTDIV = 8;
0x1F9E	0x2008    MOVS	R0, #8
0x1FA0	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 667 :: 		ucBAND   = 2;
0x1FA4	0x2002    MOVS	R0, #2
0x1FA6	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 668 :: 		ucVCO    = 0xFE;
0x1FAA	0x20FE    MOVS	R0, #254
0x1FAC	0xF88D0005  STRB	R0, [SP, #5]
;driverrf4463pro.c, 669 :: 		}
0x1FB0	0xE022    B	L_rf_init_freq101
L_rf_init_freq100:
;driverrf4463pro.c, 672 :: 		else if ( ulFrequency >= 2730000 ) {
0x1FB2	0x4858    LDR	R0, [PC, #352]
0x1FB4	0x4282    CMP	R2, R0
0x1FB6	0xD309    BCC	L_rf_init_freq102
;driverrf4463pro.c, 673 :: 		ucOUTDIV = 12;
0x1FB8	0x200C    MOVS	R0, #12
0x1FBA	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 674 :: 		ucBAND   = 3;
0x1FBE	0x2003    MOVS	R0, #3
0x1FC0	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 675 :: 		ucVCO    = 0xFD;
0x1FC4	0x20FD    MOVS	R0, #253
0x1FC6	0xF88D0005  STRB	R0, [SP, #5]
;driverrf4463pro.c, 676 :: 		}
0x1FCA	0xE015    B	L_rf_init_freq103
L_rf_init_freq102:
;driverrf4463pro.c, 679 :: 		else if ( ulFrequency >= 1940000 ) {
0x1FCC	0x4852    LDR	R0, [PC, #328]
0x1FCE	0x4282    CMP	R2, R0
0x1FD0	0xD309    BCC	L_rf_init_freq104
;driverrf4463pro.c, 680 :: 		ucOUTDIV = 16;
0x1FD2	0x2010    MOVS	R0, #16
0x1FD4	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 681 :: 		ucBAND   = 4;
0x1FD8	0x2004    MOVS	R0, #4
0x1FDA	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 682 :: 		ucVCO    = 0xFC;
0x1FDE	0x20FC    MOVS	R0, #252
0x1FE0	0xF88D0005  STRB	R0, [SP, #5]
;driverrf4463pro.c, 683 :: 		}
0x1FE4	0xE008    B	L_rf_init_freq105
L_rf_init_freq104:
;driverrf4463pro.c, 687 :: 		ucOUTDIV = 24;
0x1FE6	0x2018    MOVS	R0, #24
0x1FE8	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 688 :: 		ucBAND   = 5;
0x1FEC	0x2005    MOVS	R0, #5
0x1FEE	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 689 :: 		ucVCO    = 0xFA;
0x1FF2	0x20FA    MOVS	R0, #250
0x1FF4	0xF88D0005  STRB	R0, [SP, #5]
;driverrf4463pro.c, 690 :: 		}
L_rf_init_freq105:
L_rf_init_freq103:
L_rf_init_freq101:
L_rf_init_freq99:
L_rf_init_freq97:
;driverrf4463pro.c, 692 :: 		ucDIV = ucOUTDIV / 2;
0x1FF8	0xF89D0004  LDRB	R0, [SP, #4]
0x1FFC	0x0840    LSRS	R0, R0, #1
0x1FFE	0xB2C0    UXTB	R0, R0
;driverrf4463pro.c, 694 :: 		ulData = ( ulFrequency * ucDIV ) / 3;          // ucDIV = 88.5 = 88   //// UCdiv = 2
0x2000	0xFB02F100  MUL	R1, R2, R0
; ulFrequency end address is: 8 (R2)
0x2004	0x2003    MOVS	R0, #3
0x2006	0xFBB1F2F0  UDIV	R2, R1, R0
;driverrf4463pro.c, 695 :: 		ucINTE = ( ulData / 100000) - 1;               // ulData = 6 000 000  //// ULdATA = 9 000 000
0x200A	0x4844    LDR	R0, [PC, #272]
0x200C	0xFBB2F0F0  UDIV	R0, R2, R0
0x2010	0x1E40    SUBS	R0, R0, #1
; ucINTE start address is: 24 (R6)
0x2012	0xB2C6    UXTB	R6, R0
;driverrf4463pro.c, 696 :: 		ulFRAC = ( ulData - ( ucINTE + 1 ) * 100000 ) * 16384 / 3125;         // ulFRAC = 15 728 640
0x2014	0xB2C0    UXTB	R0, R0
0x2016	0x1C41    ADDS	R1, R0, #1
0x2018	0xB209    SXTH	R1, R1
0x201A	0x4840    LDR	R0, [PC, #256]
0x201C	0x4348    MULS	R0, R1, R0
0x201E	0x1A10    SUB	R0, R2, R0
0x2020	0x0381    LSLS	R1, R0, #14
0x2022	0xF6404035  MOVW	R0, #3125
0x2026	0xFBB1F0F0  UDIV	R0, R1, R0
;driverrf4463pro.c, 697 :: 		ulFRAC = ulFRAC + 0x80000;
0x202A	0xF5002000  ADD	R0, R0, #524288
;driverrf4463pro.c, 699 :: 		ucFRAC_0 = ulFRAC;
; ucFRAC_0 start address is: 28 (R7)
0x202E	0xB2C7    UXTB	R7, R0
;driverrf4463pro.c, 700 :: 		ulFRAC >>= 8;
0x2030	0x0A00    LSRS	R0, R0, #8
;driverrf4463pro.c, 701 :: 		ucFRAC_1 = ulFRAC;
; ucFRAC_1 start address is: 32 (R8)
0x2032	0xFA5FF880  UXTB	R8, R0
;driverrf4463pro.c, 702 :: 		ulFRAC >>= 8;
0x2036	0x0A00    LSRS	R0, R0, #8
;driverrf4463pro.c, 703 :: 		ucFRAC_2 = ulFRAC;
; ucFRAC_2 start address is: 36 (R9)
0x2038	0xFA5FF980  UXTB	R9, R0
;driverrf4463pro.c, 707 :: 		app_command_buf[ 0 ] = 0x11;           // SET property    MODEM_CLKGEN_BAND
0x203C	0xF10D0207  ADD	R2, SP, #7
0x2040	0x2011    MOVS	R0, #17
0x2042	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 708 :: 		app_command_buf[ 1 ] = 0x20;           // Group  // 0x2051
0x2044	0x1C51    ADDS	R1, R2, #1
0x2046	0x2020    MOVS	R0, #32
0x2048	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 709 :: 		app_command_buf[ 2 ] = 0x01;           // Num Arguments // Total 1 Parameters
0x204A	0x1C91    ADDS	R1, R2, #2
0x204C	0x2001    MOVS	R0, #1
0x204E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 710 :: 		app_command_buf[ 3 ] = 0x51;           // Number  // 0x2051
0x2050	0x1CD1    ADDS	R1, R2, #3
0x2052	0x2051    MOVS	R0, #81
0x2054	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 711 :: 		app_command_buf[ 4 ] = 0x08 | ucBAND;  // Argumento  //  high performance mode , clk outpu = osc /4
0x2056	0x1D11    ADDS	R1, R2, #4
0x2058	0xF89D0006  LDRB	R0, [SP, #6]
0x205C	0xF0400008  ORR	R0, R0, #8
0x2060	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 712 :: 		spi_write( 5, app_command_buf );
0x2062	0x4611    MOV	R1, R2
0x2064	0x2005    MOVS	R0, #5
0x2066	0xF7FEFAFD  BL	_spi_write+0
;driverrf4463pro.c, 714 :: 		app_command_buf[ 0 ]  = 0x11;
0x206A	0xF10D0207  ADD	R2, SP, #7
0x206E	0x2011    MOVS	R0, #17
0x2070	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 715 :: 		app_command_buf[ 1 ]  = 0x40;    // 0x4000         FREQ_CONTROL_INTE
0x2072	0x1C51    ADDS	R1, R2, #1
0x2074	0x2040    MOVS	R0, #64
0x2076	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 716 :: 		app_command_buf[ 2 ]  = 0x08;    // Total 8 Parameters
0x2078	0x1C91    ADDS	R1, R2, #2
0x207A	0x2008    MOVS	R0, #8
0x207C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 717 :: 		app_command_buf[ 3 ]  = 0x00;   // 0x4000
0x207E	0x1CD1    ADDS	R1, R2, #3
0x2080	0x2000    MOVS	R0, #0
0x2082	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 718 :: 		app_command_buf[ 4 ]  = ucINTE;   //  default value
0x2084	0x1D10    ADDS	R0, R2, #4
0x2086	0x7006    STRB	R6, [R0, #0]
; ucINTE end address is: 24 (R6)
;driverrf4463pro.c, 719 :: 		app_command_buf[ 5 ]  = ucFRAC_2;   //  defaul value
0x2088	0x1D50    ADDS	R0, R2, #5
0x208A	0xF8809000  STRB	R9, [R0, #0]
; ucFRAC_2 end address is: 36 (R9)
;driverrf4463pro.c, 720 :: 		app_command_buf[ 6 ]  = ucFRAC_1;   //  default value
0x208E	0x1D90    ADDS	R0, R2, #6
0x2090	0xF8808000  STRB	R8, [R0, #0]
; ucFRAC_1 end address is: 32 (R8)
;driverrf4463pro.c, 721 :: 		app_command_buf[ 7 ]  = ucFRAC_0;   // frac ,from WDS
0x2094	0x1DD0    ADDS	R0, R2, #7
0x2096	0x7007    STRB	R7, [R0, #0]
; ucFRAC_0 end address is: 28 (R7)
;driverrf4463pro.c, 724 :: 		if ( ulRF4463Step == 250 ) {
0x2098	0x4821    LDR	R0, [PC, #132]
0x209A	0x6800    LDR	R0, [R0, #0]
0x209C	0x28FA    CMP	R0, #250
0x209E	0xD10A    BNE	L_rf_init_freq106
;driverrf4463pro.c, 725 :: 		app_command_buf[ 8 ]  = step_250K_step1;   // channel step1  from wds  // al parecer aqu? esta el ancho del canal
0x20A0	0xF10D0207  ADD	R2, SP, #7
0x20A4	0xF2020108  ADDW	R1, R2, #8
0x20A8	0x2022    MOVS	R0, #34
0x20AA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 726 :: 		app_command_buf[ 9 ]  = step_250K_step0;   // channel step0  from wds
0x20AC	0xF2020109  ADDW	R1, R2, #9
0x20B0	0x2022    MOVS	R0, #34
0x20B2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 727 :: 		}
0x20B4	0xE00E    B	L_rf_init_freq107
L_rf_init_freq106:
;driverrf4463pro.c, 728 :: 		else if ( ulRF4463Step == 500 ) {
0x20B6	0x481A    LDR	R0, [PC, #104]
0x20B8	0x6800    LDR	R0, [R0, #0]
0x20BA	0xF5B07FFA  CMP	R0, #500
0x20BE	0xD109    BNE	L_rf_init_freq108
;driverrf4463pro.c, 729 :: 		app_command_buf[ 8 ]  = step_500K_step1;   // channel step1  from wds  // al parecer aqu? esta el ancho del canal
0x20C0	0xF10D0207  ADD	R2, SP, #7
0x20C4	0xF2020108  ADDW	R1, R2, #8
0x20C8	0x2044    MOVS	R0, #68
0x20CA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 730 :: 		app_command_buf[ 9 ]  = step_500K_step0;   // channel step0  from wds
0x20CC	0xF2020109  ADDW	R1, R2, #9
0x20D0	0x2044    MOVS	R0, #68
0x20D2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 731 :: 		}
L_rf_init_freq108:
L_rf_init_freq107:
;driverrf4463pro.c, 733 :: 		app_command_buf[ 10 ] = 0x20;  //  from wds Without this Values
0x20D4	0xF10D0207  ADD	R2, SP, #7
0x20D8	0xF202010A  ADDW	R1, R2, #10
0x20DC	0x2020    MOVS	R0, #32
0x20DE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 734 :: 		app_command_buf[ 11 ] = ucVCO;    // from wds Without this Values
0x20E0	0xF202010B  ADDW	R1, R2, #11
0x20E4	0xF89D0005  LDRB	R0, [SP, #5]
0x20E8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 748 :: 		spi_write( 12, app_command_buf );
0x20EA	0x4611    MOV	R1, R2
0x20EC	0x200C    MOVS	R0, #12
0x20EE	0xF7FEFAB9  BL	_spi_write+0
;driverrf4463pro.c, 749 :: 		}
L_end_rf_init_freq:
0x20F2	0xF8DDE000  LDR	LR, [SP, #0]
0x20F6	0xB007    ADD	SP, SP, #28
0x20F8	0x4770    BX	LR
0x20FA	0xBF00    NOP
0x20FC	0x22A92000  	_ucRF4463Freq3+0
0x2100	0x22AC2000  	_ucRF4463Freq2+0
0x2104	0x22AD2000  	_ucRF4463Freq1+0
0x2108	0xF7800073  	#7600000
0x210C	0x50200053  	#5460000
0x2110	0xBF10003A  	#3850000
0x2114	0xA8100029  	#2730000
0x2118	0x9A20001D  	#1940000
0x211C	0x86A00001  	#100000
0x2120	0x20A42000  	_ulRF4463Step+0
; end of _rf_init_freq
_vRF4463ClearInterrupts:
;driverrf4463pro.c, 431 :: 		void vRF4463ClearInterrupts( void ) {
0x2A3C	0xB082    SUB	SP, SP, #8
0x2A3E	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 434 :: 		p[ 0 ] = GET_INT_STATUS;
0x2A42	0xAA01    ADD	R2, SP, #4
0x2A44	0x2020    MOVS	R0, #32
0x2A46	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 435 :: 		p[ 1 ] = 0;               // clr  PH pending
0x2A48	0x1C51    ADDS	R1, R2, #1
0x2A4A	0x2000    MOVS	R0, #0
0x2A4C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 436 :: 		p[ 2 ] = 0;               // clr modem_pending
0x2A4E	0x1C91    ADDS	R1, R2, #2
0x2A50	0x2000    MOVS	R0, #0
0x2A52	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 437 :: 		p[ 3 ] = 0;               // clr chip pending
0x2A54	0x1CD1    ADDS	R1, R2, #3
0x2A56	0x2000    MOVS	R0, #0
0x2A58	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 438 :: 		spi_write( 4, p );
0x2A5A	0x4611    MOV	R1, R2
0x2A5C	0x2004    MOVS	R0, #4
0x2A5E	0xF7FDFE01  BL	_spi_write+0
;driverrf4463pro.c, 439 :: 		spi_read( 9, GET_INT_STATUS );
0x2A62	0x2120    MOVS	R1, #32
0x2A64	0x2009    MOVS	R0, #9
0x2A66	0xF7FFF9F7  BL	_spi_read+0
;driverrf4463pro.c, 440 :: 		}
L_end_vRF4463ClearInterrupts:
0x2A6A	0xF8DDE000  LDR	LR, [SP, #0]
0x2A6E	0xB002    ADD	SP, SP, #8
0x2A70	0x4770    BX	LR
; end of _vRF4463ClearInterrupts
_spi_read:
;driverrf4463pro.c, 856 :: 		void spi_read( unsigned char data_length, unsigned char api_command ) {
; api_command start address is: 4 (R1)
; data_length start address is: 0 (R0)
0x1E58	0xB083    SUB	SP, SP, #12
0x1E5A	0xF8CDE000  STR	LR, [SP, #0]
; api_command end address is: 4 (R1)
; data_length end address is: 0 (R0)
; data_length start address is: 0 (R0)
; api_command start address is: 4 (R1)
;driverrf4463pro.c, 860 :: 		p[ 0 ] = api_command;
0x1E5E	0xAA01    ADD	R2, SP, #4
0x1E60	0x7011    STRB	R1, [R2, #0]
; api_command end address is: 4 (R1)
;driverrf4463pro.c, 861 :: 		i = 0;
; i start address is: 4 (R1)
0x1E62	0x2100    MOVS	R1, #0
; data_length end address is: 0 (R0)
; i end address is: 4 (R1)
0x1E64	0xB2C6    UXTB	R6, R0
0x1E66	0xB2C8    UXTB	R0, R1
;driverrf4463pro.c, 862 :: 		while ( i != 0xFF ) {
L_spi_read116:
; i start address is: 0 (R0)
; data_length start address is: 24 (R6)
0x1E68	0xF1B00FFF  CMP	R0, #255
0x1E6C	0xD002    BEQ	L_spi_read117
; i end address is: 0 (R0)
;driverrf4463pro.c, 863 :: 		i = check_cts();                // Check if you can send Command
0x1E6E	0xF7FEFAC5  BL	_check_cts+0
; i start address is: 0 (R0)
;driverrf4463pro.c, 864 :: 		}
; i end address is: 0 (R0)
0x1E72	0xE7F9    B	L_spi_read116
L_spi_read117:
;driverrf4463pro.c, 866 :: 		spi_write( 1, p );    // Send Command
0x1E74	0xAA01    ADD	R2, SP, #4
0x1E76	0x4611    MOV	R1, R2
0x1E78	0x2001    MOVS	R0, #1
0x1E7A	0xF7FEFBF3  BL	_spi_write+0
;driverrf4463pro.c, 868 :: 		i = 0;
; i start address is: 0 (R0)
0x1E7E	0x2000    MOVS	R0, #0
; data_length end address is: 24 (R6)
; i end address is: 0 (R0)
0x1E80	0xB2F4    UXTB	R4, R6
;driverrf4463pro.c, 869 :: 		while ( i != 0xFF ) {
L_spi_read118:
; i start address is: 0 (R0)
; data_length start address is: 16 (R4)
0x1E82	0xF1B00FFF  CMP	R0, #255
0x1E86	0xD002    BEQ	L_spi_read119
; i end address is: 0 (R0)
;driverrf4463pro.c, 870 :: 		i = check_cts();        //Check whether the data can be read
0x1E88	0xF7FEFAB8  BL	_check_cts+0
; i start address is: 0 (R0)
;driverrf4463pro.c, 871 :: 		}
; i end address is: 0 (R0)
0x1E8C	0xE7F9    B	L_spi_read118
L_spi_read119:
;driverrf4463pro.c, 873 :: 		nSEL = 1;
0x1E8E	0x2301    MOVS	R3, #1
0x1E90	0xB25B    SXTB	R3, R3
0x1E92	0x4A16    LDR	R2, [PC, #88]
0x1E94	0x6013    STR	R3, [R2, #0]
;driverrf4463pro.c, 874 :: 		nSEL = 0;
0x1E96	0x2300    MOVS	R3, #0
0x1E98	0xB25B    SXTB	R3, R3
0x1E9A	0x4A14    LDR	R2, [PC, #80]
0x1E9C	0x6013    STR	R3, [R2, #0]
;driverrf4463pro.c, 875 :: 		ucRf4463SPIByte( 0x44 );
0x1E9E	0x2044    MOVS	R0, #68
0x1EA0	0xF7FFFF1C  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 876 :: 		for ( i = 0; i < data_length; i++ ) {        // Read data
; i start address is: 0 (R0)
0x1EA4	0x2000    MOVS	R0, #0
; data_length end address is: 16 (R4)
; i end address is: 0 (R0)
0x1EA6	0xB2E3    UXTB	R3, R4
0x1EA8	0xB2C4    UXTB	R4, R0
L_spi_read120:
; i start address is: 16 (R4)
; data_length start address is: 12 (R3)
0x1EAA	0x429C    CMP	R4, R3
0x1EAC	0xD215    BCS	L_spi_read121
;driverrf4463pro.c, 877 :: 		spi_read_buf[ i ] = ucRf4463SPIByte( 0x00 );             // 0x00
0x1EAE	0x4A10    LDR	R2, [PC, #64]
0x1EB0	0x1912    ADDS	R2, R2, R4
0x1EB2	0x9202    STR	R2, [SP, #8]
0x1EB4	0x2000    MOVS	R0, #0
0x1EB6	0xF7FFFF11  BL	_ucRf4463SPIByte+0
0x1EBA	0x9A02    LDR	R2, [SP, #8]
0x1EBC	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 878 :: 		Delay_ms(1);
0x1EBE	0xF64267DF  MOVW	R7, #11999
0x1EC2	0xF2C00700  MOVT	R7, #0
0x1EC6	0xBF00    NOP
0x1EC8	0xBF00    NOP
L_spi_read123:
0x1ECA	0x1E7F    SUBS	R7, R7, #1
0x1ECC	0xD1FD    BNE	L_spi_read123
0x1ECE	0xBF00    NOP
0x1ED0	0xBF00    NOP
0x1ED2	0xBF00    NOP
;driverrf4463pro.c, 876 :: 		for ( i = 0; i < data_length; i++ ) {        // Read data
0x1ED4	0x1C64    ADDS	R4, R4, #1
0x1ED6	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 879 :: 		}
; data_length end address is: 12 (R3)
; i end address is: 16 (R4)
0x1ED8	0xE7E7    B	L_spi_read120
L_spi_read121:
;driverrf4463pro.c, 880 :: 		nSEL = 1;
0x1EDA	0x2301    MOVS	R3, #1
0x1EDC	0xB25B    SXTB	R3, R3
0x1EDE	0x4A03    LDR	R2, [PC, #12]
0x1EE0	0x6013    STR	R3, [R2, #0]
;driverrf4463pro.c, 881 :: 		}
L_end_spi_read:
0x1EE2	0xF8DDE000  LDR	LR, [SP, #0]
0x1EE6	0xB003    ADD	SP, SP, #12
0x1EE8	0x4770    BX	LR
0x1EEA	0xBF00    NOP
0x1EEC	0x81B04221  	GPIOB_ODRbits+0
0x1EF0	0x22942000  	_spi_read_buf+0
; end of _spi_read
_vRF4463PartInfo:
;driverrf4463pro.c, 442 :: 		void vRF4463PartInfo( void ) {  // Solicitud totalmente operativa
0x2908	0xB084    SUB	SP, SP, #16
0x290A	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 445 :: 		p[ 0 ] = PART_INFO;
0x290E	0xA901    ADD	R1, SP, #4
0x2910	0x2001    MOVS	R0, #1
0x2912	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 449 :: 		spi_write( 1, p );
0x2914	0x2001    MOVS	R0, #1
0x2916	0xF7FDFEA5  BL	_spi_write+0
;driverrf4463pro.c, 450 :: 		spi_read( 9, PART_INFO );
0x291A	0x2101    MOVS	R1, #1
0x291C	0x2009    MOVS	R0, #9
0x291E	0xF7FFFA9B  BL	_spi_read+0
;driverrf4463pro.c, 451 :: 		}
L_end_vRF4463PartInfo:
0x2922	0xF8DDE000  LDR	LR, [SP, #0]
0x2926	0xB004    ADD	SP, SP, #16
0x2928	0x4770    BX	LR
; end of _vRF4463PartInfo
_vUSART1Start_TX:
;uarthandler.c, 390 :: 		unsigned char vUSART1Start_TX ( unsigned long *ucBuffer, unsigned long ulSize ) {
; ulSize start address is: 4 (R1)
; ucBuffer start address is: 0 (R0)
0x2884	0xB081    SUB	SP, SP, #4
; ulSize end address is: 4 (R1)
; ucBuffer end address is: 0 (R0)
; ucBuffer start address is: 0 (R0)
; ulSize start address is: 4 (R1)
0x2886	0x9100    STR	R1, [SP, #0]
; ucBuffer end address is: 0 (R0)
; ulSize end address is: 4 (R1)
0x2888	0x4601    MOV	R1, R0
0x288A	0x9800    LDR	R0, [SP, #0]
;uarthandler.c, 393 :: 		while ( DMA1_CCR4bits.EN || !USART1_SRbits.TC );
L_vUSART1Start_TX234:
; ucBuffer start address is: 4 (R1)
; ulSize start address is: 0 (R0)
; ulSize start address is: 0 (R0)
; ulSize end address is: 0 (R0)
; ucBuffer start address is: 4 (R1)
; ucBuffer end address is: 4 (R1)
0x288C	0x4A19    LDR	R2, [PC, #100]
0x288E	0x6812    LDR	R2, [R2, #0]
0x2890	0xB922    CBNZ	R2, L__vUSART1Start_TX435
; ulSize end address is: 0 (R0)
; ucBuffer end address is: 4 (R1)
; ucBuffer start address is: 4 (R1)
; ulSize start address is: 0 (R0)
0x2892	0x4A19    LDR	R2, [PC, #100]
0x2894	0x6812    LDR	R2, [R2, #0]
0x2896	0x2A00    CMP	R2, #0
0x2898	0xD000    BEQ	L__vUSART1Start_TX434
0x289A	0xE000    B	L_vUSART1Start_TX235
L__vUSART1Start_TX435:
L__vUSART1Start_TX434:
0x289C	0xE7F6    B	L_vUSART1Start_TX234
L_vUSART1Start_TX235:
;uarthandler.c, 395 :: 		if ( USART1_CR1bits.UE && USART1_SRbits.TC && ulSize > 0 ) { // la transmision anterior termino?
0x289E	0x4A17    LDR	R2, [PC, #92]
0x28A0	0x6812    LDR	R2, [R2, #0]
0x28A2	0x2A00    CMP	R2, #0
0x28A4	0xD023    BEQ	L__vUSART1Start_TX440
0x28A6	0x4A14    LDR	R2, [PC, #80]
0x28A8	0x6812    LDR	R2, [R2, #0]
0x28AA	0x2A00    CMP	R2, #0
0x28AC	0xD01F    BEQ	L__vUSART1Start_TX439
0x28AE	0x2800    CMP	R0, #0
0x28B0	0xD91D    BLS	L__vUSART1Start_TX438
L__vUSART1Start_TX432:
;uarthandler.c, 396 :: 		DMA1_CCR4bits.EN = 0;                       // Desabilita la recepci?n para poder modificar los par?metros
0x28B2	0x2300    MOVS	R3, #0
0x28B4	0xB25B    SXTB	R3, R3
0x28B6	0x4A0F    LDR	R2, [PC, #60]
0x28B8	0x6013    STR	R3, [R2, #0]
; ulSize end address is: 0 (R0)
; ucBuffer end address is: 4 (R1)
0x28BA	0x9100    STR	R1, [SP, #0]
0x28BC	0x4601    MOV	R1, R0
0x28BE	0x9800    LDR	R0, [SP, #0]
;uarthandler.c, 397 :: 		while ( DMA1_CCR4bits.EN );                 // espera a que se haya desabilitado realmente
L_vUSART1Start_TX241:
; ucBuffer start address is: 0 (R0)
; ulSize start address is: 4 (R1)
0x28C0	0x4A0C    LDR	R2, [PC, #48]
0x28C2	0x6812    LDR	R2, [R2, #0]
0x28C4	0xB102    CBZ	R2, L_vUSART1Start_TX242
0x28C6	0xE7FB    B	L_vUSART1Start_TX241
L_vUSART1Start_TX242:
;uarthandler.c, 399 :: 		DMA1_CMAR4 = ( unsigned long ) ucBuffer;   // Direcci?n de la memoria a rutear
0x28C8	0x4A0D    LDR	R2, [PC, #52]
0x28CA	0x6010    STR	R0, [R2, #0]
; ucBuffer end address is: 0 (R0)
;uarthandler.c, 400 :: 		DMA1_CNDTR4 = ulSize;                       // Tama?o de datos a manejar
0x28CC	0x4A0D    LDR	R2, [PC, #52]
0x28CE	0x6011    STR	R1, [R2, #0]
; ulSize end address is: 4 (R1)
;uarthandler.c, 401 :: 		DMA1_CCR4bits.EN = 1;
0x28D0	0x2301    MOVS	R3, #1
0x28D2	0xB25B    SXTB	R3, R3
0x28D4	0x4A07    LDR	R2, [PC, #28]
0x28D6	0x6013    STR	R3, [R2, #0]
;uarthandler.c, 402 :: 		while ( DMA1_CCR4bits.EN || !USART1_SRbits.TC );
L_vUSART1Start_TX243:
0x28D8	0x4A06    LDR	R2, [PC, #24]
0x28DA	0x6812    LDR	R2, [R2, #0]
0x28DC	0xB922    CBNZ	R2, L__vUSART1Start_TX437
0x28DE	0x4A06    LDR	R2, [PC, #24]
0x28E0	0x6812    LDR	R2, [R2, #0]
0x28E2	0x2A00    CMP	R2, #0
0x28E4	0xD000    BEQ	L__vUSART1Start_TX436
0x28E6	0xE000    B	L_vUSART1Start_TX244
L__vUSART1Start_TX437:
L__vUSART1Start_TX436:
0x28E8	0xE7F6    B	L_vUSART1Start_TX243
L_vUSART1Start_TX244:
;uarthandler.c, 403 :: 		return 1;                                   // indica que transmitio
0x28EA	0x2001    MOVS	R0, #1
0x28EC	0xE000    B	L_end_vUSART1Start_TX
;uarthandler.c, 395 :: 		if ( USART1_CR1bits.UE && USART1_SRbits.TC && ulSize > 0 ) { // la transmision anterior termino?
L__vUSART1Start_TX440:
L__vUSART1Start_TX439:
L__vUSART1Start_TX438:
;uarthandler.c, 405 :: 		return 0;                                      // indica que NO transmitio
0x28EE	0x2000    MOVS	R0, #0
;uarthandler.c, 423 :: 		}
L_end_vUSART1Start_TX:
0x28F0	0xB001    ADD	SP, SP, #4
0x28F2	0x4770    BX	LR
0x28F4	0x08804240  	DMA1_CCR4bits+0
0x28F8	0x00184227  	USART1_SRbits+0
0x28FC	0x01B44227  	USART1_CR1bits+0
0x2900	0x00504002  	DMA1_CMAR4+0
0x2904	0x00484002  	DMA1_CNDTR4+0
; end of _vUSART1Start_TX
_UART1_Write_Text:
;__Lib_UART_123_45.c, 75 :: 		
; uart_text start address is: 0 (R0)
0x2990	0xB081    SUB	SP, SP, #4
0x2992	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_123_45.c, 76 :: 		
0x2996	0x4601    MOV	R1, R0
; uart_text end address is: 0 (R0)
0x2998	0x4803    LDR	R0, [PC, #12]
0x299A	0xF7FEFAC7  BL	__Lib_UART_123_45_UARTx_Write_Text+0
;__Lib_UART_123_45.c, 77 :: 		
L_end_UART1_Write_Text:
0x299E	0xF8DDE000  LDR	LR, [SP, #0]
0x29A2	0xB001    ADD	SP, SP, #4
0x29A4	0x4770    BX	LR
0x29A6	0xBF00    NOP
0x29A8	0x38004001  	USART1_SR+0
; end of _UART1_Write_Text
__Lib_UART_123_45_UARTx_Write_Text:
;__Lib_UART_123_45.c, 64 :: 		
; uart_text start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0F2C	0xB081    SUB	SP, SP, #4
0x0F2E	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; uart_text start address is: 4 (R1)
;__Lib_UART_123_45.c, 65 :: 		
; counter start address is: 24 (R6)
0x0F32	0x2600    MOVS	R6, #0
;__Lib_UART_123_45.c, 67 :: 		
0x0F34	0x780A    LDRB	R2, [R1, #0]
; data_ start address is: 12 (R3)
0x0F36	0xB2D3    UXTB	R3, R2
; UART_Base end address is: 0 (R0)
; uart_text end address is: 4 (R1)
; data_ end address is: 12 (R3)
; counter end address is: 24 (R6)
0x0F38	0x4605    MOV	R5, R0
0x0F3A	0xB2D8    UXTB	R0, R3
0x0F3C	0x460C    MOV	R4, R1
;__Lib_UART_123_45.c, 68 :: 		
L___Lib_UART_123_45_UARTx_Write_Text2:
; data_ start address is: 0 (R0)
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
; counter start address is: 24 (R6)
; uart_text start address is: 16 (R4)
; uart_text end address is: 16 (R4)
; UART_Base start address is: 20 (R5)
; UART_Base end address is: 20 (R5)
0x0F3E	0xB150    CBZ	R0, L___Lib_UART_123_45_UARTx_Write_Text3
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
;__Lib_UART_123_45.c, 69 :: 		
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
0x0F40	0xB2C1    UXTB	R1, R0
; data_ end address is: 0 (R0)
0x0F42	0x4628    MOV	R0, R5
0x0F44	0xF7FFFDFE  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 70 :: 		
0x0F48	0x1C72    ADDS	R2, R6, #1
0x0F4A	0xB2D2    UXTB	R2, R2
0x0F4C	0xB2D6    UXTB	R6, R2
;__Lib_UART_123_45.c, 71 :: 		
0x0F4E	0x18A2    ADDS	R2, R4, R2
0x0F50	0x7812    LDRB	R2, [R2, #0]
; data_ start address is: 0 (R0)
0x0F52	0xB2D0    UXTB	R0, R2
;__Lib_UART_123_45.c, 72 :: 		
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
; counter end address is: 24 (R6)
; data_ end address is: 0 (R0)
0x0F54	0xE7F3    B	L___Lib_UART_123_45_UARTx_Write_Text2
L___Lib_UART_123_45_UARTx_Write_Text3:
;__Lib_UART_123_45.c, 73 :: 		
L_end_UARTx_Write_Text:
0x0F56	0xF8DDE000  LDR	LR, [SP, #0]
0x0F5A	0xB001    ADD	SP, SP, #4
0x0F5C	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write_Text
__Lib_UART_123_45_UARTx_Write:
;__Lib_UART_123_45.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0B44	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x0B46	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x0B4A	0x4601    MOV	R1, R0
0x0B4C	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45.c, 36 :: 		
L___Lib_UART_123_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x0B50	0x680B    LDR	R3, [R1, #0]
0x0B52	0xF3C312C0  UBFX	R2, R3, #7, #1
0x0B56	0xB902    CBNZ	R2, L___Lib_UART_123_45_UARTx_Write1
;__Lib_UART_123_45.c, 37 :: 		
0x0B58	0xE7FA    B	L___Lib_UART_123_45_UARTx_Write0
L___Lib_UART_123_45_UARTx_Write1:
;__Lib_UART_123_45.c, 38 :: 		
0x0B5A	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x0B5C	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45.c, 39 :: 		
L_end_UARTx_Write:
0x0B5E	0xB001    ADD	SP, SP, #4
0x0B60	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write
_vUSARTReceivedFromUSART1:
;uarthandler.c, 505 :: 		void vUSARTReceivedFromUSART1 ( ) {
0x292C	0xB081    SUB	SP, SP, #4
0x292E	0xF8CDE000  STR	LR, [SP, #0]
;uarthandler.c, 507 :: 		vUSARTCleanBuffer( ucUSARTActiveBuffer1, ulUSARTActiveBuffer1BytesReceived ); // borra todo el buffer
0x2932	0x4812    LDR	R0, [PC, #72]
0x2934	0x6800    LDR	R0, [R0, #0]
0x2936	0xB281    UXTH	R1, R0
0x2938	0x4811    LDR	R0, [PC, #68]
0x293A	0xF7FEFAED  BL	_vUSARTCleanBuffer+0
;uarthandler.c, 509 :: 		vUSARTStartMEMtoMEM( ucUSART1RXBuffer, ucUSARTActiveBuffer1, ulUSART1ByteReceived ); // copia el buffer de entrada
0x293E	0x4811    LDR	R0, [PC, #68]
0x2940	0x6800    LDR	R0, [R0, #0]
0x2942	0x4602    MOV	R2, R0
0x2944	0x490E    LDR	R1, [PC, #56]
0x2946	0x4810    LDR	R0, [PC, #64]
0x2948	0xF7FEFCC6  BL	_vUSARTStartMEMtoMEM+0
;uarthandler.c, 510 :: 		vUSARTCleanBuffer( ucUSART1RXBuffer, ulUSART1ByteReceived );          // lo limpia
0x294C	0x480D    LDR	R0, [PC, #52]
0x294E	0x6800    LDR	R0, [R0, #0]
0x2950	0xB281    UXTH	R1, R0
0x2952	0x480D    LDR	R0, [PC, #52]
0x2954	0xF7FEFAE0  BL	_vUSARTCleanBuffer+0
;uarthandler.c, 511 :: 		ulUSARTActiveBuffer1BytesReceived = ulUSART1ByteReceived;             // le pasa el valor
0x2958	0x480A    LDR	R0, [PC, #40]
0x295A	0x6801    LDR	R1, [R0, #0]
0x295C	0x4807    LDR	R0, [PC, #28]
0x295E	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 512 :: 		ulUSART1ByteReceived = 0;                                             // pone a cero el contador
0x2960	0x2100    MOVS	R1, #0
0x2962	0x4808    LDR	R0, [PC, #32]
0x2964	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 513 :: 		fUSART1Buffer = CLEAR_TO_WRITE;                                       // indica que esta limpio
0x2966	0x2100    MOVS	R1, #0
0x2968	0x4808    LDR	R0, [PC, #32]
0x296A	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 514 :: 		vRF4463MainCommandProcessor( ucUSARTActiveBuffer1 );
0x296C	0x4804    LDR	R0, [PC, #16]
0x296E	0xF7FEFCE3  BL	_vRF4463MainCommandProcessor+0
;uarthandler.c, 515 :: 		}
L_end_vUSARTReceivedFromUSART1:
0x2972	0xF8DDE000  LDR	LR, [SP, #0]
0x2976	0xB001    ADD	SP, SP, #4
0x2978	0x4770    BX	LR
0x297A	0xBF00    NOP
0x297C	0x10002000  	_ulUSARTActiveBuffer1BytesReceived+0
0x2980	0x00002000  	_ucUSARTActiveBuffer1+0
0x2984	0x20042000  	_ulUSART1ByteReceived+0
0x2988	0x10042000  	_ucUSART1RXBuffer+0
0x298C	0x20082000  	_fUSART1Buffer+0
; end of _vUSARTReceivedFromUSART1
_vUSARTCleanBuffer:
;uarthandler.c, 498 :: 		void vUSARTCleanBuffer ( unsigned char *ucBuffer, unsigned int uiCnt ) {
; uiCnt start address is: 4 (R1)
; ucBuffer start address is: 0 (R0)
0x0F18	0xB081    SUB	SP, SP, #4
0x0F1A	0xF8CDE000  STR	LR, [SP, #0]
; uiCnt end address is: 4 (R1)
; ucBuffer end address is: 0 (R0)
; ucBuffer start address is: 0 (R0)
; uiCnt start address is: 4 (R1)
;uarthandler.c, 500 :: 		vUSARTStartMEMtoMEMZero( ucBuffer, uiCnt );
; uiCnt end address is: 4 (R1)
; ucBuffer end address is: 0 (R0)
0x0F1E	0xF7FFFDE3  BL	_vUSARTStartMEMtoMEMZero+0
;uarthandler.c, 501 :: 		}
L_end_vUSARTCleanBuffer:
0x0F22	0xF8DDE000  LDR	LR, [SP, #0]
0x0F26	0xB001    ADD	SP, SP, #4
0x0F28	0x4770    BX	LR
; end of _vUSARTCleanBuffer
_vUSARTStartMEMtoMEMZero:
;uarthandler.c, 210 :: 		unsigned char vUSARTStartMEMtoMEMZero ( unsigned long *pcBufferDestination, unsigned long ulSizeInBytes ) {
; ulSizeInBytes start address is: 4 (R1)
; pcBufferDestination start address is: 0 (R0)
0x0AE8	0xB081    SUB	SP, SP, #4
; ulSizeInBytes end address is: 4 (R1)
; pcBufferDestination end address is: 0 (R0)
; pcBufferDestination start address is: 0 (R0)
; ulSizeInBytes start address is: 4 (R1)
; pcBufferDestination end address is: 0 (R0)
; ulSizeInBytes end address is: 4 (R1)
;uarthandler.c, 213 :: 		while ( DMA1_CCR1bits.EN );
L_vUSARTStartMEMtoMEMZero216:
; ulSizeInBytes start address is: 4 (R1)
; pcBufferDestination start address is: 0 (R0)
0x0AEA	0x4A11    LDR	R2, [PC, #68]
0x0AEC	0x6812    LDR	R2, [R2, #0]
0x0AEE	0xB102    CBZ	R2, L_vUSARTStartMEMtoMEMZero217
0x0AF0	0xE7FB    B	L_vUSARTStartMEMtoMEMZero216
L_vUSARTStartMEMtoMEMZero217:
;uarthandler.c, 215 :: 		if ( ulSizeInBytes > 0 ) {                // la transmision anterior termino?
0x0AF2	0x2900    CMP	R1, #0
0x0AF4	0xD918    BLS	L_vUSARTStartMEMtoMEMZero218
;uarthandler.c, 216 :: 		DMA1_CCR1bits.EN = 0;                  // Desabilita la recepcion para poder modificar los par?metros
0x0AF6	0x2300    MOVS	R3, #0
0x0AF8	0xB25B    SXTB	R3, R3
0x0AFA	0x4A0D    LDR	R2, [PC, #52]
0x0AFC	0x6013    STR	R3, [R2, #0]
; pcBufferDestination end address is: 0 (R0)
; ulSizeInBytes end address is: 4 (R1)
;uarthandler.c, 217 :: 		while ( DMA1_CCR1bits.EN );            // espera a que se haya desabilitado realmente
L_vUSARTStartMEMtoMEMZero219:
; pcBufferDestination start address is: 0 (R0)
; ulSizeInBytes start address is: 4 (R1)
0x0AFE	0x4A0C    LDR	R2, [PC, #48]
0x0B00	0x6812    LDR	R2, [R2, #0]
0x0B02	0xB102    CBZ	R2, L_vUSARTStartMEMtoMEMZero220
0x0B04	0xE7FB    B	L_vUSARTStartMEMtoMEMZero219
L_vUSARTStartMEMtoMEMZero220:
;uarthandler.c, 220 :: 		DMA1_CPAR1 = ( unsigned long ) &ucUSARTNull;         // Direccion de periferico a rutear
0x0B06	0x4B0B    LDR	R3, [PC, #44]
0x0B08	0x4A0B    LDR	R2, [PC, #44]
0x0B0A	0x6013    STR	R3, [R2, #0]
;uarthandler.c, 221 :: 		DMA1_CMAR1 = ( unsigned long ) pcBufferDestination;  // Direccion de la memoria a rutear
0x0B0C	0x4A0B    LDR	R2, [PC, #44]
0x0B0E	0x6010    STR	R0, [R2, #0]
; pcBufferDestination end address is: 0 (R0)
;uarthandler.c, 223 :: 		DMA1_CNDTR1 = ulSizeInBytes;           // Tamagno de datos a manejar (Header + Payload)
0x0B10	0x4A0B    LDR	R2, [PC, #44]
0x0B12	0x6011    STR	R1, [R2, #0]
; ulSizeInBytes end address is: 4 (R1)
;uarthandler.c, 224 :: 		DMA1_CCR1bits.EN = 1;
0x0B14	0x2301    MOVS	R3, #1
0x0B16	0xB25B    SXTB	R3, R3
0x0B18	0x4A05    LDR	R2, [PC, #20]
0x0B1A	0x6013    STR	R3, [R2, #0]
;uarthandler.c, 225 :: 		while ( DMA1_CCR1bits.EN );
L_vUSARTStartMEMtoMEMZero221:
0x0B1C	0x4A04    LDR	R2, [PC, #16]
0x0B1E	0x6812    LDR	R2, [R2, #0]
0x0B20	0xB102    CBZ	R2, L_vUSARTStartMEMtoMEMZero222
0x0B22	0xE7FB    B	L_vUSARTStartMEMtoMEMZero221
L_vUSARTStartMEMtoMEMZero222:
;uarthandler.c, 226 :: 		return 1;                              // indica que transmitio
0x0B24	0x2001    MOVS	R0, #1
0x0B26	0xE000    B	L_end_vUSARTStartMEMtoMEMZero
;uarthandler.c, 227 :: 		}
L_vUSARTStartMEMtoMEMZero218:
;uarthandler.c, 228 :: 		return 0;                                 // indica que NO transmitio
0x0B28	0x2000    MOVS	R0, #0
;uarthandler.c, 249 :: 		}
L_end_vUSARTStartMEMtoMEMZero:
0x0B2A	0xB001    ADD	SP, SP, #4
0x0B2C	0x4770    BX	LR
0x0B2E	0xBF00    NOP
0x0B30	0x01004240  	DMA1_CCR1bits+0
0x0B34	0x200C2000  	_ucUSARTNull+0
0x0B38	0x00104002  	DMA1_CPAR1+0
0x0B3C	0x00144002  	DMA1_CMAR1+0
0x0B40	0x000C4002  	DMA1_CNDTR1+0
; end of _vUSARTStartMEMtoMEMZero
_vUSARTStartMEMtoMEM:
;uarthandler.c, 299 :: 		unsigned char vUSARTStartMEMtoMEM ( unsigned long *pcBufferOrigin, unsigned long *pcBufferDestination, unsigned long ulSizeInBytes ) {
; ulSizeInBytes start address is: 8 (R2)
; pcBufferDestination start address is: 4 (R1)
; pcBufferOrigin start address is: 0 (R0)
0x12D8	0xB081    SUB	SP, SP, #4
; ulSizeInBytes end address is: 8 (R2)
; pcBufferDestination end address is: 4 (R1)
; pcBufferOrigin end address is: 0 (R0)
; pcBufferOrigin start address is: 0 (R0)
; pcBufferDestination start address is: 4 (R1)
; ulSizeInBytes start address is: 8 (R2)
0x12DA	0x9200    STR	R2, [SP, #0]
; pcBufferOrigin end address is: 0 (R0)
; pcBufferDestination end address is: 4 (R1)
; ulSizeInBytes end address is: 8 (R2)
0x12DC	0x4602    MOV	R2, R0
0x12DE	0x9800    LDR	R0, [SP, #0]
;uarthandler.c, 302 :: 		while ( DMA1_CCR2bits.EN );
L_vUSARTStartMEMtoMEM225:
; ulSizeInBytes start address is: 0 (R0)
; pcBufferDestination start address is: 4 (R1)
; pcBufferOrigin start address is: 8 (R2)
0x12E0	0x4B11    LDR	R3, [PC, #68]
0x12E2	0x681B    LDR	R3, [R3, #0]
0x12E4	0xB103    CBZ	R3, L_vUSARTStartMEMtoMEM226
0x12E6	0xE7FB    B	L_vUSARTStartMEMtoMEM225
L_vUSARTStartMEMtoMEM226:
;uarthandler.c, 304 :: 		if ( ulSizeInBytes > 0 ) {                // la transmision anterior termino?
0x12E8	0x2800    CMP	R0, #0
0x12EA	0xD91A    BLS	L_vUSARTStartMEMtoMEM227
;uarthandler.c, 305 :: 		DMA1_CCR2bits.EN = 0;                  // Desabilita la recepci?n para poder modificar los par?metros
0x12EC	0x2400    MOVS	R4, #0
0x12EE	0xB264    SXTB	R4, R4
0x12F0	0x4B0D    LDR	R3, [PC, #52]
0x12F2	0x601C    STR	R4, [R3, #0]
; ulSizeInBytes end address is: 0 (R0)
; pcBufferOrigin end address is: 8 (R2)
; pcBufferDestination end address is: 4 (R1)
0x12F4	0x9200    STR	R2, [SP, #0]
0x12F6	0x4602    MOV	R2, R0
0x12F8	0x9800    LDR	R0, [SP, #0]
;uarthandler.c, 306 :: 		while ( DMA1_CCR2bits.EN );            // espera a que se haya desabilitado realmente
L_vUSARTStartMEMtoMEM228:
; pcBufferOrigin start address is: 0 (R0)
; pcBufferDestination start address is: 4 (R1)
; ulSizeInBytes start address is: 8 (R2)
0x12FA	0x4B0B    LDR	R3, [PC, #44]
0x12FC	0x681B    LDR	R3, [R3, #0]
0x12FE	0xB103    CBZ	R3, L_vUSARTStartMEMtoMEM229
0x1300	0xE7FB    B	L_vUSARTStartMEMtoMEM228
L_vUSARTStartMEMtoMEM229:
;uarthandler.c, 309 :: 		DMA1_CPAR2 = ( unsigned long ) pcBufferOrigin;        // Direccion de periferico a rutear
0x1302	0x4B0A    LDR	R3, [PC, #40]
0x1304	0x6018    STR	R0, [R3, #0]
; pcBufferOrigin end address is: 0 (R0)
;uarthandler.c, 310 :: 		DMA1_CMAR2 = ( unsigned long ) pcBufferDestination;   // Direccion de la memoria a rutear
0x1306	0x4B0A    LDR	R3, [PC, #40]
0x1308	0x6019    STR	R1, [R3, #0]
; pcBufferDestination end address is: 4 (R1)
;uarthandler.c, 312 :: 		DMA1_CNDTR2 = ulSizeInBytes;           // Tamagno de datos a manejar (Header + Payload)
0x130A	0x4B0A    LDR	R3, [PC, #40]
0x130C	0x601A    STR	R2, [R3, #0]
; ulSizeInBytes end address is: 8 (R2)
;uarthandler.c, 313 :: 		DMA1_CCR2bits.EN = 1;
0x130E	0x2401    MOVS	R4, #1
0x1310	0xB264    SXTB	R4, R4
0x1312	0x4B05    LDR	R3, [PC, #20]
0x1314	0x601C    STR	R4, [R3, #0]
;uarthandler.c, 314 :: 		while ( DMA1_CCR2bits.EN );
L_vUSARTStartMEMtoMEM230:
0x1316	0x4B04    LDR	R3, [PC, #16]
0x1318	0x681B    LDR	R3, [R3, #0]
0x131A	0xB103    CBZ	R3, L_vUSARTStartMEMtoMEM231
0x131C	0xE7FB    B	L_vUSARTStartMEMtoMEM230
L_vUSARTStartMEMtoMEM231:
;uarthandler.c, 315 :: 		return 1;                              // indica que transmitio
0x131E	0x2001    MOVS	R0, #1
0x1320	0xE000    B	L_end_vUSARTStartMEMtoMEM
;uarthandler.c, 316 :: 		}
L_vUSARTStartMEMtoMEM227:
;uarthandler.c, 317 :: 		return 0;                                 // indica que NO transmitio
0x1322	0x2000    MOVS	R0, #0
;uarthandler.c, 338 :: 		}
L_end_vUSARTStartMEMtoMEM:
0x1324	0xB001    ADD	SP, SP, #4
0x1326	0x4770    BX	LR
0x1328	0x03804240  	DMA1_CCR2bits+0
0x132C	0x00244002  	DMA1_CPAR2+0
0x1330	0x00284002  	DMA1_CMAR2+0
0x1334	0x00204002  	DMA1_CNDTR2+0
; end of _vUSARTStartMEMtoMEM
_vRF4463MainCommandProcessor:
;DriverRF4463PROMain.c, 135 :: 		void vRF4463MainCommandProcessor ( unsigned char *ucBuffer ) {
; ucBuffer start address is: 0 (R0)
0x1338	0xB09A    SUB	SP, SP, #104
0x133A	0xF8CDE000  STR	LR, [SP, #0]
0x133E	0x4605    MOV	R5, R0
; ucBuffer end address is: 0 (R0)
; ucBuffer start address is: 20 (R5)
;DriverRF4463PROMain.c, 136 :: 		unsigned char ucCommand [ 32 ] = { 0x00 };
0x1340	0xF10D0B04  ADD	R11, SP, #4
0x1344	0xF10B0A60  ADD	R10, R11, #96
0x1348	0xF8DFC270  LDR	R12, [PC, #624]
0x134C	0xF001FA5C  BL	___CC2DW+0
;DriverRF4463PROMain.c, 137 :: 		unsigned long ulArgument = 0;
;DriverRF4463PROMain.c, 138 :: 		unsigned char ucLongArgument[ 64 ] = { 0x00 };     // Espera argumentos de hasta 11 bytes
;DriverRF4463PROMain.c, 139 :: 		unsigned char ucCounterBuffer = 0;
; ucCounterBuffer start address is: 12 (R3)
0x1350	0x2300    MOVS	R3, #0
;DriverRF4463PROMain.c, 140 :: 		unsigned char ucCounterCommand = 0;
; ucCounterCommand start address is: 16 (R4)
0x1352	0x2400    MOVS	R4, #0
;DriverRF4463PROMain.c, 141 :: 		unsigned char ucCounterLongArgument = 0;
; ucCounterLongArgument start address is: 8 (R2)
0x1354	0x2200    MOVS	R2, #0
;DriverRF4463PROMain.c, 144 :: 		if ( ucBuffer[ 0 ] > '@' && ucBuffer[ 0 ] <= 'z' ) {
0x1356	0x7829    LDRB	R1, [R5, #0]
0x1358	0x2940    CMP	R1, #64
0x135A	0xD92D    BLS	L__vRF4463MainCommandProcessor490
0x135C	0x7829    LDRB	R1, [R5, #0]
0x135E	0x297A    CMP	R1, #122
0x1360	0xD82B    BHI	L__vRF4463MainCommandProcessor491
L__vRF4463MainCommandProcessor456:
;DriverRF4463PROMain.c, 146 :: 		while ( ucBuffer[ ucCounterBuffer ] != '|' && ucCounterCommand < 32 ) {      // primer token
; ucCounterCommand end address is: 16 (R4)
; ucCounterBuffer end address is: 12 (R3)
; ucBuffer end address is: 20 (R5)
L_vRF4463MainCommandProcessor252:
; ucCounterLongArgument end address is: 8 (R2)
; ucCounterLongArgument start address is: 8 (R2)
; ucCounterCommand start address is: 16 (R4)
; ucCounterBuffer start address is: 12 (R3)
; ucBuffer start address is: 20 (R5)
0x1362	0x18E9    ADDS	R1, R5, R3
0x1364	0x7809    LDRB	R1, [R1, #0]
0x1366	0x297C    CMP	R1, #124
0x1368	0xD010    BEQ	L__vRF4463MainCommandProcessor458
0x136A	0x2C20    CMP	R4, #32
0x136C	0xD20E    BCS	L__vRF4463MainCommandProcessor457
L__vRF4463MainCommandProcessor455:
;DriverRF4463PROMain.c, 147 :: 		ucCommand[ ucCounterCommand++ ] = toupper( ucBuffer[ ucCounterBuffer++ ] );
0x136E	0xA901    ADD	R1, SP, #4
0x1370	0x1909    ADDS	R1, R1, R4
0x1372	0x9119    STR	R1, [SP, #100]
0x1374	0x18E9    ADDS	R1, R5, R3
0x1376	0x7809    LDRB	R1, [R1, #0]
0x1378	0xB2C8    UXTB	R0, R1
0x137A	0xF7FFFC0D  BL	_toupper+0
0x137E	0x9919    LDR	R1, [SP, #100]
0x1380	0x7008    STRB	R0, [R1, #0]
0x1382	0x1C64    ADDS	R4, R4, #1
0x1384	0xB2E4    UXTB	R4, R4
0x1386	0x1C5B    ADDS	R3, R3, #1
0x1388	0xB2DB    UXTB	R3, R3
;DriverRF4463PROMain.c, 148 :: 		}
; ucCounterCommand end address is: 16 (R4)
0x138A	0xE7EA    B	L_vRF4463MainCommandProcessor252
;DriverRF4463PROMain.c, 146 :: 		while ( ucBuffer[ ucCounterBuffer ] != '|' && ucCounterCommand < 32 ) {      // primer token
L__vRF4463MainCommandProcessor458:
L__vRF4463MainCommandProcessor457:
;DriverRF4463PROMain.c, 150 :: 		ucCounterBuffer++;                                                           // evita el Token
0x138C	0x1C5C    ADDS	R4, R3, #1
0x138E	0xB2E4    UXTB	R4, R4
; ucCounterBuffer end address is: 12 (R3)
; ucCounterBuffer start address is: 16 (R4)
; ucCounterLongArgument end address is: 8 (R2)
; ucCounterBuffer end address is: 16 (R4)
; ucBuffer end address is: 20 (R5)
0x1390	0xB2D3    UXTB	R3, R2
0x1392	0x4628    MOV	R0, R5
;DriverRF4463PROMain.c, 152 :: 		while ( ucBuffer[ ucCounterBuffer ] != CHR_CR && ucCounterLongArgument < 64 ) {   // segundo token
L_vRF4463MainCommandProcessor256:
; ucCounterBuffer start address is: 16 (R4)
; ucBuffer start address is: 0 (R0)
; ucCounterLongArgument start address is: 12 (R3)
0x1394	0x1901    ADDS	R1, R0, R4
0x1396	0x7809    LDRB	R1, [R1, #0]
0x1398	0x290D    CMP	R1, #13
0x139A	0xD00B    BEQ	L__vRF4463MainCommandProcessor460
0x139C	0x2B40    CMP	R3, #64
0x139E	0xD209    BCS	L__vRF4463MainCommandProcessor459
L__vRF4463MainCommandProcessor454:
;DriverRF4463PROMain.c, 153 :: 		ucLongArgument[ ucCounterLongArgument ] = ucBuffer[ ucCounterBuffer ] ;   //  toupper(
0x13A0	0xA909    ADD	R1, SP, #36
0x13A2	0x18CA    ADDS	R2, R1, R3
0x13A4	0x1901    ADDS	R1, R0, R4
0x13A6	0x7809    LDRB	R1, [R1, #0]
0x13A8	0x7011    STRB	R1, [R2, #0]
;DriverRF4463PROMain.c, 154 :: 		ucCounterBuffer++;
0x13AA	0x1C64    ADDS	R4, R4, #1
0x13AC	0xB2E4    UXTB	R4, R4
;DriverRF4463PROMain.c, 155 :: 		ucCounterLongArgument++;
0x13AE	0x1C5B    ADDS	R3, R3, #1
0x13B0	0xB2DB    UXTB	R3, R3
;DriverRF4463PROMain.c, 156 :: 		}
; ucCounterBuffer end address is: 16 (R4)
; ucCounterLongArgument end address is: 12 (R3)
0x13B2	0xE7EF    B	L_vRF4463MainCommandProcessor256
;DriverRF4463PROMain.c, 152 :: 		while ( ucBuffer[ ucCounterBuffer ] != CHR_CR && ucCounterLongArgument < 64 ) {   // segundo token
L__vRF4463MainCommandProcessor460:
L__vRF4463MainCommandProcessor459:
;DriverRF4463PROMain.c, 144 :: 		if ( ucBuffer[ 0 ] > '@' && ucBuffer[ 0 ] <= 'z' ) {
0x13B4	0x4605    MOV	R5, R0
0x13B6	0xE7FF    B	L__vRF4463MainCommandProcessor462
; ucBuffer end address is: 0 (R0)
L__vRF4463MainCommandProcessor490:
L__vRF4463MainCommandProcessor462:
; ucBuffer start address is: 20 (R5)
; ucBuffer end address is: 20 (R5)
0x13B8	0xE7FF    B	L__vRF4463MainCommandProcessor461
L__vRF4463MainCommandProcessor491:
L__vRF4463MainCommandProcessor461:
;DriverRF4463PROMain.c, 161 :: 		if ( memcmp( CMD_RADIO_POWER_SET, ucCommand, sizeof( CMD_RADIO_POWER_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x13BA	0xA901    ADD	R1, SP, #4
0x13BC	0x220A    MOVS	R2, #10
0x13BE	0xB212    SXTH	R2, R2
0x13C0	0x487F    LDR	R0, [PC, #508]
0x13C2	0xF7FFFBCF  BL	_memcmp+0
0x13C6	0xB9E0    CBNZ	R0, L_vRF4463MainCommandProcessor260
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 162 :: 		ulArgument = StrToShort( ucLongArgument );
0x13C8	0xA909    ADD	R1, SP, #36
0x13CA	0x4608    MOV	R0, R1
0x13CC	0xF7FFFA14  BL	_StrToShort+0
; ulArgument start address is: 0 (R0)
;DriverRF4463PROMain.c, 164 :: 		if ( ulArgument > 0 && ulArgument <= 127 ) {
0x13D0	0x2800    CMP	R0, #0
0x13D2	0xD90D    BLS	L__vRF4463MainCommandProcessor464
0x13D4	0x287F    CMP	R0, #127
0x13D6	0xD80B    BHI	L__vRF4463MainCommandProcessor463
L__vRF4463MainCommandProcessor453:
;DriverRF4463PROMain.c, 165 :: 		ucRF4463Power = ulArgument;
0x13D8	0x497A    LDR	R1, [PC, #488]
0x13DA	0x7008    STRB	R0, [R1, #0]
; ulArgument end address is: 0 (R0)
;DriverRF4463PROMain.c, 166 :: 		vRF4463MainApplyChanges();
0x13DC	0xF7FFF9FE  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 167 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x13E0	0x4879    LDR	R0, [PC, #484]
0x13E2	0xF7FEFFFD  BL	_strlen+0
0x13E6	0xB201    SXTH	R1, R0
0x13E8	0x4877    LDR	R0, [PC, #476]
0x13EA	0xF001FA4B  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 168 :: 		}
0x13EE	0xE006    B	L_vRF4463MainCommandProcessor264
;DriverRF4463PROMain.c, 164 :: 		if ( ulArgument > 0 && ulArgument <= 127 ) {
L__vRF4463MainCommandProcessor464:
L__vRF4463MainCommandProcessor463:
;DriverRF4463PROMain.c, 170 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x13F0	0x4876    LDR	R0, [PC, #472]
0x13F2	0xF7FEFFF5  BL	_strlen+0
0x13F6	0xB201    SXTH	R1, R0
0x13F8	0x4874    LDR	R0, [PC, #464]
0x13FA	0xF001FA43  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 171 :: 		}
L_vRF4463MainCommandProcessor264:
;DriverRF4463PROMain.c, 172 :: 		}
0x13FE	0xF000BBF5  B	L_vRF4463MainCommandProcessor265
L_vRF4463MainCommandProcessor260:
;DriverRF4463PROMain.c, 176 :: 		else if ( memcmp( CMD_RADIO_BAND_SET, ucCommand, sizeof( CMD_RADIO_BAND_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x1402	0xA901    ADD	R1, SP, #4
0x1404	0x2209    MOVS	R2, #9
0x1406	0xB212    SXTH	R2, R2
0x1408	0x4871    LDR	R0, [PC, #452]
0x140A	0xF7FFFBAB  BL	_memcmp+0
0x140E	0x2800    CMP	R0, #0
0x1410	0xD134    BNE	L_vRF4463MainCommandProcessor266
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 177 :: 		ulArgument = StrToInt( ucLongArgument );
0x1412	0xA909    ADD	R1, SP, #36
0x1414	0x4608    MOV	R0, R1
0x1416	0xF7FFFAD7  BL	_StrToInt+0
; ulArgument start address is: 0 (R0)
;DriverRF4463PROMain.c, 179 :: 		if ( ulArgument == 433 || ulArgument == 868 || ulArgument == 915 ) {
0x141A	0xF24011B1  MOVW	R1, #433
0x141E	0x4288    CMP	R0, R1
0x1420	0xD007    BEQ	L__vRF4463MainCommandProcessor467
0x1422	0xF5B07F59  CMP	R0, #868
0x1426	0xD004    BEQ	L__vRF4463MainCommandProcessor466
0x1428	0xF2403193  MOVW	R1, #915
0x142C	0x4288    CMP	R0, R1
0x142E	0xD000    BEQ	L__vRF4463MainCommandProcessor465
; ulArgument end address is: 0 (R0)
0x1430	0xE01B    B	L_vRF4463MainCommandProcessor269
L__vRF4463MainCommandProcessor467:
L__vRF4463MainCommandProcessor466:
L__vRF4463MainCommandProcessor465:
;DriverRF4463PROMain.c, 180 :: 		ucRF4463Freq3 = ucLongArgument[ 0 ] - 48;
0x1432	0xAB09    ADD	R3, SP, #36
0x1434	0x7819    LDRB	R1, [R3, #0]
0x1436	0xF2A10230  SUBW	R2, R1, #48
0x143A	0x4966    LDR	R1, [PC, #408]
0x143C	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 181 :: 		ucRF4463Freq2 = ucLongArgument[ 1 ] - 48;
0x143E	0x1C59    ADDS	R1, R3, #1
0x1440	0x7809    LDRB	R1, [R1, #0]
0x1442	0xF2A10230  SUBW	R2, R1, #48
0x1446	0x4964    LDR	R1, [PC, #400]
0x1448	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 182 :: 		ucRF4463Freq1 = ucLongArgument[ 2 ] - 48;
0x144A	0x1C99    ADDS	R1, R3, #2
0x144C	0x7809    LDRB	R1, [R1, #0]
0x144E	0xF2A10230  SUBW	R2, R1, #48
0x1452	0x4962    LDR	R1, [PC, #392]
0x1454	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 183 :: 		vRF4463MainApplyChanges();
0x1456	0xF7FFF9C1  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 184 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x145A	0x485B    LDR	R0, [PC, #364]
0x145C	0xF7FEFFC0  BL	_strlen+0
0x1460	0xB201    SXTH	R1, R0
0x1462	0x4859    LDR	R0, [PC, #356]
0x1464	0xF001FA0E  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 185 :: 		}
0x1468	0xE006    B	L_vRF4463MainCommandProcessor270
L_vRF4463MainCommandProcessor269:
;DriverRF4463PROMain.c, 187 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x146A	0x4858    LDR	R0, [PC, #352]
0x146C	0xF7FEFFB8  BL	_strlen+0
0x1470	0xB201    SXTH	R1, R0
0x1472	0x4856    LDR	R0, [PC, #344]
0x1474	0xF001FA06  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 188 :: 		}
L_vRF4463MainCommandProcessor270:
;DriverRF4463PROMain.c, 189 :: 		}
0x1478	0xF000BBB8  B	L_vRF4463MainCommandProcessor271
L_vRF4463MainCommandProcessor266:
;DriverRF4463PROMain.c, 193 :: 		else if ( memcmp( CMD_RADIO_RATE_SET, ucCommand, sizeof( CMD_RADIO_RATE_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x147C	0xA901    ADD	R1, SP, #4
0x147E	0x2209    MOVS	R2, #9
0x1480	0xB212    SXTH	R2, R2
0x1482	0x4857    LDR	R0, [PC, #348]
0x1484	0xF7FFFB6E  BL	_memcmp+0
0x1488	0x2800    CMP	R0, #0
0x148A	0xF0408104  BNE	L_vRF4463MainCommandProcessor272
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 194 :: 		ulArgument = StrToLong( ucLongArgument );
0x148E	0xA909    ADD	R1, SP, #36
0x1490	0x4608    MOV	R0, R1
0x1492	0xF7FFFA3F  BL	_StrToLong+0
; ulArgument start address is: 0 (R0)
;DriverRF4463PROMain.c, 196 :: 		switch ( ulArgument ) {
0x1496	0xE0D1    B	L_vRF4463MainCommandProcessor273
; ulArgument end address is: 0 (R0)
;DriverRF4463PROMain.c, 197 :: 		case 500      : ucRF4463Rate = dr_500;
L_vRF4463MainCommandProcessor275:
0x1498	0x220A    MOVS	R2, #10
0x149A	0x4952    LDR	R1, [PC, #328]
0x149C	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 198 :: 		defineTime = 1;
0x149E	0x2201    MOVS	R2, #1
0x14A0	0x4951    LDR	R1, [PC, #324]
0x14A2	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 199 :: 		vRF4463MainApplyChanges();
0x14A4	0xF7FFF99A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 200 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x14A8	0x4847    LDR	R0, [PC, #284]
0x14AA	0xF7FEFF99  BL	_strlen+0
0x14AE	0xB201    SXTH	R1, R0
0x14B0	0x4845    LDR	R0, [PC, #276]
0x14B2	0xF001F9E7  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 201 :: 		break;
0x14B6	0xE0EC    B	L_vRF4463MainCommandProcessor274
;DriverRF4463PROMain.c, 202 :: 		case 1200     : ucRF4463Rate = dr_1p2;
L_vRF4463MainCommandProcessor276:
0x14B8	0x2200    MOVS	R2, #0
0x14BA	0x494A    LDR	R1, [PC, #296]
0x14BC	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 203 :: 		defineTime = 1;
0x14BE	0x2201    MOVS	R2, #1
0x14C0	0x4949    LDR	R1, [PC, #292]
0x14C2	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 204 :: 		vRF4463MainApplyChanges();
0x14C4	0xF7FFF98A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 205 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x14C8	0x483F    LDR	R0, [PC, #252]
0x14CA	0xF7FEFF89  BL	_strlen+0
0x14CE	0xB201    SXTH	R1, R0
0x14D0	0x483D    LDR	R0, [PC, #244]
0x14D2	0xF001F9D7  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 206 :: 		break;
0x14D6	0xE0DC    B	L_vRF4463MainCommandProcessor274
;DriverRF4463PROMain.c, 207 :: 		case 2400     : ucRF4463Rate = dr_2p4;
L_vRF4463MainCommandProcessor277:
0x14D8	0x2201    MOVS	R2, #1
0x14DA	0x4942    LDR	R1, [PC, #264]
0x14DC	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 208 :: 		defineTime = 2;
0x14DE	0x2202    MOVS	R2, #2
0x14E0	0x4941    LDR	R1, [PC, #260]
0x14E2	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 209 :: 		vRF4463MainApplyChanges();
0x14E4	0xF7FFF97A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 210 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x14E8	0x4837    LDR	R0, [PC, #220]
0x14EA	0xF7FEFF79  BL	_strlen+0
0x14EE	0xB201    SXTH	R1, R0
0x14F0	0x4835    LDR	R0, [PC, #212]
0x14F2	0xF001F9C7  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 211 :: 		break;
0x14F6	0xE0CC    B	L_vRF4463MainCommandProcessor274
;DriverRF4463PROMain.c, 212 :: 		case 4800     : ucRF4463Rate = dr_4p8;
L_vRF4463MainCommandProcessor278:
0x14F8	0x2202    MOVS	R2, #2
0x14FA	0x493A    LDR	R1, [PC, #232]
0x14FC	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 213 :: 		defineTime = 3;
0x14FE	0x2203    MOVS	R2, #3
0x1500	0x4939    LDR	R1, [PC, #228]
0x1502	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 214 :: 		vRF4463MainApplyChanges();
0x1504	0xF7FFF96A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 215 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1508	0x482F    LDR	R0, [PC, #188]
0x150A	0xF7FEFF69  BL	_strlen+0
0x150E	0xB201    SXTH	R1, R0
0x1510	0x482D    LDR	R0, [PC, #180]
0x1512	0xF001F9B7  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 216 :: 		break;
0x1516	0xE0BC    B	L_vRF4463MainCommandProcessor274
;DriverRF4463PROMain.c, 217 :: 		case 9600     : ucRF4463Rate = dr_9p6;
L_vRF4463MainCommandProcessor279:
0x1518	0x2203    MOVS	R2, #3
0x151A	0x4932    LDR	R1, [PC, #200]
0x151C	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 218 :: 		defineTime = 4;
0x151E	0x2204    MOVS	R2, #4
0x1520	0x4931    LDR	R1, [PC, #196]
0x1522	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 219 :: 		vRF4463MainApplyChanges();
0x1524	0xF7FFF95A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 220 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1528	0x4827    LDR	R0, [PC, #156]
0x152A	0xF7FEFF59  BL	_strlen+0
0x152E	0xB201    SXTH	R1, R0
0x1530	0x4825    LDR	R0, [PC, #148]
0x1532	0xF001F9A7  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 221 :: 		break;
0x1536	0xE0AC    B	L_vRF4463MainCommandProcessor274
;DriverRF4463PROMain.c, 222 :: 		case 19200    : ucRF4463Rate = dr_19p2;
L_vRF4463MainCommandProcessor280:
0x1538	0x2204    MOVS	R2, #4
0x153A	0x492A    LDR	R1, [PC, #168]
0x153C	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 223 :: 		defineTime = 5;
0x153E	0x2205    MOVS	R2, #5
0x1540	0x4929    LDR	R1, [PC, #164]
0x1542	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 224 :: 		vRF4463MainApplyChanges();
0x1544	0xF7FFF94A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 225 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1548	0x481F    LDR	R0, [PC, #124]
0x154A	0xF7FEFF49  BL	_strlen+0
0x154E	0xB201    SXTH	R1, R0
0x1550	0x481D    LDR	R0, [PC, #116]
0x1552	0xF001F997  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 226 :: 		break;
0x1556	0xE09C    B	L_vRF4463MainCommandProcessor274
;DriverRF4463PROMain.c, 227 :: 		case 38400    : ucRF4463Rate = dr_38p4;
L_vRF4463MainCommandProcessor281:
0x1558	0x2205    MOVS	R2, #5
0x155A	0x4922    LDR	R1, [PC, #136]
0x155C	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 228 :: 		defineTime = 6;
0x155E	0x2206    MOVS	R2, #6
0x1560	0x4921    LDR	R1, [PC, #132]
0x1562	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 229 :: 		vRF4463MainApplyChanges();
0x1564	0xF7FFF93A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 230 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1568	0x4817    LDR	R0, [PC, #92]
0x156A	0xF7FEFF39  BL	_strlen+0
0x156E	0xB201    SXTH	R1, R0
0x1570	0x4815    LDR	R0, [PC, #84]
0x1572	0xF001F987  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 231 :: 		break;
0x1576	0xE08C    B	L_vRF4463MainCommandProcessor274
;DriverRF4463PROMain.c, 232 :: 		case 76800    : ucRF4463Rate = dr_76p8;
L_vRF4463MainCommandProcessor282:
0x1578	0x2206    MOVS	R2, #6
0x157A	0x491A    LDR	R1, [PC, #104]
0x157C	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 233 :: 		defineTime = 7;
0x157E	0x2207    MOVS	R2, #7
0x1580	0x4919    LDR	R1, [PC, #100]
0x1582	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 234 :: 		vRF4463MainApplyChanges();
0x1584	0xF7FFF92A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 235 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1588	0x480F    LDR	R0, [PC, #60]
0x158A	0xF7FEFF29  BL	_strlen+0
0x158E	0xB201    SXTH	R1, R0
0x1590	0x480D    LDR	R0, [PC, #52]
0x1592	0xF001F977  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 236 :: 		break;
0x1596	0xE07C    B	L_vRF4463MainCommandProcessor274
;DriverRF4463PROMain.c, 237 :: 		case 115200   : ucRF4463Rate = dr_115p2;
L_vRF4463MainCommandProcessor283:
0x1598	0x2207    MOVS	R2, #7
0x159A	0x4912    LDR	R1, [PC, #72]
0x159C	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 238 :: 		defineTime = 8;
0x159E	0x2208    MOVS	R2, #8
0x15A0	0x4911    LDR	R1, [PC, #68]
0x15A2	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 239 :: 		vRF4463MainApplyChanges();
0x15A4	0xF7FFF91A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 240 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x15A8	0x4807    LDR	R0, [PC, #28]
0x15AA	0xF7FEFF19  BL	_strlen+0
0x15AE	0xB201    SXTH	R1, R0
0x15B0	0x4805    LDR	R0, [PC, #20]
0x15B2	0xF001F967  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 241 :: 		break;
0x15B6	0xE06C    B	L_vRF4463MainCommandProcessor274
0x15B8	0xF000B818  B	#48
0x15BC	0x64C40000  	?ICSvRF4463MainCommandProcessor_ucCommand_L0+0
0x15C0	0x20A82000  	_CMD_RADIO_POWER_SET+0
0x15C4	0x22AB2000  	_ucRF4463Power+0
0x15C8	0x20B22000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x15CC	0x20DA2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x15D0	0x20FA2000  	_CMD_RADIO_BAND_SET+0
0x15D4	0x22A92000  	_ucRF4463Freq3+0
0x15D8	0x22AC2000  	_ucRF4463Freq2+0
0x15DC	0x22AD2000  	_ucRF4463Freq1+0
0x15E0	0x21032000  	_CMD_RADIO_RATE_SET+0
0x15E4	0x22A82000  	_ucRF4463Rate+0
0x15E8	0x210C2000  	_defineTime+0
;DriverRF4463PROMain.c, 242 :: 		case 256000   : ucRF4463Rate = dr_256k;
L_vRF4463MainCommandProcessor284:
0x15EC	0x2208    MOVS	R2, #8
0x15EE	0x499E    LDR	R1, [PC, #632]
0x15F0	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 243 :: 		defineTime = 8;
0x15F2	0x2208    MOVS	R2, #8
0x15F4	0x499D    LDR	R1, [PC, #628]
0x15F6	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 244 :: 		vRF4463MainApplyChanges();
0x15F8	0xF7FFF8F0  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 245 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x15FC	0x489C    LDR	R0, [PC, #624]
0x15FE	0xF7FEFEEF  BL	_strlen+0
0x1602	0xB201    SXTH	R1, R0
0x1604	0x489A    LDR	R0, [PC, #616]
0x1606	0xF001F93D  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 246 :: 		break;
0x160A	0xE042    B	L_vRF4463MainCommandProcessor274
;DriverRF4463PROMain.c, 247 :: 		case 500000   : ucRF4463Rate = dr_500k;
L_vRF4463MainCommandProcessor285:
0x160C	0x2209    MOVS	R2, #9
0x160E	0x4996    LDR	R1, [PC, #600]
0x1610	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 248 :: 		defineTime = 8;
0x1612	0x2208    MOVS	R2, #8
0x1614	0x4995    LDR	R1, [PC, #596]
0x1616	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 249 :: 		vRF4463MainApplyChanges();
0x1618	0xF7FFF8E0  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 250 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x161C	0x4894    LDR	R0, [PC, #592]
0x161E	0xF7FEFEDF  BL	_strlen+0
0x1622	0xB201    SXTH	R1, R0
0x1624	0x4892    LDR	R0, [PC, #584]
0x1626	0xF001F92D  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 251 :: 		break;
0x162A	0xE032    B	L_vRF4463MainCommandProcessor274
;DriverRF4463PROMain.c, 252 :: 		default       : vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
L_vRF4463MainCommandProcessor286:
0x162C	0x4891    LDR	R0, [PC, #580]
0x162E	0xF7FEFED7  BL	_strlen+0
0x1632	0xB201    SXTH	R1, R0
0x1634	0x488F    LDR	R0, [PC, #572]
0x1636	0xF001F925  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 253 :: 		}
0x163A	0xE02A    B	L_vRF4463MainCommandProcessor274
L_vRF4463MainCommandProcessor273:
; ulArgument start address is: 0 (R0)
0x163C	0xF5B07FFA  CMP	R0, #500
0x1640	0xF43FAF2A  BEQ	L_vRF4463MainCommandProcessor275
0x1644	0xF5B06F96  CMP	R0, #1200
0x1648	0xF43FAF36  BEQ	L_vRF4463MainCommandProcessor276
0x164C	0xF5B06F16  CMP	R0, #2400
0x1650	0xF43FAF42  BEQ	L_vRF4463MainCommandProcessor277
0x1654	0xF5B05F96  CMP	R0, #4800
0x1658	0xF43FAF4E  BEQ	L_vRF4463MainCommandProcessor278
0x165C	0xF5B05F16  CMP	R0, #9600
0x1660	0xF43FAF5A  BEQ	L_vRF4463MainCommandProcessor279
0x1664	0xF5B04F96  CMP	R0, #19200
0x1668	0xF43FAF66  BEQ	L_vRF4463MainCommandProcessor280
0x166C	0xF5B04F16  CMP	R0, #38400
0x1670	0xF43FAF72  BEQ	L_vRF4463MainCommandProcessor281
0x1674	0xF5B03F96  CMP	R0, #76800
0x1678	0xF43FAF7E  BEQ	L_vRF4463MainCommandProcessor282
0x167C	0xF5B03FE1  CMP	R0, #115200
0x1680	0xF43FAF8A  BEQ	L_vRF4463MainCommandProcessor283
0x1684	0xF5B03F7A  CMP	R0, #256000
0x1688	0xD0B0    BEQ	L_vRF4463MainCommandProcessor284
0x168A	0x497B    LDR	R1, [PC, #492]
0x168C	0x4288    CMP	R0, R1
0x168E	0xD0BD    BEQ	L_vRF4463MainCommandProcessor285
; ulArgument end address is: 0 (R0)
0x1690	0xE7CC    B	L_vRF4463MainCommandProcessor286
L_vRF4463MainCommandProcessor274:
;DriverRF4463PROMain.c, 254 :: 		}
0x1692	0xF000BAAB  B	L_vRF4463MainCommandProcessor287
L_vRF4463MainCommandProcessor272:
;DriverRF4463PROMain.c, 258 :: 		else if ( memcmp( CMD_RADIO_CHANNEL_SET, ucCommand, sizeof( CMD_RADIO_CHANNEL_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x1696	0xA901    ADD	R1, SP, #4
0x1698	0x220C    MOVS	R2, #12
0x169A	0xB212    SXTH	R2, R2
0x169C	0x4877    LDR	R0, [PC, #476]
0x169E	0xF7FFFA61  BL	_memcmp+0
0x16A2	0xB9D8    CBNZ	R0, L_vRF4463MainCommandProcessor288
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 259 :: 		ulArgument = StrToInt( ucLongArgument );
0x16A4	0xA909    ADD	R1, SP, #36
0x16A6	0x4608    MOV	R0, R1
0x16A8	0xF7FFF98E  BL	_StrToInt+0
; ulArgument start address is: 0 (R0)
;DriverRF4463PROMain.c, 261 :: 		if ( ulArgument >= 0 && ulArgument <= 50 ) {
0x16AC	0x2800    CMP	R0, #0
0x16AE	0xD30D    BCC	L__vRF4463MainCommandProcessor469
0x16B0	0x2832    CMP	R0, #50
0x16B2	0xD80B    BHI	L__vRF4463MainCommandProcessor468
L__vRF4463MainCommandProcessor451:
;DriverRF4463PROMain.c, 262 :: 		ucRF4463FreqChannel = ulArgument;    // Se aplica al ejecutar funciones de TX o RX
0x16B4	0x4972    LDR	R1, [PC, #456]
0x16B6	0x7008    STRB	R0, [R1, #0]
; ulArgument end address is: 0 (R0)
;DriverRF4463PROMain.c, 263 :: 		vRF4463MainApplyChanges();
0x16B8	0xF7FFF890  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 264 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x16BC	0x486C    LDR	R0, [PC, #432]
0x16BE	0xF7FEFE8F  BL	_strlen+0
0x16C2	0xB201    SXTH	R1, R0
0x16C4	0x486A    LDR	R0, [PC, #424]
0x16C6	0xF001F8DD  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 265 :: 		}
0x16CA	0xE006    B	L_vRF4463MainCommandProcessor292
;DriverRF4463PROMain.c, 261 :: 		if ( ulArgument >= 0 && ulArgument <= 50 ) {
L__vRF4463MainCommandProcessor469:
L__vRF4463MainCommandProcessor468:
;DriverRF4463PROMain.c, 267 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x16CC	0x4869    LDR	R0, [PC, #420]
0x16CE	0xF7FEFE87  BL	_strlen+0
0x16D2	0xB201    SXTH	R1, R0
0x16D4	0x4867    LDR	R0, [PC, #412]
0x16D6	0xF001F8D5  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 268 :: 		}
L_vRF4463MainCommandProcessor292:
;DriverRF4463PROMain.c, 269 :: 		}
0x16DA	0xE287    B	L_vRF4463MainCommandProcessor293
L_vRF4463MainCommandProcessor288:
;DriverRF4463PROMain.c, 273 :: 		else if ( memcmp( CMD_RADIO_BW_SET, ucCommand, sizeof( CMD_RADIO_BW_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x16DC	0xA901    ADD	R1, SP, #4
0x16DE	0x2207    MOVS	R2, #7
0x16E0	0xB212    SXTH	R2, R2
0x16E2	0x4868    LDR	R0, [PC, #416]
0x16E4	0xF7FFFA3E  BL	_memcmp+0
0x16E8	0xBB08    CBNZ	R0, L_vRF4463MainCommandProcessor294
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 274 :: 		ulArgument = StrToInt( ucLongArgument );
0x16EA	0xA909    ADD	R1, SP, #36
0x16EC	0x4608    MOV	R0, R1
0x16EE	0xF7FFF96B  BL	_StrToInt+0
; ulArgument start address is: 40 (R10)
0x16F2	0xFA0FFA80  SXTH	R10, R0
;DriverRF4463PROMain.c, 276 :: 		if ( ulArgument == 250 || ulArgument == 500 ) {
0x16F6	0xF1BA0FFA  CMP	R10, #250
0x16FA	0xD003    BEQ	L__vRF4463MainCommandProcessor471
0x16FC	0xF5BA7FFA  CMP	R10, #500
0x1700	0xD000    BEQ	L__vRF4463MainCommandProcessor470
; ulArgument end address is: 40 (R10)
0x1702	0xE00C    B	L_vRF4463MainCommandProcessor297
L__vRF4463MainCommandProcessor471:
; ulArgument start address is: 40 (R10)
L__vRF4463MainCommandProcessor470:
;DriverRF4463PROMain.c, 277 :: 		ulRF4463Step = ulArgument;
0x1704	0x4960    LDR	R1, [PC, #384]
0x1706	0xF8C1A000  STR	R10, [R1, #0]
; ulArgument end address is: 40 (R10)
;DriverRF4463PROMain.c, 278 :: 		vRF4463MainApplyChanges();
0x170A	0xF7FFF867  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 279 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x170E	0x4858    LDR	R0, [PC, #352]
0x1710	0xF7FEFE66  BL	_strlen+0
0x1714	0xB201    SXTH	R1, R0
0x1716	0x4856    LDR	R0, [PC, #344]
0x1718	0xF001F8B4  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 280 :: 		}
0x171C	0xE006    B	L_vRF4463MainCommandProcessor298
L_vRF4463MainCommandProcessor297:
;DriverRF4463PROMain.c, 282 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x171E	0x4855    LDR	R0, [PC, #340]
0x1720	0xF7FEFE5E  BL	_strlen+0
0x1724	0xB201    SXTH	R1, R0
0x1726	0x4853    LDR	R0, [PC, #332]
0x1728	0xF001F8AC  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 283 :: 		}
L_vRF4463MainCommandProcessor298:
;DriverRF4463PROMain.c, 284 :: 		}
0x172C	0xE25E    B	L_vRF4463MainCommandProcessor299
L_vRF4463MainCommandProcessor294:
;DriverRF4463PROMain.c, 291 :: 		else if ( memcmp( CMD_RADIO_MODE_SET, ucCommand, sizeof( CMD_RADIO_MODE_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x172E	0xA901    ADD	R1, SP, #4
0x1730	0x2209    MOVS	R2, #9
0x1732	0xB212    SXTH	R2, R2
0x1734	0x4855    LDR	R0, [PC, #340]
0x1736	0xF7FFFA15  BL	_memcmp+0
0x173A	0x2800    CMP	R0, #0
0x173C	0xF040807A  BNE	L_vRF4463MainCommandProcessor300
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 293 :: 		ucCounterCommand = 0;
; ucCounterCommand start address is: 12 (R3)
0x1740	0x2300    MOVS	R3, #0
; ucCounterCommand end address is: 12 (R3)
;DriverRF4463PROMain.c, 295 :: 		while ( ucLongArgument[ ucCounterCommand ] != ucUSARTNull && ucCounterCommand < 32 ) {
L_vRF4463MainCommandProcessor301:
; ucCounterCommand start address is: 12 (R3)
0x1742	0xA909    ADD	R1, SP, #36
0x1744	0x18C9    ADDS	R1, R1, R3
0x1746	0x780A    LDRB	R2, [R1, #0]
0x1748	0x4951    LDR	R1, [PC, #324]
0x174A	0x7809    LDRB	R1, [R1, #0]
0x174C	0x428A    CMP	R2, R1
0x174E	0xD00D    BEQ	L__vRF4463MainCommandProcessor473
0x1750	0x2B20    CMP	R3, #32
0x1752	0xD20B    BCS	L__vRF4463MainCommandProcessor472
L__vRF4463MainCommandProcessor449:
;DriverRF4463PROMain.c, 296 :: 		ucLongArgument[ ucCounterCommand ] = toupper( ucLongArgument[ ucCounterCommand ] );
0x1754	0xA909    ADD	R1, SP, #36
0x1756	0x18C9    ADDS	R1, R1, R3
0x1758	0x9119    STR	R1, [SP, #100]
0x175A	0x7809    LDRB	R1, [R1, #0]
0x175C	0xB2C8    UXTB	R0, R1
0x175E	0xF7FFFA1B  BL	_toupper+0
0x1762	0x9919    LDR	R1, [SP, #100]
0x1764	0x7008    STRB	R0, [R1, #0]
;DriverRF4463PROMain.c, 297 :: 		ucCounterCommand++;
0x1766	0x1C5B    ADDS	R3, R3, #1
0x1768	0xB2DB    UXTB	R3, R3
;DriverRF4463PROMain.c, 298 :: 		}
; ucCounterCommand end address is: 12 (R3)
0x176A	0xE7EA    B	L_vRF4463MainCommandProcessor301
;DriverRF4463PROMain.c, 295 :: 		while ( ucLongArgument[ ucCounterCommand ] != ucUSARTNull && ucCounterCommand < 32 ) {
L__vRF4463MainCommandProcessor473:
L__vRF4463MainCommandProcessor472:
;DriverRF4463PROMain.c, 301 :: 		if ( memcmp( ARG_RADIO_MODE_STBY, ucLongArgument, sizeof( ARG_RADIO_MODE_STBY ) ) == 0x00 ) {
0x176C	0xA909    ADD	R1, SP, #36
0x176E	0x2205    MOVS	R2, #5
0x1770	0xB212    SXTH	R2, R2
0x1772	0x4848    LDR	R0, [PC, #288]
0x1774	0xF7FFF9F6  BL	_memcmp+0
0x1778	0xB950    CBNZ	R0, L_vRF4463MainCommandProcessor305
;DriverRF4463PROMain.c, 302 :: 		ucRF4463Mode = rf_off;
0x177A	0x2204    MOVS	R2, #4
0x177C	0x4946    LDR	R1, [PC, #280]
0x177E	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 303 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_STBY, strlen( ANS_COMMAND_MODE_STBY ) );
0x1780	0x4846    LDR	R0, [PC, #280]
0x1782	0xF7FEFE2D  BL	_strlen+0
0x1786	0xB201    SXTH	R1, R0
0x1788	0x4844    LDR	R0, [PC, #272]
0x178A	0xF001F87B  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 304 :: 		}
0x178E	0xE050    B	L_vRF4463MainCommandProcessor306
L_vRF4463MainCommandProcessor305:
;DriverRF4463PROMain.c, 305 :: 		else if ( memcmp( ARG_RADIO_MODE_TX_CONT, ucLongArgument, sizeof( ARG_RADIO_MODE_TX_CONT ) ) == 0x00 ) {
0x1790	0xA909    ADD	R1, SP, #36
0x1792	0x2208    MOVS	R2, #8
0x1794	0xB212    SXTH	R2, R2
0x1796	0x4842    LDR	R0, [PC, #264]
0x1798	0xF7FFF9E4  BL	_memcmp+0
0x179C	0xB960    CBNZ	R0, L_vRF4463MainCommandProcessor307
;DriverRF4463PROMain.c, 306 :: 		ucRF4463Mode = tx_test_mode;
0x179E	0x2202    MOVS	R2, #2
0x17A0	0x493D    LDR	R1, [PC, #244]
0x17A2	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 307 :: 		vRF4463MainApplyChanges();
0x17A4	0xF7FFF81A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 308 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_TX_CONT, strlen( ANS_COMMAND_MODE_TX_CONT ) );
0x17A8	0x483E    LDR	R0, [PC, #248]
0x17AA	0xF7FEFE19  BL	_strlen+0
0x17AE	0xB201    SXTH	R1, R0
0x17B0	0x483C    LDR	R0, [PC, #240]
0x17B2	0xF001F867  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 309 :: 		}
0x17B6	0xE03C    B	L_vRF4463MainCommandProcessor308
L_vRF4463MainCommandProcessor307:
;DriverRF4463PROMain.c, 310 :: 		else if ( memcmp( ARG_RADIO_MODE_RX_CONT, ucLongArgument, sizeof( ARG_RADIO_MODE_RX_CONT ) ) == 0x00 ) {
0x17B8	0xA909    ADD	R1, SP, #36
0x17BA	0x2208    MOVS	R2, #8
0x17BC	0xB212    SXTH	R2, R2
0x17BE	0x483A    LDR	R0, [PC, #232]
0x17C0	0xF7FFF9D0  BL	_memcmp+0
0x17C4	0xB950    CBNZ	R0, L_vRF4463MainCommandProcessor309
;DriverRF4463PROMain.c, 311 :: 		ucRF4463Mode = rx_test_mode;
0x17C6	0x2203    MOVS	R2, #3
0x17C8	0x4933    LDR	R1, [PC, #204]
0x17CA	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 312 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_RX_CONT, strlen( ANS_COMMAND_MODE_RX_CONT ) );
0x17CC	0x4837    LDR	R0, [PC, #220]
0x17CE	0xF7FEFE07  BL	_strlen+0
0x17D2	0xB201    SXTH	R1, R0
0x17D4	0x4835    LDR	R0, [PC, #212]
0x17D6	0xF001F855  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 313 :: 		}
0x17DA	0xE02A    B	L_vRF4463MainCommandProcessor310
L_vRF4463MainCommandProcessor309:
;DriverRF4463PROMain.c, 314 :: 		else if ( memcmp( ARG_RADIO_MODE_TX_MASTER, ucLongArgument, sizeof( ARG_RADIO_MODE_TX_MASTER ) ) == 0x00 ) {
0x17DC	0xA909    ADD	R1, SP, #36
0x17DE	0x220A    MOVS	R2, #10
0x17E0	0xB212    SXTH	R2, R2
0x17E2	0x4833    LDR	R0, [PC, #204]
0x17E4	0xF7FFF9BE  BL	_memcmp+0
0x17E8	0xB950    CBNZ	R0, L_vRF4463MainCommandProcessor311
;DriverRF4463PROMain.c, 315 :: 		ucRF4463Mode = master_mode;
0x17EA	0x2200    MOVS	R2, #0
0x17EC	0x492A    LDR	R1, [PC, #168]
0x17EE	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 316 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_TX_MASTER, strlen( ANS_COMMAND_MODE_TX_MASTER ) );
0x17F0	0x4830    LDR	R0, [PC, #192]
0x17F2	0xF7FEFDF5  BL	_strlen+0
0x17F6	0xB201    SXTH	R1, R0
0x17F8	0x482E    LDR	R0, [PC, #184]
0x17FA	0xF001F843  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 317 :: 		}
0x17FE	0xE018    B	L_vRF4463MainCommandProcessor312
L_vRF4463MainCommandProcessor311:
;DriverRF4463PROMain.c, 318 :: 		else if ( memcmp( ARG_RADIO_MODE_RX_SLAVE, ucLongArgument, sizeof( ARG_RADIO_MODE_RX_SLAVE ) ) == 0x00 ) {
0x1800	0xA909    ADD	R1, SP, #36
0x1802	0x2209    MOVS	R2, #9
0x1804	0xB212    SXTH	R2, R2
0x1806	0x482C    LDR	R0, [PC, #176]
0x1808	0xF7FFF9AC  BL	_memcmp+0
0x180C	0xB950    CBNZ	R0, L_vRF4463MainCommandProcessor313
;DriverRF4463PROMain.c, 319 :: 		ucRF4463Mode = slave_mode;
0x180E	0x2201    MOVS	R2, #1
0x1810	0x4921    LDR	R1, [PC, #132]
0x1812	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 320 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_RX_SLAVE, strlen( ANS_COMMAND_MODE_RX_SLAVE ) );
0x1814	0x4829    LDR	R0, [PC, #164]
0x1816	0xF7FEFDE3  BL	_strlen+0
0x181A	0xB201    SXTH	R1, R0
0x181C	0x4827    LDR	R0, [PC, #156]
0x181E	0xF001F831  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 321 :: 		}
0x1822	0xE006    B	L_vRF4463MainCommandProcessor314
L_vRF4463MainCommandProcessor313:
;DriverRF4463PROMain.c, 323 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1824	0x4813    LDR	R0, [PC, #76]
0x1826	0xF7FEFDDB  BL	_strlen+0
0x182A	0xB201    SXTH	R1, R0
0x182C	0x4811    LDR	R0, [PC, #68]
0x182E	0xF001F829  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 324 :: 		}
L_vRF4463MainCommandProcessor314:
L_vRF4463MainCommandProcessor312:
L_vRF4463MainCommandProcessor310:
L_vRF4463MainCommandProcessor308:
L_vRF4463MainCommandProcessor306:
;DriverRF4463PROMain.c, 325 :: 		}
0x1832	0xE1DB    B	L_vRF4463MainCommandProcessor315
L_vRF4463MainCommandProcessor300:
;DriverRF4463PROMain.c, 330 :: 		else if ( memcmp( CMD_RADIO_PACKET_SEND, ucCommand, sizeof( CMD_RADIO_PACKET_SEND ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x1834	0xA901    ADD	R1, SP, #4
0x1836	0x220C    MOVS	R2, #12
0x1838	0xB212    SXTH	R2, R2
0x183A	0x4821    LDR	R0, [PC, #132]
0x183C	0xF7FFF992  BL	_memcmp+0
0x1840	0xB958    CBNZ	R0, L_vRF4463MainCommandProcessor316
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 334 :: 		ulArgument = StrToLong( ucLongArgument );
0x1842	0xA909    ADD	R1, SP, #36
0x1844	0x4608    MOV	R0, R1
0x1846	0xF7FFF865  BL	_StrToLong+0
;DriverRF4463PROMain.c, 336 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x184A	0x480A    LDR	R0, [PC, #40]
0x184C	0xF7FEFDC8  BL	_strlen+0
0x1850	0xB201    SXTH	R1, R0
0x1852	0x4808    LDR	R0, [PC, #32]
0x1854	0xF001F816  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 338 :: 		}
0x1858	0xE1C8    B	L_vRF4463MainCommandProcessor317
L_vRF4463MainCommandProcessor316:
;DriverRF4463PROMain.c, 343 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_1_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_1_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x185A	0xA901    ADD	R1, SP, #4
0x185C	0x220C    MOVS	R2, #12
0x185E	0xB212    SXTH	R2, R2
0x1860	0x4818    LDR	R0, [PC, #96]
0x1862	0xF7FFF97F  BL	_memcmp+0
0x1866	0xE02F    B	#94
0x1868	0x22A82000  	_ucRF4463Rate+0
0x186C	0x210C2000  	_defineTime+0
0x1870	0x20B22000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x1874	0x20DA2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x1878	0xA1200007  	#500000
0x187C	0x210D2000  	_CMD_RADIO_CHANNEL_SET+0
0x1880	0x21192000  	_ucRF4463FreqChannel+0
0x1884	0x211A2000  	_CMD_RADIO_BW_SET+0
0x1888	0x20A42000  	_ulRF4463Step+0
0x188C	0x21212000  	_CMD_RADIO_MODE_SET+0
0x1890	0x200C2000  	_ucUSARTNull+0
0x1894	0x212A2000  	_ARG_RADIO_MODE_STBY+0
0x1898	0x22AA2000  	_ucRF4463Mode+0
0x189C	0x212F2000  	_ANS_COMMAND_MODE_STBY+0
0x18A0	0x21512000  	_ARG_RADIO_MODE_TX_CONT+0
0x18A4	0x21592000  	_ANS_COMMAND_MODE_TX_CONT+0
0x18A8	0x217B2000  	_ARG_RADIO_MODE_RX_CONT+0
0x18AC	0x21832000  	_ANS_COMMAND_MODE_RX_CONT+0
0x18B0	0x21A52000  	_ARG_RADIO_MODE_TX_MASTER+0
0x18B4	0x21AF2000  	_ANS_COMMAND_MODE_TX_MASTER+0
0x18B8	0x21D32000  	_ARG_RADIO_MODE_RX_SLAVE+0
0x18BC	0x21DC2000  	_ANS_COMMAND_MODE_RX_SLAVE+0
0x18C0	0x21FF2000  	_CMD_RADIO_PACKET_SEND+0
0x18C4	0x220B2000  	_CMD_RADIO_MATCH_BYTE_1_SET+0
0x18C8	0xBB18    CBNZ	R0, L_vRF4463MainCommandProcessor318
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 344 :: 		ulArgument = StrToLong( ucLongArgument );
0x18CA	0xA909    ADD	R1, SP, #36
0x18CC	0x4608    MOV	R0, R1
0x18CE	0xF7FFF821  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x18D2	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 345 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x18D4	0x2800    CMP	R0, #0
0x18D6	0xD314    BCC	L__vRF4463MainCommandProcessor475
0x18D8	0xF1B20FFF  CMP	R2, #255
0x18DC	0xD811    BHI	L__vRF4463MainCommandProcessor474
L__vRF4463MainCommandProcessor448:
;DriverRF4463PROMain.c, 346 :: 		ucRF4463ByteMatch1 = ulArgument;
0x18DE	0x49A1    LDR	R1, [PC, #644]
0x18E0	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 347 :: 		ucRF4463MatchEnabled = 1;
0x18E2	0x2201    MOVS	R2, #1
0x18E4	0x49A0    LDR	R1, [PC, #640]
0x18E6	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 348 :: 		ucRF4463MatchEnableReg = 0x40;
0x18E8	0x2240    MOVS	R2, #64
0x18EA	0x49A0    LDR	R1, [PC, #640]
0x18EC	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 349 :: 		vRF4463MainApplyChanges();
0x18EE	0xF7FEFF75  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 350 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x18F2	0x489F    LDR	R0, [PC, #636]
0x18F4	0xF7FEFD74  BL	_strlen+0
0x18F8	0xB201    SXTH	R1, R0
0x18FA	0x489D    LDR	R0, [PC, #628]
0x18FC	0xF000FFC2  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 351 :: 		}
0x1900	0xE006    B	L_vRF4463MainCommandProcessor322
;DriverRF4463PROMain.c, 345 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor475:
L__vRF4463MainCommandProcessor474:
;DriverRF4463PROMain.c, 353 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1902	0x489C    LDR	R0, [PC, #624]
0x1904	0xF7FEFD6C  BL	_strlen+0
0x1908	0xB201    SXTH	R1, R0
0x190A	0x489A    LDR	R0, [PC, #616]
0x190C	0xF000FFBA  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 354 :: 		}
L_vRF4463MainCommandProcessor322:
;DriverRF4463PROMain.c, 355 :: 		}
0x1910	0xE16C    B	L_vRF4463MainCommandProcessor323
L_vRF4463MainCommandProcessor318:
;DriverRF4463PROMain.c, 359 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_2_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_2_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x1912	0xA901    ADD	R1, SP, #4
0x1914	0x220C    MOVS	R2, #12
0x1916	0xB212    SXTH	R2, R2
0x1918	0x4897    LDR	R0, [PC, #604]
0x191A	0xF7FFF923  BL	_memcmp+0
0x191E	0xBB18    CBNZ	R0, L_vRF4463MainCommandProcessor324
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 360 :: 		ulArgument = StrToLong( ucLongArgument );
0x1920	0xA909    ADD	R1, SP, #36
0x1922	0x4608    MOV	R0, R1
0x1924	0xF7FEFFF6  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x1928	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 361 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x192A	0x2800    CMP	R0, #0
0x192C	0xD314    BCC	L__vRF4463MainCommandProcessor477
0x192E	0xF1B20FFF  CMP	R2, #255
0x1932	0xD811    BHI	L__vRF4463MainCommandProcessor476
L__vRF4463MainCommandProcessor447:
;DriverRF4463PROMain.c, 362 :: 		ucRF4463ByteMatch2 = ulArgument;
0x1934	0x4991    LDR	R1, [PC, #580]
0x1936	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 363 :: 		ucRF4463MatchEnabled = 1;
0x1938	0x2201    MOVS	R2, #1
0x193A	0x498B    LDR	R1, [PC, #556]
0x193C	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 364 :: 		ucRF4463MatchEnableReg = 0x40;
0x193E	0x2240    MOVS	R2, #64
0x1940	0x498A    LDR	R1, [PC, #552]
0x1942	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 365 :: 		vRF4463MainApplyChanges();
0x1944	0xF7FEFF4A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 366 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1948	0x4889    LDR	R0, [PC, #548]
0x194A	0xF7FEFD49  BL	_strlen+0
0x194E	0xB201    SXTH	R1, R0
0x1950	0x4887    LDR	R0, [PC, #540]
0x1952	0xF000FF97  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 367 :: 		}
0x1956	0xE006    B	L_vRF4463MainCommandProcessor328
;DriverRF4463PROMain.c, 361 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor477:
L__vRF4463MainCommandProcessor476:
;DriverRF4463PROMain.c, 369 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1958	0x4886    LDR	R0, [PC, #536]
0x195A	0xF7FEFD41  BL	_strlen+0
0x195E	0xB201    SXTH	R1, R0
0x1960	0x4884    LDR	R0, [PC, #528]
0x1962	0xF000FF8F  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 370 :: 		}
L_vRF4463MainCommandProcessor328:
;DriverRF4463PROMain.c, 371 :: 		}
0x1966	0xE141    B	L_vRF4463MainCommandProcessor329
L_vRF4463MainCommandProcessor324:
;DriverRF4463PROMain.c, 375 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_3_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_3_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x1968	0xA901    ADD	R1, SP, #4
0x196A	0x220C    MOVS	R2, #12
0x196C	0xB212    SXTH	R2, R2
0x196E	0x4884    LDR	R0, [PC, #528]
0x1970	0xF7FFF8F8  BL	_memcmp+0
0x1974	0xBB18    CBNZ	R0, L_vRF4463MainCommandProcessor330
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 376 :: 		ulArgument = StrToLong( ucLongArgument );
0x1976	0xA909    ADD	R1, SP, #36
0x1978	0x4608    MOV	R0, R1
0x197A	0xF7FEFFCB  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x197E	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 377 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1980	0x2800    CMP	R0, #0
0x1982	0xD314    BCC	L__vRF4463MainCommandProcessor479
0x1984	0xF1B20FFF  CMP	R2, #255
0x1988	0xD811    BHI	L__vRF4463MainCommandProcessor478
L__vRF4463MainCommandProcessor446:
;DriverRF4463PROMain.c, 378 :: 		ucRF4463ByteMatch3 = ulArgument;
0x198A	0x497E    LDR	R1, [PC, #504]
0x198C	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 379 :: 		ucRF4463MatchEnabled = 1;
0x198E	0x2201    MOVS	R2, #1
0x1990	0x4975    LDR	R1, [PC, #468]
0x1992	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 380 :: 		ucRF4463MatchEnableReg = 0x40;
0x1994	0x2240    MOVS	R2, #64
0x1996	0x4975    LDR	R1, [PC, #468]
0x1998	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 381 :: 		vRF4463MainApplyChanges();
0x199A	0xF7FEFF1F  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 382 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x199E	0x4874    LDR	R0, [PC, #464]
0x19A0	0xF7FEFD1E  BL	_strlen+0
0x19A4	0xB201    SXTH	R1, R0
0x19A6	0x4872    LDR	R0, [PC, #456]
0x19A8	0xF000FF6C  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 383 :: 		}
0x19AC	0xE006    B	L_vRF4463MainCommandProcessor334
;DriverRF4463PROMain.c, 377 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor479:
L__vRF4463MainCommandProcessor478:
;DriverRF4463PROMain.c, 385 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x19AE	0x4871    LDR	R0, [PC, #452]
0x19B0	0xF7FEFD16  BL	_strlen+0
0x19B4	0xB201    SXTH	R1, R0
0x19B6	0x486F    LDR	R0, [PC, #444]
0x19B8	0xF000FF64  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 386 :: 		}
L_vRF4463MainCommandProcessor334:
;DriverRF4463PROMain.c, 387 :: 		}
0x19BC	0xE116    B	L_vRF4463MainCommandProcessor335
L_vRF4463MainCommandProcessor330:
;DriverRF4463PROMain.c, 391 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_4_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_4_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x19BE	0xA901    ADD	R1, SP, #4
0x19C0	0x220C    MOVS	R2, #12
0x19C2	0xB212    SXTH	R2, R2
0x19C4	0x4870    LDR	R0, [PC, #448]
0x19C6	0xF7FFF8CD  BL	_memcmp+0
0x19CA	0xBB18    CBNZ	R0, L_vRF4463MainCommandProcessor336
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 392 :: 		ulArgument = StrToLong( ucLongArgument );
0x19CC	0xA909    ADD	R1, SP, #36
0x19CE	0x4608    MOV	R0, R1
0x19D0	0xF7FEFFA0  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x19D4	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 393 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x19D6	0x2800    CMP	R0, #0
0x19D8	0xD314    BCC	L__vRF4463MainCommandProcessor481
0x19DA	0xF1B20FFF  CMP	R2, #255
0x19DE	0xD811    BHI	L__vRF4463MainCommandProcessor480
L__vRF4463MainCommandProcessor445:
;DriverRF4463PROMain.c, 394 :: 		ucRF4463ByteMatch4 = ulArgument;
0x19E0	0x496A    LDR	R1, [PC, #424]
0x19E2	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 395 :: 		ucRF4463MatchEnabled = 1;
0x19E4	0x2201    MOVS	R2, #1
0x19E6	0x4960    LDR	R1, [PC, #384]
0x19E8	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 396 :: 		ucRF4463MatchEnableReg = 0x40;
0x19EA	0x2240    MOVS	R2, #64
0x19EC	0x495F    LDR	R1, [PC, #380]
0x19EE	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 397 :: 		vRF4463MainApplyChanges();
0x19F0	0xF7FEFEF4  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 398 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x19F4	0x485E    LDR	R0, [PC, #376]
0x19F6	0xF7FEFCF3  BL	_strlen+0
0x19FA	0xB201    SXTH	R1, R0
0x19FC	0x485C    LDR	R0, [PC, #368]
0x19FE	0xF000FF41  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 399 :: 		}
0x1A02	0xE006    B	L_vRF4463MainCommandProcessor340
;DriverRF4463PROMain.c, 393 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor481:
L__vRF4463MainCommandProcessor480:
;DriverRF4463PROMain.c, 401 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1A04	0x485B    LDR	R0, [PC, #364]
0x1A06	0xF7FEFCEB  BL	_strlen+0
0x1A0A	0xB201    SXTH	R1, R0
0x1A0C	0x4859    LDR	R0, [PC, #356]
0x1A0E	0xF000FF39  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 402 :: 		}
L_vRF4463MainCommandProcessor340:
;DriverRF4463PROMain.c, 403 :: 		}
0x1A12	0xE0EB    B	L_vRF4463MainCommandProcessor341
L_vRF4463MainCommandProcessor336:
;DriverRF4463PROMain.c, 407 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_1_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_1_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x1A14	0xA901    ADD	R1, SP, #4
0x1A16	0x220B    MOVS	R2, #11
0x1A18	0xB212    SXTH	R2, R2
0x1A1A	0x485D    LDR	R0, [PC, #372]
0x1A1C	0xF7FFF8A2  BL	_memcmp+0
0x1A20	0xBB00    CBNZ	R0, L_vRF4463MainCommandProcessor342
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 408 :: 		ulArgument = StrToLong( ucLongArgument );
0x1A22	0xA909    ADD	R1, SP, #36
0x1A24	0x4608    MOV	R0, R1
0x1A26	0xF7FEFF75  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x1A2A	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 409 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1A2C	0x2800    CMP	R0, #0
0x1A2E	0xD311    BCC	L__vRF4463MainCommandProcessor483
0x1A30	0xF1B20FFF  CMP	R2, #255
0x1A34	0xD80E    BHI	L__vRF4463MainCommandProcessor482
L__vRF4463MainCommandProcessor444:
;DriverRF4463PROMain.c, 410 :: 		ucRF4463ByteMask1 = ulArgument;
0x1A36	0x4957    LDR	R1, [PC, #348]
0x1A38	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 411 :: 		ucRF4463MatchEnabled = 1;
0x1A3A	0x2201    MOVS	R2, #1
0x1A3C	0x494A    LDR	R1, [PC, #296]
0x1A3E	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 412 :: 		vRF4463MainApplyChanges();
0x1A40	0xF7FEFECC  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 413 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1A44	0x484A    LDR	R0, [PC, #296]
0x1A46	0xF7FEFCCB  BL	_strlen+0
0x1A4A	0xB201    SXTH	R1, R0
0x1A4C	0x4848    LDR	R0, [PC, #288]
0x1A4E	0xF000FF19  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 414 :: 		}
0x1A52	0xE006    B	L_vRF4463MainCommandProcessor346
;DriverRF4463PROMain.c, 409 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor483:
L__vRF4463MainCommandProcessor482:
;DriverRF4463PROMain.c, 416 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1A54	0x4847    LDR	R0, [PC, #284]
0x1A56	0xF7FEFCC3  BL	_strlen+0
0x1A5A	0xB201    SXTH	R1, R0
0x1A5C	0x4845    LDR	R0, [PC, #276]
0x1A5E	0xF000FF11  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 417 :: 		}
L_vRF4463MainCommandProcessor346:
;DriverRF4463PROMain.c, 418 :: 		}
0x1A62	0xE0C3    B	L_vRF4463MainCommandProcessor347
L_vRF4463MainCommandProcessor342:
;DriverRF4463PROMain.c, 422 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_2_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_2_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x1A64	0xA901    ADD	R1, SP, #4
0x1A66	0x220B    MOVS	R2, #11
0x1A68	0xB212    SXTH	R2, R2
0x1A6A	0x484B    LDR	R0, [PC, #300]
0x1A6C	0xF7FFF87A  BL	_memcmp+0
0x1A70	0xBB00    CBNZ	R0, L_vRF4463MainCommandProcessor348
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 423 :: 		ulArgument = StrToLong( ucLongArgument );
0x1A72	0xA909    ADD	R1, SP, #36
0x1A74	0x4608    MOV	R0, R1
0x1A76	0xF7FEFF4D  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x1A7A	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 424 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1A7C	0x2800    CMP	R0, #0
0x1A7E	0xD311    BCC	L__vRF4463MainCommandProcessor485
0x1A80	0xF1B20FFF  CMP	R2, #255
0x1A84	0xD80E    BHI	L__vRF4463MainCommandProcessor484
L__vRF4463MainCommandProcessor443:
;DriverRF4463PROMain.c, 425 :: 		ucRF4463ByteMask2 = ulArgument;
0x1A86	0x4945    LDR	R1, [PC, #276]
0x1A88	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 426 :: 		ucRF4463MatchEnabled = 1;
0x1A8A	0x2201    MOVS	R2, #1
0x1A8C	0x4936    LDR	R1, [PC, #216]
0x1A8E	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 427 :: 		vRF4463MainApplyChanges();
0x1A90	0xF7FEFEA4  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 428 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1A94	0x4836    LDR	R0, [PC, #216]
0x1A96	0xF7FEFCA3  BL	_strlen+0
0x1A9A	0xB201    SXTH	R1, R0
0x1A9C	0x4834    LDR	R0, [PC, #208]
0x1A9E	0xF000FEF1  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 429 :: 		}
0x1AA2	0xE006    B	L_vRF4463MainCommandProcessor352
;DriverRF4463PROMain.c, 424 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor485:
L__vRF4463MainCommandProcessor484:
;DriverRF4463PROMain.c, 431 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1AA4	0x4833    LDR	R0, [PC, #204]
0x1AA6	0xF7FEFC9B  BL	_strlen+0
0x1AAA	0xB201    SXTH	R1, R0
0x1AAC	0x4831    LDR	R0, [PC, #196]
0x1AAE	0xF000FEE9  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 432 :: 		}
L_vRF4463MainCommandProcessor352:
;DriverRF4463PROMain.c, 433 :: 		}
0x1AB2	0xE09B    B	L_vRF4463MainCommandProcessor353
L_vRF4463MainCommandProcessor348:
;DriverRF4463PROMain.c, 437 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_3_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_3_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x1AB4	0xA901    ADD	R1, SP, #4
0x1AB6	0x220B    MOVS	R2, #11
0x1AB8	0xB212    SXTH	R2, R2
0x1ABA	0x4839    LDR	R0, [PC, #228]
0x1ABC	0xF7FFF852  BL	_memcmp+0
0x1AC0	0xBB00    CBNZ	R0, L_vRF4463MainCommandProcessor354
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 438 :: 		ulArgument = StrToLong( ucLongArgument );
0x1AC2	0xA909    ADD	R1, SP, #36
0x1AC4	0x4608    MOV	R0, R1
0x1AC6	0xF7FEFF25  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x1ACA	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 439 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1ACC	0x2800    CMP	R0, #0
0x1ACE	0xD311    BCC	L__vRF4463MainCommandProcessor487
0x1AD0	0xF1B20FFF  CMP	R2, #255
0x1AD4	0xD80E    BHI	L__vRF4463MainCommandProcessor486
L__vRF4463MainCommandProcessor442:
;DriverRF4463PROMain.c, 440 :: 		ucRF4463ByteMask3 = ulArgument;
0x1AD6	0x4933    LDR	R1, [PC, #204]
0x1AD8	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 441 :: 		ucRF4463MatchEnabled = 1;
0x1ADA	0x2201    MOVS	R2, #1
0x1ADC	0x4922    LDR	R1, [PC, #136]
0x1ADE	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 442 :: 		vRF4463MainApplyChanges();
0x1AE0	0xF7FEFE7C  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 443 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1AE4	0x4822    LDR	R0, [PC, #136]
0x1AE6	0xF7FEFC7B  BL	_strlen+0
0x1AEA	0xB201    SXTH	R1, R0
0x1AEC	0x4820    LDR	R0, [PC, #128]
0x1AEE	0xF000FEC9  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 444 :: 		}
0x1AF2	0xE006    B	L_vRF4463MainCommandProcessor358
;DriverRF4463PROMain.c, 439 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor487:
L__vRF4463MainCommandProcessor486:
;DriverRF4463PROMain.c, 446 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1AF4	0x481F    LDR	R0, [PC, #124]
0x1AF6	0xF7FEFC73  BL	_strlen+0
0x1AFA	0xB201    SXTH	R1, R0
0x1AFC	0x481D    LDR	R0, [PC, #116]
0x1AFE	0xF000FEC1  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 447 :: 		}
L_vRF4463MainCommandProcessor358:
;DriverRF4463PROMain.c, 448 :: 		}
0x1B02	0xE073    B	L_vRF4463MainCommandProcessor359
L_vRF4463MainCommandProcessor354:
;DriverRF4463PROMain.c, 452 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_4_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_4_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x1B04	0xA901    ADD	R1, SP, #4
0x1B06	0x220B    MOVS	R2, #11
0x1B08	0xB212    SXTH	R2, R2
0x1B0A	0x4827    LDR	R0, [PC, #156]
0x1B0C	0xF7FFF82A  BL	_memcmp+0
0x1B10	0xBB00    CBNZ	R0, L_vRF4463MainCommandProcessor360
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 453 :: 		ulArgument = StrToLong( ucLongArgument );
0x1B12	0xA909    ADD	R1, SP, #36
0x1B14	0x4608    MOV	R0, R1
0x1B16	0xF7FEFEFD  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x1B1A	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 454 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1B1C	0x2800    CMP	R0, #0
0x1B1E	0xD311    BCC	L__vRF4463MainCommandProcessor489
0x1B20	0xF1B20FFF  CMP	R2, #255
0x1B24	0xD80E    BHI	L__vRF4463MainCommandProcessor488
L__vRF4463MainCommandProcessor441:
;DriverRF4463PROMain.c, 455 :: 		ucRF4463ByteMask4 = ulArgument;
0x1B26	0x4921    LDR	R1, [PC, #132]
0x1B28	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 456 :: 		ucRF4463MatchEnabled = 1;
0x1B2A	0x2201    MOVS	R2, #1
0x1B2C	0x490E    LDR	R1, [PC, #56]
0x1B2E	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 457 :: 		vRF4463MainApplyChanges();
0x1B30	0xF7FEFE54  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 458 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1B34	0x480E    LDR	R0, [PC, #56]
0x1B36	0xF7FEFC53  BL	_strlen+0
0x1B3A	0xB201    SXTH	R1, R0
0x1B3C	0x480C    LDR	R0, [PC, #48]
0x1B3E	0xF000FEA1  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 459 :: 		}
0x1B42	0xE006    B	L_vRF4463MainCommandProcessor364
;DriverRF4463PROMain.c, 454 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor489:
L__vRF4463MainCommandProcessor488:
;DriverRF4463PROMain.c, 461 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1B44	0x480B    LDR	R0, [PC, #44]
0x1B46	0xF7FEFC4B  BL	_strlen+0
0x1B4A	0xB201    SXTH	R1, R0
0x1B4C	0x4809    LDR	R0, [PC, #36]
0x1B4E	0xF000FE99  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 462 :: 		}
L_vRF4463MainCommandProcessor364:
;DriverRF4463PROMain.c, 463 :: 		}
0x1B52	0xE04B    B	L_vRF4463MainCommandProcessor365
L_vRF4463MainCommandProcessor360:
;DriverRF4463PROMain.c, 467 :: 		else if ( memcmp( CMD_RADIO_MATCH_UNSET, ucCommand, sizeof( CMD_RADIO_MATCH_UNSET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x1B54	0xA901    ADD	R1, SP, #4
0x1B56	0x220C    MOVS	R2, #12
0x1B58	0xB212    SXTH	R2, R2
0x1B5A	0x4815    LDR	R0, [PC, #84]
0x1B5C	0xF7FFF802  BL	_memcmp+0
0x1B60	0xF000B828  B	#80
0x1B64	0x209B2000  	_ucRF4463ByteMatch1+0
0x1B68	0x209A2000  	_ucRF4463MatchEnabled+0
0x1B6C	0x209D2000  	_ucRF4463MatchEnableReg+0
0x1B70	0x20B22000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x1B74	0x20DA2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x1B78	0x22172000  	_CMD_RADIO_MATCH_BYTE_2_SET+0
0x1B7C	0x209E2000  	_ucRF4463ByteMatch2+0
0x1B80	0x22232000  	_CMD_RADIO_MATCH_BYTE_3_SET+0
0x1B84	0x20A02000  	_ucRF4463ByteMatch3+0
0x1B88	0x222F2000  	_CMD_RADIO_MATCH_BYTE_4_SET+0
0x1B8C	0x20A22000  	_ucRF4463ByteMatch4+0
0x1B90	0x223B2000  	_CMD_RADIO_MATCH_MASK_1_SET+0
0x1B94	0x209C2000  	_ucRF4463ByteMask1+0
0x1B98	0x22462000  	_CMD_RADIO_MATCH_MASK_2_SET+0
0x1B9C	0x209F2000  	_ucRF4463ByteMask2+0
0x1BA0	0x22512000  	_CMD_RADIO_MATCH_MASK_3_SET+0
0x1BA4	0x20A12000  	_ucRF4463ByteMask3+0
0x1BA8	0x225C2000  	_CMD_RADIO_MATCH_MASK_4_SET+0
0x1BAC	0x20A32000  	_ucRF4463ByteMask4+0
0x1BB0	0x22672000  	_CMD_RADIO_MATCH_UNSET+0
0x1BB4	0xB960    CBNZ	R0, L_vRF4463MainCommandProcessor366
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 469 :: 		ucRF4463MatchEnableReg = 1;
0x1BB6	0x2201    MOVS	R2, #1
0x1BB8	0x490E    LDR	R1, [PC, #56]
0x1BBA	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 470 :: 		vRF4463MainApplyChanges();
0x1BBC	0xF7FEFE0E  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 471 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1BC0	0x480D    LDR	R0, [PC, #52]
0x1BC2	0xF7FEFC0D  BL	_strlen+0
0x1BC6	0xB201    SXTH	R1, R0
0x1BC8	0x480B    LDR	R0, [PC, #44]
0x1BCA	0xF000FE5B  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 476 :: 		}
0x1BCE	0xE00D    B	L_vRF4463MainCommandProcessor367
L_vRF4463MainCommandProcessor366:
;DriverRF4463PROMain.c, 480 :: 		vUSART1Start_TX( ANS_DEBUG_COMMAND_UNKNOWN, strlen( ANS_DEBUG_COMMAND_UNKNOWN ) );
; ucBuffer start address is: 20 (R5)
0x1BD0	0x480A    LDR	R0, [PC, #40]
0x1BD2	0xF7FEFC05  BL	_strlen+0
0x1BD6	0xB201    SXTH	R1, R0
0x1BD8	0x4808    LDR	R0, [PC, #32]
0x1BDA	0xF000FE53  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 481 :: 		vUSART1Start_TX( ucBuffer, strlen( ucBuffer ) );  // DEPURACION
0x1BDE	0x4628    MOV	R0, R5
0x1BE0	0xF7FEFBFE  BL	_strlen+0
0x1BE4	0xB201    SXTH	R1, R0
0x1BE6	0x4628    MOV	R0, R5
; ucBuffer end address is: 20 (R5)
0x1BE8	0xF000FE4C  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 482 :: 		}
L_vRF4463MainCommandProcessor367:
L_vRF4463MainCommandProcessor365:
L_vRF4463MainCommandProcessor359:
L_vRF4463MainCommandProcessor353:
L_vRF4463MainCommandProcessor347:
L_vRF4463MainCommandProcessor341:
L_vRF4463MainCommandProcessor335:
L_vRF4463MainCommandProcessor329:
L_vRF4463MainCommandProcessor323:
L_vRF4463MainCommandProcessor317:
L_vRF4463MainCommandProcessor315:
L_vRF4463MainCommandProcessor299:
L_vRF4463MainCommandProcessor293:
L_vRF4463MainCommandProcessor287:
L_vRF4463MainCommandProcessor271:
L_vRF4463MainCommandProcessor265:
;DriverRF4463PROMain.c, 483 :: 		}
L_end_vRF4463MainCommandProcessor:
0x1BEC	0xF8DDE000  LDR	LR, [SP, #0]
0x1BF0	0xB01A    ADD	SP, SP, #104
0x1BF2	0x4770    BX	LR
0x1BF4	0x209D2000  	_ucRF4463MatchEnableReg+0
0x1BF8	0x20B22000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x1BFC	0x22732000  	_ANS_DEBUG_COMMAND_UNKNOWN+0
; end of _vRF4463MainCommandProcessor
_toupper:
;__Lib_CType.c, 76 :: 		
; character start address is: 0 (R0)
0x0B98	0xB081    SUB	SP, SP, #4
; character end address is: 0 (R0)
; character start address is: 0 (R0)
;__Lib_CType.c, 77 :: 		
0x0B9A	0x287A    CMP	R0, #122
0x0B9C	0xD808    BHI	L__toupper47
0x0B9E	0x2861    CMP	R0, #97
0x0BA0	0xD307    BCC	L__toupper48
L__toupper44:
;__Lib_CType.c, 78 :: 		
0x0BA2	0xF64F71DF  MOVW	R1, #65503
0x0BA6	0xB209    SXTH	R1, R1
0x0BA8	0xEA000101  AND	R1, R0, R1, LSL #0
0x0BAC	0xB2C8    UXTB	R0, R1
; character end address is: 0 (R0)
;__Lib_CType.c, 77 :: 		
0x0BAE	0xE7FF    B	L__toupper46
L__toupper47:
L__toupper46:
; character start address is: 0 (R0)
; character end address is: 0 (R0)
0x0BB0	0xE7FF    B	L__toupper45
L__toupper48:
L__toupper45:
;__Lib_CType.c, 79 :: 		
; character start address is: 0 (R0)
; character end address is: 0 (R0)
;__Lib_CType.c, 80 :: 		
L_end_toupper:
0x0BB2	0xB001    ADD	SP, SP, #4
0x0BB4	0x4770    BX	LR
; end of _toupper
_memcmp:
;__Lib_CString.c, 30 :: 		
; n start address is: 8 (R2)
; s2 start address is: 4 (R1)
; s1 start address is: 0 (R0)
0x0B64	0xB081    SUB	SP, SP, #4
; n end address is: 8 (R2)
; s2 end address is: 4 (R1)
; s1 end address is: 0 (R0)
; s1 start address is: 0 (R0)
; s2 start address is: 4 (R1)
; n start address is: 8 (R2)
0x0B66	0xF8AD2000  STRH	R2, [SP, #0]
; s1 end address is: 0 (R0)
; n end address is: 8 (R2)
; s2 end address is: 4 (R1)
0x0B6A	0x4602    MOV	R2, R0
0x0B6C	0xF9BD0000  LDRSH	R0, [SP, #0]
;__Lib_CString.c, 31 :: 		
L_memcmp4:
; n start address is: 0 (R0)
; n start address is: 0 (R0)
; s2 start address is: 4 (R1)
; s1 start address is: 8 (R2)
0x0B70	0xB204    SXTH	R4, R0
0x0B72	0x1E43    SUBS	R3, R0, #1
0x0B74	0xB218    SXTH	R0, R3
; n end address is: 0 (R0)
0x0B76	0xB15C    CBZ	R4, L_memcmp5
; n end address is: 0 (R0)
;__Lib_CString.c, 32 :: 		
; n start address is: 0 (R0)
0x0B78	0x7814    LDRB	R4, [R2, #0]
0x0B7A	0x780B    LDRB	R3, [R1, #0]
0x0B7C	0x429C    CMP	R4, R3
0x0B7E	0xD004    BEQ	L_memcmp6
; n end address is: 0 (R0)
;__Lib_CString.c, 33 :: 		
0x0B80	0x7814    LDRB	R4, [R2, #0]
; s1 end address is: 8 (R2)
0x0B82	0x780B    LDRB	R3, [R1, #0]
; s2 end address is: 4 (R1)
0x0B84	0x1AE3    SUB	R3, R4, R3
0x0B86	0xB218    SXTH	R0, R3
0x0B88	0xE004    B	L_end_memcmp
L_memcmp6:
;__Lib_CString.c, 37 :: 		
; s2 start address is: 4 (R1)
; s1 start address is: 8 (R2)
; n start address is: 0 (R0)
0x0B8A	0x1C52    ADDS	R2, R2, #1
;__Lib_CString.c, 38 :: 		
0x0B8C	0x1C49    ADDS	R1, R1, #1
;__Lib_CString.c, 39 :: 		
; n end address is: 0 (R0)
; s1 end address is: 8 (R2)
; s2 end address is: 4 (R1)
0x0B8E	0xE7EF    B	L_memcmp4
L_memcmp5:
;__Lib_CString.c, 40 :: 		
0x0B90	0x2000    MOVS	R0, #0
0x0B92	0xB200    SXTH	R0, R0
;__Lib_CString.c, 41 :: 		
L_end_memcmp:
0x0B94	0xB001    ADD	SP, SP, #4
0x0B96	0x4770    BX	LR
; end of _memcmp
_StrToShort:
;__Lib_Conversions.c, 918 :: 		
; byte_in start address is: 0 (R0)
0x07F8	0xB085    SUB	SP, SP, #20
0x07FA	0xF8CDE000  STR	LR, [SP, #0]
0x07FE	0x4605    MOV	R5, R0
; byte_in end address is: 0 (R0)
; byte_in start address is: 20 (R5)
;__Lib_Conversions.c, 920 :: 		
0x0800	0x2100    MOVS	R1, #0
0x0802	0xF88D100C  STRB	R1, [SP, #12]
0x0806	0x2100    MOVS	R1, #0
0x0808	0xF88D100D  STRB	R1, [SP, #13]
0x080C	0x2100    MOVS	R1, #0
0x080E	0xF88D100E  STRB	R1, [SP, #14]
0x0812	0xF88D100F  STRB	R1, [SP, #15]
0x0816	0xF88D1010  STRB	R1, [SP, #16]
;__Lib_Conversions.c, 921 :: 		
;__Lib_Conversions.c, 922 :: 		
; result start address is: 12 (R3)
0x081A	0x2300    MOVS	R3, #0
0x081C	0xB25B    SXTB	R3, R3
;__Lib_Conversions.c, 923 :: 		
;__Lib_Conversions.c, 925 :: 		
0x081E	0xF88D3004  STRB	R3, [SP, #4]
0x0822	0x4628    MOV	R0, R5
0x0824	0xF7FFFDDC  BL	_strlen+0
0x0828	0xF99D3004  LDRSB	R3, [SP, #4]
; i1 start address is: 16 (R4)
0x082C	0xB2C4    UXTB	R4, R0
;__Lib_Conversions.c, 926 :: 		
0x082E	0xB2C1    UXTB	R1, R0
0x0830	0x2904    CMP	R1, #4
0x0832	0xF2008069  BHI	L_StrToShort176
;__Lib_Conversions.c, 928 :: 		
0x0836	0xAA03    ADD	R2, SP, #12
0x0838	0xF10D010D  ADD	R1, SP, #13
0x083C	0xF88D4004  STRB	R4, [SP, #4]
0x0840	0xF88D3005  STRB	R3, [SP, #5]
0x0844	0x9502    STR	R5, [SP, #8]
0x0846	0x4628    MOV	R0, R5
0x0848	0xF7FFFED0  BL	__Lib_Conversions_Forward_Input+0
0x084C	0x9D02    LDR	R5, [SP, #8]
0x084E	0xF99D3005  LDRSB	R3, [SP, #5]
0x0852	0xF89D4004  LDRB	R4, [SP, #4]
; multiplier start address is: 0 (R0)
0x0856	0xB280    UXTH	R0, R0
;__Lib_Conversions.c, 930 :: 		
0x0858	0xF89D100C  LDRB	R1, [SP, #12]
0x085C	0x2901    CMP	R1, #1
0x085E	0xD850    BHI	L_StrToShort177
;__Lib_Conversions.c, 932 :: 		
0x0860	0x7829    LDRB	R1, [R5, #0]
0x0862	0x292D    CMP	R1, #45
0x0864	0xD01E    BEQ	L_StrToShort178
; byte_in end address is: 20 (R5)
;__Lib_Conversions.c, 934 :: 		
; i start address is: 8 (R2)
0x0866	0x2200    MOVS	R2, #0
; i1 end address is: 16 (R4)
; multiplier end address is: 0 (R0)
; result end address is: 12 (R3)
; i end address is: 8 (R2)
0x0868	0xB285    UXTH	R5, R0
0x086A	0xB2E0    UXTB	R0, R4
L_StrToShort179:
; i start address is: 8 (R2)
; multiplier start address is: 20 (R5)
; i1 start address is: 0 (R0)
; result start address is: 12 (R3)
0x086C	0x4282    CMP	R2, R0
0x086E	0xD210    BCS	L_StrToShort180
;__Lib_Conversions.c, 936 :: 		
0x0870	0xF10D010D  ADD	R1, SP, #13
0x0874	0x1889    ADDS	R1, R1, R2
0x0876	0x7809    LDRB	R1, [R1, #0]
0x0878	0x3930    SUBS	R1, #48
0x087A	0xB209    SXTH	R1, R1
0x087C	0x4369    MULS	R1, R5, R1
0x087E	0xB289    UXTH	R1, R1
0x0880	0x1859    ADDS	R1, R3, R1
0x0882	0xB24B    SXTB	R3, R1
;__Lib_Conversions.c, 937 :: 		
0x0884	0x210A    MOVS	R1, #10
0x0886	0xFBB5F5F1  UDIV	R5, R5, R1
0x088A	0xB2AD    UXTH	R5, R5
;__Lib_Conversions.c, 934 :: 		
0x088C	0x1C52    ADDS	R2, R2, #1
0x088E	0xB2D2    UXTB	R2, R2
;__Lib_Conversions.c, 938 :: 		
; multiplier end address is: 20 (R5)
; i1 end address is: 0 (R0)
; i end address is: 8 (R2)
0x0890	0xE7EC    B	L_StrToShort179
L_StrToShort180:
;__Lib_Conversions.c, 939 :: 		
0x0892	0xF06F017F  MVN	R1, #127
0x0896	0x428B    CMP	R3, R1
0x0898	0xD102    BNE	L__StrToShort469
; result end address is: 12 (R3)
;__Lib_Conversions.c, 940 :: 		
; result start address is: 0 (R0)
0x089A	0x2000    MOVS	R0, #0
0x089C	0xB240    SXTB	R0, R0
; result end address is: 0 (R0)
0x089E	0xE000    B	L_StrToShort182
L__StrToShort469:
;__Lib_Conversions.c, 939 :: 		
0x08A0	0xB258    SXTB	R0, R3
;__Lib_Conversions.c, 940 :: 		
L_StrToShort182:
;__Lib_Conversions.c, 941 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x08A2	0xE02D    B	L_StrToShort183
L_StrToShort178:
;__Lib_Conversions.c, 942 :: 		
; result start address is: 12 (R3)
; multiplier start address is: 0 (R0)
; i1 start address is: 16 (R4)
; byte_in start address is: 20 (R5)
0x08A4	0x462A    MOV	R2, R5
0x08A6	0x212D    MOVS	R1, #45
0x08A8	0x7029    STRB	R1, [R5, #0]
; byte_in end address is: 20 (R5)
0x08AA	0x7811    LDRB	R1, [R2, #0]
0x08AC	0xB329    CBZ	R1, L__StrToShort471
0x08AE	0xF89D100C  LDRB	R1, [SP, #12]
0x08B2	0x2901    CMP	R1, #1
0x08B4	0xD123    BNE	L__StrToShort472
L__StrToShort466:
;__Lib_Conversions.c, 944 :: 		
; i start address is: 8 (R2)
0x08B6	0x2201    MOVS	R2, #1
; i1 end address is: 16 (R4)
; multiplier end address is: 0 (R0)
; result end address is: 12 (R3)
; i end address is: 8 (R2)
0x08B8	0xF8AD0004  STRH	R0, [SP, #4]
0x08BC	0xB2E0    UXTB	R0, R4
0x08BE	0xF8BD4004  LDRH	R4, [SP, #4]
L_StrToShort187:
; i start address is: 8 (R2)
; multiplier start address is: 16 (R4)
; i1 start address is: 0 (R0)
; result start address is: 12 (R3)
0x08C2	0x4282    CMP	R2, R0
0x08C4	0xD210    BCS	L_StrToShort188
;__Lib_Conversions.c, 946 :: 		
0x08C6	0xF10D010D  ADD	R1, SP, #13
0x08CA	0x1889    ADDS	R1, R1, R2
0x08CC	0x7809    LDRB	R1, [R1, #0]
0x08CE	0x3930    SUBS	R1, #48
0x08D0	0xB209    SXTH	R1, R1
0x08D2	0x4361    MULS	R1, R4, R1
0x08D4	0xB289    UXTH	R1, R1
0x08D6	0x1859    ADDS	R1, R3, R1
0x08D8	0xB24B    SXTB	R3, R1
;__Lib_Conversions.c, 947 :: 		
0x08DA	0x210A    MOVS	R1, #10
0x08DC	0xFBB4F4F1  UDIV	R4, R4, R1
0x08E0	0xB2A4    UXTH	R4, R4
;__Lib_Conversions.c, 944 :: 		
0x08E2	0x1C52    ADDS	R2, R2, #1
0x08E4	0xB2D2    UXTB	R2, R2
;__Lib_Conversions.c, 948 :: 		
; i1 end address is: 0 (R0)
; multiplier end address is: 16 (R4)
; i end address is: 8 (R2)
0x08E6	0xE7EC    B	L_StrToShort187
L_StrToShort188:
;__Lib_Conversions.c, 949 :: 		
0x08E8	0x4259    RSBS	R1, R3, #0
; result end address is: 12 (R3)
; result start address is: 0 (R0)
0x08EA	0xB248    SXTB	R0, R1
;__Lib_Conversions.c, 950 :: 		
0x08EC	0xB249    SXTB	R1, R1
0x08EE	0x297F    CMP	R1, #127
0x08F0	0xD102    BNE	L__StrToShort470
;__Lib_Conversions.c, 951 :: 		
0x08F2	0x2000    MOVS	R0, #0
0x08F4	0xB240    SXTB	R0, R0
; result end address is: 0 (R0)
0x08F6	0xE7FF    B	L_StrToShort190
L__StrToShort470:
;__Lib_Conversions.c, 950 :: 		
;__Lib_Conversions.c, 951 :: 		
L_StrToShort190:
;__Lib_Conversions.c, 942 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x08F8	0xE000    B	L__StrToShort468
L__StrToShort471:
0x08FA	0xB258    SXTB	R0, R3
L__StrToShort468:
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x08FC	0xE000    B	L__StrToShort467
L__StrToShort472:
0x08FE	0xB258    SXTB	R0, R3
L__StrToShort467:
;__Lib_Conversions.c, 952 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
L_StrToShort183:
;__Lib_Conversions.c, 953 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x0900	0xE001    B	L_StrToShort191
L_StrToShort177:
;__Lib_Conversions.c, 954 :: 		
; result start address is: 0 (R0)
0x0902	0x2000    MOVS	R0, #0
0x0904	0xB240    SXTB	R0, R0
; result end address is: 0 (R0)
L_StrToShort191:
;__Lib_Conversions.c, 955 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x0906	0xE001    B	L_StrToShort192
L_StrToShort176:
;__Lib_Conversions.c, 956 :: 		
; result start address is: 0 (R0)
0x0908	0x2000    MOVS	R0, #0
0x090A	0xB240    SXTB	R0, R0
; result end address is: 0 (R0)
L_StrToShort192:
;__Lib_Conversions.c, 957 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
;__Lib_Conversions.c, 958 :: 		
L_end_StrToShort:
0x090C	0xF8DDE000  LDR	LR, [SP, #0]
0x0910	0xB005    ADD	SP, SP, #20
0x0912	0x4770    BX	LR
; end of _StrToShort
_strlen:
;__Lib_CString.c, 143 :: 		
; s start address is: 0 (R0)
0x03E0	0xB081    SUB	SP, SP, #4
0x03E2	0x4601    MOV	R1, R0
; s end address is: 0 (R0)
; s start address is: 4 (R1)
;__Lib_CString.c, 146 :: 		
; cp start address is: 0 (R0)
0x03E4	0x4608    MOV	R0, R1
; s end address is: 4 (R1)
; cp end address is: 0 (R0)
0x03E6	0x460B    MOV	R3, R1
;__Lib_CString.c, 147 :: 		
L_strlen36:
; cp start address is: 0 (R0)
; s start address is: 12 (R3)
0x03E8	0x4602    MOV	R2, R0
0x03EA	0x1C40    ADDS	R0, R0, #1
0x03EC	0x7811    LDRB	R1, [R2, #0]
0x03EE	0xB101    CBZ	R1, L_strlen37
;__Lib_CString.c, 148 :: 		
0x03F0	0xE7FA    B	L_strlen36
L_strlen37:
;__Lib_CString.c, 149 :: 		
0x03F2	0x1AC1    SUB	R1, R0, R3
; s end address is: 12 (R3)
; cp end address is: 0 (R0)
0x03F4	0x1E49    SUBS	R1, R1, #1
0x03F6	0xB208    SXTH	R0, R1
;__Lib_CString.c, 150 :: 		
L_end_strlen:
0x03F8	0xB001    ADD	SP, SP, #4
0x03FA	0x4770    BX	LR
; end of _strlen
__Lib_Conversions_Forward_Input:
;__Lib_Conversions.c, 777 :: 		
; counter start address is: 8 (R2)
; buf_str2 start address is: 4 (R1)
; byte_in start address is: 0 (R0)
0x05EC	0xB081    SUB	SP, SP, #4
0x05EE	0xF8CDE000  STR	LR, [SP, #0]
0x05F2	0x4604    MOV	R4, R0
0x05F4	0x460D    MOV	R5, R1
0x05F6	0x4616    MOV	R6, R2
; counter end address is: 8 (R2)
; buf_str2 end address is: 4 (R1)
; byte_in end address is: 0 (R0)
; byte_in start address is: 16 (R4)
; buf_str2 start address is: 20 (R5)
; counter start address is: 24 (R6)
;__Lib_Conversions.c, 779 :: 		
0x05F8	0x4620    MOV	R0, R4
0x05FA	0xF7FFFEF1  BL	_strlen+0
; i start address is: 28 (R7)
0x05FE	0xB2C7    UXTB	R7, R0
;__Lib_Conversions.c, 781 :: 		
; multiplier start address is: 40 (R10)
0x0600	0xF04F0A01  MOV	R10, #1
0x0604	0xF2400B00  MOVW	R11, #0
; byte_in end address is: 16 (R4)
; buf_str2 end address is: 20 (R5)
; counter end address is: 24 (R6)
; multiplier end address is: 40 (R10)
; i end address is: 28 (R7)
0x0608	0x4622    MOV	R2, R4
0x060A	0x4629    MOV	R1, R5
0x060C	0x4630    MOV	R0, R6
;__Lib_Conversions.c, 783 :: 		
L___Lib_Conversions_Forward_Input139:
; multiplier start address is: 40 (R10)
; byte_in start address is: 8 (R2)
; buf_str2 start address is: 4 (R1)
; counter start address is: 0 (R0)
; i start address is: 28 (R7)
; counter start address is: 0 (R0)
; counter end address is: 0 (R0)
; buf_str2 start address is: 4 (R1)
; buf_str2 end address is: 4 (R1)
; byte_in start address is: 8 (R2)
; byte_in end address is: 8 (R2)
0x060E	0x2F00    CMP	R7, #0
0x0610	0xD91E    BLS	L___Lib_Conversions_Forward_Input140
; counter end address is: 0 (R0)
; buf_str2 end address is: 4 (R1)
; byte_in end address is: 8 (R2)
;__Lib_Conversions.c, 785 :: 		
; byte_in start address is: 8 (R2)
; buf_str2 start address is: 4 (R1)
; counter start address is: 0 (R0)
0x0612	0x19D3    ADDS	R3, R2, R7
0x0614	0x1E5B    SUBS	R3, R3, #1
0x0616	0x781B    LDRB	R3, [R3, #0]
; tmp start address is: 16 (R4)
0x0618	0xB2DC    UXTB	R4, R3
;__Lib_Conversions.c, 786 :: 		
0x061A	0x2B30    CMP	R3, #48
0x061C	0xD312    BCC	L___Lib_Conversions_Forward_Input438
0x061E	0x2C39    CMP	R4, #57
0x0620	0xD810    BHI	L___Lib_Conversions_Forward_Input437
; tmp end address is: 16 (R4)
L___Lib_Conversions_Forward_Input436:
;__Lib_Conversions.c, 788 :: 		
0x0622	0x19CB    ADDS	R3, R1, R7
0x0624	0x1E5C    SUBS	R4, R3, #1
0x0626	0x19D3    ADDS	R3, R2, R7
0x0628	0x1E5B    SUBS	R3, R3, #1
0x062A	0x781B    LDRB	R3, [R3, #0]
0x062C	0x7023    STRB	R3, [R4, #0]
;__Lib_Conversions.c, 789 :: 		
0x062E	0x250A    MOVS	R5, #10
0x0630	0x2600    MOVS	R6, #0
0x0632	0xFBAA3405  UMULL	R3, R4, R10, R5
0x0636	0xFB0B4405  MLA	R4, R11, R5, R4
0x063A	0xFB0A4406  MLA	R4, R10, R6, R4
0x063E	0x469A    MOV	R10, R3
0x0640	0x46A3    MOV	R11, R4
;__Lib_Conversions.c, 790 :: 		
0x0642	0xE002    B	L___Lib_Conversions_Forward_Input144
;__Lib_Conversions.c, 786 :: 		
L___Lib_Conversions_Forward_Input438:
L___Lib_Conversions_Forward_Input437:
;__Lib_Conversions.c, 792 :: 		
0x0644	0x7803    LDRB	R3, [R0, #0]
0x0646	0x1C5B    ADDS	R3, R3, #1
0x0648	0x7003    STRB	R3, [R0, #0]
; multiplier end address is: 40 (R10)
L___Lib_Conversions_Forward_Input144:
;__Lib_Conversions.c, 793 :: 		
; multiplier start address is: 40 (R10)
0x064A	0x1E7F    SUBS	R7, R7, #1
0x064C	0xB2FF    UXTB	R7, R7
;__Lib_Conversions.c, 794 :: 		
; counter end address is: 0 (R0)
; buf_str2 end address is: 4 (R1)
; byte_in end address is: 8 (R2)
; i end address is: 28 (R7)
0x064E	0xE7DE    B	L___Lib_Conversions_Forward_Input139
L___Lib_Conversions_Forward_Input140:
;__Lib_Conversions.c, 795 :: 		
0x0650	0x220A    MOVS	R2, #10
0x0652	0x2300    MOVS	R3, #0
0x0654	0x4650    MOV	R0, R10
0x0656	0x4659    MOV	R1, R11
0x0658	0xF7FFFD7A  BL	__Div_64x64_U+0
; multiplier end address is: 40 (R10)
;__Lib_Conversions.c, 797 :: 		
;__Lib_Conversions.c, 798 :: 		
L_end_Forward_Input:
0x065C	0xF8DDE000  LDR	LR, [SP, #0]
0x0660	0xB001    ADD	SP, SP, #4
0x0662	0x4770    BX	LR
; end of __Lib_Conversions_Forward_Input
__Div_64x64_U:
;__Lib_Math.c, 373 :: 		
0x0150	0xB081    SUB	SP, SP, #4
;__Lib_Math.c, 376 :: 		
0x0152	0xE92D41F0  PUSH	(R4, R5, R6, R7, R8, R14)
;__Lib_Math.c, 377 :: 		
0x0156	0x461C    MOV	R4, R3
;__Lib_Math.c, 378 :: 		
0x0158	0x4615    MOV	R5, R2
;__Lib_Math.c, 380 :: 		
0x015A	0x428C    CMP	R4, R1
;__Lib_Math.c, 381 :: 		
0x015C	0xBF08    IT	EQ
;__Lib_Math.c, 382 :: 		
0x015E	0x4285    CMPEQ	R5, R0
;__Lib_Math.c, 383 :: 		
0x0160	0xBF82    ITTT	HI
;__Lib_Math.c, 384 :: 		
0x0162	0xF04F0300  MOVHI	R3, #0
;__Lib_Math.c, 385 :: 		
0x0166	0xF04F0200  MOVHI	R2, #0
;__Lib_Math.c, 387 :: 		
0x016A	0xE0E4    BHI	__me_label_return
;__Lib_Math.c, 392 :: 		
0x016C	0x2C00    CMP	R4, #0
;__Lib_Math.c, 393 :: 		
0x016E	0xBF08    IT	EQ
;__Lib_Math.c, 394 :: 		
0x0170	0x2D00    CMPEQ	R5, #0
;__Lib_Math.c, 397 :: 		
0x0172	0xD107    BNE	__me_not_zero_
;__Lib_Math.c, 399 :: 		
0x0174	0x2900    CMP	R1, #0
;__Lib_Math.c, 400 :: 		
0x0176	0xBF0E    ITEE	EQ
;__Lib_Math.c, 401 :: 		
0x0178	0x2800    CMPEQ	R0, #0
;__Lib_Math.c, 404 :: 		
0x017A	0xF06F0000  MVNNE	R0, #0
;__Lib_Math.c, 405 :: 		
0x017E	0xF06F0100  MVNNE	R1, #0
;__Lib_Math.c, 411 :: 		
0x0182	0xE0DE    B	__me_lab_end
;__Lib_Math.c, 419 :: 		
__me_not_zero_:
;__Lib_Math.c, 420 :: 		
0x0184	0xF05F0900  MOVS	R9, #0
;__Lib_Math.c, 421 :: 		
0x0188	0xF05F0E00  MOVS	LR, #0
;__Lib_Math.c, 426 :: 		
0x018C	0x2C00    CMP	R4, #0
;__Lib_Math.c, 427 :: 		
0x018E	0xBF08    IT	EQ
;__Lib_Math.c, 428 :: 		
0x0190	0x428D    CMPEQ	R5, R1
;__Lib_Math.c, 429 :: 		
0x0192	0xBF9C    ITT	LS
;__Lib_Math.c, 430 :: 		
0x0194	0x462C    MOVLS	R4, R5
;__Lib_Math.c, 431 :: 		
0x0196	0xF04F0500  MOVLS	R5, #0
;__Lib_Math.c, 434 :: 		
0x019A	0x0C07    LSRS	R7, R0, #16
;__Lib_Math.c, 435 :: 		
0x019C	0xEA474701  ORR	R7, R7, R1, LSL #16
;__Lib_Math.c, 436 :: 		
0x01A0	0x0C0E    LSRS	R6, R1, #16
;__Lib_Math.c, 437 :: 		
0x01A2	0x42B4    CMP	R4, R6
;__Lib_Math.c, 438 :: 		
0x01A4	0xBF08    IT	EQ
;__Lib_Math.c, 439 :: 		
0x01A6	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 441 :: 		
0x01A8	0xBF9E    ITTT	LS
;__Lib_Math.c, 442 :: 		
0x01AA	0xEA5F4404  LSLSLS	R4, R4, #16
;__Lib_Math.c, 443 :: 		
0x01AE	0xEA444415  ORRLS	R4, R4, R5, LSR #16
;__Lib_Math.c, 444 :: 		
0x01B2	0xEA5F4505  LSLSLS	R5, R5, #16
;__Lib_Math.c, 447 :: 		
0x01B6	0x0A07    LSRS	R7, R0, #8
;__Lib_Math.c, 448 :: 		
0x01B8	0xEA476701  ORR	R7, R7, R1, LSL #24
;__Lib_Math.c, 449 :: 		
0x01BC	0x0A0E    LSRS	R6, R1, #8
;__Lib_Math.c, 450 :: 		
0x01BE	0x42B4    CMP	R4, R6
;__Lib_Math.c, 451 :: 		
0x01C0	0xBF08    IT	EQ
;__Lib_Math.c, 452 :: 		
0x01C2	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 454 :: 		
0x01C4	0xBF9E    ITTT	LS
;__Lib_Math.c, 455 :: 		
0x01C6	0xEA5F2404  LSLSLS	R4, R4, #8
;__Lib_Math.c, 456 :: 		
0x01CA	0xEA446415  ORRLS	R4, R4, R5, LSR #24
;__Lib_Math.c, 457 :: 		
0x01CE	0xEA5F2505  LSLSLS	R5, R5, #8
;__Lib_Math.c, 461 :: 		
0x01D2	0x0847    LSRS	R7, R0, #1
;__Lib_Math.c, 462 :: 		
0x01D4	0xEA4777C1  ORR	R7, R7, R1, LSL #31
;__Lib_Math.c, 463 :: 		
0x01D8	0x084E    LSRS	R6, R1, #1
;__Lib_Math.c, 464 :: 		
0x01DA	0x42B4    CMP	R4, R6
;__Lib_Math.c, 465 :: 		
0x01DC	0xBF08    IT	EQ
;__Lib_Math.c, 466 :: 		
0x01DE	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 467 :: 		
0x01E0	0xF2008094  BHI	__me_mod1
;__Lib_Math.c, 469 :: 		
0x01E4	0x0887    LSRS	R7, R0, #2
;__Lib_Math.c, 470 :: 		
0x01E6	0xEA477781  ORR	R7, R7, R1, LSL #30
;__Lib_Math.c, 471 :: 		
0x01EA	0x088E    LSRS	R6, R1, #2
;__Lib_Math.c, 472 :: 		
0x01EC	0x42B4    CMP	R4, R6
;__Lib_Math.c, 473 :: 		
0x01EE	0xBF08    IT	EQ
;__Lib_Math.c, 474 :: 		
0x01F0	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 475 :: 		
0x01F2	0xF200807D  BHI	__me_mod2
;__Lib_Math.c, 477 :: 		
0x01F6	0x08C7    LSRS	R7, R0, #3
;__Lib_Math.c, 478 :: 		
0x01F8	0xEA477741  ORR	R7, R7, R1, LSL #29
;__Lib_Math.c, 479 :: 		
0x01FC	0x08CE    LSRS	R6, R1, #3
;__Lib_Math.c, 480 :: 		
0x01FE	0x42B4    CMP	R4, R6
;__Lib_Math.c, 481 :: 		
0x0200	0xBF08    IT	EQ
;__Lib_Math.c, 482 :: 		
0x0202	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 483 :: 		
0x0204	0xD866    BHI	__me_mod3
;__Lib_Math.c, 485 :: 		
0x0206	0x0907    LSRS	R7, R0, #4
;__Lib_Math.c, 486 :: 		
0x0208	0xEA477701  ORR	R7, R7, R1, LSL #28
;__Lib_Math.c, 487 :: 		
0x020C	0x090E    LSRS	R6, R1, #4
;__Lib_Math.c, 488 :: 		
0x020E	0x42B4    CMP	R4, R6
;__Lib_Math.c, 489 :: 		
0x0210	0xBF08    IT	EQ
;__Lib_Math.c, 490 :: 		
0x0212	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 491 :: 		
0x0214	0xD850    BHI	__me_mod4
;__Lib_Math.c, 493 :: 		
0x0216	0x0947    LSRS	R7, R0, #5
;__Lib_Math.c, 494 :: 		
0x0218	0xEA4767C1  ORR	R7, R7, R1, LSL #27
;__Lib_Math.c, 495 :: 		
0x021C	0x094E    LSRS	R6, R1, #5
;__Lib_Math.c, 496 :: 		
0x021E	0x42B4    CMP	R4, R6
;__Lib_Math.c, 497 :: 		
0x0220	0xBF08    IT	EQ
;__Lib_Math.c, 498 :: 		
0x0222	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 499 :: 		
0x0224	0xD83A    BHI	__me_mod5
;__Lib_Math.c, 501 :: 		
0x0226	0x0987    LSRS	R7, R0, #6
;__Lib_Math.c, 502 :: 		
0x0228	0xEA476781  ORR	R7, R7, R1, LSL #26
;__Lib_Math.c, 503 :: 		
0x022C	0x098E    LSRS	R6, R1, #6
;__Lib_Math.c, 504 :: 		
0x022E	0x42B4    CMP	R4, R6
;__Lib_Math.c, 505 :: 		
0x0230	0xBF08    IT	EQ
;__Lib_Math.c, 506 :: 		
0x0232	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 507 :: 		
0x0234	0xD824    BHI	__me_mod6
;__Lib_Math.c, 509 :: 		
0x0236	0x09C7    LSRS	R7, R0, #7
;__Lib_Math.c, 510 :: 		
0x0238	0xEA476741  ORR	R7, R7, R1, LSL #25
;__Lib_Math.c, 511 :: 		
0x023C	0x09CE    LSRS	R6, R1, #7
;__Lib_Math.c, 512 :: 		
0x023E	0x42B4    CMP	R4, R6
;__Lib_Math.c, 513 :: 		
0x0240	0xBF08    IT	EQ
;__Lib_Math.c, 514 :: 		
0x0242	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 515 :: 		
0x0244	0xD80D    BHI	__me_mod7
;__Lib_Math.c, 520 :: 		
__me_divll:
;__Lib_Math.c, 521 :: 		
0x0246	0x01E6    LSLS	R6, R4, #7
;__Lib_Math.c, 522 :: 		
0x0248	0xEA466655  ORR	R6, R6, R5, LSR #25
;__Lib_Math.c, 523 :: 		
0x024C	0x01EF    LSLS	R7, R5, #7
;__Lib_Math.c, 524 :: 		
0x024E	0x42B1    CMP	R1, R6
;__Lib_Math.c, 525 :: 		
0x0250	0xBF08    IT	EQ
;__Lib_Math.c, 526 :: 		
0x0252	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 527 :: 		
0x0254	0xD301    BCC	__me_label_1
;__Lib_Math.c, 528 :: 		
0x0256	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 529 :: 		
0x0258	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 530 :: 		
__me_label_1:
;__Lib_Math.c, 531 :: 		
0x025A	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 532 :: 		
0x025E	0xEB5E0E0E  ADCS	LR, LR, LR, LSL #0
;__Lib_Math.c, 535 :: 		
__me_mod7:
;__Lib_Math.c, 536 :: 		
0x0262	0x01A6    LSLS	R6, R4, #6
;__Lib_Math.c, 537 :: 		
0x0264	0xEA466695  ORR	R6, R6, R5, LSR #26
;__Lib_Math.c, 538 :: 		
0x0268	0xEA4F1785  LSL	R7, R5, #6
;__Lib_Math.c, 539 :: 		
0x026C	0x42B1    CMP	R1, R6
;__Lib_Math.c, 540 :: 		
0x026E	0xBF08    IT	EQ
;__Lib_Math.c, 541 :: 		
0x0270	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 543 :: 		
0x0272	0xD301    BCC	__me_label_2
;__Lib_Math.c, 544 :: 		
0x0274	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 545 :: 		
0x0276	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 546 :: 		
__me_label_2:
;__Lib_Math.c, 547 :: 		
0x0278	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 548 :: 		
0x027C	0xEB4E0E0E  ADC	LR, LR, LR, LSL #0
;__Lib_Math.c, 550 :: 		
__me_mod6:
;__Lib_Math.c, 551 :: 		
0x0280	0x0166    LSLS	R6, R4, #5
;__Lib_Math.c, 552 :: 		
0x0282	0xEA4666D5  ORR	R6, R6, R5, LSR #27
;__Lib_Math.c, 553 :: 		
0x0286	0x016F    LSLS	R7, R5, #5
;__Lib_Math.c, 554 :: 		
0x0288	0x42B1    CMP	R1, R6
;__Lib_Math.c, 555 :: 		
0x028A	0xBF08    IT	EQ
;__Lib_Math.c, 556 :: 		
0x028C	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 558 :: 		
0x028E	0xD301    BCC	__me_label_3
;__Lib_Math.c, 559 :: 		
0x0290	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 560 :: 		
0x0292	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 561 :: 		
__me_label_3:
;__Lib_Math.c, 562 :: 		
0x0294	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 563 :: 		
0x0298	0xEB4E0E0E  ADC	LR, LR, LR, LSL #0
;__Lib_Math.c, 565 :: 		
__me_mod5:
;__Lib_Math.c, 566 :: 		
0x029C	0x0126    LSLS	R6, R4, #4
;__Lib_Math.c, 567 :: 		
0x029E	0xEA467615  ORR	R6, R6, R5, LSR #28
;__Lib_Math.c, 568 :: 		
0x02A2	0x012F    LSLS	R7, R5, #4
;__Lib_Math.c, 569 :: 		
0x02A4	0x42B1    CMP	R1, R6
;__Lib_Math.c, 570 :: 		
0x02A6	0xBF08    IT	EQ
;__Lib_Math.c, 571 :: 		
0x02A8	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 573 :: 		
0x02AA	0xD301    BCC	__me_label_4
;__Lib_Math.c, 574 :: 		
0x02AC	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 575 :: 		
0x02AE	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 576 :: 		
__me_label_4:
;__Lib_Math.c, 577 :: 		
0x02B0	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 578 :: 		
0x02B4	0xEB5E0E0E  ADCS	LR, LR, LR, LSL #0
;__Lib_Math.c, 580 :: 		
__me_mod4:
;__Lib_Math.c, 581 :: 		
0x02B8	0x00E6    LSLS	R6, R4, #3
;__Lib_Math.c, 582 :: 		
0x02BA	0xEA467655  ORR	R6, R6, R5, LSR #29
;__Lib_Math.c, 583 :: 		
0x02BE	0x00EF    LSLS	R7, R5, #3
;__Lib_Math.c, 584 :: 		
0x02C0	0x42B1    CMP	R1, R6
;__Lib_Math.c, 585 :: 		
0x02C2	0xBF08    IT	EQ
;__Lib_Math.c, 586 :: 		
0x02C4	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 588 :: 		
0x02C6	0xD301    BCC	__me_label_5
;__Lib_Math.c, 589 :: 		
0x02C8	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 590 :: 		
0x02CA	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 591 :: 		
__me_label_5:
;__Lib_Math.c, 592 :: 		
0x02CC	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 593 :: 		
0x02D0	0xEB4E0E0E  ADC	LR, LR, LR, LSL #0
;__Lib_Math.c, 595 :: 		
__me_mod3:
;__Lib_Math.c, 596 :: 		
0x02D4	0x00A6    LSLS	R6, R4, #2
;__Lib_Math.c, 597 :: 		
0x02D6	0xEA467695  ORR	R6, R6, R5, LSR #30
;__Lib_Math.c, 598 :: 		
0x02DA	0x00AF    LSLS	R7, R5, #2
;__Lib_Math.c, 599 :: 		
0x02DC	0x42B1    CMP	R1, R6
;__Lib_Math.c, 600 :: 		
0x02DE	0xBF08    IT	EQ
;__Lib_Math.c, 601 :: 		
0x02E0	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 603 :: 		
0x02E2	0xD301    BCC	__me_label_6
;__Lib_Math.c, 604 :: 		
0x02E4	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 605 :: 		
0x02E6	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 606 :: 		
__me_label_6:
;__Lib_Math.c, 607 :: 		
0x02E8	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 608 :: 		
0x02EC	0xEB4E0E0E  ADC	LR, LR, LR, LSL #0
;__Lib_Math.c, 610 :: 		
__me_mod2:
;__Lib_Math.c, 611 :: 		
0x02F0	0x0066    LSLS	R6, R4, #1
;__Lib_Math.c, 612 :: 		
0x02F2	0xEA4676D5  ORR	R6, R6, R5, LSR #31
;__Lib_Math.c, 613 :: 		
0x02F6	0x006F    LSLS	R7, R5, #1
;__Lib_Math.c, 614 :: 		
0x02F8	0x42B1    CMP	R1, R6
;__Lib_Math.c, 615 :: 		
0x02FA	0xBF08    IT	EQ
;__Lib_Math.c, 616 :: 		
0x02FC	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 618 :: 		
0x02FE	0xD301    BCC	__me_label_7
;__Lib_Math.c, 619 :: 		
0x0300	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 620 :: 		
0x0302	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 621 :: 		
__me_label_7:
;__Lib_Math.c, 622 :: 		
0x0304	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 623 :: 		
0x0308	0xEB5E0E0E  ADCS	LR, LR, LR, LSL #0
;__Lib_Math.c, 625 :: 		
__me_mod1:
;__Lib_Math.c, 626 :: 		
0x030C	0x42A1    CMP	R1, R4
;__Lib_Math.c, 627 :: 		
0x030E	0xBF08    IT	EQ
;__Lib_Math.c, 628 :: 		
0x0310	0x42A8    CMPEQ	R0, R5
;__Lib_Math.c, 630 :: 		
0x0312	0xD301    BCC	__me_label_8
;__Lib_Math.c, 631 :: 		
0x0314	0x1B40    SUBS	R0, R0, R5
;__Lib_Math.c, 632 :: 		
0x0316	0x41A1    SBCS	R1, R4
;__Lib_Math.c, 633 :: 		
__me_label_8:
;__Lib_Math.c, 634 :: 		
0x0318	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 635 :: 		
0x031C	0xEB5E0E0E  ADCS	LR, LR, LR, LSL #0
;__Lib_Math.c, 639 :: 		
0x0320	0x42A3    CMP	R3, R4
;__Lib_Math.c, 640 :: 		
0x0322	0xBF08    IT	EQ
;__Lib_Math.c, 641 :: 		
0x0324	0x42AA    CMPEQ	R2, R5
;__Lib_Math.c, 642 :: 		
0x0326	0xBF3E    ITTT	CC
;__Lib_Math.c, 643 :: 		
0x0328	0x0A2D    LSRCC	R5, R5, #8
;__Lib_Math.c, 644 :: 		
0x032A	0xEA456504  ORRCC	R5, R5, R4, LSL #24
;__Lib_Math.c, 645 :: 		
0x032E	0x0A24    LSRCC	R4, R4, #8
;__Lib_Math.c, 646 :: 		
0x0330	0xD389    BCC	__me_divll
;__Lib_Math.c, 650 :: 		
0x0332	0x4673    MOV	R3, LR
;__Lib_Math.c, 651 :: 		
0x0334	0x464A    MOV	R2, R9
;__Lib_Math.c, 654 :: 		
__me_label_return:
;__Lib_Math.c, 655 :: 		
0x0336	0x461E    MOV	R6, R3
;__Lib_Math.c, 656 :: 		
0x0338	0x4617    MOV	R7, R2
;__Lib_Math.c, 657 :: 		
0x033A	0x460B    MOV	R3, R1
;__Lib_Math.c, 658 :: 		
0x033C	0x4602    MOV	R2, R0
;__Lib_Math.c, 659 :: 		
0x033E	0x4631    MOV	R1, R6
;__Lib_Math.c, 660 :: 		
0x0340	0x4638    MOV	R0, R7
;__Lib_Math.c, 663 :: 		
__me_lab_end:
;__Lib_Math.c, 664 :: 		
0x0342	0xE8BD41F0  POP	(R4, R5, R6, R7, R8, R14)
;__Lib_Math.c, 683 :: 		
L_end__Div_64x64_U:
0x0346	0xB001    ADD	SP, SP, #4
0x0348	0x4770    BX	LR
; end of __Div_64x64_U
_vRF4463MainApplyChanges:
;DriverRF4463PROMain.c, 119 :: 		void vRF4463MainApplyChanges () {
0x07DC	0xB081    SUB	SP, SP, #4
0x07DE	0xF8CDE000  STR	LR, [SP, #0]
;DriverRF4463PROMain.c, 120 :: 		VRF4463SDNReset();
0x07E2	0xF002F8E5  BL	_VRF4463SDNReset+0
;DriverRF4463PROMain.c, 121 :: 		vRF4463Init();
0x07E6	0xF002F945  BL	_vRF4463Init+0
;DriverRF4463PROMain.c, 122 :: 		vRF4463ClearInterrupts();
0x07EA	0xF002F927  BL	_vRF4463ClearInterrupts+0
;DriverRF4463PROMain.c, 123 :: 		}
L_end_vRF4463MainApplyChanges:
0x07EE	0xF8DDE000  LDR	LR, [SP, #0]
0x07F2	0xB001    ADD	SP, SP, #4
0x07F4	0x4770    BX	LR
; end of _vRF4463MainApplyChanges
_StrToInt:
;__Lib_Conversions.c, 975 :: 		
; byte_in start address is: 0 (R0)
0x09C8	0xB085    SUB	SP, SP, #20
0x09CA	0xF8CDE000  STR	LR, [SP, #0]
0x09CE	0x4605    MOV	R5, R0
; byte_in end address is: 0 (R0)
; byte_in start address is: 20 (R5)
;__Lib_Conversions.c, 977 :: 		
0x09D0	0x2100    MOVS	R1, #0
0x09D2	0xF88D100C  STRB	R1, [SP, #12]
0x09D6	0x2100    MOVS	R1, #0
0x09D8	0xF88D100D  STRB	R1, [SP, #13]
0x09DC	0x2100    MOVS	R1, #0
0x09DE	0xF88D100E  STRB	R1, [SP, #14]
0x09E2	0xF88D100F  STRB	R1, [SP, #15]
0x09E6	0xF88D1010  STRB	R1, [SP, #16]
0x09EA	0xF88D1011  STRB	R1, [SP, #17]
0x09EE	0xF88D1012  STRB	R1, [SP, #18]
;__Lib_Conversions.c, 978 :: 		
;__Lib_Conversions.c, 979 :: 		
; result start address is: 12 (R3)
0x09F2	0xF2400300  MOVW	R3, #0
0x09F6	0xB21B    SXTH	R3, R3
;__Lib_Conversions.c, 980 :: 		
;__Lib_Conversions.c, 982 :: 		
0x09F8	0xF8AD3004  STRH	R3, [SP, #4]
0x09FC	0x4628    MOV	R0, R5
0x09FE	0xF7FFFCEF  BL	_strlen+0
0x0A02	0xF9BD3004  LDRSH	R3, [SP, #4]
; i1 start address is: 16 (R4)
0x0A06	0xB2C4    UXTB	R4, R0
;__Lib_Conversions.c, 983 :: 		
0x0A08	0xB2C1    UXTB	R1, R0
0x0A0A	0x2906    CMP	R1, #6
0x0A0C	0xF2008063  BHI	L_StrToInt193
;__Lib_Conversions.c, 985 :: 		
0x0A10	0xAA03    ADD	R2, SP, #12
0x0A12	0xF10D010D  ADD	R1, SP, #13
0x0A16	0xF88D4004  STRB	R4, [SP, #4]
0x0A1A	0xF8AD3006  STRH	R3, [SP, #6]
0x0A1E	0x9502    STR	R5, [SP, #8]
0x0A20	0x4628    MOV	R0, R5
0x0A22	0xF7FFFDE3  BL	__Lib_Conversions_Forward_Input+0
0x0A26	0x9D02    LDR	R5, [SP, #8]
0x0A28	0xF9BD3006  LDRSH	R3, [SP, #6]
0x0A2C	0xF89D4004  LDRB	R4, [SP, #4]
; multiplier start address is: 24 (R6)
0x0A30	0x4606    MOV	R6, R0
;__Lib_Conversions.c, 987 :: 		
0x0A32	0xF89D100C  LDRB	R1, [SP, #12]
0x0A36	0x2901    CMP	R1, #1
0x0A38	0xD84A    BHI	L_StrToInt194
;__Lib_Conversions.c, 989 :: 		
0x0A3A	0x7829    LDRB	R1, [R5, #0]
0x0A3C	0x292D    CMP	R1, #45
0x0A3E	0xD01B    BEQ	L_StrToInt195
; byte_in end address is: 20 (R5)
;__Lib_Conversions.c, 991 :: 		
; i start address is: 0 (R0)
0x0A40	0x2000    MOVS	R0, #0
; i1 end address is: 16 (R4)
; multiplier end address is: 24 (R6)
; i end address is: 0 (R0)
; result end address is: 12 (R3)
0x0A42	0xB2E2    UXTB	R2, R4
0x0A44	0x4635    MOV	R5, R6
L_StrToInt196:
; i start address is: 0 (R0)
; multiplier start address is: 20 (R5)
; i1 start address is: 8 (R2)
; result start address is: 12 (R3)
0x0A46	0x4290    CMP	R0, R2
0x0A48	0xD20E    BCS	L_StrToInt197
;__Lib_Conversions.c, 993 :: 		
0x0A4A	0xF10D010D  ADD	R1, SP, #13
0x0A4E	0x1809    ADDS	R1, R1, R0
0x0A50	0x7809    LDRB	R1, [R1, #0]
0x0A52	0x3930    SUBS	R1, #48
0x0A54	0xB209    SXTH	R1, R1
0x0A56	0x4369    MULS	R1, R5, R1
0x0A58	0x1859    ADDS	R1, R3, R1
0x0A5A	0xB20B    SXTH	R3, R1
;__Lib_Conversions.c, 994 :: 		
0x0A5C	0x210A    MOVS	R1, #10
0x0A5E	0xFBB5F5F1  UDIV	R5, R5, R1
;__Lib_Conversions.c, 991 :: 		
0x0A62	0x1C40    ADDS	R0, R0, #1
0x0A64	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 995 :: 		
; i1 end address is: 8 (R2)
; multiplier end address is: 20 (R5)
; i end address is: 0 (R0)
0x0A66	0xE7EE    B	L_StrToInt196
L_StrToInt197:
;__Lib_Conversions.c, 996 :: 		
0x0A68	0x491E    LDR	R1, [PC, #120]
0x0A6A	0x428B    CMP	R3, R1
0x0A6C	0xD102    BNE	L__StrToInt476
; result end address is: 12 (R3)
;__Lib_Conversions.c, 997 :: 		
; result start address is: 0 (R0)
0x0A6E	0x2000    MOVS	R0, #0
0x0A70	0xB200    SXTH	R0, R0
; result end address is: 0 (R0)
0x0A72	0xE000    B	L_StrToInt199
L__StrToInt476:
;__Lib_Conversions.c, 996 :: 		
0x0A74	0xB218    SXTH	R0, R3
;__Lib_Conversions.c, 997 :: 		
L_StrToInt199:
;__Lib_Conversions.c, 998 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x0A76	0xE02A    B	L_StrToInt200
L_StrToInt195:
;__Lib_Conversions.c, 999 :: 		
; result start address is: 12 (R3)
; multiplier start address is: 24 (R6)
; i1 start address is: 16 (R4)
; byte_in start address is: 20 (R5)
0x0A78	0x462A    MOV	R2, R5
0x0A7A	0x212D    MOVS	R1, #45
0x0A7C	0x7029    STRB	R1, [R5, #0]
; byte_in end address is: 20 (R5)
0x0A7E	0x7811    LDRB	R1, [R2, #0]
0x0A80	0xB311    CBZ	R1, L__StrToInt478
0x0A82	0xF89D100C  LDRB	R1, [SP, #12]
0x0A86	0x2901    CMP	R1, #1
0x0A88	0xD120    BNE	L__StrToInt479
L__StrToInt473:
;__Lib_Conversions.c, 1001 :: 		
; i start address is: 8 (R2)
0x0A8A	0x2201    MOVS	R2, #1
; i1 end address is: 16 (R4)
; multiplier end address is: 24 (R6)
; result end address is: 12 (R3)
; i end address is: 8 (R2)
0x0A8C	0xB2E0    UXTB	R0, R4
0x0A8E	0x4634    MOV	R4, R6
L_StrToInt204:
; i start address is: 8 (R2)
; multiplier start address is: 16 (R4)
; i1 start address is: 0 (R0)
; result start address is: 12 (R3)
0x0A90	0x4282    CMP	R2, R0
0x0A92	0xD20E    BCS	L_StrToInt205
;__Lib_Conversions.c, 1003 :: 		
0x0A94	0xF10D010D  ADD	R1, SP, #13
0x0A98	0x1889    ADDS	R1, R1, R2
0x0A9A	0x7809    LDRB	R1, [R1, #0]
0x0A9C	0x3930    SUBS	R1, #48
0x0A9E	0xB209    SXTH	R1, R1
0x0AA0	0x4361    MULS	R1, R4, R1
0x0AA2	0x1859    ADDS	R1, R3, R1
0x0AA4	0xB20B    SXTH	R3, R1
;__Lib_Conversions.c, 1004 :: 		
0x0AA6	0x210A    MOVS	R1, #10
0x0AA8	0xFBB4F4F1  UDIV	R4, R4, R1
;__Lib_Conversions.c, 1001 :: 		
0x0AAC	0x1C52    ADDS	R2, R2, #1
0x0AAE	0xB2D2    UXTB	R2, R2
;__Lib_Conversions.c, 1005 :: 		
; i1 end address is: 0 (R0)
; multiplier end address is: 16 (R4)
; i end address is: 8 (R2)
0x0AB0	0xE7EE    B	L_StrToInt204
L_StrToInt205:
;__Lib_Conversions.c, 1006 :: 		
0x0AB2	0x425A    RSBS	R2, R3, #0
0x0AB4	0xB212    SXTH	R2, R2
; result end address is: 12 (R3)
; result start address is: 0 (R0)
0x0AB6	0xB210    SXTH	R0, R2
;__Lib_Conversions.c, 1007 :: 		
0x0AB8	0xF64771FF  MOVW	R1, #32767
0x0ABC	0x428A    CMP	R2, R1
0x0ABE	0xD102    BNE	L__StrToInt477
;__Lib_Conversions.c, 1008 :: 		
0x0AC0	0x2000    MOVS	R0, #0
0x0AC2	0xB200    SXTH	R0, R0
; result end address is: 0 (R0)
0x0AC4	0xE7FF    B	L_StrToInt207
L__StrToInt477:
;__Lib_Conversions.c, 1007 :: 		
;__Lib_Conversions.c, 1008 :: 		
L_StrToInt207:
;__Lib_Conversions.c, 999 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x0AC6	0xE000    B	L__StrToInt475
L__StrToInt478:
0x0AC8	0xB218    SXTH	R0, R3
L__StrToInt475:
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x0ACA	0xE000    B	L__StrToInt474
L__StrToInt479:
0x0ACC	0xB218    SXTH	R0, R3
L__StrToInt474:
;__Lib_Conversions.c, 1009 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
L_StrToInt200:
;__Lib_Conversions.c, 1010 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x0ACE	0xE001    B	L_StrToInt208
L_StrToInt194:
;__Lib_Conversions.c, 1011 :: 		
; result start address is: 0 (R0)
0x0AD0	0x2000    MOVS	R0, #0
0x0AD2	0xB200    SXTH	R0, R0
; result end address is: 0 (R0)
L_StrToInt208:
;__Lib_Conversions.c, 1012 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x0AD4	0xE001    B	L_StrToInt209
L_StrToInt193:
;__Lib_Conversions.c, 1013 :: 		
; result start address is: 0 (R0)
0x0AD6	0x2000    MOVS	R0, #0
0x0AD8	0xB200    SXTH	R0, R0
; result end address is: 0 (R0)
L_StrToInt209:
;__Lib_Conversions.c, 1014 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
;__Lib_Conversions.c, 1015 :: 		
L_end_StrToInt:
0x0ADA	0xF8DDE000  LDR	LR, [SP, #0]
0x0ADE	0xB005    ADD	SP, SP, #20
0x0AE0	0x4770    BX	LR
0x0AE2	0xBF00    NOP
0x0AE4	0x8000FFFF  	#-32768
; end of _StrToInt
_StrToLong:
;__Lib_Conversions.c, 1074 :: 		
; dWord_in start address is: 0 (R0)
0x0914	0xB085    SUB	SP, SP, #20
0x0916	0xF8CDE000  STR	LR, [SP, #0]
0x091A	0x4604    MOV	R4, R0
; dWord_in end address is: 0 (R0)
; dWord_in start address is: 16 (R4)
;__Lib_Conversions.c, 1076 :: 		
0x091C	0xF10D0B05  ADD	R11, SP, #5
0x0920	0xF10B0A0B  ADD	R10, R11, #11
0x0924	0xF8DFC09C  LDR	R12, [PC, #156]
0x0928	0xF001FF6E  BL	___CC2DW+0
;__Lib_Conversions.c, 1077 :: 		
;__Lib_Conversions.c, 1078 :: 		
0x092C	0xF04F0100  MOV	R1, #0
0x0930	0x9104    STR	R1, [SP, #16]
;__Lib_Conversions.c, 1079 :: 		
;__Lib_Conversions.c, 1081 :: 		
0x0932	0x4620    MOV	R0, R4
0x0934	0xF7FFFD54  BL	_strlen+0
0x0938	0xF88D0004  STRB	R0, [SP, #4]
;__Lib_Conversions.c, 1083 :: 		
0x093C	0xB2C1    UXTB	R1, R0
0x093E	0x290A    CMP	R1, #10
0x0940	0xD839    BHI	L_StrToLong217
;__Lib_Conversions.c, 1085 :: 		
0x0942	0xF10D0205  ADD	R2, SP, #5
0x0946	0xF10D0106  ADD	R1, SP, #6
0x094A	0x4620    MOV	R0, R4
; dWord_in end address is: 16 (R4)
0x094C	0xF7FFFE4E  BL	__Lib_Conversions_Forward_Input+0
; multiplier start address is: 16 (R4)
0x0950	0x4604    MOV	R4, R0
0x0952	0x460D    MOV	R5, R1
;__Lib_Conversions.c, 1087 :: 		
0x0954	0xF89D1005  LDRB	R1, [SP, #5]
0x0958	0xBB51    CBNZ	R1, L_StrToLong218
;__Lib_Conversions.c, 1089 :: 		
; i start address is: 44 (R11)
0x095A	0xF2400B00  MOVW	R11, #0
; multiplier end address is: 16 (R4)
; i end address is: 44 (R11)
0x095E	0xFA5FFA8B  UXTB	R10, R11
L_StrToLong219:
; i start address is: 40 (R10)
; multiplier start address is: 16 (R4)
0x0962	0xF89D1004  LDRB	R1, [SP, #4]
0x0966	0x458A    CMP	R10, R1
0x0968	0xD221    BCS	L_StrToLong220
;__Lib_Conversions.c, 1091 :: 		
0x096A	0xF10D0106  ADD	R1, SP, #6
0x096E	0xEB01010A  ADD	R1, R1, R10, LSL #0
0x0972	0x7809    LDRB	R1, [R1, #0]
0x0974	0x3930    SUBS	R1, #48
0x0976	0xB209    SXTH	R1, R1
0x0978	0xFBA12304  UMULL	R2, R3, R1, R4
0x097C	0xFB023304  MLA	R3, R2, R4, R3
0x0980	0xFB013305  MLA	R3, R1, R5, R3
0x0984	0x9904    LDR	R1, [SP, #16]
0x0986	0x1889    ADDS	R1, R1, R2
0x0988	0x415A    ADCS	R2, R3
0x098A	0x9104    STR	R1, [SP, #16]
;__Lib_Conversions.c, 1092 :: 		
0x098C	0x220A    MOVS	R2, #10
0x098E	0x2300    MOVS	R3, #0
0x0990	0x4620    MOV	R0, R4
0x0992	0x4629    MOV	R1, R5
0x0994	0xF7FFFBDC  BL	__Div_64x64_U+0
; multiplier end address is: 16 (R4)
; multiplier start address is: 8 (R2)
0x0998	0x4602    MOV	R2, R0
0x099A	0x460B    MOV	R3, R1
;__Lib_Conversions.c, 1089 :: 		
0x099C	0xF10A0101  ADD	R1, R10, #1
; i end address is: 40 (R10)
; i start address is: 44 (R11)
0x09A0	0xFA5FFB81  UXTB	R11, R1
;__Lib_Conversions.c, 1093 :: 		
0x09A4	0x4614    MOV	R4, R2
0x09A6	0x461D    MOV	R5, R3
; multiplier end address is: 8 (R2)
; i end address is: 44 (R11)
0x09A8	0xFA5FFA8B  UXTB	R10, R11
0x09AC	0xE7D9    B	L_StrToLong219
L_StrToLong220:
;__Lib_Conversions.c, 1094 :: 		
0x09AE	0xE001    B	L_StrToLong222
L_StrToLong218:
;__Lib_Conversions.c, 1095 :: 		
0x09B0	0x2100    MOVS	R1, #0
0x09B2	0x9104    STR	R1, [SP, #16]
L_StrToLong222:
;__Lib_Conversions.c, 1096 :: 		
0x09B4	0xE001    B	L_StrToLong223
L_StrToLong217:
;__Lib_Conversions.c, 1097 :: 		
0x09B6	0x2100    MOVS	R1, #0
0x09B8	0x9104    STR	R1, [SP, #16]
L_StrToLong223:
;__Lib_Conversions.c, 1098 :: 		
0x09BA	0x9804    LDR	R0, [SP, #16]
;__Lib_Conversions.c, 1099 :: 		
L_end_StrToLong:
0x09BC	0xF8DDE000  LDR	LR, [SP, #0]
0x09C0	0xB005    ADD	SP, SP, #20
0x09C2	0x4770    BX	LR
0x09C4	0x673A0000  	?ICSStrToLong_counter_L0+0
; end of _StrToLong
_vRF4463TxData:
;driverrf4463pro.c, 570 :: 		void vRF4463TxData( void ) {
0x259C	0xB086    SUB	SP, SP, #24
0x259E	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 573 :: 		ucRF4463IRQ = 0;
0x25A2	0x2100    MOVS	R1, #0
0x25A4	0x481D    LDR	R0, [PC, #116]
0x25A6	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 575 :: 		Flag.is_tx = 1;
0x25A8	0x2101    MOVS	R1, #1
0x25AA	0xB249    SXTB	R1, R1
0x25AC	0x481C    LDR	R0, [PC, #112]
0x25AE	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 579 :: 		vRF4463FifoReset();            // fifo_reset();  // Buffer empty
0x25B0	0xF7FEFCA0  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 580 :: 		spi_write_fifo();              // Fill the buffer with data
0x25B4	0xF7FEFCF2  BL	_spi_write_fifo+0
;driverrf4463pro.c, 581 :: 		vRF4463EnableTxInterrupt();    // enable_tx_interrupt();
0x25B8	0xF7FEFCD2  BL	_vRF4463EnableTxInterrupt+0
;driverrf4463pro.c, 582 :: 		vRF4463ClearInterrupts();       // clr_interrupt();  // Clear interrupt factor
0x25BC	0xF000FA3E  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 583 :: 		vRF4463TxStart();              // tx_start();    // Enter launch mode, start launch
0x25C0	0xF7FFFB1E  BL	_vRF4463TxStart+0
;driverrf4463pro.c, 584 :: 		rf_timeout = 0;
0x25C4	0x2100    MOVS	R1, #0
0x25C6	0x4817    LDR	R0, [PC, #92]
0x25C8	0x8001    STRH	R1, [R0, #0]
;driverrf4463pro.c, 586 :: 		Flag.rf_reach_timeout = 0;
0x25CA	0x2100    MOVS	R1, #0
0x25CC	0xB249    SXTB	R1, R1
0x25CE	0x4816    LDR	R0, [PC, #88]
0x25D0	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 588 :: 		if ( ucRF4463IRQ ) {
0x25D2	0x4812    LDR	R0, [PC, #72]
0x25D4	0x7800    LDRB	R0, [R0, #0]
0x25D6	0xB150    CBZ	R0, L_vRF4463TxData90
;driverrf4463pro.c, 589 :: 		UART1_Write_Text( "[ UART1 ] TX INT\r\n" );
0x25D8	0xF10D0B04  ADD	R11, SP, #4
0x25DC	0xF10B0A13  ADD	R10, R11, #19
0x25E0	0xF8DFC048  LDR	R12, [PC, #72]
0x25E4	0xF000F910  BL	___CC2DW+0
0x25E8	0xA801    ADD	R0, SP, #4
0x25EA	0xF000F9D1  BL	_UART1_Write_Text+0
;driverrf4463pro.c, 590 :: 		}
L_vRF4463TxData90:
;driverrf4463pro.c, 593 :: 		while ( nIRQ ) {     //nIRQ
L_vRF4463TxData91:
0x25EE	0x4810    LDR	R0, [PC, #64]
0x25F0	0x6800    LDR	R0, [R0, #0]
0x25F2	0xB140    CBZ	R0, L_vRF4463TxData92
;driverrf4463pro.c, 596 :: 		if ( Flag.rf_reach_timeout ) {
0x25F4	0x490C    LDR	R1, [PC, #48]
0x25F6	0x6808    LDR	R0, [R1, #0]
0x25F8	0xB120    CBZ	R0, L_vRF4463TxData93
;driverrf4463pro.c, 597 :: 		VRF4463SDNReset();
0x25FA	0xF000F9D9  BL	_VRF4463SDNReset+0
;driverrf4463pro.c, 598 :: 		vRF4463Init();        //SI4463_init();  // RF Module initialization
0x25FE	0xF000FA39  BL	_vRF4463Init+0
;driverrf4463pro.c, 599 :: 		break;                // Forced out
0x2602	0xE000    B	L_vRF4463TxData92
;driverrf4463pro.c, 600 :: 		}
L_vRF4463TxData93:
;driverrf4463pro.c, 601 :: 		}
0x2604	0xE7F3    B	L_vRF4463TxData91
L_vRF4463TxData92:
;driverrf4463pro.c, 603 :: 		tx_cnt++;
0x2606	0x490B    LDR	R1, [PC, #44]
0x2608	0x6808    LDR	R0, [R1, #0]
0x260A	0x1C40    ADDS	R0, R0, #1
0x260C	0x6008    STR	R0, [R1, #0]
;driverrf4463pro.c, 605 :: 		vRF4463RxInit();          // rx_init();                //rf After the transmission is completed, enter the receiving mode
0x260E	0xF7FFFC71  BL	_vRF4463RxInit+0
;driverrf4463pro.c, 606 :: 		}
L_end_vRF4463TxData:
0x2612	0xF8DDE000  LDR	LR, [SP, #0]
0x2616	0xB006    ADD	SP, SP, #24
0x2618	0x4770    BX	LR
0x261A	0xBF00    NOP
0x261C	0x22892000  	DriverRF4463PROMain_ucRF4463IRQ+0
0x2620	0x5F442204  	_Flag+0
0x2624	0x22AE2000  	_rf_timeout+0
0x2628	0x5F482204  	_Flag+0
0x262C	0x66FD0000  	?ICS?lstr1_DriverRF4463PROMain+0
0x2630	0x01304222  	GPIOC_IDRbits+0
0x2634	0x228C2000  	_tx_cnt+0
; end of _vRF4463TxData
_vRF4463FifoReset:
;driverrf4463pro.c, 419 :: 		void vRF4463FifoReset( void ) {
0x0EF4	0xB082    SUB	SP, SP, #8
0x0EF6	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 422 :: 		p[ 0 ] = FIFO_INFO;
0x0EFA	0xAA01    ADD	R2, SP, #4
0x0EFC	0x2015    MOVS	R0, #21
0x0EFE	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 423 :: 		p[ 1 ] = 0x03;   // reset tx ,rx fifo
0x0F00	0x1C51    ADDS	R1, R2, #1
0x0F02	0x2003    MOVS	R0, #3
0x0F04	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 424 :: 		spi_write( 2, p );
0x0F06	0x4611    MOV	R1, R2
0x0F08	0x2002    MOVS	R0, #2
0x0F0A	0xF7FFFBAB  BL	_spi_write+0
;driverrf4463pro.c, 425 :: 		}
L_end_vRF4463FifoReset:
0x0F0E	0xF8DDE000  LDR	LR, [SP, #0]
0x0F12	0xB002    ADD	SP, SP, #8
0x0F14	0x4770    BX	LR
; end of _vRF4463FifoReset
_spi_write_fifo:
;driverrf4463pro.c, 907 :: 		void spi_write_fifo( void ) {
0x0F9C	0xB081    SUB	SP, SP, #4
0x0F9E	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 910 :: 		i = 0;
; i start address is: 0 (R0)
0x0FA2	0x2000    MOVS	R0, #0
; i end address is: 0 (R0)
;driverrf4463pro.c, 911 :: 		while ( i != 0xFF ) {
L_spi_write_fifo130:
; i start address is: 0 (R0)
0x0FA4	0xF1B00FFF  CMP	R0, #255
0x0FA8	0xD002    BEQ	L_spi_write_fifo131
; i end address is: 0 (R0)
;driverrf4463pro.c, 912 :: 		i = check_cts();                // Check if you can send Command
0x0FAA	0xF7FFFA27  BL	_check_cts+0
; i start address is: 0 (R0)
;driverrf4463pro.c, 913 :: 		}
; i end address is: 0 (R0)
0x0FAE	0xE7F9    B	L_spi_write_fifo130
L_spi_write_fifo131:
;driverrf4463pro.c, 915 :: 		nSEL = 1;
0x0FB0	0x2101    MOVS	R1, #1
0x0FB2	0xB249    SXTB	R1, R1
0x0FB4	0x4815    LDR	R0, [PC, #84]
0x0FB6	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 916 :: 		nSEL = 0;
0x0FB8	0x2100    MOVS	R1, #0
0x0FBA	0xB249    SXTB	R1, R1
0x0FBC	0x4813    LDR	R0, [PC, #76]
0x0FBE	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 917 :: 		ucRf4463SPIByte( WRITE_TX_FIFO );
0x0FC0	0x2066    MOVS	R0, #102
0x0FC2	0xF000FE8B  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 919 :: 		if ( ucRF4463Mode == tx_test_mode) {
0x0FC6	0x4812    LDR	R0, [PC, #72]
0x0FC8	0x7800    LDRB	R0, [R0, #0]
0x0FCA	0x2802    CMP	R0, #2
0x0FCC	0xD10B    BNE	L_spi_write_fifo132
;driverrf4463pro.c, 920 :: 		for ( i = 0; i < payload_length; i++ ) {
; i start address is: 12 (R3)
0x0FCE	0x2300    MOVS	R3, #0
; i end address is: 12 (R3)
L_spi_write_fifo133:
; i start address is: 12 (R3)
0x0FD0	0x2B42    CMP	R3, #66
0x0FD2	0xD207    BCS	L_spi_write_fifo134
;driverrf4463pro.c, 921 :: 		ucRf4463SPIByte( tx_test_aa_data[ i ] );   // Send 10 test data
0x0FD4	0x480F    LDR	R0, [PC, #60]
0x0FD6	0x18C0    ADDS	R0, R0, R3
0x0FD8	0x7800    LDRB	R0, [R0, #0]
0x0FDA	0xF000FE7F  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 920 :: 		for ( i = 0; i < payload_length; i++ ) {
0x0FDE	0x1C5B    ADDS	R3, R3, #1
0x0FE0	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 922 :: 		}
; i end address is: 12 (R3)
0x0FE2	0xE7F5    B	L_spi_write_fifo133
L_spi_write_fifo134:
;driverrf4463pro.c, 923 :: 		}
0x0FE4	0xE00A    B	L_spi_write_fifo136
L_spi_write_fifo132:
;driverrf4463pro.c, 925 :: 		for ( i = 0; i < payload_length; i++ ) {
; i start address is: 12 (R3)
0x0FE6	0x2300    MOVS	R3, #0
; i end address is: 12 (R3)
L_spi_write_fifo137:
; i start address is: 12 (R3)
0x0FE8	0x2B42    CMP	R3, #66
0x0FEA	0xD207    BCS	L_spi_write_fifo138
;driverrf4463pro.c, 926 :: 		ucRf4463SPIByte( ucRF4463TXdata[ i ] );
0x0FEC	0x480A    LDR	R0, [PC, #40]
0x0FEE	0x18C0    ADDS	R0, R0, R3
0x0FF0	0x7800    LDRB	R0, [R0, #0]
0x0FF2	0xF000FE73  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 925 :: 		for ( i = 0; i < payload_length; i++ ) {
0x0FF6	0x1C5B    ADDS	R3, R3, #1
0x0FF8	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 927 :: 		}
; i end address is: 12 (R3)
0x0FFA	0xE7F5    B	L_spi_write_fifo137
L_spi_write_fifo138:
;driverrf4463pro.c, 928 :: 		}
L_spi_write_fifo136:
;driverrf4463pro.c, 929 :: 		nSEL = 1;
0x0FFC	0x2101    MOVS	R1, #1
0x0FFE	0xB249    SXTB	R1, R1
0x1000	0x4802    LDR	R0, [PC, #8]
0x1002	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 930 :: 		}
L_end_spi_write_fifo:
0x1004	0xF8DDE000  LDR	LR, [SP, #0]
0x1008	0xB001    ADD	SP, SP, #4
0x100A	0x4770    BX	LR
0x100C	0x81B04221  	GPIOB_ODRbits+0
0x1010	0x22AA2000  	_ucRF4463Mode+0
0x1014	0x67200000  	_tx_test_aa_data+0
0x1018	0x66BB0000  	_ucRF4463TXdata+0
; end of _spi_write_fifo
_vRF4463EnableTxInterrupt:
;driverrf4463pro.c, 472 :: 		void vRF4463EnableTxInterrupt( void ) {
0x0F60	0xB083    SUB	SP, SP, #12
0x0F62	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 475 :: 		p[ 0 ] = 0x11;
0x0F66	0xAA01    ADD	R2, SP, #4
0x0F68	0x2011    MOVS	R0, #17
0x0F6A	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 476 :: 		p[ 1 ] = 0x01;            // 0x0100
0x0F6C	0x1C51    ADDS	R1, R2, #1
0x0F6E	0x2001    MOVS	R0, #1
0x0F70	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 477 :: 		p[ 2 ] = 0x02;            // 2Parameters
0x0F72	0x1C91    ADDS	R1, R2, #2
0x0F74	0x2002    MOVS	R0, #2
0x0F76	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 478 :: 		p[ 3 ] = 0x00;            // 0x0100
0x0F78	0x1CD1    ADDS	R1, R2, #3
0x0F7A	0x2000    MOVS	R0, #0
0x0F7C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 479 :: 		p[ 4 ] = 0x01;            // Ph  int
0x0F7E	0x1D11    ADDS	R1, R2, #4
0x0F80	0x2001    MOVS	R0, #1
0x0F82	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 480 :: 		p[ 5 ] = 0x20;            //  enable  packet sent interrupt
0x0F84	0x1D51    ADDS	R1, R2, #5
0x0F86	0x2020    MOVS	R0, #32
0x0F88	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 481 :: 		spi_write( 0x06, p );     // enable  packet receive interrupt
0x0F8A	0x4611    MOV	R1, R2
0x0F8C	0x2006    MOVS	R0, #6
0x0F8E	0xF7FFFB69  BL	_spi_write+0
;driverrf4463pro.c, 482 :: 		}
L_end_vRF4463EnableTxInterrupt:
0x0F92	0xF8DDE000  LDR	LR, [SP, #0]
0x0F96	0xB003    ADD	SP, SP, #12
0x0F98	0x4770    BX	LR
; end of _vRF4463EnableTxInterrupt
_vRF4463TxStart:
;driverrf4463pro.c, 498 :: 		void vRF4463TxStart( void ) {
0x1C00	0xB083    SUB	SP, SP, #12
0x1C02	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 501 :: 		p[ 0 ] = START_TX ;              // start Command
0x1C06	0xAA01    ADD	R2, SP, #4
0x1C08	0x2031    MOVS	R0, #49
0x1C0A	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 502 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 1 default
0x1C0C	0x1C51    ADDS	R1, R2, #1
0x1C0E	0x480A    LDR	R0, [PC, #40]
0x1C10	0x7800    LDRB	R0, [R0, #0]
0x1C12	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 503 :: 		p[ 2 ] = 0x30;                   // Back after launch Readymode, Do not retransmit, launch immediately
0x1C14	0x1C91    ADDS	R1, R2, #2
0x1C16	0x2030    MOVS	R0, #48
0x1C18	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 504 :: 		p[ 3 ] = 0;
0x1C1A	0x1CD1    ADDS	R1, R2, #3
0x1C1C	0x2000    MOVS	R0, #0
0x1C1E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 505 :: 		p[ 4 ] = 0;                      // payload_length; // Total to transmit 10 bytes
0x1C20	0x1D11    ADDS	R1, R2, #4
0x1C22	0x2000    MOVS	R0, #0
0x1C24	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 506 :: 		spi_write( 5, p );
0x1C26	0x4611    MOV	R1, R2
0x1C28	0x2005    MOVS	R0, #5
0x1C2A	0xF7FEFD1B  BL	_spi_write+0
;driverrf4463pro.c, 507 :: 		}
L_end_vRF4463TxStart:
0x1C2E	0xF8DDE000  LDR	LR, [SP, #0]
0x1C32	0xB003    ADD	SP, SP, #12
0x1C34	0x4770    BX	LR
0x1C36	0xBF00    NOP
0x1C38	0x21192000  	_ucRF4463FreqChannel+0
; end of _vRF4463TxStart
_vRF4463RxInit:
;driverrf4463pro.c, 553 :: 		void vRF4463RxInit( void ) {
0x1EF4	0xB081    SUB	SP, SP, #4
0x1EF6	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 554 :: 		Flag.is_tx = 0;
0x1EFA	0x2100    MOVS	R1, #0
0x1EFC	0xB249    SXTB	R1, R1
0x1EFE	0x480A    LDR	R0, [PC, #40]
0x1F00	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 555 :: 		vRF4463FifoReset();           // fifo_reset();  // Buffer empty
0x1F02	0xF7FEFFF7  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 556 :: 		vRF4463EnableRxInterrupt();   // enable_rx_interrupt();
0x1F06	0xF7FEFBF7  BL	_vRF4463EnableRxInterrupt+0
;driverrf4463pro.c, 557 :: 		vRF4463ClearInterrupts();      // clr_interrupt();  // Clear interrupt factor
0x1F0A	0xF000FD97  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 559 :: 		if ( ucRF4463Mode == rx_test_mode ) {
0x1F0E	0x4807    LDR	R0, [PC, #28]
0x1F10	0x7800    LDRB	R0, [R0, #0]
0x1F12	0x2803    CMP	R0, #3
0x1F14	0xD102    BNE	L_vRF4463RxInit88
;driverrf4463pro.c, 560 :: 		vRF4463RxStartTest();      // rx_start_test();
0x1F16	0xF7FEFC35  BL	_vRF4463RxStartTest+0
;driverrf4463pro.c, 561 :: 		}
0x1F1A	0xE001    B	L_vRF4463RxInit89
L_vRF4463RxInit88:
;driverrf4463pro.c, 563 :: 		vRF4463RxStart();        // rx_start();    // Enter receiving mode, after receiving data, return to Readymode
0x1F1C	0xF7FEFC0C  BL	_vRF4463RxStart+0
;driverrf4463pro.c, 564 :: 		}
L_vRF4463RxInit89:
;driverrf4463pro.c, 565 :: 		}
L_end_vRF4463RxInit:
0x1F20	0xF8DDE000  LDR	LR, [SP, #0]
0x1F24	0xB001    ADD	SP, SP, #4
0x1F26	0x4770    BX	LR
0x1F28	0x5F442204  	_Flag+0
0x1F2C	0x22AA2000  	_ucRF4463Mode+0
; end of _vRF4463RxInit
_vRF4463EnableRxInterrupt:
;driverrf4463pro.c, 456 :: 		void vRF4463EnableRxInterrupt( void ) {
0x06F8	0xB083    SUB	SP, SP, #12
0x06FA	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 459 :: 		p[ 0 ] = 0x11;
0x06FE	0xAA01    ADD	R2, SP, #4
0x0700	0x2011    MOVS	R0, #17
0x0702	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 460 :: 		p[ 1 ] = 0x01;            // 0x0100
0x0704	0x1C51    ADDS	R1, R2, #1
0x0706	0x2001    MOVS	R0, #1
0x0708	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 461 :: 		p[ 2 ] = 0x03;            // 3Parameters
0x070A	0x1C91    ADDS	R1, R2, #2
0x070C	0x2003    MOVS	R0, #3
0x070E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 462 :: 		p[ 3 ] = 0x00;            // 0100
0x0710	0x1CD1    ADDS	R1, R2, #3
0x0712	0x2000    MOVS	R0, #0
0x0714	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 463 :: 		p[ 4 ] = 0x03;            // ph, modem int       0x03;
0x0716	0x1D11    ADDS	R1, R2, #4
0x0718	0x2003    MOVS	R0, #3
0x071A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 464 :: 		p[ 5 ] = 0x18;            // 0x10;   // Pack received int
0x071C	0x1D51    ADDS	R1, R2, #5
0x071E	0x2018    MOVS	R0, #24
0x0720	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 465 :: 		p[ 6 ] = 0x00;            //preamble int, sync int setting
0x0722	0x1D91    ADDS	R1, R2, #6
0x0724	0x2000    MOVS	R0, #0
0x0726	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 466 :: 		spi_write( 0x07, p );     // enable  packet receive interrupt
0x0728	0x4611    MOV	R1, R2
0x072A	0x2007    MOVS	R0, #7
0x072C	0xF7FFFF9A  BL	_spi_write+0
;driverrf4463pro.c, 467 :: 		}
L_end_vRF4463EnableRxInterrupt:
0x0730	0xF8DDE000  LDR	LR, [SP, #0]
0x0734	0xB003    ADD	SP, SP, #12
0x0736	0x4770    BX	LR
; end of _vRF4463EnableRxInterrupt
_vRF4463RxStartTest:
;driverrf4463pro.c, 531 :: 		void vRF4463RxStartTest( void ) {
0x0784	0xB083    SUB	SP, SP, #12
0x0786	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 534 :: 		LED_GREEN = 1;
0x078A	0x2101    MOVS	R1, #1
0x078C	0xB249    SXTB	R1, R1
0x078E	0x4811    LDR	R0, [PC, #68]
0x0790	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 536 :: 		p[ 0 ] = START_RX;        // start Command
0x0792	0xAA01    ADD	R2, SP, #4
0x0794	0x2032    MOVS	R0, #50
0x0796	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 537 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 0
0x0798	0x1C51    ADDS	R1, R2, #1
0x079A	0x480F    LDR	R0, [PC, #60]
0x079C	0x7800    LDRB	R0, [R0, #0]
0x079E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 538 :: 		p[ 2 ] = 0x00;            // Enter receiving mode immediately
0x07A0	0x1C91    ADDS	R1, R2, #2
0x07A2	0x2000    MOVS	R0, #0
0x07A4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 539 :: 		p[ 3 ] = 0;
0x07A6	0x1CD1    ADDS	R1, R2, #3
0x07A8	0x2000    MOVS	R0, #0
0x07AA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 541 :: 		p[ 4 ] = 0;
0x07AC	0x1D11    ADDS	R1, R2, #4
0x07AE	0x2000    MOVS	R0, #0
0x07B0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 542 :: 		p[ 5 ] = 0;               // unchanged after preamble timeout
0x07B2	0x1D51    ADDS	R1, R2, #5
0x07B4	0x2000    MOVS	R0, #0
0x07B6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 545 :: 		p[ 6 ] = 0x08;
0x07B8	0x1D91    ADDS	R1, R2, #6
0x07BA	0x2008    MOVS	R0, #8
0x07BC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 546 :: 		p[ 7 ] = 0x08;
0x07BE	0x1DD1    ADDS	R1, R2, #7
0x07C0	0x2008    MOVS	R0, #8
0x07C2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 547 :: 		spi_write( 8, p );
0x07C4	0x4611    MOV	R1, R2
0x07C6	0x2008    MOVS	R0, #8
0x07C8	0xF7FFFF4C  BL	_spi_write+0
;driverrf4463pro.c, 548 :: 		}
L_end_vRF4463RxStartTest:
0x07CC	0xF8DDE000  LDR	LR, [SP, #0]
0x07D0	0xB003    ADD	SP, SP, #12
0x07D2	0x4770    BX	LR
0x07D4	0x019C4222  	GPIOC_ODRbits+0
0x07D8	0x21192000  	_ucRF4463FreqChannel+0
; end of _vRF4463RxStartTest
_vRF4463RxStart:
;driverrf4463pro.c, 512 :: 		void vRF4463RxStart( void ) {
0x0738	0xB083    SUB	SP, SP, #12
0x073A	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 515 :: 		p[ 0 ] = START_RX ;              // start Command
0x073E	0xAA01    ADD	R2, SP, #4
0x0740	0x2032    MOVS	R0, #50
0x0742	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 516 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 0
0x0744	0x1C51    ADDS	R1, R2, #1
0x0746	0x480E    LDR	R0, [PC, #56]
0x0748	0x7800    LDRB	R0, [R0, #0]
0x074A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 517 :: 		p[ 2 ] = 0x00;                   // Enter receiving mode immediately
0x074C	0x1C91    ADDS	R1, R2, #2
0x074E	0x2000    MOVS	R0, #0
0x0750	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 518 :: 		p[ 3 ] = 0;
0x0752	0x1CD1    ADDS	R1, R2, #3
0x0754	0x2000    MOVS	R0, #0
0x0756	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 519 :: 		p[ 4 ] = 0;                      // payload_length; // Total to receive 10 bytes
0x0758	0x1D11    ADDS	R1, R2, #4
0x075A	0x2000    MOVS	R0, #0
0x075C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 520 :: 		p[ 5 ] = 0;                      // unchanged after preamble timeout
0x075E	0x1D51    ADDS	R1, R2, #5
0x0760	0x2000    MOVS	R0, #0
0x0762	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 523 :: 		p[ 6 ] = 0x08;
0x0764	0x1D91    ADDS	R1, R2, #6
0x0766	0x2008    MOVS	R0, #8
0x0768	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 524 :: 		p[ 7 ] = 0x08;
0x076A	0x1DD1    ADDS	R1, R2, #7
0x076C	0x2008    MOVS	R0, #8
0x076E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 525 :: 		spi_write( 8, p );
0x0770	0x4611    MOV	R1, R2
0x0772	0x2008    MOVS	R0, #8
0x0774	0xF7FFFF76  BL	_spi_write+0
;driverrf4463pro.c, 526 :: 		}
L_end_vRF4463RxStart:
0x0778	0xF8DDE000  LDR	LR, [SP, #0]
0x077C	0xB003    ADD	SP, SP, #12
0x077E	0x4770    BX	LR
0x0780	0x21192000  	_ucRF4463FreqChannel+0
; end of _vRF4463RxStart
_vRF4463TxCont:
;driverrf4463pro.c, 611 :: 		void vRF4463TxCont( void ) {
0x2294	0xB081    SUB	SP, SP, #4
0x2296	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 614 :: 		LED_RED = 1;
0x229A	0x2101    MOVS	R1, #1
0x229C	0xB249    SXTB	R1, R1
0x229E	0x480F    LDR	R0, [PC, #60]
0x22A0	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 615 :: 		vRF4463FifoReset();                     //  fifo_reset();  // Buffer empty
0x22A2	0xF7FEFE27  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 616 :: 		spi_write_fifo();                       // Fill the buffer with data
0x22A6	0xF7FEFE79  BL	_spi_write_fifo+0
;driverrf4463pro.c, 617 :: 		vRF4463EnableTxInterrupt();             //  enable_tx_interrupt();
0x22AA	0xF7FEFE59  BL	_vRF4463EnableTxInterrupt+0
;driverrf4463pro.c, 618 :: 		vRF4463ClearInterrupts();               //  clr_interrupt();  // Clear interrupt factor
0x22AE	0xF000FBC5  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 619 :: 		vRF4463TxStart();                       //  tx_start();    // Enter launch mode, start launch
0x22B2	0xF7FFFCA5  BL	_vRF4463TxStart+0
;driverrf4463pro.c, 620 :: 		rf_timeout = 0;
0x22B6	0x2100    MOVS	R1, #0
0x22B8	0x4809    LDR	R0, [PC, #36]
0x22BA	0x8001    STRH	R1, [R0, #0]
;driverrf4463pro.c, 621 :: 		Flag.rf_reach_timeout = 0;
0x22BC	0x2100    MOVS	R1, #0
0x22BE	0xB249    SXTB	R1, R1
0x22C0	0x4808    LDR	R0, [PC, #32]
0x22C2	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 623 :: 		ucRF4463IRQ = 0;
0x22C4	0x2100    MOVS	R1, #0
0x22C6	0x4808    LDR	R0, [PC, #32]
0x22C8	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 626 :: 		while( nIRQ ) {          //nIRQ ) {
L_vRF4463TxCont94:
0x22CA	0x4808    LDR	R0, [PC, #32]
0x22CC	0x6800    LDR	R0, [R0, #0]
0x22CE	0xB100    CBZ	R0, L_vRF4463TxCont95
;driverrf4463pro.c, 634 :: 		}
0x22D0	0xE7FB    B	L_vRF4463TxCont94
L_vRF4463TxCont95:
;driverrf4463pro.c, 635 :: 		}
L_end_vRF4463TxCont:
0x22D2	0xF8DDE000  LDR	LR, [SP, #0]
0x22D6	0xB001    ADD	SP, SP, #4
0x22D8	0x4770    BX	LR
0x22DA	0xBF00    NOP
0x22DC	0x01984222  	GPIOC_ODRbits+0
0x22E0	0x22AE2000  	_rf_timeout+0
0x22E4	0x5F482204  	_Flag+0
0x22E8	0x22892000  	DriverRF4463PROMain_ucRF4463IRQ+0
0x22EC	0x01304222  	GPIOC_IDRbits+0
; end of _vRF4463TxCont
__UnsignedIntegralToFloat:
;__Lib_MathDouble.c, 262 :: 		
0x23F4	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 264 :: 		
0x23F6	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 265 :: 		
0x23F8	0xBF08    IT	EQ
;__Lib_MathDouble.c, 267 :: 		
0x23FA	0xE00F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 269 :: 		
0x23FC	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 271 :: 		
0x23FE	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 272 :: 		
0x2402	0xD402    BMI	__me_label_cont
;__Lib_MathDouble.c, 274 :: 		
__me_loop:
0x2404	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 275 :: 		
0x2406	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 277 :: 		
0x2408	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 279 :: 		
__me_label_cont:
0x240A	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 280 :: 		
0x240C	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 281 :: 		
0x240E	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 282 :: 		
0x2410	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 284 :: 		
0x2412	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 285 :: 		
0x2414	0xEA4050C2  ORR	R0, R0, R2, LSL #23
;__Lib_MathDouble.c, 287 :: 		
0x2418	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 288 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 290 :: 		
L_end__UnsignedIntegralToFloat:
0x241C	0xB001    ADD	SP, SP, #4
0x241E	0x4770    BX	LR
; end of __UnsignedIntegralToFloat
__Div_FP:
;__Lib_MathDouble.c, 743 :: 		
0x2480	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 745 :: 		
0x2482	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 746 :: 		
0x2484	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 747 :: 		
0x2488	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 748 :: 		
0x248A	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 749 :: 		
0x248E	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 751 :: 		
0x2492	0x0201    LSLS	R1, R0, #8
;__Lib_MathDouble.c, 752 :: 		
0x2494	0x0043    LSLS	R3, R0, #1
;__Lib_MathDouble.c, 753 :: 		
0x2496	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 754 :: 		
0x2498	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 755 :: 		
0x249A	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 757 :: 		
0x249E	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 759 :: 		
0x24A2	0xE03B    BEQ	__me_lab_end
;__Lib_MathDouble.c, 761 :: 		
0x24A4	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 762 :: 		
0x24A6	0xD035    BEQ	__me_ovfl
;__Lib_MathDouble.c, 764 :: 		
0x24A8	0xEA5F2402  LSLS	R4, R2, #8
;__Lib_MathDouble.c, 765 :: 		
0x24AC	0xEA5F0542  LSLS	R5, R2, #1
;__Lib_MathDouble.c, 766 :: 		
0x24B0	0xEA5F6515  LSRS	R5, R5, #24
;__Lib_MathDouble.c, 767 :: 		
0x24B4	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 769 :: 		
0x24B6	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 770 :: 		
0x24BA	0xF04F40FF  MOVEQ	R0, #2139095040
;__Lib_MathDouble.c, 771 :: 		
0x24BE	0x4330    ORREQ	R0, R6
;__Lib_MathDouble.c, 773 :: 		
0x24C0	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 775 :: 		
0x24C2	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 776 :: 		
0x24C4	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 778 :: 		
0x24C6	0x1B5B    SUBS	R3, R3, R5
;__Lib_MathDouble.c, 781 :: 		
0x24C8	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 782 :: 		
0x24CA	0x2720    MOVS	R7, #32
;__Lib_MathDouble.c, 783 :: 		
0x24CC	0x0864    LSRS	R4, R4, #1
;__Lib_MathDouble.c, 784 :: 		
0x24CE	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 786 :: 		
__me_fdiv_:
;__Lib_MathDouble.c, 788 :: 		
0x24D0	0x42A1    CMP	R1, R4
;__Lib_MathDouble.c, 790 :: 		
0x24D2	0xEB400000  ADC	R0, R0, R0, LSL #0
;__Lib_MathDouble.c, 791 :: 		
0x24D6	0xBF28    IT	CS
;__Lib_MathDouble.c, 792 :: 		
0x24D8	0x1B09    SUBCS	R1, R1, R4
;__Lib_MathDouble.c, 793 :: 		
0x24DA	0x1E7F    SUBS	R7, R7, #1
;__Lib_MathDouble.c, 794 :: 		
0x24DC	0xD004    BEQ	__me_flb1_
;__Lib_MathDouble.c, 795 :: 		
0x24DE	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 796 :: 		
0x24E0	0xBF18    IT	NE
;__Lib_MathDouble.c, 797 :: 		
0x24E2	0x0049    LSLNE	R1, R1, #1
;__Lib_MathDouble.c, 798 :: 		
0x24E4	0xD1F4    BNE	__me_fdiv_
;__Lib_MathDouble.c, 800 :: 		
0x24E6	0x40B8    LSLS	R0, R7
;__Lib_MathDouble.c, 802 :: 		
__me_flb1_:
0x24E8	0xF0104F00  TST	R0, #-2147483648
;__Lib_MathDouble.c, 803 :: 		
0x24EC	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 804 :: 		
0x24EE	0x0040    LSLEQ	R0, R0, #1
;__Lib_MathDouble.c, 805 :: 		
0x24F0	0xF1B30301  SUBSEQ	R3, R3, #1
;__Lib_MathDouble.c, 807 :: 		
0x24F4	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 808 :: 		
0x24F6	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 809 :: 		
0x24F8	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 810 :: 		
0x24FA	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 812 :: 		
__me_flb2_:
0x24FC	0x337F    ADDS	R3, #127
;__Lib_MathDouble.c, 813 :: 		
0x24FE	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 814 :: 		
0x2500	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 816 :: 		
0x2504	0xE00A    BLE	__me_lab_end
;__Lib_MathDouble.c, 818 :: 		
0x2506	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 819 :: 		
0x2508	0xD204    BCS	__me_ovfl
;__Lib_MathDouble.c, 821 :: 		
0x250A	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 822 :: 		
0x250C	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 823 :: 		
0x2510	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 826 :: 		
0x2512	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 828 :: 		
__me_ovfl:
0x2514	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 829 :: 		
0x2516	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 830 :: 		
0x2518	0xEA560007  ORRS	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 831 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 832 :: 		
0x251C	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 834 :: 		
L_end__Div_FP:
0x2520	0xB001    ADD	SP, SP, #4
0x2522	0x4770    BX	LR
; end of __Div_FP
__Sub_FP:
;__Lib_MathDouble.c, 539 :: 		
0x22F0	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 541 :: 		
0x22F2	0xF0824200  EOR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 542 :: 		
0x22F6	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 544 :: 		
0x22FA	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 545 :: 		
0x22FE	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 546 :: 		
0x2302	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 547 :: 		
0x2304	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 549 :: 		
0x2306	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 550 :: 		
0x2308	0xBF18    IT	NE
;__Lib_MathDouble.c, 551 :: 		
0x230A	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 553 :: 		
0x230E	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 555 :: 		
__me_lab1:
0x2310	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 557 :: 		
0x2314	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 559 :: 		
0x2316	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 561 :: 		
0x2318	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 562 :: 		
0x231C	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 563 :: 		
0x231E	0xBF48    IT	MI
;__Lib_MathDouble.c, 564 :: 		
0x2320	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 566 :: 		
0x2322	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 567 :: 		
0x2326	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 568 :: 		
0x232A	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 569 :: 		
0x232C	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 571 :: 		
0x232E	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 572 :: 		
0x2330	0xBF14    ITE	NE
;__Lib_MathDouble.c, 573 :: 		
0x2332	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 574 :: 		
0x2336	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 576 :: 		
0x2338	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 578 :: 		
__me_lab2:
0x233A	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 580 :: 		
0x233E	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 581 :: 		
0x2340	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 583 :: 		
0x2342	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 584 :: 		
0x2346	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 585 :: 		
0x2348	0xBF48    IT	MI
;__Lib_MathDouble.c, 586 :: 		
0x234A	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 588 :: 		
0x234C	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 589 :: 		
0x234E	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 590 :: 		
0x2350	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 591 :: 		
0x2352	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 592 :: 		
0x2354	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 593 :: 		
0x2356	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 594 :: 		
0x2358	0xBF48    IT	MI
;__Lib_MathDouble.c, 595 :: 		
0x235A	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 597 :: 		
0x235C	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 598 :: 		
0x235E	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 599 :: 		
0x2360	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 600 :: 		
0x2364	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 601 :: 		
0x2366	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 602 :: 		
0x236A	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 603 :: 		
0x236C	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 604 :: 		
0x2370	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 606 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 607 :: 		
0x2374	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 608 :: 		
0x2376	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 609 :: 		
0x2378	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 611 :: 		
0x237C	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 612 :: 		
0x237E	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 613 :: 		
0x2380	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 614 :: 		
0x2382	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 615 :: 		
0x2386	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 617 :: 		
__me_loop:
0x238A	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 618 :: 		
0x238E	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 619 :: 		
0x2390	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 621 :: 		
0x2392	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 622 :: 		
0x2396	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 623 :: 		
0x2398	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 624 :: 		
0x239C	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 625 :: 		
0x23A0	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 626 :: 		
0x23A2	0xBF28    IT	CS
;__Lib_MathDouble.c, 627 :: 		
0x23A4	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 628 :: 		
0x23A6	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 629 :: 		
0x23AA	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 630 :: 		
0x23AE	0xBF08    IT	EQ
;__Lib_MathDouble.c, 631 :: 		
0x23B0	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 633 :: 		
__me_no_round:
;__Lib_MathDouble.c, 634 :: 		
0x23B4	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 635 :: 		
0x23B6	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 636 :: 		
0x23B8	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 638 :: 		
0x23BC	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 639 :: 		
0x23BE	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 640 :: 		
0x23C0	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 642 :: 		
0x23C2	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 643 :: 		
0x23C6	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 645 :: 		
0x23CA	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 646 :: 		
0x23CE	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 647 :: 		
0x23D2	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 650 :: 		
0x23D6	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 652 :: 		
__me_ovfl1:
0x23D8	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 653 :: 		
__me_ovfl0:
0x23DA	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 654 :: 		
__me_ovfl:
0x23DE	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 655 :: 		
0x23E2	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 656 :: 		
0x23E4	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 657 :: 		
0x23E8	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 658 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 659 :: 		
0x23EA	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 661 :: 		
L_end__Sub_FP:
0x23EE	0xB001    ADD	SP, SP, #4
0x23F0	0x4770    BX	LR
; end of __Sub_FP
_spi_read_fifo:
;driverrf4463pro.c, 935 :: 		void spi_read_fifo( void ) {
0x2420	0xB082    SUB	SP, SP, #8
0x2422	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 938 :: 		i = 0;
; i start address is: 0 (R0)
0x2426	0x2000    MOVS	R0, #0
; i end address is: 0 (R0)
;driverrf4463pro.c, 939 :: 		while ( i != 0xFF ) {
L_spi_read_fifo140:
; i start address is: 0 (R0)
0x2428	0xF1B00FFF  CMP	R0, #255
0x242C	0xD002    BEQ	L_spi_read_fifo141
; i end address is: 0 (R0)
;driverrf4463pro.c, 940 :: 		i = check_cts();                   // Check if you can send Command
0x242E	0xF7FDFFE5  BL	_check_cts+0
; i start address is: 0 (R0)
;driverrf4463pro.c, 941 :: 		}
; i end address is: 0 (R0)
0x2432	0xE7F9    B	L_spi_read_fifo140
L_spi_read_fifo141:
;driverrf4463pro.c, 943 :: 		nSEL = 1;
0x2434	0x2101    MOVS	R1, #1
0x2436	0xB249    SXTB	R1, R1
0x2438	0x480F    LDR	R0, [PC, #60]
0x243A	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 944 :: 		nSEL = 0;
0x243C	0x2100    MOVS	R1, #0
0x243E	0xB249    SXTB	R1, R1
0x2440	0x480D    LDR	R0, [PC, #52]
0x2442	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 945 :: 		ucRf4463SPIByte( READ_RX_FIFO );
0x2444	0x2077    MOVS	R0, #119
0x2446	0xF7FFFC49  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 946 :: 		for ( i = 0; i < payload_length; i++ ) {
; i start address is: 12 (R3)
0x244A	0x2300    MOVS	R3, #0
; i end address is: 12 (R3)
L_spi_read_fifo142:
; i start address is: 12 (R3)
0x244C	0x2B42    CMP	R3, #66
0x244E	0xD20A    BCS	L_spi_read_fifo143
;driverrf4463pro.c, 947 :: 		rx_buf[ i ] = ucRf4463SPIByte( 0xFF );      // Receive 10 test data
0x2450	0x480A    LDR	R0, [PC, #40]
0x2452	0x18C0    ADDS	R0, R0, R3
0x2454	0x9001    STR	R0, [SP, #4]
0x2456	0x20FF    MOVS	R0, #255
0x2458	0xF7FFFC40  BL	_ucRf4463SPIByte+0
0x245C	0x9901    LDR	R1, [SP, #4]
0x245E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 946 :: 		for ( i = 0; i < payload_length; i++ ) {
0x2460	0x1C5B    ADDS	R3, R3, #1
0x2462	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 948 :: 		}
; i end address is: 12 (R3)
0x2464	0xE7F2    B	L_spi_read_fifo142
L_spi_read_fifo143:
;driverrf4463pro.c, 949 :: 		nSEL = 1;
0x2466	0x2101    MOVS	R1, #1
0x2468	0xB249    SXTB	R1, R1
0x246A	0x4803    LDR	R0, [PC, #12]
0x246C	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 950 :: 		}
L_end_spi_read_fifo:
0x246E	0xF8DDE000  LDR	LR, [SP, #0]
0x2472	0xB002    ADD	SP, SP, #8
0x2474	0x4770    BX	LR
0x2476	0xBF00    NOP
0x2478	0x81B04221  	GPIOB_ODRbits+0
0x247C	0x22B82000  	_rx_buf+0
; end of _spi_read_fifo
_getRSSI:
;DriverRF4463PROMain.c, 897 :: 		void getRSSI()
0x2524	0xB086    SUB	SP, SP, #24
0x2526	0xF8CDE000  STR	LR, [SP, #0]
;DriverRF4463PROMain.c, 899 :: 		ShortToStr(rssi,Value );
0x252A	0x4819    LDR	R0, [PC, #100]
0x252C	0x6800    LDR	R0, [R0, #0]
0x252E	0xF7FEFE6F  BL	__FloatToSignedIntegral+0
0x2532	0xB240    SXTB	R0, R0
0x2534	0x4917    LDR	R1, [PC, #92]
0x2536	0xF7FEFE8D  BL	_ShortToStr+0
;DriverRF4463PROMain.c, 900 :: 		UART1_Write_Text("[ RSSI ] = ");
0x253A	0xF10D0B04  ADD	R11, SP, #4
0x253E	0xF10B0A0C  ADD	R10, R11, #12
0x2542	0xF8DFC054  LDR	R12, [PC, #84]
0x2546	0xF000F95F  BL	___CC2DW+0
0x254A	0xA801    ADD	R0, SP, #4
0x254C	0xF000FA20  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 901 :: 		UART1_Write_Text( Value );
0x2550	0x4810    LDR	R0, [PC, #64]
0x2552	0xF000FA1D  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 902 :: 		UART1_Write_Text(" dBm\r\n");
0x2556	0x2020    MOVS	R0, #32
0x2558	0xF88D0010  STRB	R0, [SP, #16]
0x255C	0x2064    MOVS	R0, #100
0x255E	0xF88D0011  STRB	R0, [SP, #17]
0x2562	0x2042    MOVS	R0, #66
0x2564	0xF88D0012  STRB	R0, [SP, #18]
0x2568	0x206D    MOVS	R0, #109
0x256A	0xF88D0013  STRB	R0, [SP, #19]
0x256E	0x200D    MOVS	R0, #13
0x2570	0xF88D0014  STRB	R0, [SP, #20]
0x2574	0x200A    MOVS	R0, #10
0x2576	0xF88D0015  STRB	R0, [SP, #21]
0x257A	0x2000    MOVS	R0, #0
0x257C	0xF88D0016  STRB	R0, [SP, #22]
0x2580	0xA804    ADD	R0, SP, #16
0x2582	0xF000FA05  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 903 :: 		}
L_end_getRSSI:
0x2586	0xF8DDE000  LDR	LR, [SP, #0]
0x258A	0xB006    ADD	SP, SP, #24
0x258C	0x4770    BX	LR
0x258E	0xBF00    NOP
0x2590	0x22B02000  	_rssi+0
0x2594	0x22B42000  	_Value+0
0x2598	0x672E0000  	?ICS?lstr9_DriverRF4463PROMain+0
; end of _getRSSI
__FloatToSignedIntegral:
;__Lib_MathDouble.c, 4 :: 		
0x1210	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 6 :: 		
0x1212	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 8 :: 		
0x1214	0xEA4F0240  LSL	R2, R0, #1
;__Lib_MathDouble.c, 9 :: 		
0x1218	0xEA4F6212  LSR	R2, R2, #24
;__Lib_MathDouble.c, 11 :: 		
0x121C	0x3A7F    SUBS	R2, #127
;__Lib_MathDouble.c, 12 :: 		
0x121E	0xBF44    ITT	MI
;__Lib_MathDouble.c, 13 :: 		
0x1220	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 15 :: 		
0x1224	0xE011    BMI	__me_lab_end
;__Lib_MathDouble.c, 17 :: 		
0x1226	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 18 :: 		
0x122A	0xD909    BLS	__me_ovfl
;__Lib_MathDouble.c, 20 :: 		
0x122C	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 21 :: 		
0x1230	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 23 :: 		
0x1234	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 25 :: 		
0x1236	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 26 :: 		
0x1238	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 27 :: 		
0x123A	0x4248    RSBMI	R0, R1, #0
;__Lib_MathDouble.c, 28 :: 		
0x123C	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 31 :: 		
0x123E	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 33 :: 		
__me_ovfl:
0x1240	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 34 :: 		
0x1242	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 35 :: 		
0x1246	0xBF58    IT	PL
;__Lib_MathDouble.c, 36 :: 		
0x1248	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 37 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 38 :: 		
0x124A	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 40 :: 		
L_end__FloatToSignedIntegral:
0x124E	0xB001    ADD	SP, SP, #4
0x1250	0x4770    BX	LR
; end of __FloatToSignedIntegral
_ShortToStr:
;__Lib_Conversions.c, 147 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x1254	0xB081    SUB	SP, SP, #4
0x1256	0xF8CDE000  STR	LR, [SP, #0]
0x125A	0x460E    MOV	R6, R1
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
; output start address is: 24 (R6)
;__Lib_Conversions.c, 152 :: 		
; negative start address is: 4 (R1)
0x125C	0x2100    MOVS	R1, #0
;__Lib_Conversions.c, 153 :: 		
0x125E	0xB242    SXTB	R2, R0
0x1260	0xB292    UXTH	R2, R2
; inbyte start address is: 12 (R3)
0x1262	0xB293    UXTH	R3, R2
;__Lib_Conversions.c, 154 :: 		
0x1264	0x2800    CMP	R0, #0
0x1266	0xDA05    BGE	L__ShortToStr414
; inbyte end address is: 12 (R3)
;__Lib_Conversions.c, 155 :: 		
0x1268	0x1C49    ADDS	R1, R1, #1
0x126A	0xB289    UXTH	R1, R1
;__Lib_Conversions.c, 156 :: 		
0x126C	0x4240    RSBS	R0, R0, #0
0x126E	0xB280    UXTH	R0, R0
; input end address is: 0 (R0)
; inbyte start address is: 0 (R0)
; negative end address is: 4 (R1)
; inbyte end address is: 0 (R0)
0x1270	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 157 :: 		
0x1272	0xE001    B	L_ShortToStr22
L__ShortToStr414:
;__Lib_Conversions.c, 154 :: 		
0x1274	0xB298    UXTH	R0, R3
0x1276	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 157 :: 		
L_ShortToStr22:
;__Lib_Conversions.c, 158 :: 		
; inbyte start address is: 0 (R0)
; negative start address is: 28 (R7)
0x1278	0x4631    MOV	R1, R6
0x127A	0xB2C0    UXTB	R0, R0
; inbyte end address is: 0 (R0)
0x127C	0xF7FFFE04  BL	_ByteToStr+0
;__Lib_Conversions.c, 160 :: 		
; i start address is: 4 (R1)
0x1280	0x2104    MOVS	R1, #4
; output end address is: 24 (R6)
; negative end address is: 28 (R7)
; i end address is: 4 (R1)
0x1282	0x4634    MOV	R4, R6
0x1284	0xB2B8    UXTH	R0, R7
;__Lib_Conversions.c, 161 :: 		
L_ShortToStr23:
; i start address is: 4 (R1)
; negative start address is: 0 (R0)
; output start address is: 16 (R4)
0x1286	0x2900    CMP	R1, #0
0x1288	0xD908    BLS	L_ShortToStr24
;__Lib_Conversions.c, 162 :: 		
0x128A	0x1863    ADDS	R3, R4, R1
0x128C	0x1E4A    SUBS	R2, R1, #1
0x128E	0xB292    UXTH	R2, R2
0x1290	0x18A2    ADDS	R2, R4, R2
0x1292	0x7812    LDRB	R2, [R2, #0]
0x1294	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 163 :: 		
0x1296	0x1E49    SUBS	R1, R1, #1
0x1298	0xB289    UXTH	R1, R1
;__Lib_Conversions.c, 164 :: 		
; i end address is: 4 (R1)
0x129A	0xE7F4    B	L_ShortToStr23
L_ShortToStr24:
;__Lib_Conversions.c, 165 :: 		
0x129C	0x2220    MOVS	R2, #32
0x129E	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 166 :: 		
0x12A0	0xB170    CBZ	R0, L_ShortToStr25
; negative end address is: 0 (R0)
;__Lib_Conversions.c, 167 :: 		
; i start address is: 0 (R0)
0x12A2	0x2000    MOVS	R0, #0
; output end address is: 16 (R4)
; i end address is: 0 (R0)
0x12A4	0xB281    UXTH	R1, R0
0x12A6	0x4620    MOV	R0, R4
;__Lib_Conversions.c, 168 :: 		
L_ShortToStr26:
; i start address is: 4 (R1)
; output start address is: 0 (R0)
0x12A8	0x1842    ADDS	R2, R0, R1
0x12AA	0x7812    LDRB	R2, [R2, #0]
0x12AC	0x2A20    CMP	R2, #32
0x12AE	0xD102    BNE	L_ShortToStr27
;__Lib_Conversions.c, 169 :: 		
0x12B0	0x1C49    ADDS	R1, R1, #1
0x12B2	0xB289    UXTH	R1, R1
0x12B4	0xE7F8    B	L_ShortToStr26
L_ShortToStr27:
;__Lib_Conversions.c, 170 :: 		
0x12B6	0x1E4A    SUBS	R2, R1, #1
0x12B8	0xB292    UXTH	R2, R2
; i end address is: 4 (R1)
;__Lib_Conversions.c, 171 :: 		
0x12BA	0x1883    ADDS	R3, R0, R2
; output end address is: 0 (R0)
0x12BC	0x222D    MOVS	R2, #45
0x12BE	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 172 :: 		
L_ShortToStr25:
;__Lib_Conversions.c, 173 :: 		
L_end_ShortToStr:
0x12C0	0xF8DDE000  LDR	LR, [SP, #0]
0x12C4	0xB001    ADD	SP, SP, #4
0x12C6	0x4770    BX	LR
; end of _ShortToStr
_ByteToStr:
;__Lib_Conversions.c, 82 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x0E88	0xB081    SUB	SP, SP, #4
0x0E8A	0x460A    MOV	R2, R1
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 85 :: 		
; DigitPos start address is: 4 (R1)
0x0E8C	0x2100    MOVS	R1, #0
; input end address is: 0 (R0)
; output end address is: 8 (R2)
; DigitPos end address is: 4 (R1)
0x0E8E	0xB2C5    UXTB	R5, R0
0x0E90	0x4610    MOV	R0, R2
L_ByteToStr0:
; DigitPos start address is: 4 (R1)
; output start address is: 0 (R0)
; input start address is: 20 (R5)
0x0E92	0x2903    CMP	R1, #3
0x0E94	0xD205    BCS	L_ByteToStr1
;__Lib_Conversions.c, 86 :: 		
0x0E96	0x1843    ADDS	R3, R0, R1
0x0E98	0x2220    MOVS	R2, #32
0x0E9A	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 85 :: 		
0x0E9C	0x1C49    ADDS	R1, R1, #1
0x0E9E	0xB2C9    UXTB	R1, R1
;__Lib_Conversions.c, 86 :: 		
0x0EA0	0xE7F7    B	L_ByteToStr0
L_ByteToStr1:
;__Lib_Conversions.c, 88 :: 		
0x0EA2	0x1843    ADDS	R3, R0, R1
0x0EA4	0x2200    MOVS	R2, #0
0x0EA6	0x701A    STRB	R2, [R3, #0]
0x0EA8	0x1E49    SUBS	R1, R1, #1
0x0EAA	0xB2C9    UXTB	R1, R1
; output end address is: 0 (R0)
; DigitPos end address is: 4 (R1)
;__Lib_Conversions.c, 90 :: 		
L_ByteToStr3:
;__Lib_Conversions.c, 91 :: 		
; DigitPos start address is: 4 (R1)
; input start address is: 20 (R5)
; output start address is: 0 (R0)
0x0EAC	0x1844    ADDS	R4, R0, R1
0x0EAE	0x230A    MOVS	R3, #10
0x0EB0	0xFBB5F2F3  UDIV	R2, R5, R3
0x0EB4	0xFB035212  MLS	R2, R3, R2, R5
0x0EB8	0xB2D2    UXTB	R2, R2
0x0EBA	0x3230    ADDS	R2, #48
0x0EBC	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 92 :: 		
0x0EBE	0x220A    MOVS	R2, #10
0x0EC0	0xFBB5F2F2  UDIV	R2, R5, R2
0x0EC4	0xB2D2    UXTB	R2, R2
0x0EC6	0xB2D5    UXTB	R5, R2
; input end address is: 20 (R5)
;__Lib_Conversions.c, 93 :: 		
0x0EC8	0xB902    CBNZ	R2, L_ByteToStr5
; output end address is: 0 (R0)
; input end address is: 20 (R5)
; DigitPos end address is: 4 (R1)
;__Lib_Conversions.c, 94 :: 		
0x0ECA	0xE002    B	L_ByteToStr4
L_ByteToStr5:
;__Lib_Conversions.c, 95 :: 		
; DigitPos start address is: 4 (R1)
; input start address is: 20 (R5)
; output start address is: 0 (R0)
0x0ECC	0x1E49    SUBS	R1, R1, #1
0x0ECE	0xB2C9    UXTB	R1, R1
;__Lib_Conversions.c, 96 :: 		
; output end address is: 0 (R0)
; input end address is: 20 (R5)
; DigitPos end address is: 4 (R1)
0x0ED0	0xE7EC    B	L_ByteToStr3
L_ByteToStr4:
;__Lib_Conversions.c, 97 :: 		
L_end_ByteToStr:
0x0ED2	0xB001    ADD	SP, SP, #4
0x0ED4	0x4770    BX	LR
; end of _ByteToStr
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 391 :: 		
0x390C	0xB081    SUB	SP, SP, #4
0x390E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 395 :: 		
; ulRCC_CR start address is: 8 (R2)
0x3912	0x4A4A    LDR	R2, [PC, #296]
;__Lib_System_105_107.c, 396 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x3914	0x4B4A    LDR	R3, [PC, #296]
;__Lib_System_105_107.c, 397 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x3916	0x4C4B    LDR	R4, [PC, #300]
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 20 (R5)
0x3918	0x4D4B    LDR	R5, [PC, #300]
;__Lib_System_105_107.c, 407 :: 		
0x391A	0xF00300F0  AND	R0, R3, #240
;__Lib_System_105_107.c, 408 :: 		
0x391E	0x0901    LSRS	R1, R0, #4
;__Lib_System_105_107.c, 409 :: 		
0x3920	0x484A    LDR	R0, [PC, #296]
0x3922	0x1840    ADDS	R0, R0, R1
0x3924	0x7800    LDRB	R0, [R0, #0]
; presc start address is: 0 (R0)
;__Lib_System_105_107.c, 411 :: 		
0x3926	0xFA05F100  LSL	R1, R5, R0
; Fosc_kHz end address is: 20 (R5)
; presc end address is: 0 (R0)
; SYS_clk start address is: 20 (R5)
0x392A	0x460D    MOV	R5, R1
;__Lib_System_105_107.c, 413 :: 		
0x392C	0xF64B3080  MOVW	R0, #48000
0x3930	0x4281    CMP	R1, R0
0x3932	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; SYS_clk end address is: 20 (R5)
;__Lib_System_105_107.c, 414 :: 		
0x3934	0x4846    LDR	R0, [PC, #280]
0x3936	0x6800    LDR	R0, [R0, #0]
0x3938	0xF0400102  ORR	R1, R0, #2
0x393C	0x4844    LDR	R0, [PC, #272]
0x393E	0x6001    STR	R1, [R0, #0]
0x3940	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 415 :: 		
; SYS_clk start address is: 20 (R5)
0x3942	0xF64550C0  MOVW	R0, #24000
0x3946	0x4285    CMP	R5, R0
0x3948	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC236
; SYS_clk end address is: 20 (R5)
;__Lib_System_105_107.c, 416 :: 		
0x394A	0x4841    LDR	R0, [PC, #260]
0x394C	0x6800    LDR	R0, [R0, #0]
0x394E	0xF0400101  ORR	R1, R0, #1
0x3952	0x483F    LDR	R0, [PC, #252]
0x3954	0x6001    STR	R1, [R0, #0]
0x3956	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 418 :: 		
0x3958	0x483D    LDR	R0, [PC, #244]
0x395A	0x6801    LDR	R1, [R0, #0]
0x395C	0xF06F0007  MVN	R0, #7
0x3960	0x4001    ANDS	R1, R0
0x3962	0x483B    LDR	R0, [PC, #236]
0x3964	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC237:
L___Lib_System_105_107_InitialSetUpRCCRCC235:
;__Lib_System_105_107.c, 420 :: 		
0x3966	0xF7FEFC5F  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 422 :: 		
0x396A	0x483A    LDR	R0, [PC, #232]
0x396C	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 423 :: 		
0x396E	0x483A    LDR	R0, [PC, #232]
0x3970	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 424 :: 		
0x3972	0x483A    LDR	R0, [PC, #232]
0x3974	0xEA020100  AND	R1, R2, R0, LSL #0
0x3978	0x4839    LDR	R0, [PC, #228]
0x397A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 426 :: 		
0x397C	0xF0020001  AND	R0, R2, #1
0x3980	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x3982	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x3984	0x4836    LDR	R0, [PC, #216]
0x3986	0x6800    LDR	R0, [R0, #0]
0x3988	0xF0000002  AND	R0, R0, #2
0x398C	0x2800    CMP	R0, #0
0x398E	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC240
;__Lib_System_105_107.c, 428 :: 		
0x3990	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
L___Lib_System_105_107_InitialSetUpRCCRCC240:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x3992	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC238
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 426 :: 		
0x3994	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x3996	0xF4023080  AND	R0, R2, #65536
0x399A	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x399C	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 432 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x399E	0x4830    LDR	R0, [PC, #192]
0x39A0	0x6800    LDR	R0, [R0, #0]
0x39A2	0xF4003000  AND	R0, R0, #131072
0x39A6	0x2800    CMP	R0, #0
0x39A8	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC243
;__Lib_System_105_107.c, 433 :: 		
0x39AA	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
L___Lib_System_105_107_InitialSetUpRCCRCC243:
;__Lib_System_105_107.c, 434 :: 		
; ulRCC_CR end address is: 8 (R2)
0x39AC	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC241
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 431 :: 		
0x39AE	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 434 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 436 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x39B0	0xF0025080  AND	R0, R2, #268435456
0x39B4	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 437 :: 		
0x39B6	0x482A    LDR	R0, [PC, #168]
0x39B8	0x6800    LDR	R0, [R0, #0]
0x39BA	0xF0405180  ORR	R1, R0, #268435456
0x39BE	0x4828    LDR	R0, [PC, #160]
0x39C0	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 438 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x39C2	0x4827    LDR	R0, [PC, #156]
0x39C4	0x6800    LDR	R0, [R0, #0]
0x39C6	0xF0005000  AND	R0, R0, #536870912
0x39CA	0x2800    CMP	R0, #0
0x39CC	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC246
;__Lib_System_105_107.c, 439 :: 		
0x39CE	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
L___Lib_System_105_107_InitialSetUpRCCRCC246:
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CR end address is: 8 (R2)
0x39D0	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC244
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 436 :: 		
;__Lib_System_105_107.c, 440 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 442 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x39D2	0xF0026080  AND	R0, R2, #67108864
0x39D6	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC258
;__Lib_System_105_107.c, 443 :: 		
0x39D8	0x4821    LDR	R0, [PC, #132]
0x39DA	0x6800    LDR	R0, [R0, #0]
0x39DC	0xF0406180  ORR	R1, R0, #67108864
0x39E0	0x481F    LDR	R0, [PC, #124]
0x39E2	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x39E4	0x4611    MOV	R1, R2
0x39E6	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 444 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x39E8	0x481D    LDR	R0, [PC, #116]
0x39EA	0x6800    LDR	R0, [R0, #0]
0x39EC	0xF0006000  AND	R0, R0, #134217728
0x39F0	0x2800    CMP	R0, #0
0x39F2	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC249
;__Lib_System_105_107.c, 445 :: 		
0x39F4	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
L___Lib_System_105_107_InitialSetUpRCCRCC249:
;__Lib_System_105_107.c, 446 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x39F6	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC247
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC258:
;__Lib_System_105_107.c, 442 :: 		
0x39F8	0x4611    MOV	R1, R2
0x39FA	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 446 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 448 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x39FC	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x3A00	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC259
;__Lib_System_105_107.c, 449 :: 		
0x3A02	0x4817    LDR	R0, [PC, #92]
0x3A04	0x6800    LDR	R0, [R0, #0]
0x3A06	0xF0407180  ORR	R1, R0, #16777216
0x3A0A	0x4815    LDR	R0, [PC, #84]
0x3A0C	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x3A0E	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 450 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 4 (R1)
0x3A10	0x4813    LDR	R0, [PC, #76]
0x3A12	0x6800    LDR	R0, [R0, #0]
0x3A14	0xF0007000  AND	R0, R0, #33554432
0x3A18	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 451 :: 		
0x3A1A	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 452 :: 		
0x3A1C	0x460A    MOV	R2, R1
0x3A1E	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC250
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC259:
;__Lib_System_105_107.c, 448 :: 		
;__Lib_System_105_107.c, 452 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 456 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
; ulRCC_CFGR start address is: 8 (R2)
0x3A20	0x480C    LDR	R0, [PC, #48]
0x3A22	0x6800    LDR	R0, [R0, #0]
0x3A24	0xF000010C  AND	R1, R0, #12
0x3A28	0x0090    LSLS	R0, R2, #2
0x3A2A	0xF000000C  AND	R0, R0, #12
0x3A2E	0x4281    CMP	R1, R0
0x3A30	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC254
;__Lib_System_105_107.c, 457 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x3A32	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC253
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 458 :: 		
L_end_InitialSetUpRCCRCC2:
0x3A34	0xF8DDE000  LDR	LR, [SP, #0]
0x3A38	0xB001    ADD	SP, SP, #4
0x3A3A	0x4770    BX	LR
0x3A3C	0x00810101  	#16842881
0x3A40	0x0402001D  	#1901570
0x3A44	0x00000000  	#0
0x3A48	0x19400001  	#72000
0x3A4C	0x67100000  	__Lib_System_105_107_APBAHBPrescTable+0
0x3A50	0x20004002  	FLASH_ACR+0
0x3A54	0x10044002  	RCC_CFGR+0
0x3A58	0x102C4002  	RCC_CFGR2+0
0x3A5C	0xFFFF000F  	#1048575
0x3A60	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 360 :: 		
0x2228	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 363 :: 		
0x222A	0x4815    LDR	R0, [PC, #84]
0x222C	0x6800    LDR	R0, [R0, #0]
0x222E	0xF0400101  ORR	R1, R0, #1
0x2232	0x4813    LDR	R0, [PC, #76]
0x2234	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 366 :: 		
0x2236	0x4913    LDR	R1, [PC, #76]
0x2238	0x4813    LDR	R0, [PC, #76]
0x223A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 369 :: 		
0x223C	0x4810    LDR	R0, [PC, #64]
0x223E	0x6801    LDR	R1, [R0, #0]
0x2240	0x4812    LDR	R0, [PC, #72]
0x2242	0x4001    ANDS	R1, R0
0x2244	0x480E    LDR	R0, [PC, #56]
0x2246	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 372 :: 		
0x2248	0x480D    LDR	R0, [PC, #52]
0x224A	0x6801    LDR	R1, [R0, #0]
0x224C	0xF46F2080  MVN	R0, #262144
0x2250	0x4001    ANDS	R1, R0
0x2252	0x480B    LDR	R0, [PC, #44]
0x2254	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 375 :: 		
0x2256	0x480C    LDR	R0, [PC, #48]
0x2258	0x6801    LDR	R1, [R0, #0]
0x225A	0xF46F00FE  MVN	R0, #8323072
0x225E	0x4001    ANDS	R1, R0
0x2260	0x4809    LDR	R0, [PC, #36]
0x2262	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 378 :: 		
0x2264	0x4806    LDR	R0, [PC, #24]
0x2266	0x6801    LDR	R1, [R0, #0]
0x2268	0xF06F50A0  MVN	R0, #335544320
0x226C	0x4001    ANDS	R1, R0
0x226E	0x4804    LDR	R0, [PC, #16]
0x2270	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
0x2272	0xF04F0100  MOV	R1, #0
0x2276	0x4806    LDR	R0, [PC, #24]
0x2278	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 385 :: 		
L_end_SystemClockSetDefault:
0x227A	0xB001    ADD	SP, SP, #4
0x227C	0x4770    BX	LR
0x227E	0xBF00    NOP
0x2280	0x10004002  	RCC_CR+0
0x2284	0x0000F0FF  	#-251723776
0x2288	0x10044002  	RCC_CFGR+0
0x228C	0xFFFFFEF6  	#-17367041
0x2290	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 460 :: 		
0x3A64	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 461 :: 		
0x3A66	0x4902    LDR	R1, [PC, #8]
0x3A68	0x4802    LDR	R0, [PC, #8]
0x3A6A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 462 :: 		
L_end_InitialSetUpFosc:
0x3A6C	0xB001    ADD	SP, SP, #4
0x3A6E	0x4770    BX	LR
0x3A70	0x19400001  	#72000
0x3A74	0x23002000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 311 :: 		
0x3ACC	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 312 :: 		
L___GenExcept30:
0x3ACE	0xE7FE    B	L___GenExcept30
;__Lib_System_105_107.c, 313 :: 		
L_end___GenExcept:
0x3AD0	0xB001    ADD	SP, SP, #4
0x3AD2	0x4770    BX	LR
; end of ___GenExcept
0x6764	0xB500    PUSH	(R14)
0x6766	0xF8DFB014  LDR	R11, [PC, #20]
0x676A	0xF8DFA014  LDR	R10, [PC, #20]
0x676E	0xF8DFC014  LDR	R12, [PC, #20]
0x6772	0xF7FCF849  BL	10248
0x6776	0xBD00    POP	(R15)
0x6778	0x4770    BX	LR
0x677A	0xBF00    NOP
0x677C	0x00002000  	#536870912
0x6780	0x22942000  	#536879764
0x6784	0x3AD40000  	#15060
0x67E4	0xB500    PUSH	(R14)
0x67E6	0xF8DFB010  LDR	R11, [PC, #16]
0x67EA	0xF8DFA010  LDR	R10, [PC, #16]
0x67EE	0xF7FBFFED  BL	10188
0x67F2	0xBD00    POP	(R15)
0x67F4	0x4770    BX	LR
0x67F6	0xBF00    NOP
0x67F8	0x00002000  	#536870912
0x67FC	0x23282000  	#536879912
_DMA1Ch4_interrupt:
;uarthandler.c, 121 :: 		void DMA1Ch4_interrupt() iv IVT_INT_DMA1_Channel4 ics ICS_AUTO {
;uarthandler.c, 123 :: 		if ( DMA1_ISRbits.TEIF4 ) {         // TRANSFER ERROR INTERRUPT FLAG
0x3A78	0x480D    LDR	R0, [PC, #52]
0x3A7A	0x6800    LDR	R0, [R0, #0]
0x3A7C	0xB120    CBZ	R0, L_DMA1Ch4_interrupt192
;uarthandler.c, 124 :: 		DMA1_IFCRbits .CTEIF4 = 1;       // limpia el flag de error
0x3A7E	0x2101    MOVS	R1, #1
0x3A80	0xB249    SXTB	R1, R1
0x3A82	0x480C    LDR	R0, [PC, #48]
0x3A84	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 126 :: 		}
0x3A86	0xE012    B	L_DMA1Ch4_interrupt193
L_DMA1Ch4_interrupt192:
;uarthandler.c, 127 :: 		else if ( DMA1_ISRbits.HTIF4 ) {
0x3A88	0x480B    LDR	R0, [PC, #44]
0x3A8A	0x6800    LDR	R0, [R0, #0]
0x3A8C	0xB120    CBZ	R0, L_DMA1Ch4_interrupt194
;uarthandler.c, 128 :: 		DMA1_IFCRbits.CHTIF4 = 1;
0x3A8E	0x2101    MOVS	R1, #1
0x3A90	0xB249    SXTB	R1, R1
0x3A92	0x480A    LDR	R0, [PC, #40]
0x3A94	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 129 :: 		}
0x3A96	0xE00A    B	L_DMA1Ch4_interrupt195
L_DMA1Ch4_interrupt194:
;uarthandler.c, 130 :: 		else if ( DMA1_ISRbits.TCIF4 ) {     // TRANSFER COMPLETE INTERRUPT FLAG = envio el frame completo
0x3A98	0x4809    LDR	R0, [PC, #36]
0x3A9A	0x6800    LDR	R0, [R0, #0]
0x3A9C	0xB138    CBZ	R0, L_DMA1Ch4_interrupt196
;uarthandler.c, 131 :: 		DMA1_IFCRbits.CTCIF4 = 1;       // limpia TODOS LOS FLAGS DE DMA2 CANAL 2
0x3A9E	0x2101    MOVS	R1, #1
0x3AA0	0xB249    SXTB	R1, R1
0x3AA2	0x4808    LDR	R0, [PC, #32]
0x3AA4	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 132 :: 		DMA1_CCR4bits.EN = 0;            // EXPERIMENTAL PARA CAMBIAR EL VALOR DEL CONTADOR
0x3AA6	0x2100    MOVS	R1, #0
0x3AA8	0xB249    SXTB	R1, R1
0x3AAA	0x4807    LDR	R0, [PC, #28]
0x3AAC	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 134 :: 		}
L_DMA1Ch4_interrupt196:
L_DMA1Ch4_interrupt195:
L_DMA1Ch4_interrupt193:
;uarthandler.c, 135 :: 		}
L_end_DMA1Ch4_interrupt:
0x3AAE	0x4770    BX	LR
0x3AB0	0x003C4240  	DMA1_ISRbits+0
0x3AB4	0x00BC4240  	DMA1_IFCRbits+0
0x3AB8	0x00384240  	DMA1_ISRbits+0
0x3ABC	0x00B84240  	DMA1_IFCRbits+0
0x3AC0	0x00344240  	DMA1_ISRbits+0
0x3AC4	0x00B44240  	DMA1_IFCRbits+0
0x3AC8	0x08804240  	DMA1_CCR4bits+0
; end of _DMA1Ch4_interrupt
_vUARTISR:
;uarthandler.c, 167 :: 		void vUARTISR() iv IVT_INT_USART1 ics ICS_AUTO{
;uarthandler.c, 168 :: 		LED_BLUE =~ LED_BLUE;
0x32F0	0x4845    LDR	R0, [PC, #276]
0x32F2	0x6800    LDR	R0, [R0, #0]
0x32F4	0xF0800101  EOR	R1, R0, #1
0x32F8	0xB2C9    UXTB	R1, R1
0x32FA	0x4843    LDR	R0, [PC, #268]
0x32FC	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 170 :: 		if( USART1_SRbits.RXNE ){
0x32FE	0x4843    LDR	R0, [PC, #268]
0x3300	0x6800    LDR	R0, [R0, #0]
0x3302	0x2800    CMP	R0, #0
0x3304	0xF000807F  BEQ	L_vUARTISR197
;uarthandler.c, 171 :: 		ucData1 = USART1_DR;
0x3308	0x4841    LDR	R0, [PC, #260]
0x330A	0x6801    LDR	R1, [R0, #0]
0x330C	0x4841    LDR	R0, [PC, #260]
0x330E	0x7001    STRB	R1, [R0, #0]
;uarthandler.c, 172 :: 		if ( ucData1 != CHR_CR && ucData1 != CHR_LF && ulUSART1ByteReceived < BUFFER_MAX_USART ) {
0x3310	0x4840    LDR	R0, [PC, #256]
0x3312	0x7800    LDRB	R0, [R0, #0]
0x3314	0x280D    CMP	R0, #13
0x3316	0xF000804A  BEQ	L__vUARTISR428
0x331A	0x483E    LDR	R0, [PC, #248]
0x331C	0x7800    LDRB	R0, [R0, #0]
0x331E	0x280A    CMP	R0, #10
0x3320	0xF0008045  BEQ	L__vUARTISR427
0x3324	0x483C    LDR	R0, [PC, #240]
0x3326	0x6800    LDR	R0, [R0, #0]
0x3328	0xF5B05F80  CMP	R0, #4096
0x332C	0xF080803F  BCS	L__vUARTISR426
L__vUARTISR416:
;uarthandler.c, 175 :: 		ucData1 == CHR_s ||
0x3330	0x4838    LDR	R0, [PC, #224]
0x3332	0x7800    LDRB	R0, [R0, #0]
0x3334	0x2853    CMP	R0, #83
0x3336	0xD00C    BEQ	L__vUARTISR420
0x3338	0x4836    LDR	R0, [PC, #216]
0x333A	0x7800    LDRB	R0, [R0, #0]
0x333C	0x2873    CMP	R0, #115
0x333E	0xD008    BEQ	L__vUARTISR419
;uarthandler.c, 176 :: 		ucData1 == CHR_U ||
0x3340	0x4834    LDR	R0, [PC, #208]
0x3342	0x7800    LDRB	R0, [R0, #0]
0x3344	0x2855    CMP	R0, #85
0x3346	0xD004    BEQ	L__vUARTISR418
;uarthandler.c, 177 :: 		ucData1 == CHR_u ) &&
0x3348	0x4832    LDR	R0, [PC, #200]
0x334A	0x7800    LDRB	R0, [R0, #0]
0x334C	0x2875    CMP	R0, #117
0x334E	0xD000    BEQ	L__vUARTISR417
0x3350	0xE00F    B	L_vUARTISR205
;uarthandler.c, 175 :: 		ucData1 == CHR_s ||
L__vUARTISR420:
L__vUARTISR419:
;uarthandler.c, 176 :: 		ucData1 == CHR_U ||
L__vUARTISR418:
;uarthandler.c, 177 :: 		ucData1 == CHR_u ) &&
L__vUARTISR417:
;uarthandler.c, 178 :: 		ulUSART1ByteReceived == 0 ) {
0x3352	0x4831    LDR	R0, [PC, #196]
0x3354	0x6800    LDR	R0, [R0, #0]
0x3356	0xB960    CBNZ	R0, L__vUARTISR421
L__vUARTISR414:
;uarthandler.c, 179 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x3358	0x482F    LDR	R0, [PC, #188]
0x335A	0x6801    LDR	R1, [R0, #0]
0x335C	0x482F    LDR	R0, [PC, #188]
0x335E	0x1841    ADDS	R1, R0, R1
0x3360	0x482C    LDR	R0, [PC, #176]
0x3362	0x7800    LDRB	R0, [R0, #0]
0x3364	0x7008    STRB	R0, [R1, #0]
0x3366	0x482C    LDR	R0, [PC, #176]
0x3368	0x6800    LDR	R0, [R0, #0]
0x336A	0x1C41    ADDS	R1, R0, #1
0x336C	0x482A    LDR	R0, [PC, #168]
0x336E	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 180 :: 		}
0x3370	0xE01C    B	L_vUARTISR206
L_vUARTISR205:
;uarthandler.c, 178 :: 		ulUSART1ByteReceived == 0 ) {
L__vUARTISR421:
;uarthandler.c, 183 :: 		ucUSART1RXBuffer[ 0 ] == CHR_s ||
0x3372	0x482A    LDR	R0, [PC, #168]
0x3374	0x7800    LDRB	R0, [R0, #0]
0x3376	0x2853    CMP	R0, #83
0x3378	0xD00C    BEQ	L__vUARTISR425
0x337A	0x4828    LDR	R0, [PC, #160]
0x337C	0x7800    LDRB	R0, [R0, #0]
0x337E	0x2873    CMP	R0, #115
0x3380	0xD008    BEQ	L__vUARTISR424
;uarthandler.c, 184 :: 		ucUSART1RXBuffer[ 0 ] == CHR_U ||
0x3382	0x4826    LDR	R0, [PC, #152]
0x3384	0x7800    LDRB	R0, [R0, #0]
0x3386	0x2855    CMP	R0, #85
0x3388	0xD004    BEQ	L__vUARTISR423
;uarthandler.c, 185 :: 		ucUSART1RXBuffer[ 0 ] == CHR_u ) {
0x338A	0x4824    LDR	R0, [PC, #144]
0x338C	0x7800    LDRB	R0, [R0, #0]
0x338E	0x2875    CMP	R0, #117
0x3390	0xD000    BEQ	L__vUARTISR422
0x3392	0xE00B    B	L_vUARTISR209
;uarthandler.c, 183 :: 		ucUSART1RXBuffer[ 0 ] == CHR_s ||
L__vUARTISR425:
L__vUARTISR424:
;uarthandler.c, 184 :: 		ucUSART1RXBuffer[ 0 ] == CHR_U ||
L__vUARTISR423:
;uarthandler.c, 185 :: 		ucUSART1RXBuffer[ 0 ] == CHR_u ) {
L__vUARTISR422:
;uarthandler.c, 186 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x3394	0x4820    LDR	R0, [PC, #128]
0x3396	0x6801    LDR	R1, [R0, #0]
0x3398	0x4820    LDR	R0, [PC, #128]
0x339A	0x1841    ADDS	R1, R0, R1
0x339C	0x481D    LDR	R0, [PC, #116]
0x339E	0x7800    LDRB	R0, [R0, #0]
0x33A0	0x7008    STRB	R0, [R1, #0]
0x33A2	0x481D    LDR	R0, [PC, #116]
0x33A4	0x6800    LDR	R0, [R0, #0]
0x33A6	0x1C41    ADDS	R1, R0, #1
0x33A8	0x481B    LDR	R0, [PC, #108]
0x33AA	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 187 :: 		}
L_vUARTISR209:
L_vUARTISR206:
;uarthandler.c, 188 :: 		}
0x33AC	0xE02B    B	L_vUARTISR210
;uarthandler.c, 172 :: 		if ( ucData1 != CHR_CR && ucData1 != CHR_LF && ulUSART1ByteReceived < BUFFER_MAX_USART ) {
L__vUARTISR428:
L__vUARTISR427:
L__vUARTISR426:
;uarthandler.c, 190 :: 		else if ( ucData1 == CHR_CR ) {
0x33AE	0x4819    LDR	R0, [PC, #100]
0x33B0	0x7800    LDRB	R0, [R0, #0]
0x33B2	0x280D    CMP	R0, #13
0x33B4	0xD10C    BNE	L_vUARTISR211
;uarthandler.c, 191 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x33B6	0x4818    LDR	R0, [PC, #96]
0x33B8	0x6801    LDR	R1, [R0, #0]
0x33BA	0x4818    LDR	R0, [PC, #96]
0x33BC	0x1841    ADDS	R1, R0, R1
0x33BE	0x4815    LDR	R0, [PC, #84]
0x33C0	0x7800    LDRB	R0, [R0, #0]
0x33C2	0x7008    STRB	R0, [R1, #0]
0x33C4	0x4814    LDR	R0, [PC, #80]
0x33C6	0x6800    LDR	R0, [R0, #0]
0x33C8	0x1C41    ADDS	R1, R0, #1
0x33CA	0x4813    LDR	R0, [PC, #76]
0x33CC	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 192 :: 		}
0x33CE	0xE01A    B	L_vUARTISR212
L_vUARTISR211:
;uarthandler.c, 194 :: 		else if ( ucData1 == CHR_LF && ucUSART1RXBuffer[ ulUSART1ByteReceived - 1 ] == CHR_CR ) {
0x33D0	0x4810    LDR	R0, [PC, #64]
0x33D2	0x7800    LDRB	R0, [R0, #0]
0x33D4	0x280A    CMP	R0, #10
0x33D6	0xD116    BNE	L__vUARTISR430
0x33D8	0x480F    LDR	R0, [PC, #60]
0x33DA	0x6800    LDR	R0, [R0, #0]
0x33DC	0x1E41    SUBS	R1, R0, #1
0x33DE	0x480F    LDR	R0, [PC, #60]
0x33E0	0x1840    ADDS	R0, R0, R1
0x33E2	0x7800    LDRB	R0, [R0, #0]
0x33E4	0x280D    CMP	R0, #13
0x33E6	0xD10E    BNE	L__vUARTISR429
L__vUARTISR412:
;uarthandler.c, 195 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x33E8	0x480B    LDR	R0, [PC, #44]
0x33EA	0x6801    LDR	R1, [R0, #0]
0x33EC	0x480B    LDR	R0, [PC, #44]
0x33EE	0x1841    ADDS	R1, R0, R1
0x33F0	0x4808    LDR	R0, [PC, #32]
0x33F2	0x7800    LDRB	R0, [R0, #0]
0x33F4	0x7008    STRB	R0, [R1, #0]
0x33F6	0x4808    LDR	R0, [PC, #32]
0x33F8	0x6800    LDR	R0, [R0, #0]
0x33FA	0x1C41    ADDS	R1, R0, #1
0x33FC	0x4806    LDR	R0, [PC, #24]
0x33FE	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 196 :: 		fUSART1Buffer = READY_TO_READ;
0x3400	0x2101    MOVS	R1, #1
0x3402	0x4807    LDR	R0, [PC, #28]
0x3404	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 194 :: 		else if ( ucData1 == CHR_LF && ucUSART1RXBuffer[ ulUSART1ByteReceived - 1 ] == CHR_CR ) {
L__vUARTISR430:
L__vUARTISR429:
;uarthandler.c, 197 :: 		}
L_vUARTISR212:
L_vUARTISR210:
;uarthandler.c, 198 :: 		}
L_vUARTISR197:
;uarthandler.c, 199 :: 		}
L_end_vUARTISR:
0x3406	0x4770    BX	LR
0x3408	0x01A04222  	GPIOC_ODRbits+0
0x340C	0x00144227  	USART1_SRbits+0
0x3410	0x38044001  	USART1_DR+0
0x3414	0x228B2000  	_ucData1+0
0x3418	0x20042000  	_ulUSART1ByteReceived+0
0x341C	0x10042000  	_ucUSART1RXBuffer+0
0x3420	0x20082000  	_fUSART1Buffer+0
; end of _vUARTISR
_Timer2_interrupt:
;DriverRF4463PROMain.c, 111 :: 		void Timer2_interrupt() iv IVT_INT_TIM2 {
;DriverRF4463PROMain.c, 112 :: 		TIM2_SR.UIF = 0;
0x32CC	0x2100    MOVS	R1, #0
0x32CE	0xB249    SXTB	R1, R1
0x32D0	0x4804    LDR	R0, [PC, #16]
0x32D2	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 113 :: 		Flag.rf_reach_timeout = 1; //Enter your code here
0x32D4	0x2101    MOVS	R1, #1
0x32D6	0xB249    SXTB	R1, R1
0x32D8	0x4803    LDR	R0, [PC, #12]
0x32DA	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 114 :: 		Flag.reach_1s = 1;
0x32DC	0x4803    LDR	R0, [PC, #12]
0x32DE	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 115 :: 		}
L_end_Timer2_interrupt:
0x32E0	0x4770    BX	LR
0x32E2	0xBF00    NOP
0x32E4	0x02004200  	TIM2_SR+0
0x32E8	0x5F482204  	_Flag+0
0x32EC	0x5F402204  	_Flag+0
; end of _Timer2_interrupt
_Int_SPI2:
;driverspi.c, 16 :: 		void Int_SPI2() iv IVT_INT_SPI2 ics ICS_AUTO {
;driverspi.c, 18 :: 		if ( SPI2_SRbits.RXNE ) {
0x3424	0x4807    LDR	R0, [PC, #28]
0x3426	0x6800    LDR	R0, [R0, #0]
0x3428	0xB150    CBZ	R0, L_Int_SPI20
;driverspi.c, 19 :: 		ucSPI2ByteReceived = ( unsigned char )SPI2_DR;      // lee el Byte recibido
0x342A	0x4807    LDR	R0, [PC, #28]
0x342C	0x6801    LDR	R1, [R0, #0]
0x342E	0x4807    LDR	R0, [PC, #28]
0x3430	0x7001    STRB	R1, [R0, #0]
;driverspi.c, 21 :: 		LED_GREEN = ~LED_GREEN;
0x3432	0x4807    LDR	R0, [PC, #28]
0x3434	0x6800    LDR	R0, [R0, #0]
0x3436	0xF0800101  EOR	R1, R0, #1
0x343A	0xB2C9    UXTB	R1, R1
0x343C	0x4804    LDR	R0, [PC, #16]
0x343E	0x6001    STR	R1, [R0, #0]
;driverspi.c, 22 :: 		}
L_Int_SPI20:
;driverspi.c, 23 :: 		}
L_end_Int_SPI2:
0x3440	0x4770    BX	LR
0x3442	0xBF00    NOP
0x3444	0x01004207  	SPI2_SRbits+0
0x3448	0x380C4000  	SPI2_DR+0
0x344C	0x228A2000  	_ucSPI2ByteReceived+0
0x3450	0x019C4222  	GPIOC_ODRbits+0
; end of _Int_SPI2
_DMA1Ch1_interrupt:
;uarthandler.c, 88 :: 		void DMA1Ch1_interrupt() iv IVT_INT_DMA1_Channel1 ics ICS_AUTO {
;uarthandler.c, 90 :: 		if ( DMA1_ISRbits.TEIF1 ) {         // TRANSFER ERROR INTERRUPT FLAG
0x34A8	0x480D    LDR	R0, [PC, #52]
0x34AA	0x6800    LDR	R0, [R0, #0]
0x34AC	0xB120    CBZ	R0, L_DMA1Ch1_interrupt182
;uarthandler.c, 91 :: 		DMA1_IFCRbits .CTEIF1 = 1;       // limpia el flag de error
0x34AE	0x2101    MOVS	R1, #1
0x34B0	0xB249    SXTB	R1, R1
0x34B2	0x480C    LDR	R0, [PC, #48]
0x34B4	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 93 :: 		}
0x34B6	0xE012    B	L_DMA1Ch1_interrupt183
L_DMA1Ch1_interrupt182:
;uarthandler.c, 94 :: 		else if ( DMA1_ISRbits.HTIF1 ) {
0x34B8	0x480B    LDR	R0, [PC, #44]
0x34BA	0x6800    LDR	R0, [R0, #0]
0x34BC	0xB120    CBZ	R0, L_DMA1Ch1_interrupt184
;uarthandler.c, 95 :: 		DMA1_IFCRbits.CHTIF1 = 1;
0x34BE	0x2101    MOVS	R1, #1
0x34C0	0xB249    SXTB	R1, R1
0x34C2	0x480A    LDR	R0, [PC, #40]
0x34C4	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 96 :: 		}
0x34C6	0xE00A    B	L_DMA1Ch1_interrupt185
L_DMA1Ch1_interrupt184:
;uarthandler.c, 97 :: 		else if ( DMA1_ISRbits.TCIF1 ) {     // TRANSFER COMPLETE INTERRUPT FLAG = envio el frame completo
0x34C8	0x4809    LDR	R0, [PC, #36]
0x34CA	0x6800    LDR	R0, [R0, #0]
0x34CC	0xB138    CBZ	R0, L_DMA1Ch1_interrupt186
;uarthandler.c, 98 :: 		DMA1_IFCRbits.CTCIF1 = 1;       // limpia TODOS LOS FLAGS DE DMA2 CANAL 2
0x34CE	0x2101    MOVS	R1, #1
0x34D0	0xB249    SXTB	R1, R1
0x34D2	0x4808    LDR	R0, [PC, #32]
0x34D4	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 99 :: 		DMA1_CCR1bits.EN = 0;            // EXPERIMENTAL PARA CAMBIAR EL VALOR DEL CONTADOR
0x34D6	0x2100    MOVS	R1, #0
0x34D8	0xB249    SXTB	R1, R1
0x34DA	0x4807    LDR	R0, [PC, #28]
0x34DC	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 101 :: 		}
L_DMA1Ch1_interrupt186:
L_DMA1Ch1_interrupt185:
L_DMA1Ch1_interrupt183:
;uarthandler.c, 102 :: 		}
L_end_DMA1Ch1_interrupt:
0x34DE	0x4770    BX	LR
0x34E0	0x000C4240  	DMA1_ISRbits+0
0x34E4	0x008C4240  	DMA1_IFCRbits+0
0x34E8	0x00084240  	DMA1_ISRbits+0
0x34EC	0x00884240  	DMA1_IFCRbits+0
0x34F0	0x00044240  	DMA1_ISRbits+0
0x34F4	0x00844240  	DMA1_IFCRbits+0
0x34F8	0x01004240  	DMA1_CCR1bits+0
; end of _DMA1Ch1_interrupt
_DMA1Ch2_interrupt:
;uarthandler.c, 104 :: 		void DMA1Ch2_interrupt() iv IVT_INT_DMA1_Channel2 ics ICS_AUTO {
;uarthandler.c, 106 :: 		if ( DMA1_ISRbits.TEIF2 ) {         // TRANSFER ERROR INTERRUPT FLAG
0x3454	0x480D    LDR	R0, [PC, #52]
0x3456	0x6800    LDR	R0, [R0, #0]
0x3458	0xB120    CBZ	R0, L_DMA1Ch2_interrupt187
;uarthandler.c, 107 :: 		DMA1_IFCRbits .CTEIF2 = 1;       // limpia el flag de error
0x345A	0x2101    MOVS	R1, #1
0x345C	0xB249    SXTB	R1, R1
0x345E	0x480C    LDR	R0, [PC, #48]
0x3460	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 109 :: 		}
0x3462	0xE012    B	L_DMA1Ch2_interrupt188
L_DMA1Ch2_interrupt187:
;uarthandler.c, 110 :: 		else if ( DMA1_ISRbits.HTIF2 ) {
0x3464	0x480B    LDR	R0, [PC, #44]
0x3466	0x6800    LDR	R0, [R0, #0]
0x3468	0xB120    CBZ	R0, L_DMA1Ch2_interrupt189
;uarthandler.c, 111 :: 		DMA1_IFCRbits.CHTIF2 = 1;
0x346A	0x2101    MOVS	R1, #1
0x346C	0xB249    SXTB	R1, R1
0x346E	0x480A    LDR	R0, [PC, #40]
0x3470	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 112 :: 		}
0x3472	0xE00A    B	L_DMA1Ch2_interrupt190
L_DMA1Ch2_interrupt189:
;uarthandler.c, 113 :: 		else if ( DMA1_ISRbits.TCIF2 ) {     // TRANSFER COMPLETE INTERRUPT FLAG = envio el frame completo
0x3474	0x4809    LDR	R0, [PC, #36]
0x3476	0x6800    LDR	R0, [R0, #0]
0x3478	0xB138    CBZ	R0, L_DMA1Ch2_interrupt191
;uarthandler.c, 114 :: 		DMA1_IFCRbits.CTCIF2 = 1;       // limpia TODOS LOS FLAGS DE DMA2 CANAL 2
0x347A	0x2101    MOVS	R1, #1
0x347C	0xB249    SXTB	R1, R1
0x347E	0x4808    LDR	R0, [PC, #32]
0x3480	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 115 :: 		DMA1_CCR2bits.EN = 0;            // EXPERIMENTAL PARA CAMBIAR EL VALOR DEL CONTADOR
0x3482	0x2100    MOVS	R1, #0
0x3484	0xB249    SXTB	R1, R1
0x3486	0x4807    LDR	R0, [PC, #28]
0x3488	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 117 :: 		}
L_DMA1Ch2_interrupt191:
L_DMA1Ch2_interrupt190:
L_DMA1Ch2_interrupt188:
;uarthandler.c, 118 :: 		}
L_end_DMA1Ch2_interrupt:
0x348A	0x4770    BX	LR
0x348C	0x001C4240  	DMA1_ISRbits+0
0x3490	0x009C4240  	DMA1_IFCRbits+0
0x3494	0x00184240  	DMA1_ISRbits+0
0x3498	0x00984240  	DMA1_IFCRbits+0
0x349C	0x00144240  	DMA1_ISRbits+0
0x34A0	0x00944240  	DMA1_IFCRbits+0
0x34A4	0x03804240  	DMA1_CCR2bits+0
; end of _DMA1Ch2_interrupt
;__Lib_System_105_107.c,389 :: __Lib_System_105_107_ADCPrescTable [4]
0x29AC	0x08060402 ;__Lib_System_105_107_ADCPrescTable+0
; end of __Lib_System_105_107_ADCPrescTable
;DriverRF4463PROMain.c,0 :: ?ICS_ucUSARTActiveBuffer1 [4096]
0x3AD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+0
0x3AD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4
0x3ADC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+8
0x3AE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+12
0x3AE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+16
0x3AE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+20
0x3AEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+24
0x3AF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+28
0x3AF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+32
0x3AF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+36
0x3AFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+40
0x3B00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+44
0x3B04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+48
0x3B08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+52
0x3B0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+56
0x3B10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+60
0x3B14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+64
0x3B18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+68
0x3B1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+72
0x3B20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+76
0x3B24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+80
0x3B28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+84
0x3B2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+88
0x3B30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+92
0x3B34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+96
0x3B38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+100
0x3B3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+104
0x3B40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+108
0x3B44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+112
0x3B48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+116
0x3B4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+120
0x3B50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+124
0x3B54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+128
0x3B58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+132
0x3B5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+136
0x3B60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+140
0x3B64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+144
0x3B68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+148
0x3B6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+152
0x3B70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+156
0x3B74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+160
0x3B78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+164
0x3B7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+168
0x3B80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+172
0x3B84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+176
0x3B88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+180
0x3B8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+184
0x3B90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+188
0x3B94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+192
0x3B98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+196
0x3B9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+200
0x3BA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+204
0x3BA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+208
0x3BA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+212
0x3BAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+216
0x3BB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+220
0x3BB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+224
0x3BB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+228
0x3BBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+232
0x3BC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+236
0x3BC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+240
0x3BC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+244
0x3BCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+248
0x3BD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+252
0x3BD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+256
0x3BD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+260
0x3BDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+264
0x3BE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+268
0x3BE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+272
0x3BE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+276
0x3BEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+280
0x3BF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+284
0x3BF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+288
0x3BF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+292
0x3BFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+296
0x3C00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+300
0x3C04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+304
0x3C08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+308
0x3C0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+312
0x3C10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+316
0x3C14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+320
0x3C18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+324
0x3C1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+328
0x3C20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+332
0x3C24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+336
0x3C28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+340
0x3C2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+344
0x3C30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+348
0x3C34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+352
0x3C38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+356
0x3C3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+360
0x3C40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+364
0x3C44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+368
0x3C48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+372
0x3C4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+376
0x3C50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+380
0x3C54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+384
0x3C58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+388
0x3C5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+392
0x3C60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+396
0x3C64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+400
0x3C68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+404
0x3C6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+408
0x3C70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+412
0x3C74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+416
0x3C78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+420
0x3C7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+424
0x3C80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+428
0x3C84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+432
0x3C88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+436
0x3C8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+440
0x3C90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+444
0x3C94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+448
0x3C98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+452
0x3C9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+456
0x3CA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+460
0x3CA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+464
0x3CA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+468
0x3CAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+472
0x3CB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+476
0x3CB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+480
0x3CB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+484
0x3CBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+488
0x3CC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+492
0x3CC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+496
0x3CC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+500
0x3CCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+504
0x3CD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+508
0x3CD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+512
0x3CD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+516
0x3CDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+520
0x3CE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+524
0x3CE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+528
0x3CE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+532
0x3CEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+536
0x3CF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+540
0x3CF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+544
0x3CF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+548
0x3CFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+552
0x3D00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+556
0x3D04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+560
0x3D08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+564
0x3D0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+568
0x3D10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+572
0x3D14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+576
0x3D18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+580
0x3D1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+584
0x3D20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+588
0x3D24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+592
0x3D28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+596
0x3D2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+600
0x3D30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+604
0x3D34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+608
0x3D38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+612
0x3D3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+616
0x3D40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+620
0x3D44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+624
0x3D48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+628
0x3D4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+632
0x3D50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+636
0x3D54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+640
0x3D58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+644
0x3D5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+648
0x3D60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+652
0x3D64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+656
0x3D68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+660
0x3D6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+664
0x3D70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+668
0x3D74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+672
0x3D78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+676
0x3D7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+680
0x3D80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+684
0x3D84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+688
0x3D88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+692
0x3D8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+696
0x3D90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+700
0x3D94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+704
0x3D98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+708
0x3D9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+712
0x3DA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+716
0x3DA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+720
0x3DA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+724
0x3DAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+728
0x3DB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+732
0x3DB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+736
0x3DB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+740
0x3DBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+744
0x3DC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+748
0x3DC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+752
0x3DC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+756
0x3DCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+760
0x3DD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+764
0x3DD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+768
0x3DD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+772
0x3DDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+776
0x3DE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+780
0x3DE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+784
0x3DE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+788
0x3DEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+792
0x3DF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+796
0x3DF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+800
0x3DF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+804
0x3DFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+808
0x3E00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+812
0x3E04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+816
0x3E08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+820
0x3E0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+824
0x3E10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+828
0x3E14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+832
0x3E18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+836
0x3E1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+840
0x3E20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+844
0x3E24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+848
0x3E28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+852
0x3E2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+856
0x3E30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+860
0x3E34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+864
0x3E38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+868
0x3E3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+872
0x3E40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+876
0x3E44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+880
0x3E48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+884
0x3E4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+888
0x3E50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+892
0x3E54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+896
0x3E58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+900
0x3E5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+904
0x3E60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+908
0x3E64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+912
0x3E68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+916
0x3E6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+920
0x3E70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+924
0x3E74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+928
0x3E78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+932
0x3E7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+936
0x3E80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+940
0x3E84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+944
0x3E88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+948
0x3E8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+952
0x3E90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+956
0x3E94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+960
0x3E98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+964
0x3E9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+968
0x3EA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+972
0x3EA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+976
0x3EA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+980
0x3EAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+984
0x3EB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+988
0x3EB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+992
0x3EB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+996
0x3EBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1000
0x3EC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1004
0x3EC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1008
0x3EC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1012
0x3ECC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1016
0x3ED0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1020
0x3ED4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1024
0x3ED8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1028
0x3EDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1032
0x3EE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1036
0x3EE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1040
0x3EE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1044
0x3EEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1048
0x3EF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1052
0x3EF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1056
0x3EF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1060
0x3EFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1064
0x3F00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1068
0x3F04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1072
0x3F08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1076
0x3F0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1080
0x3F10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1084
0x3F14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1088
0x3F18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1092
0x3F1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1096
0x3F20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1100
0x3F24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1104
0x3F28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1108
0x3F2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1112
0x3F30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1116
0x3F34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1120
0x3F38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1124
0x3F3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1128
0x3F40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1132
0x3F44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1136
0x3F48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1140
0x3F4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1144
0x3F50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1148
0x3F54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1152
0x3F58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1156
0x3F5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1160
0x3F60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1164
0x3F64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1168
0x3F68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1172
0x3F6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1176
0x3F70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1180
0x3F74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1184
0x3F78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1188
0x3F7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1192
0x3F80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1196
0x3F84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1200
0x3F88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1204
0x3F8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1208
0x3F90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1212
0x3F94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1216
0x3F98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1220
0x3F9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1224
0x3FA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1228
0x3FA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1232
0x3FA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1236
0x3FAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1240
0x3FB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1244
0x3FB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1248
0x3FB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1252
0x3FBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1256
0x3FC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1260
0x3FC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1264
0x3FC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1268
0x3FCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1272
0x3FD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1276
0x3FD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1280
0x3FD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1284
0x3FDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1288
0x3FE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1292
0x3FE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1296
0x3FE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1300
0x3FEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1304
0x3FF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1308
0x3FF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1312
0x3FF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1316
0x3FFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1320
0x4000	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1324
0x4004	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1328
0x4008	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1332
0x400C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1336
0x4010	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1340
0x4014	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1344
0x4018	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1348
0x401C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1352
0x4020	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1356
0x4024	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1360
0x4028	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1364
0x402C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1368
0x4030	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1372
0x4034	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1376
0x4038	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1380
0x403C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1384
0x4040	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1388
0x4044	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1392
0x4048	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1396
0x404C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1400
0x4050	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1404
0x4054	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1408
0x4058	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1412
0x405C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1416
0x4060	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1420
0x4064	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1424
0x4068	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1428
0x406C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1432
0x4070	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1436
0x4074	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1440
0x4078	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1444
0x407C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1448
0x4080	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1452
0x4084	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1456
0x4088	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1460
0x408C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1464
0x4090	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1468
0x4094	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1472
0x4098	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1476
0x409C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1480
0x40A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1484
0x40A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1488
0x40A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1492
0x40AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1496
0x40B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1500
0x40B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1504
0x40B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1508
0x40BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1512
0x40C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1516
0x40C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1520
0x40C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1524
0x40CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1528
0x40D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1532
0x40D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1536
0x40D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1540
0x40DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1544
0x40E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1548
0x40E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1552
0x40E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1556
0x40EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1560
0x40F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1564
0x40F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1568
0x40F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1572
0x40FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1576
0x4100	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1580
0x4104	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1584
0x4108	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1588
0x410C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1592
0x4110	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1596
0x4114	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1600
0x4118	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1604
0x411C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1608
0x4120	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1612
0x4124	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1616
0x4128	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1620
0x412C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1624
0x4130	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1628
0x4134	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1632
0x4138	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1636
0x413C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1640
0x4140	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1644
0x4144	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1648
0x4148	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1652
0x414C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1656
0x4150	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1660
0x4154	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1664
0x4158	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1668
0x415C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1672
0x4160	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1676
0x4164	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1680
0x4168	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1684
0x416C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1688
0x4170	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1692
0x4174	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1696
0x4178	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1700
0x417C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1704
0x4180	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1708
0x4184	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1712
0x4188	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1716
0x418C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1720
0x4190	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1724
0x4194	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1728
0x4198	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1732
0x419C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1736
0x41A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1740
0x41A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1744
0x41A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1748
0x41AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1752
0x41B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1756
0x41B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1760
0x41B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1764
0x41BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1768
0x41C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1772
0x41C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1776
0x41C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1780
0x41CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1784
0x41D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1788
0x41D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1792
0x41D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1796
0x41DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1800
0x41E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1804
0x41E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1808
0x41E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1812
0x41EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1816
0x41F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1820
0x41F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1824
0x41F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1828
0x41FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1832
0x4200	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1836
0x4204	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1840
0x4208	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1844
0x420C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1848
0x4210	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1852
0x4214	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1856
0x4218	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1860
0x421C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1864
0x4220	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1868
0x4224	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1872
0x4228	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1876
0x422C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1880
0x4230	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1884
0x4234	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1888
0x4238	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1892
0x423C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1896
0x4240	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1900
0x4244	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1904
0x4248	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1908
0x424C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1912
0x4250	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1916
0x4254	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1920
0x4258	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1924
0x425C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1928
0x4260	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1932
0x4264	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1936
0x4268	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1940
0x426C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1944
0x4270	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1948
0x4274	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1952
0x4278	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1956
0x427C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1960
0x4280	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1964
0x4284	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1968
0x4288	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1972
0x428C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1976
0x4290	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1980
0x4294	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1984
0x4298	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1988
0x429C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1992
0x42A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1996
0x42A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2000
0x42A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2004
0x42AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2008
0x42B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2012
0x42B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2016
0x42B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2020
0x42BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2024
0x42C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2028
0x42C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2032
0x42C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2036
0x42CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2040
0x42D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2044
0x42D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2048
0x42D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2052
0x42DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2056
0x42E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2060
0x42E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2064
0x42E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2068
0x42EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2072
0x42F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2076
0x42F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2080
0x42F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2084
0x42FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2088
0x4300	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2092
0x4304	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2096
0x4308	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2100
0x430C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2104
0x4310	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2108
0x4314	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2112
0x4318	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2116
0x431C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2120
0x4320	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2124
0x4324	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2128
0x4328	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2132
0x432C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2136
0x4330	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2140
0x4334	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2144
0x4338	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2148
0x433C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2152
0x4340	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2156
0x4344	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2160
0x4348	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2164
0x434C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2168
0x4350	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2172
0x4354	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2176
0x4358	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2180
0x435C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2184
0x4360	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2188
0x4364	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2192
0x4368	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2196
0x436C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2200
0x4370	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2204
0x4374	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2208
0x4378	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2212
0x437C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2216
0x4380	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2220
0x4384	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2224
0x4388	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2228
0x438C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2232
0x4390	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2236
0x4394	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2240
0x4398	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2244
0x439C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2248
0x43A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2252
0x43A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2256
0x43A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2260
0x43AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2264
0x43B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2268
0x43B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2272
0x43B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2276
0x43BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2280
0x43C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2284
0x43C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2288
0x43C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2292
0x43CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2296
0x43D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2300
0x43D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2304
0x43D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2308
0x43DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2312
0x43E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2316
0x43E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2320
0x43E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2324
0x43EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2328
0x43F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2332
0x43F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2336
0x43F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2340
0x43FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2344
0x4400	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2348
0x4404	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2352
0x4408	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2356
0x440C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2360
0x4410	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2364
0x4414	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2368
0x4418	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2372
0x441C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2376
0x4420	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2380
0x4424	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2384
0x4428	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2388
0x442C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2392
0x4430	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2396
0x4434	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2400
0x4438	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2404
0x443C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2408
0x4440	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2412
0x4444	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2416
0x4448	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2420
0x444C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2424
0x4450	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2428
0x4454	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2432
0x4458	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2436
0x445C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2440
0x4460	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2444
0x4464	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2448
0x4468	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2452
0x446C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2456
0x4470	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2460
0x4474	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2464
0x4478	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2468
0x447C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2472
0x4480	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2476
0x4484	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2480
0x4488	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2484
0x448C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2488
0x4490	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2492
0x4494	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2496
0x4498	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2500
0x449C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2504
0x44A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2508
0x44A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2512
0x44A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2516
0x44AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2520
0x44B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2524
0x44B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2528
0x44B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2532
0x44BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2536
0x44C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2540
0x44C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2544
0x44C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2548
0x44CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2552
0x44D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2556
0x44D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2560
0x44D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2564
0x44DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2568
0x44E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2572
0x44E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2576
0x44E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2580
0x44EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2584
0x44F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2588
0x44F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2592
0x44F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2596
0x44FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2600
0x4500	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2604
0x4504	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2608
0x4508	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2612
0x450C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2616
0x4510	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2620
0x4514	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2624
0x4518	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2628
0x451C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2632
0x4520	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2636
0x4524	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2640
0x4528	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2644
0x452C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2648
0x4530	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2652
0x4534	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2656
0x4538	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2660
0x453C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2664
0x4540	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2668
0x4544	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2672
0x4548	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2676
0x454C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2680
0x4550	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2684
0x4554	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2688
0x4558	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2692
0x455C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2696
0x4560	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2700
0x4564	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2704
0x4568	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2708
0x456C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2712
0x4570	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2716
0x4574	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2720
0x4578	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2724
0x457C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2728
0x4580	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2732
0x4584	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2736
0x4588	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2740
0x458C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2744
0x4590	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2748
0x4594	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2752
0x4598	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2756
0x459C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2760
0x45A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2764
0x45A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2768
0x45A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2772
0x45AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2776
0x45B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2780
0x45B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2784
0x45B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2788
0x45BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2792
0x45C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2796
0x45C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2800
0x45C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2804
0x45CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2808
0x45D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2812
0x45D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2816
0x45D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2820
0x45DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2824
0x45E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2828
0x45E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2832
0x45E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2836
0x45EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2840
0x45F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2844
0x45F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2848
0x45F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2852
0x45FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2856
0x4600	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2860
0x4604	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2864
0x4608	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2868
0x460C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2872
0x4610	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2876
0x4614	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2880
0x4618	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2884
0x461C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2888
0x4620	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2892
0x4624	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2896
0x4628	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2900
0x462C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2904
0x4630	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2908
0x4634	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2912
0x4638	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2916
0x463C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2920
0x4640	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2924
0x4644	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2928
0x4648	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2932
0x464C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2936
0x4650	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2940
0x4654	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2944
0x4658	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2948
0x465C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2952
0x4660	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2956
0x4664	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2960
0x4668	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2964
0x466C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2968
0x4670	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2972
0x4674	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2976
0x4678	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2980
0x467C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2984
0x4680	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2988
0x4684	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2992
0x4688	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2996
0x468C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3000
0x4690	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3004
0x4694	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3008
0x4698	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3012
0x469C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3016
0x46A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3020
0x46A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3024
0x46A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3028
0x46AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3032
0x46B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3036
0x46B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3040
0x46B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3044
0x46BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3048
0x46C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3052
0x46C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3056
0x46C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3060
0x46CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3064
0x46D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3068
0x46D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3072
0x46D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3076
0x46DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3080
0x46E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3084
0x46E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3088
0x46E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3092
0x46EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3096
0x46F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3100
0x46F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3104
0x46F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3108
0x46FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3112
0x4700	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3116
0x4704	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3120
0x4708	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3124
0x470C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3128
0x4710	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3132
0x4714	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3136
0x4718	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3140
0x471C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3144
0x4720	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3148
0x4724	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3152
0x4728	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3156
0x472C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3160
0x4730	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3164
0x4734	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3168
0x4738	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3172
0x473C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3176
0x4740	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3180
0x4744	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3184
0x4748	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3188
0x474C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3192
0x4750	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3196
0x4754	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3200
0x4758	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3204
0x475C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3208
0x4760	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3212
0x4764	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3216
0x4768	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3220
0x476C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3224
0x4770	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3228
0x4774	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3232
0x4778	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3236
0x477C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3240
0x4780	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3244
0x4784	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3248
0x4788	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3252
0x478C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3256
0x4790	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3260
0x4794	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3264
0x4798	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3268
0x479C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3272
0x47A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3276
0x47A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3280
0x47A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3284
0x47AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3288
0x47B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3292
0x47B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3296
0x47B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3300
0x47BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3304
0x47C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3308
0x47C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3312
0x47C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3316
0x47CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3320
0x47D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3324
0x47D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3328
0x47D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3332
0x47DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3336
0x47E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3340
0x47E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3344
0x47E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3348
0x47EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3352
0x47F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3356
0x47F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3360
0x47F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3364
0x47FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3368
0x4800	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3372
0x4804	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3376
0x4808	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3380
0x480C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3384
0x4810	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3388
0x4814	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3392
0x4818	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3396
0x481C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3400
0x4820	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3404
0x4824	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3408
0x4828	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3412
0x482C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3416
0x4830	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3420
0x4834	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3424
0x4838	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3428
0x483C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3432
0x4840	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3436
0x4844	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3440
0x4848	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3444
0x484C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3448
0x4850	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3452
0x4854	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3456
0x4858	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3460
0x485C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3464
0x4860	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3468
0x4864	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3472
0x4868	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3476
0x486C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3480
0x4870	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3484
0x4874	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3488
0x4878	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3492
0x487C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3496
0x4880	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3500
0x4884	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3504
0x4888	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3508
0x488C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3512
0x4890	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3516
0x4894	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3520
0x4898	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3524
0x489C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3528
0x48A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3532
0x48A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3536
0x48A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3540
0x48AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3544
0x48B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3548
0x48B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3552
0x48B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3556
0x48BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3560
0x48C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3564
0x48C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3568
0x48C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3572
0x48CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3576
0x48D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3580
0x48D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3584
0x48D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3588
0x48DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3592
0x48E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3596
0x48E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3600
0x48E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3604
0x48EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3608
0x48F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3612
0x48F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3616
0x48F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3620
0x48FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3624
0x4900	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3628
0x4904	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3632
0x4908	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3636
0x490C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3640
0x4910	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3644
0x4914	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3648
0x4918	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3652
0x491C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3656
0x4920	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3660
0x4924	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3664
0x4928	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3668
0x492C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3672
0x4930	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3676
0x4934	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3680
0x4938	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3684
0x493C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3688
0x4940	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3692
0x4944	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3696
0x4948	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3700
0x494C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3704
0x4950	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3708
0x4954	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3712
0x4958	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3716
0x495C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3720
0x4960	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3724
0x4964	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3728
0x4968	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3732
0x496C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3736
0x4970	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3740
0x4974	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3744
0x4978	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3748
0x497C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3752
0x4980	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3756
0x4984	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3760
0x4988	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3764
0x498C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3768
0x4990	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3772
0x4994	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3776
0x4998	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3780
0x499C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3784
0x49A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3788
0x49A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3792
0x49A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3796
0x49AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3800
0x49B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3804
0x49B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3808
0x49B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3812
0x49BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3816
0x49C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3820
0x49C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3824
0x49C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3828
0x49CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3832
0x49D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3836
0x49D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3840
0x49D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3844
0x49DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3848
0x49E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3852
0x49E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3856
0x49E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3860
0x49EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3864
0x49F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3868
0x49F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3872
0x49F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3876
0x49FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3880
0x4A00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3884
0x4A04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3888
0x4A08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3892
0x4A0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3896
0x4A10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3900
0x4A14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3904
0x4A18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3908
0x4A1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3912
0x4A20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3916
0x4A24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3920
0x4A28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3924
0x4A2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3928
0x4A30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3932
0x4A34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3936
0x4A38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3940
0x4A3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3944
0x4A40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3948
0x4A44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3952
0x4A48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3956
0x4A4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3960
0x4A50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3964
0x4A54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3968
0x4A58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3972
0x4A5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3976
0x4A60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3980
0x4A64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3984
0x4A68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3988
0x4A6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3992
0x4A70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3996
0x4A74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4000
0x4A78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4004
0x4A7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4008
0x4A80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4012
0x4A84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4016
0x4A88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4020
0x4A8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4024
0x4A90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4028
0x4A94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4032
0x4A98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4036
0x4A9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4040
0x4AA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4044
0x4AA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4048
0x4AA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4052
0x4AAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4056
0x4AB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4060
0x4AB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4064
0x4AB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4068
0x4ABC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4072
0x4AC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4076
0x4AC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4080
0x4AC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4084
0x4ACC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4088
0x4AD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4092
; end of ?ICS_ucUSARTActiveBuffer1
;DriverRF4463PROMain.c,0 :: ?ICS_ulUSARTActiveBuffer1BytesReceived [4]
0x4AD4	0x00000000 ;?ICS_ulUSARTActiveBuffer1BytesReceived+0
; end of ?ICS_ulUSARTActiveBuffer1BytesReceived
;DriverRF4463PROMain.c,0 :: ?ICS_ucUSART1RXBuffer [4096]
0x4AD8	0x00000000 ;?ICS_ucUSART1RXBuffer+0
0x4ADC	0x00000000 ;?ICS_ucUSART1RXBuffer+4
0x4AE0	0x00000000 ;?ICS_ucUSART1RXBuffer+8
0x4AE4	0x00000000 ;?ICS_ucUSART1RXBuffer+12
0x4AE8	0x00000000 ;?ICS_ucUSART1RXBuffer+16
0x4AEC	0x00000000 ;?ICS_ucUSART1RXBuffer+20
0x4AF0	0x00000000 ;?ICS_ucUSART1RXBuffer+24
0x4AF4	0x00000000 ;?ICS_ucUSART1RXBuffer+28
0x4AF8	0x00000000 ;?ICS_ucUSART1RXBuffer+32
0x4AFC	0x00000000 ;?ICS_ucUSART1RXBuffer+36
0x4B00	0x00000000 ;?ICS_ucUSART1RXBuffer+40
0x4B04	0x00000000 ;?ICS_ucUSART1RXBuffer+44
0x4B08	0x00000000 ;?ICS_ucUSART1RXBuffer+48
0x4B0C	0x00000000 ;?ICS_ucUSART1RXBuffer+52
0x4B10	0x00000000 ;?ICS_ucUSART1RXBuffer+56
0x4B14	0x00000000 ;?ICS_ucUSART1RXBuffer+60
0x4B18	0x00000000 ;?ICS_ucUSART1RXBuffer+64
0x4B1C	0x00000000 ;?ICS_ucUSART1RXBuffer+68
0x4B20	0x00000000 ;?ICS_ucUSART1RXBuffer+72
0x4B24	0x00000000 ;?ICS_ucUSART1RXBuffer+76
0x4B28	0x00000000 ;?ICS_ucUSART1RXBuffer+80
0x4B2C	0x00000000 ;?ICS_ucUSART1RXBuffer+84
0x4B30	0x00000000 ;?ICS_ucUSART1RXBuffer+88
0x4B34	0x00000000 ;?ICS_ucUSART1RXBuffer+92
0x4B38	0x00000000 ;?ICS_ucUSART1RXBuffer+96
0x4B3C	0x00000000 ;?ICS_ucUSART1RXBuffer+100
0x4B40	0x00000000 ;?ICS_ucUSART1RXBuffer+104
0x4B44	0x00000000 ;?ICS_ucUSART1RXBuffer+108
0x4B48	0x00000000 ;?ICS_ucUSART1RXBuffer+112
0x4B4C	0x00000000 ;?ICS_ucUSART1RXBuffer+116
0x4B50	0x00000000 ;?ICS_ucUSART1RXBuffer+120
0x4B54	0x00000000 ;?ICS_ucUSART1RXBuffer+124
0x4B58	0x00000000 ;?ICS_ucUSART1RXBuffer+128
0x4B5C	0x00000000 ;?ICS_ucUSART1RXBuffer+132
0x4B60	0x00000000 ;?ICS_ucUSART1RXBuffer+136
0x4B64	0x00000000 ;?ICS_ucUSART1RXBuffer+140
0x4B68	0x00000000 ;?ICS_ucUSART1RXBuffer+144
0x4B6C	0x00000000 ;?ICS_ucUSART1RXBuffer+148
0x4B70	0x00000000 ;?ICS_ucUSART1RXBuffer+152
0x4B74	0x00000000 ;?ICS_ucUSART1RXBuffer+156
0x4B78	0x00000000 ;?ICS_ucUSART1RXBuffer+160
0x4B7C	0x00000000 ;?ICS_ucUSART1RXBuffer+164
0x4B80	0x00000000 ;?ICS_ucUSART1RXBuffer+168
0x4B84	0x00000000 ;?ICS_ucUSART1RXBuffer+172
0x4B88	0x00000000 ;?ICS_ucUSART1RXBuffer+176
0x4B8C	0x00000000 ;?ICS_ucUSART1RXBuffer+180
0x4B90	0x00000000 ;?ICS_ucUSART1RXBuffer+184
0x4B94	0x00000000 ;?ICS_ucUSART1RXBuffer+188
0x4B98	0x00000000 ;?ICS_ucUSART1RXBuffer+192
0x4B9C	0x00000000 ;?ICS_ucUSART1RXBuffer+196
0x4BA0	0x00000000 ;?ICS_ucUSART1RXBuffer+200
0x4BA4	0x00000000 ;?ICS_ucUSART1RXBuffer+204
0x4BA8	0x00000000 ;?ICS_ucUSART1RXBuffer+208
0x4BAC	0x00000000 ;?ICS_ucUSART1RXBuffer+212
0x4BB0	0x00000000 ;?ICS_ucUSART1RXBuffer+216
0x4BB4	0x00000000 ;?ICS_ucUSART1RXBuffer+220
0x4BB8	0x00000000 ;?ICS_ucUSART1RXBuffer+224
0x4BBC	0x00000000 ;?ICS_ucUSART1RXBuffer+228
0x4BC0	0x00000000 ;?ICS_ucUSART1RXBuffer+232
0x4BC4	0x00000000 ;?ICS_ucUSART1RXBuffer+236
0x4BC8	0x00000000 ;?ICS_ucUSART1RXBuffer+240
0x4BCC	0x00000000 ;?ICS_ucUSART1RXBuffer+244
0x4BD0	0x00000000 ;?ICS_ucUSART1RXBuffer+248
0x4BD4	0x00000000 ;?ICS_ucUSART1RXBuffer+252
0x4BD8	0x00000000 ;?ICS_ucUSART1RXBuffer+256
0x4BDC	0x00000000 ;?ICS_ucUSART1RXBuffer+260
0x4BE0	0x00000000 ;?ICS_ucUSART1RXBuffer+264
0x4BE4	0x00000000 ;?ICS_ucUSART1RXBuffer+268
0x4BE8	0x00000000 ;?ICS_ucUSART1RXBuffer+272
0x4BEC	0x00000000 ;?ICS_ucUSART1RXBuffer+276
0x4BF0	0x00000000 ;?ICS_ucUSART1RXBuffer+280
0x4BF4	0x00000000 ;?ICS_ucUSART1RXBuffer+284
0x4BF8	0x00000000 ;?ICS_ucUSART1RXBuffer+288
0x4BFC	0x00000000 ;?ICS_ucUSART1RXBuffer+292
0x4C00	0x00000000 ;?ICS_ucUSART1RXBuffer+296
0x4C04	0x00000000 ;?ICS_ucUSART1RXBuffer+300
0x4C08	0x00000000 ;?ICS_ucUSART1RXBuffer+304
0x4C0C	0x00000000 ;?ICS_ucUSART1RXBuffer+308
0x4C10	0x00000000 ;?ICS_ucUSART1RXBuffer+312
0x4C14	0x00000000 ;?ICS_ucUSART1RXBuffer+316
0x4C18	0x00000000 ;?ICS_ucUSART1RXBuffer+320
0x4C1C	0x00000000 ;?ICS_ucUSART1RXBuffer+324
0x4C20	0x00000000 ;?ICS_ucUSART1RXBuffer+328
0x4C24	0x00000000 ;?ICS_ucUSART1RXBuffer+332
0x4C28	0x00000000 ;?ICS_ucUSART1RXBuffer+336
0x4C2C	0x00000000 ;?ICS_ucUSART1RXBuffer+340
0x4C30	0x00000000 ;?ICS_ucUSART1RXBuffer+344
0x4C34	0x00000000 ;?ICS_ucUSART1RXBuffer+348
0x4C38	0x00000000 ;?ICS_ucUSART1RXBuffer+352
0x4C3C	0x00000000 ;?ICS_ucUSART1RXBuffer+356
0x4C40	0x00000000 ;?ICS_ucUSART1RXBuffer+360
0x4C44	0x00000000 ;?ICS_ucUSART1RXBuffer+364
0x4C48	0x00000000 ;?ICS_ucUSART1RXBuffer+368
0x4C4C	0x00000000 ;?ICS_ucUSART1RXBuffer+372
0x4C50	0x00000000 ;?ICS_ucUSART1RXBuffer+376
0x4C54	0x00000000 ;?ICS_ucUSART1RXBuffer+380
0x4C58	0x00000000 ;?ICS_ucUSART1RXBuffer+384
0x4C5C	0x00000000 ;?ICS_ucUSART1RXBuffer+388
0x4C60	0x00000000 ;?ICS_ucUSART1RXBuffer+392
0x4C64	0x00000000 ;?ICS_ucUSART1RXBuffer+396
0x4C68	0x00000000 ;?ICS_ucUSART1RXBuffer+400
0x4C6C	0x00000000 ;?ICS_ucUSART1RXBuffer+404
0x4C70	0x00000000 ;?ICS_ucUSART1RXBuffer+408
0x4C74	0x00000000 ;?ICS_ucUSART1RXBuffer+412
0x4C78	0x00000000 ;?ICS_ucUSART1RXBuffer+416
0x4C7C	0x00000000 ;?ICS_ucUSART1RXBuffer+420
0x4C80	0x00000000 ;?ICS_ucUSART1RXBuffer+424
0x4C84	0x00000000 ;?ICS_ucUSART1RXBuffer+428
0x4C88	0x00000000 ;?ICS_ucUSART1RXBuffer+432
0x4C8C	0x00000000 ;?ICS_ucUSART1RXBuffer+436
0x4C90	0x00000000 ;?ICS_ucUSART1RXBuffer+440
0x4C94	0x00000000 ;?ICS_ucUSART1RXBuffer+444
0x4C98	0x00000000 ;?ICS_ucUSART1RXBuffer+448
0x4C9C	0x00000000 ;?ICS_ucUSART1RXBuffer+452
0x4CA0	0x00000000 ;?ICS_ucUSART1RXBuffer+456
0x4CA4	0x00000000 ;?ICS_ucUSART1RXBuffer+460
0x4CA8	0x00000000 ;?ICS_ucUSART1RXBuffer+464
0x4CAC	0x00000000 ;?ICS_ucUSART1RXBuffer+468
0x4CB0	0x00000000 ;?ICS_ucUSART1RXBuffer+472
0x4CB4	0x00000000 ;?ICS_ucUSART1RXBuffer+476
0x4CB8	0x00000000 ;?ICS_ucUSART1RXBuffer+480
0x4CBC	0x00000000 ;?ICS_ucUSART1RXBuffer+484
0x4CC0	0x00000000 ;?ICS_ucUSART1RXBuffer+488
0x4CC4	0x00000000 ;?ICS_ucUSART1RXBuffer+492
0x4CC8	0x00000000 ;?ICS_ucUSART1RXBuffer+496
0x4CCC	0x00000000 ;?ICS_ucUSART1RXBuffer+500
0x4CD0	0x00000000 ;?ICS_ucUSART1RXBuffer+504
0x4CD4	0x00000000 ;?ICS_ucUSART1RXBuffer+508
0x4CD8	0x00000000 ;?ICS_ucUSART1RXBuffer+512
0x4CDC	0x00000000 ;?ICS_ucUSART1RXBuffer+516
0x4CE0	0x00000000 ;?ICS_ucUSART1RXBuffer+520
0x4CE4	0x00000000 ;?ICS_ucUSART1RXBuffer+524
0x4CE8	0x00000000 ;?ICS_ucUSART1RXBuffer+528
0x4CEC	0x00000000 ;?ICS_ucUSART1RXBuffer+532
0x4CF0	0x00000000 ;?ICS_ucUSART1RXBuffer+536
0x4CF4	0x00000000 ;?ICS_ucUSART1RXBuffer+540
0x4CF8	0x00000000 ;?ICS_ucUSART1RXBuffer+544
0x4CFC	0x00000000 ;?ICS_ucUSART1RXBuffer+548
0x4D00	0x00000000 ;?ICS_ucUSART1RXBuffer+552
0x4D04	0x00000000 ;?ICS_ucUSART1RXBuffer+556
0x4D08	0x00000000 ;?ICS_ucUSART1RXBuffer+560
0x4D0C	0x00000000 ;?ICS_ucUSART1RXBuffer+564
0x4D10	0x00000000 ;?ICS_ucUSART1RXBuffer+568
0x4D14	0x00000000 ;?ICS_ucUSART1RXBuffer+572
0x4D18	0x00000000 ;?ICS_ucUSART1RXBuffer+576
0x4D1C	0x00000000 ;?ICS_ucUSART1RXBuffer+580
0x4D20	0x00000000 ;?ICS_ucUSART1RXBuffer+584
0x4D24	0x00000000 ;?ICS_ucUSART1RXBuffer+588
0x4D28	0x00000000 ;?ICS_ucUSART1RXBuffer+592
0x4D2C	0x00000000 ;?ICS_ucUSART1RXBuffer+596
0x4D30	0x00000000 ;?ICS_ucUSART1RXBuffer+600
0x4D34	0x00000000 ;?ICS_ucUSART1RXBuffer+604
0x4D38	0x00000000 ;?ICS_ucUSART1RXBuffer+608
0x4D3C	0x00000000 ;?ICS_ucUSART1RXBuffer+612
0x4D40	0x00000000 ;?ICS_ucUSART1RXBuffer+616
0x4D44	0x00000000 ;?ICS_ucUSART1RXBuffer+620
0x4D48	0x00000000 ;?ICS_ucUSART1RXBuffer+624
0x4D4C	0x00000000 ;?ICS_ucUSART1RXBuffer+628
0x4D50	0x00000000 ;?ICS_ucUSART1RXBuffer+632
0x4D54	0x00000000 ;?ICS_ucUSART1RXBuffer+636
0x4D58	0x00000000 ;?ICS_ucUSART1RXBuffer+640
0x4D5C	0x00000000 ;?ICS_ucUSART1RXBuffer+644
0x4D60	0x00000000 ;?ICS_ucUSART1RXBuffer+648
0x4D64	0x00000000 ;?ICS_ucUSART1RXBuffer+652
0x4D68	0x00000000 ;?ICS_ucUSART1RXBuffer+656
0x4D6C	0x00000000 ;?ICS_ucUSART1RXBuffer+660
0x4D70	0x00000000 ;?ICS_ucUSART1RXBuffer+664
0x4D74	0x00000000 ;?ICS_ucUSART1RXBuffer+668
0x4D78	0x00000000 ;?ICS_ucUSART1RXBuffer+672
0x4D7C	0x00000000 ;?ICS_ucUSART1RXBuffer+676
0x4D80	0x00000000 ;?ICS_ucUSART1RXBuffer+680
0x4D84	0x00000000 ;?ICS_ucUSART1RXBuffer+684
0x4D88	0x00000000 ;?ICS_ucUSART1RXBuffer+688
0x4D8C	0x00000000 ;?ICS_ucUSART1RXBuffer+692
0x4D90	0x00000000 ;?ICS_ucUSART1RXBuffer+696
0x4D94	0x00000000 ;?ICS_ucUSART1RXBuffer+700
0x4D98	0x00000000 ;?ICS_ucUSART1RXBuffer+704
0x4D9C	0x00000000 ;?ICS_ucUSART1RXBuffer+708
0x4DA0	0x00000000 ;?ICS_ucUSART1RXBuffer+712
0x4DA4	0x00000000 ;?ICS_ucUSART1RXBuffer+716
0x4DA8	0x00000000 ;?ICS_ucUSART1RXBuffer+720
0x4DAC	0x00000000 ;?ICS_ucUSART1RXBuffer+724
0x4DB0	0x00000000 ;?ICS_ucUSART1RXBuffer+728
0x4DB4	0x00000000 ;?ICS_ucUSART1RXBuffer+732
0x4DB8	0x00000000 ;?ICS_ucUSART1RXBuffer+736
0x4DBC	0x00000000 ;?ICS_ucUSART1RXBuffer+740
0x4DC0	0x00000000 ;?ICS_ucUSART1RXBuffer+744
0x4DC4	0x00000000 ;?ICS_ucUSART1RXBuffer+748
0x4DC8	0x00000000 ;?ICS_ucUSART1RXBuffer+752
0x4DCC	0x00000000 ;?ICS_ucUSART1RXBuffer+756
0x4DD0	0x00000000 ;?ICS_ucUSART1RXBuffer+760
0x4DD4	0x00000000 ;?ICS_ucUSART1RXBuffer+764
0x4DD8	0x00000000 ;?ICS_ucUSART1RXBuffer+768
0x4DDC	0x00000000 ;?ICS_ucUSART1RXBuffer+772
0x4DE0	0x00000000 ;?ICS_ucUSART1RXBuffer+776
0x4DE4	0x00000000 ;?ICS_ucUSART1RXBuffer+780
0x4DE8	0x00000000 ;?ICS_ucUSART1RXBuffer+784
0x4DEC	0x00000000 ;?ICS_ucUSART1RXBuffer+788
0x4DF0	0x00000000 ;?ICS_ucUSART1RXBuffer+792
0x4DF4	0x00000000 ;?ICS_ucUSART1RXBuffer+796
0x4DF8	0x00000000 ;?ICS_ucUSART1RXBuffer+800
0x4DFC	0x00000000 ;?ICS_ucUSART1RXBuffer+804
0x4E00	0x00000000 ;?ICS_ucUSART1RXBuffer+808
0x4E04	0x00000000 ;?ICS_ucUSART1RXBuffer+812
0x4E08	0x00000000 ;?ICS_ucUSART1RXBuffer+816
0x4E0C	0x00000000 ;?ICS_ucUSART1RXBuffer+820
0x4E10	0x00000000 ;?ICS_ucUSART1RXBuffer+824
0x4E14	0x00000000 ;?ICS_ucUSART1RXBuffer+828
0x4E18	0x00000000 ;?ICS_ucUSART1RXBuffer+832
0x4E1C	0x00000000 ;?ICS_ucUSART1RXBuffer+836
0x4E20	0x00000000 ;?ICS_ucUSART1RXBuffer+840
0x4E24	0x00000000 ;?ICS_ucUSART1RXBuffer+844
0x4E28	0x00000000 ;?ICS_ucUSART1RXBuffer+848
0x4E2C	0x00000000 ;?ICS_ucUSART1RXBuffer+852
0x4E30	0x00000000 ;?ICS_ucUSART1RXBuffer+856
0x4E34	0x00000000 ;?ICS_ucUSART1RXBuffer+860
0x4E38	0x00000000 ;?ICS_ucUSART1RXBuffer+864
0x4E3C	0x00000000 ;?ICS_ucUSART1RXBuffer+868
0x4E40	0x00000000 ;?ICS_ucUSART1RXBuffer+872
0x4E44	0x00000000 ;?ICS_ucUSART1RXBuffer+876
0x4E48	0x00000000 ;?ICS_ucUSART1RXBuffer+880
0x4E4C	0x00000000 ;?ICS_ucUSART1RXBuffer+884
0x4E50	0x00000000 ;?ICS_ucUSART1RXBuffer+888
0x4E54	0x00000000 ;?ICS_ucUSART1RXBuffer+892
0x4E58	0x00000000 ;?ICS_ucUSART1RXBuffer+896
0x4E5C	0x00000000 ;?ICS_ucUSART1RXBuffer+900
0x4E60	0x00000000 ;?ICS_ucUSART1RXBuffer+904
0x4E64	0x00000000 ;?ICS_ucUSART1RXBuffer+908
0x4E68	0x00000000 ;?ICS_ucUSART1RXBuffer+912
0x4E6C	0x00000000 ;?ICS_ucUSART1RXBuffer+916
0x4E70	0x00000000 ;?ICS_ucUSART1RXBuffer+920
0x4E74	0x00000000 ;?ICS_ucUSART1RXBuffer+924
0x4E78	0x00000000 ;?ICS_ucUSART1RXBuffer+928
0x4E7C	0x00000000 ;?ICS_ucUSART1RXBuffer+932
0x4E80	0x00000000 ;?ICS_ucUSART1RXBuffer+936
0x4E84	0x00000000 ;?ICS_ucUSART1RXBuffer+940
0x4E88	0x00000000 ;?ICS_ucUSART1RXBuffer+944
0x4E8C	0x00000000 ;?ICS_ucUSART1RXBuffer+948
0x4E90	0x00000000 ;?ICS_ucUSART1RXBuffer+952
0x4E94	0x00000000 ;?ICS_ucUSART1RXBuffer+956
0x4E98	0x00000000 ;?ICS_ucUSART1RXBuffer+960
0x4E9C	0x00000000 ;?ICS_ucUSART1RXBuffer+964
0x4EA0	0x00000000 ;?ICS_ucUSART1RXBuffer+968
0x4EA4	0x00000000 ;?ICS_ucUSART1RXBuffer+972
0x4EA8	0x00000000 ;?ICS_ucUSART1RXBuffer+976
0x4EAC	0x00000000 ;?ICS_ucUSART1RXBuffer+980
0x4EB0	0x00000000 ;?ICS_ucUSART1RXBuffer+984
0x4EB4	0x00000000 ;?ICS_ucUSART1RXBuffer+988
0x4EB8	0x00000000 ;?ICS_ucUSART1RXBuffer+992
0x4EBC	0x00000000 ;?ICS_ucUSART1RXBuffer+996
0x4EC0	0x00000000 ;?ICS_ucUSART1RXBuffer+1000
0x4EC4	0x00000000 ;?ICS_ucUSART1RXBuffer+1004
0x4EC8	0x00000000 ;?ICS_ucUSART1RXBuffer+1008
0x4ECC	0x00000000 ;?ICS_ucUSART1RXBuffer+1012
0x4ED0	0x00000000 ;?ICS_ucUSART1RXBuffer+1016
0x4ED4	0x00000000 ;?ICS_ucUSART1RXBuffer+1020
0x4ED8	0x00000000 ;?ICS_ucUSART1RXBuffer+1024
0x4EDC	0x00000000 ;?ICS_ucUSART1RXBuffer+1028
0x4EE0	0x00000000 ;?ICS_ucUSART1RXBuffer+1032
0x4EE4	0x00000000 ;?ICS_ucUSART1RXBuffer+1036
0x4EE8	0x00000000 ;?ICS_ucUSART1RXBuffer+1040
0x4EEC	0x00000000 ;?ICS_ucUSART1RXBuffer+1044
0x4EF0	0x00000000 ;?ICS_ucUSART1RXBuffer+1048
0x4EF4	0x00000000 ;?ICS_ucUSART1RXBuffer+1052
0x4EF8	0x00000000 ;?ICS_ucUSART1RXBuffer+1056
0x4EFC	0x00000000 ;?ICS_ucUSART1RXBuffer+1060
0x4F00	0x00000000 ;?ICS_ucUSART1RXBuffer+1064
0x4F04	0x00000000 ;?ICS_ucUSART1RXBuffer+1068
0x4F08	0x00000000 ;?ICS_ucUSART1RXBuffer+1072
0x4F0C	0x00000000 ;?ICS_ucUSART1RXBuffer+1076
0x4F10	0x00000000 ;?ICS_ucUSART1RXBuffer+1080
0x4F14	0x00000000 ;?ICS_ucUSART1RXBuffer+1084
0x4F18	0x00000000 ;?ICS_ucUSART1RXBuffer+1088
0x4F1C	0x00000000 ;?ICS_ucUSART1RXBuffer+1092
0x4F20	0x00000000 ;?ICS_ucUSART1RXBuffer+1096
0x4F24	0x00000000 ;?ICS_ucUSART1RXBuffer+1100
0x4F28	0x00000000 ;?ICS_ucUSART1RXBuffer+1104
0x4F2C	0x00000000 ;?ICS_ucUSART1RXBuffer+1108
0x4F30	0x00000000 ;?ICS_ucUSART1RXBuffer+1112
0x4F34	0x00000000 ;?ICS_ucUSART1RXBuffer+1116
0x4F38	0x00000000 ;?ICS_ucUSART1RXBuffer+1120
0x4F3C	0x00000000 ;?ICS_ucUSART1RXBuffer+1124
0x4F40	0x00000000 ;?ICS_ucUSART1RXBuffer+1128
0x4F44	0x00000000 ;?ICS_ucUSART1RXBuffer+1132
0x4F48	0x00000000 ;?ICS_ucUSART1RXBuffer+1136
0x4F4C	0x00000000 ;?ICS_ucUSART1RXBuffer+1140
0x4F50	0x00000000 ;?ICS_ucUSART1RXBuffer+1144
0x4F54	0x00000000 ;?ICS_ucUSART1RXBuffer+1148
0x4F58	0x00000000 ;?ICS_ucUSART1RXBuffer+1152
0x4F5C	0x00000000 ;?ICS_ucUSART1RXBuffer+1156
0x4F60	0x00000000 ;?ICS_ucUSART1RXBuffer+1160
0x4F64	0x00000000 ;?ICS_ucUSART1RXBuffer+1164
0x4F68	0x00000000 ;?ICS_ucUSART1RXBuffer+1168
0x4F6C	0x00000000 ;?ICS_ucUSART1RXBuffer+1172
0x4F70	0x00000000 ;?ICS_ucUSART1RXBuffer+1176
0x4F74	0x00000000 ;?ICS_ucUSART1RXBuffer+1180
0x4F78	0x00000000 ;?ICS_ucUSART1RXBuffer+1184
0x4F7C	0x00000000 ;?ICS_ucUSART1RXBuffer+1188
0x4F80	0x00000000 ;?ICS_ucUSART1RXBuffer+1192
0x4F84	0x00000000 ;?ICS_ucUSART1RXBuffer+1196
0x4F88	0x00000000 ;?ICS_ucUSART1RXBuffer+1200
0x4F8C	0x00000000 ;?ICS_ucUSART1RXBuffer+1204
0x4F90	0x00000000 ;?ICS_ucUSART1RXBuffer+1208
0x4F94	0x00000000 ;?ICS_ucUSART1RXBuffer+1212
0x4F98	0x00000000 ;?ICS_ucUSART1RXBuffer+1216
0x4F9C	0x00000000 ;?ICS_ucUSART1RXBuffer+1220
0x4FA0	0x00000000 ;?ICS_ucUSART1RXBuffer+1224
0x4FA4	0x00000000 ;?ICS_ucUSART1RXBuffer+1228
0x4FA8	0x00000000 ;?ICS_ucUSART1RXBuffer+1232
0x4FAC	0x00000000 ;?ICS_ucUSART1RXBuffer+1236
0x4FB0	0x00000000 ;?ICS_ucUSART1RXBuffer+1240
0x4FB4	0x00000000 ;?ICS_ucUSART1RXBuffer+1244
0x4FB8	0x00000000 ;?ICS_ucUSART1RXBuffer+1248
0x4FBC	0x00000000 ;?ICS_ucUSART1RXBuffer+1252
0x4FC0	0x00000000 ;?ICS_ucUSART1RXBuffer+1256
0x4FC4	0x00000000 ;?ICS_ucUSART1RXBuffer+1260
0x4FC8	0x00000000 ;?ICS_ucUSART1RXBuffer+1264
0x4FCC	0x00000000 ;?ICS_ucUSART1RXBuffer+1268
0x4FD0	0x00000000 ;?ICS_ucUSART1RXBuffer+1272
0x4FD4	0x00000000 ;?ICS_ucUSART1RXBuffer+1276
0x4FD8	0x00000000 ;?ICS_ucUSART1RXBuffer+1280
0x4FDC	0x00000000 ;?ICS_ucUSART1RXBuffer+1284
0x4FE0	0x00000000 ;?ICS_ucUSART1RXBuffer+1288
0x4FE4	0x00000000 ;?ICS_ucUSART1RXBuffer+1292
0x4FE8	0x00000000 ;?ICS_ucUSART1RXBuffer+1296
0x4FEC	0x00000000 ;?ICS_ucUSART1RXBuffer+1300
0x4FF0	0x00000000 ;?ICS_ucUSART1RXBuffer+1304
0x4FF4	0x00000000 ;?ICS_ucUSART1RXBuffer+1308
0x4FF8	0x00000000 ;?ICS_ucUSART1RXBuffer+1312
0x4FFC	0x00000000 ;?ICS_ucUSART1RXBuffer+1316
0x5000	0x00000000 ;?ICS_ucUSART1RXBuffer+1320
0x5004	0x00000000 ;?ICS_ucUSART1RXBuffer+1324
0x5008	0x00000000 ;?ICS_ucUSART1RXBuffer+1328
0x500C	0x00000000 ;?ICS_ucUSART1RXBuffer+1332
0x5010	0x00000000 ;?ICS_ucUSART1RXBuffer+1336
0x5014	0x00000000 ;?ICS_ucUSART1RXBuffer+1340
0x5018	0x00000000 ;?ICS_ucUSART1RXBuffer+1344
0x501C	0x00000000 ;?ICS_ucUSART1RXBuffer+1348
0x5020	0x00000000 ;?ICS_ucUSART1RXBuffer+1352
0x5024	0x00000000 ;?ICS_ucUSART1RXBuffer+1356
0x5028	0x00000000 ;?ICS_ucUSART1RXBuffer+1360
0x502C	0x00000000 ;?ICS_ucUSART1RXBuffer+1364
0x5030	0x00000000 ;?ICS_ucUSART1RXBuffer+1368
0x5034	0x00000000 ;?ICS_ucUSART1RXBuffer+1372
0x5038	0x00000000 ;?ICS_ucUSART1RXBuffer+1376
0x503C	0x00000000 ;?ICS_ucUSART1RXBuffer+1380
0x5040	0x00000000 ;?ICS_ucUSART1RXBuffer+1384
0x5044	0x00000000 ;?ICS_ucUSART1RXBuffer+1388
0x5048	0x00000000 ;?ICS_ucUSART1RXBuffer+1392
0x504C	0x00000000 ;?ICS_ucUSART1RXBuffer+1396
0x5050	0x00000000 ;?ICS_ucUSART1RXBuffer+1400
0x5054	0x00000000 ;?ICS_ucUSART1RXBuffer+1404
0x5058	0x00000000 ;?ICS_ucUSART1RXBuffer+1408
0x505C	0x00000000 ;?ICS_ucUSART1RXBuffer+1412
0x5060	0x00000000 ;?ICS_ucUSART1RXBuffer+1416
0x5064	0x00000000 ;?ICS_ucUSART1RXBuffer+1420
0x5068	0x00000000 ;?ICS_ucUSART1RXBuffer+1424
0x506C	0x00000000 ;?ICS_ucUSART1RXBuffer+1428
0x5070	0x00000000 ;?ICS_ucUSART1RXBuffer+1432
0x5074	0x00000000 ;?ICS_ucUSART1RXBuffer+1436
0x5078	0x00000000 ;?ICS_ucUSART1RXBuffer+1440
0x507C	0x00000000 ;?ICS_ucUSART1RXBuffer+1444
0x5080	0x00000000 ;?ICS_ucUSART1RXBuffer+1448
0x5084	0x00000000 ;?ICS_ucUSART1RXBuffer+1452
0x5088	0x00000000 ;?ICS_ucUSART1RXBuffer+1456
0x508C	0x00000000 ;?ICS_ucUSART1RXBuffer+1460
0x5090	0x00000000 ;?ICS_ucUSART1RXBuffer+1464
0x5094	0x00000000 ;?ICS_ucUSART1RXBuffer+1468
0x5098	0x00000000 ;?ICS_ucUSART1RXBuffer+1472
0x509C	0x00000000 ;?ICS_ucUSART1RXBuffer+1476
0x50A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1480
0x50A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1484
0x50A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1488
0x50AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1492
0x50B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1496
0x50B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1500
0x50B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1504
0x50BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1508
0x50C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1512
0x50C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1516
0x50C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1520
0x50CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1524
0x50D0	0x00000000 ;?ICS_ucUSART1RXBuffer+1528
0x50D4	0x00000000 ;?ICS_ucUSART1RXBuffer+1532
0x50D8	0x00000000 ;?ICS_ucUSART1RXBuffer+1536
0x50DC	0x00000000 ;?ICS_ucUSART1RXBuffer+1540
0x50E0	0x00000000 ;?ICS_ucUSART1RXBuffer+1544
0x50E4	0x00000000 ;?ICS_ucUSART1RXBuffer+1548
0x50E8	0x00000000 ;?ICS_ucUSART1RXBuffer+1552
0x50EC	0x00000000 ;?ICS_ucUSART1RXBuffer+1556
0x50F0	0x00000000 ;?ICS_ucUSART1RXBuffer+1560
0x50F4	0x00000000 ;?ICS_ucUSART1RXBuffer+1564
0x50F8	0x00000000 ;?ICS_ucUSART1RXBuffer+1568
0x50FC	0x00000000 ;?ICS_ucUSART1RXBuffer+1572
0x5100	0x00000000 ;?ICS_ucUSART1RXBuffer+1576
0x5104	0x00000000 ;?ICS_ucUSART1RXBuffer+1580
0x5108	0x00000000 ;?ICS_ucUSART1RXBuffer+1584
0x510C	0x00000000 ;?ICS_ucUSART1RXBuffer+1588
0x5110	0x00000000 ;?ICS_ucUSART1RXBuffer+1592
0x5114	0x00000000 ;?ICS_ucUSART1RXBuffer+1596
0x5118	0x00000000 ;?ICS_ucUSART1RXBuffer+1600
0x511C	0x00000000 ;?ICS_ucUSART1RXBuffer+1604
0x5120	0x00000000 ;?ICS_ucUSART1RXBuffer+1608
0x5124	0x00000000 ;?ICS_ucUSART1RXBuffer+1612
0x5128	0x00000000 ;?ICS_ucUSART1RXBuffer+1616
0x512C	0x00000000 ;?ICS_ucUSART1RXBuffer+1620
0x5130	0x00000000 ;?ICS_ucUSART1RXBuffer+1624
0x5134	0x00000000 ;?ICS_ucUSART1RXBuffer+1628
0x5138	0x00000000 ;?ICS_ucUSART1RXBuffer+1632
0x513C	0x00000000 ;?ICS_ucUSART1RXBuffer+1636
0x5140	0x00000000 ;?ICS_ucUSART1RXBuffer+1640
0x5144	0x00000000 ;?ICS_ucUSART1RXBuffer+1644
0x5148	0x00000000 ;?ICS_ucUSART1RXBuffer+1648
0x514C	0x00000000 ;?ICS_ucUSART1RXBuffer+1652
0x5150	0x00000000 ;?ICS_ucUSART1RXBuffer+1656
0x5154	0x00000000 ;?ICS_ucUSART1RXBuffer+1660
0x5158	0x00000000 ;?ICS_ucUSART1RXBuffer+1664
0x515C	0x00000000 ;?ICS_ucUSART1RXBuffer+1668
0x5160	0x00000000 ;?ICS_ucUSART1RXBuffer+1672
0x5164	0x00000000 ;?ICS_ucUSART1RXBuffer+1676
0x5168	0x00000000 ;?ICS_ucUSART1RXBuffer+1680
0x516C	0x00000000 ;?ICS_ucUSART1RXBuffer+1684
0x5170	0x00000000 ;?ICS_ucUSART1RXBuffer+1688
0x5174	0x00000000 ;?ICS_ucUSART1RXBuffer+1692
0x5178	0x00000000 ;?ICS_ucUSART1RXBuffer+1696
0x517C	0x00000000 ;?ICS_ucUSART1RXBuffer+1700
0x5180	0x00000000 ;?ICS_ucUSART1RXBuffer+1704
0x5184	0x00000000 ;?ICS_ucUSART1RXBuffer+1708
0x5188	0x00000000 ;?ICS_ucUSART1RXBuffer+1712
0x518C	0x00000000 ;?ICS_ucUSART1RXBuffer+1716
0x5190	0x00000000 ;?ICS_ucUSART1RXBuffer+1720
0x5194	0x00000000 ;?ICS_ucUSART1RXBuffer+1724
0x5198	0x00000000 ;?ICS_ucUSART1RXBuffer+1728
0x519C	0x00000000 ;?ICS_ucUSART1RXBuffer+1732
0x51A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1736
0x51A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1740
0x51A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1744
0x51AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1748
0x51B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1752
0x51B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1756
0x51B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1760
0x51BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1764
0x51C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1768
0x51C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1772
0x51C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1776
0x51CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1780
0x51D0	0x00000000 ;?ICS_ucUSART1RXBuffer+1784
0x51D4	0x00000000 ;?ICS_ucUSART1RXBuffer+1788
0x51D8	0x00000000 ;?ICS_ucUSART1RXBuffer+1792
0x51DC	0x00000000 ;?ICS_ucUSART1RXBuffer+1796
0x51E0	0x00000000 ;?ICS_ucUSART1RXBuffer+1800
0x51E4	0x00000000 ;?ICS_ucUSART1RXBuffer+1804
0x51E8	0x00000000 ;?ICS_ucUSART1RXBuffer+1808
0x51EC	0x00000000 ;?ICS_ucUSART1RXBuffer+1812
0x51F0	0x00000000 ;?ICS_ucUSART1RXBuffer+1816
0x51F4	0x00000000 ;?ICS_ucUSART1RXBuffer+1820
0x51F8	0x00000000 ;?ICS_ucUSART1RXBuffer+1824
0x51FC	0x00000000 ;?ICS_ucUSART1RXBuffer+1828
0x5200	0x00000000 ;?ICS_ucUSART1RXBuffer+1832
0x5204	0x00000000 ;?ICS_ucUSART1RXBuffer+1836
0x5208	0x00000000 ;?ICS_ucUSART1RXBuffer+1840
0x520C	0x00000000 ;?ICS_ucUSART1RXBuffer+1844
0x5210	0x00000000 ;?ICS_ucUSART1RXBuffer+1848
0x5214	0x00000000 ;?ICS_ucUSART1RXBuffer+1852
0x5218	0x00000000 ;?ICS_ucUSART1RXBuffer+1856
0x521C	0x00000000 ;?ICS_ucUSART1RXBuffer+1860
0x5220	0x00000000 ;?ICS_ucUSART1RXBuffer+1864
0x5224	0x00000000 ;?ICS_ucUSART1RXBuffer+1868
0x5228	0x00000000 ;?ICS_ucUSART1RXBuffer+1872
0x522C	0x00000000 ;?ICS_ucUSART1RXBuffer+1876
0x5230	0x00000000 ;?ICS_ucUSART1RXBuffer+1880
0x5234	0x00000000 ;?ICS_ucUSART1RXBuffer+1884
0x5238	0x00000000 ;?ICS_ucUSART1RXBuffer+1888
0x523C	0x00000000 ;?ICS_ucUSART1RXBuffer+1892
0x5240	0x00000000 ;?ICS_ucUSART1RXBuffer+1896
0x5244	0x00000000 ;?ICS_ucUSART1RXBuffer+1900
0x5248	0x00000000 ;?ICS_ucUSART1RXBuffer+1904
0x524C	0x00000000 ;?ICS_ucUSART1RXBuffer+1908
0x5250	0x00000000 ;?ICS_ucUSART1RXBuffer+1912
0x5254	0x00000000 ;?ICS_ucUSART1RXBuffer+1916
0x5258	0x00000000 ;?ICS_ucUSART1RXBuffer+1920
0x525C	0x00000000 ;?ICS_ucUSART1RXBuffer+1924
0x5260	0x00000000 ;?ICS_ucUSART1RXBuffer+1928
0x5264	0x00000000 ;?ICS_ucUSART1RXBuffer+1932
0x5268	0x00000000 ;?ICS_ucUSART1RXBuffer+1936
0x526C	0x00000000 ;?ICS_ucUSART1RXBuffer+1940
0x5270	0x00000000 ;?ICS_ucUSART1RXBuffer+1944
0x5274	0x00000000 ;?ICS_ucUSART1RXBuffer+1948
0x5278	0x00000000 ;?ICS_ucUSART1RXBuffer+1952
0x527C	0x00000000 ;?ICS_ucUSART1RXBuffer+1956
0x5280	0x00000000 ;?ICS_ucUSART1RXBuffer+1960
0x5284	0x00000000 ;?ICS_ucUSART1RXBuffer+1964
0x5288	0x00000000 ;?ICS_ucUSART1RXBuffer+1968
0x528C	0x00000000 ;?ICS_ucUSART1RXBuffer+1972
0x5290	0x00000000 ;?ICS_ucUSART1RXBuffer+1976
0x5294	0x00000000 ;?ICS_ucUSART1RXBuffer+1980
0x5298	0x00000000 ;?ICS_ucUSART1RXBuffer+1984
0x529C	0x00000000 ;?ICS_ucUSART1RXBuffer+1988
0x52A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1992
0x52A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1996
0x52A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2000
0x52AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2004
0x52B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2008
0x52B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2012
0x52B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2016
0x52BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2020
0x52C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2024
0x52C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2028
0x52C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2032
0x52CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2036
0x52D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2040
0x52D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2044
0x52D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2048
0x52DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2052
0x52E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2056
0x52E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2060
0x52E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2064
0x52EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2068
0x52F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2072
0x52F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2076
0x52F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2080
0x52FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2084
0x5300	0x00000000 ;?ICS_ucUSART1RXBuffer+2088
0x5304	0x00000000 ;?ICS_ucUSART1RXBuffer+2092
0x5308	0x00000000 ;?ICS_ucUSART1RXBuffer+2096
0x530C	0x00000000 ;?ICS_ucUSART1RXBuffer+2100
0x5310	0x00000000 ;?ICS_ucUSART1RXBuffer+2104
0x5314	0x00000000 ;?ICS_ucUSART1RXBuffer+2108
0x5318	0x00000000 ;?ICS_ucUSART1RXBuffer+2112
0x531C	0x00000000 ;?ICS_ucUSART1RXBuffer+2116
0x5320	0x00000000 ;?ICS_ucUSART1RXBuffer+2120
0x5324	0x00000000 ;?ICS_ucUSART1RXBuffer+2124
0x5328	0x00000000 ;?ICS_ucUSART1RXBuffer+2128
0x532C	0x00000000 ;?ICS_ucUSART1RXBuffer+2132
0x5330	0x00000000 ;?ICS_ucUSART1RXBuffer+2136
0x5334	0x00000000 ;?ICS_ucUSART1RXBuffer+2140
0x5338	0x00000000 ;?ICS_ucUSART1RXBuffer+2144
0x533C	0x00000000 ;?ICS_ucUSART1RXBuffer+2148
0x5340	0x00000000 ;?ICS_ucUSART1RXBuffer+2152
0x5344	0x00000000 ;?ICS_ucUSART1RXBuffer+2156
0x5348	0x00000000 ;?ICS_ucUSART1RXBuffer+2160
0x534C	0x00000000 ;?ICS_ucUSART1RXBuffer+2164
0x5350	0x00000000 ;?ICS_ucUSART1RXBuffer+2168
0x5354	0x00000000 ;?ICS_ucUSART1RXBuffer+2172
0x5358	0x00000000 ;?ICS_ucUSART1RXBuffer+2176
0x535C	0x00000000 ;?ICS_ucUSART1RXBuffer+2180
0x5360	0x00000000 ;?ICS_ucUSART1RXBuffer+2184
0x5364	0x00000000 ;?ICS_ucUSART1RXBuffer+2188
0x5368	0x00000000 ;?ICS_ucUSART1RXBuffer+2192
0x536C	0x00000000 ;?ICS_ucUSART1RXBuffer+2196
0x5370	0x00000000 ;?ICS_ucUSART1RXBuffer+2200
0x5374	0x00000000 ;?ICS_ucUSART1RXBuffer+2204
0x5378	0x00000000 ;?ICS_ucUSART1RXBuffer+2208
0x537C	0x00000000 ;?ICS_ucUSART1RXBuffer+2212
0x5380	0x00000000 ;?ICS_ucUSART1RXBuffer+2216
0x5384	0x00000000 ;?ICS_ucUSART1RXBuffer+2220
0x5388	0x00000000 ;?ICS_ucUSART1RXBuffer+2224
0x538C	0x00000000 ;?ICS_ucUSART1RXBuffer+2228
0x5390	0x00000000 ;?ICS_ucUSART1RXBuffer+2232
0x5394	0x00000000 ;?ICS_ucUSART1RXBuffer+2236
0x5398	0x00000000 ;?ICS_ucUSART1RXBuffer+2240
0x539C	0x00000000 ;?ICS_ucUSART1RXBuffer+2244
0x53A0	0x00000000 ;?ICS_ucUSART1RXBuffer+2248
0x53A4	0x00000000 ;?ICS_ucUSART1RXBuffer+2252
0x53A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2256
0x53AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2260
0x53B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2264
0x53B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2268
0x53B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2272
0x53BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2276
0x53C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2280
0x53C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2284
0x53C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2288
0x53CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2292
0x53D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2296
0x53D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2300
0x53D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2304
0x53DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2308
0x53E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2312
0x53E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2316
0x53E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2320
0x53EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2324
0x53F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2328
0x53F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2332
0x53F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2336
0x53FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2340
0x5400	0x00000000 ;?ICS_ucUSART1RXBuffer+2344
0x5404	0x00000000 ;?ICS_ucUSART1RXBuffer+2348
0x5408	0x00000000 ;?ICS_ucUSART1RXBuffer+2352
0x540C	0x00000000 ;?ICS_ucUSART1RXBuffer+2356
0x5410	0x00000000 ;?ICS_ucUSART1RXBuffer+2360
0x5414	0x00000000 ;?ICS_ucUSART1RXBuffer+2364
0x5418	0x00000000 ;?ICS_ucUSART1RXBuffer+2368
0x541C	0x00000000 ;?ICS_ucUSART1RXBuffer+2372
0x5420	0x00000000 ;?ICS_ucUSART1RXBuffer+2376
0x5424	0x00000000 ;?ICS_ucUSART1RXBuffer+2380
0x5428	0x00000000 ;?ICS_ucUSART1RXBuffer+2384
0x542C	0x00000000 ;?ICS_ucUSART1RXBuffer+2388
0x5430	0x00000000 ;?ICS_ucUSART1RXBuffer+2392
0x5434	0x00000000 ;?ICS_ucUSART1RXBuffer+2396
0x5438	0x00000000 ;?ICS_ucUSART1RXBuffer+2400
0x543C	0x00000000 ;?ICS_ucUSART1RXBuffer+2404
0x5440	0x00000000 ;?ICS_ucUSART1RXBuffer+2408
0x5444	0x00000000 ;?ICS_ucUSART1RXBuffer+2412
0x5448	0x00000000 ;?ICS_ucUSART1RXBuffer+2416
0x544C	0x00000000 ;?ICS_ucUSART1RXBuffer+2420
0x5450	0x00000000 ;?ICS_ucUSART1RXBuffer+2424
0x5454	0x00000000 ;?ICS_ucUSART1RXBuffer+2428
0x5458	0x00000000 ;?ICS_ucUSART1RXBuffer+2432
0x545C	0x00000000 ;?ICS_ucUSART1RXBuffer+2436
0x5460	0x00000000 ;?ICS_ucUSART1RXBuffer+2440
0x5464	0x00000000 ;?ICS_ucUSART1RXBuffer+2444
0x5468	0x00000000 ;?ICS_ucUSART1RXBuffer+2448
0x546C	0x00000000 ;?ICS_ucUSART1RXBuffer+2452
0x5470	0x00000000 ;?ICS_ucUSART1RXBuffer+2456
0x5474	0x00000000 ;?ICS_ucUSART1RXBuffer+2460
0x5478	0x00000000 ;?ICS_ucUSART1RXBuffer+2464
0x547C	0x00000000 ;?ICS_ucUSART1RXBuffer+2468
0x5480	0x00000000 ;?ICS_ucUSART1RXBuffer+2472
0x5484	0x00000000 ;?ICS_ucUSART1RXBuffer+2476
0x5488	0x00000000 ;?ICS_ucUSART1RXBuffer+2480
0x548C	0x00000000 ;?ICS_ucUSART1RXBuffer+2484
0x5490	0x00000000 ;?ICS_ucUSART1RXBuffer+2488
0x5494	0x00000000 ;?ICS_ucUSART1RXBuffer+2492
0x5498	0x00000000 ;?ICS_ucUSART1RXBuffer+2496
0x549C	0x00000000 ;?ICS_ucUSART1RXBuffer+2500
0x54A0	0x00000000 ;?ICS_ucUSART1RXBuffer+2504
0x54A4	0x00000000 ;?ICS_ucUSART1RXBuffer+2508
0x54A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2512
0x54AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2516
0x54B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2520
0x54B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2524
0x54B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2528
0x54BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2532
0x54C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2536
0x54C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2540
0x54C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2544
0x54CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2548
0x54D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2552
0x54D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2556
0x54D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2560
0x54DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2564
0x54E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2568
0x54E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2572
0x54E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2576
0x54EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2580
0x54F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2584
0x54F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2588
0x54F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2592
0x54FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2596
0x5500	0x00000000 ;?ICS_ucUSART1RXBuffer+2600
0x5504	0x00000000 ;?ICS_ucUSART1RXBuffer+2604
0x5508	0x00000000 ;?ICS_ucUSART1RXBuffer+2608
0x550C	0x00000000 ;?ICS_ucUSART1RXBuffer+2612
0x5510	0x00000000 ;?ICS_ucUSART1RXBuffer+2616
0x5514	0x00000000 ;?ICS_ucUSART1RXBuffer+2620
0x5518	0x00000000 ;?ICS_ucUSART1RXBuffer+2624
0x551C	0x00000000 ;?ICS_ucUSART1RXBuffer+2628
0x5520	0x00000000 ;?ICS_ucUSART1RXBuffer+2632
0x5524	0x00000000 ;?ICS_ucUSART1RXBuffer+2636
0x5528	0x00000000 ;?ICS_ucUSART1RXBuffer+2640
0x552C	0x00000000 ;?ICS_ucUSART1RXBuffer+2644
0x5530	0x00000000 ;?ICS_ucUSART1RXBuffer+2648
0x5534	0x00000000 ;?ICS_ucUSART1RXBuffer+2652
0x5538	0x00000000 ;?ICS_ucUSART1RXBuffer+2656
0x553C	0x00000000 ;?ICS_ucUSART1RXBuffer+2660
0x5540	0x00000000 ;?ICS_ucUSART1RXBuffer+2664
0x5544	0x00000000 ;?ICS_ucUSART1RXBuffer+2668
0x5548	0x00000000 ;?ICS_ucUSART1RXBuffer+2672
0x554C	0x00000000 ;?ICS_ucUSART1RXBuffer+2676
0x5550	0x00000000 ;?ICS_ucUSART1RXBuffer+2680
0x5554	0x00000000 ;?ICS_ucUSART1RXBuffer+2684
0x5558	0x00000000 ;?ICS_ucUSART1RXBuffer+2688
0x555C	0x00000000 ;?ICS_ucUSART1RXBuffer+2692
0x5560	0x00000000 ;?ICS_ucUSART1RXBuffer+2696
0x5564	0x00000000 ;?ICS_ucUSART1RXBuffer+2700
0x5568	0x00000000 ;?ICS_ucUSART1RXBuffer+2704
0x556C	0x00000000 ;?ICS_ucUSART1RXBuffer+2708
0x5570	0x00000000 ;?ICS_ucUSART1RXBuffer+2712
0x5574	0x00000000 ;?ICS_ucUSART1RXBuffer+2716
0x5578	0x00000000 ;?ICS_ucUSART1RXBuffer+2720
0x557C	0x00000000 ;?ICS_ucUSART1RXBuffer+2724
0x5580	0x00000000 ;?ICS_ucUSART1RXBuffer+2728
0x5584	0x00000000 ;?ICS_ucUSART1RXBuffer+2732
0x5588	0x00000000 ;?ICS_ucUSART1RXBuffer+2736
0x558C	0x00000000 ;?ICS_ucUSART1RXBuffer+2740
0x5590	0x00000000 ;?ICS_ucUSART1RXBuffer+2744
0x5594	0x00000000 ;?ICS_ucUSART1RXBuffer+2748
0x5598	0x00000000 ;?ICS_ucUSART1RXBuffer+2752
0x559C	0x00000000 ;?ICS_ucUSART1RXBuffer+2756
0x55A0	0x00000000 ;?ICS_ucUSART1RXBuffer+2760
0x55A4	0x00000000 ;?ICS_ucUSART1RXBuffer+2764
0x55A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2768
0x55AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2772
0x55B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2776
0x55B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2780
0x55B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2784
0x55BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2788
0x55C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2792
0x55C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2796
0x55C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2800
0x55CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2804
0x55D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2808
0x55D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2812
0x55D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2816
0x55DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2820
0x55E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2824
0x55E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2828
0x55E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2832
0x55EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2836
0x55F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2840
0x55F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2844
0x55F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2848
0x55FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2852
0x5600	0x00000000 ;?ICS_ucUSART1RXBuffer+2856
0x5604	0x00000000 ;?ICS_ucUSART1RXBuffer+2860
0x5608	0x00000000 ;?ICS_ucUSART1RXBuffer+2864
0x560C	0x00000000 ;?ICS_ucUSART1RXBuffer+2868
0x5610	0x00000000 ;?ICS_ucUSART1RXBuffer+2872
0x5614	0x00000000 ;?ICS_ucUSART1RXBuffer+2876
0x5618	0x00000000 ;?ICS_ucUSART1RXBuffer+2880
0x561C	0x00000000 ;?ICS_ucUSART1RXBuffer+2884
0x5620	0x00000000 ;?ICS_ucUSART1RXBuffer+2888
0x5624	0x00000000 ;?ICS_ucUSART1RXBuffer+2892
0x5628	0x00000000 ;?ICS_ucUSART1RXBuffer+2896
0x562C	0x00000000 ;?ICS_ucUSART1RXBuffer+2900
0x5630	0x00000000 ;?ICS_ucUSART1RXBuffer+2904
0x5634	0x00000000 ;?ICS_ucUSART1RXBuffer+2908
0x5638	0x00000000 ;?ICS_ucUSART1RXBuffer+2912
0x563C	0x00000000 ;?ICS_ucUSART1RXBuffer+2916
0x5640	0x00000000 ;?ICS_ucUSART1RXBuffer+2920
0x5644	0x00000000 ;?ICS_ucUSART1RXBuffer+2924
0x5648	0x00000000 ;?ICS_ucUSART1RXBuffer+2928
0x564C	0x00000000 ;?ICS_ucUSART1RXBuffer+2932
0x5650	0x00000000 ;?ICS_ucUSART1RXBuffer+2936
0x5654	0x00000000 ;?ICS_ucUSART1RXBuffer+2940
0x5658	0x00000000 ;?ICS_ucUSART1RXBuffer+2944
0x565C	0x00000000 ;?ICS_ucUSART1RXBuffer+2948
0x5660	0x00000000 ;?ICS_ucUSART1RXBuffer+2952
0x5664	0x00000000 ;?ICS_ucUSART1RXBuffer+2956
0x5668	0x00000000 ;?ICS_ucUSART1RXBuffer+2960
0x566C	0x00000000 ;?ICS_ucUSART1RXBuffer+2964
0x5670	0x00000000 ;?ICS_ucUSART1RXBuffer+2968
0x5674	0x00000000 ;?ICS_ucUSART1RXBuffer+2972
0x5678	0x00000000 ;?ICS_ucUSART1RXBuffer+2976
0x567C	0x00000000 ;?ICS_ucUSART1RXBuffer+2980
0x5680	0x00000000 ;?ICS_ucUSART1RXBuffer+2984
0x5684	0x00000000 ;?ICS_ucUSART1RXBuffer+2988
0x5688	0x00000000 ;?ICS_ucUSART1RXBuffer+2992
0x568C	0x00000000 ;?ICS_ucUSART1RXBuffer+2996
0x5690	0x00000000 ;?ICS_ucUSART1RXBuffer+3000
0x5694	0x00000000 ;?ICS_ucUSART1RXBuffer+3004
0x5698	0x00000000 ;?ICS_ucUSART1RXBuffer+3008
0x569C	0x00000000 ;?ICS_ucUSART1RXBuffer+3012
0x56A0	0x00000000 ;?ICS_ucUSART1RXBuffer+3016
0x56A4	0x00000000 ;?ICS_ucUSART1RXBuffer+3020
0x56A8	0x00000000 ;?ICS_ucUSART1RXBuffer+3024
0x56AC	0x00000000 ;?ICS_ucUSART1RXBuffer+3028
0x56B0	0x00000000 ;?ICS_ucUSART1RXBuffer+3032
0x56B4	0x00000000 ;?ICS_ucUSART1RXBuffer+3036
0x56B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3040
0x56BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3044
0x56C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3048
0x56C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3052
0x56C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3056
0x56CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3060
0x56D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3064
0x56D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3068
0x56D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3072
0x56DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3076
0x56E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3080
0x56E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3084
0x56E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3088
0x56EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3092
0x56F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3096
0x56F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3100
0x56F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3104
0x56FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3108
0x5700	0x00000000 ;?ICS_ucUSART1RXBuffer+3112
0x5704	0x00000000 ;?ICS_ucUSART1RXBuffer+3116
0x5708	0x00000000 ;?ICS_ucUSART1RXBuffer+3120
0x570C	0x00000000 ;?ICS_ucUSART1RXBuffer+3124
0x5710	0x00000000 ;?ICS_ucUSART1RXBuffer+3128
0x5714	0x00000000 ;?ICS_ucUSART1RXBuffer+3132
0x5718	0x00000000 ;?ICS_ucUSART1RXBuffer+3136
0x571C	0x00000000 ;?ICS_ucUSART1RXBuffer+3140
0x5720	0x00000000 ;?ICS_ucUSART1RXBuffer+3144
0x5724	0x00000000 ;?ICS_ucUSART1RXBuffer+3148
0x5728	0x00000000 ;?ICS_ucUSART1RXBuffer+3152
0x572C	0x00000000 ;?ICS_ucUSART1RXBuffer+3156
0x5730	0x00000000 ;?ICS_ucUSART1RXBuffer+3160
0x5734	0x00000000 ;?ICS_ucUSART1RXBuffer+3164
0x5738	0x00000000 ;?ICS_ucUSART1RXBuffer+3168
0x573C	0x00000000 ;?ICS_ucUSART1RXBuffer+3172
0x5740	0x00000000 ;?ICS_ucUSART1RXBuffer+3176
0x5744	0x00000000 ;?ICS_ucUSART1RXBuffer+3180
0x5748	0x00000000 ;?ICS_ucUSART1RXBuffer+3184
0x574C	0x00000000 ;?ICS_ucUSART1RXBuffer+3188
0x5750	0x00000000 ;?ICS_ucUSART1RXBuffer+3192
0x5754	0x00000000 ;?ICS_ucUSART1RXBuffer+3196
0x5758	0x00000000 ;?ICS_ucUSART1RXBuffer+3200
0x575C	0x00000000 ;?ICS_ucUSART1RXBuffer+3204
0x5760	0x00000000 ;?ICS_ucUSART1RXBuffer+3208
0x5764	0x00000000 ;?ICS_ucUSART1RXBuffer+3212
0x5768	0x00000000 ;?ICS_ucUSART1RXBuffer+3216
0x576C	0x00000000 ;?ICS_ucUSART1RXBuffer+3220
0x5770	0x00000000 ;?ICS_ucUSART1RXBuffer+3224
0x5774	0x00000000 ;?ICS_ucUSART1RXBuffer+3228
0x5778	0x00000000 ;?ICS_ucUSART1RXBuffer+3232
0x577C	0x00000000 ;?ICS_ucUSART1RXBuffer+3236
0x5780	0x00000000 ;?ICS_ucUSART1RXBuffer+3240
0x5784	0x00000000 ;?ICS_ucUSART1RXBuffer+3244
0x5788	0x00000000 ;?ICS_ucUSART1RXBuffer+3248
0x578C	0x00000000 ;?ICS_ucUSART1RXBuffer+3252
0x5790	0x00000000 ;?ICS_ucUSART1RXBuffer+3256
0x5794	0x00000000 ;?ICS_ucUSART1RXBuffer+3260
0x5798	0x00000000 ;?ICS_ucUSART1RXBuffer+3264
0x579C	0x00000000 ;?ICS_ucUSART1RXBuffer+3268
0x57A0	0x00000000 ;?ICS_ucUSART1RXBuffer+3272
0x57A4	0x00000000 ;?ICS_ucUSART1RXBuffer+3276
0x57A8	0x00000000 ;?ICS_ucUSART1RXBuffer+3280
0x57AC	0x00000000 ;?ICS_ucUSART1RXBuffer+3284
0x57B0	0x00000000 ;?ICS_ucUSART1RXBuffer+3288
0x57B4	0x00000000 ;?ICS_ucUSART1RXBuffer+3292
0x57B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3296
0x57BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3300
0x57C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3304
0x57C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3308
0x57C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3312
0x57CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3316
0x57D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3320
0x57D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3324
0x57D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3328
0x57DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3332
0x57E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3336
0x57E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3340
0x57E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3344
0x57EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3348
0x57F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3352
0x57F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3356
0x57F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3360
0x57FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3364
0x5800	0x00000000 ;?ICS_ucUSART1RXBuffer+3368
0x5804	0x00000000 ;?ICS_ucUSART1RXBuffer+3372
0x5808	0x00000000 ;?ICS_ucUSART1RXBuffer+3376
0x580C	0x00000000 ;?ICS_ucUSART1RXBuffer+3380
0x5810	0x00000000 ;?ICS_ucUSART1RXBuffer+3384
0x5814	0x00000000 ;?ICS_ucUSART1RXBuffer+3388
0x5818	0x00000000 ;?ICS_ucUSART1RXBuffer+3392
0x581C	0x00000000 ;?ICS_ucUSART1RXBuffer+3396
0x5820	0x00000000 ;?ICS_ucUSART1RXBuffer+3400
0x5824	0x00000000 ;?ICS_ucUSART1RXBuffer+3404
0x5828	0x00000000 ;?ICS_ucUSART1RXBuffer+3408
0x582C	0x00000000 ;?ICS_ucUSART1RXBuffer+3412
0x5830	0x00000000 ;?ICS_ucUSART1RXBuffer+3416
0x5834	0x00000000 ;?ICS_ucUSART1RXBuffer+3420
0x5838	0x00000000 ;?ICS_ucUSART1RXBuffer+3424
0x583C	0x00000000 ;?ICS_ucUSART1RXBuffer+3428
0x5840	0x00000000 ;?ICS_ucUSART1RXBuffer+3432
0x5844	0x00000000 ;?ICS_ucUSART1RXBuffer+3436
0x5848	0x00000000 ;?ICS_ucUSART1RXBuffer+3440
0x584C	0x00000000 ;?ICS_ucUSART1RXBuffer+3444
0x5850	0x00000000 ;?ICS_ucUSART1RXBuffer+3448
0x5854	0x00000000 ;?ICS_ucUSART1RXBuffer+3452
0x5858	0x00000000 ;?ICS_ucUSART1RXBuffer+3456
0x585C	0x00000000 ;?ICS_ucUSART1RXBuffer+3460
0x5860	0x00000000 ;?ICS_ucUSART1RXBuffer+3464
0x5864	0x00000000 ;?ICS_ucUSART1RXBuffer+3468
0x5868	0x00000000 ;?ICS_ucUSART1RXBuffer+3472
0x586C	0x00000000 ;?ICS_ucUSART1RXBuffer+3476
0x5870	0x00000000 ;?ICS_ucUSART1RXBuffer+3480
0x5874	0x00000000 ;?ICS_ucUSART1RXBuffer+3484
0x5878	0x00000000 ;?ICS_ucUSART1RXBuffer+3488
0x587C	0x00000000 ;?ICS_ucUSART1RXBuffer+3492
0x5880	0x00000000 ;?ICS_ucUSART1RXBuffer+3496
0x5884	0x00000000 ;?ICS_ucUSART1RXBuffer+3500
0x5888	0x00000000 ;?ICS_ucUSART1RXBuffer+3504
0x588C	0x00000000 ;?ICS_ucUSART1RXBuffer+3508
0x5890	0x00000000 ;?ICS_ucUSART1RXBuffer+3512
0x5894	0x00000000 ;?ICS_ucUSART1RXBuffer+3516
0x5898	0x00000000 ;?ICS_ucUSART1RXBuffer+3520
0x589C	0x00000000 ;?ICS_ucUSART1RXBuffer+3524
0x58A0	0x00000000 ;?ICS_ucUSART1RXBuffer+3528
0x58A4	0x00000000 ;?ICS_ucUSART1RXBuffer+3532
0x58A8	0x00000000 ;?ICS_ucUSART1RXBuffer+3536
0x58AC	0x00000000 ;?ICS_ucUSART1RXBuffer+3540
0x58B0	0x00000000 ;?ICS_ucUSART1RXBuffer+3544
0x58B4	0x00000000 ;?ICS_ucUSART1RXBuffer+3548
0x58B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3552
0x58BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3556
0x58C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3560
0x58C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3564
0x58C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3568
0x58CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3572
0x58D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3576
0x58D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3580
0x58D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3584
0x58DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3588
0x58E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3592
0x58E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3596
0x58E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3600
0x58EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3604
0x58F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3608
0x58F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3612
0x58F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3616
0x58FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3620
0x5900	0x00000000 ;?ICS_ucUSART1RXBuffer+3624
0x5904	0x00000000 ;?ICS_ucUSART1RXBuffer+3628
0x5908	0x00000000 ;?ICS_ucUSART1RXBuffer+3632
0x590C	0x00000000 ;?ICS_ucUSART1RXBuffer+3636
0x5910	0x00000000 ;?ICS_ucUSART1RXBuffer+3640
0x5914	0x00000000 ;?ICS_ucUSART1RXBuffer+3644
0x5918	0x00000000 ;?ICS_ucUSART1RXBuffer+3648
0x591C	0x00000000 ;?ICS_ucUSART1RXBuffer+3652
0x5920	0x00000000 ;?ICS_ucUSART1RXBuffer+3656
0x5924	0x00000000 ;?ICS_ucUSART1RXBuffer+3660
0x5928	0x00000000 ;?ICS_ucUSART1RXBuffer+3664
0x592C	0x00000000 ;?ICS_ucUSART1RXBuffer+3668
0x5930	0x00000000 ;?ICS_ucUSART1RXBuffer+3672
0x5934	0x00000000 ;?ICS_ucUSART1RXBuffer+3676
0x5938	0x00000000 ;?ICS_ucUSART1RXBuffer+3680
0x593C	0x00000000 ;?ICS_ucUSART1RXBuffer+3684
0x5940	0x00000000 ;?ICS_ucUSART1RXBuffer+3688
0x5944	0x00000000 ;?ICS_ucUSART1RXBuffer+3692
0x5948	0x00000000 ;?ICS_ucUSART1RXBuffer+3696
0x594C	0x00000000 ;?ICS_ucUSART1RXBuffer+3700
0x5950	0x00000000 ;?ICS_ucUSART1RXBuffer+3704
0x5954	0x00000000 ;?ICS_ucUSART1RXBuffer+3708
0x5958	0x00000000 ;?ICS_ucUSART1RXBuffer+3712
0x595C	0x00000000 ;?ICS_ucUSART1RXBuffer+3716
0x5960	0x00000000 ;?ICS_ucUSART1RXBuffer+3720
0x5964	0x00000000 ;?ICS_ucUSART1RXBuffer+3724
0x5968	0x00000000 ;?ICS_ucUSART1RXBuffer+3728
0x596C	0x00000000 ;?ICS_ucUSART1RXBuffer+3732
0x5970	0x00000000 ;?ICS_ucUSART1RXBuffer+3736
0x5974	0x00000000 ;?ICS_ucUSART1RXBuffer+3740
0x5978	0x00000000 ;?ICS_ucUSART1RXBuffer+3744
0x597C	0x00000000 ;?ICS_ucUSART1RXBuffer+3748
0x5980	0x00000000 ;?ICS_ucUSART1RXBuffer+3752
0x5984	0x00000000 ;?ICS_ucUSART1RXBuffer+3756
0x5988	0x00000000 ;?ICS_ucUSART1RXBuffer+3760
0x598C	0x00000000 ;?ICS_ucUSART1RXBuffer+3764
0x5990	0x00000000 ;?ICS_ucUSART1RXBuffer+3768
0x5994	0x00000000 ;?ICS_ucUSART1RXBuffer+3772
0x5998	0x00000000 ;?ICS_ucUSART1RXBuffer+3776
0x599C	0x00000000 ;?ICS_ucUSART1RXBuffer+3780
0x59A0	0x00000000 ;?ICS_ucUSART1RXBuffer+3784
0x59A4	0x00000000 ;?ICS_ucUSART1RXBuffer+3788
0x59A8	0x00000000 ;?ICS_ucUSART1RXBuffer+3792
0x59AC	0x00000000 ;?ICS_ucUSART1RXBuffer+3796
0x59B0	0x00000000 ;?ICS_ucUSART1RXBuffer+3800
0x59B4	0x00000000 ;?ICS_ucUSART1RXBuffer+3804
0x59B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3808
0x59BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3812
0x59C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3816
0x59C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3820
0x59C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3824
0x59CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3828
0x59D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3832
0x59D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3836
0x59D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3840
0x59DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3844
0x59E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3848
0x59E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3852
0x59E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3856
0x59EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3860
0x59F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3864
0x59F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3868
0x59F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3872
0x59FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3876
0x5A00	0x00000000 ;?ICS_ucUSART1RXBuffer+3880
0x5A04	0x00000000 ;?ICS_ucUSART1RXBuffer+3884
0x5A08	0x00000000 ;?ICS_ucUSART1RXBuffer+3888
0x5A0C	0x00000000 ;?ICS_ucUSART1RXBuffer+3892
0x5A10	0x00000000 ;?ICS_ucUSART1RXBuffer+3896
0x5A14	0x00000000 ;?ICS_ucUSART1RXBuffer+3900
0x5A18	0x00000000 ;?ICS_ucUSART1RXBuffer+3904
0x5A1C	0x00000000 ;?ICS_ucUSART1RXBuffer+3908
0x5A20	0x00000000 ;?ICS_ucUSART1RXBuffer+3912
0x5A24	0x00000000 ;?ICS_ucUSART1RXBuffer+3916
0x5A28	0x00000000 ;?ICS_ucUSART1RXBuffer+3920
0x5A2C	0x00000000 ;?ICS_ucUSART1RXBuffer+3924
0x5A30	0x00000000 ;?ICS_ucUSART1RXBuffer+3928
0x5A34	0x00000000 ;?ICS_ucUSART1RXBuffer+3932
0x5A38	0x00000000 ;?ICS_ucUSART1RXBuffer+3936
0x5A3C	0x00000000 ;?ICS_ucUSART1RXBuffer+3940
0x5A40	0x00000000 ;?ICS_ucUSART1RXBuffer+3944
0x5A44	0x00000000 ;?ICS_ucUSART1RXBuffer+3948
0x5A48	0x00000000 ;?ICS_ucUSART1RXBuffer+3952
0x5A4C	0x00000000 ;?ICS_ucUSART1RXBuffer+3956
0x5A50	0x00000000 ;?ICS_ucUSART1RXBuffer+3960
0x5A54	0x00000000 ;?ICS_ucUSART1RXBuffer+3964
0x5A58	0x00000000 ;?ICS_ucUSART1RXBuffer+3968
0x5A5C	0x00000000 ;?ICS_ucUSART1RXBuffer+3972
0x5A60	0x00000000 ;?ICS_ucUSART1RXBuffer+3976
0x5A64	0x00000000 ;?ICS_ucUSART1RXBuffer+3980
0x5A68	0x00000000 ;?ICS_ucUSART1RXBuffer+3984
0x5A6C	0x00000000 ;?ICS_ucUSART1RXBuffer+3988
0x5A70	0x00000000 ;?ICS_ucUSART1RXBuffer+3992
0x5A74	0x00000000 ;?ICS_ucUSART1RXBuffer+3996
0x5A78	0x00000000 ;?ICS_ucUSART1RXBuffer+4000
0x5A7C	0x00000000 ;?ICS_ucUSART1RXBuffer+4004
0x5A80	0x00000000 ;?ICS_ucUSART1RXBuffer+4008
0x5A84	0x00000000 ;?ICS_ucUSART1RXBuffer+4012
0x5A88	0x00000000 ;?ICS_ucUSART1RXBuffer+4016
0x5A8C	0x00000000 ;?ICS_ucUSART1RXBuffer+4020
0x5A90	0x00000000 ;?ICS_ucUSART1RXBuffer+4024
0x5A94	0x00000000 ;?ICS_ucUSART1RXBuffer+4028
0x5A98	0x00000000 ;?ICS_ucUSART1RXBuffer+4032
0x5A9C	0x00000000 ;?ICS_ucUSART1RXBuffer+4036
0x5AA0	0x00000000 ;?ICS_ucUSART1RXBuffer+4040
0x5AA4	0x00000000 ;?ICS_ucUSART1RXBuffer+4044
0x5AA8	0x00000000 ;?ICS_ucUSART1RXBuffer+4048
0x5AAC	0x00000000 ;?ICS_ucUSART1RXBuffer+4052
0x5AB0	0x00000000 ;?ICS_ucUSART1RXBuffer+4056
0x5AB4	0x00000000 ;?ICS_ucUSART1RXBuffer+4060
0x5AB8	0x00000000 ;?ICS_ucUSART1RXBuffer+4064
0x5ABC	0x00000000 ;?ICS_ucUSART1RXBuffer+4068
0x5AC0	0x00000000 ;?ICS_ucUSART1RXBuffer+4072
0x5AC4	0x00000000 ;?ICS_ucUSART1RXBuffer+4076
0x5AC8	0x00000000 ;?ICS_ucUSART1RXBuffer+4080
0x5ACC	0x00000000 ;?ICS_ucUSART1RXBuffer+4084
0x5AD0	0x00000000 ;?ICS_ucUSART1RXBuffer+4088
0x5AD4	0x00000000 ;?ICS_ucUSART1RXBuffer+4092
; end of ?ICS_ucUSART1RXBuffer
;DriverRF4463PROMain.c,0 :: ?ICS_ulUSART1ByteReceived [4]
0x5AD8	0x00000000 ;?ICS_ulUSART1ByteReceived+0
; end of ?ICS_ulUSART1ByteReceived
;DriverRF4463PROMain.c,0 :: ?ICS_fUSART1Buffer [4]
0x5ADC	0x00000000 ;?ICS_fUSART1Buffer+0
; end of ?ICS_fUSART1Buffer
;,0 :: _initBlock_6 [42]
; Containing: ?ICS_ucUSARTNull [1]
;             ?ICS_RF_MODEM_MOD_TYPE_12_data [16]
;             ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data [12]
;             ?ICS_RF_MODEM_AFC_GEAR_7_data [13]
0x5AE0	0x0C201100 ;_initBlock_6+0 : ?ICS_ucUSARTNull at 0x5AE0 : ?ICS_RF_MODEM_MOD_TYPE_12_data at 0x5AE1
0x5AE4	0x00000000 ;_initBlock_6+4
0x5AE8	0x00000000 ;_initBlock_6+8
0x5AEC	0x00000000 ;_initBlock_6+12
0x5AF0	0x08201100 ;_initBlock_6+16 : ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data at 0x5AF1
0x5AF4	0x00000018 ;_initBlock_6+20
0x5AF8	0x00000000 ;_initBlock_6+24
0x5AFC	0x07201100 ;_initBlock_6+28 : ?ICS_RF_MODEM_AFC_GEAR_7_data at 0x5AFD
0x5B00	0x0000002C ;_initBlock_6+32
0x5B04	0x00000000 ;_initBlock_6+36
0x5B08	0x0000 ;_initBlock_6+40
; end of _initBlock_6
;,0 :: _initBlock_7 [76]
; Containing: ?ICS_RF_MODEM_OOK_CNT1_11_data [15]
;             ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data [16]
;             ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data [16]
;             ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data [16]
;             ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data [13]
0x5B0A	0x420B2011 ;_initBlock_7+0 : ?ICS_RF_MODEM_OOK_CNT1_11_data at 0x5B0A
0x5B0E	0x00000000 ;_initBlock_7+4
0x5B12	0x00000000 ;_initBlock_7+8
0x5B16	0x11000000 ;_initBlock_7+12 : ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data at 0x5B19
0x5B1A	0x00000C21 ;_initBlock_7+16
0x5B1E	0x00000000 ;_initBlock_7+20
0x5B22	0x00000000 ;_initBlock_7+24
0x5B26	0x11000000 ;_initBlock_7+28 : ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data at 0x5B29
0x5B2A	0x000C0C21 ;_initBlock_7+32
0x5B2E	0x00000000 ;_initBlock_7+36
0x5B32	0x00000000 ;_initBlock_7+40
0x5B36	0x11000000 ;_initBlock_7+44 : ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data at 0x5B39
0x5B3A	0x00180C21 ;_initBlock_7+48
0x5B3E	0x00000000 ;_initBlock_7+52
0x5B42	0x00000000 ;_initBlock_7+56
0x5B46	0x11000000 ;_initBlock_7+60 : ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data at 0x5B49
0x5B4A	0x00380920 ;_initBlock_7+64
0x5B4E	0x00000000 ;_initBlock_7+68
0x5B52	0x00000000 ;_initBlock_7+72
; end of _initBlock_7
;,0 :: _initBlock_8 [24]
; Containing: ?ICS_RF_MODEM_BCR_OSR_1_9_data [13]
;             ?ICS_RF_SYNTH_PFDCP_CPFF_7_data [11]
0x5B56	0x22092011 ;_initBlock_8+0 : ?ICS_RF_MODEM_BCR_OSR_1_9_data at 0x5B56
0x5B5A	0x00000000 ;_initBlock_8+4
0x5B5E	0x00000000 ;_initBlock_8+8
0x5B62	0x07231100 ;_initBlock_8+12 : ?ICS_RF_SYNTH_PFDCP_CPFF_7_data at 0x5B63
0x5B66	0x00000000 ;_initBlock_8+16
0x5B6A	0x00000000 ;_initBlock_8+20
; end of _initBlock_8
;,0 :: _initBlock_9 [2]
; Containing: ?ICS_ucRF4463MatchEnabled [1]
;             ?ICS_ucRF4463ByteMatch1 [1]
0x5B6E	0x0101 ;_initBlock_9+0 : ?ICS_ucRF4463MatchEnabled at 0x5B6E : ?ICS_ucRF4463ByteMatch1 at 0x5B6F
; end of _initBlock_9
;,0 :: _initBlock_10 [2]
; Containing: ?ICS_ucRF4463ByteMask1 [1]
;             ?ICS_ucRF4463MatchEnableReg [1]
0x5B70	0x40FF ;_initBlock_10+0 : ?ICS_ucRF4463ByteMask1 at 0x5B70 : ?ICS_ucRF4463MatchEnableReg at 0x5B71
; end of _initBlock_10
;,0 :: _initBlock_11 [2]
; Containing: ?ICS_ucRF4463ByteMatch2 [1]
;             ?ICS_ucRF4463ByteMask2 [1]
0x5B72	0xFF01 ;_initBlock_11+0 : ?ICS_ucRF4463ByteMatch2 at 0x5B72 : ?ICS_ucRF4463ByteMask2 at 0x5B73
; end of _initBlock_11
;,0 :: _initBlock_12 [2]
; Containing: ?ICS_ucRF4463ByteMatch3 [1]
;             ?ICS_ucRF4463ByteMask3 [1]
0x5B74	0xFF01 ;_initBlock_12+0 : ?ICS_ucRF4463ByteMatch3 at 0x5B74 : ?ICS_ucRF4463ByteMask3 at 0x5B75
; end of _initBlock_12
;,0 :: _initBlock_13 [2]
; Containing: ?ICS_ucRF4463ByteMatch4 [1]
;             ?ICS_ucRF4463ByteMask4 [1]
0x5B76	0xFF01 ;_initBlock_13+0 : ?ICS_ucRF4463ByteMatch4 at 0x5B76 : ?ICS_ucRF4463ByteMask4 at 0x5B77
; end of _initBlock_13
;DriverRF4463PROMain.c,0 :: ?ICS_ulRF4463Step [4]
0x5B78	0x000000FA ;?ICS_ulRF4463Step+0
; end of ?ICS_ulRF4463Step
;DriverRF4463PROMain.c,0 :: ?ICS_CMD_RADIO_POWER_SET [10]
0x5B7C	0x5F544553 ;?ICS_CMD_RADIO_POWER_SET+0
0x5B80	0x45574F50 ;?ICS_CMD_RADIO_POWER_SET+4
0x5B84	0x0052 ;?ICS_CMD_RADIO_POWER_SET+8
; end of ?ICS_CMD_RADIO_POWER_SET
;DriverRF4463PROMain.c,0 :: ?ICS_ANS_COMMAND_VALUE_ACCEPTED [40]
0x5B86	0x4F43205B ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+0
0x5B8A	0x4E414D4D ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+4
0x5B8E	0x205D2044 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+8
0x5B92	0x554C4156 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+12
0x5B96	0x43412045 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+16
0x5B9A	0x54504543 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+20
0x5B9E	0x41204445 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+24
0x5BA2	0x4120444E ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+28
0x5BA6	0x494C5050 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+32
0x5BAA	0x000D4445 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+36
; end of ?ICS_ANS_COMMAND_VALUE_ACCEPTED
;DriverRF4463PROMain.c,0 :: ?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE [32]
0x5BAE	0x4F43205B ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x5BB2	0x4E414D4D ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+4
0x5BB6	0x205D2044 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+8
0x5BBA	0x554C4156 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+12
0x5BBE	0x554F2045 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+16
0x5BC2	0x464F2054 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+20
0x5BC6	0x4E415220 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+24
0x5BCA	0x000D4547 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+28
; end of ?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE
;,0 :: _initBlock_18 [18]
; Containing: ?ICS_CMD_RADIO_BAND_SET [9]
;             ?ICS_CMD_RADIO_RATE_SET [9]
0x5BCE	0x5F544553 ;_initBlock_18+0 : ?ICS_CMD_RADIO_BAND_SET at 0x5BCE
0x5BD2	0x444E4142 ;_initBlock_18+4
0x5BD6	0x54455300 ;_initBlock_18+8 : ?ICS_CMD_RADIO_RATE_SET at 0x5BD7
0x5BDA	0x5441525F ;_initBlock_18+12
0x5BDE	0x0045 ;_initBlock_18+16
; end of _initBlock_18
;,0 :: _initBlock_19 [14]
; Containing: ?ICS_defineTime [1]
;             ?ICS_CMD_RADIO_CHANNEL_SET [12]
;             ?ICS_ucRF4463FreqChannel [1]
0x5BE0	0x54455301 ;_initBlock_19+0 : ?ICS_defineTime at 0x5BE0 : ?ICS_CMD_RADIO_CHANNEL_SET at 0x5BE1
0x5BE4	0x4148435F ;_initBlock_19+4
0x5BE8	0x4C454E4E ;_initBlock_19+8
0x5BEC	0x0100 ;_initBlock_19+12 : ?ICS_ucRF4463FreqChannel at 0x5BED
; end of _initBlock_19
;,0 :: _initBlock_20 [16]
; Containing: ?ICS_CMD_RADIO_BW_SET [7]
;             ?ICS_CMD_RADIO_MODE_SET [9]
0x5BEE	0x5F544553 ;_initBlock_20+0 : ?ICS_CMD_RADIO_BW_SET at 0x5BEE
0x5BF2	0x53005742 ;_initBlock_20+4 : ?ICS_CMD_RADIO_MODE_SET at 0x5BF5
0x5BF6	0x4D5F5445 ;_initBlock_20+8
0x5BFA	0x0045444F ;_initBlock_20+12
; end of _initBlock_20
;,0 :: _initBlock_21 [178]
; Containing: ?ICS_ARG_RADIO_MODE_STBY [5]
;             ?ICS_ANS_COMMAND_MODE_STBY [34]
;             ?ICS_ARG_RADIO_MODE_TX_CONT [8]
;             ?ICS_ANS_COMMAND_MODE_TX_CONT [34]
;             ?ICS_ARG_RADIO_MODE_RX_CONT [8]
;             ?ICS_ANS_COMMAND_MODE_RX_CONT [34]
;             ?ICS_ARG_RADIO_MODE_TX_MASTER [10]
;             ?ICS_ANS_COMMAND_MODE_TX_MASTER [36]
;             ?ICS_ARG_RADIO_MODE_RX_SLAVE [9]
0x5BFE	0x59425453 ;_initBlock_21+0 : ?ICS_ARG_RADIO_MODE_STBY at 0x5BFE
0x5C02	0x43205B00 ;_initBlock_21+4 : ?ICS_ANS_COMMAND_MODE_STBY at 0x5C03
0x5C06	0x414D4D4F ;_initBlock_21+8
0x5C0A	0x5D20444E ;_initBlock_21+12
0x5C0E	0x444F4D20 ;_initBlock_21+16
0x5C12	0x43412045 ;_initBlock_21+20
0x5C16	0x45564954 ;_initBlock_21+24
0x5C1A	0x5453203A ;_initBlock_21+28
0x5C1E	0x42444E41 ;_initBlock_21+32
0x5C22	0x54000D59 ;_initBlock_21+36 : ?ICS_ARG_RADIO_MODE_TX_CONT at 0x5C25
0x5C26	0x4F435F58 ;_initBlock_21+40
0x5C2A	0x5B00544E ;_initBlock_21+44 : ?ICS_ANS_COMMAND_MODE_TX_CONT at 0x5C2D
0x5C2E	0x4D4F4320 ;_initBlock_21+48
0x5C32	0x444E414D ;_initBlock_21+52
0x5C36	0x4D205D20 ;_initBlock_21+56
0x5C3A	0x2045444F ;_initBlock_21+60
0x5C3E	0x49544341 ;_initBlock_21+64
0x5C42	0x203A4556 ;_initBlock_21+68
0x5C46	0x43205854 ;_initBlock_21+72
0x5C4A	0x0D544E4F ;_initBlock_21+76
0x5C4E	0x5F585200 ;_initBlock_21+80 : ?ICS_ARG_RADIO_MODE_RX_CONT at 0x5C4F
0x5C52	0x544E4F43 ;_initBlock_21+84
0x5C56	0x43205B00 ;_initBlock_21+88 : ?ICS_ANS_COMMAND_MODE_RX_CONT at 0x5C57
0x5C5A	0x414D4D4F ;_initBlock_21+92
0x5C5E	0x5D20444E ;_initBlock_21+96
0x5C62	0x444F4D20 ;_initBlock_21+100
0x5C66	0x43412045 ;_initBlock_21+104
0x5C6A	0x45564954 ;_initBlock_21+108
0x5C6E	0x5852203A ;_initBlock_21+112
0x5C72	0x4E4F4320 ;_initBlock_21+116
0x5C76	0x54000D54 ;_initBlock_21+120 : ?ICS_ARG_RADIO_MODE_TX_MASTER at 0x5C79
0x5C7A	0x414D5F58 ;_initBlock_21+124
0x5C7E	0x52455453 ;_initBlock_21+128
0x5C82	0x43205B00 ;_initBlock_21+132 : ?ICS_ANS_COMMAND_MODE_TX_MASTER at 0x5C83
0x5C86	0x414D4D4F ;_initBlock_21+136
0x5C8A	0x5D20444E ;_initBlock_21+140
0x5C8E	0x444F4D20 ;_initBlock_21+144
0x5C92	0x43412045 ;_initBlock_21+148
0x5C96	0x45564954 ;_initBlock_21+152
0x5C9A	0x5854203A ;_initBlock_21+156
0x5C9E	0x53414D20 ;_initBlock_21+160
0x5CA2	0x0D524554 ;_initBlock_21+164
0x5CA6	0x5F585200 ;_initBlock_21+168 : ?ICS_ARG_RADIO_MODE_RX_SLAVE at 0x5CA7
0x5CAA	0x56414C53 ;_initBlock_21+172
0x5CAE	0x0045 ;_initBlock_21+176
; end of _initBlock_21
;,0 :: _initBlock_22 [106]
; Containing: ?ICS_ANS_COMMAND_MODE_RX_SLAVE [35]
;             ?ICS_CMD_RADIO_PACKET_SEND [12]
;             ?ICS_CMD_RADIO_MATCH_BYTE_1_SET [12]
;             ?ICS_CMD_RADIO_MATCH_BYTE_2_SET [12]
;             ?ICS_CMD_RADIO_MATCH_BYTE_3_SET [12]
;             ?ICS_CMD_RADIO_MATCH_BYTE_4_SET [12]
;             ?ICS_CMD_RADIO_MATCH_MASK_1_SET [11]
0x5CB0	0x4F43205B ;_initBlock_22+0 : ?ICS_ANS_COMMAND_MODE_RX_SLAVE at 0x5CB0
0x5CB4	0x4E414D4D ;_initBlock_22+4
0x5CB8	0x205D2044 ;_initBlock_22+8
0x5CBC	0x45444F4D ;_initBlock_22+12
0x5CC0	0x54434120 ;_initBlock_22+16
0x5CC4	0x3A455649 ;_initBlock_22+20
0x5CC8	0x20585220 ;_initBlock_22+24
0x5CCC	0x56414C53 ;_initBlock_22+28
0x5CD0	0x53000D45 ;_initBlock_22+32 : ?ICS_CMD_RADIO_PACKET_SEND at 0x5CD3
0x5CD4	0x5F444E45 ;_initBlock_22+36
0x5CD8	0x4B434150 ;_initBlock_22+40
0x5CDC	0x53005445 ;_initBlock_22+44 : ?ICS_CMD_RADIO_MATCH_BYTE_1_SET at 0x5CDF
0x5CE0	0x4D5F5445 ;_initBlock_22+48
0x5CE4	0x48435441 ;_initBlock_22+52
0x5CE8	0x5300315F ;_initBlock_22+56 : ?ICS_CMD_RADIO_MATCH_BYTE_2_SET at 0x5CEB
0x5CEC	0x4D5F5445 ;_initBlock_22+60
0x5CF0	0x48435441 ;_initBlock_22+64
0x5CF4	0x5300325F ;_initBlock_22+68 : ?ICS_CMD_RADIO_MATCH_BYTE_3_SET at 0x5CF7
0x5CF8	0x4D5F5445 ;_initBlock_22+72
0x5CFC	0x48435441 ;_initBlock_22+76
0x5D00	0x5300335F ;_initBlock_22+80 : ?ICS_CMD_RADIO_MATCH_BYTE_4_SET at 0x5D03
0x5D04	0x4D5F5445 ;_initBlock_22+84
0x5D08	0x48435441 ;_initBlock_22+88
0x5D0C	0x5300345F ;_initBlock_22+92 : ?ICS_CMD_RADIO_MATCH_MASK_1_SET at 0x5D0F
0x5D10	0x4D5F5445 ;_initBlock_22+96
0x5D14	0x5F4B5341 ;_initBlock_22+100
0x5D18	0x0031 ;_initBlock_22+104
; end of _initBlock_22
;,0 :: _initBlock_23 [22]
; Containing: ?ICS_CMD_RADIO_MATCH_MASK_2_SET [11]
;             ?ICS_CMD_RADIO_MATCH_MASK_3_SET [11]
0x5D1A	0x5F544553 ;_initBlock_23+0 : ?ICS_CMD_RADIO_MATCH_MASK_2_SET at 0x5D1A
0x5D1E	0x4B53414D ;_initBlock_23+4
0x5D22	0x5300325F ;_initBlock_23+8 : ?ICS_CMD_RADIO_MATCH_MASK_3_SET at 0x5D25
0x5D26	0x4D5F5445 ;_initBlock_23+12
0x5D2A	0x5F4B5341 ;_initBlock_23+16
0x5D2E	0x0033 ;_initBlock_23+20
; end of _initBlock_23
;,0 :: _initBlock_24 [46]
; Containing: ?ICS_CMD_RADIO_MATCH_MASK_4_SET [11]
;             ?ICS_CMD_RADIO_MATCH_UNSET [12]
;             ?ICS_ANS_DEBUG_COMMAND_UNKNOWN [22]
;             ?ICSDriverRF4463PROMain_ucRF4463IRQ [1]
0x5D30	0x5F544553 ;_initBlock_24+0 : ?ICS_CMD_RADIO_MATCH_MASK_4_SET at 0x5D30
0x5D34	0x4B53414D ;_initBlock_24+4
0x5D38	0x5500345F ;_initBlock_24+8 : ?ICS_CMD_RADIO_MATCH_UNSET at 0x5D3B
0x5D3C	0x5445534E ;_initBlock_24+12
0x5D40	0x54414D5F ;_initBlock_24+16
0x5D44	0x5B004843 ;_initBlock_24+20 : ?ICS_ANS_DEBUG_COMMAND_UNKNOWN at 0x5D47
0x5D48	0x4D4F4320 ;_initBlock_24+24
0x5D4C	0x444E414D ;_initBlock_24+28
0x5D50	0x55205D20 ;_initBlock_24+32
0x5D54	0x4F4E4B4E ;_initBlock_24+36
0x5D58	0x203A4E57 ;_initBlock_24+40
0x5D5C	0x0000 ;_initBlock_24+44 : ?ICSDriverRF4463PROMain_ucRF4463IRQ at 0x5D5D
; end of _initBlock_24
;,0 :: _initBlock_25 [2]
; Containing: ?ICS_ucSPI2ByteReceived [1]
;             ?ICS_ucData1 [1]
0x5D5E	0x0000 ;_initBlock_25+0 : ?ICS_ucSPI2ByteReceived at 0x5D5E : ?ICS_ucData1 at 0x5D5F
; end of _initBlock_25
;DriverRF4463PROMain.c,0 :: ?ICS_tx_cnt [4]
0x5D60	0x00000000 ;?ICS_tx_cnt+0
; end of ?ICS_tx_cnt
;DriverRF4463PROMain.c,0 :: ?ICS_rx_cnt [4]
0x5D64	0x00000000 ;?ICS_rx_cnt+0
; end of ?ICS_rx_cnt
;DriverRF4463PROMain.c,318 :: _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433 [132]
0x5D68	0x1705DEB8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+0
0x5D6C	0x00030C16 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+4
0x5D70	0x0000FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+8
0x5D74	0x1705DEB8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+12
0x5D78	0x00030C16 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+16
0x5D7C	0x0000FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+20
0x5D80	0x05EAC9B9 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+24
0x5D84	0x040A1112 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+28
0x5D88	0x0003FC15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+32
0x5D8C	0x1705DEB8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+36
0x5D90	0x00030C16 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+40
0x5D94	0x0000FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+44
0x5D98	0x05EAC9B9 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+48
0x5D9C	0x040A1112 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+52
0x5DA0	0x0003FC15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+56
0x5DA4	0xE6D6CEDD ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+60
0x5DA8	0x030300F6 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+64
0x5DAC	0x003FF015 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+68
0x5DB0	0xDFD6DBF4 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+72
0x5DB4	0x01FEF7EC ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+76
0x5DB8	0x03FFF015 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+80
0x5DBC	0xDFD6DBF4 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+84
0x5DC0	0x01FEF7EC ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+88
0x5DC4	0x03FFF015 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+92
0x5DC8	0xDCDCEC0C ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+96
0x5DCC	0xFDF6EDE3 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+100
0x5DD0	0x0FFFC015 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+104
0x5DD4	0xF2DBC7C8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+108
0x5DD8	0x03070802 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+112
0x5DDC	0x000FFC15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+116
0x5DE0	0x05EAC9B9 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+120
0x5DE4	0x040A1112 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+124
0x5DE8	0x0003FC15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+128
; end of _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433
;DriverRF4463PROMain.c,283 :: _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433 [132]
0x5DEC	0xFF150003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+0
0x5DF0	0xC4FF0000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+4
0x5DF4	0xB5F57F30 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+8
0x5DF8	0xFF150003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+12
0x5DFC	0xC4FF0000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+16
0x5E00	0xB5F57F30 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+20
0x5E04	0xFC15040A ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+24
0x5E08	0xA1CC0003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+28
0x5E0C	0xD121A030 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+32
0x5E10	0xFF150003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+36
0x5E14	0xC4FF0000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+40
0x5E18	0xB5F57F30 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+44
0x5E1C	0xFC15040A ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+48
0x5E20	0xA1CC0003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+52
0x5E24	0xD121A030 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+56
0x5E28	0xF0150303 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+60
0x5E2C	0x647E003F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+64
0x5E30	0x0B58BA1B ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+68
0x5E34	0xF01501FE ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+72
0x5E38	0x475B03FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+76
0x5E3C	0x256DC00F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+80
0x5E40	0xF01501FE ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+84
0x5E44	0x475B03FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+88
0x5E48	0x256DC00F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+92
0x5E4C	0xC015FDF6 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+96
0x5E50	0x2B390FFF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+100
0x5E54	0x3F7FC300 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+104
0x5E58	0xFC150307 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+108
0x5E5C	0x81A2000F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+112
0x5E60	0xEE3FAF26 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+116
0x5E64	0xFC15040A ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+120
0x5E68	0xA1CC0003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+124
0x5E6C	0xD121A030 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+128
; end of _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433
;DriverRF4463PROMain.c,297 :: _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850 [132]
0x5E70	0xFF150003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+0
0x5E74	0xC4FF0000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+4
0x5E78	0xB5F57F30 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+8
0x5E7C	0xFF150003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+12
0x5E80	0xC4FF0000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+16
0x5E84	0xB5F57F30 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+20
0x5E88	0xFF15FDFC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+24
0x5E8C	0xBAFF0F00 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+28
0x5E90	0xA9CF510F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+32
0x5E94	0xFF150003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+36
0x5E98	0xC4FF0000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+40
0x5E9C	0xB5F57F30 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+44
0x5EA0	0xFF15FDFC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+48
0x5EA4	0xBAFF0F00 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+52
0x5EA8	0xA9CF510F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+56
0x5EAC	0xFF150003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+60
0x5EB0	0xC4FF0000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+64
0x5EB4	0xB5F57F30 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+68
0x5EB8	0xF0150303 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+72
0x5EBC	0x647E003F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+76
0x5EC0	0x0B58BA1B ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+80
0x5EC4	0xC015FDF6 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+84
0x5EC8	0x2B390FFF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+88
0x5ECC	0x3F7FC300 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+92
0x5ED0	0xFC150307 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+96
0x5ED4	0x81A2000F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+100
0x5ED8	0xEE3FAF26 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+104
0x5EDC	0xFC15040A ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+108
0x5EE0	0xA1CC0003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+112
0x5EE4	0xD121A030 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+116
0x5EE8	0x00000000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+120
0x5EEC	0x00000000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+124
0x5EF0	0x00000000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+128
; end of _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850
;DriverRF4463PROMain.c,261 :: _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850 [132]
0x5EF4	0x7F30C4FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+0
0x5EF8	0xDEB8B5F5 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+4
0x5EFC	0x0C161705 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+8
0x5F00	0x7F30C4FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+12
0x5F04	0xDEB8B5F5 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+16
0x5F08	0x0C161705 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+20
0x5F0C	0x510FBAFF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+24
0x5F10	0xFCC9A9CF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+28
0x5F14	0x010F1E1B ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+32
0x5F18	0x7F30C4FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+36
0x5F1C	0xDEB8B5F5 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+40
0x5F20	0x0C161705 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+44
0x5F24	0x510FBAFF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+48
0x5F28	0xFCC9A9CF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+52
0x5F2C	0x010F1E1B ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+56
0x5F30	0x7F30C4FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+60
0x5F34	0xDEB8B5F5 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+64
0x5F38	0x0C161705 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+68
0x5F3C	0xBA1B647E ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+72
0x5F40	0xCEDD0B58 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+76
0x5F44	0x00F6E6D6 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+80
0x5F48	0xBA1B647E ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+84
0x5F4C	0xCEDD0B58 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+88
0x5F50	0x00F6E6D6 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+92
0x5F54	0xC3002B39 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+96
0x5F58	0xEC0C3F7F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+100
0x5F5C	0xEDE3DCDC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+104
0x5F60	0xAF2681A2 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+108
0x5F64	0xC7C8EE3F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+112
0x5F68	0x0802F2DB ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+116
0x5F6C	0xA030A1CC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+120
0x5F70	0xC9B9D121 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+124
0x5F74	0x111205EA ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+128
; end of _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850
;DriverRF4463PROMain.c,332 :: _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850 [132]
0x5F78	0x1705DEB8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+0
0x5F7C	0x00030C16 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+4
0x5F80	0x0000FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+8
0x5F84	0x1705DEB8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+12
0x5F88	0x00030C16 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+16
0x5F8C	0x0000FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+20
0x5F90	0x1E1BFCC9 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+24
0x5F94	0xFDFC010F ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+28
0x5F98	0x0F00FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+32
0x5F9C	0x1705DEB8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+36
0x5FA0	0x00030C16 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+40
0x5FA4	0x0000FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+44
0x5FA8	0x1E1BFCC9 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+48
0x5FAC	0xFDFC010F ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+52
0x5FB0	0x0F00FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+56
0x5FB4	0x1705DEB8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+60
0x5FB8	0x00030C16 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+64
0x5FBC	0x0000FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+68
0x5FC0	0xE6D6CEDD ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+72
0x5FC4	0x030300F6 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+76
0x5FC8	0x003FF015 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+80
0x5FCC	0xF0150303 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+84
0x5FD0	0x647E003F ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+88
0x5FD4	0x0B58BA1B ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+92
0x5FD8	0xDCDCEC0C ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+96
0x5FDC	0xFDF6EDE3 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+100
0x5FE0	0x0FFFC015 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+104
0x5FE4	0xF2DBC7C8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+108
0x5FE8	0x03070802 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+112
0x5FEC	0x000FFC15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+116
0x5FF0	0x05EAC9B9 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+120
0x5FF4	0x040A1112 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+124
0x5FF8	0x0003FC15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+128
; end of _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850
;DriverRF4463PROMain.c,56 :: _RF_MODEM_MOD_TYPE_12 [132]
0x5FFC	0x00070003 ;_RF_MODEM_MOD_TYPE_12+0
0x6000	0x2D04C012 ;_RF_MODEM_MOD_TYPE_12+4
0x6004	0x0000C0C6 ;_RF_MODEM_MOD_TYPE_12+8
0x6008	0x00070003 ;_RF_MODEM_MOD_TYPE_12+12
0x600C	0x2D048025 ;_RF_MODEM_MOD_TYPE_12+16
0x6010	0x0000C0C6 ;_RF_MODEM_MOD_TYPE_12+20
0x6014	0x00070003 ;_RF_MODEM_MOD_TYPE_12+24
0x6018	0x2D04004B ;_RF_MODEM_MOD_TYPE_12+28
0x601C	0x0000C0C6 ;_RF_MODEM_MOD_TYPE_12+32
0x6020	0x00070003 ;_RF_MODEM_MOD_TYPE_12+36
0x6024	0x2D040096 ;_RF_MODEM_MOD_TYPE_12+40
0x6028	0x0000C0C6 ;_RF_MODEM_MOD_TYPE_12+44
0x602C	0x01070003 ;_RF_MODEM_MOD_TYPE_12+48
0x6030	0x2D04002C ;_RF_MODEM_MOD_TYPE_12+52
0x6034	0x0100C0C6 ;_RF_MODEM_MOD_TYPE_12+56
0x6038	0x01070003 ;_RF_MODEM_MOD_TYPE_12+60
0x603C	0x2D08002C ;_RF_MODEM_MOD_TYPE_12+64
0x6040	0x0100C0C6 ;_RF_MODEM_MOD_TYPE_12+68
0x6044	0x02070003 ;_RF_MODEM_MOD_TYPE_12+72
0x6048	0x2D080058 ;_RF_MODEM_MOD_TYPE_12+76
0x604C	0x0100C0C6 ;_RF_MODEM_MOD_TYPE_12+80
0x6050	0x03070003 ;_RF_MODEM_MOD_TYPE_12+84
0x6054	0x2D080084 ;_RF_MODEM_MOD_TYPE_12+88
0x6058	0x0100C0C6 ;_RF_MODEM_MOD_TYPE_12+92
0x605C	0x27070003 ;_RF_MODEM_MOD_TYPE_12+96
0x6060	0xC9010010 ;_RF_MODEM_MOD_TYPE_12+100
0x6064	0x010080C3 ;_RF_MODEM_MOD_TYPE_12+104
0x6068	0x4C070003 ;_RF_MODEM_MOD_TYPE_12+108
0x606C	0xC901404B ;_RF_MODEM_MOD_TYPE_12+112
0x6070	0x1B0080C3 ;_RF_MODEM_MOD_TYPE_12+116
0x6074	0x00070003 ;_RF_MODEM_MOD_TYPE_12+120
0x6078	0x2D04D007 ;_RF_MODEM_MOD_TYPE_12+124
0x607C	0x0000C0C6 ;_RF_MODEM_MOD_TYPE_12+128
; end of _RF_MODEM_MOD_TYPE_12
;DriverRF4463PROMain.c,247 :: _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433 [132]
0x6080	0x7F30C4FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+0
0x6084	0xDEB8B5F5 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+4
0x6088	0x0C161705 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+8
0x608C	0x7F30C4FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+12
0x6090	0xDEB8B5F5 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+16
0x6094	0x0C161705 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+20
0x6098	0xA030A1CC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+24
0x609C	0xC9B9D121 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+28
0x60A0	0x111205EA ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+32
0x60A4	0x7F30C4FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+36
0x60A8	0xDEB8B5F5 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+40
0x60AC	0x0C161705 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+44
0x60B0	0xA030A1CC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+48
0x60B4	0xC9B9D121 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+52
0x60B8	0x111205EA ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+56
0x60BC	0xBA1B647E ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+60
0x60C0	0xCEDD0B58 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+64
0x60C4	0x00F6E6D6 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+68
0x60C8	0xC00F475B ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+72
0x60CC	0xDBF4256D ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+76
0x60D0	0xF7ECDFD6 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+80
0x60D4	0xC00F475B ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+84
0x60D8	0xDBF4256D ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+88
0x60DC	0xF7ECDFD6 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+92
0x60E0	0xC3002B39 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+96
0x60E4	0xEC0C3F7F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+100
0x60E8	0xEDE3DCDC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+104
0x60EC	0xAF2681A2 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+108
0x60F0	0xC7C8EE3F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+112
0x60F4	0x0802F2DB ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+116
0x60F8	0xA030A1CC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+120
0x60FC	0xC9B9D121 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+124
0x6100	0x111205EA ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+128
; end of _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433
;,0 :: _initBlock_35 [242]
; Containing: RF_MODEM_OOK_CNT1_11_850 [121]
;             RF_MODEM_OOK_CNT1_11_433 [121]
0x6104	0x81D602A4 ;_initBlock_35+0 : RF_MODEM_OOK_CNT1_11_850 at 0x6104
0x6108	0x80019B03 ;_initBlock_35+4
0x610C	0xA4020CFF ;_initBlock_35+8
0x6110	0x0083D602 ;_initBlock_35+12
0x6114	0xFF8001E7 ;_initBlock_35+16
0x6118	0x02A4020C ;_initBlock_35+20
0x611C	0xE70083D6 ;_initBlock_35+24
0x6120	0x0CFF8001 ;_initBlock_35+28
0x6124	0xD603A402 ;_initBlock_35+32
0x6128	0x01110103 ;_initBlock_35+36
0x612C	0x020CFF80 ;_initBlock_35+40
0x6130	0x03D603A4 ;_initBlock_35+44
0x6134	0x80015501 ;_initBlock_35+48
0x6138	0xA4020CFF ;_initBlock_35+52
0x613C	0x0103D603 ;_initBlock_35+56
0x6140	0xFF800100 ;_initBlock_35+60
0x6144	0x03A4020C ;_initBlock_35+64
0x6148	0x800003D6 ;_initBlock_35+68
0x614C	0x0CFF8001 ;_initBlock_35+72
0x6150	0xD603A402 ;_initBlock_35+76
0x6154	0x01800003 ;_initBlock_35+80
0x6158	0x020CFF80 ;_initBlock_35+84
0x615C	0x03D603A4 ;_initBlock_35+88
0x6160	0x8001D500 ;_initBlock_35+92
0x6164	0xA4020CFF ;_initBlock_35+96
0x6168	0x0003D603 ;_initBlock_35+100
0x616C	0xFF8001D5 ;_initBlock_35+104
0x6170	0x02A4020C ;_initBlock_35+108
0x6174	0xB40281D6 ;_initBlock_35+112
0x6178	0x0CFF8001 ;_initBlock_35+116
0x617C	0xD602A402 ;_initBlock_35+120 : RF_MODEM_OOK_CNT1_11_433 at 0x617D
0x6180	0x01AD0083 ;_initBlock_35+124
0x6184	0x000CFF80 ;_initBlock_35+128
0x6188	0x83D602A4 ;_initBlock_35+132
0x618C	0x8001AD00 ;_initBlock_35+136
0x6190	0xA4000CFF ;_initBlock_35+140
0x6194	0x0003D603 ;_initBlock_35+144
0x6198	0xFF8001CC ;_initBlock_35+148
0x619C	0x03A4000C ;_initBlock_35+152
0x61A0	0xCC0003D6 ;_initBlock_35+156
0x61A4	0x0CFF8001 ;_initBlock_35+160
0x61A8	0xD603A400 ;_initBlock_35+164
0x61AC	0x01000103 ;_initBlock_35+168
0x61B0	0x000CFF80 ;_initBlock_35+172
0x61B4	0x03D603A4 ;_initBlock_35+176
0x61B8	0x80018000 ;_initBlock_35+180
0x61BC	0xA4000CFF ;_initBlock_35+184
0x61C0	0x0003D603 ;_initBlock_35+188
0x61C4	0xFF800140 ;_initBlock_35+192
0x61C8	0x03A4000C ;_initBlock_35+196
0x61CC	0x2B0003D6 ;_initBlock_35+200
0x61D0	0x0CFF8001 ;_initBlock_35+204
0x61D4	0xD603A400 ;_initBlock_35+208
0x61D8	0x01D50003 ;_initBlock_35+212
0x61DC	0x000CFF80 ;_initBlock_35+216
0x61E0	0x03D603A4 ;_initBlock_35+220
0x61E4	0x8001D500 ;_initBlock_35+224
0x61E8	0xA4000CFF ;_initBlock_35+228
0x61EC	0x0281D602 ;_initBlock_35+232
0x61F0	0xFF8001B4 ;_initBlock_35+236
0x61F4	0x000C ;_initBlock_35+240
; end of _initBlock_35
;__Lib_GPIO_32F10x_Defs.c,711 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x61F8	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x61FC	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x6200	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x6204	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x6208	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x620C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x6210	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x6214	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x6218	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x621C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x6220	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x6224	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x6228	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x622C	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x6230	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x6234	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x6238	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x623C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x6240	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x6244	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x6248	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x624C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x6250	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x6254	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x6258	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x625C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x6260	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F10x_Defs.c,680 :: __GPIO_MODULE_SPI2_PB13_14_15 [108]
0x6264	0x0000001D ;__GPIO_MODULE_SPI2_PB13_14_15+0
0x6268	0x0000001E ;__GPIO_MODULE_SPI2_PB13_14_15+4
0x626C	0x0000001F ;__GPIO_MODULE_SPI2_PB13_14_15+8
0x6270	0xFFFFFFFF ;__GPIO_MODULE_SPI2_PB13_14_15+12
0x6274	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+16
0x6278	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+20
0x627C	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+24
0x6280	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+28
0x6284	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+32
0x6288	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+36
0x628C	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+40
0x6290	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+44
0x6294	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+48
0x6298	0x00000818 ;__GPIO_MODULE_SPI2_PB13_14_15+52
0x629C	0x00000818 ;__GPIO_MODULE_SPI2_PB13_14_15+56
0x62A0	0x00000818 ;__GPIO_MODULE_SPI2_PB13_14_15+60
0x62A4	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+64
0x62A8	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+68
0x62AC	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+72
0x62B0	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+76
0x62B4	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+80
0x62B8	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+84
0x62BC	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+88
0x62C0	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+92
0x62C4	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+96
0x62C8	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+100
0x62CC	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+104
; end of __GPIO_MODULE_SPI2_PB13_14_15
;,0 :: _initBlock_38 [70]
; Containing: ?ICS?lstr3_DriverRF4463PROMain [31]
;             ?ICS?lstr4_DriverRF4463PROMain [20]
;             ?ICS?lstr5_DriverRF4463PROMain [19]
0x62D0	0x5953205B ;_initBlock_38+0 : ?ICS?lstr3_DriverRF4463PROMain at 0x62D0
0x62D4	0x54532053 ;_initBlock_38+4
0x62D8	0x4632334D ;_initBlock_38+8
0x62DC	0x46525D20 ;_initBlock_38+12
0x62E0	0x64615220 ;_initBlock_38+16
0x62E4	0x72206F69 ;_initBlock_38+20
0x62E8	0x79646165 ;_initBlock_38+24
0x62EC	0x5B000A0D ;_initBlock_38+28 : ?ICS?lstr4_DriverRF4463PROMain at 0x62EF
0x62F0	0x646F4D20 ;_initBlock_38+32
0x62F4	0x205D2065 ;_initBlock_38+36
0x62F8	0x614D203D ;_initBlock_38+40
0x62FC	0x72657473 ;_initBlock_38+44
0x6300	0x5B000D0A ;_initBlock_38+48 : ?ICS?lstr5_DriverRF4463PROMain at 0x6303
0x6304	0x646F4D20 ;_initBlock_38+52
0x6308	0x205D2065 ;_initBlock_38+56
0x630C	0x6C53203D ;_initBlock_38+60
0x6310	0x0A657661 ;_initBlock_38+64
0x6314	0x000D ;_initBlock_38+68
; end of _initBlock_38
;DriverRF4463PROMain.c,0 :: ?ICS?lstr6_DriverRF4463PROMain [16]
0x6316	0x454D205B ;?ICS?lstr6_DriverRF4463PROMain+0
0x631A	0x4741534E ;?ICS?lstr6_DriverRF4463PROMain+4
0x631E	0x5D204547 ;?ICS?lstr6_DriverRF4463PROMain+8
0x6322	0x00203D20 ;?ICS?lstr6_DriverRF4463PROMain+12
; end of ?ICS?lstr6_DriverRF4463PROMain
;,0 :: _initBlock_40 [18]
; Containing: ?ICS?lstr7_DriverRF4463PROMain [3]
;             ?ICS?lstr8_DriverRF4463PROMain [15]
0x6326	0x5B000A0D ;_initBlock_40+0 : ?ICS?lstr7_DriverRF4463PROMain at 0x6326 : ?ICS?lstr8_DriverRF4463PROMain at 0x6329
0x632A	0x43524320 ;_initBlock_40+4
0x632E	0x46205D20 ;_initBlock_40+8
0x6332	0x0D6C6961 ;_initBlock_40+12
0x6336	0x000A ;_initBlock_40+16
; end of _initBlock_40
;,0 :: _initBlock_41 [198]
; Containing: RF_MODEM_AGC_WINDOW_SIZE_9_850 [99]
;             RF_MODEM_BCR_OSR_1_9_850 [99]
0x6338	0x00ABAB11 ;_initBlock_41+0 : RF_MODEM_AGC_WINDOW_SIZE_9_850 at 0x6338
0x633C	0x00FFFF02 ;_initBlock_41+4
0x6340	0xABAB112B ;_initBlock_41+8
0x6344	0xFFFF0200 ;_initBlock_41+12
0x6348	0x56112B00 ;_initBlock_41+16
0x634C	0xD5020056 ;_initBlock_41+20
0x6350	0x112A0055 ;_initBlock_41+24
0x6354	0x02002B2B ;_initBlock_41+28
0x6358	0x2900AB6A ;_initBlock_41+32
0x635C	0x00151511 ;_initBlock_41+36
0x6360	0x00AB4202 ;_initBlock_41+40
0x6364	0x0E0E1128 ;_initBlock_41+44
0x6368	0x55210200 ;_initBlock_41+48
0x636C	0x0E112800 ;_initBlock_41+52
0x6370	0x1002000E ;_initBlock_41+56
0x6374	0x112800AB ;_initBlock_41+60
0x6378	0x02000E0E ;_initBlock_41+64
0x637C	0x2800AB10 ;_initBlock_41+68
0x6380	0x000D0D22 ;_initBlock_41+72
0x6384	0x0000321A ;_initBlock_41+76
0x6388	0x07072228 ;_initBlock_41+80
0x638C	0x9A191A00 ;_initBlock_41+84
0x6390	0xCD112700 ;_initBlock_41+88
0x6394	0x301A00CD ;_initBlock_41+92
0x6398	0x032B0000 ;_initBlock_41+96 : RF_MODEM_BCR_OSR_1_9_850 at 0x639B
0x639C	0xC6A7000D ;_initBlock_41+100
0x63A0	0xC2025400 ;_initBlock_41+104
0x63A4	0xA7000D03 ;_initBlock_41+108
0x63A8	0x025400C6 ;_initBlock_41+112
0x63AC	0x018701C2 ;_initBlock_41+116
0x63B0	0xA8008B4F ;_initBlock_41+120
0x63B4	0xC300C202 ;_initBlock_41+124
0x63B8	0x01179F02 ;_initBlock_41+128
0x63BC	0x00000293 ;_initBlock_41+132
0x63C0	0x2D3E0562 ;_initBlock_41+136
0x63C4	0x00020405 ;_initBlock_41+140
0x63C8	0xDD074100 ;_initBlock_41+144
0x63CC	0x02FF0744 ;_initBlock_41+148
0x63D0	0x07410000 ;_initBlock_41+152
0x63D4	0xFF0744DD ;_initBlock_41+156
0x63D8	0x41000002 ;_initBlock_41+160
0x63DC	0x0744DD07 ;_initBlock_41+164
0x63E0	0x000002FF ;_initBlock_41+168
0x63E4	0x7B5E0475 ;_initBlock_41+172
0x63E8	0x00029A05 ;_initBlock_41+176
0x63EC	0x88083C00 ;_initBlock_41+180
0x63F0	0x02FF0789 ;_initBlock_41+184
0x63F4	0x00AA0300 ;_initBlock_41+188
0x63F8	0x4600CF8B ;_initBlock_41+192
0x63FC	0xC202 ;_initBlock_41+196
; end of _initBlock_41
;,0 :: _initBlock_42 [198]
; Containing: RF_MODEM_BCR_OSR_1_9_433 [99]
;             RF_MODEM_AGC_WINDOW_SIZE_9_433 [99]
0x63FE	0xA7000D03 ;_initBlock_42+0 : RF_MODEM_BCR_OSR_1_9_433 at 0x63FE
0x6402	0x025400C6 ;_initBlock_42+4
0x6406	0x018701C2 ;_initBlock_42+8
0x640A	0xA8008B4F ;_initBlock_42+12
0x640E	0xC300C202 ;_initBlock_42+16
0x6412	0x02179F02 ;_initBlock_42+20
0x6416	0x0000021A ;_initBlock_42+24
0x641A	0x2D3E0562 ;_initBlock_42+28
0x641E	0x0002FF07 ;_initBlock_42+32
0x6422	0xDD074100 ;_initBlock_42+36
0x6426	0x02FF0744 ;_initBlock_42+40
0x642A	0x07410000 ;_initBlock_42+44
0x642E	0xFF0744DD ;_initBlock_42+48
0x6432	0x41000002 ;_initBlock_42+52
0x6436	0x0744DD07 ;_initBlock_42+56
0x643A	0x000002FF ;_initBlock_42+60
0x643E	0x44DD0741 ;_initBlock_42+64
0x6442	0x0002FF07 ;_initBlock_42+68
0x6446	0x5E047500 ;_initBlock_42+72
0x644A	0x029A057B ;_initBlock_42+76
0x644E	0x083C0000 ;_initBlock_42+80
0x6452	0xFF078988 ;_initBlock_42+84
0x6456	0xAA030002 ;_initBlock_42+88
0x645A	0x00CF8B00 ;_initBlock_42+92
0x645E	0x11C20246 ;_initBlock_42+96 : RF_MODEM_AGC_WINDOW_SIZE_9_433 at 0x6461
0x6462	0x1A00ABAB ;_initBlock_42+100
0x6466	0x2B000014 ;_initBlock_42+104
0x646A	0x00565611 ;_initBlock_42+108
0x646E	0x0000A01A ;_initBlock_42+112
0x6472	0x2B2B112A ;_initBlock_42+116
0x6476	0x00501A00 ;_initBlock_42+120
0x647A	0x15112900 ;_initBlock_42+124
0x647E	0x281A0015 ;_initBlock_42+128
0x6482	0x11280000 ;_initBlock_42+132
0x6486	0x1A000E0E ;_initBlock_42+136
0x648A	0x28005521 ;_initBlock_42+140
0x648E	0x000E0E11 ;_initBlock_42+144
0x6492	0x00AB101A ;_initBlock_42+148
0x6496	0x0E0E1128 ;_initBlock_42+152
0x649A	0x55081A00 ;_initBlock_42+156
0x649E	0x0E112800 ;_initBlock_42+160
0x64A2	0x051A000E ;_initBlock_42+164
0x64A6	0x2228008E ;_initBlock_42+168
0x64AA	0x1A000D0D ;_initBlock_42+172
0x64AE	0x28000032 ;_initBlock_42+176
0x64B2	0x00070722 ;_initBlock_42+180
0x64B6	0x009A191A ;_initBlock_42+184
0x64BA	0xCDCD1127 ;_initBlock_42+188
0x64BE	0x00301A00 ;_initBlock_42+192
0x64C2	0x2B00 ;_initBlock_42+196
; end of _initBlock_42
;DriverRF4463PROMain.c,0 :: ?ICSvRF4463MainCommandProcessor_ucCommand_L0 [32]
0x64C4	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+0
0x64C8	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+4
0x64CC	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+8
0x64D0	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+12
0x64D4	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+16
0x64D8	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+20
0x64DC	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+24
0x64E0	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+28
; end of ?ICSvRF4463MainCommandProcessor_ucCommand_L0
;DriverRF4463PROMain.c,0 :: ?ICSvRF4463MainCommandProcessor_ucLongArgument_L0 [64]
0x64E4	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+0
0x64E8	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+4
0x64EC	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+8
0x64F0	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+12
0x64F4	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+16
0x64F8	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+20
0x64FC	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+24
0x6500	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+28
0x6504	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+32
0x6508	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+36
0x650C	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+40
0x6510	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+44
0x6514	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+48
0x6518	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+52
0x651C	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+56
0x6520	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+60
; end of ?ICSvRF4463MainCommandProcessor_ucLongArgument_L0
;DriverRF4463PROMain.c,70 :: _RF_MODEM_TX_RAMP_DELAY_8_433 [88]
0x6524	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+0
0x6528	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+4
0x652C	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+8
0x6530	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+12
0x6534	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+16
0x6538	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+20
0x653C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+24
0x6540	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+28
0x6544	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+32
0x6548	0x10300080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+36
0x654C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+40
0x6550	0x10200080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+44
0x6554	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+48
0x6558	0x10100080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+52
0x655C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+56
0x6560	0x20100080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+60
0x6564	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+64
0x6568	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+68
0x656C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+72
0x6570	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+76
0x6574	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+80
0x6578	0x21720080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+84
; end of _RF_MODEM_TX_RAMP_DELAY_8_433
;DriverRF4463PROMain.c,84 :: _RF_MODEM_TX_RAMP_DELAY_8_850 [88]
0x657C	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+0
0x6580	0x203200C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+4
0x6584	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+8
0x6588	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+12
0x658C	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+16
0x6590	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+20
0x6594	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+24
0x6598	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+28
0x659C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+32
0x65A0	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+36
0x65A4	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+40
0x65A8	0x102000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+44
0x65AC	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+48
0x65B0	0x101000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+52
0x65B4	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+56
0x65B8	0x201000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+60
0x65BC	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+64
0x65C0	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+68
0x65C4	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+72
0x65C8	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+76
0x65CC	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+80
0x65D0	0x21720080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+84
; end of _RF_MODEM_TX_RAMP_DELAY_8_850
;,0 :: _initBlock_47 [154]
; Containing: RF_MODEM_AFC_GEAR_7_433 [77]
;             RF_MODEM_AFC_GEAR_7_850 [77]
0x65D4	0x03803604 ;_initBlock_47+0 : RF_MODEM_AFC_GEAR_7_433 at 0x65D4
0x65D8	0x0480AF30 ;_initBlock_47+4
0x65DC	0x14078036 ;_initBlock_47+8
0x65E0	0x120080DD ;_initBlock_47+12
0x65E4	0x3A042A80 ;_initBlock_47+16
0x65E8	0x801200A0 ;_initBlock_47+20
0x65EC	0xA05A0254 ;_initBlock_47+24
0x65F0	0xA8801200 ;_initBlock_47+28
0x65F4	0x00E06801 ;_initBlock_47+32
0x65F8	0x01508112 ;_initBlock_47+36
0x65FC	0x1200E020 ;_initBlock_47+40
0x6600	0x03019F82 ;_initBlock_47+44
0x6604	0x872300E0 ;_initBlock_47+48
0x6608	0xE07700DD ;_initBlock_47+52
0x660C	0xFF8F2300 ;_initBlock_47+56
0x6610	0x00E0C900 ;_initBlock_47+60
0x6614	0x01FF8F23 ;_initBlock_47+64
0x6618	0x3604E023 ;_initBlock_47+68
0x661C	0x69500180 ;_initBlock_47+72
0x6620	0x80360480 ;_initBlock_47+76 : RF_MODEM_AFC_GEAR_7_850 at 0x6621
0x6624	0x80305201 ;_initBlock_47+80
0x6628	0x03803604 ;_initBlock_47+84
0x662C	0x04807F30 ;_initBlock_47+88
0x6630	0x17078036 ;_initBlock_47+92
0x6634	0x12008010 ;_initBlock_47+96
0x6638	0xB1042A80 ;_initBlock_47+100
0x663C	0x801200A0 ;_initBlock_47+104
0x6640	0xA09A0254 ;_initBlock_47+108
0x6644	0xA8801200 ;_initBlock_47+112
0x6648	0x00A08F01 ;_initBlock_47+116
0x664C	0x01508112 ;_initBlock_47+120
0x6650	0x2300A01F ;_initBlock_47+124
0x6654	0x8400EF83 ;_initBlock_47+128
0x6658	0x8F2300A0 ;_initBlock_47+132
0x665C	0xE0C900FF ;_initBlock_47+136
0x6660	0xFF8F2300 ;_initBlock_47+140
0x6664	0x04E02301 ;_initBlock_47+144
0x6668	0x50018036 ;_initBlock_47+148
0x666C	0x8069 ;_initBlock_47+152
; end of _initBlock_47
;,0 :: _initBlock_48 [162]
; Containing: RF_SYNTH_PFDCP_CPFF_7 [77]
;             ucRF4463TXdata [66]
;             ?ICS?lstr1_DriverRF4463PROMain [19]
0x666E	0x040B0E2C ;_initBlock_48+0 : RF_SYNTH_PFDCP_CPFF_7 at 0x666E
0x6672	0x2C03730C ;_initBlock_48+4
0x6676	0x0C040B0E ;_initBlock_48+8
0x667A	0x0E2C0373 ;_initBlock_48+12
0x667E	0x730C040B ;_initBlock_48+16
0x6682	0x0B0E2C03 ;_initBlock_48+20
0x6686	0x03730C04 ;_initBlock_48+24
0x668A	0x040B0E2C ;_initBlock_48+28
0x668E	0x2C03730C ;_initBlock_48+32
0x6692	0x0C040B0E ;_initBlock_48+36
0x6696	0x04340373 ;_initBlock_48+40
0x669A	0x7007040B ;_initBlock_48+44
0x669E	0x0B043403 ;_initBlock_48+48
0x66A2	0x03700704 ;_initBlock_48+52
0x66A6	0x050B0501 ;_initBlock_48+56
0x66AA	0x01030002 ;_initBlock_48+60
0x66AE	0x02050B05 ;_initBlock_48+64
0x66B2	0x0E2C0300 ;_initBlock_48+68
0x66B6	0x730C040B ;_initBlock_48+72
0x66BA	0x01010103 ;_initBlock_48+76 : ucRF4463TXdata at 0x66BB
0x66BE	0x43424101 ;_initBlock_48+80
0x66C2	0x47464544 ;_initBlock_48+84
0x66C6	0x4B4A4948 ;_initBlock_48+88
0x66CA	0x4F4E4D4C ;_initBlock_48+92
0x66CE	0x53525150 ;_initBlock_48+96
0x66D2	0x57565554 ;_initBlock_48+100
0x66D6	0x415A5958 ;_initBlock_48+104
0x66DA	0x45444342 ;_initBlock_48+108
0x66DE	0x49484746 ;_initBlock_48+112
0x66E2	0x4D4C4B4A ;_initBlock_48+116
0x66E6	0x51504F4E ;_initBlock_48+120
0x66EA	0x55545352 ;_initBlock_48+124
0x66EE	0x59585756 ;_initBlock_48+128
0x66F2	0x4342415A ;_initBlock_48+132
0x66F6	0x47464544 ;_initBlock_48+136
0x66FA	0x5BF31148 ;_initBlock_48+140 : ?ICS?lstr1_DriverRF4463PROMain at 0x66FD
0x66FE	0x52415520 ;_initBlock_48+144
0x6702	0x5D203154 ;_initBlock_48+148
0x6706	0x20585420 ;_initBlock_48+152
0x670A	0x0D544E49 ;_initBlock_48+156
0x670E	0x000A ;_initBlock_48+160
; end of _initBlock_48
;__Lib_System_105_107.c,388 :: __Lib_System_105_107_APBAHBPrescTable [16]
0x6710	0x00000000 ;__Lib_System_105_107_APBAHBPrescTable+0
0x6714	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+4
0x6718	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+8
0x671C	0x09080706 ;__Lib_System_105_107_APBAHBPrescTable+12
; end of __Lib_System_105_107_APBAHBPrescTable
;DriverRF4463PROMain.c,385 :: _tx_test_aa_data [14]
0x6720	0xAAAAAAAA ;_tx_test_aa_data+0
0x6724	0xAAAAAAAA ;_tx_test_aa_data+4
0x6728	0xAAAAAAAA ;_tx_test_aa_data+8
0x672C	0xAAAA ;_tx_test_aa_data+12
; end of _tx_test_aa_data
;DriverRF4463PROMain.c,0 :: ?ICS?lstr9_DriverRF4463PROMain [12]
0x672E	0x5352205B ;?ICS?lstr9_DriverRF4463PROMain+0
0x6732	0x5D204953 ;?ICS?lstr9_DriverRF4463PROMain+4
0x6736	0x00203D20 ;?ICS?lstr9_DriverRF4463PROMain+8
; end of ?ICS?lstr9_DriverRF4463PROMain
;,0 :: _initBlock_52 [11]
; Containing: ?ICSStrToLong_counter_L0 [1]
;             ?ICSStrToLong_buf_str_L0 [10]
0x673A	0x00000000 ;_initBlock_52+0 : ?ICSStrToLong_counter_L0 at 0x673A : ?ICSStrToLong_buf_str_L0 at 0x673B
0x673E	0x00000000 ;_initBlock_52+4
0x6742	0x000000 ;_initBlock_52+8
; end of _initBlock_52
;__Lib_Conversions.c,0 :: ?ICS__Lib_Conversions_Forward_Input_multiplier_L0 [8]
0x6748	0x00000001 ;?ICS__Lib_Conversions_Forward_Input_multiplier_L0+0
0x674C	0x00000000 ;?ICS__Lib_Conversions_Forward_Input_multiplier_L0+4
; end of ?ICS__Lib_Conversions_Forward_Input_multiplier_L0
;DriverRF4463PROMain.c,371 :: _RF_FRR_CTL_A_MODE_4_data [8]
0x6750	0x00040211 ;_RF_FRR_CTL_A_MODE_4_data+0
0x6754	0x00000000 ;_RF_FRR_CTL_A_MODE_4_data+4
; end of _RF_FRR_CTL_A_MODE_4_data
;,0 :: _initBlock_55 [12]
; Containing: RF_POWER_UP_data [7]
;             RF_MODEM_AGC_CONTROL_1_data [5]
0x6758	0x01000102 ;_initBlock_55+0 : RF_POWER_UP_data at 0x6758
0x675C	0x1180C3C9 ;_initBlock_55+4 : RF_MODEM_AGC_CONTROL_1_data at 0x675F
0x6760	0xE2350120 ;_initBlock_55+8
; end of _initBlock_55
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150     [506]    __Div_64x64_U
0x034C     [148]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x03E0      [28]    _strlen
0x03FC      [56]    _check_cts
0x0434     [168]    _RCC_GetClocksFrequency
0x04DC     [272]    _GPIO_Alternate_Function_Enable
0x05EC     [120]    __Lib_Conversions_Forward_Input
0x0664      [80]    _spi_write
0x06B4      [66]    __Lib_SPI_123_SPIx_Init_Advanced
0x06F8      [64]    _vRF4463EnableRxInterrupt
0x0738      [76]    _vRF4463RxStart
0x0784      [88]    _vRF4463RxStartTest
0x07DC      [26]    _vRF4463MainApplyChanges
0x07F8     [284]    _StrToShort
0x0914     [180]    _StrToLong
0x09C8     [288]    _StrToInt
0x0AE8      [92]    _vUSARTStartMEMtoMEMZero
0x0B44      [30]    __Lib_UART_123_45_UARTx_Write
0x0B64      [52]    _memcmp
0x0B98      [30]    _toupper
0x0BB8     [140]    _GPIO_Clk_Enable
0x0C44     [580]    __Lib_UART_123_45_UARTx_Init_Advanced
0x0E88      [78]    _ByteToStr
0x0ED8      [26]    _Delay_Cyc
0x0EF4      [34]    _vRF4463FifoReset
0x0F18      [18]    _vUSARTCleanBuffer
0x0F2C      [50]    __Lib_UART_123_45_UARTx_Write_Text
0x0F60      [58]    _vRF4463EnableTxInterrupt
0x0F9C     [128]    _spi_write_fifo
0x101C     [500]    _GPIO_Config
0x1210      [66]    __FloatToSignedIntegral
0x1254     [116]    _ShortToStr
0x12C8      [16]    _Get_Fosc_kHz
0x12D8      [96]    _vUSARTStartMEMtoMEM
0x1338    [2248]    _vRF4463MainCommandProcessor
0x1C00      [60]    _vRF4463TxStart
0x1C3C     [120]    _vInitDMAUSART1_TX
0x1CB4      [40]    _UART1_Init_Advanced
0x1CDC      [40]    _ucRf4463SPIByte
0x1D04     [128]    _vUSARTDMAMemToMem
0x1D84     [128]    _vUSARTDMAMeToMemZero
0x1E04      [84]    _SPI2_Init_Advanced
0x1E58     [156]    _spi_read
0x1EF4      [60]    _vRF4463RxInit
0x1F30     [500]    _rf_init_freq
0x2124     [140]    _vRF4463GPIO_SET
0x21B0     [120]    _NVIC_IntEnable
0x2228     [108]    __Lib_System_105_107_SystemClockSetDefault
0x2294      [92]    _vRF4463TxCont
0x22F0     [258]    __Sub_FP
0x23F4      [44]    __UnsignedIntegralToFloat
0x2420      [96]    _spi_read_fifo
0x2480     [164]    __Div_FP
0x2524     [120]    _getRSSI
0x259C     [156]    _vRF4463TxData
0x2638     [140]    _Sound_Play
0x26C4      [84]    _Sound_Init
0x2718      [92]    _vUSARTConfigUSART1
0x2774      [88]    _InitTimer2
0x27CC      [58]    ___FillZeros
0x2808      [20]    ___CC2DW
0x281C      [24]    _GPIO_Digital_Input
0x2834      [28]    _GPIO_Digital_Output
0x2850      [52]    _vSPI2Init
0x2884     [132]    _vUSART1Start_TX
0x2908      [34]    _vRF4463PartInfo
0x292C     [100]    _vUSARTReceivedFromUSART1
0x2990      [28]    _UART1_Write_Text
0x29B0     [132]    _VRF4463SDNReset
0x2A34       [6]    _vRF4463MainSetTXString
0x2A3C      [54]    _vRF4463ClearInterrupts
0x2A74    [2136]    _vRF4463Init
0x32CC      [36]    _Timer2_interrupt
0x32F0     [308]    _vUARTISR
0x3424      [48]    _Int_SPI2
0x3454      [84]    _DMA1Ch2_interrupt
0x34A8      [84]    _DMA1Ch1_interrupt
0x3500    [1036]    _main
0x390C     [344]    __Lib_System_105_107_InitialSetUpRCCRCC2
0x3A64      [20]    __Lib_System_105_107_InitialSetUpFosc
0x3A78      [84]    _DMA1Ch4_interrupt
0x3ACC       [8]    ___GenExcept
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000    [4096]    _ucUSARTActiveBuffer1
0x20001000       [4]    _ulUSARTActiveBuffer1BytesReceived
0x20001004    [4096]    _ucUSART1RXBuffer
0x20002004       [4]    _ulUSART1ByteReceived
0x20002008       [4]    _fUSART1Buffer
0x2000200C       [1]    _ucUSARTNull
0x2000200D      [16]    _RF_MODEM_MOD_TYPE_12_data
0x2000201D      [12]    _RF_MODEM_TX_RAMP_DELAY_8_data
0x20002029      [13]    _RF_MODEM_AFC_GEAR_7_data
0x20002036      [15]    _RF_MODEM_OOK_CNT1_11_data
0x20002045      [16]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data
0x20002055      [16]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data
0x20002065      [16]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data
0x20002075      [13]    _RF_MODEM_AGC_WINDOW_SIZE_9_data
0x20002082      [13]    _RF_MODEM_BCR_OSR_1_9_data
0x2000208F      [11]    _RF_SYNTH_PFDCP_CPFF_7_data
0x2000209A       [1]    _ucRF4463MatchEnabled
0x2000209B       [1]    _ucRF4463ByteMatch1
0x2000209C       [1]    _ucRF4463ByteMask1
0x2000209D       [1]    _ucRF4463MatchEnableReg
0x2000209E       [1]    _ucRF4463ByteMatch2
0x2000209F       [1]    _ucRF4463ByteMask2
0x200020A0       [1]    _ucRF4463ByteMatch3
0x200020A1       [1]    _ucRF4463ByteMask3
0x200020A2       [1]    _ucRF4463ByteMatch4
0x200020A3       [1]    _ucRF4463ByteMask4
0x200020A4       [4]    _ulRF4463Step
0x200020A8      [10]    _CMD_RADIO_POWER_SET
0x200020B2      [40]    _ANS_COMMAND_VALUE_ACCEPTED
0x200020DA      [32]    _ANS_COMMAND_VALUE_OUT_OF_RANGE
0x200020FA       [9]    _CMD_RADIO_BAND_SET
0x20002103       [9]    _CMD_RADIO_RATE_SET
0x2000210C       [1]    _defineTime
0x2000210D      [12]    _CMD_RADIO_CHANNEL_SET
0x20002119       [1]    _ucRF4463FreqChannel
0x2000211A       [7]    _CMD_RADIO_BW_SET
0x20002121       [9]    _CMD_RADIO_MODE_SET
0x2000212A       [5]    _ARG_RADIO_MODE_STBY
0x2000212F      [34]    _ANS_COMMAND_MODE_STBY
0x20002151       [8]    _ARG_RADIO_MODE_TX_CONT
0x20002159      [34]    _ANS_COMMAND_MODE_TX_CONT
0x2000217B       [8]    _ARG_RADIO_MODE_RX_CONT
0x20002183      [34]    _ANS_COMMAND_MODE_RX_CONT
0x200021A5      [10]    _ARG_RADIO_MODE_TX_MASTER
0x200021AF      [36]    _ANS_COMMAND_MODE_TX_MASTER
0x200021D3       [9]    _ARG_RADIO_MODE_RX_SLAVE
0x200021DC      [35]    _ANS_COMMAND_MODE_RX_SLAVE
0x200021FF      [12]    _CMD_RADIO_PACKET_SEND
0x2000220B      [12]    _CMD_RADIO_MATCH_BYTE_1_SET
0x20002217      [12]    _CMD_RADIO_MATCH_BYTE_2_SET
0x20002223      [12]    _CMD_RADIO_MATCH_BYTE_3_SET
0x2000222F      [12]    _CMD_RADIO_MATCH_BYTE_4_SET
0x2000223B      [11]    _CMD_RADIO_MATCH_MASK_1_SET
0x20002246      [11]    _CMD_RADIO_MATCH_MASK_2_SET
0x20002251      [11]    _CMD_RADIO_MATCH_MASK_3_SET
0x2000225C      [11]    _CMD_RADIO_MATCH_MASK_4_SET
0x20002267      [12]    _CMD_RADIO_MATCH_UNSET
0x20002273      [22]    _ANS_DEBUG_COMMAND_UNKNOWN
0x20002289       [1]    DriverRF4463PROMain_ucRF4463IRQ
0x2000228A       [1]    _ucSPI2ByteReceived
0x2000228B       [1]    _ucData1
0x2000228C       [4]    _tx_cnt
0x20002290       [4]    _rx_cnt
0x20002294      [20]    _spi_read_buf
0x200022A8       [1]    _ucRF4463Rate
0x200022A9       [1]    _ucRF4463Freq3
0x200022AA       [1]    _ucRF4463Mode
0x200022AB       [1]    _ucRF4463Power
0x200022AC       [1]    _ucRF4463Freq2
0x200022AD       [1]    _ucRF4463Freq1
0x200022AE       [2]    _rf_timeout
0x200022B0       [4]    _rssi
0x200022B4       [4]    _Value
0x200022B8      [66]    _rx_buf
0x200022FA       [1]    _Flag
0x200022FB       [1]    _reset_mode
0x200022FC       [4]    _iVal
0x20002300       [4]    ___System_CLOCK_IN_KHZ
0x20002304       [4]    __Lib_Sound_soundPortAddr
0x20002308       [4]    __Lib_Sound_pinMask1
0x2000230C       [4]    __Lib_Sound_pinMask0
0x20002310       [4]    _SPI_Rd_Ptr
0x20002314       [4]    _SPI_Wr_Ptr
0x20002318       [4]    _UART_Wr_Ptr
0x2000231C       [4]    _UART_Rd_Ptr
0x20002320       [4]    _UART_Rdy_Ptr
0x20002324       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x29AC       [4]    __Lib_System_105_107_ADCPrescTable
0x3AD4    [4096]    ?ICS_ucUSARTActiveBuffer1
0x4AD4       [4]    ?ICS_ulUSARTActiveBuffer1BytesReceived
0x4AD8    [4096]    ?ICS_ucUSART1RXBuffer
0x5AD8       [4]    ?ICS_ulUSART1ByteReceived
0x5ADC       [4]    ?ICS_fUSART1Buffer
0x5AE0       [1]    ?ICS_ucUSARTNull
0x5AE1      [16]    ?ICS_RF_MODEM_MOD_TYPE_12_data
0x5AF1      [12]    ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data
0x5AFD      [13]    ?ICS_RF_MODEM_AFC_GEAR_7_data
0x5B0A      [15]    ?ICS_RF_MODEM_OOK_CNT1_11_data
0x5B19      [16]    ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data
0x5B29      [16]    ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data
0x5B39      [16]    ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data
0x5B49      [13]    ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data
0x5B56      [13]    ?ICS_RF_MODEM_BCR_OSR_1_9_data
0x5B63      [11]    ?ICS_RF_SYNTH_PFDCP_CPFF_7_data
0x5B6E       [1]    ?ICS_ucRF4463MatchEnabled
0x5B6F       [1]    ?ICS_ucRF4463ByteMatch1
0x5B70       [1]    ?ICS_ucRF4463ByteMask1
0x5B71       [1]    ?ICS_ucRF4463MatchEnableReg
0x5B72       [1]    ?ICS_ucRF4463ByteMatch2
0x5B73       [1]    ?ICS_ucRF4463ByteMask2
0x5B74       [1]    ?ICS_ucRF4463ByteMatch3
0x5B75       [1]    ?ICS_ucRF4463ByteMask3
0x5B76       [1]    ?ICS_ucRF4463ByteMatch4
0x5B77       [1]    ?ICS_ucRF4463ByteMask4
0x5B78       [4]    ?ICS_ulRF4463Step
0x5B7C      [10]    ?ICS_CMD_RADIO_POWER_SET
0x5B86      [40]    ?ICS_ANS_COMMAND_VALUE_ACCEPTED
0x5BAE      [32]    ?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE
0x5BCE       [9]    ?ICS_CMD_RADIO_BAND_SET
0x5BD7       [9]    ?ICS_CMD_RADIO_RATE_SET
0x5BE0       [1]    ?ICS_defineTime
0x5BE1      [12]    ?ICS_CMD_RADIO_CHANNEL_SET
0x5BED       [1]    ?ICS_ucRF4463FreqChannel
0x5BEE       [7]    ?ICS_CMD_RADIO_BW_SET
0x5BF5       [9]    ?ICS_CMD_RADIO_MODE_SET
0x5BFE       [5]    ?ICS_ARG_RADIO_MODE_STBY
0x5C03      [34]    ?ICS_ANS_COMMAND_MODE_STBY
0x5C25       [8]    ?ICS_ARG_RADIO_MODE_TX_CONT
0x5C2D      [34]    ?ICS_ANS_COMMAND_MODE_TX_CONT
0x5C4F       [8]    ?ICS_ARG_RADIO_MODE_RX_CONT
0x5C57      [34]    ?ICS_ANS_COMMAND_MODE_RX_CONT
0x5C79      [10]    ?ICS_ARG_RADIO_MODE_TX_MASTER
0x5C83      [36]    ?ICS_ANS_COMMAND_MODE_TX_MASTER
0x5CA7       [9]    ?ICS_ARG_RADIO_MODE_RX_SLAVE
0x5CB0      [35]    ?ICS_ANS_COMMAND_MODE_RX_SLAVE
0x5CD3      [12]    ?ICS_CMD_RADIO_PACKET_SEND
0x5CDF      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_1_SET
0x5CEB      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_2_SET
0x5CF7      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_3_SET
0x5D03      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_4_SET
0x5D0F      [11]    ?ICS_CMD_RADIO_MATCH_MASK_1_SET
0x5D1A      [11]    ?ICS_CMD_RADIO_MATCH_MASK_2_SET
0x5D25      [11]    ?ICS_CMD_RADIO_MATCH_MASK_3_SET
0x5D30      [11]    ?ICS_CMD_RADIO_MATCH_MASK_4_SET
0x5D3B      [12]    ?ICS_CMD_RADIO_MATCH_UNSET
0x5D47      [22]    ?ICS_ANS_DEBUG_COMMAND_UNKNOWN
0x5D5D       [1]    ?ICSDriverRF4463PROMain_ucRF4463IRQ
0x5D5E       [1]    ?ICS_ucSPI2ByteReceived
0x5D5F       [1]    ?ICS_ucData1
0x5D60       [4]    ?ICS_tx_cnt
0x5D64       [4]    ?ICS_rx_cnt
0x5D68     [132]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433
0x5DEC     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433
0x5E70     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850
0x5EF4     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850
0x5F78     [132]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850
0x5FFC     [132]    _RF_MODEM_MOD_TYPE_12
0x6080     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433
0x6104     [121]    _RF_MODEM_OOK_CNT1_11_850
0x617D     [121]    _RF_MODEM_OOK_CNT1_11_433
0x61F8     [108]    __GPIO_MODULE_USART1_PA9_10
0x6264     [108]    __GPIO_MODULE_SPI2_PB13_14_15
0x62D0      [31]    ?ICS?lstr3_DriverRF4463PROMain
0x62EF      [20]    ?ICS?lstr4_DriverRF4463PROMain
0x6303      [19]    ?ICS?lstr5_DriverRF4463PROMain
0x6316      [16]    ?ICS?lstr6_DriverRF4463PROMain
0x6326       [3]    ?ICS?lstr7_DriverRF4463PROMain
0x6329      [15]    ?ICS?lstr8_DriverRF4463PROMain
0x6338      [99]    _RF_MODEM_AGC_WINDOW_SIZE_9_850
0x639B      [99]    _RF_MODEM_BCR_OSR_1_9_850
0x63FE      [99]    _RF_MODEM_BCR_OSR_1_9_433
0x6461      [99]    _RF_MODEM_AGC_WINDOW_SIZE_9_433
0x64C4      [32]    ?ICSvRF4463MainCommandProcessor_ucCommand_L0
0x64E4      [64]    ?ICSvRF4463MainCommandProcessor_ucLongArgument_L0
0x6524      [88]    _RF_MODEM_TX_RAMP_DELAY_8_433
0x657C      [88]    _RF_MODEM_TX_RAMP_DELAY_8_850
0x65D4      [77]    _RF_MODEM_AFC_GEAR_7_433
0x6621      [77]    _RF_MODEM_AFC_GEAR_7_850
0x666E      [77]    _RF_SYNTH_PFDCP_CPFF_7
0x66BB      [66]    _ucRF4463TXdata
0x66FD      [19]    ?ICS?lstr1_DriverRF4463PROMain
0x6710      [16]    __Lib_System_105_107_APBAHBPrescTable
0x6720      [14]    _tx_test_aa_data
0x672E      [12]    ?ICS?lstr9_DriverRF4463PROMain
0x673A       [1]    ?ICSStrToLong_counter_L0
0x673B      [10]    ?ICSStrToLong_buf_str_L0
0x6748       [8]    ?ICS__Lib_Conversions_Forward_Input_multiplier_L0
0x6750       [8]    _RF_FRR_CTL_A_MODE_4_data
0x6758       [7]    _RF_POWER_UP_data
0x675F       [5]    _RF_MODEM_AGC_CONTROL_1_data
