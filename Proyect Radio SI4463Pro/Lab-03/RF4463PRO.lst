;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 19/11/2020 02:37:40 p. m.
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x1B710000  	7025
0x0008	0x1B650000  	7013
0x000C	0x1B650000  	7013
0x0010	0x1B650000  	7013
0x0014	0x1B650000  	7013
0x0018	0x1B650000  	7013
0x001C	0x1B650000  	7013
0x0020	0x1B650000  	7013
0x0024	0x1B650000  	7013
0x0028	0x1B650000  	7013
0x002C	0x1B650000  	7013
0x0030	0x1B650000  	7013
0x0034	0x1B650000  	7013
0x0038	0x1B650000  	7013
0x003C	0x1B650000  	7013
0x0040	0x1B650000  	7013
0x0044	0x1B650000  	7013
0x0048	0x1B650000  	7013
0x004C	0x1B650000  	7013
0x0050	0x1B650000  	7013
0x0054	0x1B650000  	7013
0x0058	0x1B650000  	7013
0x005C	0x1B650000  	7013
0x0060	0x1B650000  	7013
0x0064	0x1B650000  	7013
0x0068	0x1B650000  	7013
0x006C	0x1B650000  	7013
0x0070	0x1B650000  	7013
0x0074	0x1B650000  	7013
0x0078	0x1B650000  	7013
0x007C	0x1B650000  	7013
0x0080	0x1B650000  	7013
0x0084	0x1B650000  	7013
0x0088	0x1B650000  	7013
0x008C	0x1B650000  	7013
0x0090	0x1B650000  	7013
0x0094	0x1B650000  	7013
0x0098	0x1B650000  	7013
0x009C	0x1B650000  	7013
0x00A0	0x1B650000  	7013
0x00A4	0x1B650000  	7013
0x00A8	0x1B650000  	7013
0x00AC	0x1B650000  	7013
0x00B0	0x1B650000  	7013
0x00B4	0x1B650000  	7013
0x00B8	0x1B650000  	7013
0x00BC	0x1B650000  	7013
0x00C0	0x1B650000  	7013
0x00C4	0x1B650000  	7013
0x00C8	0x1B650000  	7013
0x00CC	0x1B650000  	7013
0x00D0	0x1B650000  	7013
0x00D4	0x1B650000  	7013
0x00D8	0x1B650000  	7013
0x00DC	0x1B650000  	7013
0x00E0	0x1B650000  	7013
0x00E4	0x1B650000  	7013
0x00E8	0x1B650000  	7013
0x00EC	0x1B650000  	7013
0x00F0	0x1B650000  	7013
0x00F4	0x1B650000  	7013
0x00F8	0x1B650000  	7013
0x00FC	0x1B650000  	7013
0x0100	0x1B650000  	7013
0x0104	0x1B650000  	7013
0x0108	0x1B650000  	7013
0x010C	0x1B650000  	7013
0x0110	0x1B650000  	7013
0x0114	0x1B650000  	7013
0x0118	0x1B650000  	7013
0x011C	0x1B650000  	7013
0x0120	0x1B650000  	7013
0x0124	0x1B650000  	7013
0x0128	0x1B650000  	7013
0x012C	0x1B650000  	7013
0x0130	0x1B650000  	7013
0x0134	0x1B650000  	7013
0x0138	0x1B650000  	7013
0x013C	0x1B650000  	7013
0x0140	0x1B650000  	7013
0x0144	0x1B650000  	7013
0x0148	0x1B650000  	7013
0x014C	0x1B650000  	7013
; end of ____SysVT
_main:
;RF4463PRO.c, 467 :: 		void main()
0x1B70	0xB085    SUB	SP, SP, #20
0x1B72	0xF000F84B  BL	7180
0x1B76	0xF000FDD7  BL	10024
0x1B7A	0xF7FFFFE9  BL	6992
0x1B7E	0xF000FD93  BL	9896
;RF4463PRO.c, 470 :: 		asm{nop};
0x1B82	0xBF00    NOP
;RF4463PRO.c, 471 :: 		asm{nop};
0x1B84	0xBF00    NOP
;RF4463PRO.c, 472 :: 		asm{nop};
0x1B86	0xBF00    NOP
;RF4463PRO.c, 473 :: 		asm{nop};
0x1B88	0xBF00    NOP
;RF4463PRO.c, 474 :: 		asm{nop};
0x1B8A	0xBF00    NOP
;RF4463PRO.c, 476 :: 		portInit();
0x1B8C	0xF7FFFF40  BL	_portInit+0
;RF4463PRO.c, 477 :: 		nop_10();
0x1B90	0xF7FFFFD2  BL	_nop_10+0
;RF4463PRO.c, 478 :: 		UART1_Write_Text("Start Demo System\n\r");
0x1B94	0xF10D0B00  ADD	R11, SP, #0
0x1B98	0xF10B0A14  ADD	R10, R11, #20
0x1B9C	0xF8DFC060  LDR	R12, [PC, #96]
0x1BA0	0xF7FFFF8A  BL	___CC2DW+0
0x1BA4	0xA800    ADD	R0, SP, #0
0x1BA6	0xF7FFFE97  BL	_UART1_Write_Text+0
;RF4463PRO.c, 479 :: 		Sound_Init(&GPIOB_ODR, 7);
0x1BAA	0x2107    MOVS	R1, #7
0x1BAC	0x4815    LDR	R0, [PC, #84]
0x1BAE	0xF7FFFEA1  BL	_Sound_Init+0
;RF4463PRO.c, 480 :: 		LED_GREEN = 1;
0x1BB2	0x2101    MOVS	R1, #1
0x1BB4	0xB249    SXTB	R1, R1
0x1BB6	0x4814    LDR	R0, [PC, #80]
0x1BB8	0x6001    STR	R1, [R0, #0]
;RF4463PRO.c, 481 :: 		Sound_Play(3000, 100);
0x1BBA	0x2164    MOVS	R1, #100
0x1BBC	0xF64030B8  MOVW	R0, #3000
0x1BC0	0xF7FFFEC2  BL	_Sound_Play+0
;RF4463PRO.c, 482 :: 		Delay_ms(100);
0x1BC4	0xF644777F  MOVW	R7, #20351
0x1BC8	0xF2C00712  MOVT	R7, #18
0x1BCC	0xBF00    NOP
0x1BCE	0xBF00    NOP
L_main0:
0x1BD0	0x1E7F    SUBS	R7, R7, #1
0x1BD2	0xD1FD    BNE	L_main0
0x1BD4	0xBF00    NOP
0x1BD6	0xBF00    NOP
0x1BD8	0xBF00    NOP
;RF4463PRO.c, 483 :: 		Sound_Play(4000, 100);
0x1BDA	0x2164    MOVS	R1, #100
0x1BDC	0xF64070A0  MOVW	R0, #4000
0x1BE0	0xF7FFFEB2  BL	_Sound_Play+0
;RF4463PRO.c, 484 :: 		LED_GREEN =0;
0x1BE4	0x2100    MOVS	R1, #0
0x1BE6	0xB249    SXTB	R1, R1
0x1BE8	0x4807    LDR	R0, [PC, #28]
0x1BEA	0x6001    STR	R1, [R0, #0]
;RF4463PRO.c, 485 :: 		rfInit();
0x1BEC	0xF7FFFE54  BL	_rfInit+0
;RF4463PRO.c, 486 :: 		nop_10();
0x1BF0	0xF7FFFFA2  BL	_nop_10+0
;RF4463PRO.c, 487 :: 		rf4463Config();
0x1BF4	0xF7FFFA9A  BL	_rf4463Config+0
;RF4463PRO.c, 488 :: 		nop_10();
0x1BF8	0xF7FFFF9E  BL	_nop_10+0
;RF4463PRO.c, 490 :: 		}
L_end_main:
L__main_end_loop:
0x1BFC	0xE7FE    B	L__main_end_loop
0x1BFE	0xBF00    NOP
0x1C00	0x26740000  	?ICS?lstr1_RF4463PRO+0
0x1C04	0x0C0C4001  	GPIOB_ODR+0
0x1C08	0x019C4222  	GPIOC_ODR+0
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x1AB8	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x1ABA	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x1ABE	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x1AC2	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x1AC6	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x1AC8	0xB001    ADD	SP, SP, #4
0x1ACA	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x19D4	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x19D6	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x19DA	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x19DE	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x19E2	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x19E4	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x19E8	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x19EA	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x19EC	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x19EE	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x19F2	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x19F6	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x19F8	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x19FC	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x19FE	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x1A00	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x1A04	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x1A08	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x1A0A	0xB001    ADD	SP, SP, #4
0x1A0C	0x4770    BX	LR
; end of ___FillZeros
_portInit:
;RF4463PRO.c, 788 :: 		void portInit()
0x1A10	0xB081    SUB	SP, SP, #4
0x1A12	0xF8CDE000  STR	LR, [SP, #0]
;RF4463PRO.c, 791 :: 		_SPI_SS_DISABLE | _SPI_SSM_ENABLE | _SPI_SSI_1, &_GPIO_MODULE_SPI2_PB13_14_15 );
0x1A16	0x4A24    LDR	R2, [PC, #144]
0x1A18	0xF2403104  MOVW	R1, #772
;RF4463PRO.c, 790 :: 		SPI2_Init_Advanced( _SPI_FPCLK_DIV8, _SPI_MASTER | _SPI_8_BIT | _SPI_CLK_IDLE_LOW | _SPI_FIRST_CLK_EDGE_TRANSITION | _SPI_MSB_FIRST |
0x1A1C	0x2002    MOVS	R0, #2
;RF4463PRO.c, 791 :: 		_SPI_SS_DISABLE | _SPI_SSM_ENABLE | _SPI_SSI_1, &_GPIO_MODULE_SPI2_PB13_14_15 );
0x1A1E	0xF7FFF943  BL	_SPI2_Init_Advanced+0
;RF4463PRO.c, 793 :: 		UART1_Init_Advanced( 115200, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10 );
0x1A22	0x4822    LDR	R0, [PC, #136]
0x1A24	0xB401    PUSH	(R0)
0x1A26	0xF2400300  MOVW	R3, #0
0x1A2A	0xF2400200  MOVW	R2, #0
0x1A2E	0xF2400100  MOVW	R1, #0
0x1A32	0xF44F30E1  MOV	R0, #115200
0x1A36	0xF7FFF923  BL	_UART1_Init_Advanced+0
0x1A3A	0xB001    ADD	SP, SP, #4
;RF4463PRO.c, 800 :: 		GPIO_Digital_Output( &GPIOB_BASE, _GPIO_PINMASK_12 );  // RF4463nSEL
0x1A3C	0xF2410100  MOVW	R1, #4096
0x1A40	0x481B    LDR	R0, [PC, #108]
0x1A42	0xF7FFFB65  BL	_GPIO_Digital_Output+0
;RF4463PRO.c, 801 :: 		GPIO_Digital_Input( &GPIOC_BASE, _GPIO_PINMASK_12 );   // RF4463nIRQ
0x1A46	0xF2410100  MOVW	R1, #4096
0x1A4A	0x481A    LDR	R0, [PC, #104]
0x1A4C	0xF7FFFB54  BL	_GPIO_Digital_Input+0
;RF4463PRO.c, 802 :: 		GPIO_Digital_Output( &GPIOB_BASE, _GPIO_PINMASK_11 );  // RF4463nSDN
0x1A50	0xF6400100  MOVW	R1, #2048
0x1A54	0x4816    LDR	R0, [PC, #88]
0x1A56	0xF7FFFB5B  BL	_GPIO_Digital_Output+0
;RF4463PRO.c, 804 :: 		GPIO_Digital_Input( &GPIOC_BASE, _GPIO_PINMASK_11 );   // RF4463GPIO0
0x1A5A	0xF6400100  MOVW	R1, #2048
0x1A5E	0x4815    LDR	R0, [PC, #84]
0x1A60	0xF7FFFB4A  BL	_GPIO_Digital_Input+0
;RF4463PRO.c, 805 :: 		GPIO_Digital_Output( &GPIOC_BASE, _GPIO_PINMASK_10 );  // RF4463GPIO1
0x1A64	0xF2404100  MOVW	R1, #1024
0x1A68	0x4812    LDR	R0, [PC, #72]
0x1A6A	0xF7FFFB51  BL	_GPIO_Digital_Output+0
;RF4463PRO.c, 807 :: 		GPIO_Digital_Output( &GPIOB_BASE, _GPIO_PINMASK_7 );   // Buzzer
0x1A6E	0xF2400180  MOVW	R1, #128
0x1A72	0x480F    LDR	R0, [PC, #60]
0x1A74	0xF7FFFB4C  BL	_GPIO_Digital_Output+0
;RF4463PRO.c, 808 :: 		GPIO_Digital_Input( &GPIOB_BASE, _GPIO_PINMASK_8 );    // Boton
0x1A78	0xF2401100  MOVW	R1, #256
0x1A7C	0x480C    LDR	R0, [PC, #48]
0x1A7E	0xF7FFFB3B  BL	_GPIO_Digital_Input+0
;RF4463PRO.c, 810 :: 		GPIO_Digital_Output( &GPIOC_BASE, _GPIO_PINMASK_6 );   // LED_RED
0x1A82	0xF2400140  MOVW	R1, #64
0x1A86	0x480B    LDR	R0, [PC, #44]
0x1A88	0xF7FFFB42  BL	_GPIO_Digital_Output+0
;RF4463PRO.c, 811 :: 		GPIO_Digital_Output( &GPIOC_BASE, _GPIO_PINMASK_7 );   // LED_GREEN
0x1A8C	0xF2400180  MOVW	R1, #128
0x1A90	0x4808    LDR	R0, [PC, #32]
0x1A92	0xF7FFFB3D  BL	_GPIO_Digital_Output+0
;RF4463PRO.c, 812 :: 		GPIO_Digital_Output( &GPIOC_BASE, _GPIO_PINMASK_8 );   // LED_BLUE
0x1A96	0xF2401100  MOVW	R1, #256
0x1A9A	0x4806    LDR	R0, [PC, #24]
0x1A9C	0xF7FFFB38  BL	_GPIO_Digital_Output+0
;RF4463PRO.c, 817 :: 		}
L_end_portInit:
0x1AA0	0xF8DDE000  LDR	LR, [SP, #0]
0x1AA4	0xB001    ADD	SP, SP, #4
0x1AA6	0x4770    BX	LR
0x1AA8	0x22EC0000  	__GPIO_MODULE_SPI2_PB13_14_15+0
0x1AAC	0x22800000  	__GPIO_MODULE_USART1_PA9_10+0
0x1AB0	0x0C004001  	GPIOB_BASE+0
0x1AB4	0x10004001  	GPIOC_BASE+0
; end of _portInit
_SPI2_Init_Advanced:
;__Lib_SPI_123.c, 107 :: 		
; module start address is: 8 (R2)
0x0CA8	0xB083    SUB	SP, SP, #12
0x0CAA	0xF8CDE000  STR	LR, [SP, #0]
0x0CAE	0xF88D0004  STRB	R0, [SP, #4]
0x0CB2	0x9102    STR	R1, [SP, #8]
; module end address is: 8 (R2)
; module start address is: 8 (R2)
;__Lib_SPI_123.c, 108 :: 		
0x0CB4	0x4C0B    LDR	R4, [PC, #44]
0x0CB6	0x4B0C    LDR	R3, [PC, #48]
0x0CB8	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 109 :: 		
0x0CBA	0x4C0C    LDR	R4, [PC, #48]
0x0CBC	0x4B0C    LDR	R3, [PC, #48]
0x0CBE	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 111 :: 		
0x0CC0	0x2401    MOVS	R4, #1
0x0CC2	0xB264    SXTB	R4, R4
0x0CC4	0x4B0B    LDR	R3, [PC, #44]
0x0CC6	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 112 :: 		
0x0CC8	0x4610    MOV	R0, R2
; module end address is: 8 (R2)
0x0CCA	0xF7FFFE0B  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_SPI_123.c, 114 :: 		
0x0CCE	0x9A02    LDR	R2, [SP, #8]
0x0CD0	0xF89D1004  LDRB	R1, [SP, #4]
0x0CD4	0x4808    LDR	R0, [PC, #32]
0x0CD6	0xF7FFFDE3  BL	__Lib_SPI_123_SPIx_Init_Advanced+0
;__Lib_SPI_123.c, 115 :: 		
L_end_SPI2_Init_Advanced:
0x0CDA	0xF8DDE000  LDR	LR, [SP, #0]
0x0CDE	0xB003    ADD	SP, SP, #12
0x0CE0	0x4770    BX	LR
0x0CE2	0xBF00    NOP
0x0CE4	0x04010000  	_SPI2_Read+0
0x0CE8	0x00A42000  	_SPI_Rd_Ptr+0
0x0CEC	0xFFFFFFFF  	_SPI2_Write+0
0x0CF0	0x00A82000  	_SPI_Wr_Ptr+0
0x0CF4	0x03B84242  	RCC_APB1ENR+0
0x0CF8	0x38004000  	SPI2_CR1+0
; end of _SPI2_Init_Advanced
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x08E4	0xB081    SUB	SP, SP, #4
0x08E6	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x08EA	0x2201    MOVS	R2, #1
0x08EC	0xB252    SXTB	R2, R2
0x08EE	0x493E    LDR	R1, [PC, #248]
0x08F0	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x08F2	0xF2000168  ADDW	R1, R0, #104
0x08F6	0x680B    LDR	R3, [R1, #0]
0x08F8	0xF06F6100  MVN	R1, #134217728
0x08FC	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x0900	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x0902	0xF0036100  AND	R1, R3, #134217728
0x0906	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x0908	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x090A	0xF0024100  AND	R1, R2, #-2147483648
0x090E	0xF1B14F00  CMP	R1, #-2147483648
0x0912	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x0914	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0916	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x0918	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x091A	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x091C	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x091E	0xF4042170  AND	R1, R4, #983040
0x0922	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x0924	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x0926	0xF64F71FF  MOVW	R1, #65535
0x092A	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x092E	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x0930	0xF4041140  AND	R1, R4, #3145728
0x0934	0xF5B11F40  CMP	R1, #3145728
0x0938	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x093A	0xF06F6170  MVN	R1, #251658240
0x093E	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x0942	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x0944	0x492A    LDR	R1, [PC, #168]
0x0946	0x680A    LDR	R2, [R1, #0]
0x0948	0xF06F6170  MVN	R1, #251658240
0x094C	0x400A    ANDS	R2, R1
0x094E	0x4928    LDR	R1, [PC, #160]
0x0950	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x0952	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x0954	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x0956	0xF4041180  AND	R1, R4, #1048576
0x095A	0xF5B11F80  CMP	R1, #1048576
0x095E	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x0960	0xF04F0103  MOV	R1, #3
0x0964	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x0966	0x43C9    MVN	R1, R1
0x0968	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x096C	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x0970	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x0972	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x0974	0x0D61    LSRS	R1, R4, #21
0x0976	0x0109    LSLS	R1, R1, #4
0x0978	0xFA05F101  LSL	R1, R5, R1
0x097C	0x43C9    MVN	R1, R1
0x097E	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x0980	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x0984	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x0986	0x0D61    LSRS	R1, R4, #21
0x0988	0x0109    LSLS	R1, R1, #4
0x098A	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x098E	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x0990	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x0992	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x0996	0xF1B14F00  CMP	R1, #-2147483648
0x099A	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x099C	0x4913    LDR	R1, [PC, #76]
0x099E	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x09A0	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x09A2	0x4913    LDR	R1, [PC, #76]
0x09A4	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x09A6	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x09AA	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x09AC	0xEA4F018A  LSL	R1, R10, #2
0x09B0	0xEB090101  ADD	R1, R9, R1, LSL #0
0x09B4	0x6809    LDR	R1, [R1, #0]
0x09B6	0xF1B13FFF  CMP	R1, #-1
0x09BA	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x09BC	0xF1090134  ADD	R1, R9, #52
0x09C0	0xEA4F038A  LSL	R3, R10, #2
0x09C4	0x18C9    ADDS	R1, R1, R3
0x09C6	0x6809    LDR	R1, [R1, #0]
0x09C8	0x460A    MOV	R2, R1
0x09CA	0xEB090103  ADD	R1, R9, R3, LSL #0
0x09CE	0x6809    LDR	R1, [R1, #0]
0x09D0	0x4608    MOV	R0, R1
0x09D2	0x4611    MOV	R1, R2
0x09D4	0xF7FFFDCA  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x09D8	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x09DC	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x09DE	0xF8DDE000  LDR	LR, [SP, #0]
0x09E2	0xB001    ADD	SP, SP, #4
0x09E4	0x4770    BX	LR
0x09E6	0xBF00    NOP
0x09E8	0x03004242  	RCC_APB2ENRbits+0
0x09EC	0x001C4001  	AFIO_MAPR2+0
0x09F0	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x056C	0xB083    SUB	SP, SP, #12
0x056E	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x0572	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x0576	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0578	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x057A	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x057E	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x0580	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x0582	0x4A18    LDR	R2, [PC, #96]
0x0584	0x9202    STR	R2, [SP, #8]
0x0586	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x0588	0x4A17    LDR	R2, [PC, #92]
0x058A	0x9202    STR	R2, [SP, #8]
0x058C	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x058E	0x4A17    LDR	R2, [PC, #92]
0x0590	0x9202    STR	R2, [SP, #8]
0x0592	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x0594	0x4A16    LDR	R2, [PC, #88]
0x0596	0x9202    STR	R2, [SP, #8]
0x0598	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x059A	0x4A16    LDR	R2, [PC, #88]
0x059C	0x9202    STR	R2, [SP, #8]
0x059E	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x05A0	0x4A15    LDR	R2, [PC, #84]
0x05A2	0x9202    STR	R2, [SP, #8]
0x05A4	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x05A6	0x4A15    LDR	R2, [PC, #84]
0x05A8	0x9202    STR	R2, [SP, #8]
0x05AA	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x05AC	0x2800    CMP	R0, #0
0x05AE	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x05B0	0x2801    CMP	R0, #1
0x05B2	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x05B4	0x2802    CMP	R0, #2
0x05B6	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x05B8	0x2803    CMP	R0, #3
0x05BA	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x05BC	0x2804    CMP	R0, #4
0x05BE	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x05C0	0x2805    CMP	R0, #5
0x05C2	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x05C4	0x2806    CMP	R0, #6
0x05C6	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x05C8	0x2201    MOVS	R2, #1
0x05CA	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x05CC	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x05D0	0x9802    LDR	R0, [SP, #8]
0x05D2	0x460A    MOV	R2, R1
0x05D4	0xF8BD1004  LDRH	R1, [SP, #4]
0x05D8	0xF7FFFE18  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x05DC	0xF8DDE000  LDR	LR, [SP, #0]
0x05E0	0xB003    ADD	SP, SP, #12
0x05E2	0x4770    BX	LR
0x05E4	0x08004001  	#1073809408
0x05E8	0x0C004001  	#1073810432
0x05EC	0x10004001  	#1073811456
0x05F0	0x14004001  	#1073812480
0x05F4	0x18004001  	#1073813504
0x05F8	0x1C004001  	#1073814528
0x05FC	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x020C	0xB081    SUB	SP, SP, #4
0x020E	0xF8CDE000  STR	LR, [SP, #0]
0x0212	0xB28C    UXTH	R4, R1
0x0214	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x0216	0x4B77    LDR	R3, [PC, #476]
0x0218	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x021C	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x021E	0x4618    MOV	R0, R3
0x0220	0xF7FFFF96  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x0224	0xF1B40FFF  CMP	R4, #255
0x0228	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x022A	0x4B73    LDR	R3, [PC, #460]
0x022C	0x429D    CMP	R5, R3
0x022E	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x0230	0xF04F3333  MOV	R3, #858993459
0x0234	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x0236	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0238	0x2D42    CMP	R5, #66
0x023A	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x023C	0xF04F3344  MOV	R3, #1145324612
0x0240	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x0242	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x0244	0xF64F73FF  MOVW	R3, #65535
0x0248	0x429C    CMP	R4, R3
0x024A	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x024C	0x4B6A    LDR	R3, [PC, #424]
0x024E	0x429D    CMP	R5, R3
0x0250	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x0252	0xF04F3333  MOV	R3, #858993459
0x0256	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x0258	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x025A	0xF04F3333  MOV	R3, #858993459
0x025E	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x0260	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0262	0x2D42    CMP	R5, #66
0x0264	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x0266	0xF04F3344  MOV	R3, #1145324612
0x026A	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x026C	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x026E	0xF04F3344  MOV	R3, #1145324612
0x0272	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x0274	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x0276	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x0278	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x027A	0xF0050301  AND	R3, R5, #1
0x027E	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x0280	0x2100    MOVS	R1, #0
0x0282	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x0284	0xF0050302  AND	R3, R5, #2
0x0288	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x028A	0xF40573C0  AND	R3, R5, #384
0x028E	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x0290	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x0292	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x0294	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x0296	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x0298	0xF0050304  AND	R3, R5, #4
0x029C	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x029E	0xF0050320  AND	R3, R5, #32
0x02A2	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x02A4	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x02A6	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x02A8	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x02AA	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x02AC	0xF0050308  AND	R3, R5, #8
0x02B0	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x02B2	0xF0050320  AND	R3, R5, #32
0x02B6	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x02B8	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x02BA	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x02BC	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x02BE	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x02C0	0x4B4E    LDR	R3, [PC, #312]
0x02C2	0xEA050303  AND	R3, R5, R3, LSL #0
0x02C6	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x02C8	0x2003    MOVS	R0, #3
0x02CA	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x02CC	0xF4057300  AND	R3, R5, #512
0x02D0	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x02D2	0x2002    MOVS	R0, #2
0x02D4	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x02D6	0xF4056380  AND	R3, R5, #1024
0x02DA	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x02DC	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x02DE	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x02E0	0xF005030C  AND	R3, R5, #12
0x02E4	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x02E6	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x02E8	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x02EA	0xF00403FF  AND	R3, R4, #255
0x02EE	0xB29B    UXTH	R3, R3
0x02F0	0x2B00    CMP	R3, #0
0x02F2	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x02F4	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x02F6	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x02F8	0xFA1FF884  UXTH	R8, R4
0x02FC	0x4632    MOV	R2, R6
0x02FE	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x0300	0x2808    CMP	R0, #8
0x0302	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x0304	0xF04F0301  MOV	R3, #1
0x0308	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x030C	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x0310	0x42A3    CMP	R3, R4
0x0312	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x0314	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x0316	0xF04F030F  MOV	R3, #15
0x031A	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x031C	0x43DB    MVN	R3, R3
0x031E	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x0322	0xFA01F305  LSL	R3, R1, R5
0x0326	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x032A	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x032C	0xF4067381  AND	R3, R6, #258
0x0330	0xF5B37F81  CMP	R3, #258
0x0334	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x0336	0xF2020414  ADDW	R4, R2, #20
0x033A	0xF04F0301  MOV	R3, #1
0x033E	0x4083    LSLS	R3, R0
0x0340	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x0342	0xF0060382  AND	R3, R6, #130
0x0346	0x2B82    CMP	R3, #130
0x0348	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x034A	0xF2020410  ADDW	R4, R2, #16
0x034E	0xF04F0301  MOV	R3, #1
0x0352	0x4083    LSLS	R3, R0
0x0354	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x0356	0x462F    MOV	R7, R5
0x0358	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x035A	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x035C	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x035E	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x0360	0xFA1FF088  UXTH	R0, R8
0x0364	0x460F    MOV	R7, R1
0x0366	0x4631    MOV	R1, R6
0x0368	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x036A	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x036C	0x460F    MOV	R7, R1
0x036E	0x4629    MOV	R1, R5
0x0370	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0372	0xF1B00FFF  CMP	R0, #255
0x0376	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x0378	0x1D33    ADDS	R3, R6, #4
0x037A	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x037E	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x0380	0x2A08    CMP	R2, #8
0x0382	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0384	0xF2020408  ADDW	R4, R2, #8
0x0388	0xF04F0301  MOV	R3, #1
0x038C	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x0390	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x0394	0x42A3    CMP	R3, R4
0x0396	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x0398	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x039A	0xF04F030F  MOV	R3, #15
0x039E	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x03A0	0x43DB    MVN	R3, R3
0x03A2	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x03A6	0xFA07F305  LSL	R3, R7, R5
0x03AA	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x03AE	0xF4017381  AND	R3, R1, #258
0x03B2	0xF5B37F81  CMP	R3, #258
0x03B6	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x03B8	0xF2060514  ADDW	R5, R6, #20
0x03BC	0xF2020408  ADDW	R4, R2, #8
0x03C0	0xF04F0301  MOV	R3, #1
0x03C4	0x40A3    LSLS	R3, R4
0x03C6	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x03C8	0xF0010382  AND	R3, R1, #130
0x03CC	0x2B82    CMP	R3, #130
0x03CE	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x03D0	0xF2060510  ADDW	R5, R6, #16
0x03D4	0xF2020408  ADDW	R4, R2, #8
0x03D8	0xF04F0301  MOV	R3, #1
0x03DC	0x40A3    LSLS	R3, R4
0x03DE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x03E0	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x03E2	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x03E4	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x03E6	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x03E8	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x03EC	0xF8DDE000  LDR	LR, [SP, #0]
0x03F0	0xB001    ADD	SP, SP, #4
0x03F2	0x4770    BX	LR
0x03F4	0xFC00FFFF  	#-1024
0x03F8	0x00140008  	#524308
0x03FC	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0150	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x0152	0x4919    LDR	R1, [PC, #100]
0x0154	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0158	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x015A	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x015C	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x015E	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0160	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0162	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0164	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0166	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0168	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x016A	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x016C	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x016E	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0170	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0172	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0174	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0176	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x017A	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x017C	0x490F    LDR	R1, [PC, #60]
0x017E	0x4288    CMP	R0, R1
0x0180	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0182	0x490F    LDR	R1, [PC, #60]
0x0184	0x4288    CMP	R0, R1
0x0186	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0188	0x490E    LDR	R1, [PC, #56]
0x018A	0x4288    CMP	R0, R1
0x018C	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x018E	0x490E    LDR	R1, [PC, #56]
0x0190	0x4288    CMP	R0, R1
0x0192	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0194	0x490D    LDR	R1, [PC, #52]
0x0196	0x4288    CMP	R0, R1
0x0198	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x019A	0x490D    LDR	R1, [PC, #52]
0x019C	0x4288    CMP	R0, R1
0x019E	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x01A0	0x490C    LDR	R1, [PC, #48]
0x01A2	0x4288    CMP	R0, R1
0x01A4	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x01A6	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x01A8	0x490B    LDR	R1, [PC, #44]
0x01AA	0x6809    LDR	R1, [R1, #0]
0x01AC	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x01B0	0x4909    LDR	R1, [PC, #36]
0x01B2	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x01B4	0xB001    ADD	SP, SP, #4
0x01B6	0x4770    BX	LR
0x01B8	0xFC00FFFF  	#-1024
0x01BC	0x08004001  	#1073809408
0x01C0	0x0C004001  	#1073810432
0x01C4	0x10004001  	#1073811456
0x01C8	0x14004001  	#1073812480
0x01CC	0x18004001  	#1073813504
0x01D0	0x1C004001  	#1073814528
0x01D4	0x20004001  	#1073815552
0x01D8	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
__Lib_SPI_123_SPIx_Init_Advanced:
;__Lib_SPI_123.c, 53 :: 		
; config start address is: 8 (R2)
; clock_divider start address is: 4 (R1)
; base start address is: 0 (R0)
0x08A0	0xB081    SUB	SP, SP, #4
; config end address is: 8 (R2)
; clock_divider end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; clock_divider start address is: 4 (R1)
; config start address is: 8 (R2)
;__Lib_SPI_123.c, 56 :: 		
0x08A2	0x2300    MOVS	R3, #0
0x08A4	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 58 :: 		
0x08A6	0x00CB    LSLS	R3, R1, #3
0x08A8	0xB29B    UXTH	R3, R3
; clock_divider end address is: 4 (R1)
0x08AA	0xEA420303  ORR	R3, R2, R3, LSL #0
;__Lib_SPI_123.c, 60 :: 		
0x08AE	0x6804    LDR	R4, [R0, #0]
0x08B0	0xB29B    UXTH	R3, R3
0x08B2	0xEA440303  ORR	R3, R4, R3, LSL #0
0x08B6	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 61 :: 		
0x08B8	0x1D05    ADDS	R5, R0, #4
0x08BA	0x1413    ASRS	R3, R2, #16
; config end address is: 8 (R2)
0x08BC	0x461C    MOV	R4, R3
0x08BE	0x682B    LDR	R3, [R5, #0]
0x08C0	0xF3640382  BFI	R3, R4, #2, #1
0x08C4	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 63 :: 		
0x08C6	0xF200051C  ADDW	R5, R0, #28
0x08CA	0x2400    MOVS	R4, #0
0x08CC	0x682B    LDR	R3, [R5, #0]
0x08CE	0xF36423CB  BFI	R3, R4, #11, #1
0x08D2	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 64 :: 		
0x08D4	0x2401    MOVS	R4, #1
0x08D6	0x6803    LDR	R3, [R0, #0]
0x08D8	0xF3641386  BFI	R3, R4, #6, #1
0x08DC	0x6003    STR	R3, [R0, #0]
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 65 :: 		
L_end_SPIx_Init_Advanced:
0x08DE	0xB001    ADD	SP, SP, #4
0x08E0	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Init_Advanced
_UART1_Init_Advanced:
;__Lib_UART_123_45.c, 372 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x0C80	0xB081    SUB	SP, SP, #4
0x0C82	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x0C86	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 374 :: 		
0x0C88	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0C8A	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0C8C	0xB408    PUSH	(R3)
0x0C8E	0xB293    UXTH	R3, R2
0x0C90	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x0C92	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0C94	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x0C96	0xF7FFFEAD  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x0C9A	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 375 :: 		
L_end_UART1_Init_Advanced:
0x0C9C	0xF8DDE000  LDR	LR, [SP, #0]
0x0CA0	0xB001    ADD	SP, SP, #4
0x0CA2	0x4770    BX	LR
0x0CA4	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
__Lib_UART_123_45_UARTx_Init_Advanced:
;__Lib_UART_123_45.c, 294 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x09F4	0xB089    SUB	SP, SP, #36
0x09F6	0xF8CDE000  STR	LR, [SP, #0]
0x09FA	0x4683    MOV	R11, R0
0x09FC	0xB298    UXTH	R0, R3
0x09FE	0x468C    MOV	R12, R1
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 44 (R11)
; baud_rate start address is: 48 (R12)
; parity start address is: 0 (R0)
; stop_bits start address is: 4 (R1)
0x0A00	0xF8BD1024  LDRH	R1, [SP, #36]
; module start address is: 24 (R6)
0x0A04	0x9E0A    LDR	R6, [SP, #40]
;__Lib_UART_123_45.c, 298 :: 		
0x0A06	0xAC04    ADD	R4, SP, #16
0x0A08	0xF8AD1004  STRH	R1, [SP, #4]
0x0A0C	0xF8AD0008  STRH	R0, [SP, #8]
0x0A10	0x4620    MOV	R0, R4
0x0A12	0xF7FFFD3F  BL	_RCC_GetClocksFrequency+0
0x0A16	0xF8BD0008  LDRH	R0, [SP, #8]
0x0A1A	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 301 :: 		
0x0A1E	0x4C64    LDR	R4, [PC, #400]
0x0A20	0x45A3    CMP	R11, R4
0x0A22	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced15
;__Lib_UART_123_45.c, 302 :: 		
0x0A24	0x2501    MOVS	R5, #1
0x0A26	0xB26D    SXTB	R5, R5
0x0A28	0x4C62    LDR	R4, [PC, #392]
0x0A2A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 303 :: 		
0x0A2C	0x4D62    LDR	R5, [PC, #392]
0x0A2E	0x4C63    LDR	R4, [PC, #396]
0x0A30	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 304 :: 		
0x0A32	0x4D63    LDR	R5, [PC, #396]
0x0A34	0x4C63    LDR	R4, [PC, #396]
0x0A36	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 305 :: 		
0x0A38	0x4D63    LDR	R5, [PC, #396]
0x0A3A	0x4C64    LDR	R4, [PC, #400]
0x0A3C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 306 :: 		
0x0A3E	0x4D64    LDR	R5, [PC, #400]
0x0A40	0x4C64    LDR	R4, [PC, #400]
0x0A42	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 307 :: 		
0x0A44	0x9C07    LDR	R4, [SP, #28]
0x0A46	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 308 :: 		
0x0A48	0xE056    B	L___Lib_UART_123_45_UARTx_Init_Advanced16
L___Lib_UART_123_45_UARTx_Init_Advanced15:
;__Lib_UART_123_45.c, 309 :: 		
0x0A4A	0x4C63    LDR	R4, [PC, #396]
0x0A4C	0x45A3    CMP	R11, R4
0x0A4E	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced17
;__Lib_UART_123_45.c, 310 :: 		
0x0A50	0x2501    MOVS	R5, #1
0x0A52	0xB26D    SXTB	R5, R5
0x0A54	0x4C61    LDR	R4, [PC, #388]
0x0A56	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 311 :: 		
0x0A58	0x4D61    LDR	R5, [PC, #388]
0x0A5A	0x4C58    LDR	R4, [PC, #352]
0x0A5C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 312 :: 		
0x0A5E	0x4D61    LDR	R5, [PC, #388]
0x0A60	0x4C58    LDR	R4, [PC, #352]
0x0A62	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 313 :: 		
0x0A64	0x4D60    LDR	R5, [PC, #384]
0x0A66	0x4C59    LDR	R4, [PC, #356]
0x0A68	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 314 :: 		
0x0A6A	0x4D60    LDR	R5, [PC, #384]
0x0A6C	0x4C59    LDR	R4, [PC, #356]
0x0A6E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 315 :: 		
0x0A70	0x9C06    LDR	R4, [SP, #24]
0x0A72	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 316 :: 		
0x0A74	0xE040    B	L___Lib_UART_123_45_UARTx_Init_Advanced18
L___Lib_UART_123_45_UARTx_Init_Advanced17:
;__Lib_UART_123_45.c, 317 :: 		
0x0A76	0x4C5E    LDR	R4, [PC, #376]
0x0A78	0x45A3    CMP	R11, R4
0x0A7A	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced19
;__Lib_UART_123_45.c, 318 :: 		
0x0A7C	0x2501    MOVS	R5, #1
0x0A7E	0xB26D    SXTB	R5, R5
0x0A80	0x4C5C    LDR	R4, [PC, #368]
0x0A82	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 319 :: 		
0x0A84	0x4D5C    LDR	R5, [PC, #368]
0x0A86	0x4C4D    LDR	R4, [PC, #308]
0x0A88	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 320 :: 		
0x0A8A	0x4D5C    LDR	R5, [PC, #368]
0x0A8C	0x4C4D    LDR	R4, [PC, #308]
0x0A8E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 321 :: 		
0x0A90	0x4D5B    LDR	R5, [PC, #364]
0x0A92	0x4C4E    LDR	R4, [PC, #312]
0x0A94	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 322 :: 		
0x0A96	0x4D5B    LDR	R5, [PC, #364]
0x0A98	0x4C4E    LDR	R4, [PC, #312]
0x0A9A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 323 :: 		
0x0A9C	0x9C06    LDR	R4, [SP, #24]
0x0A9E	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 324 :: 		
0x0AA0	0xE02A    B	L___Lib_UART_123_45_UARTx_Init_Advanced20
L___Lib_UART_123_45_UARTx_Init_Advanced19:
;__Lib_UART_123_45.c, 325 :: 		
0x0AA2	0x4C59    LDR	R4, [PC, #356]
0x0AA4	0x45A3    CMP	R11, R4
0x0AA6	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced21
;__Lib_UART_123_45.c, 326 :: 		
0x0AA8	0x2501    MOVS	R5, #1
0x0AAA	0xB26D    SXTB	R5, R5
0x0AAC	0x4C57    LDR	R4, [PC, #348]
0x0AAE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 327 :: 		
0x0AB0	0x4D57    LDR	R5, [PC, #348]
0x0AB2	0x4C42    LDR	R4, [PC, #264]
0x0AB4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 328 :: 		
0x0AB6	0x4D57    LDR	R5, [PC, #348]
0x0AB8	0x4C42    LDR	R4, [PC, #264]
0x0ABA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 329 :: 		
0x0ABC	0x4D56    LDR	R5, [PC, #344]
0x0ABE	0x4C43    LDR	R4, [PC, #268]
0x0AC0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 330 :: 		
0x0AC2	0x4D56    LDR	R5, [PC, #344]
0x0AC4	0x4C43    LDR	R4, [PC, #268]
0x0AC6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 331 :: 		
0x0AC8	0x9C06    LDR	R4, [SP, #24]
0x0ACA	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 332 :: 		
0x0ACC	0xE014    B	L___Lib_UART_123_45_UARTx_Init_Advanced22
L___Lib_UART_123_45_UARTx_Init_Advanced21:
;__Lib_UART_123_45.c, 333 :: 		
0x0ACE	0x4C54    LDR	R4, [PC, #336]
0x0AD0	0x45A3    CMP	R11, R4
0x0AD2	0xD111    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced23
;__Lib_UART_123_45.c, 334 :: 		
0x0AD4	0x2501    MOVS	R5, #1
0x0AD6	0xB26D    SXTB	R5, R5
0x0AD8	0x4C52    LDR	R4, [PC, #328]
0x0ADA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 335 :: 		
0x0ADC	0x4D52    LDR	R5, [PC, #328]
0x0ADE	0x4C37    LDR	R4, [PC, #220]
0x0AE0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 336 :: 		
0x0AE2	0x4D52    LDR	R5, [PC, #328]
0x0AE4	0x4C37    LDR	R4, [PC, #220]
0x0AE6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 337 :: 		
0x0AE8	0x4D51    LDR	R5, [PC, #324]
0x0AEA	0x4C38    LDR	R4, [PC, #224]
0x0AEC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 338 :: 		
0x0AEE	0x4D51    LDR	R5, [PC, #324]
0x0AF0	0x4C38    LDR	R4, [PC, #224]
0x0AF2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 339 :: 		
0x0AF4	0x9C06    LDR	R4, [SP, #24]
0x0AF6	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 340 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced23:
L___Lib_UART_123_45_UARTx_Init_Advanced22:
L___Lib_UART_123_45_UARTx_Init_Advanced20:
L___Lib_UART_123_45_UARTx_Init_Advanced18:
L___Lib_UART_123_45_UARTx_Init_Advanced16:
;__Lib_UART_123_45.c, 342 :: 		
0x0AF8	0xF8AD1004  STRH	R1, [SP, #4]
; module end address is: 24 (R6)
0x0AFC	0xF8AD0008  STRH	R0, [SP, #8]
0x0B00	0x4630    MOV	R0, R6
0x0B02	0xF7FFFEEF  BL	_GPIO_Alternate_Function_Enable+0
0x0B06	0xF8BD0008  LDRH	R0, [SP, #8]
0x0B0A	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 344 :: 		
0x0B0E	0xF10B0510  ADD	R5, R11, #16
0x0B12	0x2400    MOVS	R4, #0
0x0B14	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 345 :: 		
0x0B16	0xF10B0510  ADD	R5, R11, #16
0x0B1A	0x682C    LDR	R4, [R5, #0]
0x0B1C	0x430C    ORRS	R4, R1
; stop_bits end address is: 4 (R1)
0x0B1E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 346 :: 		
0x0B20	0xF10B050C  ADD	R5, R11, #12
0x0B24	0x2400    MOVS	R4, #0
0x0B26	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 348 :: 		
0x0B28	0xB118    CBZ	R0, L___Lib_UART_123_45_UARTx_Init_Advanced38
;__Lib_UART_123_45.c, 349 :: 		
0x0B2A	0xF4406080  ORR	R0, R0, #1024
0x0B2E	0xB280    UXTH	R0, R0
; parity end address is: 0 (R0)
;__Lib_UART_123_45.c, 350 :: 		
0x0B30	0xE7FF    B	L___Lib_UART_123_45_UARTx_Init_Advanced24
L___Lib_UART_123_45_UARTx_Init_Advanced38:
;__Lib_UART_123_45.c, 348 :: 		
;__Lib_UART_123_45.c, 350 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced24:
;__Lib_UART_123_45.c, 352 :: 		
; parity start address is: 0 (R0)
0x0B32	0xF10B050C  ADD	R5, R11, #12
0x0B36	0x682C    LDR	R4, [R5, #0]
0x0B38	0x4304    ORRS	R4, R0
; parity end address is: 0 (R0)
0x0B3A	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 354 :: 		
0x0B3C	0xF10B060C  ADD	R6, R11, #12
0x0B40	0x2501    MOVS	R5, #1
0x0B42	0x6834    LDR	R4, [R6, #0]
0x0B44	0xF365344D  BFI	R4, R5, #13, #1
0x0B48	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 355 :: 		
0x0B4A	0xF10B060C  ADD	R6, R11, #12
0x0B4E	0x2501    MOVS	R5, #1
0x0B50	0x6834    LDR	R4, [R6, #0]
0x0B52	0xF36504C3  BFI	R4, R5, #3, #1
0x0B56	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 356 :: 		
0x0B58	0xF10B060C  ADD	R6, R11, #12
0x0B5C	0x2501    MOVS	R5, #1
0x0B5E	0x6834    LDR	R4, [R6, #0]
0x0B60	0xF3650482  BFI	R4, R5, #2, #1
0x0B64	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 357 :: 		
0x0B66	0xF10B0514  ADD	R5, R11, #20
0x0B6A	0x2400    MOVS	R4, #0
0x0B6C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 362 :: 		
0x0B6E	0x9D03    LDR	R5, [SP, #12]
0x0B70	0x2419    MOVS	R4, #25
0x0B72	0x4365    MULS	R5, R4, R5
0x0B74	0xEA4F048C  LSL	R4, R12, #2
; baud_rate end address is: 48 (R12)
0x0B78	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45.c, 363 :: 		
0x0B7C	0x2464    MOVS	R4, #100
0x0B7E	0xFBB7F4F4  UDIV	R4, R7, R4
0x0B82	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45.c, 365 :: 		
0x0B84	0x0935    LSRS	R5, R6, #4
0x0B86	0x2464    MOVS	R4, #100
0x0B88	0x436C    MULS	R4, R5, R4
0x0B8A	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45.c, 366 :: 		
0x0B8C	0x0124    LSLS	R4, R4, #4
0x0B8E	0xF2040532  ADDW	R5, R4, #50
0x0B92	0x2464    MOVS	R4, #100
0x0B94	0xFBB5F4F4  UDIV	R4, R5, R4
0x0B98	0xF004040F  AND	R4, R4, #15
0x0B9C	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45.c, 368 :: 		
0x0BA0	0xF10B0508  ADD	R5, R11, #8
; UART_Base end address is: 44 (R11)
0x0BA4	0xB2A4    UXTH	R4, R4
0x0BA6	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 369 :: 		
L_end_UARTx_Init_Advanced:
0x0BA8	0xF8DDE000  LDR	LR, [SP, #0]
0x0BAC	0xB009    ADD	SP, SP, #36
0x0BAE	0x4770    BX	LR
0x0BB0	0x38004001  	USART1_SR+0
0x0BB4	0x03384242  	RCC_APB2ENR+0
0x0BB8	0x0F850000  	_UART1_Write+0
0x0BBC	0x00AC2000  	_UART_Wr_Ptr+0
0x0BC0	0xFFFFFFFF  	_UART1_Read+0
0x0BC4	0x00B02000  	_UART_Rd_Ptr+0
0x0BC8	0xFFFFFFFF  	_UART1_Data_Ready+0
0x0BCC	0x00B42000  	_UART_Rdy_Ptr+0
0x0BD0	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x0BD4	0x00B82000  	_UART_Tx_Idle_Ptr+0
0x0BD8	0x44004000  	USART2_SR+0
0x0BDC	0x03C44242  	RCC_APB1ENR+0
0x0BE0	0xFFFFFFFF  	_UART2_Write+0
0x0BE4	0xFFFFFFFF  	_UART2_Read+0
0x0BE8	0xFFFFFFFF  	_UART2_Data_Ready+0
0x0BEC	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x0BF0	0x48004000  	USART3_SR+0
0x0BF4	0x03C84242  	RCC_APB1ENR+0
0x0BF8	0xFFFFFFFF  	_UART3_Write+0
0x0BFC	0xFFFFFFFF  	_UART3_Read+0
0x0C00	0xFFFFFFFF  	_UART3_Data_Ready+0
0x0C04	0xFFFFFFFF  	_UART3_Tx_Idle+0
0x0C08	0x4C004000  	UART4_SR+0
0x0C0C	0x03CC4242  	RCC_APB1ENR+0
0x0C10	0xFFFFFFFF  	_UART4_Write+0
0x0C14	0xFFFFFFFF  	_UART4_Read+0
0x0C18	0xFFFFFFFF  	_UART4_Data_Ready+0
0x0C1C	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x0C20	0x50004000  	UART5_SR+0
0x0C24	0x03D04242  	RCC_APB1ENR+0
0x0C28	0xFFFFFFFF  	_UART5_Write+0
0x0C2C	0xFFFFFFFF  	_UART5_Read+0
0x0C30	0xFFFFFFFF  	_UART5_Data_Ready+0
0x0C34	0xFFFFFFFF  	_UART5_Tx_Idle+0
; end of __Lib_UART_123_45_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_105_107.c, 464 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0494	0xB082    SUB	SP, SP, #8
0x0496	0xF8CDE000  STR	LR, [SP, #0]
0x049A	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_105_107.c, 467 :: 		
0x049C	0x1D19    ADDS	R1, R3, #4
0x049E	0x9101    STR	R1, [SP, #4]
0x04A0	0xF7FFFEAE  BL	_Get_Fosc_kHz+0
0x04A4	0xF24031E8  MOVW	R1, #1000
0x04A8	0xFB00F201  MUL	R2, R0, R1
0x04AC	0x9901    LDR	R1, [SP, #4]
0x04AE	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 470 :: 		
0x04B0	0x491F    LDR	R1, [PC, #124]
0x04B2	0x7809    LDRB	R1, [R1, #0]
0x04B4	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x04B8	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 471 :: 		
0x04BA	0x491E    LDR	R1, [PC, #120]
0x04BC	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x04BE	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x04C0	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 473 :: 		
0x04C2	0x1D19    ADDS	R1, R3, #4
0x04C4	0x6809    LDR	R1, [R1, #0]
0x04C6	0x4081    LSLS	R1, R0
; presc end address is: 0 (R0)
0x04C8	0x6019    STR	R1, [R3, #0]
;__Lib_System_105_107.c, 475 :: 		
0x04CA	0x4919    LDR	R1, [PC, #100]
0x04CC	0x8809    LDRH	R1, [R1, #0]
0x04CE	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x04D2	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 476 :: 		
0x04D4	0x4917    LDR	R1, [PC, #92]
0x04D6	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x04D8	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x04DA	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 478 :: 		
0x04DC	0xF2030208  ADDW	R2, R3, #8
0x04E0	0x1D19    ADDS	R1, R3, #4
0x04E2	0x6809    LDR	R1, [R1, #0]
0x04E4	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x04E6	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 480 :: 		
0x04E8	0x4911    LDR	R1, [PC, #68]
0x04EA	0x8809    LDRH	R1, [R1, #0]
0x04EC	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x04F0	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 481 :: 		
0x04F2	0x4910    LDR	R1, [PC, #64]
0x04F4	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x04F6	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x04F8	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 483 :: 		
0x04FA	0xF203020C  ADDW	R2, R3, #12
0x04FE	0x1D19    ADDS	R1, R3, #4
0x0500	0x6809    LDR	R1, [R1, #0]
0x0502	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0504	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 485 :: 		
0x0506	0x490A    LDR	R1, [PC, #40]
0x0508	0x8809    LDRH	R1, [R1, #0]
0x050A	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x050E	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 486 :: 		
0x0510	0x4909    LDR	R1, [PC, #36]
0x0512	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0514	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x0516	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 488 :: 		
0x0518	0xF2030210  ADDW	R2, R3, #16
0x051C	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x0520	0x6809    LDR	R1, [R1, #0]
0x0522	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x0526	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 489 :: 		
L_end_RCC_GetClocksFrequency:
0x0528	0xF8DDE000  LDR	LR, [SP, #0]
0x052C	0xB002    ADD	SP, SP, #8
0x052E	0x4770    BX	LR
0x0530	0x10044002  	RCC_CFGRbits+0
0x0534	0x26880000  	__Lib_System_105_107_APBAHBPrescTable+0
0x0538	0x10320000  	__Lib_System_105_107_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0200	0x4801    LDR	R0, [PC, #4]
0x0202	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0204	0x4770    BX	LR
0x0206	0xBF00    NOP
0x0208	0x00942000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1110	0xB081    SUB	SP, SP, #4
0x1112	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x1116	0x4A04    LDR	R2, [PC, #16]
0x1118	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x111A	0xF7FFF877  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x111E	0xF8DDE000  LDR	LR, [SP, #0]
0x1122	0xB001    ADD	SP, SP, #4
0x1124	0x4770    BX	LR
0x1126	0xBF00    NOP
0x1128	0x00140008  	#524308
; end of _GPIO_Digital_Output
_GPIO_Digital_Input:
;__Lib_GPIO_32F10x.c, 369 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x10F8	0xB081    SUB	SP, SP, #4
0x10FA	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 370 :: 		
0x10FE	0xF04F0242  MOV	R2, #66
0x1102	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x1104	0xF7FFF882  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 371 :: 		
L_end_GPIO_Digital_Input:
0x1108	0xF8DDE000  LDR	LR, [SP, #0]
0x110C	0xB001    ADD	SP, SP, #4
0x110E	0x4770    BX	LR
; end of _GPIO_Digital_Input
_nop_10:
;RF4463PRO.c, 1057 :: 		void nop_10()
;RF4463PRO.c, 1059 :: 		asm{nop};
0x1B38	0xBF00    NOP
;RF4463PRO.c, 1060 :: 		asm{nop};
0x1B3A	0xBF00    NOP
;RF4463PRO.c, 1061 :: 		asm{nop};
0x1B3C	0xBF00    NOP
;RF4463PRO.c, 1062 :: 		asm{nop};
0x1B3E	0xBF00    NOP
;RF4463PRO.c, 1063 :: 		asm{nop};
0x1B40	0xBF00    NOP
;RF4463PRO.c, 1064 :: 		asm{nop};
0x1B42	0xBF00    NOP
;RF4463PRO.c, 1065 :: 		asm{nop};
0x1B44	0xBF00    NOP
;RF4463PRO.c, 1066 :: 		asm{nop};
0x1B46	0xBF00    NOP
;RF4463PRO.c, 1067 :: 		asm{nop};
0x1B48	0xBF00    NOP
;RF4463PRO.c, 1068 :: 		asm{nop};
0x1B4A	0xBF00    NOP
;RF4463PRO.c, 1070 :: 		}
L_end_nop_10:
0x1B4C	0x4770    BX	LR
; end of _nop_10
_UART1_Write_Text:
;__Lib_UART_123_45.c, 75 :: 		
; uart_text start address is: 0 (R0)
0x18D8	0xB081    SUB	SP, SP, #4
0x18DA	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_123_45.c, 76 :: 		
0x18DE	0x4601    MOV	R1, R0
; uart_text end address is: 0 (R0)
0x18E0	0x4803    LDR	R0, [PC, #12]
0x18E2	0xF7FFFB8D  BL	__Lib_UART_123_45_UARTx_Write_Text+0
;__Lib_UART_123_45.c, 77 :: 		
L_end_UART1_Write_Text:
0x18E6	0xF8DDE000  LDR	LR, [SP, #0]
0x18EA	0xB001    ADD	SP, SP, #4
0x18EC	0x4770    BX	LR
0x18EE	0xBF00    NOP
0x18F0	0x38004001  	USART1_SR+0
; end of _UART1_Write_Text
__Lib_UART_123_45_UARTx_Write_Text:
;__Lib_UART_123_45.c, 64 :: 		
; uart_text start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x1000	0xB081    SUB	SP, SP, #4
0x1002	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; uart_text start address is: 4 (R1)
;__Lib_UART_123_45.c, 65 :: 		
; counter start address is: 24 (R6)
0x1006	0x2600    MOVS	R6, #0
;__Lib_UART_123_45.c, 67 :: 		
0x1008	0x780A    LDRB	R2, [R1, #0]
; data_ start address is: 12 (R3)
0x100A	0xB2D3    UXTB	R3, R2
; UART_Base end address is: 0 (R0)
; uart_text end address is: 4 (R1)
; data_ end address is: 12 (R3)
; counter end address is: 24 (R6)
0x100C	0x4605    MOV	R5, R0
0x100E	0xB2D8    UXTB	R0, R3
0x1010	0x460C    MOV	R4, R1
;__Lib_UART_123_45.c, 68 :: 		
L___Lib_UART_123_45_UARTx_Write_Text2:
; data_ start address is: 0 (R0)
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
; counter start address is: 24 (R6)
; uart_text start address is: 16 (R4)
; uart_text end address is: 16 (R4)
; UART_Base start address is: 20 (R5)
; UART_Base end address is: 20 (R5)
0x1012	0xB150    CBZ	R0, L___Lib_UART_123_45_UARTx_Write_Text3
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
;__Lib_UART_123_45.c, 69 :: 		
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
0x1014	0xB2C1    UXTB	R1, R0
; data_ end address is: 0 (R0)
0x1016	0x4628    MOV	R0, R5
0x1018	0xF7FFFC32  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 70 :: 		
0x101C	0x1C72    ADDS	R2, R6, #1
0x101E	0xB2D2    UXTB	R2, R2
0x1020	0xB2D6    UXTB	R6, R2
;__Lib_UART_123_45.c, 71 :: 		
0x1022	0x18A2    ADDS	R2, R4, R2
0x1024	0x7812    LDRB	R2, [R2, #0]
; data_ start address is: 0 (R0)
0x1026	0xB2D0    UXTB	R0, R2
;__Lib_UART_123_45.c, 72 :: 		
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
; counter end address is: 24 (R6)
; data_ end address is: 0 (R0)
0x1028	0xE7F3    B	L___Lib_UART_123_45_UARTx_Write_Text2
L___Lib_UART_123_45_UARTx_Write_Text3:
;__Lib_UART_123_45.c, 73 :: 		
L_end_UARTx_Write_Text:
0x102A	0xF8DDE000  LDR	LR, [SP, #0]
0x102E	0xB001    ADD	SP, SP, #4
0x1030	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write_Text
__Lib_UART_123_45_UARTx_Write:
;__Lib_UART_123_45.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0880	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x0882	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x0886	0x4601    MOV	R1, R0
0x0888	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45.c, 36 :: 		
L___Lib_UART_123_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x088C	0x680B    LDR	R3, [R1, #0]
0x088E	0xF3C312C0  UBFX	R2, R3, #7, #1
0x0892	0xB902    CBNZ	R2, L___Lib_UART_123_45_UARTx_Write1
;__Lib_UART_123_45.c, 37 :: 		
0x0894	0xE7FA    B	L___Lib_UART_123_45_UARTx_Write0
L___Lib_UART_123_45_UARTx_Write1:
;__Lib_UART_123_45.c, 38 :: 		
0x0896	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x0898	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45.c, 39 :: 		
L_end_UARTx_Write:
0x089A	0xB001    ADD	SP, SP, #4
0x089C	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write
_Sound_Init:
;__Lib_Sound.c, 10 :: 		
; snd_pin start address is: 4 (R1)
; snd_port start address is: 0 (R0)
0x18F4	0xB081    SUB	SP, SP, #4
0x18F6	0xF8CDE000  STR	LR, [SP, #0]
0x18FA	0x4683    MOV	R11, R0
0x18FC	0x468C    MOV	R12, R1
; snd_pin end address is: 4 (R1)
; snd_port end address is: 0 (R0)
; snd_port start address is: 44 (R11)
; snd_pin start address is: 48 (R12)
;__Lib_Sound.c, 14 :: 		
0x18FE	0x2201    MOVS	R2, #1
0x1900	0xB212    SXTH	R2, R2
0x1902	0xFA02F20C  LSL	R2, R2, R12
0x1906	0xB212    SXTH	R2, R2
0x1908	0xB211    SXTH	R1, R2
0x190A	0x4658    MOV	R0, R11
0x190C	0xF7FFFC00  BL	_GPIO_Digital_Output+0
;__Lib_Sound.c, 17 :: 		
0x1910	0x4A0A    LDR	R2, [PC, #40]
0x1912	0xF8C2B000  STR	R11, [R2, #0]
;__Lib_Sound.c, 20 :: 		
0x1916	0xF04F0201  MOV	R2, #1
0x191A	0xFA02F30C  LSL	R3, R2, R12
; snd_pin end address is: 48 (R12)
0x191E	0x4A08    LDR	R2, [PC, #32]
0x1920	0x6013    STR	R3, [R2, #0]
;__Lib_Sound.c, 21 :: 		
0x1922	0x43DB    MVN	R3, R3
0x1924	0x4A07    LDR	R2, [PC, #28]
0x1926	0x6013    STR	R3, [R2, #0]
;__Lib_Sound.c, 26 :: 		
0x1928	0xF8DB2000  LDR	R2, [R11, #0]
0x192C	0x401A    ANDS	R2, R3
0x192E	0xF8CB2000  STR	R2, [R11, #0]
; snd_port end address is: 44 (R11)
;__Lib_Sound.c, 27 :: 		
L_end_Sound_Init:
0x1932	0xF8DDE000  LDR	LR, [SP, #0]
0x1936	0xB001    ADD	SP, SP, #4
0x1938	0x4770    BX	LR
0x193A	0xBF00    NOP
0x193C	0x00982000  	__Lib_Sound_soundPortAddr+0
0x1940	0x009C2000  	__Lib_Sound_pinMask1+0
0x1944	0x00A02000  	__Lib_Sound_pinMask0+0
; end of _Sound_Init
_Sound_Play:
;__Lib_Sound.c, 30 :: 		
; duration_ms start address is: 4 (R1)
; freq_in_hz start address is: 0 (R0)
0x1948	0xB081    SUB	SP, SP, #4
0x194A	0xF8CDE000  STR	LR, [SP, #0]
0x194E	0xB28C    UXTH	R4, R1
0x1950	0xB281    UXTH	R1, R0
; duration_ms end address is: 4 (R1)
; freq_in_hz end address is: 0 (R0)
; freq_in_hz start address is: 4 (R1)
; duration_ms start address is: 16 (R4)
;__Lib_Sound.c, 35 :: 		
0x1952	0xF7FEFC55  BL	_Get_Fosc_kHz+0
0x1956	0xF24032E8  MOVW	R2, #1000
0x195A	0x4342    MULS	R2, R0, R2
;__Lib_Sound.c, 36 :: 		
0x195C	0xFBB2F1F1  UDIV	R1, R2, R1
; freq_in_hz end address is: 4 (R1)
;__Lib_Sound.c, 37 :: 		
0x1960	0x0849    LSRS	R1, R1, #1
; nc start address is: 4 (R1)
;__Lib_Sound.c, 40 :: 		
0x1962	0xF7FEFC4D  BL	_Get_Fosc_kHz+0
0x1966	0xFB04F500  MUL	R5, R4, R0
; duration_ms end address is: 16 (R4)
0x196A	0x004A    LSLS	R2, R1, #1
0x196C	0xFBB5F5F2  UDIV	R5, R5, R2
; per_nc start address is: 20 (R5)
;__Lib_Sound.c, 42 :: 		
0x1970	0x220A    MOVS	R2, #10
0x1972	0xFBB1F1F2  UDIV	R1, R1, R2
; nc start address is: 4 (R1)
; nc end address is: 4 (R1)
; per_nc end address is: 20 (R5)
;__Lib_Sound.c, 45 :: 		
L_Sound_Play0:
; nc start address is: 4 (R1)
; nc end address is: 4 (R1)
; per_nc start address is: 20 (R5)
0x1976	0x2D00    CMP	R5, #0
0x1978	0xD919    BLS	L_Sound_Play1
; nc end address is: 4 (R1)
;__Lib_Sound.c, 47 :: 		
; nc start address is: 4 (R1)
0x197A	0x4C13    LDR	R4, [PC, #76]
0x197C	0x6822    LDR	R2, [R4, #0]
0x197E	0x6813    LDR	R3, [R2, #0]
0x1980	0x4A12    LDR	R2, [PC, #72]
0x1982	0x6812    LDR	R2, [R2, #0]
0x1984	0x4313    ORRS	R3, R2
0x1986	0x4622    MOV	R2, R4
0x1988	0x6812    LDR	R2, [R2, #0]
0x198A	0x6013    STR	R3, [R2, #0]
;__Lib_Sound.c, 48 :: 		
0x198C	0x4608    MOV	R0, R1
0x198E	0xF7FFFBA7  BL	_Delay_Cyc+0
;__Lib_Sound.c, 51 :: 		
0x1992	0x4C0D    LDR	R4, [PC, #52]
0x1994	0x6822    LDR	R2, [R4, #0]
0x1996	0x6813    LDR	R3, [R2, #0]
0x1998	0x4A0D    LDR	R2, [PC, #52]
0x199A	0x6812    LDR	R2, [R2, #0]
0x199C	0x4013    ANDS	R3, R2
0x199E	0x4622    MOV	R2, R4
0x19A0	0x6812    LDR	R2, [R2, #0]
0x19A2	0x6013    STR	R3, [R2, #0]
;__Lib_Sound.c, 52 :: 		
0x19A4	0x4608    MOV	R0, R1
0x19A6	0xF7FFFB9B  BL	_Delay_Cyc+0
;__Lib_Sound.c, 53 :: 		
0x19AA	0x1E6D    SUBS	R5, R5, #1
;__Lib_Sound.c, 54 :: 		
; nc end address is: 4 (R1)
; per_nc end address is: 20 (R5)
0x19AC	0xE7E3    B	L_Sound_Play0
L_Sound_Play1:
;__Lib_Sound.c, 55 :: 		
0x19AE	0x4C06    LDR	R4, [PC, #24]
0x19B0	0x6822    LDR	R2, [R4, #0]
0x19B2	0x6813    LDR	R3, [R2, #0]
0x19B4	0x4A06    LDR	R2, [PC, #24]
0x19B6	0x6812    LDR	R2, [R2, #0]
0x19B8	0x4013    ANDS	R3, R2
0x19BA	0x4622    MOV	R2, R4
0x19BC	0x6812    LDR	R2, [R2, #0]
0x19BE	0x6013    STR	R3, [R2, #0]
;__Lib_Sound.c, 56 :: 		
L_end_Sound_Play:
0x19C0	0xF8DDE000  LDR	LR, [SP, #0]
0x19C4	0xB001    ADD	SP, SP, #4
0x19C6	0x4770    BX	LR
0x19C8	0x00982000  	__Lib_Sound_soundPortAddr+0
0x19CC	0x009C2000  	__Lib_Sound_pinMask1+0
0x19D0	0x00A02000  	__Lib_Sound_pinMask0+0
; end of _Sound_Play
_Delay_Cyc:
;__Lib_Delays.c, 66 :: 		void Delay_Cyc(unsigned long cycles_div_by_10){  // Cycles_div_by_10 parameter range: min = 1, max = 4294967295
;__Lib_Delays.c, 68 :: 		asm nop;
0x10E0	0xBF00    NOP
;__Lib_Delays.c, 71 :: 		nop.w
0x10E2	0xF3AF8000  NOP
;__Lib_Delays.c, 72 :: 		subs R0,R0,#1
0x10E6	0x1E40    SUBS	R0, R0, #1
;__Lib_Delays.c, 73 :: 		label1:
label1:
;__Lib_Delays.c, 74 :: 		subs R0,R0,#1
0x10E8	0x1E40    SUBS	R0, R0, #1
;__Lib_Delays.c, 75 :: 		nop
0x10EA	0xBF00    NOP
;__Lib_Delays.c, 76 :: 		nop
0x10EC	0xBF00    NOP
;__Lib_Delays.c, 77 :: 		nop
0x10EE	0xBF00    NOP
;__Lib_Delays.c, 78 :: 		nop
0x10F0	0xBF00    NOP
;__Lib_Delays.c, 79 :: 		nop
0x10F2	0xBF00    NOP
;__Lib_Delays.c, 80 :: 		nop
;__Lib_Delays.c, 81 :: 		nop
;__Lib_Delays.c, 82 :: 		bne label1
0x10F4	0xD1F8    BNE	label1
;__Lib_Delays.c, 84 :: 		}
L_end_Delay_Cyc:
0x10F6	0x4770    BX	LR
; end of _Delay_Cyc
_rfInit:
;RF4463PRO.c, 495 :: 		void rfInit()
0x1898	0xB085    SUB	SP, SP, #20
0x189A	0xF8CDE000  STR	LR, [SP, #0]
;RF4463PRO.c, 497 :: 		vRf4463PowerOnReset();
0x189E	0xF7FFFBCB  BL	_vRf4463PowerOnReset+0
;RF4463PRO.c, 498 :: 		if( ucRf4463DeviceAvailability() == SUCCESS )
0x18A2	0xF7FFFB7D  BL	_ucRf4463DeviceAvailability+0
0x18A6	0xB950    CBNZ	R0, L_rfInit2
;RF4463PRO.c, 500 :: 		UART1_Write_Text("Radio On!!!\n\r");
0x18A8	0xF10D0B04  ADD	R11, SP, #4
0x18AC	0xF10B0A0E  ADD	R10, R11, #14
0x18B0	0xF8DFC020  LDR	R12, [PC, #32]
0x18B4	0xF000F900  BL	___CC2DW+0
0x18B8	0xA801    ADD	R0, SP, #4
0x18BA	0xF000F80D  BL	_UART1_Write_Text+0
;RF4463PRO.c, 501 :: 		}
L_rfInit2:
;RF4463PRO.c, 502 :: 		UART1_Write(get_battery_voltage());
0x18BE	0xF7FFF9BB  BL	_get_battery_voltage+0
0x18C2	0xF7FFFB3B  BL	__FloatToUnsignedIntegral+0
0x18C6	0xB280    UXTH	R0, R0
0x18C8	0xF7FFFB5C  BL	_UART1_Write+0
;RF4463PRO.c, 503 :: 		}
L_end_rfInit:
0x18CC	0xF8DDE000  LDR	LR, [SP, #0]
0x18D0	0xB005    ADD	SP, SP, #20
0x18D2	0x4770    BX	LR
0x18D4	0x26980000  	?ICS?lstr2_RF4463PRO+0
; end of _rfInit
_vRf4463PowerOnReset:
;RF4463PRO.c, 824 :: 		void vRf4463PowerOnReset(){
0x1038	0xB089    SUB	SP, SP, #36
0x103A	0xF8CDE000  STR	LR, [SP, #0]
;RF4463PRO.c, 837 :: 		uint8_t pcBuffer[ 7 ] = { RF_POWER_UP };
0x103E	0x2002    MOVS	R0, #2
0x1040	0xF88D001B  STRB	R0, [SP, #27]
0x1044	0x2001    MOVS	R0, #1
0x1046	0xF88D001C  STRB	R0, [SP, #28]
0x104A	0x2000    MOVS	R0, #0
0x104C	0xF88D001D  STRB	R0, [SP, #29]
0x1050	0x2001    MOVS	R0, #1
0x1052	0xF88D001E  STRB	R0, [SP, #30]
0x1056	0x20C9    MOVS	R0, #201
0x1058	0xF88D001F  STRB	R0, [SP, #31]
0x105C	0x20C3    MOVS	R0, #195
0x105E	0xF88D0020  STRB	R0, [SP, #32]
0x1062	0x2080    MOVS	R0, #128
0x1064	0xF88D0021  STRB	R0, [SP, #33]
;RF4463PRO.c, 839 :: 		vRF4463SetPinSDN( PIN_LEVEL_HIGH );
0x1068	0x2001    MOVS	R0, #1
0x106A	0xF7FFFAFF  BL	_vRF4463SetPinSDN+0
;RF4463PRO.c, 840 :: 		Delay_us( 16 );
0x106E	0xF24007BF  MOVW	R7, #191
0x1072	0xF2C00700  MOVT	R7, #0
0x1076	0xBF00    NOP
0x1078	0xBF00    NOP
L_vRf4463PowerOnReset90:
0x107A	0x1E7F    SUBS	R7, R7, #1
0x107C	0xD1FD    BNE	L_vRf4463PowerOnReset90
0x107E	0xBF00    NOP
0x1080	0xBF00    NOP
0x1082	0xBF00    NOP
;RF4463PRO.c, 841 :: 		vRF4463SetPinSDN( PIN_LEVEL_LOW );
0x1084	0x2000    MOVS	R0, #0
0x1086	0xF7FFFAF1  BL	_vRF4463SetPinSDN+0
;RF4463PRO.c, 843 :: 		Delay_ms( 6 );
0x108A	0xF641173F  MOVW	R7, #6463
0x108E	0xF2C00701  MOVT	R7, #1
L_vRf4463PowerOnReset92:
0x1092	0x1E7F    SUBS	R7, R7, #1
0x1094	0xD1FD    BNE	L_vRf4463PowerOnReset92
0x1096	0xBF00    NOP
0x1098	0xBF00    NOP
0x109A	0xBF00    NOP
0x109C	0xBF00    NOP
0x109E	0xBF00    NOP
;RF4463PRO.c, 845 :: 		vRF4463SetPinSelect( PIN_LEVEL_LOW );
0x10A0	0x2000    MOVS	R0, #0
0x10A2	0xF7FFFAE9  BL	_vRF4463SetPinSelect+0
;RF4463PRO.c, 846 :: 		vRf4463SPIWriteBuffer( sizeof( pcBuffer ), pcBuffer );
0x10A6	0xF10D001B  ADD	R0, SP, #27
0x10AA	0x4601    MOV	R1, R0
0x10AC	0x2007    MOVS	R0, #7
0x10AE	0xF7FFFAA7  BL	_vRf4463SPIWriteBuffer+0
;RF4463PRO.c, 847 :: 		vRF4463SetPinSelect( PIN_LEVEL_HIGH );
0x10B2	0x2001    MOVS	R0, #1
0x10B4	0xF7FFFAE0  BL	_vRF4463SetPinSelect+0
;RF4463PRO.c, 848 :: 		UART1_Write_Text("Power On Reset Apply\n\r");
0x10B8	0xF10D0B04  ADD	R11, SP, #4
0x10BC	0xF10B0A17  ADD	R10, R11, #23
0x10C0	0xF8DFC014  LDR	R12, [PC, #20]
0x10C4	0xF000FCF8  BL	___CC2DW+0
0x10C8	0xA801    ADD	R0, SP, #4
0x10CA	0xF000FC05  BL	_UART1_Write_Text+0
;RF4463PRO.c, 849 :: 		}
L_end_vRf4463PowerOnReset:
0x10CE	0xF8DDE000  LDR	LR, [SP, #0]
0x10D2	0xB009    ADD	SP, SP, #36
0x10D4	0x4770    BX	LR
0x10D6	0xBF00    NOP
0x10D8	0x26460000  	?ICS?lstr3_RF4463PRO+0
; end of _vRf4463PowerOnReset
_vRF4463SetPinSDN:
;RF4463PRO.c, 897 :: 		void vRF4463SetPinSDN( uint8_t ucPinVal ){
; ucPinVal start address is: 0 (R0)
; ucPinVal end address is: 0 (R0)
; ucPinVal start address is: 0 (R0)
;RF4463PRO.c, 898 :: 		RF4463nSDN = ucPinVal;
0x066C	0x4901    LDR	R1, [PC, #4]
0x066E	0x6008    STR	R0, [R1, #0]
; ucPinVal end address is: 0 (R0)
;RF4463PRO.c, 899 :: 		}
L_end_vRF4463SetPinSDN:
0x0670	0x4770    BX	LR
0x0672	0xBF00    NOP
0x0674	0x81AC4221  	GPIOB_ODR+0
; end of _vRF4463SetPinSDN
_vRF4463SetPinSelect:
;RF4463PRO.c, 907 :: 		void vRF4463SetPinSelect( uint8_t ucPinVal ){
; ucPinVal start address is: 0 (R0)
; ucPinVal end address is: 0 (R0)
; ucPinVal start address is: 0 (R0)
;RF4463PRO.c, 908 :: 		RF4463nSEL = ucPinVal;
0x0678	0x4901    LDR	R1, [PC, #4]
0x067A	0x6008    STR	R0, [R1, #0]
; ucPinVal end address is: 0 (R0)
;RF4463PRO.c, 909 :: 		}
L_end_vRF4463SetPinSelect:
0x067C	0x4770    BX	LR
0x067E	0xBF00    NOP
0x0680	0x81B04221  	GPIOB_ODR+0
; end of _vRF4463SetPinSelect
_vRf4463SPIWriteBuffer:
;RF4463PRO.c, 856 :: 		void vRf4463SPIWriteBuffer( uint16_t usWriteLength, uint8_t * pcWriteBuffer ){
; pcWriteBuffer start address is: 4 (R1)
; usWriteLength start address is: 0 (R0)
0x0600	0xB081    SUB	SP, SP, #4
0x0602	0xF8CDE000  STR	LR, [SP, #0]
; pcWriteBuffer end address is: 4 (R1)
; usWriteLength end address is: 0 (R0)
; usWriteLength start address is: 0 (R0)
; pcWriteBuffer start address is: 4 (R1)
; pcWriteBuffer end address is: 4 (R1)
; usWriteLength end address is: 0 (R0)
0x0606	0x460D    MOV	R5, R1
;RF4463PRO.c, 860 :: 		while( usWriteLength-- ){
L_vRf4463SPIWriteBuffer94:
; pcWriteBuffer start address is: 20 (R5)
; usWriteLength start address is: 16 (R4)
; usWriteLength start address is: 0 (R0)
0x0608	0xB283    UXTH	R3, R0
0x060A	0x1E42    SUBS	R2, R0, #1
; usWriteLength end address is: 0 (R0)
; usWriteLength start address is: 16 (R4)
0x060C	0xB294    UXTH	R4, R2
; usWriteLength end address is: 16 (R4)
0x060E	0xB133    CBZ	R3, L_vRf4463SPIWriteBuffer95
; usWriteLength end address is: 16 (R4)
;RF4463PRO.c, 861 :: 		ucRf4463SPIByte( *pcWriteBuffer++ );
; usWriteLength start address is: 16 (R4)
0x0610	0x782A    LDRB	R2, [R5, #0]
0x0612	0xB2D0    UXTB	R0, R2
0x0614	0xF7FFFF34  BL	_ucRf4463SPIByte+0
0x0618	0x1C6D    ADDS	R5, R5, #1
;RF4463PRO.c, 862 :: 		}
0x061A	0xB2A0    UXTH	R0, R4
; usWriteLength end address is: 16 (R4)
; pcWriteBuffer end address is: 20 (R5)
0x061C	0xE7F4    B	L_vRf4463SPIWriteBuffer94
L_vRf4463SPIWriteBuffer95:
;RF4463PRO.c, 863 :: 		}
L_end_vRf4463SPIWriteBuffer:
0x061E	0xF8DDE000  LDR	LR, [SP, #0]
0x0622	0xB001    ADD	SP, SP, #4
0x0624	0x4770    BX	LR
; end of _vRf4463SPIWriteBuffer
_ucRf4463SPIByte:
;RF4463PRO.c, 887 :: 		uint8_t ucRf4463SPIByte( uint8_t pcWriteData ){
; pcWriteData start address is: 0 (R0)
0x0480	0xB081    SUB	SP, SP, #4
0x0482	0xF8CDE000  STR	LR, [SP, #0]
; pcWriteData end address is: 0 (R0)
; pcWriteData start address is: 0 (R0)
;RF4463PRO.c, 888 :: 		return SPI2_Read( pcWriteData );
; pcWriteData end address is: 0 (R0)
0x0486	0xF7FFFFBB  BL	_SPI2_Read+0
0x048A	0xB2C0    UXTB	R0, R0
;RF4463PRO.c, 889 :: 		}
L_end_ucRf4463SPIByte:
0x048C	0xF8DDE000  LDR	LR, [SP, #0]
0x0490	0xB001    ADD	SP, SP, #4
0x0492	0x4770    BX	LR
; end of _ucRf4463SPIByte
_SPI2_Read:
;__Lib_SPI_123.c, 99 :: 		
; data_out start address is: 0 (R0)
0x0400	0xB081    SUB	SP, SP, #4
0x0402	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 100 :: 		
0x0406	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x0408	0x4803    LDR	R0, [PC, #12]
0x040A	0xF7FFFEE7  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 101 :: 		
L_end_SPI2_Read:
0x040E	0xF8DDE000  LDR	LR, [SP, #0]
0x0412	0xB001    ADD	SP, SP, #4
0x0414	0x4770    BX	LR
0x0416	0xBF00    NOP
0x0418	0x38004000  	SPI2_CR1+0
; end of _SPI2_Read
__Lib_SPI_123_SPIx_Read:
;__Lib_SPI_123.c, 67 :: 		
; data_out start address is: 4 (R1)
; base start address is: 0 (R0)
0x01DC	0xB081    SUB	SP, SP, #4
; data_out end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; data_out start address is: 4 (R1)
;__Lib_SPI_123.c, 68 :: 		
0x01DE	0xF200020C  ADDW	R2, R0, #12
0x01E2	0x6011    STR	R1, [R2, #0]
; data_out end address is: 4 (R1)
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 69 :: 		
L___Lib_SPI_123_SPIx_Read0:
; base start address is: 0 (R0)
0x01E4	0xF2000208  ADDW	R2, R0, #8
0x01E8	0x6813    LDR	R3, [R2, #0]
0x01EA	0xF3C30200  UBFX	R2, R3, #0, #1
0x01EE	0xB902    CBNZ	R2, L___Lib_SPI_123_SPIx_Read1
;__Lib_SPI_123.c, 70 :: 		
0x01F0	0xE7F8    B	L___Lib_SPI_123_SPIx_Read0
L___Lib_SPI_123_SPIx_Read1:
;__Lib_SPI_123.c, 71 :: 		
0x01F2	0xF200020C  ADDW	R2, R0, #12
; base end address is: 0 (R0)
0x01F6	0x6812    LDR	R2, [R2, #0]
0x01F8	0xB290    UXTH	R0, R2
;__Lib_SPI_123.c, 72 :: 		
L_end_SPIx_Read:
0x01FA	0xB001    ADD	SP, SP, #4
0x01FC	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Read
_ucRf4463DeviceAvailability:
;RF4463PRO.c, 917 :: 		uint8_t ucRf4463DeviceAvailability(){
0x0FA0	0xB089    SUB	SP, SP, #36
0x0FA2	0xF8CDE000  STR	LR, [SP, #0]
;RF4463PRO.c, 937 :: 		if( ucRf4463GetCommand( 9, RF4463_CMD_PART_INFO, pcBuffer ) == NOT_SUCCESS ){
0x0FA6	0xA801    ADD	R0, SP, #4
0x0FA8	0x4602    MOV	R2, R0
0x0FAA	0x2101    MOVS	R1, #1
0x0FAC	0x2009    MOVS	R0, #9
0x0FAE	0xF7FFFBDB  BL	_ucRf4463GetCommand+0
0x0FB2	0x2801    CMP	R0, #1
0x0FB4	0xD10D    BNE	L_ucRf4463DeviceAvailability98
;RF4463PRO.c, 938 :: 		UART1_Write_Text("Not Found Radio Data\n\r");
0x0FB6	0xF10D0B0D  ADD	R11, SP, #13
0x0FBA	0xF10B0A17  ADD	R10, R11, #23
0x0FBE	0xF8DFC03C  LDR	R12, [PC, #60]
0x0FC2	0xF000FD79  BL	___CC2DW+0
0x0FC6	0xF10D000D  ADD	R0, SP, #13
0x0FCA	0xF000FC85  BL	_UART1_Write_Text+0
;RF4463PRO.c, 939 :: 		return NOT_SUCCESS;
0x0FCE	0x2001    MOVS	R0, #1
0x0FD0	0xE00F    B	L_end_ucRf4463DeviceAvailability
;RF4463PRO.c, 940 :: 		}
L_ucRf4463DeviceAvailability98:
;RF4463PRO.c, 958 :: 		usPartInformation = ( ( pcBuffer[ 2 ] << 8 ) | pcBuffer[ 3 ] );
0x0FD2	0xAA01    ADD	R2, SP, #4
0x0FD4	0x1C90    ADDS	R0, R2, #2
0x0FD6	0x7800    LDRB	R0, [R0, #0]
0x0FD8	0x0201    LSLS	R1, R0, #8
0x0FDA	0xB289    UXTH	R1, R1
0x0FDC	0x1CD0    ADDS	R0, R2, #3
0x0FDE	0x7800    LDRB	R0, [R0, #0]
0x0FE0	0x4301    ORRS	R1, R0
0x0FE2	0xB289    UXTH	R1, R1
;RF4463PRO.c, 960 :: 		if( usPartInformation != 0x4463 ){
0x0FE4	0xF2444063  MOVW	R0, #17507
0x0FE8	0x4281    CMP	R1, R0
0x0FEA	0xD001    BEQ	L_ucRf4463DeviceAvailability99
;RF4463PRO.c, 961 :: 		return NOT_SUCCESS;
0x0FEC	0x2001    MOVS	R0, #1
0x0FEE	0xE000    B	L_end_ucRf4463DeviceAvailability
;RF4463PRO.c, 962 :: 		}
L_ucRf4463DeviceAvailability99:
;RF4463PRO.c, 964 :: 		return SUCCESS;
0x0FF0	0x2000    MOVS	R0, #0
;RF4463PRO.c, 965 :: 		}
L_end_ucRf4463DeviceAvailability:
0x0FF2	0xF8DDE000  LDR	LR, [SP, #0]
0x0FF6	0xB009    ADD	SP, SP, #36
0x0FF8	0x4770    BX	LR
0x0FFA	0xBF00    NOP
0x0FFC	0x265D0000  	?ICS?lstr4_RF4463PRO+0
; end of _ucRf4463DeviceAvailability
_ucRf4463GetCommand:
;RF4463PRO.c, 973 :: 		uint8_t ucRf4463GetCommand( uint8_t ucLength, uint8_t ucCommand, uint8_t * pcParametersBuffer ){
; ucCommand start address is: 4 (R1)
; ucLength start address is: 0 (R0)
0x0768	0xB082    SUB	SP, SP, #8
0x076A	0xF8CDE000  STR	LR, [SP, #0]
0x076E	0xB2C7    UXTB	R7, R0
0x0770	0xFA5FF881  UXTB	R8, R1
0x0774	0x9201    STR	R2, [SP, #4]
; ucCommand end address is: 4 (R1)
; ucLength end address is: 0 (R0)
; ucLength start address is: 28 (R7)
; ucCommand start address is: 32 (R8)
;RF4463PRO.c, 974 :: 		if( ucRf4463CheckCTS() == NOT_SUCCESS ){
0x0776	0xF7FFFE51  BL	_ucRf4463CheckCTS+0
0x077A	0x2801    CMP	R0, #1
0x077C	0xD101    BNE	L_ucRf4463GetCommand100
; ucLength end address is: 28 (R7)
; ucCommand end address is: 32 (R8)
;RF4463PRO.c, 975 :: 		return NOT_SUCCESS;
0x077E	0x2001    MOVS	R0, #1
0x0780	0xE01D    B	L_end_ucRf4463GetCommand
;RF4463PRO.c, 976 :: 		}
L_ucRf4463GetCommand100:
;RF4463PRO.c, 978 :: 		vRF4463SetPinSelect( PIN_LEVEL_LOW );
; ucCommand start address is: 32 (R8)
; ucLength start address is: 28 (R7)
0x0782	0x2000    MOVS	R0, #0
0x0784	0xF7FFFF78  BL	_vRF4463SetPinSelect+0
;RF4463PRO.c, 979 :: 		ucRf4463SPIByte( ucCommand );
0x0788	0xFA5FF088  UXTB	R0, R8
; ucCommand end address is: 32 (R8)
0x078C	0xF7FFFE78  BL	_ucRf4463SPIByte+0
;RF4463PRO.c, 980 :: 		vRF4463SetPinSelect( PIN_LEVEL_HIGH );
0x0790	0x2001    MOVS	R0, #1
0x0792	0xF7FFFF71  BL	_vRF4463SetPinSelect+0
;RF4463PRO.c, 982 :: 		if( ucRf4463CheckCTS() == NOT_SUCCESS ){
0x0796	0xF7FFFE41  BL	_ucRf4463CheckCTS+0
0x079A	0x2801    CMP	R0, #1
0x079C	0xD101    BNE	L_ucRf4463GetCommand101
; ucLength end address is: 28 (R7)
;RF4463PRO.c, 983 :: 		return NOT_SUCCESS;
0x079E	0x2001    MOVS	R0, #1
0x07A0	0xE00D    B	L_end_ucRf4463GetCommand
;RF4463PRO.c, 984 :: 		}
L_ucRf4463GetCommand101:
;RF4463PRO.c, 986 :: 		vRF4463SetPinSelect( PIN_LEVEL_LOW );
; ucLength start address is: 28 (R7)
0x07A2	0x2000    MOVS	R0, #0
0x07A4	0xF7FFFF68  BL	_vRF4463SetPinSelect+0
;RF4463PRO.c, 987 :: 		ucRf4463SPIByte( RF4463_CMD_READ_BUF );
0x07A8	0x2044    MOVS	R0, #68
0x07AA	0xF7FFFE69  BL	_ucRf4463SPIByte+0
;RF4463PRO.c, 988 :: 		vRf4463SPIReadBuffer( ucLength, pcParametersBuffer );
0x07AE	0x9901    LDR	R1, [SP, #4]
0x07B0	0xB2F8    UXTB	R0, R7
; ucLength end address is: 28 (R7)
0x07B2	0xF7FFFEC3  BL	_vRf4463SPIReadBuffer+0
;RF4463PRO.c, 989 :: 		vRF4463SetPinSelect( PIN_LEVEL_HIGH );
0x07B6	0x2001    MOVS	R0, #1
0x07B8	0xF7FFFF5E  BL	_vRF4463SetPinSelect+0
;RF4463PRO.c, 991 :: 		return SUCCESS;
0x07BC	0x2000    MOVS	R0, #0
;RF4463PRO.c, 992 :: 		}
L_end_ucRf4463GetCommand:
0x07BE	0xF8DDE000  LDR	LR, [SP, #0]
0x07C2	0xB002    ADD	SP, SP, #8
0x07C4	0x4770    BX	LR
; end of _ucRf4463GetCommand
_ucRf4463CheckCTS:
;RF4463PRO.c, 1000 :: 		uint8_t ucRf4463CheckCTS(){
0x041C	0xB087    SUB	SP, SP, #28
0x041E	0xF8CDE000  STR	LR, [SP, #0]
;RF4463PRO.c, 1001 :: 		uint16_t usTimeoutCounter = 0;
;RF4463PRO.c, 1003 :: 		usTimeoutCounter = RF4463_CTS_TIMEOUT;
; usTimeoutCounter start address is: 8 (R2)
0x0422	0xF64012C4  MOVW	R2, #2500
; usTimeoutCounter end address is: 8 (R2)
;RF4463PRO.c, 1006 :: 		while( usTimeoutCounter-- ){
L_ucRf4463CheckCTS102:
; usTimeoutCounter start address is: 16 (R4)
; usTimeoutCounter start address is: 8 (R2)
0x0426	0xB291    UXTH	R1, R2
0x0428	0x1E50    SUBS	R0, R2, #1
; usTimeoutCounter end address is: 8 (R2)
; usTimeoutCounter start address is: 16 (R4)
0x042A	0xB284    UXTH	R4, R0
; usTimeoutCounter end address is: 16 (R4)
0x042C	0xB1A9    CBZ	R1, L_ucRf4463CheckCTS103
; usTimeoutCounter end address is: 16 (R4)
;RF4463PRO.c, 1007 :: 		vRF4463SetPinSelect( PIN_LEVEL_LOW );
; usTimeoutCounter start address is: 16 (R4)
0x042E	0x2000    MOVS	R0, #0
0x0430	0xF000F922  BL	_vRF4463SetPinSelect+0
;RF4463PRO.c, 1008 :: 		ucRf4463SPIByte( RF4463_CMD_READ_BUF );
0x0434	0x2044    MOVS	R0, #68
0x0436	0xF000F823  BL	_ucRf4463SPIByte+0
;RF4463PRO.c, 1009 :: 		if( ucRf4463SPIByte( RF4463_CMD_READ_BUF ) == RF4463_CTS_REPLY ){
0x043A	0x2044    MOVS	R0, #68
0x043C	0xF000F820  BL	_ucRf4463SPIByte+0
0x0440	0xF1B00FFF  CMP	R0, #255
0x0444	0xD104    BNE	L_ucRf4463CheckCTS104
; usTimeoutCounter end address is: 16 (R4)
;RF4463PRO.c, 1011 :: 		vRF4463SetPinSelect( PIN_LEVEL_HIGH );
0x0446	0x2001    MOVS	R0, #1
0x0448	0xF000F916  BL	_vRF4463SetPinSelect+0
;RF4463PRO.c, 1012 :: 		return SUCCESS;
0x044C	0x2000    MOVS	R0, #0
0x044E	0xE010    B	L_end_ucRf4463CheckCTS
;RF4463PRO.c, 1013 :: 		}
L_ucRf4463CheckCTS104:
;RF4463PRO.c, 1014 :: 		vRF4463SetPinSelect( PIN_LEVEL_HIGH );
; usTimeoutCounter start address is: 16 (R4)
0x0450	0x2001    MOVS	R0, #1
0x0452	0xF000F911  BL	_vRF4463SetPinSelect+0
;RF4463PRO.c, 1015 :: 		}
0x0456	0xB2A2    UXTH	R2, R4
; usTimeoutCounter end address is: 16 (R4)
0x0458	0xE7E5    B	L_ucRf4463CheckCTS102
L_ucRf4463CheckCTS103:
;RF4463PRO.c, 1016 :: 		UART1_Write_Text( "[ RF4463 ] CTS failed\r\n" );
0x045A	0xF10D0B04  ADD	R11, SP, #4
0x045E	0xF10B0A18  ADD	R10, R11, #24
0x0462	0xF8DFC018  LDR	R12, [PC, #24]
0x0466	0xF001FB27  BL	___CC2DW+0
0x046A	0xA801    ADD	R0, SP, #4
0x046C	0xF001FA34  BL	_UART1_Write_Text+0
;RF4463PRO.c, 1017 :: 		return NOT_SUCCESS;
0x0470	0x2001    MOVS	R0, #1
;RF4463PRO.c, 1018 :: 		}
L_end_ucRf4463CheckCTS:
0x0472	0xF8DDE000  LDR	LR, [SP, #0]
0x0476	0xB007    ADD	SP, SP, #28
0x0478	0x4770    BX	LR
0x047A	0xBF00    NOP
0x047C	0x262E0000  	?ICS?lstr5_RF4463PRO+0
; end of _ucRf4463CheckCTS
_vRf4463SPIReadBuffer:
;RF4463PRO.c, 871 :: 		void vRf4463SPIReadBuffer( uint16_t usReadLength, uint8_t * pcReadBuffer ){
; pcReadBuffer start address is: 4 (R1)
; usReadLength start address is: 0 (R0)
0x053C	0xB082    SUB	SP, SP, #8
0x053E	0xF8CDE000  STR	LR, [SP, #0]
; pcReadBuffer end address is: 4 (R1)
; usReadLength end address is: 0 (R0)
; usReadLength start address is: 0 (R0)
; pcReadBuffer start address is: 4 (R1)
;RF4463PRO.c, 872 :: 		uint8_t ucRxCounter = 0;
; ucRxCounter start address is: 20 (R5)
0x0542	0x2500    MOVS	R5, #0
; pcReadBuffer end address is: 4 (R1)
; usReadLength end address is: 0 (R0)
; ucRxCounter end address is: 20 (R5)
0x0544	0x460C    MOV	R4, R1
;RF4463PRO.c, 876 :: 		while( usReadLength-- ){
L_vRf4463SPIReadBuffer96:
; ucRxCounter start address is: 20 (R5)
; usReadLength start address is: 24 (R6)
; pcReadBuffer start address is: 16 (R4)
; pcReadBuffer start address is: 16 (R4)
; pcReadBuffer end address is: 16 (R4)
; usReadLength start address is: 0 (R0)
0x0546	0xB283    UXTH	R3, R0
0x0548	0x1E42    SUBS	R2, R0, #1
; usReadLength end address is: 0 (R0)
; usReadLength start address is: 24 (R6)
0x054A	0xB296    UXTH	R6, R2
; usReadLength end address is: 24 (R6)
0x054C	0xB153    CBZ	R3, L_vRf4463SPIReadBuffer97
; pcReadBuffer end address is: 16 (R4)
; usReadLength end address is: 24 (R6)
;RF4463PRO.c, 877 :: 		pcReadBuffer[ ucRxCounter++ ] = ucRf4463SPIByte( 0 );
; usReadLength start address is: 24 (R6)
; pcReadBuffer start address is: 16 (R4)
0x054E	0x1962    ADDS	R2, R4, R5
0x0550	0x9201    STR	R2, [SP, #4]
0x0552	0x2000    MOVS	R0, #0
0x0554	0xF7FFFF94  BL	_ucRf4463SPIByte+0
0x0558	0x9A01    LDR	R2, [SP, #4]
0x055A	0x7010    STRB	R0, [R2, #0]
0x055C	0x1C6D    ADDS	R5, R5, #1
0x055E	0xB2ED    UXTB	R5, R5
;RF4463PRO.c, 878 :: 		}
0x0560	0xB2B0    UXTH	R0, R6
; pcReadBuffer end address is: 16 (R4)
; usReadLength end address is: 24 (R6)
; ucRxCounter end address is: 20 (R5)
0x0562	0xE7F0    B	L_vRf4463SPIReadBuffer96
L_vRf4463SPIReadBuffer97:
;RF4463PRO.c, 879 :: 		}
L_end_vRf4463SPIReadBuffer:
0x0564	0xF8DDE000  LDR	LR, [SP, #0]
0x0568	0xB002    ADD	SP, SP, #8
0x056A	0x4770    BX	LR
; end of _vRf4463SPIReadBuffer
_get_battery_voltage:
;RF4463PRO.c, 1183 :: 		float get_battery_voltage()
0x0C38	0xB083    SUB	SP, SP, #12
0x0C3A	0xF8CDE000  STR	LR, [SP, #0]
;RF4463PRO.c, 1185 :: 		uint8_t write_buf[] = { 0x08 };
;RF4463PRO.c, 1189 :: 		ucRf4463SetCommand( 8, RF4463_CMD_GET_ADC_READING, read_buf );
0x0C3E	0xA801    ADD	R0, SP, #4
0x0C40	0x4602    MOV	R2, R0
0x0C42	0x2114    MOVS	R1, #20
0x0C44	0x2008    MOVS	R0, #8
0x0C46	0xF7FFFD6F  BL	_ucRf4463SetCommand+0
;RF4463PRO.c, 1190 :: 		battery_adc = (read_buf[2] << 8) | read_buf[3];
0x0C4A	0xAA01    ADD	R2, SP, #4
0x0C4C	0x1C90    ADDS	R0, R2, #2
0x0C4E	0x7800    LDRB	R0, [R0, #0]
0x0C50	0x0201    LSLS	R1, R0, #8
0x0C52	0xB289    UXTH	R1, R1
0x0C54	0x1CD0    ADDS	R0, R2, #3
0x0C56	0x7800    LDRB	R0, [R0, #0]
0x0C58	0xEA410000  ORR	R0, R1, R0, LSL #0
0x0C5C	0xB280    UXTH	R0, R0
;RF4463PRO.c, 1191 :: 		return 3.0 * battery_adc / 1280;
0x0C5E	0xF7FFFDF9  BL	__UnsignedIntegralToFloat+0
0x0C62	0x4A05    LDR	R2, [PC, #20]
0x0C64	0xF7FFFDB0  BL	__Mul_FP+0
0x0C68	0x4A04    LDR	R2, [PC, #16]
0x0C6A	0xF7FFFD0B  BL	__Div_FP+0
;RF4463PRO.c, 1192 :: 		}
L_end_get_battery_voltage:
0x0C6E	0xF8DDE000  LDR	LR, [SP, #0]
0x0C72	0xB003    ADD	SP, SP, #12
0x0C74	0x4770    BX	LR
0x0C76	0xBF00    NOP
0x0C78	0x00004040  	#1077936128
0x0C7C	0x000044A0  	#1151336448
; end of _get_battery_voltage
_ucRf4463SetCommand:
;RF4463PRO.c, 1159 :: 		uint8_t ucRf4463SetCommand( uint8_t ucLength, uint8_t ucCommand, uint8_t * pcParametersBuffer ){
; ucCommand start address is: 4 (R1)
; ucLength start address is: 0 (R0)
0x0728	0xB082    SUB	SP, SP, #8
0x072A	0xF8CDE000  STR	LR, [SP, #0]
0x072E	0xB2C7    UXTB	R7, R0
0x0730	0xFA5FF881  UXTB	R8, R1
0x0734	0x9201    STR	R2, [SP, #4]
; ucCommand end address is: 4 (R1)
; ucLength end address is: 0 (R0)
; ucLength start address is: 28 (R7)
; ucCommand start address is: 32 (R8)
;RF4463PRO.c, 1160 :: 		if( ucRf4463CheckCTS() == NOT_SUCCESS ){
0x0736	0xF7FFFE71  BL	_ucRf4463CheckCTS+0
0x073A	0x2801    CMP	R0, #1
0x073C	0xD101    BNE	L_ucRf4463SetCommand122
; ucLength end address is: 28 (R7)
; ucCommand end address is: 32 (R8)
;RF4463PRO.c, 1161 :: 		return NOT_SUCCESS;
0x073E	0x2001    MOVS	R0, #1
0x0740	0xE00E    B	L_end_ucRf4463SetCommand
;RF4463PRO.c, 1162 :: 		}
L_ucRf4463SetCommand122:
;RF4463PRO.c, 1164 :: 		vRF4463SetPinSelect( PIN_LEVEL_LOW );
; ucCommand start address is: 32 (R8)
; ucLength start address is: 28 (R7)
0x0742	0x2000    MOVS	R0, #0
0x0744	0xF7FFFF98  BL	_vRF4463SetPinSelect+0
;RF4463PRO.c, 1165 :: 		ucRf4463SPIByte( ucCommand );
0x0748	0xFA5FF088  UXTB	R0, R8
; ucCommand end address is: 32 (R8)
0x074C	0xF7FFFE98  BL	_ucRf4463SPIByte+0
;RF4463PRO.c, 1166 :: 		vRf4463SPIWriteBuffer( ucLength, pcParametersBuffer );
0x0750	0x9901    LDR	R1, [SP, #4]
0x0752	0xB2F8    UXTB	R0, R7
; ucLength end address is: 28 (R7)
0x0754	0xF7FFFF54  BL	_vRf4463SPIWriteBuffer+0
;RF4463PRO.c, 1167 :: 		vRF4463SetPinSelect( PIN_LEVEL_HIGH );
0x0758	0x2001    MOVS	R0, #1
0x075A	0xF7FFFF8D  BL	_vRF4463SetPinSelect+0
;RF4463PRO.c, 1169 :: 		return SUCCESS;
0x075E	0x2000    MOVS	R0, #0
;RF4463PRO.c, 1170 :: 		}
L_end_ucRf4463SetCommand:
0x0760	0xF8DDE000  LDR	LR, [SP, #0]
0x0764	0xB002    ADD	SP, SP, #8
0x0766	0x4770    BX	LR
; end of _ucRf4463SetCommand
__UnsignedIntegralToFloat:
;__Lib_MathDouble.c, 262 :: 		
0x0854	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 264 :: 		
0x0856	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 265 :: 		
0x0858	0xBF08    IT	EQ
;__Lib_MathDouble.c, 267 :: 		
0x085A	0xE00F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 269 :: 		
0x085C	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 271 :: 		
0x085E	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 272 :: 		
0x0862	0xD402    BMI	__me_label_cont
;__Lib_MathDouble.c, 274 :: 		
__me_loop:
0x0864	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 275 :: 		
0x0866	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 277 :: 		
0x0868	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 279 :: 		
__me_label_cont:
0x086A	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 280 :: 		
0x086C	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 281 :: 		
0x086E	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 282 :: 		
0x0870	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 284 :: 		
0x0872	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 285 :: 		
0x0874	0xEA4050C2  ORR	R0, R0, R2, LSL #23
;__Lib_MathDouble.c, 287 :: 		
0x0878	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 288 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 290 :: 		
L_end__UnsignedIntegralToFloat:
0x087C	0xB001    ADD	SP, SP, #4
0x087E	0x4770    BX	LR
; end of __UnsignedIntegralToFloat
__Mul_FP:
;__Lib_MathDouble.c, 666 :: 		
0x07C8	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 668 :: 		
0x07CA	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 670 :: 		
0x07CC	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 671 :: 		
0x07D0	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 672 :: 		
0x07D2	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 673 :: 		
0x07D6	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 675 :: 		
0x07DA	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 676 :: 		
0x07DE	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 677 :: 		
0x07E2	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 678 :: 		
0x07E4	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 679 :: 		
0x07E6	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 681 :: 		
0x07EA	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 683 :: 		
0x07EE	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 685 :: 		
0x07F0	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 686 :: 		
0x07F2	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 688 :: 		
0x07F4	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 689 :: 		
0x07F8	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 690 :: 		
0x07FC	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 691 :: 		
0x07FE	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 692 :: 		
0x0800	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 694 :: 		
0x0804	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 696 :: 		
0x0808	0xE01F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 698 :: 		
0x080A	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 699 :: 		
0x080C	0xD019    BEQ	__me_ovfl
;__Lib_MathDouble.c, 701 :: 		
0x080E	0x195B    ADDS	R3, R3, R5
;__Lib_MathDouble.c, 703 :: 		
0x0810	0xFBA15404  UMULL	R5, R4, R1, R4
;__Lib_MathDouble.c, 705 :: 		
0x0814	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 706 :: 		
0x0816	0xBF5C    ITT	PL
;__Lib_MathDouble.c, 707 :: 		
0x0818	0x0064    LSLPL	R4, R4, #1
;__Lib_MathDouble.c, 708 :: 		
0x081A	0x1E5B    SUBPL	R3, R3, #1
;__Lib_MathDouble.c, 710 :: 		
0x081C	0x3480    ADDS	R4, #128
;__Lib_MathDouble.c, 711 :: 		
0x081E	0xBF24    ITT	CS
;__Lib_MathDouble.c, 712 :: 		
0x0820	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 713 :: 		
0x0822	0x0864    LSRCS	R4, R4, #1
;__Lib_MathDouble.c, 715 :: 		
0x0824	0x3B7E    SUBS	R3, #126
;__Lib_MathDouble.c, 716 :: 		
0x0826	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 717 :: 		
0x0828	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 719 :: 		
0x082C	0xE00D    BLE	__me_lab_end
;__Lib_MathDouble.c, 721 :: 		
0x082E	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 722 :: 		
0x0830	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 724 :: 		
0x0832	0xEA4F2014  LSR	R0, R4, #8
;__Lib_MathDouble.c, 725 :: 		
0x0836	0xF4300000  BICS	R0, R0, #8388608
;__Lib_MathDouble.c, 726 :: 		
0x083A	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 727 :: 		
0x083E	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 730 :: 		
0x0840	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 732 :: 		
__me_ovfl:
0x0842	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 733 :: 		
0x0844	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 734 :: 		
0x0846	0xEA460007  ORR	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 735 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 736 :: 		
0x084A	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 738 :: 		
L_end__Mul_FP:
0x084E	0xB001    ADD	SP, SP, #4
0x0850	0x4770    BX	LR
; end of __Mul_FP
__Div_FP:
;__Lib_MathDouble.c, 743 :: 		
0x0684	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 745 :: 		
0x0686	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 746 :: 		
0x0688	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 747 :: 		
0x068C	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 748 :: 		
0x068E	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 749 :: 		
0x0692	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 751 :: 		
0x0696	0x0201    LSLS	R1, R0, #8
;__Lib_MathDouble.c, 752 :: 		
0x0698	0x0043    LSLS	R3, R0, #1
;__Lib_MathDouble.c, 753 :: 		
0x069A	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 754 :: 		
0x069C	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 755 :: 		
0x069E	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 757 :: 		
0x06A2	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 759 :: 		
0x06A6	0xE03B    BEQ	__me_lab_end
;__Lib_MathDouble.c, 761 :: 		
0x06A8	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 762 :: 		
0x06AA	0xD035    BEQ	__me_ovfl
;__Lib_MathDouble.c, 764 :: 		
0x06AC	0xEA5F2402  LSLS	R4, R2, #8
;__Lib_MathDouble.c, 765 :: 		
0x06B0	0xEA5F0542  LSLS	R5, R2, #1
;__Lib_MathDouble.c, 766 :: 		
0x06B4	0xEA5F6515  LSRS	R5, R5, #24
;__Lib_MathDouble.c, 767 :: 		
0x06B8	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 769 :: 		
0x06BA	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 770 :: 		
0x06BE	0xF04F40FF  MOVEQ	R0, #2139095040
;__Lib_MathDouble.c, 771 :: 		
0x06C2	0x4330    ORREQ	R0, R6
;__Lib_MathDouble.c, 773 :: 		
0x06C4	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 775 :: 		
0x06C6	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 776 :: 		
0x06C8	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 778 :: 		
0x06CA	0x1B5B    SUBS	R3, R3, R5
;__Lib_MathDouble.c, 781 :: 		
0x06CC	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 782 :: 		
0x06CE	0x2720    MOVS	R7, #32
;__Lib_MathDouble.c, 783 :: 		
0x06D0	0x0864    LSRS	R4, R4, #1
;__Lib_MathDouble.c, 784 :: 		
0x06D2	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 786 :: 		
__me_fdiv_:
;__Lib_MathDouble.c, 788 :: 		
0x06D4	0x42A1    CMP	R1, R4
;__Lib_MathDouble.c, 790 :: 		
0x06D6	0xEB400000  ADC	R0, R0, R0, LSL #0
;__Lib_MathDouble.c, 791 :: 		
0x06DA	0xBF28    IT	CS
;__Lib_MathDouble.c, 792 :: 		
0x06DC	0x1B09    SUBCS	R1, R1, R4
;__Lib_MathDouble.c, 793 :: 		
0x06DE	0x1E7F    SUBS	R7, R7, #1
;__Lib_MathDouble.c, 794 :: 		
0x06E0	0xD004    BEQ	__me_flb1_
;__Lib_MathDouble.c, 795 :: 		
0x06E2	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 796 :: 		
0x06E4	0xBF18    IT	NE
;__Lib_MathDouble.c, 797 :: 		
0x06E6	0x0049    LSLNE	R1, R1, #1
;__Lib_MathDouble.c, 798 :: 		
0x06E8	0xD1F4    BNE	__me_fdiv_
;__Lib_MathDouble.c, 800 :: 		
0x06EA	0x40B8    LSLS	R0, R7
;__Lib_MathDouble.c, 802 :: 		
__me_flb1_:
0x06EC	0xF0104F00  TST	R0, #-2147483648
;__Lib_MathDouble.c, 803 :: 		
0x06F0	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 804 :: 		
0x06F2	0x0040    LSLEQ	R0, R0, #1
;__Lib_MathDouble.c, 805 :: 		
0x06F4	0xF1B30301  SUBSEQ	R3, R3, #1
;__Lib_MathDouble.c, 807 :: 		
0x06F8	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 808 :: 		
0x06FA	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 809 :: 		
0x06FC	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 810 :: 		
0x06FE	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 812 :: 		
__me_flb2_:
0x0700	0x337F    ADDS	R3, #127
;__Lib_MathDouble.c, 813 :: 		
0x0702	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 814 :: 		
0x0704	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 816 :: 		
0x0708	0xE00A    BLE	__me_lab_end
;__Lib_MathDouble.c, 818 :: 		
0x070A	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 819 :: 		
0x070C	0xD204    BCS	__me_ovfl
;__Lib_MathDouble.c, 821 :: 		
0x070E	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 822 :: 		
0x0710	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 823 :: 		
0x0714	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 826 :: 		
0x0716	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 828 :: 		
__me_ovfl:
0x0718	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 829 :: 		
0x071A	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 830 :: 		
0x071C	0xEA560007  ORRS	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 831 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 832 :: 		
0x0720	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 834 :: 		
L_end__Div_FP:
0x0724	0xB001    ADD	SP, SP, #4
0x0726	0x4770    BX	LR
; end of __Div_FP
__FloatToUnsignedIntegral:
;__Lib_MathDouble.c, 45 :: 		
0x0F3C	0xB081    SUB	SP, SP, #4
0x0F3E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_MathDouble.c, 47 :: 		
0x0F42	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 49 :: 		
0x0F44	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 50 :: 		
0x0F46	0xD502    BPL	__me_label_pos
;__Lib_MathDouble.c, 51 :: 		
0x0F48	0xF7FFFB6E  BL	__FloatToSignedIntegral+0
;__Lib_MathDouble.c, 52 :: 		
0x0F4C	0xE013    B	__me_endLab
;__Lib_MathDouble.c, 55 :: 		
__me_label_pos:
0x0F4E	0xEA4F0140  LSL	R1, R0, #1
;__Lib_MathDouble.c, 56 :: 		
0x0F52	0xEA4F6111  LSR	R1, R1, #24
;__Lib_MathDouble.c, 58 :: 		
0x0F56	0x397F    SUBS	R1, #127
;__Lib_MathDouble.c, 59 :: 		
0x0F58	0xBF3C    ITT	CC
;__Lib_MathDouble.c, 60 :: 		
0x0F5A	0xF04F0000  MOVCC	R0, #0
;__Lib_MathDouble.c, 62 :: 		
0x0F5E	0xE00A    BCC	__me_endLab
;__Lib_MathDouble.c, 64 :: 		
0x0F60	0xF1D1011F  RSBS	R1, R1, #31
;__Lib_MathDouble.c, 65 :: 		
0x0F64	0xD305    BCC	__me_ovfl
;__Lib_MathDouble.c, 67 :: 		
0x0F66	0xEA4F2000  LSL	R0, R0, #8
;__Lib_MathDouble.c, 68 :: 		
0x0F6A	0xF0404000  ORR	R0, R0, #-2147483648
;__Lib_MathDouble.c, 70 :: 		
0x0F6E	0x40C8    LSRS	R0, R1
;__Lib_MathDouble.c, 73 :: 		
0x0F70	0xE001    B	__me_endLab
;__Lib_MathDouble.c, 75 :: 		
__me_ovfl:
0x0F72	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 76 :: 		
0x0F74	0x1E40    SUBS	R0, R0, #1
;__Lib_MathDouble.c, 78 :: 		
__me_endLab:
;__Lib_MathDouble.c, 79 :: 		
0x0F76	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 82 :: 		
L_end__FloatToUnsignedIntegral:
0x0F7A	0xF8DDE000  LDR	LR, [SP, #0]
0x0F7E	0xB001    ADD	SP, SP, #4
0x0F80	0x4770    BX	LR
; end of __FloatToUnsignedIntegral
__FloatToSignedIntegral:
;__Lib_MathDouble.c, 4 :: 		
0x0628	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 6 :: 		
0x062A	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 8 :: 		
0x062C	0xEA4F0240  LSL	R2, R0, #1
;__Lib_MathDouble.c, 9 :: 		
0x0630	0xEA4F6212  LSR	R2, R2, #24
;__Lib_MathDouble.c, 11 :: 		
0x0634	0x3A7F    SUBS	R2, #127
;__Lib_MathDouble.c, 12 :: 		
0x0636	0xBF44    ITT	MI
;__Lib_MathDouble.c, 13 :: 		
0x0638	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 15 :: 		
0x063C	0xE011    BMI	__me_lab_end
;__Lib_MathDouble.c, 17 :: 		
0x063E	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 18 :: 		
0x0642	0xD909    BLS	__me_ovfl
;__Lib_MathDouble.c, 20 :: 		
0x0644	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 21 :: 		
0x0648	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 23 :: 		
0x064C	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 25 :: 		
0x064E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 26 :: 		
0x0650	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 27 :: 		
0x0652	0x4248    RSBMI	R0, R1, #0
;__Lib_MathDouble.c, 28 :: 		
0x0654	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 31 :: 		
0x0656	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 33 :: 		
__me_ovfl:
0x0658	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 34 :: 		
0x065A	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 35 :: 		
0x065E	0xBF58    IT	PL
;__Lib_MathDouble.c, 36 :: 		
0x0660	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 37 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 38 :: 		
0x0662	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 40 :: 		
L_end__FloatToSignedIntegral:
0x0666	0xB001    ADD	SP, SP, #4
0x0668	0x4770    BX	LR
; end of __FloatToSignedIntegral
_UART1_Write:
;__Lib_UART_123_45.c, 41 :: 		
; _data start address is: 0 (R0)
0x0F84	0xB081    SUB	SP, SP, #4
0x0F86	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 42 :: 		
0x0F8A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0F8C	0x4803    LDR	R0, [PC, #12]
0x0F8E	0xF7FFFC77  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 43 :: 		
L_end_UART1_Write:
0x0F92	0xF8DDE000  LDR	LR, [SP, #0]
0x0F96	0xB001    ADD	SP, SP, #4
0x0F98	0x4770    BX	LR
0x0F9A	0xBF00    NOP
0x0F9C	0x38004001  	USART1_SR+0
; end of _UART1_Write
_rf4463Config:
;RF4463PRO.c, 508 :: 		void rf4463Config()
0x112C	0xB086    SUB	SP, SP, #24
0x112E	0xF8CDE000  STR	LR, [SP, #0]
;RF4463PRO.c, 514 :: 		for( allocatCounter = 4; allocatCounter < 16; allocatCounter++ ) RF_MODEM_MOD_TYPE_12_data[allocatCounter] = RF_MODEM_MOD_TYPE_12[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x1132	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config3:
; allocatCounter start address is: 12 (R3)
0x1134	0x2B10    CMP	R3, #16
0x1136	0xD20F    BCS	L_rf4463Config4
0x1138	0x48B0    LDR	R0, [PC, #704]
0x113A	0x18C2    ADDS	R2, R0, R3
0x113C	0x48B0    LDR	R0, [PC, #704]
0x113E	0x7801    LDRB	R1, [R0, #0]
0x1140	0x200C    MOVS	R0, #12
0x1142	0x4341    MULS	R1, R0, R1
0x1144	0x48AF    LDR	R0, [PC, #700]
0x1146	0x1841    ADDS	R1, R0, R1
0x1148	0x1F18    SUBS	R0, R3, #4
0x114A	0xB200    SXTH	R0, R0
0x114C	0x1808    ADDS	R0, R1, R0
0x114E	0x7800    LDRB	R0, [R0, #0]
0x1150	0x7010    STRB	R0, [R2, #0]
0x1152	0x1C5B    ADDS	R3, R3, #1
0x1154	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x1156	0xE7ED    B	L_rf4463Config3
L_rf4463Config4:
;RF4463PRO.c, 516 :: 		if(freq3<8)
0x1158	0x48AB    LDR	R0, [PC, #684]
0x115A	0x7800    LDRB	R0, [R0, #0]
0x115C	0x2808    CMP	R0, #8
0x115E	0xF0808085  BCS	L_rf4463Config6
;RF4463PRO.c, 518 :: 		for( allocatCounter = 4; allocatCounter < 12; allocatCounter++ ) RF_MODEM_TX_RAMP_DELAY_8_data[allocatCounter] = RF_MODEM_TX_RAMP_DELAY_8_433[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x1162	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config7:
; allocatCounter start address is: 12 (R3)
0x1164	0x2B0C    CMP	R3, #12
0x1166	0xD20E    BCS	L_rf4463Config8
0x1168	0x48A8    LDR	R0, [PC, #672]
0x116A	0x18C2    ADDS	R2, R0, R3
0x116C	0x48A4    LDR	R0, [PC, #656]
0x116E	0x7800    LDRB	R0, [R0, #0]
0x1170	0x00C1    LSLS	R1, R0, #3
0x1172	0x48A7    LDR	R0, [PC, #668]
0x1174	0x1841    ADDS	R1, R0, R1
0x1176	0x1F18    SUBS	R0, R3, #4
0x1178	0xB200    SXTH	R0, R0
0x117A	0x1808    ADDS	R0, R1, R0
0x117C	0x7800    LDRB	R0, [R0, #0]
0x117E	0x7010    STRB	R0, [R2, #0]
0x1180	0x1C5B    ADDS	R3, R3, #1
0x1182	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x1184	0xE7EE    B	L_rf4463Config7
L_rf4463Config8:
;RF4463PRO.c, 519 :: 		for( allocatCounter = 4; allocatCounter < 15; allocatCounter++ ) RF_MODEM_OOK_CNT1_11_data[allocatCounter] = RF_MODEM_OOK_CNT1_11_433[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x1186	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config10:
; allocatCounter start address is: 12 (R3)
0x1188	0x2B0F    CMP	R3, #15
0x118A	0xD20F    BCS	L_rf4463Config11
0x118C	0x48A1    LDR	R0, [PC, #644]
0x118E	0x18C2    ADDS	R2, R0, R3
0x1190	0x489B    LDR	R0, [PC, #620]
0x1192	0x7801    LDRB	R1, [R0, #0]
0x1194	0x200B    MOVS	R0, #11
0x1196	0x4341    MULS	R1, R0, R1
0x1198	0x489F    LDR	R0, [PC, #636]
0x119A	0x1841    ADDS	R1, R0, R1
0x119C	0x1F18    SUBS	R0, R3, #4
0x119E	0xB200    SXTH	R0, R0
0x11A0	0x1808    ADDS	R0, R1, R0
0x11A2	0x7800    LDRB	R0, [R0, #0]
0x11A4	0x7010    STRB	R0, [R2, #0]
0x11A6	0x1C5B    ADDS	R3, R3, #1
0x11A8	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x11AA	0xE7ED    B	L_rf4463Config10
L_rf4463Config11:
;RF4463PRO.c, 520 :: 		for( allocatCounter = 4; allocatCounter < 16; allocatCounter++ ) RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data[allocatCounter] = RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x11AC	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config13:
; allocatCounter start address is: 12 (R3)
0x11AE	0x2B10    CMP	R3, #16
0x11B0	0xD20F    BCS	L_rf4463Config14
0x11B2	0x489A    LDR	R0, [PC, #616]
0x11B4	0x18C2    ADDS	R2, R0, R3
0x11B6	0x4892    LDR	R0, [PC, #584]
0x11B8	0x7801    LDRB	R1, [R0, #0]
0x11BA	0x200C    MOVS	R0, #12
0x11BC	0x4341    MULS	R1, R0, R1
0x11BE	0x4898    LDR	R0, [PC, #608]
0x11C0	0x1841    ADDS	R1, R0, R1
0x11C2	0x1F18    SUBS	R0, R3, #4
0x11C4	0xB200    SXTH	R0, R0
0x11C6	0x1808    ADDS	R0, R1, R0
0x11C8	0x7800    LDRB	R0, [R0, #0]
0x11CA	0x7010    STRB	R0, [R2, #0]
0x11CC	0x1C5B    ADDS	R3, R3, #1
0x11CE	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x11D0	0xE7ED    B	L_rf4463Config13
L_rf4463Config14:
;RF4463PRO.c, 521 :: 		for( allocatCounter = 4; allocatCounter < 16; allocatCounter++ ) RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data[allocatCounter] = RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x11D2	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config16:
; allocatCounter start address is: 12 (R3)
0x11D4	0x2B10    CMP	R3, #16
0x11D6	0xD20F    BCS	L_rf4463Config17
0x11D8	0x4892    LDR	R0, [PC, #584]
0x11DA	0x18C2    ADDS	R2, R0, R3
0x11DC	0x4888    LDR	R0, [PC, #544]
0x11DE	0x7801    LDRB	R1, [R0, #0]
0x11E0	0x200C    MOVS	R0, #12
0x11E2	0x4341    MULS	R1, R0, R1
0x11E4	0x4890    LDR	R0, [PC, #576]
0x11E6	0x1841    ADDS	R1, R0, R1
0x11E8	0x1F18    SUBS	R0, R3, #4
0x11EA	0xB200    SXTH	R0, R0
0x11EC	0x1808    ADDS	R0, R1, R0
0x11EE	0x7800    LDRB	R0, [R0, #0]
0x11F0	0x7010    STRB	R0, [R2, #0]
0x11F2	0x1C5B    ADDS	R3, R3, #1
0x11F4	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x11F6	0xE7ED    B	L_rf4463Config16
L_rf4463Config17:
;RF4463PRO.c, 522 :: 		for( allocatCounter = 4; allocatCounter < 16; allocatCounter++ ) RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data[allocatCounter] = RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x11F8	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config19:
; allocatCounter start address is: 12 (R3)
0x11FA	0x2B10    CMP	R3, #16
0x11FC	0xD20F    BCS	L_rf4463Config20
0x11FE	0x488B    LDR	R0, [PC, #556]
0x1200	0x18C2    ADDS	R2, R0, R3
0x1202	0x487F    LDR	R0, [PC, #508]
0x1204	0x7801    LDRB	R1, [R0, #0]
0x1206	0x200C    MOVS	R0, #12
0x1208	0x4341    MULS	R1, R0, R1
0x120A	0x4889    LDR	R0, [PC, #548]
0x120C	0x1841    ADDS	R1, R0, R1
0x120E	0x1F18    SUBS	R0, R3, #4
0x1210	0xB200    SXTH	R0, R0
0x1212	0x1808    ADDS	R0, R1, R0
0x1214	0x7800    LDRB	R0, [R0, #0]
0x1216	0x7010    STRB	R0, [R2, #0]
0x1218	0x1C5B    ADDS	R3, R3, #1
0x121A	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x121C	0xE7ED    B	L_rf4463Config19
L_rf4463Config20:
;RF4463PRO.c, 523 :: 		for( allocatCounter = 4; allocatCounter < 13; allocatCounter++ ) RF_MODEM_AGC_WINDOW_SIZE_9_data[allocatCounter] = RF_MODEM_AGC_WINDOW_SIZE_9_433[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x121E	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config22:
; allocatCounter start address is: 12 (R3)
0x1220	0x2B0D    CMP	R3, #13
0x1222	0xD20F    BCS	L_rf4463Config23
0x1224	0x4883    LDR	R0, [PC, #524]
0x1226	0x18C2    ADDS	R2, R0, R3
0x1228	0x4875    LDR	R0, [PC, #468]
0x122A	0x7801    LDRB	R1, [R0, #0]
0x122C	0x2009    MOVS	R0, #9
0x122E	0x4341    MULS	R1, R0, R1
0x1230	0x4881    LDR	R0, [PC, #516]
0x1232	0x1841    ADDS	R1, R0, R1
0x1234	0x1F18    SUBS	R0, R3, #4
0x1236	0xB200    SXTH	R0, R0
0x1238	0x1808    ADDS	R0, R1, R0
0x123A	0x7800    LDRB	R0, [R0, #0]
0x123C	0x7010    STRB	R0, [R2, #0]
0x123E	0x1C5B    ADDS	R3, R3, #1
0x1240	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x1242	0xE7ED    B	L_rf4463Config22
L_rf4463Config23:
;RF4463PRO.c, 524 :: 		for( allocatCounter = 4; allocatCounter < 13; allocatCounter++ ) RF_MODEM_BCR_OSR_1_9_data[allocatCounter] = RF_MODEM_BCR_OSR_1_9_433[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x1244	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config25:
; allocatCounter start address is: 12 (R3)
0x1246	0x2B0D    CMP	R3, #13
0x1248	0xD20F    BCS	L_rf4463Config26
0x124A	0x487C    LDR	R0, [PC, #496]
0x124C	0x18C2    ADDS	R2, R0, R3
0x124E	0x486C    LDR	R0, [PC, #432]
0x1250	0x7801    LDRB	R1, [R0, #0]
0x1252	0x2009    MOVS	R0, #9
0x1254	0x4341    MULS	R1, R0, R1
0x1256	0x487A    LDR	R0, [PC, #488]
0x1258	0x1841    ADDS	R1, R0, R1
0x125A	0x1F18    SUBS	R0, R3, #4
0x125C	0xB200    SXTH	R0, R0
0x125E	0x1808    ADDS	R0, R1, R0
0x1260	0x7800    LDRB	R0, [R0, #0]
0x1262	0x7010    STRB	R0, [R2, #0]
0x1264	0x1C5B    ADDS	R3, R3, #1
0x1266	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x1268	0xE7ED    B	L_rf4463Config25
L_rf4463Config26:
;RF4463PRO.c, 525 :: 		}
0x126A	0xE096    B	L_rf4463Config28
L_rf4463Config6:
;RF4463PRO.c, 528 :: 		for( allocatCounter = 4; allocatCounter < 12; allocatCounter++ ) RF_MODEM_TX_RAMP_DELAY_8_data[allocatCounter] = RF_MODEM_TX_RAMP_DELAY_8_850[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x126C	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config29:
; allocatCounter start address is: 12 (R3)
0x126E	0x2B0C    CMP	R3, #12
0x1270	0xD20E    BCS	L_rf4463Config30
0x1272	0x4866    LDR	R0, [PC, #408]
0x1274	0x18C2    ADDS	R2, R0, R3
0x1276	0x4862    LDR	R0, [PC, #392]
0x1278	0x7800    LDRB	R0, [R0, #0]
0x127A	0x00C1    LSLS	R1, R0, #3
0x127C	0x4871    LDR	R0, [PC, #452]
0x127E	0x1841    ADDS	R1, R0, R1
0x1280	0x1F18    SUBS	R0, R3, #4
0x1282	0xB200    SXTH	R0, R0
0x1284	0x1808    ADDS	R0, R1, R0
0x1286	0x7800    LDRB	R0, [R0, #0]
0x1288	0x7010    STRB	R0, [R2, #0]
0x128A	0x1C5B    ADDS	R3, R3, #1
0x128C	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x128E	0xE7EE    B	L_rf4463Config29
L_rf4463Config30:
;RF4463PRO.c, 529 :: 		for( allocatCounter = 4; allocatCounter < 11; allocatCounter++ ) RF_MODEM_AFC_GEAR_7_data[allocatCounter] = RF_MODEM_AFC_GEAR_7_850[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x1290	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config32:
; allocatCounter start address is: 12 (R3)
0x1292	0x2B0B    CMP	R3, #11
0x1294	0xD20F    BCS	L_rf4463Config33
0x1296	0x486C    LDR	R0, [PC, #432]
0x1298	0x18C2    ADDS	R2, R0, R3
0x129A	0x4859    LDR	R0, [PC, #356]
0x129C	0x7801    LDRB	R1, [R0, #0]
0x129E	0x2007    MOVS	R0, #7
0x12A0	0x4341    MULS	R1, R0, R1
0x12A2	0x486A    LDR	R0, [PC, #424]
0x12A4	0x1841    ADDS	R1, R0, R1
0x12A6	0x1F18    SUBS	R0, R3, #4
0x12A8	0xB200    SXTH	R0, R0
0x12AA	0x1808    ADDS	R0, R1, R0
0x12AC	0x7800    LDRB	R0, [R0, #0]
0x12AE	0x7010    STRB	R0, [R2, #0]
0x12B0	0x1C5B    ADDS	R3, R3, #1
0x12B2	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x12B4	0xE7ED    B	L_rf4463Config32
L_rf4463Config33:
;RF4463PRO.c, 530 :: 		for( allocatCounter = 4; allocatCounter < 15; allocatCounter++ ) RF_MODEM_OOK_CNT1_11_data[allocatCounter] = RF_MODEM_OOK_CNT1_11_850[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x12B6	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config35:
; allocatCounter start address is: 12 (R3)
0x12B8	0x2B0F    CMP	R3, #15
0x12BA	0xD20F    BCS	L_rf4463Config36
0x12BC	0x4855    LDR	R0, [PC, #340]
0x12BE	0x18C2    ADDS	R2, R0, R3
0x12C0	0x484F    LDR	R0, [PC, #316]
0x12C2	0x7801    LDRB	R1, [R0, #0]
0x12C4	0x200B    MOVS	R0, #11
0x12C6	0x4341    MULS	R1, R0, R1
0x12C8	0x4861    LDR	R0, [PC, #388]
0x12CA	0x1841    ADDS	R1, R0, R1
0x12CC	0x1F18    SUBS	R0, R3, #4
0x12CE	0xB200    SXTH	R0, R0
0x12D0	0x1808    ADDS	R0, R1, R0
0x12D2	0x7800    LDRB	R0, [R0, #0]
0x12D4	0x7010    STRB	R0, [R2, #0]
0x12D6	0x1C5B    ADDS	R3, R3, #1
0x12D8	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x12DA	0xE7ED    B	L_rf4463Config35
L_rf4463Config36:
;RF4463PRO.c, 531 :: 		for( allocatCounter = 4; allocatCounter < 16; allocatCounter++ ) RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data[allocatCounter] = RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x12DC	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config38:
; allocatCounter start address is: 12 (R3)
0x12DE	0x2B10    CMP	R3, #16
0x12E0	0xD20F    BCS	L_rf4463Config39
0x12E2	0x484E    LDR	R0, [PC, #312]
0x12E4	0x18C2    ADDS	R2, R0, R3
0x12E6	0x4846    LDR	R0, [PC, #280]
0x12E8	0x7801    LDRB	R1, [R0, #0]
0x12EA	0x200C    MOVS	R0, #12
0x12EC	0x4341    MULS	R1, R0, R1
0x12EE	0x4859    LDR	R0, [PC, #356]
0x12F0	0x1841    ADDS	R1, R0, R1
0x12F2	0x1F18    SUBS	R0, R3, #4
0x12F4	0xB200    SXTH	R0, R0
0x12F6	0x1808    ADDS	R0, R1, R0
0x12F8	0x7800    LDRB	R0, [R0, #0]
0x12FA	0x7010    STRB	R0, [R2, #0]
0x12FC	0x1C5B    ADDS	R3, R3, #1
0x12FE	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x1300	0xE7ED    B	L_rf4463Config38
L_rf4463Config39:
;RF4463PRO.c, 532 :: 		for( allocatCounter = 4; allocatCounter < 16; allocatCounter++ ) RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data[allocatCounter] = RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x1302	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config41:
; allocatCounter start address is: 12 (R3)
0x1304	0x2B10    CMP	R3, #16
0x1306	0xD20F    BCS	L_rf4463Config42
0x1308	0x4846    LDR	R0, [PC, #280]
0x130A	0x18C2    ADDS	R2, R0, R3
0x130C	0x483C    LDR	R0, [PC, #240]
0x130E	0x7801    LDRB	R1, [R0, #0]
0x1310	0x200C    MOVS	R0, #12
0x1312	0x4341    MULS	R1, R0, R1
0x1314	0x4850    LDR	R0, [PC, #320]
0x1316	0x1841    ADDS	R1, R0, R1
0x1318	0x1F18    SUBS	R0, R3, #4
0x131A	0xB200    SXTH	R0, R0
0x131C	0x1808    ADDS	R0, R1, R0
0x131E	0x7800    LDRB	R0, [R0, #0]
0x1320	0x7010    STRB	R0, [R2, #0]
0x1322	0x1C5B    ADDS	R3, R3, #1
0x1324	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x1326	0xE7ED    B	L_rf4463Config41
L_rf4463Config42:
;RF4463PRO.c, 533 :: 		for( allocatCounter = 4; allocatCounter < 16; allocatCounter++ ) RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data[allocatCounter] = RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x1328	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config44:
; allocatCounter start address is: 12 (R3)
0x132A	0x2B10    CMP	R3, #16
0x132C	0xD20F    BCS	L_rf4463Config45
0x132E	0x483F    LDR	R0, [PC, #252]
0x1330	0x18C2    ADDS	R2, R0, R3
0x1332	0x4833    LDR	R0, [PC, #204]
0x1334	0x7801    LDRB	R1, [R0, #0]
0x1336	0x200C    MOVS	R0, #12
0x1338	0x4341    MULS	R1, R0, R1
0x133A	0x4848    LDR	R0, [PC, #288]
0x133C	0x1841    ADDS	R1, R0, R1
0x133E	0x1F18    SUBS	R0, R3, #4
0x1340	0xB200    SXTH	R0, R0
0x1342	0x1808    ADDS	R0, R1, R0
0x1344	0x7800    LDRB	R0, [R0, #0]
0x1346	0x7010    STRB	R0, [R2, #0]
0x1348	0x1C5B    ADDS	R3, R3, #1
0x134A	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x134C	0xE7ED    B	L_rf4463Config44
L_rf4463Config45:
;RF4463PRO.c, 534 :: 		for( allocatCounter = 4; allocatCounter < 13; allocatCounter++ ) RF_MODEM_AGC_WINDOW_SIZE_9_data[allocatCounter] = RF_MODEM_AGC_WINDOW_SIZE_9_850[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x134E	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config47:
; allocatCounter start address is: 12 (R3)
0x1350	0x2B0D    CMP	R3, #13
0x1352	0xD20F    BCS	L_rf4463Config48
0x1354	0x4837    LDR	R0, [PC, #220]
0x1356	0x18C2    ADDS	R2, R0, R3
0x1358	0x4829    LDR	R0, [PC, #164]
0x135A	0x7801    LDRB	R1, [R0, #0]
0x135C	0x2009    MOVS	R0, #9
0x135E	0x4341    MULS	R1, R0, R1
0x1360	0x483F    LDR	R0, [PC, #252]
0x1362	0x1841    ADDS	R1, R0, R1
0x1364	0x1F18    SUBS	R0, R3, #4
0x1366	0xB200    SXTH	R0, R0
0x1368	0x1808    ADDS	R0, R1, R0
0x136A	0x7800    LDRB	R0, [R0, #0]
0x136C	0x7010    STRB	R0, [R2, #0]
0x136E	0x1C5B    ADDS	R3, R3, #1
0x1370	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x1372	0xE7ED    B	L_rf4463Config47
L_rf4463Config48:
;RF4463PRO.c, 535 :: 		for( allocatCounter = 4; allocatCounter < 13; allocatCounter++ ) RF_MODEM_BCR_OSR_1_9_data[allocatCounter] = RF_MODEM_BCR_OSR_1_9_850[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x1374	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config50:
; allocatCounter start address is: 12 (R3)
0x1376	0x2B0D    CMP	R3, #13
0x1378	0xD20F    BCS	L_rf4463Config51
0x137A	0x4830    LDR	R0, [PC, #192]
0x137C	0x18C2    ADDS	R2, R0, R3
0x137E	0x4820    LDR	R0, [PC, #128]
0x1380	0x7801    LDRB	R1, [R0, #0]
0x1382	0x2009    MOVS	R0, #9
0x1384	0x4341    MULS	R1, R0, R1
0x1386	0x4837    LDR	R0, [PC, #220]
0x1388	0x1841    ADDS	R1, R0, R1
0x138A	0x1F18    SUBS	R0, R3, #4
0x138C	0xB200    SXTH	R0, R0
0x138E	0x1808    ADDS	R0, R1, R0
0x1390	0x7800    LDRB	R0, [R0, #0]
0x1392	0x7010    STRB	R0, [R2, #0]
0x1394	0x1C5B    ADDS	R3, R3, #1
0x1396	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x1398	0xE7ED    B	L_rf4463Config50
L_rf4463Config51:
;RF4463PRO.c, 536 :: 		}
L_rf4463Config28:
;RF4463PRO.c, 537 :: 		for(allocatCounter = 4; allocatCounter < 11; allocatCounter++ ) RF_SYNTH_PFDCP_CPFF_7_data[allocatCounter] = RF_SYNTH_PFDCP_CPFF_7[dataRate][allocatCounter - 4];
; allocatCounter start address is: 12 (R3)
0x139A	0x2304    MOVS	R3, #4
; allocatCounter end address is: 12 (R3)
L_rf4463Config53:
; allocatCounter start address is: 12 (R3)
0x139C	0x2B0B    CMP	R3, #11
0x139E	0xD20F    BCS	L_rf4463Config54
0x13A0	0x4831    LDR	R0, [PC, #196]
0x13A2	0x18C2    ADDS	R2, R0, R3
0x13A4	0x4816    LDR	R0, [PC, #88]
0x13A6	0x7801    LDRB	R1, [R0, #0]
0x13A8	0x2007    MOVS	R0, #7
0x13AA	0x4341    MULS	R1, R0, R1
0x13AC	0x482F    LDR	R0, [PC, #188]
0x13AE	0x1841    ADDS	R1, R0, R1
0x13B0	0x1F18    SUBS	R0, R3, #4
0x13B2	0xB200    SXTH	R0, R0
0x13B4	0x1808    ADDS	R0, R1, R0
0x13B6	0x7800    LDRB	R0, [R0, #0]
0x13B8	0x7010    STRB	R0, [R2, #0]
0x13BA	0x1C5B    ADDS	R3, R3, #1
0x13BC	0xB2DB    UXTB	R3, R3
; allocatCounter end address is: 12 (R3)
0x13BE	0xE7ED    B	L_rf4463Config53
L_rf4463Config54:
;RF4463PRO.c, 539 :: 		GPIO_SET(mode);
0x13C0	0x482B    LDR	R0, [PC, #172]
0x13C2	0x7800    LDRB	R0, [R0, #0]
0x13C4	0xF7FFFD7C  BL	_GPIO_SET+0
;RF4463PRO.c, 542 :: 		pcBuffer[0]  = 0x11;
0x13C8	0xAA01    ADD	R2, SP, #4
0x13CA	0x2011    MOVS	R0, #17
0x13CC	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 543 :: 		pcBuffer[1]  = 0x00;    // 0x0000
0x13CE	0x1C51    ADDS	R1, R2, #1
0x13D0	0x2000    MOVS	R0, #0
0x13D2	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 544 :: 		pcBuffer[2]  = 0x01;    // ¹² 1¸ö²ÎÊý
0x13D4	0x1C91    ADDS	R1, R2, #2
0x13D6	0x2001    MOVS	R0, #1
0x13D8	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 545 :: 		pcBuffer[3]  = 0x00;   // 0x0000
0x13DA	0x1CD1    ADDS	R1, R2, #3
0x13DC	0x2000    MOVS	R0, #0
0x13DE	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 546 :: 		pcBuffer[4]  = 98;  // freq  adjustment
0x13E0	0x1D11    ADDS	R1, R2, #4
0x13E2	0x2062    MOVS	R0, #98
0x13E4	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 547 :: 		ucRf4463SetCommand( 5 , RF4463_PROPERTY_GLOBAL_XO_TUNE , pcBuffer );
0x13E6	0x2100    MOVS	R1, #0
0x13E8	0x2005    MOVS	R0, #5
0x13EA	0xF7FFF99D  BL	_ucRf4463SetCommand+0
;RF4463PRO.c, 548 :: 		vBufferSetToZero( pcBuffer, 20 );
0x13EE	0xA801    ADD	R0, SP, #4
0x13F0	0x2114    MOVS	R1, #20
0x13F2	0xF7FFFC83  BL	_vBufferSetToZero+0
;RF4463PRO.c, 554 :: 		pcBuffer[0]  = 0x11;
0x13F6	0xAA01    ADD	R2, SP, #4
0x13F8	0xF000B83C  B	#120
0x13FC	0x00002000  	_RF_MODEM_MOD_TYPE_12_data+0
0x1400	0x008D2000  	_dataRate+0
0x1404	0x20850000  	_RF_MODEM_MOD_TYPE_12+0
0x1408	0x008E2000  	_freq3+0
0x140C	0x00102000  	_RF_MODEM_TX_RAMP_DELAY_8_data+0
0x1410	0x253C0000  	_RF_MODEM_TX_RAMP_DELAY_8_433+0
0x1414	0x001C2000  	_RF_MODEM_OOK_CNT1_11_data+0
0x1418	0x22060000  	_RF_MODEM_OOK_CNT1_11_433+0
0x141C	0x002B2000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+0
0x1420	0x20010000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+0
0x1424	0x003B2000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x1428	0x21090000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+0
0x142C	0x004B2000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x1430	0x1E750000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+0
0x1434	0x005B2000  	_RF_MODEM_AGC_WINDOW_SIZE_9_data+0
0x1438	0x24810000  	_RF_MODEM_AGC_WINDOW_SIZE_9_433+0
0x143C	0x00682000  	_RF_MODEM_BCR_OSR_1_9_data+0
0x1440	0x241E0000  	_RF_MODEM_BCR_OSR_1_9_433+0
0x1444	0x24E40000  	_RF_MODEM_TX_RAMP_DELAY_8_850+0
0x1448	0x00752000  	_RF_MODEM_AFC_GEAR_7_data+0
0x144C	0x25940000  	_RF_MODEM_AFC_GEAR_7_850+0
0x1450	0x218D0000  	_RF_MODEM_OOK_CNT1_11_850+0
0x1454	0x1DF10000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+0
0x1458	0x1F7D0000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+0
0x145C	0x1EF90000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+0
0x1460	0x23580000  	_RF_MODEM_AGC_WINDOW_SIZE_9_850+0
0x1464	0x23BB0000  	_RF_MODEM_BCR_OSR_1_9_850+0
0x1468	0x00822000  	_RF_SYNTH_PFDCP_CPFF_7_data+0
0x146C	0x25E10000  	_RF_SYNTH_PFDCP_CPFF_7+0
0x1470	0x008F2000  	_mode+0
0x1474	0x2011    MOVS	R0, #17
0x1476	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 555 :: 		pcBuffer[1]  = 0x00;    // 0x0003
0x1478	0x1C51    ADDS	R1, R2, #1
0x147A	0x2000    MOVS	R0, #0
0x147C	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 556 :: 		pcBuffer[2]  = 0x01;    // ¹² 1¸ö²ÎÊý
0x147E	0x1C91    ADDS	R1, R2, #2
0x1480	0x2001    MOVS	R0, #1
0x1482	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 557 :: 		pcBuffer[3]  = 0x03;   // 0x0003
0x1484	0x1CD1    ADDS	R1, R2, #3
0x1486	0x2003    MOVS	R0, #3
0x1488	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 558 :: 		pcBuffer[4]  = 0x40;  // tx = rx = 64 byte, ÆÕÍ¨ PH£¬high performance mode  ?????????????????????
0x148A	0x1D11    ADDS	R1, R2, #4
0x148C	0x2040    MOVS	R0, #64
0x148E	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 559 :: 		ucRf4463SetCommand( 5 , RF4463_PROPERTY_GLOBAL_CLK_CFG , pcBuffer );
0x1490	0x2101    MOVS	R1, #1
0x1492	0x2005    MOVS	R0, #5
0x1494	0xF7FFF948  BL	_ucRf4463SetCommand+0
;RF4463PRO.c, 560 :: 		vBufferSetToZero( pcBuffer, 20 );
0x1498	0xA801    ADD	R0, SP, #4
0x149A	0x2114    MOVS	R1, #20
0x149C	0xF7FFFC2E  BL	_vBufferSetToZero+0
;RF4463PRO.c, 567 :: 		pcBuffer[0]  = 0x11;
0x14A0	0xAA01    ADD	R2, SP, #4
0x14A2	0x2011    MOVS	R0, #17
0x14A4	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 568 :: 		pcBuffer[1]  = 0x10;    // 0x1000
0x14A6	0x1C51    ADDS	R1, R2, #1
0x14A8	0x2010    MOVS	R0, #16
0x14AA	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 569 :: 		pcBuffer[2]  = 0x09;    // ¹² 9¸ö²ÎÊý
0x14AC	0x1C91    ADDS	R1, R2, #2
0x14AE	0x2009    MOVS	R0, #9
0x14B0	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 570 :: 		pcBuffer[3]  = 0x00;   // 0x1000
0x14B2	0x1CD1    ADDS	R1, R2, #3
0x14B4	0x2000    MOVS	R0, #0
0x14B6	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 572 :: 		if(mode == tx_test_mode)
0x14B8	0x48E6    LDR	R0, [PC, #920]
0x14BA	0x7800    LDRB	R0, [R0, #0]
0x14BC	0x2802    CMP	R0, #2
0x14BE	0xD104    BNE	L_rf4463Config56
;RF4463PRO.c, 574 :: 		pcBuffer[4]  = 0xff;   //  ÐèÒª·¢ËÍ255¸ö×Ö½ÚµÄPreamble
0x14C0	0xA801    ADD	R0, SP, #4
0x14C2	0x1D01    ADDS	R1, R0, #4
0x14C4	0x20FF    MOVS	R0, #255
0x14C6	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 575 :: 		}
0x14C8	0xE003    B	L_rf4463Config57
L_rf4463Config56:
;RF4463PRO.c, 578 :: 		pcBuffer[4]  = 0x08;   //  ÐèÒª·¢ËÍ8¸ö×Ö½ÚµÄPreamble
0x14CA	0xA801    ADD	R0, SP, #4
0x14CC	0x1D01    ADDS	R1, R0, #4
0x14CE	0x2008    MOVS	R0, #8
0x14D0	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 579 :: 		}
L_rf4463Config57:
;RF4463PRO.c, 582 :: 		pcBuffer[5]   = 0x14;   //Òª¼ì²â20 bit Í¬²½×Ö£¬
0x14D2	0xAA01    ADD	R2, SP, #4
0x14D4	0x1D51    ADDS	R1, R2, #5
0x14D6	0x2014    MOVS	R0, #20
0x14D8	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 583 :: 		pcBuffer[6]   = 0x00;   // ·Ç±ê×¼µÄpreamble Éè¶¨£¬Ã»ÓÐÓÃ
0x14DA	0x1D91    ADDS	R1, R2, #6
0x14DC	0x2000    MOVS	R0, #0
0x14DE	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 584 :: 		pcBuffer[7]   = 0x0f;   // Ç°µ¼ÂëTimeoutµÄÊ±¼ä   ????????????????????????????????????????????????????????????
0x14E0	0x1DD1    ADDS	R1, R2, #7
0x14E2	0x200F    MOVS	R0, #15
0x14E4	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 585 :: 		pcBuffer[8]   = 0x31;  // Ç°µ¼ÂëµÄ³¤¶ÈÒÔ byte ¼ÆËã£¬ 1st = 1£¬Ã»ÓÐmanchest  ±àÂë£¬Ê¹ÓÃ±ê×¼µÄ 1010.¡£¡£
0x14E6	0xF2020108  ADDW	R1, R2, #8
0x14EA	0x2031    MOVS	R0, #49
0x14EC	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 586 :: 		pcBuffer[9]   = 0x0;     //  ·Ç±ê×¼µÄPreambleµÄ Patten 4th byte
0x14EE	0xF2020109  ADDW	R1, R2, #9
0x14F2	0x2000    MOVS	R0, #0
0x14F4	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 587 :: 		pcBuffer[10]  = 0x00;   //  ·Ç±ê×¼µÄPreambleµÄ Patten 3rd byte
0x14F6	0xF202010A  ADDW	R1, R2, #10
0x14FA	0x2000    MOVS	R0, #0
0x14FC	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 588 :: 		pcBuffer[11]  = 0x00;  //  ·Ç±ê×¼µÄPreambleµÄ Patten 2nd byte
0x14FE	0xF202010B  ADDW	R1, R2, #11
0x1502	0x2000    MOVS	R0, #0
0x1504	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 589 :: 		pcBuffer[12]  = 0x00;  //  ·Ç±ê×¼µÄPreambleµÄ Patten 1st byte
0x1506	0xF202010C  ADDW	R1, R2, #12
0x150A	0x2000    MOVS	R0, #0
0x150C	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 590 :: 		ucRf4463SetCommand( 13 , RF4463_PROPERTY_PREAMBLE_TX_LENGTH , pcBuffer );
0x150E	0x2100    MOVS	R1, #0
0x1510	0x200D    MOVS	R0, #13
0x1512	0xF7FFF909  BL	_ucRf4463SetCommand+0
;RF4463PRO.c, 591 :: 		vBufferSetToZero( pcBuffer, 20 );
0x1516	0xA801    ADD	R0, SP, #4
0x1518	0x2114    MOVS	R1, #20
0x151A	0xF7FFFBEF  BL	_vBufferSetToZero+0
;RF4463PRO.c, 596 :: 		pcBuffer[0]  = 0x11;
0x151E	0xAA01    ADD	R2, SP, #4
0x1520	0x2011    MOVS	R0, #17
0x1522	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 597 :: 		pcBuffer[1]  = 0x11;    // command = 0x1100
0x1524	0x1C51    ADDS	R1, R2, #1
0x1526	0x2011    MOVS	R0, #17
0x1528	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 598 :: 		pcBuffer[2]  = 0x05;    // ¹² 5¸ö²ÎÊý
0x152A	0x1C91    ADDS	R1, R2, #2
0x152C	0x2005    MOVS	R0, #5
0x152E	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 599 :: 		pcBuffer[3]  = 0x00;   // command = 0x1100
0x1530	0x1CD1    ADDS	R1, R2, #3
0x1532	0x2000    MOVS	R0, #0
0x1534	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 600 :: 		pcBuffer[4]  = 0x01;   //  Í¬²½×ÖÔÚ length field ¶¨Òå²¢·¢ËÍ£¬Í¬²½×Ö²»ÄÜÓÐ´í£¬²»ÊÇ 4FSK£¬ ²»ÊÇmanchest ±àÂë£¬Ö»ÓÐ 2¸ö×Ö½Ú
0x1536	0x1D11    ADDS	R1, R2, #4
0x1538	0x2001    MOVS	R0, #1
0x153A	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 602 :: 		if(mode == tx_test_mode)
0x153C	0x48C5    LDR	R0, [PC, #788]
0x153E	0x7800    LDRB	R0, [R0, #0]
0x1540	0x2802    CMP	R0, #2
0x1542	0xD107    BNE	L_rf4463Config58
;RF4463PRO.c, 604 :: 		pcBuffer[5]  = 0x55;   //Í¬²½×Ö 3
0x1544	0xAA01    ADD	R2, SP, #4
0x1546	0x1D51    ADDS	R1, R2, #5
0x1548	0x2055    MOVS	R0, #85
0x154A	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 605 :: 		pcBuffer[6]  = 0x55;   // Í¬²½×Ö2
0x154C	0x1D91    ADDS	R1, R2, #6
0x154E	0x2055    MOVS	R0, #85
0x1550	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 606 :: 		}
0x1552	0xE006    B	L_rf4463Config59
L_rf4463Config58:
;RF4463PRO.c, 609 :: 		pcBuffer[5]  = 0x2d;   //Í¬²½×Ö 3
0x1554	0xAA01    ADD	R2, SP, #4
0x1556	0x1D51    ADDS	R1, R2, #5
0x1558	0x202D    MOVS	R0, #45
0x155A	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 610 :: 		pcBuffer[6]  = 0xd4;   // Í¬²½×Ö2
0x155C	0x1D91    ADDS	R1, R2, #6
0x155E	0x20D4    MOVS	R0, #212
0x1560	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 611 :: 		}
L_rf4463Config59:
;RF4463PRO.c, 613 :: 		pcBuffer[7]  = 0x00;   // Í¬²½×Ö1
0x1562	0xAA01    ADD	R2, SP, #4
0x1564	0x1DD1    ADDS	R1, R2, #7
0x1566	0x2000    MOVS	R0, #0
0x1568	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 614 :: 		pcBuffer[8]  = 0x00;  // Í¬²½×Ö 0
0x156A	0xF2020108  ADDW	R1, R2, #8
0x156E	0x2000    MOVS	R0, #0
0x1570	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 618 :: 		pcBuffer[0]  = 0x11;
0x1572	0x2011    MOVS	R0, #17
0x1574	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 619 :: 		pcBuffer[1]  = 0x12;    // command = 0x1200
0x1576	0x1C51    ADDS	R1, R2, #1
0x1578	0x2012    MOVS	R0, #18
0x157A	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 620 :: 		pcBuffer[2]  = 0x01;    // ¹² 1¸ö²ÎÊý
0x157C	0x1C91    ADDS	R1, R2, #2
0x157E	0x2001    MOVS	R0, #1
0x1580	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 621 :: 		pcBuffer[3]  = 0x00;   // command = 0x1200
0x1582	0x1CD1    ADDS	R1, R2, #3
0x1584	0x2000    MOVS	R0, #0
0x1586	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 622 :: 		pcBuffer[4]  = 0x81; //   1ÊÇcRC ÖÖ×Ó£¬CRC = itu-c, enable crc
0x1588	0x1D11    ADDS	R1, R2, #4
0x158A	0x2081    MOVS	R0, #129
0x158C	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 626 :: 		pcBuffer[0]  = 0x11;
0x158E	0x2011    MOVS	R0, #17
0x1590	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 627 :: 		pcBuffer[1]  = 0x12;    // command = 0x1206
0x1592	0x1C51    ADDS	R1, R2, #1
0x1594	0x2012    MOVS	R0, #18
0x1596	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 628 :: 		pcBuffer[2]  = 0x01;    // ¹² 1¸ö²ÎÊý
0x1598	0x1C91    ADDS	R1, R2, #2
0x159A	0x2001    MOVS	R0, #1
0x159C	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 629 :: 		pcBuffer[3]  = 0x06;   // command = 0x1206
0x159E	0x1CD1    ADDS	R1, R2, #3
0x15A0	0x2006    MOVS	R0, #6
0x15A2	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 630 :: 		pcBuffer[4]  = 0x02;   //  tx = rx = 120d--1220 (tx packet£¬ph enable, not 4fsk, ÊÕµ½Ò»°üÊý¾Ýºó£¬RX off,CRC ²»·­×ª £¬CRC MSB£¬ data MSB
0x15A4	0x1D11    ADDS	R1, R2, #4
0x15A6	0x2002    MOVS	R0, #2
0x15A8	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 634 :: 		pcBuffer[0]  = 0x11;
0x15AA	0x2011    MOVS	R0, #17
0x15AC	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 635 :: 		pcBuffer[1]  = 0x12;    // command = 0x1208
0x15AE	0x1C51    ADDS	R1, R2, #1
0x15B0	0x2012    MOVS	R0, #18
0x15B2	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 636 :: 		pcBuffer[2]  = 0x03;    // ¹² 3¸ö²ÎÊý
0x15B4	0x1C91    ADDS	R1, R2, #2
0x15B6	0x2003    MOVS	R0, #3
0x15B8	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 637 :: 		pcBuffer[3]  = 0x08;   // command = 0x1208
0x15BA	0x1CD1    ADDS	R1, R2, #3
0x15BC	0x2008    MOVS	R0, #8
0x15BE	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 638 :: 		pcBuffer[4]  = 0x00;   //  Length Field = LSB,  length Ö»ÓÐ1¸ö×Ö½Ú£¬length ²»·ÅÔÚ FiFoÀïÃæ£¬¹Ì¶¨°ü³¤Ä£Ê½
0x15C0	0x1D11    ADDS	R1, R2, #4
0x15C2	0x2000    MOVS	R0, #0
0x15C4	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 639 :: 		pcBuffer[5]  = 0x00;   //ÓÃÓÚ¿É±ä°ü³¤Ä£Ê½£¬¶¨ÒåÄÄ¸ö Field °üº¬ÁË length Filed
0x15C6	0x1D51    ADDS	R1, R2, #5
0x15C8	0x2000    MOVS	R0, #0
0x15CA	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 640 :: 		pcBuffer[6]  = 0x00;   // ÓÃÓÚ¿É±ä°ü³¤Ä£Ê½£¬µ÷Õû¿É±ä°ü³¤µÄ length
0x15CC	0x1D91    ADDS	R1, R2, #6
0x15CE	0x2000    MOVS	R0, #0
0x15D0	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 645 :: 		pcBuffer[0]   = 0x11;
0x15D2	0x2011    MOVS	R0, #17
0x15D4	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 646 :: 		pcBuffer[1]   = 0x12;    // 0x120d
0x15D6	0x1C51    ADDS	R1, R2, #1
0x15D8	0x2012    MOVS	R0, #18
0x15DA	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 647 :: 		pcBuffer[2]   = 0x0c;    // ¹² 12¸ö²ÎÊý
0x15DC	0x1C91    ADDS	R1, R2, #2
0x15DE	0x200C    MOVS	R0, #12
0x15E0	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 648 :: 		pcBuffer[3]   = 0x0d;   // 0x120d
0x15E2	0x1CD1    ADDS	R1, R2, #3
0x15E4	0x200D    MOVS	R0, #13
0x15E6	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 649 :: 		pcBuffer[4]   = 0x00;   //  Field 1 µÄ³¤¶È £¨¸ß4Î»£©
0x15E8	0x1D11    ADDS	R1, R2, #4
0x15EA	0x2000    MOVS	R0, #0
0x15EC	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 650 :: 		pcBuffer[5]   = payload_length;   //  field 1 µÄ³¤¶È£¬ £¨µÍ 8Î»), ×Ü¹²14¸ö×Ö½Ú
0x15EE	0x1D51    ADDS	R1, R2, #5
0x15F0	0x200E    MOVS	R0, #14
0x15F2	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 651 :: 		pcBuffer[6]   = 0x04;   // field 1 ²»ÊÇ 4FSK£¬manchest, whiting, PN9,
0x15F4	0x1D91    ADDS	R1, R2, #6
0x15F6	0x2004    MOVS	R0, #4
0x15F8	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 652 :: 		pcBuffer[7]   = 0xaa;   // field 1 crc enble, check enbale, ·¢ÉäÒ²ÓÐCRC£¬cRCµÄSeed ºÍCRC_seedÀïÃæµÄÒ»Ñù
0x15FA	0x1DD1    ADDS	R1, R2, #7
0x15FC	0x20AA    MOVS	R0, #170
0x15FE	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 653 :: 		pcBuffer[8]   = 0x00;  //  field2 µÄ³¤¶È£¨¸ß4Î»£©
0x1600	0xF2020108  ADDW	R1, R2, #8
0x1604	0x2000    MOVS	R0, #0
0x1606	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 654 :: 		pcBuffer[9]   = 0x00;    //  field 2 µÄ³¤¶È£¬ £¨µÍ 8Î»)£¬ ³¤¶È = 0 ±íÊ¾Õâ¸öfield Ã»ÓÐÊ¹ÓÃ
0x1608	0xF2020109  ADDW	R1, R2, #9
0x160C	0x2000    MOVS	R0, #0
0x160E	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 655 :: 		pcBuffer[10]  = 0x00;   // field 2 ²»ÊÇ 4FSK£¬manchest, whiting, PN9
0x1610	0xF202010A  ADDW	R1, R2, #10
0x1614	0x2000    MOVS	R0, #0
0x1616	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 656 :: 		pcBuffer[11]  = 0x00;  //  field 2 µÄCRCÉèÖÃ
0x1618	0xF202010B  ADDW	R1, R2, #11
0x161C	0x2000    MOVS	R0, #0
0x161E	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 657 :: 		pcBuffer[12]  = 0x00;  //  field 3 µÄ³¤¶È£¬ £¨µÍ 8Î»)£¬ ³¤¶È = 0 ±íÊ¾Õâ¸öfield Ã»ÓÐÊ¹ÓÃ
0x1620	0xF202010C  ADDW	R1, R2, #12
0x1624	0x2000    MOVS	R0, #0
0x1626	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 658 :: 		pcBuffer[13]  = 0x00;    //  field 3 µÄ³¤¶È£¬ £¨µÍ 8Î»)£¬ ³¤¶È = 0 ±íÊ¾Õâ¸öfield Ã»ÓÐÊ¹ÓÃ
0x1628	0xF202010D  ADDW	R1, R2, #13
0x162C	0x2000    MOVS	R0, #0
0x162E	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 659 :: 		pcBuffer[14]  = 0x00;   //  field 3 ²»ÊÇ 4FSK£¬manchest, whiting, PN9
0x1630	0xF202010E  ADDW	R1, R2, #14
0x1634	0x2000    MOVS	R0, #0
0x1636	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 660 :: 		pcBuffer[15]  = 0x00;  //  field 3 µÄCRCÉèÖÃ
0x1638	0xF202010F  ADDW	R1, R2, #15
0x163C	0x2000    MOVS	R0, #0
0x163E	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 664 :: 		pcBuffer[0]   = 0x11;
0x1640	0x2011    MOVS	R0, #17
0x1642	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 665 :: 		pcBuffer[1]   = 0x12;    // 0x1219
0x1644	0x1C51    ADDS	R1, R2, #1
0x1646	0x2012    MOVS	R0, #18
0x1648	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 666 :: 		pcBuffer[2]   = 0x08;    // ¹² 8¸ö²ÎÊý
0x164A	0x1C91    ADDS	R1, R2, #2
0x164C	0x2008    MOVS	R0, #8
0x164E	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 667 :: 		pcBuffer[3]   = 0x19;   // 0x1219
0x1650	0x1CD1    ADDS	R1, R2, #3
0x1652	0x2019    MOVS	R0, #25
0x1654	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 668 :: 		pcBuffer[4]   = 0x00;   //  field4 µÄ³¤¶È£¨¸ß4Î»£©
0x1656	0x1D11    ADDS	R1, R2, #4
0x1658	0x2000    MOVS	R0, #0
0x165A	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 669 :: 		pcBuffer[5]   = 0x00;   //  field 4 µÄ³¤¶È£¬ £¨µÍ 8Î»)£¬ ³¤¶È = 0 ±íÊ¾Õâ¸öfield Ã»ÓÐÊ¹ÓÃ
0x165C	0x1D51    ADDS	R1, R2, #5
0x165E	0x2000    MOVS	R0, #0
0x1660	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 670 :: 		pcBuffer[6]   = 0x00;   //   field 4 ²»ÊÇ 4FSK£¬manchest, whiting, PN9
0x1662	0x1D91    ADDS	R1, R2, #6
0x1664	0x2000    MOVS	R0, #0
0x1666	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 671 :: 		pcBuffer[7]   = 0x00;   // field 4 µÄCRCÉèÖÃ
0x1668	0x1DD1    ADDS	R1, R2, #7
0x166A	0x2000    MOVS	R0, #0
0x166C	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 672 :: 		pcBuffer[8]   = 0x00;  //  field5 µÄ³¤¶È£¨¸ß4Î»£©
0x166E	0xF2020108  ADDW	R1, R2, #8
0x1672	0x2000    MOVS	R0, #0
0x1674	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 673 :: 		pcBuffer[9]   = 0x00;    //   field 5 µÄ³¤¶È£¬ £¨µÍ 8Î»)£¬ ³¤¶È = 0 ±íÊ¾Õâ¸öfield Ã»ÓÐÊ¹ÓÃ
0x1676	0xF2020109  ADDW	R1, R2, #9
0x167A	0x2000    MOVS	R0, #0
0x167C	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 674 :: 		pcBuffer[10]  = 0x00;   //  field 5 ²»ÊÇ 4FSK£¬manchest, whiting, PN9
0x167E	0xF202010A  ADDW	R1, R2, #10
0x1682	0x2000    MOVS	R0, #0
0x1684	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 675 :: 		pcBuffer[11]  = 0x00;   // field 5 µÄCRCÉèÖÃ
0x1686	0xF202010B  ADDW	R1, R2, #11
0x168A	0x2000    MOVS	R0, #0
0x168C	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 682 :: 		pcBuffer[0] = 0x11;
0x168E	0x2011    MOVS	R0, #17
0x1690	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 683 :: 		pcBuffer[1]  = 0x20;    // 0x200c
0x1692	0x1C51    ADDS	R1, R2, #1
0x1694	0x2020    MOVS	R0, #32
0x1696	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 684 :: 		pcBuffer[2]  = 0x01;    // ¹² 1¸ö²ÎÊý
0x1698	0x1C91    ADDS	R1, R2, #2
0x169A	0x2001    MOVS	R0, #1
0x169C	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 685 :: 		pcBuffer[3]  = 0x0c;   // 0x200c
0x169E	0x1CD1    ADDS	R1, R2, #3
0x16A0	0x200C    MOVS	R0, #12
0x16A2	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 687 :: 		if(freq3<8)
0x16A4	0x486C    LDR	R0, [PC, #432]
0x16A6	0x7800    LDRB	R0, [R0, #0]
0x16A8	0x2808    CMP	R0, #8
0x16AA	0xD216    BCS	L_rf4463Config60
;RF4463PRO.c, 689 :: 		if(dataRate>=dr_256k)
0x16AC	0x486B    LDR	R0, [PC, #428]
0x16AE	0x7800    LDRB	R0, [R0, #0]
0x16B0	0x2808    CMP	R0, #8
0x16B2	0xD304    BCC	L_rf4463Config61
;RF4463PRO.c, 690 :: 		pcBuffer[4]  = 0x4f;
0x16B4	0xA801    ADD	R0, SP, #4
0x16B6	0x1D01    ADDS	R1, R0, #4
0x16B8	0x204F    MOVS	R0, #79
0x16BA	0x7008    STRB	R0, [R1, #0]
0x16BC	0xE00C    B	L_rf4463Config62
L_rf4463Config61:
;RF4463PRO.c, 691 :: 		else if(dataRate>=dr_19p2)
0x16BE	0x4867    LDR	R0, [PC, #412]
0x16C0	0x7800    LDRB	R0, [R0, #0]
0x16C2	0x2804    CMP	R0, #4
0x16C4	0xD304    BCC	L_rf4463Config63
;RF4463PRO.c, 692 :: 		pcBuffer[4]  = 0x5e;
0x16C6	0xA801    ADD	R0, SP, #4
0x16C8	0x1D01    ADDS	R1, R0, #4
0x16CA	0x205E    MOVS	R0, #94
0x16CC	0x7008    STRB	R0, [R1, #0]
0x16CE	0xE003    B	L_rf4463Config64
L_rf4463Config63:
;RF4463PRO.c, 694 :: 		pcBuffer[4]  = 0xd2;
0x16D0	0xA801    ADD	R0, SP, #4
0x16D2	0x1D01    ADDS	R1, R0, #4
0x16D4	0x20D2    MOVS	R0, #210
0x16D6	0x7008    STRB	R0, [R1, #0]
L_rf4463Config64:
L_rf4463Config62:
;RF4463PRO.c, 695 :: 		}
0x16D8	0xE015    B	L_rf4463Config65
L_rf4463Config60:
;RF4463PRO.c, 698 :: 		if(dataRate>=dr_115p2)
0x16DA	0x4860    LDR	R0, [PC, #384]
0x16DC	0x7800    LDRB	R0, [R0, #0]
0x16DE	0x2807    CMP	R0, #7
0x16E0	0xD304    BCC	L_rf4463Config66
;RF4463PRO.c, 699 :: 		pcBuffer[4]  = 0x69;     // 15k
0x16E2	0xA801    ADD	R0, SP, #4
0x16E4	0x1D01    ADDS	R1, R0, #4
0x16E6	0x2069    MOVS	R0, #105
0x16E8	0x7008    STRB	R0, [R1, #0]
0x16EA	0xE00C    B	L_rf4463Config67
L_rf4463Config66:
;RF4463PRO.c, 700 :: 		else if(dataRate>=dr_19p2)
0x16EC	0x485B    LDR	R0, [PC, #364]
0x16EE	0x7800    LDRB	R0, [R0, #0]
0x16F0	0x2804    CMP	R0, #4
0x16F2	0xD304    BCC	L_rf4463Config68
;RF4463PRO.c, 701 :: 		pcBuffer[4]  = 0x5e;     // 10k
0x16F4	0xA801    ADD	R0, SP, #4
0x16F6	0x1D01    ADDS	R1, R0, #4
0x16F8	0x205E    MOVS	R0, #94
0x16FA	0x7008    STRB	R0, [R1, #0]
0x16FC	0xE003    B	L_rf4463Config69
L_rf4463Config68:
;RF4463PRO.c, 703 :: 		pcBuffer[4]  = 0x18; // 8k
0x16FE	0xA801    ADD	R0, SP, #4
0x1700	0x1D01    ADDS	R1, R0, #4
0x1702	0x2018    MOVS	R0, #24
0x1704	0x7008    STRB	R0, [R1, #0]
L_rf4463Config69:
L_rf4463Config67:
;RF4463PRO.c, 704 :: 		}
L_rf4463Config65:
;RF4463PRO.c, 716 :: 		pcBuffer[0] = 0x11;
0x1706	0xAA01    ADD	R2, SP, #4
0x1708	0x2011    MOVS	R0, #17
0x170A	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 717 :: 		pcBuffer[1] = 0x20;    // 0x204e
0x170C	0x1C51    ADDS	R1, R2, #1
0x170E	0x2020    MOVS	R0, #32
0x1710	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 718 :: 		pcBuffer[2] = 0x01;    // ¹² 1¸ö²ÎÊý
0x1712	0x1C91    ADDS	R1, R2, #2
0x1714	0x2001    MOVS	R0, #1
0x1716	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 719 :: 		pcBuffer[3] = 0x4e;   // 0x204e
0x1718	0x1CD1    ADDS	R1, R2, #3
0x171A	0x204E    MOVS	R0, #78
0x171C	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 720 :: 		if(dataRate==dr_500)
0x171E	0x484F    LDR	R0, [PC, #316]
0x1720	0x7800    LDRB	R0, [R0, #0]
0x1722	0x280A    CMP	R0, #10
0x1724	0xD104    BNE	L_rf4463Config70
;RF4463PRO.c, 721 :: 		pcBuffer[4]  = 0x3a;
0x1726	0xA801    ADD	R0, SP, #4
0x1728	0x1D01    ADDS	R1, R0, #4
0x172A	0x203A    MOVS	R0, #58
0x172C	0x7008    STRB	R0, [R1, #0]
0x172E	0xE003    B	L_rf4463Config71
L_rf4463Config70:
;RF4463PRO.c, 723 :: 		pcBuffer[4]  = 0x40;  //  rssi ¶ÁÊýÆ«²î£¬ÓëÕæÊµÖµµÄ²îÖµ
0x1730	0xA801    ADD	R0, SP, #4
0x1732	0x1D01    ADDS	R1, R0, #4
0x1734	0x2040    MOVS	R0, #64
0x1736	0x7008    STRB	R0, [R1, #0]
L_rf4463Config71:
;RF4463PRO.c, 732 :: 		pcBuffer[0] = 0x11;
0x1738	0xAA01    ADD	R2, SP, #4
0x173A	0x2011    MOVS	R0, #17
0x173C	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 733 :: 		pcBuffer[1]  = 0x22;    // 0x2200
0x173E	0x1C51    ADDS	R1, R2, #1
0x1740	0x2022    MOVS	R0, #34
0x1742	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 734 :: 		pcBuffer[2]  = 0x04;    // ¹² 4¸ö²ÎÊý
0x1744	0x1C91    ADDS	R1, R2, #2
0x1746	0x2004    MOVS	R0, #4
0x1748	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 735 :: 		pcBuffer[3]  = 0x00;   // 0x2200
0x174A	0x1CD1    ADDS	R1, R2, #3
0x174C	0x2000    MOVS	R0, #0
0x174E	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 736 :: 		pcBuffer[4]  = 0x08;  //0x10;   //   PA mode  = default , Ê¹ÓÃClass E Ä£Ê½£¬¶ø²»ÊÇ Switch Current Ä£Ê½  ????????
0x1750	0x1D11    ADDS	R1, R2, #4
0x1752	0x2008    MOVS	R0, #8
0x1754	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 737 :: 		if(power==7)
0x1756	0x4842    LDR	R0, [PC, #264]
0x1758	0x7800    LDRB	R0, [R0, #0]
0x175A	0x2807    CMP	R0, #7
0x175C	0xD104    BNE	L_rf4463Config72
;RF4463PRO.c, 738 :: 		pcBuffer[5]  = 127;   //  ÉèÖÃÎª×î´ó¹¦ÂÊ
0x175E	0xA801    ADD	R0, SP, #4
0x1760	0x1D41    ADDS	R1, R0, #5
0x1762	0x207F    MOVS	R0, #127
0x1764	0x7008    STRB	R0, [R1, #0]
0x1766	0xE039    B	L_rf4463Config73
L_rf4463Config72:
;RF4463PRO.c, 739 :: 		else if(power==6)
0x1768	0x483D    LDR	R0, [PC, #244]
0x176A	0x7800    LDRB	R0, [R0, #0]
0x176C	0x2806    CMP	R0, #6
0x176E	0xD104    BNE	L_rf4463Config74
;RF4463PRO.c, 740 :: 		pcBuffer[5]  = 50;
0x1770	0xA801    ADD	R0, SP, #4
0x1772	0x1D41    ADDS	R1, R0, #5
0x1774	0x2032    MOVS	R0, #50
0x1776	0x7008    STRB	R0, [R1, #0]
0x1778	0xE030    B	L_rf4463Config75
L_rf4463Config74:
;RF4463PRO.c, 741 :: 		else if(power==5)
0x177A	0x4839    LDR	R0, [PC, #228]
0x177C	0x7800    LDRB	R0, [R0, #0]
0x177E	0x2805    CMP	R0, #5
0x1780	0xD104    BNE	L_rf4463Config76
;RF4463PRO.c, 742 :: 		pcBuffer[5]  = 30;
0x1782	0xA801    ADD	R0, SP, #4
0x1784	0x1D41    ADDS	R1, R0, #5
0x1786	0x201E    MOVS	R0, #30
0x1788	0x7008    STRB	R0, [R1, #0]
0x178A	0xE027    B	L_rf4463Config77
L_rf4463Config76:
;RF4463PRO.c, 743 :: 		else if(power==4)
0x178C	0x4834    LDR	R0, [PC, #208]
0x178E	0x7800    LDRB	R0, [R0, #0]
0x1790	0x2804    CMP	R0, #4
0x1792	0xD104    BNE	L_rf4463Config78
;RF4463PRO.c, 744 :: 		pcBuffer[5]  = 20;
0x1794	0xA801    ADD	R0, SP, #4
0x1796	0x1D41    ADDS	R1, R0, #5
0x1798	0x2014    MOVS	R0, #20
0x179A	0x7008    STRB	R0, [R1, #0]
0x179C	0xE01E    B	L_rf4463Config79
L_rf4463Config78:
;RF4463PRO.c, 745 :: 		else if(power==3)
0x179E	0x4830    LDR	R0, [PC, #192]
0x17A0	0x7800    LDRB	R0, [R0, #0]
0x17A2	0x2803    CMP	R0, #3
0x17A4	0xD104    BNE	L_rf4463Config80
;RF4463PRO.c, 746 :: 		pcBuffer[5]  = 15;
0x17A6	0xA801    ADD	R0, SP, #4
0x17A8	0x1D41    ADDS	R1, R0, #5
0x17AA	0x200F    MOVS	R0, #15
0x17AC	0x7008    STRB	R0, [R1, #0]
0x17AE	0xE015    B	L_rf4463Config81
L_rf4463Config80:
;RF4463PRO.c, 747 :: 		else if(power==2)
0x17B0	0x482B    LDR	R0, [PC, #172]
0x17B2	0x7800    LDRB	R0, [R0, #0]
0x17B4	0x2802    CMP	R0, #2
0x17B6	0xD104    BNE	L_rf4463Config82
;RF4463PRO.c, 748 :: 		pcBuffer[5]  = 10;
0x17B8	0xA801    ADD	R0, SP, #4
0x17BA	0x1D41    ADDS	R1, R0, #5
0x17BC	0x200A    MOVS	R0, #10
0x17BE	0x7008    STRB	R0, [R1, #0]
0x17C0	0xE00C    B	L_rf4463Config83
L_rf4463Config82:
;RF4463PRO.c, 749 :: 		else if(power==1)
0x17C2	0x4827    LDR	R0, [PC, #156]
0x17C4	0x7800    LDRB	R0, [R0, #0]
0x17C6	0x2801    CMP	R0, #1
0x17C8	0xD104    BNE	L_rf4463Config84
;RF4463PRO.c, 750 :: 		pcBuffer[5]  = 7;
0x17CA	0xA801    ADD	R0, SP, #4
0x17CC	0x1D41    ADDS	R1, R0, #5
0x17CE	0x2007    MOVS	R0, #7
0x17D0	0x7008    STRB	R0, [R1, #0]
0x17D2	0xE003    B	L_rf4463Config85
L_rf4463Config84:
;RF4463PRO.c, 752 :: 		pcBuffer[5]  = 4;
0x17D4	0xA801    ADD	R0, SP, #4
0x17D6	0x1D41    ADDS	R1, R0, #5
0x17D8	0x2004    MOVS	R0, #4
0x17DA	0x7008    STRB	R0, [R1, #0]
L_rf4463Config85:
L_rf4463Config83:
L_rf4463Config81:
L_rf4463Config79:
L_rf4463Config77:
L_rf4463Config75:
L_rf4463Config73:
;RF4463PRO.c, 753 :: 		pcBuffer[6]  =0x00; //???????? 0x00;   // CLK duty = 50%£¬ ÆäËû = Default
0x17DC	0xA801    ADD	R0, SP, #4
0x17DE	0x1D81    ADDS	R1, R0, #6
0x17E0	0x2000    MOVS	R0, #0
0x17E2	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 754 :: 		if((dataRate<=dr_115p2)||(dataRate==dr_500))
0x17E4	0x481D    LDR	R0, [PC, #116]
0x17E6	0x7800    LDRB	R0, [R0, #0]
0x17E8	0x2807    CMP	R0, #7
0x17EA	0xD904    BLS	L__rf4463Config128
0x17EC	0x481B    LDR	R0, [PC, #108]
0x17EE	0x7800    LDRB	R0, [R0, #0]
0x17F0	0x280A    CMP	R0, #10
0x17F2	0xD000    BEQ	L__rf4463Config127
0x17F4	0xE004    B	L_rf4463Config88
L__rf4463Config128:
L__rf4463Config127:
;RF4463PRO.c, 755 :: 		pcBuffer[7]  = 0x3d;  // ???????? 0x5d;   // PA ramp time = default
0x17F6	0xA801    ADD	R0, SP, #4
0x17F8	0x1DC1    ADDS	R1, R0, #7
0x17FA	0x203D    MOVS	R0, #61
0x17FC	0x7008    STRB	R0, [R1, #0]
0x17FE	0xE003    B	L_rf4463Config89
L_rf4463Config88:
;RF4463PRO.c, 757 :: 		pcBuffer[7]  = 0x5d;
0x1800	0xA801    ADD	R0, SP, #4
0x1802	0x1DC1    ADDS	R1, R0, #7
0x1804	0x205D    MOVS	R0, #93
0x1806	0x7008    STRB	R0, [R1, #0]
L_rf4463Config89:
;RF4463PRO.c, 764 :: 		pcBuffer[0] = 0x11;
0x1808	0xAA01    ADD	R2, SP, #4
0x180A	0x2011    MOVS	R0, #17
0x180C	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 765 :: 		pcBuffer[1]  = 0x30;    // 0x3000
0x180E	0x1C51    ADDS	R1, R2, #1
0x1810	0x2030    MOVS	R0, #48
0x1812	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 766 :: 		pcBuffer[2]  = 0x0c;    // ¹² 12¸ö²ÎÊý
0x1814	0x1C91    ADDS	R1, R2, #2
0x1816	0x200C    MOVS	R0, #12
0x1818	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 767 :: 		pcBuffer[3]  = 0x00;   // 0x3000
0x181A	0x1CD1    ADDS	R1, R2, #3
0x181C	0x2000    MOVS	R0, #0
0x181E	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 768 :: 		pcBuffer[4]  = 's';    //0x00;   //  match 1 µÄÖµ
0x1820	0x1D11    ADDS	R1, R2, #4
0x1822	0x2073    MOVS	R0, #115
0x1824	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 769 :: 		pcBuffer[5]  = 0xff;   //  match 1 mask
0x1826	0x1D51    ADDS	R1, R2, #5
0x1828	0x20FF    MOVS	R0, #255
0x182A	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 770 :: 		pcBuffer[6]  = 0x40;   // eable match 1, match 1µÄÖµÓëÍ¬²½×ÖµÄÏà¾àµÄ¾àÀë, 0 = match
0x182C	0x1D91    ADDS	R1, R2, #6
0x182E	0x2040    MOVS	R0, #64
0x1830	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 771 :: 		pcBuffer[7]  = 'w';    //  match 2 µÄÖµ
0x1832	0x1DD1    ADDS	R1, R2, #7
0x1834	0x2077    MOVS	R0, #119
0x1836	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 772 :: 		pcBuffer[8]  = 0xff;   //  match 2 mask
0x1838	0xF2020108  ADDW	R1, R2, #8
0x183C	0x20FF    MOVS	R0, #255
0x183E	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 773 :: 		pcBuffer[9]  = 0x01;   // enable match 2, match 2µÄÖµÓëÍ¬²½×ÖµÄÏà¾àµÄ¾àÀë  , and function
0x1840	0xF2020109  ADDW	R1, R2, #9
0x1844	0x2001    MOVS	R0, #1
0x1846	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 774 :: 		pcBuffer[10] = 'w';   //     match 3 µÄÖµ
0x1848	0xF202010A  ADDW	R1, R2, #10
0x184C	0x2077    MOVS	R0, #119
0x184E	0x7008    STRB	R0, [R1, #0]
0x1850	0xF000B808  B	#16
0x1854	0x008F2000  	_mode+0
0x1858	0x008E2000  	_freq3+0
0x185C	0x008D2000  	_dataRate+0
0x1860	0x00902000  	_power+0
;RF4463PRO.c, 775 :: 		pcBuffer[11]  =0xff;;    //  match 3 mask
0x1864	0xF202010B  ADDW	R1, R2, #11
0x1868	0x20FF    MOVS	R0, #255
0x186A	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 776 :: 		pcBuffer[12]  =0x02;;    // enable match 3, match 3µÄÖµÓëÍ¬²½×ÖµÄÏà¾àµÄ¾àÀë    and function
0x186C	0xF202010C  ADDW	R1, R2, #12
0x1870	0x2002    MOVS	R0, #2
0x1872	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 777 :: 		pcBuffer[13]  = 'x';    //   match 4 µÄÖµ
0x1874	0xF202010D  ADDW	R1, R2, #13
0x1878	0x2078    MOVS	R0, #120
0x187A	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 778 :: 		pcBuffer[14]  = 0xff;   //   match 4 mask
0x187C	0xF202010E  ADDW	R1, R2, #14
0x1880	0x20FF    MOVS	R0, #255
0x1882	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 779 :: 		pcBuffer[15]  = 0x03;   //  enable match 4, match 4µÄÖµÓëÍ¬²½×ÖµÄÏà¾àµÄ¾àÀë    and function
0x1884	0xF202010F  ADDW	R1, R2, #15
0x1888	0x2003    MOVS	R0, #3
0x188A	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 782 :: 		rf_init_freq();
0x188C	0xF7FFFA48  BL	_rf_init_freq+0
;RF4463PRO.c, 783 :: 		}
L_end_rf4463Config:
0x1890	0xF8DDE000  LDR	LR, [SP, #0]
0x1894	0xB006    ADD	SP, SP, #24
0x1896	0x4770    BX	LR
; end of _rf4463Config
_GPIO_SET:
;RF4463PRO.c, 1020 :: 		void GPIO_SET(unsigned char mydata)
; mydata start address is: 0 (R0)
0x0EC0	0xB082    SUB	SP, SP, #8
; mydata end address is: 0 (R0)
; mydata start address is: 0 (R0)
;RF4463PRO.c, 1024 :: 		pcBuffer[0] = 0x13;     // gpio ÉèÖÃ
0x0EC2	0xAA00    ADD	R2, SP, #0
0x0EC4	0x2113    MOVS	R1, #19
0x0EC6	0x7011    STRB	R1, [R2, #0]
;RF4463PRO.c, 1026 :: 		switch(mydata)
0x0EC8	0xE01F    B	L_GPIO_SET105
; mydata end address is: 0 (R0)
;RF4463PRO.c, 1028 :: 		case tx_normal:
L_GPIO_SET107:
;RF4463PRO.c, 1029 :: 		case rx_normal:
L_GPIO_SET108:
;RF4463PRO.c, 1030 :: 		pcBuffer[1]  = 3;                // GPIO0=1
0x0ECA	0xAB00    ADD	R3, SP, #0
0x0ECC	0x1C5A    ADDS	R2, R3, #1
0x0ECE	0x2103    MOVS	R1, #3
0x0ED0	0x7011    STRB	R1, [R2, #0]
;RF4463PRO.c, 1031 :: 		pcBuffer[2]  = 2;                // GPIO1=0
0x0ED2	0x1C9A    ADDS	R2, R3, #2
0x0ED4	0x2102    MOVS	R1, #2
0x0ED6	0x7011    STRB	R1, [R2, #0]
;RF4463PRO.c, 1032 :: 		break;
0x0ED8	0xE021    B	L_GPIO_SET106
;RF4463PRO.c, 1034 :: 		case tx_test:
L_GPIO_SET109:
;RF4463PRO.c, 1035 :: 		pcBuffer[1]  = 3;                // GPIO0=1
0x0EDA	0xAB00    ADD	R3, SP, #0
0x0EDC	0x1C5A    ADDS	R2, R3, #1
0x0EDE	0x2103    MOVS	R1, #3
0x0EE0	0x7011    STRB	R1, [R2, #0]
;RF4463PRO.c, 1036 :: 		pcBuffer[2]  = 3;                // GPIO1=1
0x0EE2	0x1C9A    ADDS	R2, R3, #2
0x0EE4	0x2103    MOVS	R1, #3
0x0EE6	0x7011    STRB	R1, [R2, #0]
;RF4463PRO.c, 1037 :: 		break;
0x0EE8	0xE019    B	L_GPIO_SET106
;RF4463PRO.c, 1039 :: 		case rx_test:
L_GPIO_SET110:
;RF4463PRO.c, 1040 :: 		pcBuffer[1]  = 2;                // GPIO0=0
0x0EEA	0xAB00    ADD	R3, SP, #0
0x0EEC	0x1C5A    ADDS	R2, R3, #1
0x0EEE	0x2102    MOVS	R1, #2
0x0EF0	0x7011    STRB	R1, [R2, #0]
;RF4463PRO.c, 1041 :: 		pcBuffer[2]  = 20;               // GPIO1=RX DATA
0x0EF2	0x1C9A    ADDS	R2, R3, #2
0x0EF4	0x2114    MOVS	R1, #20
0x0EF6	0x7011    STRB	R1, [R2, #0]
;RF4463PRO.c, 1042 :: 		break;
0x0EF8	0xE011    B	L_GPIO_SET106
;RF4463PRO.c, 1044 :: 		case rf_off:
L_GPIO_SET111:
;RF4463PRO.c, 1045 :: 		pcBuffer[1]  = 2;                // GPIO0=0
0x0EFA	0xAB00    ADD	R3, SP, #0
0x0EFC	0x1C5A    ADDS	R2, R3, #1
0x0EFE	0x2102    MOVS	R1, #2
0x0F00	0x7011    STRB	R1, [R2, #0]
;RF4463PRO.c, 1046 :: 		pcBuffer[2]  = 2;                // GPIO1=0
0x0F02	0x1C9A    ADDS	R2, R3, #2
0x0F04	0x2102    MOVS	R1, #2
0x0F06	0x7011    STRB	R1, [R2, #0]
;RF4463PRO.c, 1047 :: 		break;
0x0F08	0xE009    B	L_GPIO_SET106
;RF4463PRO.c, 1048 :: 		}
L_GPIO_SET105:
; mydata start address is: 0 (R0)
0x0F0A	0x2800    CMP	R0, #0
0x0F0C	0xD0DD    BEQ	L_GPIO_SET107
0x0F0E	0x2801    CMP	R0, #1
0x0F10	0xD0DB    BEQ	L_GPIO_SET108
0x0F12	0x2802    CMP	R0, #2
0x0F14	0xD0E1    BEQ	L_GPIO_SET109
0x0F16	0x2803    CMP	R0, #3
0x0F18	0xD0E7    BEQ	L_GPIO_SET110
0x0F1A	0x2804    CMP	R0, #4
0x0F1C	0xD0ED    BEQ	L_GPIO_SET111
; mydata end address is: 0 (R0)
L_GPIO_SET106:
;RF4463PRO.c, 1050 :: 		pcBuffer[3]  = 0x21;  //0x20;   //  gpio2, h = tx mode
0x0F1E	0xAB00    ADD	R3, SP, #0
0x0F20	0x1CDA    ADDS	R2, R3, #3
0x0F22	0x2121    MOVS	R1, #33
0x0F24	0x7011    STRB	R1, [R2, #0]
;RF4463PRO.c, 1051 :: 		pcBuffer[4]  = 0x20; // 0x14;  //   gpio3
0x0F26	0x1D1A    ADDS	R2, R3, #4
0x0F28	0x2120    MOVS	R1, #32
0x0F2A	0x7011    STRB	R1, [R2, #0]
;RF4463PRO.c, 1052 :: 		pcBuffer[5]  = 0x27;   // nIRQ
0x0F2C	0x1D5A    ADDS	R2, R3, #5
0x0F2E	0x2127    MOVS	R1, #39
0x0F30	0x7011    STRB	R1, [R2, #0]
;RF4463PRO.c, 1053 :: 		pcBuffer[6]  = 0x0b;  // sdo
0x0F32	0x1D9A    ADDS	R2, R3, #6
0x0F34	0x210B    MOVS	R1, #11
0x0F36	0x7011    STRB	R1, [R2, #0]
;RF4463PRO.c, 1055 :: 		}
L_end_GPIO_SET:
0x0F38	0xB002    ADD	SP, SP, #8
0x0F3A	0x4770    BX	LR
; end of _GPIO_SET
_vBufferSetToZero:
;RF4463PRO.c, 1175 :: 		void vBufferSetToZero( uint8_t * pcBufferToClean, uint16_t uslength ){
; uslength start address is: 4 (R1)
; pcBufferToClean start address is: 0 (R0)
0x0CFC	0xB081    SUB	SP, SP, #4
; uslength end address is: 4 (R1)
; pcBufferToClean end address is: 0 (R0)
; pcBufferToClean start address is: 0 (R0)
; uslength start address is: 4 (R1)
;RF4463PRO.c, 1176 :: 		uint16_t usPosition = 0;
;RF4463PRO.c, 1178 :: 		for( usPosition = 0; usPosition < uslength; usPosition++ ){
; usPosition start address is: 16 (R4)
0x0CFE	0x2400    MOVS	R4, #0
; pcBufferToClean end address is: 0 (R0)
; uslength end address is: 4 (R1)
; usPosition end address is: 16 (R4)
0x0D00	0xF8AD1000  STRH	R1, [SP, #0]
0x0D04	0x4601    MOV	R1, R0
0x0D06	0xF8BD0000  LDRH	R0, [SP, #0]
L_vBufferSetToZero123:
; usPosition start address is: 16 (R4)
; pcBufferToClean start address is: 4 (R1)
; uslength start address is: 0 (R0)
; pcBufferToClean start address is: 4 (R1)
; pcBufferToClean end address is: 4 (R1)
0x0D0A	0x4284    CMP	R4, R0
0x0D0C	0xD205    BCS	L_vBufferSetToZero124
; pcBufferToClean end address is: 4 (R1)
;RF4463PRO.c, 1179 :: 		pcBufferToClean[ usPosition ] = 0x00;
; pcBufferToClean start address is: 4 (R1)
0x0D0E	0x190B    ADDS	R3, R1, R4
0x0D10	0x2200    MOVS	R2, #0
0x0D12	0x701A    STRB	R2, [R3, #0]
;RF4463PRO.c, 1178 :: 		for( usPosition = 0; usPosition < uslength; usPosition++ ){
0x0D14	0x1C64    ADDS	R4, R4, #1
0x0D16	0xB2A4    UXTH	R4, R4
;RF4463PRO.c, 1180 :: 		}
; uslength end address is: 0 (R0)
; pcBufferToClean end address is: 4 (R1)
; usPosition end address is: 16 (R4)
0x0D18	0xE7F7    B	L_vBufferSetToZero123
L_vBufferSetToZero124:
;RF4463PRO.c, 1181 :: 		}
L_end_vBufferSetToZero:
0x0D1A	0xB001    ADD	SP, SP, #4
0x0D1C	0x4770    BX	LR
; end of _vBufferSetToZero
_rf_init_freq:
;RF4463PRO.c, 1072 :: 		void rf_init_freq(void)
0x0D20	0xB086    SUB	SP, SP, #24
;RF4463PRO.c, 1079 :: 		frequency = (freq3 * 100) + (freq2 * 10) + freq1;
0x0D22	0x485E    LDR	R0, [PC, #376]
0x0D24	0x7801    LDRB	R1, [R0, #0]
0x0D26	0x2064    MOVS	R0, #100
0x0D28	0xB200    SXTH	R0, R0
0x0D2A	0xFB01F200  MUL	R2, R1, R0
0x0D2E	0xB212    SXTH	R2, R2
0x0D30	0x485B    LDR	R0, [PC, #364]
0x0D32	0x7801    LDRB	R1, [R0, #0]
0x0D34	0x200A    MOVS	R0, #10
0x0D36	0xB200    SXTH	R0, R0
0x0D38	0x4348    MULS	R0, R1, R0
0x0D3A	0xB200    SXTH	R0, R0
0x0D3C	0x1812    ADDS	R2, R2, R0
0x0D3E	0x4859    LDR	R0, [PC, #356]
0x0D40	0x7800    LDRB	R0, [R0, #0]
0x0D42	0x1812    ADDS	R2, R2, R0
; frequency start address is: 8 (R2)
0x0D44	0xB212    SXTH	R2, R2
;RF4463PRO.c, 1080 :: 		frequency = (frequency * 10000) + 5000;
0x0D46	0xF2427010  MOVW	R0, #10000
0x0D4A	0xFB02F100  MUL	R1, R2, R0
; frequency end address is: 8 (R2)
0x0D4E	0xF2413088  MOVW	R0, #5000
0x0D52	0x1809    ADDS	R1, R1, R0
; frequency start address is: 8 (R2)
0x0D54	0x460A    MOV	R2, R1
;RF4463PRO.c, 1082 :: 		if(frequency>=7600000)                                  // 760~1050
0x0D56	0x4854    LDR	R0, [PC, #336]
0x0D58	0x4281    CMP	R1, R0
0x0D5A	0xD309    BCC	L_rf_init_freq112
;RF4463PRO.c, 1084 :: 		OUTDIV = 4;
0x0D5C	0x2004    MOVS	R0, #4
0x0D5E	0xF88D0000  STRB	R0, [SP, #0]
;RF4463PRO.c, 1085 :: 		BAND = 0;
0x0D62	0x2000    MOVS	R0, #0
0x0D64	0xF88D0002  STRB	R0, [SP, #2]
;RF4463PRO.c, 1086 :: 		VCO = 0xff;
0x0D68	0x20FF    MOVS	R0, #255
0x0D6A	0xF88D0001  STRB	R0, [SP, #1]
;RF4463PRO.c, 1087 :: 		}
0x0D6E	0xE03C    B	L_rf_init_freq113
L_rf_init_freq112:
;RF4463PRO.c, 1088 :: 		else if(frequency>=5460000)                             // 546~759.9
0x0D70	0x484E    LDR	R0, [PC, #312]
0x0D72	0x4282    CMP	R2, R0
0x0D74	0xD309    BCC	L_rf_init_freq114
;RF4463PRO.c, 1090 :: 		OUTDIV = 6;
0x0D76	0x2006    MOVS	R0, #6
0x0D78	0xF88D0000  STRB	R0, [SP, #0]
;RF4463PRO.c, 1091 :: 		BAND = 1;
0x0D7C	0x2001    MOVS	R0, #1
0x0D7E	0xF88D0002  STRB	R0, [SP, #2]
;RF4463PRO.c, 1092 :: 		VCO = 0xfe;
0x0D82	0x20FE    MOVS	R0, #254
0x0D84	0xF88D0001  STRB	R0, [SP, #1]
;RF4463PRO.c, 1093 :: 		}
0x0D88	0xE02F    B	L_rf_init_freq115
L_rf_init_freq114:
;RF4463PRO.c, 1094 :: 		else if(frequency>=3850000)                             // 385~545.9
0x0D8A	0x4849    LDR	R0, [PC, #292]
0x0D8C	0x4282    CMP	R2, R0
0x0D8E	0xD309    BCC	L_rf_init_freq116
;RF4463PRO.c, 1096 :: 		OUTDIV = 8;
0x0D90	0x2008    MOVS	R0, #8
0x0D92	0xF88D0000  STRB	R0, [SP, #0]
;RF4463PRO.c, 1097 :: 		BAND = 2;
0x0D96	0x2002    MOVS	R0, #2
0x0D98	0xF88D0002  STRB	R0, [SP, #2]
;RF4463PRO.c, 1098 :: 		VCO = 0xfe;
0x0D9C	0x20FE    MOVS	R0, #254
0x0D9E	0xF88D0001  STRB	R0, [SP, #1]
;RF4463PRO.c, 1099 :: 		}
0x0DA2	0xE022    B	L_rf_init_freq117
L_rf_init_freq116:
;RF4463PRO.c, 1100 :: 		else if(frequency>=2730000)                             // 273~384.9
0x0DA4	0x4843    LDR	R0, [PC, #268]
0x0DA6	0x4282    CMP	R2, R0
0x0DA8	0xD309    BCC	L_rf_init_freq118
;RF4463PRO.c, 1102 :: 		OUTDIV = 12;
0x0DAA	0x200C    MOVS	R0, #12
0x0DAC	0xF88D0000  STRB	R0, [SP, #0]
;RF4463PRO.c, 1103 :: 		BAND = 3;
0x0DB0	0x2003    MOVS	R0, #3
0x0DB2	0xF88D0002  STRB	R0, [SP, #2]
;RF4463PRO.c, 1104 :: 		VCO = 0xfd;
0x0DB6	0x20FD    MOVS	R0, #253
0x0DB8	0xF88D0001  STRB	R0, [SP, #1]
;RF4463PRO.c, 1105 :: 		}
0x0DBC	0xE015    B	L_rf_init_freq119
L_rf_init_freq118:
;RF4463PRO.c, 1106 :: 		else if(frequency>=1940000)                             // 194~272.9
0x0DBE	0x483E    LDR	R0, [PC, #248]
0x0DC0	0x4282    CMP	R2, R0
0x0DC2	0xD309    BCC	L_rf_init_freq120
;RF4463PRO.c, 1108 :: 		OUTDIV = 16;
0x0DC4	0x2010    MOVS	R0, #16
0x0DC6	0xF88D0000  STRB	R0, [SP, #0]
;RF4463PRO.c, 1109 :: 		BAND = 4;
0x0DCA	0x2004    MOVS	R0, #4
0x0DCC	0xF88D0002  STRB	R0, [SP, #2]
;RF4463PRO.c, 1110 :: 		VCO = 0xfc;
0x0DD0	0x20FC    MOVS	R0, #252
0x0DD2	0xF88D0001  STRB	R0, [SP, #1]
;RF4463PRO.c, 1111 :: 		}
0x0DD6	0xE008    B	L_rf_init_freq121
L_rf_init_freq120:
;RF4463PRO.c, 1114 :: 		OUTDIV = 24;
0x0DD8	0x2018    MOVS	R0, #24
0x0DDA	0xF88D0000  STRB	R0, [SP, #0]
;RF4463PRO.c, 1115 :: 		BAND = 5;
0x0DDE	0x2005    MOVS	R0, #5
0x0DE0	0xF88D0002  STRB	R0, [SP, #2]
;RF4463PRO.c, 1116 :: 		VCO = 0xfa;
0x0DE4	0x20FA    MOVS	R0, #250
0x0DE6	0xF88D0001  STRB	R0, [SP, #1]
;RF4463PRO.c, 1117 :: 		}
L_rf_init_freq121:
L_rf_init_freq119:
L_rf_init_freq117:
L_rf_init_freq115:
L_rf_init_freq113:
;RF4463PRO.c, 1119 :: 		DIV = OUTDIV/2;
0x0DEA	0xF89D0000  LDRB	R0, [SP, #0]
0x0DEE	0x0840    LSRS	R0, R0, #1
0x0DF0	0xB2C0    UXTB	R0, R0
;RF4463PRO.c, 1121 :: 		newData = (frequency*DIV)/3;
0x0DF2	0xFB02F100  MUL	R1, R2, R0
; frequency end address is: 8 (R2)
0x0DF6	0x2003    MOVS	R0, #3
0x0DF8	0xFBB1F2F0  UDIV	R2, R1, R0
;RF4463PRO.c, 1122 :: 		INTE = (newData/100000)-1;
0x0DFC	0x482F    LDR	R0, [PC, #188]
0x0DFE	0xFBB2F0F0  UDIV	R0, R2, R0
0x0E02	0x1E40    SUBS	R0, R0, #1
; INTE start address is: 12 (R3)
0x0E04	0xB2C3    UXTB	R3, R0
;RF4463PRO.c, 1123 :: 		FRAC = (newData-(INTE+1)*100000)*16384/3125;
0x0E06	0xB2C0    UXTB	R0, R0
0x0E08	0x1C41    ADDS	R1, R0, #1
0x0E0A	0xB209    SXTH	R1, R1
0x0E0C	0x482B    LDR	R0, [PC, #172]
0x0E0E	0x4348    MULS	R0, R1, R0
0x0E10	0x1A10    SUB	R0, R2, R0
0x0E12	0x0381    LSLS	R1, R0, #14
0x0E14	0xF6404035  MOVW	R0, #3125
0x0E18	0xFBB1F0F0  UDIV	R0, R1, R0
;RF4463PRO.c, 1124 :: 		FRAC = FRAC+0x80000;
0x0E1C	0xF5002000  ADD	R0, R0, #524288
;RF4463PRO.c, 1126 :: 		FRAC_0 = FRAC;
; FRAC_0 start address is: 16 (R4)
0x0E20	0xB2C4    UXTB	R4, R0
;RF4463PRO.c, 1127 :: 		FRAC>>=8;
0x0E22	0x0A00    LSRS	R0, R0, #8
;RF4463PRO.c, 1128 :: 		FRAC_1 = FRAC;
; FRAC_1 start address is: 20 (R5)
0x0E24	0xB2C5    UXTB	R5, R0
;RF4463PRO.c, 1129 :: 		FRAC>>=8;
0x0E26	0x0A00    LSRS	R0, R0, #8
;RF4463PRO.c, 1130 :: 		FRAC_2 = FRAC;
; FRAC_2 start address is: 24 (R6)
0x0E28	0xB2C6    UXTB	R6, R0
;RF4463PRO.c, 1134 :: 		pcBuffer[0] = 0x11;
0x0E2A	0xF10D0203  ADD	R2, SP, #3
0x0E2E	0x2011    MOVS	R0, #17
0x0E30	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 1135 :: 		pcBuffer[1]  = 0x20;    // 0x2051
0x0E32	0x1C51    ADDS	R1, R2, #1
0x0E34	0x2020    MOVS	R0, #32
0x0E36	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 1136 :: 		pcBuffer[2]  = 0x01;    // ¹² 1¸ö²ÎÊý
0x0E38	0x1C91    ADDS	R1, R2, #2
0x0E3A	0x2001    MOVS	R0, #1
0x0E3C	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 1137 :: 		pcBuffer[3]  = 0x51;   // 0x2051
0x0E3E	0x1CD1    ADDS	R1, R2, #3
0x0E40	0x2051    MOVS	R0, #81
0x0E42	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 1138 :: 		pcBuffer[4]  = 0x08|BAND;  //  high performance mode , clk outpu = osc /4
0x0E44	0x1D11    ADDS	R1, R2, #4
0x0E46	0xF89D0002  LDRB	R0, [SP, #2]
0x0E4A	0xF0400008  ORR	R0, R0, #8
0x0E4E	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 1141 :: 		pcBuffer[0] = 0x11;
0x0E50	0x2011    MOVS	R0, #17
0x0E52	0x7010    STRB	R0, [R2, #0]
;RF4463PRO.c, 1142 :: 		pcBuffer[1]  = 0x40;    // 0x4000
0x0E54	0x1C51    ADDS	R1, R2, #1
0x0E56	0x2040    MOVS	R0, #64
0x0E58	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 1143 :: 		pcBuffer[2]  = 0x08;    // ¹² 8¸ö²ÎÊý
0x0E5A	0x1C91    ADDS	R1, R2, #2
0x0E5C	0x2008    MOVS	R0, #8
0x0E5E	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 1144 :: 		pcBuffer[3]  = 0x00;   // 0x4000
0x0E60	0x1CD1    ADDS	R1, R2, #3
0x0E62	0x2000    MOVS	R0, #0
0x0E64	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 1145 :: 		pcBuffer[4]  = INTE;   //  default value
0x0E66	0x1D10    ADDS	R0, R2, #4
0x0E68	0x7003    STRB	R3, [R0, #0]
; INTE end address is: 12 (R3)
;RF4463PRO.c, 1146 :: 		pcBuffer[5]  = FRAC_2;   //  defaul value
0x0E6A	0x1D50    ADDS	R0, R2, #5
0x0E6C	0x7006    STRB	R6, [R0, #0]
; FRAC_2 end address is: 24 (R6)
;RF4463PRO.c, 1147 :: 		pcBuffer[6]  = FRAC_1;   //  default value
0x0E6E	0x1D90    ADDS	R0, R2, #6
0x0E70	0x7005    STRB	R5, [R0, #0]
; FRAC_1 end address is: 20 (R5)
;RF4463PRO.c, 1148 :: 		pcBuffer[7]  = FRAC_0;   // frac ,from WDS
0x0E72	0x1DD0    ADDS	R0, R2, #7
0x0E74	0x7004    STRB	R4, [R0, #0]
; FRAC_0 end address is: 16 (R4)
;RF4463PRO.c, 1149 :: 		pcBuffer[8]  = step_500K_step1;   // channel step1  from wds
0x0E76	0xF2020108  ADDW	R1, R2, #8
0x0E7A	0x2088    MOVS	R0, #136
0x0E7C	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 1150 :: 		pcBuffer[9]  = step_500K_step0;   // channel step0  from wds
0x0E7E	0xF2020109  ADDW	R1, R2, #9
0x0E82	0x2089    MOVS	R0, #137
0x0E84	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 1151 :: 		pcBuffer[10] = 0x20;  //  from wds Ã»ÓÐÕâ¸öÖµ
0x0E86	0xF202010A  ADDW	R1, R2, #10
0x0E8A	0x2020    MOVS	R0, #32
0x0E8C	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 1152 :: 		pcBuffer[11]  = VCO;    // from wds Ã»ÓÐÕâ¸öÖµ
0x0E8E	0xF202010B  ADDW	R1, R2, #11
0x0E92	0xF89D0001  LDRB	R0, [SP, #1]
0x0E96	0x7008    STRB	R0, [R1, #0]
;RF4463PRO.c, 1154 :: 		}
L_end_rf_init_freq:
0x0E98	0xB006    ADD	SP, SP, #24
0x0E9A	0x4770    BX	LR
0x0E9C	0x008E2000  	_freq3+0
0x0EA0	0x00912000  	_freq2+0
0x0EA4	0x00922000  	_freq1+0
0x0EA8	0xF7800073  	#7600000
0x0EAC	0x50200053  	#5460000
0x0EB0	0xBF10003A  	#3850000
0x0EB4	0xA8100029  	#2730000
0x0EB8	0x9A20001D  	#1940000
0x0EBC	0x86A00001  	#100000
; end of _rf_init_freq
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 391 :: 		
0x1C0C	0xB081    SUB	SP, SP, #4
0x1C0E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 395 :: 		
; ulRCC_CR start address is: 8 (R2)
0x1C12	0x4A4A    LDR	R2, [PC, #296]
;__Lib_System_105_107.c, 396 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x1C14	0x4B4A    LDR	R3, [PC, #296]
;__Lib_System_105_107.c, 397 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x1C16	0x4C4B    LDR	R4, [PC, #300]
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 20 (R5)
0x1C18	0x4D4B    LDR	R5, [PC, #300]
;__Lib_System_105_107.c, 407 :: 		
0x1C1A	0xF00300F0  AND	R0, R3, #240
;__Lib_System_105_107.c, 408 :: 		
0x1C1E	0x0901    LSRS	R1, R0, #4
;__Lib_System_105_107.c, 409 :: 		
0x1C20	0x484A    LDR	R0, [PC, #296]
0x1C22	0x1840    ADDS	R0, R0, R1
0x1C24	0x7800    LDRB	R0, [R0, #0]
; presc start address is: 0 (R0)
;__Lib_System_105_107.c, 411 :: 		
0x1C26	0xFA05F100  LSL	R1, R5, R0
; Fosc_kHz end address is: 20 (R5)
; presc end address is: 0 (R0)
; SYS_clk start address is: 20 (R5)
0x1C2A	0x460D    MOV	R5, R1
;__Lib_System_105_107.c, 413 :: 		
0x1C2C	0xF64B3080  MOVW	R0, #48000
0x1C30	0x4281    CMP	R1, R0
0x1C32	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; SYS_clk end address is: 20 (R5)
;__Lib_System_105_107.c, 414 :: 		
0x1C34	0x4846    LDR	R0, [PC, #280]
0x1C36	0x6800    LDR	R0, [R0, #0]
0x1C38	0xF0400102  ORR	R1, R0, #2
0x1C3C	0x4844    LDR	R0, [PC, #272]
0x1C3E	0x6001    STR	R1, [R0, #0]
0x1C40	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 415 :: 		
; SYS_clk start address is: 20 (R5)
0x1C42	0xF64550C0  MOVW	R0, #24000
0x1C46	0x4285    CMP	R5, R0
0x1C48	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC236
; SYS_clk end address is: 20 (R5)
;__Lib_System_105_107.c, 416 :: 		
0x1C4A	0x4841    LDR	R0, [PC, #260]
0x1C4C	0x6800    LDR	R0, [R0, #0]
0x1C4E	0xF0400101  ORR	R1, R0, #1
0x1C52	0x483F    LDR	R0, [PC, #252]
0x1C54	0x6001    STR	R1, [R0, #0]
0x1C56	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 418 :: 		
0x1C58	0x483D    LDR	R0, [PC, #244]
0x1C5A	0x6801    LDR	R1, [R0, #0]
0x1C5C	0xF06F0007  MVN	R0, #7
0x1C60	0x4001    ANDS	R1, R0
0x1C62	0x483B    LDR	R0, [PC, #236]
0x1C64	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC237:
L___Lib_System_105_107_InitialSetUpRCCRCC235:
;__Lib_System_105_107.c, 420 :: 		
0x1C66	0xF7FFFF31  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 422 :: 		
0x1C6A	0x483A    LDR	R0, [PC, #232]
0x1C6C	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 423 :: 		
0x1C6E	0x483A    LDR	R0, [PC, #232]
0x1C70	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 424 :: 		
0x1C72	0x483A    LDR	R0, [PC, #232]
0x1C74	0xEA020100  AND	R1, R2, R0, LSL #0
0x1C78	0x4839    LDR	R0, [PC, #228]
0x1C7A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 426 :: 		
0x1C7C	0xF0020001  AND	R0, R2, #1
0x1C80	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x1C82	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1C84	0x4836    LDR	R0, [PC, #216]
0x1C86	0x6800    LDR	R0, [R0, #0]
0x1C88	0xF0000002  AND	R0, R0, #2
0x1C8C	0x2800    CMP	R0, #0
0x1C8E	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC240
;__Lib_System_105_107.c, 428 :: 		
0x1C90	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
L___Lib_System_105_107_InitialSetUpRCCRCC240:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x1C92	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC238
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 426 :: 		
0x1C94	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1C96	0xF4023080  AND	R0, R2, #65536
0x1C9A	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x1C9C	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 432 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x1C9E	0x4830    LDR	R0, [PC, #192]
0x1CA0	0x6800    LDR	R0, [R0, #0]
0x1CA2	0xF4003000  AND	R0, R0, #131072
0x1CA6	0x2800    CMP	R0, #0
0x1CA8	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC243
;__Lib_System_105_107.c, 433 :: 		
0x1CAA	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
L___Lib_System_105_107_InitialSetUpRCCRCC243:
;__Lib_System_105_107.c, 434 :: 		
; ulRCC_CR end address is: 8 (R2)
0x1CAC	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC241
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 431 :: 		
0x1CAE	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 434 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 436 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x1CB0	0xF0025080  AND	R0, R2, #268435456
0x1CB4	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 437 :: 		
0x1CB6	0x482A    LDR	R0, [PC, #168]
0x1CB8	0x6800    LDR	R0, [R0, #0]
0x1CBA	0xF0405180  ORR	R1, R0, #268435456
0x1CBE	0x4828    LDR	R0, [PC, #160]
0x1CC0	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 438 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x1CC2	0x4827    LDR	R0, [PC, #156]
0x1CC4	0x6800    LDR	R0, [R0, #0]
0x1CC6	0xF0005000  AND	R0, R0, #536870912
0x1CCA	0x2800    CMP	R0, #0
0x1CCC	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC246
;__Lib_System_105_107.c, 439 :: 		
0x1CCE	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
L___Lib_System_105_107_InitialSetUpRCCRCC246:
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CR end address is: 8 (R2)
0x1CD0	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC244
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 436 :: 		
;__Lib_System_105_107.c, 440 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 442 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x1CD2	0xF0026080  AND	R0, R2, #67108864
0x1CD6	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC258
;__Lib_System_105_107.c, 443 :: 		
0x1CD8	0x4821    LDR	R0, [PC, #132]
0x1CDA	0x6800    LDR	R0, [R0, #0]
0x1CDC	0xF0406180  ORR	R1, R0, #67108864
0x1CE0	0x481F    LDR	R0, [PC, #124]
0x1CE2	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x1CE4	0x4611    MOV	R1, R2
0x1CE6	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 444 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x1CE8	0x481D    LDR	R0, [PC, #116]
0x1CEA	0x6800    LDR	R0, [R0, #0]
0x1CEC	0xF0006000  AND	R0, R0, #134217728
0x1CF0	0x2800    CMP	R0, #0
0x1CF2	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC249
;__Lib_System_105_107.c, 445 :: 		
0x1CF4	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
L___Lib_System_105_107_InitialSetUpRCCRCC249:
;__Lib_System_105_107.c, 446 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x1CF6	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC247
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC258:
;__Lib_System_105_107.c, 442 :: 		
0x1CF8	0x4611    MOV	R1, R2
0x1CFA	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 446 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 448 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x1CFC	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x1D00	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC259
;__Lib_System_105_107.c, 449 :: 		
0x1D02	0x4817    LDR	R0, [PC, #92]
0x1D04	0x6800    LDR	R0, [R0, #0]
0x1D06	0xF0407180  ORR	R1, R0, #16777216
0x1D0A	0x4815    LDR	R0, [PC, #84]
0x1D0C	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x1D0E	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 450 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 4 (R1)
0x1D10	0x4813    LDR	R0, [PC, #76]
0x1D12	0x6800    LDR	R0, [R0, #0]
0x1D14	0xF0007000  AND	R0, R0, #33554432
0x1D18	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 451 :: 		
0x1D1A	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 452 :: 		
0x1D1C	0x460A    MOV	R2, R1
0x1D1E	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC250
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC259:
;__Lib_System_105_107.c, 448 :: 		
;__Lib_System_105_107.c, 452 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 456 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
; ulRCC_CFGR start address is: 8 (R2)
0x1D20	0x480C    LDR	R0, [PC, #48]
0x1D22	0x6800    LDR	R0, [R0, #0]
0x1D24	0xF000010C  AND	R1, R0, #12
0x1D28	0x0090    LSLS	R0, R2, #2
0x1D2A	0xF000000C  AND	R0, R0, #12
0x1D2E	0x4281    CMP	R1, R0
0x1D30	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC254
;__Lib_System_105_107.c, 457 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x1D32	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC253
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 458 :: 		
L_end_InitialSetUpRCCRCC2:
0x1D34	0xF8DDE000  LDR	LR, [SP, #0]
0x1D38	0xB001    ADD	SP, SP, #4
0x1D3A	0x4770    BX	LR
0x1D3C	0x00810101  	#16842881
0x1D40	0x0402001D  	#1901570
0x1D44	0x00000000  	#0
0x1D48	0x19400001  	#72000
0x1D4C	0x26880000  	__Lib_System_105_107_APBAHBPrescTable+0
0x1D50	0x20004002  	FLASH_ACR+0
0x1D54	0x10044002  	RCC_CFGR+0
0x1D58	0x102C4002  	RCC_CFGR2+0
0x1D5C	0xFFFF000F  	#1048575
0x1D60	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 360 :: 		
0x1ACC	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 363 :: 		
0x1ACE	0x4815    LDR	R0, [PC, #84]
0x1AD0	0x6800    LDR	R0, [R0, #0]
0x1AD2	0xF0400101  ORR	R1, R0, #1
0x1AD6	0x4813    LDR	R0, [PC, #76]
0x1AD8	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 366 :: 		
0x1ADA	0x4913    LDR	R1, [PC, #76]
0x1ADC	0x4813    LDR	R0, [PC, #76]
0x1ADE	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 369 :: 		
0x1AE0	0x4810    LDR	R0, [PC, #64]
0x1AE2	0x6801    LDR	R1, [R0, #0]
0x1AE4	0x4812    LDR	R0, [PC, #72]
0x1AE6	0x4001    ANDS	R1, R0
0x1AE8	0x480E    LDR	R0, [PC, #56]
0x1AEA	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 372 :: 		
0x1AEC	0x480D    LDR	R0, [PC, #52]
0x1AEE	0x6801    LDR	R1, [R0, #0]
0x1AF0	0xF46F2080  MVN	R0, #262144
0x1AF4	0x4001    ANDS	R1, R0
0x1AF6	0x480B    LDR	R0, [PC, #44]
0x1AF8	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 375 :: 		
0x1AFA	0x480C    LDR	R0, [PC, #48]
0x1AFC	0x6801    LDR	R1, [R0, #0]
0x1AFE	0xF46F00FE  MVN	R0, #8323072
0x1B02	0x4001    ANDS	R1, R0
0x1B04	0x4809    LDR	R0, [PC, #36]
0x1B06	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 378 :: 		
0x1B08	0x4806    LDR	R0, [PC, #24]
0x1B0A	0x6801    LDR	R1, [R0, #0]
0x1B0C	0xF06F50A0  MVN	R0, #335544320
0x1B10	0x4001    ANDS	R1, R0
0x1B12	0x4804    LDR	R0, [PC, #16]
0x1B14	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
0x1B16	0xF04F0100  MOV	R1, #0
0x1B1A	0x4806    LDR	R0, [PC, #24]
0x1B1C	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 385 :: 		
L_end_SystemClockSetDefault:
0x1B1E	0xB001    ADD	SP, SP, #4
0x1B20	0x4770    BX	LR
0x1B22	0xBF00    NOP
0x1B24	0x10004002  	RCC_CR+0
0x1B28	0x0000F0FF  	#-251723776
0x1B2C	0x10044002  	RCC_CFGR+0
0x1B30	0xFFFFFEF6  	#-17367041
0x1B34	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 460 :: 		
0x1B50	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 461 :: 		
0x1B52	0x4902    LDR	R1, [PC, #8]
0x1B54	0x4802    LDR	R0, [PC, #8]
0x1B56	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 462 :: 		
L_end_InitialSetUpFosc:
0x1B58	0xB001    ADD	SP, SP, #4
0x1B5A	0x4770    BX	LR
0x1B5C	0x19400001  	#72000
0x1B60	0x00942000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 311 :: 		
0x1B64	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 312 :: 		
L___GenExcept30:
0x1B66	0xE7FE    B	L___GenExcept30
;__Lib_System_105_107.c, 313 :: 		
L_end___GenExcept:
0x1B68	0xB001    ADD	SP, SP, #4
0x1B6A	0x4770    BX	LR
; end of ___GenExcept
0x26A8	0xB500    PUSH	(R14)
0x26AA	0xF8DFB014  LDR	R11, [PC, #20]
0x26AE	0xF8DFA014  LDR	R10, [PC, #20]
0x26B2	0xF8DFC014  LDR	R12, [PC, #20]
0x26B6	0xF7FFF9FF  BL	6840
0x26BA	0xBD00    POP	(R15)
0x26BC	0x4770    BX	LR
0x26BE	0xBF00    NOP
0x26C0	0x00002000  	#536870912
0x26C4	0x008D2000  	#536871053
0x26C8	0x1D640000  	#7524
0x2728	0xB500    PUSH	(R14)
0x272A	0xF8DFB010  LDR	R11, [PC, #16]
0x272E	0xF8DFA010  LDR	R10, [PC, #16]
0x2732	0xF7FFF94F  BL	6612
0x2736	0xBD00    POP	(R15)
0x2738	0x4770    BX	LR
0x273A	0xBF00    NOP
0x273C	0x00002000  	#536870912
0x2740	0x00BC2000  	#536871100
;__Lib_System_105_107.c,389 :: __Lib_System_105_107_ADCPrescTable [4]
0x1032	0x08060402 ;__Lib_System_105_107_ADCPrescTable+0
; end of __Lib_System_105_107_ADCPrescTable
;RF4463PRO.c,0 :: ?ICS_RF_MODEM_MOD_TYPE_12_data [16]
0x1D64	0x000C2011 ;?ICS_RF_MODEM_MOD_TYPE_12_data+0
0x1D68	0x00000000 ;?ICS_RF_MODEM_MOD_TYPE_12_data+4
0x1D6C	0x00000000 ;?ICS_RF_MODEM_MOD_TYPE_12_data+8
0x1D70	0x00000000 ;?ICS_RF_MODEM_MOD_TYPE_12_data+12
; end of ?ICS_RF_MODEM_MOD_TYPE_12_data
;RF4463PRO.c,0 :: ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data [12]
0x1D74	0x18082011 ;?ICS_RF_MODEM_TX_RAMP_DELAY_8_data+0
0x1D78	0x00000000 ;?ICS_RF_MODEM_TX_RAMP_DELAY_8_data+4
0x1D7C	0x00000000 ;?ICS_RF_MODEM_TX_RAMP_DELAY_8_data+8
; end of ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data
;,0 :: _initBlock_3 [76]
; Containing: ?ICS_RF_MODEM_OOK_CNT1_11_data [15]
;             ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data [16]
;             ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data [16]
;             ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data [16]
;             ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data [13]
0x1D80	0x420B2011 ;_initBlock_3+0 : ?ICS_RF_MODEM_OOK_CNT1_11_data at 0x1D80
0x1D84	0x00000000 ;_initBlock_3+4
0x1D88	0x00000000 ;_initBlock_3+8
0x1D8C	0x11000000 ;_initBlock_3+12 : ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data at 0x1D8F
0x1D90	0x00000C21 ;_initBlock_3+16
0x1D94	0x00000000 ;_initBlock_3+20
0x1D98	0x00000000 ;_initBlock_3+24
0x1D9C	0x11000000 ;_initBlock_3+28 : ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data at 0x1D9F
0x1DA0	0x000C0C21 ;_initBlock_3+32
0x1DA4	0x00000000 ;_initBlock_3+36
0x1DA8	0x00000000 ;_initBlock_3+40
0x1DAC	0x11000000 ;_initBlock_3+44 : ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data at 0x1DAF
0x1DB0	0x00180C21 ;_initBlock_3+48
0x1DB4	0x00000000 ;_initBlock_3+52
0x1DB8	0x00000000 ;_initBlock_3+56
0x1DBC	0x11000000 ;_initBlock_3+60 : ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data at 0x1DBF
0x1DC0	0x00380920 ;_initBlock_3+64
0x1DC4	0x00000000 ;_initBlock_3+68
0x1DC8	0x00000000 ;_initBlock_3+72
; end of _initBlock_3
;,0 :: _initBlock_4 [26]
; Containing: ?ICS_RF_MODEM_BCR_OSR_1_9_data [13]
;             ?ICS_RF_MODEM_AFC_GEAR_7_data [13]
0x1DCC	0x22092011 ;_initBlock_4+0 : ?ICS_RF_MODEM_BCR_OSR_1_9_data at 0x1DCC
0x1DD0	0x00000000 ;_initBlock_4+4
0x1DD4	0x00000000 ;_initBlock_4+8
0x1DD8	0x07201100 ;_initBlock_4+12 : ?ICS_RF_MODEM_AFC_GEAR_7_data at 0x1DD9
0x1DDC	0x0000002C ;_initBlock_4+16
0x1DE0	0x00000000 ;_initBlock_4+20
0x1DE4	0x0000 ;_initBlock_4+24
; end of _initBlock_4
;,0 :: _initBlock_5 [1056]
; Containing: ?ICS_RF_SYNTH_PFDCP_CPFF_7_data [11]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850 [132]
;             RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433 [132]
;             RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850 [132]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850 [132]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433 [132]
;             RF_MODEM_MOD_TYPE_12 [132]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433 [132]
;             RF_MODEM_OOK_CNT1_11_850 [121]
0x1DE6	0x00072311 ;_initBlock_5+0 : ?ICS_RF_SYNTH_PFDCP_CPFF_7_data at 0x1DE6
0x1DEA	0x00000000 ;_initBlock_5+4
0x1DEE	0xFF000000 ;_initBlock_5+8 : RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850 at 0x1DF1
0x1DF2	0xF57F30C4 ;_initBlock_5+12
0x1DF6	0x05DEB8B5 ;_initBlock_5+16
0x1DFA	0xFF0C1617 ;_initBlock_5+20
0x1DFE	0xF57F30C4 ;_initBlock_5+24
0x1E02	0x05DEB8B5 ;_initBlock_5+28
0x1E06	0xFF0C1617 ;_initBlock_5+32
0x1E0A	0xCF510FBA ;_initBlock_5+36
0x1E0E	0x1BFCC9A9 ;_initBlock_5+40
0x1E12	0xFF010F1E ;_initBlock_5+44
0x1E16	0xF57F30C4 ;_initBlock_5+48
0x1E1A	0x05DEB8B5 ;_initBlock_5+52
0x1E1E	0xFF0C1617 ;_initBlock_5+56
0x1E22	0xCF510FBA ;_initBlock_5+60
0x1E26	0x1BFCC9A9 ;_initBlock_5+64
0x1E2A	0xFF010F1E ;_initBlock_5+68
0x1E2E	0xF57F30C4 ;_initBlock_5+72
0x1E32	0x05DEB8B5 ;_initBlock_5+76
0x1E36	0x7E0C1617 ;_initBlock_5+80
0x1E3A	0x58BA1B64 ;_initBlock_5+84
0x1E3E	0xD6CEDD0B ;_initBlock_5+88
0x1E42	0x7E00F6E6 ;_initBlock_5+92
0x1E46	0x58BA1B64 ;_initBlock_5+96
0x1E4A	0xD6CEDD0B ;_initBlock_5+100
0x1E4E	0x3900F6E6 ;_initBlock_5+104
0x1E52	0x7FC3002B ;_initBlock_5+108
0x1E56	0xDCEC0C3F ;_initBlock_5+112
0x1E5A	0xA2EDE3DC ;_initBlock_5+116
0x1E5E	0x3FAF2681 ;_initBlock_5+120
0x1E62	0xDBC7C8EE ;_initBlock_5+124
0x1E66	0xCC0802F2 ;_initBlock_5+128
0x1E6A	0x21A030A1 ;_initBlock_5+132
0x1E6E	0xEAC9B9D1 ;_initBlock_5+136
0x1E72	0xB8111205 ;_initBlock_5+140 : RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433 at 0x1E75
0x1E76	0x161705DE ;_initBlock_5+144
0x1E7A	0x1500030C ;_initBlock_5+148
0x1E7E	0xB80000FF ;_initBlock_5+152
0x1E82	0x161705DE ;_initBlock_5+156
0x1E86	0x1500030C ;_initBlock_5+160
0x1E8A	0xB90000FF ;_initBlock_5+164
0x1E8E	0x1205EAC9 ;_initBlock_5+168
0x1E92	0x15040A11 ;_initBlock_5+172
0x1E96	0xB80003FC ;_initBlock_5+176
0x1E9A	0x161705DE ;_initBlock_5+180
0x1E9E	0x1500030C ;_initBlock_5+184
0x1EA2	0xB90000FF ;_initBlock_5+188
0x1EA6	0x1205EAC9 ;_initBlock_5+192
0x1EAA	0x15040A11 ;_initBlock_5+196
0x1EAE	0xDD0003FC ;_initBlock_5+200
0x1EB2	0xF6E6D6CE ;_initBlock_5+204
0x1EB6	0x15030300 ;_initBlock_5+208
0x1EBA	0xF4003FF0 ;_initBlock_5+212
0x1EBE	0xECDFD6DB ;_initBlock_5+216
0x1EC2	0x1501FEF7 ;_initBlock_5+220
0x1EC6	0xF403FFF0 ;_initBlock_5+224
0x1ECA	0xECDFD6DB ;_initBlock_5+228
0x1ECE	0x1501FEF7 ;_initBlock_5+232
0x1ED2	0x0C03FFF0 ;_initBlock_5+236
0x1ED6	0xE3DCDCEC ;_initBlock_5+240
0x1EDA	0x15FDF6ED ;_initBlock_5+244
0x1EDE	0xC80FFFC0 ;_initBlock_5+248
0x1EE2	0x02F2DBC7 ;_initBlock_5+252
0x1EE6	0x15030708 ;_initBlock_5+256
0x1EEA	0xB9000FFC ;_initBlock_5+260
0x1EEE	0x1205EAC9 ;_initBlock_5+264
0x1EF2	0x15040A11 ;_initBlock_5+268
0x1EF6	0xB80003FC ;_initBlock_5+272 : RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850 at 0x1EF9
0x1EFA	0x161705DE ;_initBlock_5+276
0x1EFE	0x1500030C ;_initBlock_5+280
0x1F02	0xB80000FF ;_initBlock_5+284
0x1F06	0x161705DE ;_initBlock_5+288
0x1F0A	0x1500030C ;_initBlock_5+292
0x1F0E	0xC90000FF ;_initBlock_5+296
0x1F12	0x0F1E1BFC ;_initBlock_5+300
0x1F16	0x15FDFC01 ;_initBlock_5+304
0x1F1A	0xB80F00FF ;_initBlock_5+308
0x1F1E	0x161705DE ;_initBlock_5+312
0x1F22	0x1500030C ;_initBlock_5+316
0x1F26	0xC90000FF ;_initBlock_5+320
0x1F2A	0x0F1E1BFC ;_initBlock_5+324
0x1F2E	0x15FDFC01 ;_initBlock_5+328
0x1F32	0xB80F00FF ;_initBlock_5+332
0x1F36	0x161705DE ;_initBlock_5+336
0x1F3A	0x1500030C ;_initBlock_5+340
0x1F3E	0xDD0000FF ;_initBlock_5+344
0x1F42	0xF6E6D6CE ;_initBlock_5+348
0x1F46	0x15030300 ;_initBlock_5+352
0x1F4A	0x03003FF0 ;_initBlock_5+356
0x1F4E	0x3FF01503 ;_initBlock_5+360
0x1F52	0x1B647E00 ;_initBlock_5+364
0x1F56	0x0C0B58BA ;_initBlock_5+368
0x1F5A	0xE3DCDCEC ;_initBlock_5+372
0x1F5E	0x15FDF6ED ;_initBlock_5+376
0x1F62	0xC80FFFC0 ;_initBlock_5+380
0x1F66	0x02F2DBC7 ;_initBlock_5+384
0x1F6A	0x15030708 ;_initBlock_5+388
0x1F6E	0xB9000FFC ;_initBlock_5+392
0x1F72	0x1205EAC9 ;_initBlock_5+396
0x1F76	0x15040A11 ;_initBlock_5+400
0x1F7A	0x030003FC ;_initBlock_5+404 : RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850 at 0x1F7D
0x1F7E	0x00FF1500 ;_initBlock_5+408
0x1F82	0x30C4FF00 ;_initBlock_5+412
0x1F86	0x03B5F57F ;_initBlock_5+416
0x1F8A	0x00FF1500 ;_initBlock_5+420
0x1F8E	0x30C4FF00 ;_initBlock_5+424
0x1F92	0xFCB5F57F ;_initBlock_5+428
0x1F96	0x00FF15FD ;_initBlock_5+432
0x1F9A	0x0FBAFF0F ;_initBlock_5+436
0x1F9E	0x03A9CF51 ;_initBlock_5+440
0x1FA2	0x00FF1500 ;_initBlock_5+444
0x1FA6	0x30C4FF00 ;_initBlock_5+448
0x1FAA	0xFCB5F57F ;_initBlock_5+452
0x1FAE	0x00FF15FD ;_initBlock_5+456
0x1FB2	0x0FBAFF0F ;_initBlock_5+460
0x1FB6	0x03A9CF51 ;_initBlock_5+464
0x1FBA	0x00FF1500 ;_initBlock_5+468
0x1FBE	0x30C4FF00 ;_initBlock_5+472
0x1FC2	0x03B5F57F ;_initBlock_5+476
0x1FC6	0x3FF01503 ;_initBlock_5+480
0x1FCA	0x1B647E00 ;_initBlock_5+484
0x1FCE	0xF60B58BA ;_initBlock_5+488
0x1FD2	0xFFC015FD ;_initBlock_5+492
0x1FD6	0x002B390F ;_initBlock_5+496
0x1FDA	0x073F7FC3 ;_initBlock_5+500
0x1FDE	0x0FFC1503 ;_initBlock_5+504
0x1FE2	0x2681A200 ;_initBlock_5+508
0x1FE6	0x0AEE3FAF ;_initBlock_5+512
0x1FEA	0x03FC1504 ;_initBlock_5+516
0x1FEE	0x30A1CC00 ;_initBlock_5+520
0x1FF2	0x00D121A0 ;_initBlock_5+524
0x1FF6	0x00000000 ;_initBlock_5+528
0x1FFA	0x00000000 ;_initBlock_5+532
0x1FFE	0xFF000000 ;_initBlock_5+536 : RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433 at 0x2001
0x2002	0xF57F30C4 ;_initBlock_5+540
0x2006	0x05DEB8B5 ;_initBlock_5+544
0x200A	0xFF0C1617 ;_initBlock_5+548
0x200E	0xF57F30C4 ;_initBlock_5+552
0x2012	0x05DEB8B5 ;_initBlock_5+556
0x2016	0xCC0C1617 ;_initBlock_5+560
0x201A	0x21A030A1 ;_initBlock_5+564
0x201E	0xEAC9B9D1 ;_initBlock_5+568
0x2022	0xFF111205 ;_initBlock_5+572
0x2026	0xF57F30C4 ;_initBlock_5+576
0x202A	0x05DEB8B5 ;_initBlock_5+580
0x202E	0xCC0C1617 ;_initBlock_5+584
0x2032	0x21A030A1 ;_initBlock_5+588
0x2036	0xEAC9B9D1 ;_initBlock_5+592
0x203A	0x7E111205 ;_initBlock_5+596
0x203E	0x58BA1B64 ;_initBlock_5+600
0x2042	0xD6CEDD0B ;_initBlock_5+604
0x2046	0x5B00F6E6 ;_initBlock_5+608
0x204A	0x6DC00F47 ;_initBlock_5+612
0x204E	0xD6DBF425 ;_initBlock_5+616
0x2052	0x5BF7ECDF ;_initBlock_5+620
0x2056	0x6DC00F47 ;_initBlock_5+624
0x205A	0xD6DBF425 ;_initBlock_5+628
0x205E	0x39F7ECDF ;_initBlock_5+632
0x2062	0x7FC3002B ;_initBlock_5+636
0x2066	0xDCEC0C3F ;_initBlock_5+640
0x206A	0xA2EDE3DC ;_initBlock_5+644
0x206E	0x3FAF2681 ;_initBlock_5+648
0x2072	0xDBC7C8EE ;_initBlock_5+652
0x2076	0xCC0802F2 ;_initBlock_5+656
0x207A	0x21A030A1 ;_initBlock_5+660
0x207E	0xEAC9B9D1 ;_initBlock_5+664
0x2082	0x03111205 ;_initBlock_5+668 : RF_MODEM_MOD_TYPE_12 at 0x2085
0x2086	0x12000700 ;_initBlock_5+672
0x208A	0xC62D04C0 ;_initBlock_5+676
0x208E	0x030000C0 ;_initBlock_5+680
0x2092	0x25000700 ;_initBlock_5+684
0x2096	0xC62D0480 ;_initBlock_5+688
0x209A	0x030000C0 ;_initBlock_5+692
0x209E	0x4B000700 ;_initBlock_5+696
0x20A2	0xC62D0400 ;_initBlock_5+700
0x20A6	0x030000C0 ;_initBlock_5+704
0x20AA	0x96000700 ;_initBlock_5+708
0x20AE	0xC62D0400 ;_initBlock_5+712
0x20B2	0x030000C0 ;_initBlock_5+716
0x20B6	0x2C010700 ;_initBlock_5+720
0x20BA	0xC62D0400 ;_initBlock_5+724
0x20BE	0x030100C0 ;_initBlock_5+728
0x20C2	0x2C010700 ;_initBlock_5+732
0x20C6	0xC62D0800 ;_initBlock_5+736
0x20CA	0x030100C0 ;_initBlock_5+740
0x20CE	0x58020700 ;_initBlock_5+744
0x20D2	0xC62D0800 ;_initBlock_5+748
0x20D6	0x030100C0 ;_initBlock_5+752
0x20DA	0x84030700 ;_initBlock_5+756
0x20DE	0xC62D0800 ;_initBlock_5+760
0x20E2	0x030100C0 ;_initBlock_5+764
0x20E6	0x10270700 ;_initBlock_5+768
0x20EA	0xC3C90100 ;_initBlock_5+772
0x20EE	0x03010080 ;_initBlock_5+776
0x20F2	0x4B4C0700 ;_initBlock_5+780
0x20F6	0xC3C90140 ;_initBlock_5+784
0x20FA	0x031B0080 ;_initBlock_5+788
0x20FE	0x07000700 ;_initBlock_5+792
0x2102	0xC62D04D0 ;_initBlock_5+796
0x2106	0x030000C0 ;_initBlock_5+800 : RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433 at 0x2109
0x210A	0x00FF1500 ;_initBlock_5+804
0x210E	0x30C4FF00 ;_initBlock_5+808
0x2112	0x03B5F57F ;_initBlock_5+812
0x2116	0x00FF1500 ;_initBlock_5+816
0x211A	0x30C4FF00 ;_initBlock_5+820
0x211E	0x0AB5F57F ;_initBlock_5+824
0x2122	0x03FC1504 ;_initBlock_5+828
0x2126	0x30A1CC00 ;_initBlock_5+832
0x212A	0x03D121A0 ;_initBlock_5+836
0x212E	0x00FF1500 ;_initBlock_5+840
0x2132	0x30C4FF00 ;_initBlock_5+844
0x2136	0x0AB5F57F ;_initBlock_5+848
0x213A	0x03FC1504 ;_initBlock_5+852
0x213E	0x30A1CC00 ;_initBlock_5+856
0x2142	0x03D121A0 ;_initBlock_5+860
0x2146	0x3FF01503 ;_initBlock_5+864
0x214A	0x1B647E00 ;_initBlock_5+868
0x214E	0xFE0B58BA ;_initBlock_5+872
0x2152	0xFFF01501 ;_initBlock_5+876
0x2156	0x0F475B03 ;_initBlock_5+880
0x215A	0xFE256DC0 ;_initBlock_5+884
0x215E	0xFFF01501 ;_initBlock_5+888
0x2162	0x0F475B03 ;_initBlock_5+892
0x2166	0xF6256DC0 ;_initBlock_5+896
0x216A	0xFFC015FD ;_initBlock_5+900
0x216E	0x002B390F ;_initBlock_5+904
0x2172	0x073F7FC3 ;_initBlock_5+908
0x2176	0x0FFC1503 ;_initBlock_5+912
0x217A	0x2681A200 ;_initBlock_5+916
0x217E	0x0AEE3FAF ;_initBlock_5+920
0x2182	0x03FC1504 ;_initBlock_5+924
0x2186	0x30A1CC00 ;_initBlock_5+928
0x218A	0xA4D121A0 ;_initBlock_5+932 : RF_MODEM_OOK_CNT1_11_850 at 0x218D
0x218E	0x0381D602 ;_initBlock_5+936
0x2192	0xFF80019B ;_initBlock_5+940
0x2196	0x02A4020C ;_initBlock_5+944
0x219A	0xE70083D6 ;_initBlock_5+948
0x219E	0x0CFF8001 ;_initBlock_5+952
0x21A2	0xD602A402 ;_initBlock_5+956
0x21A6	0x01E70083 ;_initBlock_5+960
0x21AA	0x020CFF80 ;_initBlock_5+964
0x21AE	0x03D603A4 ;_initBlock_5+968
0x21B2	0x80011101 ;_initBlock_5+972
0x21B6	0xA4020CFF ;_initBlock_5+976
0x21BA	0x0103D603 ;_initBlock_5+980
0x21BE	0xFF800155 ;_initBlock_5+984
0x21C2	0x03A4020C ;_initBlock_5+988
0x21C6	0x000103D6 ;_initBlock_5+992
0x21CA	0x0CFF8001 ;_initBlock_5+996
0x21CE	0xD603A402 ;_initBlock_5+1000
0x21D2	0x01800003 ;_initBlock_5+1004
0x21D6	0x020CFF80 ;_initBlock_5+1008
0x21DA	0x03D603A4 ;_initBlock_5+1012
0x21DE	0x80018000 ;_initBlock_5+1016
0x21E2	0xA4020CFF ;_initBlock_5+1020
0x21E6	0x0003D603 ;_initBlock_5+1024
0x21EA	0xFF8001D5 ;_initBlock_5+1028
0x21EE	0x03A4020C ;_initBlock_5+1032
0x21F2	0xD50003D6 ;_initBlock_5+1036
0x21F6	0x0CFF8001 ;_initBlock_5+1040
0x21FA	0xD602A402 ;_initBlock_5+1044
0x21FE	0x01B40281 ;_initBlock_5+1048
0x2202	0x020CFF80 ;_initBlock_5+1052
; end of _initBlock_5
;RF4463PRO.c,249 :: _RF_MODEM_OOK_CNT1_11_433 [121]
0x2206	0x83D602A4 ;_RF_MODEM_OOK_CNT1_11_433+0
0x220A	0x8001AD00 ;_RF_MODEM_OOK_CNT1_11_433+4
0x220E	0xA4000CFF ;_RF_MODEM_OOK_CNT1_11_433+8
0x2212	0x0083D602 ;_RF_MODEM_OOK_CNT1_11_433+12
0x2216	0xFF8001AD ;_RF_MODEM_OOK_CNT1_11_433+16
0x221A	0x03A4000C ;_RF_MODEM_OOK_CNT1_11_433+20
0x221E	0xCC0003D6 ;_RF_MODEM_OOK_CNT1_11_433+24
0x2222	0x0CFF8001 ;_RF_MODEM_OOK_CNT1_11_433+28
0x2226	0xD603A400 ;_RF_MODEM_OOK_CNT1_11_433+32
0x222A	0x01CC0003 ;_RF_MODEM_OOK_CNT1_11_433+36
0x222E	0x000CFF80 ;_RF_MODEM_OOK_CNT1_11_433+40
0x2232	0x03D603A4 ;_RF_MODEM_OOK_CNT1_11_433+44
0x2236	0x80010001 ;_RF_MODEM_OOK_CNT1_11_433+48
0x223A	0xA4000CFF ;_RF_MODEM_OOK_CNT1_11_433+52
0x223E	0x0003D603 ;_RF_MODEM_OOK_CNT1_11_433+56
0x2242	0xFF800180 ;_RF_MODEM_OOK_CNT1_11_433+60
0x2246	0x03A4000C ;_RF_MODEM_OOK_CNT1_11_433+64
0x224A	0x400003D6 ;_RF_MODEM_OOK_CNT1_11_433+68
0x224E	0x0CFF8001 ;_RF_MODEM_OOK_CNT1_11_433+72
0x2252	0xD603A400 ;_RF_MODEM_OOK_CNT1_11_433+76
0x2256	0x012B0003 ;_RF_MODEM_OOK_CNT1_11_433+80
0x225A	0x000CFF80 ;_RF_MODEM_OOK_CNT1_11_433+84
0x225E	0x03D603A4 ;_RF_MODEM_OOK_CNT1_11_433+88
0x2262	0x8001D500 ;_RF_MODEM_OOK_CNT1_11_433+92
0x2266	0xA4000CFF ;_RF_MODEM_OOK_CNT1_11_433+96
0x226A	0x0003D603 ;_RF_MODEM_OOK_CNT1_11_433+100
0x226E	0xFF8001D5 ;_RF_MODEM_OOK_CNT1_11_433+104
0x2272	0x02A4000C ;_RF_MODEM_OOK_CNT1_11_433+108
0x2276	0xB40281D6 ;_RF_MODEM_OOK_CNT1_11_433+112
0x227A	0x0CFF8001 ;_RF_MODEM_OOK_CNT1_11_433+116
0x227E	0x00 ;_RF_MODEM_OOK_CNT1_11_433+120
; end of _RF_MODEM_OOK_CNT1_11_433
;__Lib_GPIO_32F10x_Defs.c,711 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x2280	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x2284	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x2288	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x228C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x2290	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x2294	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x2298	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x229C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x22A0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x22A4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x22A8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x22AC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x22B0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x22B4	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x22B8	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x22BC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x22C0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x22C4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x22C8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x22CC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x22D0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x22D4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x22D8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x22DC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x22E0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x22E4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x22E8	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F10x_Defs.c,680 :: __GPIO_MODULE_SPI2_PB13_14_15 [108]
0x22EC	0x0000001D ;__GPIO_MODULE_SPI2_PB13_14_15+0
0x22F0	0x0000001E ;__GPIO_MODULE_SPI2_PB13_14_15+4
0x22F4	0x0000001F ;__GPIO_MODULE_SPI2_PB13_14_15+8
0x22F8	0xFFFFFFFF ;__GPIO_MODULE_SPI2_PB13_14_15+12
0x22FC	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+16
0x2300	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+20
0x2304	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+24
0x2308	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+28
0x230C	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+32
0x2310	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+36
0x2314	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+40
0x2318	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+44
0x231C	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+48
0x2320	0x00000818 ;__GPIO_MODULE_SPI2_PB13_14_15+52
0x2324	0x00000818 ;__GPIO_MODULE_SPI2_PB13_14_15+56
0x2328	0x00000818 ;__GPIO_MODULE_SPI2_PB13_14_15+60
0x232C	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+64
0x2330	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+68
0x2334	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+72
0x2338	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+76
0x233C	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+80
0x2340	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+84
0x2344	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+88
0x2348	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+92
0x234C	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+96
0x2350	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+100
0x2354	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+104
; end of __GPIO_MODULE_SPI2_PB13_14_15
;,0 :: _initBlock_9 [198]
; Containing: RF_MODEM_AGC_WINDOW_SIZE_9_850 [99]
;             RF_MODEM_BCR_OSR_1_9_850 [99]
0x2358	0x00ABAB11 ;_initBlock_9+0 : RF_MODEM_AGC_WINDOW_SIZE_9_850 at 0x2358
0x235C	0x00FFFF02 ;_initBlock_9+4
0x2360	0xABAB112B ;_initBlock_9+8
0x2364	0xFFFF0200 ;_initBlock_9+12
0x2368	0x56112B00 ;_initBlock_9+16
0x236C	0xD5020056 ;_initBlock_9+20
0x2370	0x112A0055 ;_initBlock_9+24
0x2374	0x02002B2B ;_initBlock_9+28
0x2378	0x2900AB6A ;_initBlock_9+32
0x237C	0x00151511 ;_initBlock_9+36
0x2380	0x00AB4202 ;_initBlock_9+40
0x2384	0x0E0E1128 ;_initBlock_9+44
0x2388	0x55210200 ;_initBlock_9+48
0x238C	0x0E112800 ;_initBlock_9+52
0x2390	0x1002000E ;_initBlock_9+56
0x2394	0x112800AB ;_initBlock_9+60
0x2398	0x02000E0E ;_initBlock_9+64
0x239C	0x2800AB10 ;_initBlock_9+68
0x23A0	0x000D0D22 ;_initBlock_9+72
0x23A4	0x0000321A ;_initBlock_9+76
0x23A8	0x07072228 ;_initBlock_9+80
0x23AC	0x9A191A00 ;_initBlock_9+84
0x23B0	0xCD112700 ;_initBlock_9+88
0x23B4	0x301A00CD ;_initBlock_9+92
0x23B8	0x032B0000 ;_initBlock_9+96 : RF_MODEM_BCR_OSR_1_9_850 at 0x23BB
0x23BC	0xC6A7000D ;_initBlock_9+100
0x23C0	0xC2025400 ;_initBlock_9+104
0x23C4	0xA7000D03 ;_initBlock_9+108
0x23C8	0x025400C6 ;_initBlock_9+112
0x23CC	0x018701C2 ;_initBlock_9+116
0x23D0	0xA8008B4F ;_initBlock_9+120
0x23D4	0xC300C202 ;_initBlock_9+124
0x23D8	0x01179F02 ;_initBlock_9+128
0x23DC	0x00000293 ;_initBlock_9+132
0x23E0	0x2D3E0562 ;_initBlock_9+136
0x23E4	0x00020405 ;_initBlock_9+140
0x23E8	0xDD074100 ;_initBlock_9+144
0x23EC	0x02FF0744 ;_initBlock_9+148
0x23F0	0x07410000 ;_initBlock_9+152
0x23F4	0xFF0744DD ;_initBlock_9+156
0x23F8	0x41000002 ;_initBlock_9+160
0x23FC	0x0744DD07 ;_initBlock_9+164
0x2400	0x000002FF ;_initBlock_9+168
0x2404	0x7B5E0475 ;_initBlock_9+172
0x2408	0x00029A05 ;_initBlock_9+176
0x240C	0x88083C00 ;_initBlock_9+180
0x2410	0x02FF0789 ;_initBlock_9+184
0x2414	0x00AA0300 ;_initBlock_9+188
0x2418	0x4600CF8B ;_initBlock_9+192
0x241C	0xC202 ;_initBlock_9+196
; end of _initBlock_9
;,0 :: _initBlock_10 [198]
; Containing: RF_MODEM_BCR_OSR_1_9_433 [99]
;             RF_MODEM_AGC_WINDOW_SIZE_9_433 [99]
0x241E	0xA7000D03 ;_initBlock_10+0 : RF_MODEM_BCR_OSR_1_9_433 at 0x241E
0x2422	0x025400C6 ;_initBlock_10+4
0x2426	0x018701C2 ;_initBlock_10+8
0x242A	0xA8008B4F ;_initBlock_10+12
0x242E	0xC300C202 ;_initBlock_10+16
0x2432	0x02179F02 ;_initBlock_10+20
0x2436	0x0000021A ;_initBlock_10+24
0x243A	0x2D3E0562 ;_initBlock_10+28
0x243E	0x0002FF07 ;_initBlock_10+32
0x2442	0xDD074100 ;_initBlock_10+36
0x2446	0x02FF0744 ;_initBlock_10+40
0x244A	0x07410000 ;_initBlock_10+44
0x244E	0xFF0744DD ;_initBlock_10+48
0x2452	0x41000002 ;_initBlock_10+52
0x2456	0x0744DD07 ;_initBlock_10+56
0x245A	0x000002FF ;_initBlock_10+60
0x245E	0x44DD0741 ;_initBlock_10+64
0x2462	0x0002FF07 ;_initBlock_10+68
0x2466	0x5E047500 ;_initBlock_10+72
0x246A	0x029A057B ;_initBlock_10+76
0x246E	0x083C0000 ;_initBlock_10+80
0x2472	0xFF078988 ;_initBlock_10+84
0x2476	0xAA030002 ;_initBlock_10+88
0x247A	0x00CF8B00 ;_initBlock_10+92
0x247E	0x11C20246 ;_initBlock_10+96 : RF_MODEM_AGC_WINDOW_SIZE_9_433 at 0x2481
0x2482	0x1A00ABAB ;_initBlock_10+100
0x2486	0x2B000014 ;_initBlock_10+104
0x248A	0x00565611 ;_initBlock_10+108
0x248E	0x0000A01A ;_initBlock_10+112
0x2492	0x2B2B112A ;_initBlock_10+116
0x2496	0x00501A00 ;_initBlock_10+120
0x249A	0x15112900 ;_initBlock_10+124
0x249E	0x281A0015 ;_initBlock_10+128
0x24A2	0x11280000 ;_initBlock_10+132
0x24A6	0x1A000E0E ;_initBlock_10+136
0x24AA	0x28005521 ;_initBlock_10+140
0x24AE	0x000E0E11 ;_initBlock_10+144
0x24B2	0x00AB101A ;_initBlock_10+148
0x24B6	0x0E0E1128 ;_initBlock_10+152
0x24BA	0x55081A00 ;_initBlock_10+156
0x24BE	0x0E112800 ;_initBlock_10+160
0x24C2	0x051A000E ;_initBlock_10+164
0x24C6	0x2228008E ;_initBlock_10+168
0x24CA	0x1A000D0D ;_initBlock_10+172
0x24CE	0x28000032 ;_initBlock_10+176
0x24D2	0x00070722 ;_initBlock_10+180
0x24D6	0x009A191A ;_initBlock_10+184
0x24DA	0xCDCD1127 ;_initBlock_10+188
0x24DE	0x00301A00 ;_initBlock_10+192
0x24E2	0x2B00 ;_initBlock_10+196
; end of _initBlock_10
;RF4463PRO.c,114 :: _RF_MODEM_TX_RAMP_DELAY_8_850 [88]
0x24E4	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+0
0x24E8	0x203200C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+4
0x24EC	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+8
0x24F0	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+12
0x24F4	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+16
0x24F8	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+20
0x24FC	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+24
0x2500	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+28
0x2504	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+32
0x2508	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+36
0x250C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+40
0x2510	0x102000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+44
0x2514	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+48
0x2518	0x101000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+52
0x251C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+56
0x2520	0x201000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+60
0x2524	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+64
0x2528	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+68
0x252C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+72
0x2530	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+76
0x2534	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+80
0x2538	0x21720080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+84
; end of _RF_MODEM_TX_RAMP_DELAY_8_850
;RF4463PRO.c,99 :: _RF_MODEM_TX_RAMP_DELAY_8_433 [88]
0x253C	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+0
0x2540	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+4
0x2544	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+8
0x2548	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+12
0x254C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+16
0x2550	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+20
0x2554	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+24
0x2558	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+28
0x255C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+32
0x2560	0x10300080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+36
0x2564	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+40
0x2568	0x10200080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+44
0x256C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+48
0x2570	0x10100080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+52
0x2574	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+56
0x2578	0x20100080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+60
0x257C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+64
0x2580	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+68
0x2584	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+72
0x2588	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+76
0x258C	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+80
0x2590	0x21720080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+84
; end of _RF_MODEM_TX_RAMP_DELAY_8_433
;,0 :: _initBlock_13 [154]
; Containing: RF_MODEM_AFC_GEAR_7_850 [77]
;             RF_SYNTH_PFDCP_CPFF_7 [77]
0x2594	0x01803604 ;_initBlock_13+0 : RF_MODEM_AFC_GEAR_7_850 at 0x2594
0x2598	0x04803052 ;_initBlock_13+4
0x259C	0x30038036 ;_initBlock_13+8
0x25A0	0x3604807F ;_initBlock_13+12
0x25A4	0x10170780 ;_initBlock_13+16
0x25A8	0x80120080 ;_initBlock_13+20
0x25AC	0xA0B1042A ;_initBlock_13+24
0x25B0	0x54801200 ;_initBlock_13+28
0x25B4	0x00A09A02 ;_initBlock_13+32
0x25B8	0x01A88012 ;_initBlock_13+36
0x25BC	0x1200A08F ;_initBlock_13+40
0x25C0	0x1F015081 ;_initBlock_13+44
0x25C4	0x832300A0 ;_initBlock_13+48
0x25C8	0xA08400EF ;_initBlock_13+52
0x25CC	0xFF8F2300 ;_initBlock_13+56
0x25D0	0x00E0C900 ;_initBlock_13+60
0x25D4	0x01FF8F23 ;_initBlock_13+64
0x25D8	0x3604E023 ;_initBlock_13+68
0x25DC	0x69500180 ;_initBlock_13+72
0x25E0	0x0B0E2C80 ;_initBlock_13+76 : RF_SYNTH_PFDCP_CPFF_7 at 0x25E1
0x25E4	0x03730C04 ;_initBlock_13+80
0x25E8	0x040B0E2C ;_initBlock_13+84
0x25EC	0x2C03730C ;_initBlock_13+88
0x25F0	0x0C040B0E ;_initBlock_13+92
0x25F4	0x0E2C0373 ;_initBlock_13+96
0x25F8	0x730C040B ;_initBlock_13+100
0x25FC	0x0B0E2C03 ;_initBlock_13+104
0x2600	0x03730C04 ;_initBlock_13+108
0x2604	0x040B0E2C ;_initBlock_13+112
0x2608	0x3403730C ;_initBlock_13+116
0x260C	0x07040B04 ;_initBlock_13+120
0x2610	0x04340370 ;_initBlock_13+124
0x2614	0x7007040B ;_initBlock_13+128
0x2618	0x0B050103 ;_initBlock_13+132
0x261C	0x03000205 ;_initBlock_13+136
0x2620	0x050B0501 ;_initBlock_13+140
0x2624	0x2C030002 ;_initBlock_13+144
0x2628	0x0C040B0E ;_initBlock_13+148
0x262C	0x0373 ;_initBlock_13+152
; end of _initBlock_13
;RF4463PRO.c,0 :: ?ICS?lstr5_RF4463PRO [24]
0x262E	0x4652205B ;?ICS?lstr5_RF4463PRO+0
0x2632	0x33363434 ;?ICS?lstr5_RF4463PRO+4
0x2636	0x43205D20 ;?ICS?lstr5_RF4463PRO+8
0x263A	0x66205354 ;?ICS?lstr5_RF4463PRO+12
0x263E	0x656C6961 ;?ICS?lstr5_RF4463PRO+16
0x2642	0x000A0D64 ;?ICS?lstr5_RF4463PRO+20
; end of ?ICS?lstr5_RF4463PRO
;,0 :: _initBlock_15 [46]
; Containing: ?ICS?lstr3_RF4463PRO [23]
;             ?ICS?lstr4_RF4463PRO [23]
0x2646	0x65776F50 ;_initBlock_15+0 : ?ICS?lstr3_RF4463PRO at 0x2646
0x264A	0x6E4F2072 ;_initBlock_15+4
0x264E	0x73655220 ;_initBlock_15+8
0x2652	0x41207465 ;_initBlock_15+12
0x2656	0x796C7070 ;_initBlock_15+16
0x265A	0x4E000D0A ;_initBlock_15+20 : ?ICS?lstr4_RF4463PRO at 0x265D
0x265E	0x4620746F ;_initBlock_15+24
0x2662	0x646E756F ;_initBlock_15+28
0x2666	0x64615220 ;_initBlock_15+32
0x266A	0x44206F69 ;_initBlock_15+36
0x266E	0x0A617461 ;_initBlock_15+40
0x2672	0x000D ;_initBlock_15+44
; end of _initBlock_15
;RF4463PRO.c,0 :: ?ICS?lstr1_RF4463PRO [20]
0x2674	0x72617453 ;?ICS?lstr1_RF4463PRO+0
0x2678	0x65442074 ;?ICS?lstr1_RF4463PRO+4
0x267C	0x53206F6D ;?ICS?lstr1_RF4463PRO+8
0x2680	0x65747379 ;?ICS?lstr1_RF4463PRO+12
0x2684	0x000D0A6D ;?ICS?lstr1_RF4463PRO+16
; end of ?ICS?lstr1_RF4463PRO
;__Lib_System_105_107.c,388 :: __Lib_System_105_107_APBAHBPrescTable [16]
0x2688	0x00000000 ;__Lib_System_105_107_APBAHBPrescTable+0
0x268C	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+4
0x2690	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+8
0x2694	0x09080706 ;__Lib_System_105_107_APBAHBPrescTable+12
; end of __Lib_System_105_107_APBAHBPrescTable
;RF4463PRO.c,0 :: ?ICS?lstr2_RF4463PRO [14]
0x2698	0x69646152 ;?ICS?lstr2_RF4463PRO+0
0x269C	0x6E4F206F ;?ICS?lstr2_RF4463PRO+4
0x26A0	0x0A212121 ;?ICS?lstr2_RF4463PRO+8
0x26A4	0x000D ;?ICS?lstr2_RF4463PRO+12
; end of ?ICS?lstr2_RF4463PRO
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150     [140]    _GPIO_Clk_Enable
0x01DC      [34]    __Lib_SPI_123_SPIx_Read
0x0200      [12]    _Get_Fosc_kHz
0x020C     [500]    _GPIO_Config
0x0400      [28]    _SPI2_Read
0x041C     [100]    _ucRf4463CheckCTS
0x0480      [20]    _ucRf4463SPIByte
0x0494     [168]    _RCC_GetClocksFrequency
0x053C      [48]    _vRf4463SPIReadBuffer
0x056C     [148]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x0600      [38]    _vRf4463SPIWriteBuffer
0x0628      [66]    __FloatToSignedIntegral
0x066C      [12]    _vRF4463SetPinSDN
0x0678      [12]    _vRF4463SetPinSelect
0x0684     [164]    __Div_FP
0x0728      [64]    _ucRf4463SetCommand
0x0768      [94]    _ucRf4463GetCommand
0x07C8     [138]    __Mul_FP
0x0854      [44]    __UnsignedIntegralToFloat
0x0880      [30]    __Lib_UART_123_45_UARTx_Write
0x08A0      [66]    __Lib_SPI_123_SPIx_Init_Advanced
0x08E4     [272]    _GPIO_Alternate_Function_Enable
0x09F4     [580]    __Lib_UART_123_45_UARTx_Init_Advanced
0x0C38      [72]    _get_battery_voltage
0x0C80      [40]    _UART1_Init_Advanced
0x0CA8      [84]    _SPI2_Init_Advanced
0x0CFC      [34]    _vBufferSetToZero
0x0D20     [416]    _rf_init_freq
0x0EC0     [124]    _GPIO_SET
0x0F3C      [70]    __FloatToUnsignedIntegral
0x0F84      [28]    _UART1_Write
0x0FA0      [96]    _ucRf4463DeviceAvailability
0x1000      [50]    __Lib_UART_123_45_UARTx_Write_Text
0x1038     [164]    _vRf4463PowerOnReset
0x10E0      [24]    _Delay_Cyc
0x10F8      [24]    _GPIO_Digital_Input
0x1110      [28]    _GPIO_Digital_Output
0x112C    [1900]    _rf4463Config
0x1898      [64]    _rfInit
0x18D8      [28]    _UART1_Write_Text
0x18F4      [84]    _Sound_Init
0x1948     [140]    _Sound_Play
0x19D4      [58]    ___FillZeros
0x1A10     [168]    _portInit
0x1AB8      [20]    ___CC2DW
0x1ACC     [108]    __Lib_System_105_107_SystemClockSetDefault
0x1B38      [22]    _nop_10
0x1B50      [20]    __Lib_System_105_107_InitialSetUpFosc
0x1B64       [8]    ___GenExcept
0x1B70     [156]    _main
0x1C0C     [344]    __Lib_System_105_107_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000      [16]    _RF_MODEM_MOD_TYPE_12_data
0x20000010      [12]    _RF_MODEM_TX_RAMP_DELAY_8_data
0x2000001C      [15]    _RF_MODEM_OOK_CNT1_11_data
0x2000002B      [16]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data
0x2000003B      [16]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data
0x2000004B      [16]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data
0x2000005B      [13]    _RF_MODEM_AGC_WINDOW_SIZE_9_data
0x20000068      [13]    _RF_MODEM_BCR_OSR_1_9_data
0x20000075      [13]    _RF_MODEM_AFC_GEAR_7_data
0x20000082      [11]    _RF_SYNTH_PFDCP_CPFF_7_data
0x2000008D       [1]    _dataRate
0x2000008E       [1]    _freq3
0x2000008F       [1]    _mode
0x20000090       [1]    _power
0x20000091       [1]    _freq2
0x20000092       [1]    _freq1
0x20000094       [4]    ___System_CLOCK_IN_KHZ
0x20000098       [4]    __Lib_Sound_soundPortAddr
0x2000009C       [4]    __Lib_Sound_pinMask1
0x200000A0       [4]    __Lib_Sound_pinMask0
0x200000A4       [4]    _SPI_Rd_Ptr
0x200000A8       [4]    _SPI_Wr_Ptr
0x200000AC       [4]    _UART_Wr_Ptr
0x200000B0       [4]    _UART_Rd_Ptr
0x200000B4       [4]    _UART_Rdy_Ptr
0x200000B8       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1032       [4]    __Lib_System_105_107_ADCPrescTable
0x1D64      [16]    ?ICS_RF_MODEM_MOD_TYPE_12_data
0x1D74      [12]    ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data
0x1D80      [15]    ?ICS_RF_MODEM_OOK_CNT1_11_data
0x1D8F      [16]    ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data
0x1D9F      [16]    ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data
0x1DAF      [16]    ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data
0x1DBF      [13]    ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data
0x1DCC      [13]    ?ICS_RF_MODEM_BCR_OSR_1_9_data
0x1DD9      [13]    ?ICS_RF_MODEM_AFC_GEAR_7_data
0x1DE6      [11]    ?ICS_RF_SYNTH_PFDCP_CPFF_7_data
0x1DF1     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850
0x1E75     [132]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433
0x1EF9     [132]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850
0x1F7D     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850
0x2001     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433
0x2085     [132]    _RF_MODEM_MOD_TYPE_12
0x2109     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433
0x218D     [121]    _RF_MODEM_OOK_CNT1_11_850
0x2206     [121]    _RF_MODEM_OOK_CNT1_11_433
0x2280     [108]    __GPIO_MODULE_USART1_PA9_10
0x22EC     [108]    __GPIO_MODULE_SPI2_PB13_14_15
0x2358      [99]    _RF_MODEM_AGC_WINDOW_SIZE_9_850
0x23BB      [99]    _RF_MODEM_BCR_OSR_1_9_850
0x241E      [99]    _RF_MODEM_BCR_OSR_1_9_433
0x2481      [99]    _RF_MODEM_AGC_WINDOW_SIZE_9_433
0x24E4      [88]    _RF_MODEM_TX_RAMP_DELAY_8_850
0x253C      [88]    _RF_MODEM_TX_RAMP_DELAY_8_433
0x2594      [77]    _RF_MODEM_AFC_GEAR_7_850
0x25E1      [77]    _RF_SYNTH_PFDCP_CPFF_7
0x262E      [24]    ?ICS?lstr5_RF4463PRO
0x2646      [23]    ?ICS?lstr3_RF4463PRO
0x265D      [23]    ?ICS?lstr4_RF4463PRO
0x2674      [20]    ?ICS?lstr1_RF4463PRO
0x2688      [16]    __Lib_System_105_107_APBAHBPrescTable
0x2698      [14]    ?ICS?lstr2_RF4463PRO
