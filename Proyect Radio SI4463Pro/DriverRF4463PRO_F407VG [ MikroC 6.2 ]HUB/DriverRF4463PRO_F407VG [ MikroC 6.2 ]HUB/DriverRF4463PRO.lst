;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22/12/2020 04:25:09 p. m.
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2001  	537001980
0x0004	0x39A10000  	14753
0x0008	0x3D810000  	15745
0x000C	0x3D810000  	15745
0x0010	0x3D810000  	15745
0x0014	0x3D810000  	15745
0x0018	0x3D810000  	15745
0x001C	0x3D810000  	15745
0x0020	0x3D810000  	15745
0x0024	0x3D810000  	15745
0x0028	0x3D810000  	15745
0x002C	0x3D810000  	15745
0x0030	0x3D810000  	15745
0x0034	0x3D810000  	15745
0x0038	0x3D810000  	15745
0x003C	0x3D810000  	15745
0x0040	0x3D810000  	15745
0x0044	0x3D810000  	15745
0x0048	0x3D810000  	15745
0x004C	0x3D810000  	15745
0x0050	0x3D810000  	15745
0x0054	0x3D810000  	15745
0x0058	0x36010000  	13825
0x005C	0x3D810000  	15745
0x0060	0x3D810000  	15745
0x0064	0x3D810000  	15745
0x0068	0x3D810000  	15745
0x006C	0x3D810000  	15745
0x0070	0x3D810000  	15745
0x0074	0x3D810000  	15745
0x0078	0x3D810000  	15745
0x007C	0x3D810000  	15745
0x0080	0x3D810000  	15745
0x0084	0x3D810000  	15745
0x0088	0x3D810000  	15745
0x008C	0x3D810000  	15745
0x0090	0x3D810000  	15745
0x0094	0x3D810000  	15745
0x0098	0x3D810000  	15745
0x009C	0x3D810000  	15745
0x00A0	0x3D810000  	15745
0x00A4	0x3D810000  	15745
0x00A8	0x3D810000  	15745
0x00AC	0x3D810000  	15745
0x00B0	0x34090000  	13321
0x00B4	0x3D810000  	15745
0x00B8	0x3D810000  	15745
0x00BC	0x3D810000  	15745
0x00C0	0x3D810000  	15745
0x00C4	0x3D810000  	15745
0x00C8	0x3D810000  	15745
0x00CC	0x35E50000  	13797
0x00D0	0x3D810000  	15745
0x00D4	0x342D0000  	13357
0x00D8	0x3D810000  	15745
0x00DC	0x3D810000  	15745
0x00E0	0x3D810000  	15745
0x00E4	0x3D810000  	15745
0x00E8	0x3D810000  	15745
0x00EC	0x3D810000  	15745
0x00F0	0x3D810000  	15745
0x00F4	0x3D810000  	15745
0x00F8	0x3D810000  	15745
0x00FC	0x3D810000  	15745
0x0100	0x3D810000  	15745
0x0104	0x3D810000  	15745
0x0108	0x3D810000  	15745
0x010C	0x3D810000  	15745
0x0110	0x3D810000  	15745
0x0114	0x3D810000  	15745
0x0118	0x3D810000  	15745
0x011C	0x3D810000  	15745
0x0120	0x3D810000  	15745
0x0124	0x3D810000  	15745
0x0128	0x3D810000  	15745
0x012C	0x3D810000  	15745
0x0130	0x3D810000  	15745
0x0134	0x3D810000  	15745
0x0138	0x3D810000  	15745
0x013C	0x3D810000  	15745
0x0140	0x3D810000  	15745
0x0144	0x3D810000  	15745
0x0148	0x3D810000  	15745
0x014C	0x3D810000  	15745
0x0150	0x3D810000  	15745
0x0154	0x3D810000  	15745
0x0158	0x35610000  	13665
0x015C	0x3D810000  	15745
0x0160	0x3D810000  	15745
0x0164	0x3D810000  	15745
0x0168	0x3D810000  	15745
0x016C	0x3D810000  	15745
0x0170	0x3D810000  	15745
0x0174	0x3D810000  	15745
0x0178	0x3D810000  	15745
0x017C	0x3D810000  	15745
0x0180	0x3D810000  	15745
0x0184	0x3D810000  	15745
; end of ____SysVT
_main:
;DriverRF4463PROMain.c, 472 :: 		void main() {
0x39A0	0xB098    SUB	SP, SP, #96
0x39A2	0xF7FFFE4D  BL	13888
0x39A6	0xF000F9D5  BL	15700
0x39AA	0xF003F879  BL	27296
0x39AE	0xF000F9BF  BL	15664
0x39B2	0xF003F827  BL	27140
;DriverRF4463PROMain.c, 476 :: 		Delay_ms( 2000 );                    // delay de depuracion
0x39B6	0xF64F37FE  MOVW	R7, #64510
0x39BA	0xF2C067AC  MOVT	R7, #1708
0x39BE	0xBF00    NOP
0x39C0	0xBF00    NOP
L_main365:
0x39C2	0x1E7F    SUBS	R7, R7, #1
0x39C4	0xD1FD    BNE	L_main365
0x39C6	0xBF00    NOP
0x39C8	0xBF00    NOP
0x39CA	0xBF00    NOP
;DriverRF4463PROMain.c, 480 :: 		GPIO_Digital_Output( &GPIOE_BASE, _GPIO_PINMASK_9 );
0x39CC	0xF2402100  MOVW	R1, #512
0x39D0	0x488A    LDR	R0, [PC, #552]
0x39D2	0xF7FEFDAD  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 481 :: 		GPIO_Digital_Output( &GPIOE_BASE, _GPIO_PINMASK_11 );
0x39D6	0xF6400100  MOVW	R1, #2048
0x39DA	0x4888    LDR	R0, [PC, #544]
0x39DC	0xF7FEFDA8  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 482 :: 		GPIO_Digital_Output( &GPIOE_BASE, _GPIO_PINMASK_13 );
0x39E0	0xF2420100  MOVW	R1, #8192
0x39E4	0x4885    LDR	R0, [PC, #532]
0x39E6	0xF7FEFDA3  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 490 :: 		GPIO_Digital_Input( &GPIOD_BASE, _GPIO_PINMASK_0 );     // nIRQ (Interrupt Request Pin)
0x39EA	0xF2400101  MOVW	R1, #1
0x39EE	0x4884    LDR	R0, [PC, #528]
0x39F0	0xF7FEFCFC  BL	_GPIO_Digital_Input+0
;DriverRF4463PROMain.c, 491 :: 		GPIO_Digital_Output( &GPIOD_BASE, _GPIO_PINMASK_1 );    // SDN  ()
0x39F4	0xF2400102  MOVW	R1, #2
0x39F8	0x4881    LDR	R0, [PC, #516]
0x39FA	0xF7FEFD99  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 492 :: 		GPIO_Digital_Output( &GPIOD_BASE, _GPIO_PINMASK_2 );    // nSEL (Chip Select)
0x39FE	0xF2400104  MOVW	R1, #4
0x3A02	0x487F    LDR	R0, [PC, #508]
0x3A04	0xF7FEFD94  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 506 :: 		RCC_APB2ENRbits.SYSCFGEN = 1; //Clock Enable
0x3A08	0x2201    MOVS	R2, #1
0x3A0A	0xB252    SXTB	R2, R2
0x3A0C	0x487D    LDR	R0, [PC, #500]
0x3A0E	0x6002    STR	R2, [R0, #0]
;DriverRF4463PROMain.c, 507 :: 		SYSCFG_EXTICR1  |= 0x0003;    //Pin Configuration
0x3A10	0x487D    LDR	R0, [PC, #500]
0x3A12	0x6800    LDR	R0, [R0, #0]
0x3A14	0xF0400103  ORR	R1, R0, #3
0x3A18	0x487B    LDR	R0, [PC, #492]
0x3A1A	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 508 :: 		EXTI_IMR.B0     |= 1;         //Interruption Edge Flag
0x3A1C	0x487B    LDR	R0, [PC, #492]
0x3A1E	0x6800    LDR	R0, [R0, #0]
0x3A20	0xF0400101  ORR	R1, R0, #1
0x3A24	0xB2C9    UXTB	R1, R1
0x3A26	0x4879    LDR	R0, [PC, #484]
0x3A28	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 509 :: 		EXTI_FTSR.B0    |= 1;
0x3A2A	0x4879    LDR	R0, [PC, #484]
0x3A2C	0x6800    LDR	R0, [R0, #0]
0x3A2E	0xF0400101  ORR	R1, R0, #1
0x3A32	0xB2C9    UXTB	R1, R1
0x3A34	0x4876    LDR	R0, [PC, #472]
0x3A36	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 511 :: 		nSEL = 1;
0x3A38	0x4876    LDR	R0, [PC, #472]
0x3A3A	0x6002    STR	R2, [R0, #0]
;DriverRF4463PROMain.c, 513 :: 		LED_RED      = 0;
0x3A3C	0x2100    MOVS	R1, #0
0x3A3E	0xB249    SXTB	R1, R1
0x3A40	0x4875    LDR	R0, [PC, #468]
0x3A42	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 514 :: 		LED_GREEN    = 0;
0x3A44	0x4875    LDR	R0, [PC, #468]
0x3A46	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 515 :: 		LED_BLUE     = 0;
0x3A48	0x4875    LDR	R0, [PC, #468]
0x3A4A	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 517 :: 		Delay_ms( 100 );
0x3A4C	0xF24727FE  MOVW	R7, #29438
0x3A50	0xF2C00755  MOVT	R7, #85
0x3A54	0xBF00    NOP
0x3A56	0xBF00    NOP
L_main367:
0x3A58	0x1E7F    SUBS	R7, R7, #1
0x3A5A	0xD1FD    BNE	L_main367
0x3A5C	0xBF00    NOP
0x3A5E	0xBF00    NOP
0x3A60	0xBF00    NOP
;DriverRF4463PROMain.c, 519 :: 		LED_RED      = 1;
0x3A62	0x2101    MOVS	R1, #1
0x3A64	0xB249    SXTB	R1, R1
0x3A66	0x486C    LDR	R0, [PC, #432]
0x3A68	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 520 :: 		LED_GREEN    = 0;
0x3A6A	0x2100    MOVS	R1, #0
0x3A6C	0xB249    SXTB	R1, R1
0x3A6E	0x486B    LDR	R0, [PC, #428]
0x3A70	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 521 :: 		LED_BLUE     = 0;
0x3A72	0x486B    LDR	R0, [PC, #428]
0x3A74	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 522 :: 		Delay_ms(300);
0x3A76	0xF64507FE  MOVW	R7, #22782
0x3A7A	0xF2C01700  MOVT	R7, #256
0x3A7E	0xBF00    NOP
0x3A80	0xBF00    NOP
L_main369:
0x3A82	0x1E7F    SUBS	R7, R7, #1
0x3A84	0xD1FD    BNE	L_main369
0x3A86	0xBF00    NOP
0x3A88	0xBF00    NOP
0x3A8A	0xBF00    NOP
;DriverRF4463PROMain.c, 523 :: 		InitTimer2();
0x3A8C	0xF7FEFC82  BL	_InitTimer2+0
;DriverRF4463PROMain.c, 527 :: 		vUSARTConfigUSART1( 115200 );  // configura todos las parametros de USART
0x3A90	0xF44F30E1  MOV	R0, #115200
0x3A94	0xB401    PUSH	(R0)
0x3A96	0xF7FFFC19  BL	_vUSARTConfigUSART1+0
0x3A9A	0xB001    ADD	SP, SP, #4
;DriverRF4463PROMain.c, 529 :: 		UART1_Write_Text("[ SYS STM32F407VC ] Start System\r\n");
0x3A9C	0xF10D0B06  ADD	R11, SP, #6
0x3AA0	0xF10B0A23  ADD	R10, R11, #35
0x3AA4	0xF8DFC17C  LDR	R12, [PC, #380]
0x3AA8	0xF7FEFD6E  BL	___CC2DW+0
0x3AAC	0xF10D0006  ADD	R0, SP, #6
0x3AB0	0x4604    MOV	R4, R0
0x3AB2	0x4620    MOV	R0, R4
0x3AB4	0xF7FFFBFC  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 530 :: 		LED_RED      = 0;
0x3AB8	0x2100    MOVS	R1, #0
0x3ABA	0xB249    SXTB	R1, R1
0x3ABC	0x4856    LDR	R0, [PC, #344]
0x3ABE	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 531 :: 		LED_GREEN    = 0;
0x3AC0	0x4856    LDR	R0, [PC, #344]
0x3AC2	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 532 :: 		LED_BLUE     = 1;
0x3AC4	0x2101    MOVS	R1, #1
0x3AC6	0xB249    SXTB	R1, R1
0x3AC8	0x4855    LDR	R0, [PC, #340]
0x3ACA	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 533 :: 		vSPI1Init();           // configura todos los parametros de SPI
0x3ACC	0xF7FFFC82  BL	_vSPI1Init+0
;DriverRF4463PROMain.c, 538 :: 		ucRF4463Freq3 = 9;
0x3AD0	0x2109    MOVS	R1, #9
0x3AD2	0x4855    LDR	R0, [PC, #340]
0x3AD4	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 539 :: 		ucRF4463Freq2 = 1;
0x3AD6	0x2101    MOVS	R1, #1
0x3AD8	0x4854    LDR	R0, [PC, #336]
0x3ADA	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 540 :: 		ucRF4463Freq1 = 5;
0x3ADC	0x2105    MOVS	R1, #5
0x3ADE	0x4854    LDR	R0, [PC, #336]
0x3AE0	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 543 :: 		ucRF4463Power = 127;            // 34
0x3AE2	0x217F    MOVS	R1, #127
0x3AE4	0x4853    LDR	R0, [PC, #332]
0x3AE6	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 545 :: 		ucRF4463Rate  = dr_1p2;                // BAUDRATE
0x3AE8	0x2100    MOVS	R1, #0
0x3AEA	0x4853    LDR	R0, [PC, #332]
0x3AEC	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 547 :: 		ucRF4463Mode  = master_mode;          // para transmision continua usar: tx_test_mode
0x3AEE	0x2100    MOVS	R1, #0
0x3AF0	0x4852    LDR	R0, [PC, #328]
0x3AF2	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 549 :: 		ucRF4463FreqChannel = 1;
0x3AF4	0x2101    MOVS	R1, #1
0x3AF6	0x4852    LDR	R0, [PC, #328]
0x3AF8	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 553 :: 		reset_mode = 0;
0x3AFA	0x2100    MOVS	R1, #0
0x3AFC	0x4851    LDR	R0, [PC, #324]
0x3AFE	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 558 :: 		vRF4463MainSetTXString();    // usada para establecer el encabezdo predeterminado
0x3B00	0xF7FFFC64  BL	_vRF4463MainSetTXString+0
;DriverRF4463PROMain.c, 559 :: 		VRF4463SDNReset();
0x3B04	0xF7FFFB0C  BL	_VRF4463SDNReset+0
;DriverRF4463PROMain.c, 560 :: 		vRF4463Init();
0x3B08	0xF7FEFD48  BL	_vRF4463Init+0
;DriverRF4463PROMain.c, 561 :: 		vRF4463ClearInterrupts();
0x3B0C	0xF7FFFB56  BL	_vRF4463ClearInterrupts+0
;DriverRF4463PROMain.c, 562 :: 		vRF4463PartInfo ();          // SOLICITA EL MODELO DEL RADIO
0x3B10	0xF7FFFB7A  BL	_vRF4463PartInfo+0
;DriverRF4463PROMain.c, 564 :: 		LED_GREEN    = 0;
0x3B14	0x2100    MOVS	R1, #0
0x3B16	0xB249    SXTB	R1, R1
0x3B18	0x4840    LDR	R0, [PC, #256]
0x3B1A	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 565 :: 		LED_BLUE     = 0;
0x3B1C	0x4840    LDR	R0, [PC, #256]
0x3B1E	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 569 :: 		UART1_Write_Text( "[ SYS STM32F407VC ] RF Radio ready\r\n" );
0x3B20	0xF10D0B29  ADD	R11, SP, #41
0x3B24	0xF10B0A25  ADD	R10, R11, #37
0x3B28	0xF8DFC11C  LDR	R12, [PC, #284]
0x3B2C	0xF7FEFD2C  BL	___CC2DW+0
0x3B30	0xF10D0029  ADD	R0, SP, #41
0x3B34	0x4604    MOV	R4, R0
0x3B36	0x4620    MOV	R0, R4
0x3B38	0xF7FFFBBA  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 572 :: 		while ( 1 ) {
L_main371:
;DriverRF4463PROMain.c, 575 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x3B3C	0x4843    LDR	R0, [PC, #268]
0x3B3E	0x6800    LDR	R0, [R0, #0]
0x3B40	0x2801    CMP	R0, #1
0x3B42	0xD101    BNE	L_main373
;DriverRF4463PROMain.c, 576 :: 		vUSARTReceivedFromUSART1();
0x3B44	0xF7FFFB7A  BL	_vUSARTReceivedFromUSART1+0
;DriverRF4463PROMain.c, 577 :: 		}
L_main373:
;DriverRF4463PROMain.c, 588 :: 		if ( ucRF4463Mode == master_mode ) {
0x3B48	0x483C    LDR	R0, [PC, #240]
0x3B4A	0x7800    LDRB	R0, [R0, #0]
0x3B4C	0xB910    CBNZ	R0, L_main374
;DriverRF4463PROMain.c, 589 :: 		vRF4463TxData();
0x3B4E	0xF7FFFBE3  BL	_vRF4463TxData+0
;DriverRF4463PROMain.c, 590 :: 		}
0x3B52	0xE00C    B	L_main375
L_main374:
;DriverRF4463PROMain.c, 593 :: 		else if ( ucRF4463Mode == slave_mode ) {
0x3B54	0x4839    LDR	R0, [PC, #228]
0x3B56	0x7800    LDRB	R0, [R0, #0]
0x3B58	0x2801    CMP	R0, #1
0x3B5A	0xD102    BNE	L_main376
;DriverRF4463PROMain.c, 594 :: 		vRF4463RxInit();
0x3B5C	0xF7FDFA6E  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 595 :: 		}
0x3B60	0xE005    B	L_main377
L_main376:
;DriverRF4463PROMain.c, 598 :: 		else if ( ucRF4463Mode == rf_off ) {
0x3B62	0x4836    LDR	R0, [PC, #216]
0x3B64	0x7800    LDRB	R0, [R0, #0]
0x3B66	0x2804    CMP	R0, #4
0x3B68	0xD101    BNE	L_main378
;DriverRF4463PROMain.c, 599 :: 		vRF4463RxInit();
0x3B6A	0xF7FDFA67  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 600 :: 		}
L_main378:
L_main377:
L_main375:
;DriverRF4463PROMain.c, 603 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x3B6E	0x4833    LDR	R0, [PC, #204]
0x3B70	0x7800    LDRB	R0, [R0, #0]
0x3B72	0x2802    CMP	R0, #2
0x3B74	0xD10D    BNE	L_main379
;DriverRF4463PROMain.c, 604 :: 		vRF4463TxCont();
0x3B76	0xF7FEFC45  BL	_vRF4463TxCont+0
;DriverRF4463PROMain.c, 605 :: 		while ( 1 ) {
L_main380:
;DriverRF4463PROMain.c, 607 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x3B7A	0x4834    LDR	R0, [PC, #208]
0x3B7C	0x6800    LDR	R0, [R0, #0]
0x3B7E	0x2801    CMP	R0, #1
0x3B80	0xD100    BNE	L_main382
;DriverRF4463PROMain.c, 608 :: 		break;
0x3B82	0xE006    B	L_main381
;DriverRF4463PROMain.c, 609 :: 		}
L_main382:
;DriverRF4463PROMain.c, 611 :: 		if ( !nIRQ ) {
0x3B84	0x4832    LDR	R0, [PC, #200]
0x3B86	0x6800    LDR	R0, [R0, #0]
0x3B88	0x2800    CMP	R0, #0
0x3B8A	0xD101    BNE	L_main383
;DriverRF4463PROMain.c, 612 :: 		vRF4463TxCont();
0x3B8C	0xF7FEFC3A  BL	_vRF4463TxCont+0
;DriverRF4463PROMain.c, 613 :: 		}
L_main383:
;DriverRF4463PROMain.c, 614 :: 		}
0x3B90	0xE7F3    B	L_main380
L_main381:
;DriverRF4463PROMain.c, 615 :: 		}
L_main379:
;DriverRF4463PROMain.c, 617 :: 		if ( ucRF4463Mode == rx_test_mode ) {
0x3B92	0x482A    LDR	R0, [PC, #168]
0x3B94	0x7800    LDRB	R0, [R0, #0]
0x3B96	0x2803    CMP	R0, #3
0x3B98	0xD107    BNE	L_main384
;DriverRF4463PROMain.c, 618 :: 		vRF4463RxInit ();
0x3B9A	0xF7FDFA4F  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 619 :: 		while ( 1 ) {
L_main385:
;DriverRF4463PROMain.c, 621 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x3B9E	0x482B    LDR	R0, [PC, #172]
0x3BA0	0x6800    LDR	R0, [R0, #0]
0x3BA2	0x2801    CMP	R0, #1
0x3BA4	0xD100    BNE	L_main387
;DriverRF4463PROMain.c, 622 :: 		break;
0x3BA6	0xE000    B	L_main386
;DriverRF4463PROMain.c, 623 :: 		}
L_main387:
;DriverRF4463PROMain.c, 626 :: 		}
0x3BA8	0xE7F9    B	L_main385
L_main386:
;DriverRF4463PROMain.c, 627 :: 		}
L_main384:
;DriverRF4463PROMain.c, 629 :: 		if ( reset_mode == 0 ) {
0x3BAA	0x4826    LDR	R0, [PC, #152]
0x3BAC	0x7800    LDRB	R0, [R0, #0]
0x3BAE	0x2800    CMP	R0, #0
0x3BB0	0xF04080B1  BNE	L_main388
;DriverRF4463PROMain.c, 631 :: 		while ( 1 ) {
L_main389:
;DriverRF4463PROMain.c, 633 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x3BB4	0x4825    LDR	R0, [PC, #148]
0x3BB6	0x6800    LDR	R0, [R0, #0]
0x3BB8	0x2801    CMP	R0, #1
0x3BBA	0xD100    BNE	L_main391
;DriverRF4463PROMain.c, 634 :: 		break;
0x3BBC	0xE0AB    B	L_main390
;DriverRF4463PROMain.c, 635 :: 		}
L_main391:
;DriverRF4463PROMain.c, 637 :: 		if ( Flag.reach_1s ) {
0x3BBE	0x4925    LDR	R1, [PC, #148]
0x3BC0	0x6808    LDR	R0, [R1, #0]
0x3BC2	0xB140    CBZ	R0, L_main392
;DriverRF4463PROMain.c, 638 :: 		Flag.reach_1s = 0;
0x3BC4	0x2100    MOVS	R1, #0
0x3BC6	0xB249    SXTB	R1, R1
0x3BC8	0x4822    LDR	R0, [PC, #136]
0x3BCA	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 639 :: 		if ( ucRF4463Mode == master_mode ) {
0x3BCC	0x481B    LDR	R0, [PC, #108]
0x3BCE	0x7800    LDRB	R0, [R0, #0]
0x3BD0	0xB908    CBNZ	R0, L_main393
;DriverRF4463PROMain.c, 640 :: 		vRF4463TxData();
0x3BD2	0xF7FFFBA1  BL	_vRF4463TxData+0
;DriverRF4463PROMain.c, 641 :: 		}
L_main393:
;DriverRF4463PROMain.c, 642 :: 		}
L_main392:
;DriverRF4463PROMain.c, 645 :: 		if ( !Flag.is_tx ) {
0x3BD6	0x4920    LDR	R1, [PC, #128]
0x3BD8	0x6808    LDR	R0, [R1, #0]
0x3BDA	0x2800    CMP	R0, #0
0x3BDC	0xF040809A  BNE	L_main394
;DriverRF4463PROMain.c, 646 :: 		if ( !nIRQ ) {          // !nIRQ
0x3BE0	0x481B    LDR	R0, [PC, #108]
0x3BE2	0x6800    LDR	R0, [R0, #0]
0x3BE4	0x2800    CMP	R0, #0
0x3BE6	0xF0408095  BNE	L_main395
;DriverRF4463PROMain.c, 647 :: 		vRF4463ClearInterrupts();
0x3BEA	0xF7FFFAE7  BL	_vRF4463ClearInterrupts+0
;DriverRF4463PROMain.c, 649 :: 		if ( ( spi_read_buf[ 4 ] & 0x08) == 0 ) { // crc error check
0x3BEE	0x481B    LDR	R0, [PC, #108]
0x3BF0	0x7800    LDRB	R0, [R0, #0]
0x3BF2	0xF0000008  AND	R0, R0, #8
0x3BF6	0xB2C0    UXTB	R0, R0
0x3BF8	0x2800    CMP	R0, #0
0x3BFA	0xE031    B	#98
0x3BFC	0x10004002  	GPIOE_BASE+0
0x3C00	0x0C004002  	GPIOD_BASE+0
0x3C04	0x08B84247  	RCC_APB2ENRbits+0
0x3C08	0x38084001  	SYSCFG_EXTICR1+0
0x3C0C	0x80004227  	EXTI_IMR+0
0x3C10	0x81804227  	EXTI_FTSR+0
0x3C14	0x82884241  	GPIOD_ODRbits+0
0x3C18	0x02AC4242  	GPIOE_ODRbits+0
0x3C1C	0x02A44242  	GPIOE_ODRbits+0
0x3C20	0x02B44242  	GPIOE_ODRbits+0
0x3C24	0x67730000  	?ICS?lstr3_DriverRF4463PROMain+0
0x3C28	0x22A42000  	_ucRF4463Freq3+0
0x3C2C	0x22A52000  	_ucRF4463Freq2+0
0x3C30	0x22A62000  	_ucRF4463Freq1+0
0x3C34	0x228F2000  	_ucRF4463Power+0
0x3C38	0x22A72000  	_ucRF4463Rate+0
0x3C3C	0x22A82000  	_ucRF4463Mode+0
0x3C40	0x207C2000  	_ucRF4463FreqChannel+0
0x3C44	0x23022000  	_reset_mode+0
0x3C48	0x67960000  	?ICS?lstr4_DriverRF4463PROMain+0
0x3C4C	0x20082000  	_fUSART1Buffer+0
0x3C50	0x82004241  	GPIOD_IDRbits+0
0x3C54	0x57A02204  	_Flag+0
0x3C58	0x57A42204  	_Flag+0
0x3C5C	0x22AD2000  	_spi_read_buf+4
0x3C60	0xD142    BNE	L_main396
;DriverRF4463PROMain.c, 653 :: 		spi_read_fifo();
0x3C62	0xF7FEFBFD  BL	_spi_read_fifo+0
;DriverRF4463PROMain.c, 654 :: 		vRF4463FifoReset();
0x3C66	0xF7FDFA65  BL	_vRF4463FifoReset+0
;DriverRF4463PROMain.c, 656 :: 		chksum = 0;
0x3C6A	0x2000    MOVS	R0, #0
0x3C6C	0xF88D0005  STRB	R0, [SP, #5]
;DriverRF4463PROMain.c, 657 :: 		for ( i = 4; i < payload_length - 1; i++ )                // Calculation Checksum
0x3C70	0x2004    MOVS	R0, #4
0x3C72	0xF88D0004  STRB	R0, [SP, #4]
L_main397:
0x3C76	0xF89D0004  LDRB	R0, [SP, #4]
0x3C7A	0x2841    CMP	R0, #65
0x3C7C	0xDA0F    BGE	L_main398
;DriverRF4463PROMain.c, 658 :: 		chksum += rx_buf[ i ];
0x3C7E	0xF89D1004  LDRB	R1, [SP, #4]
0x3C82	0x4826    LDR	R0, [PC, #152]
0x3C84	0x1840    ADDS	R0, R0, R1
0x3C86	0x7801    LDRB	R1, [R0, #0]
0x3C88	0xF89D0005  LDRB	R0, [SP, #5]
0x3C8C	0x1840    ADDS	R0, R0, R1
0x3C8E	0xF88D0005  STRB	R0, [SP, #5]
;DriverRF4463PROMain.c, 657 :: 		for ( i = 4; i < payload_length - 1; i++ )                // Calculation Checksum
0x3C92	0xF89D0004  LDRB	R0, [SP, #4]
0x3C96	0x1C40    ADDS	R0, R0, #1
0x3C98	0xF88D0004  STRB	R0, [SP, #4]
;DriverRF4463PROMain.c, 658 :: 		chksum += rx_buf[ i ];
0x3C9C	0xE7EB    B	L_main397
L_main398:
;DriverRF4463PROMain.c, 660 :: 		if ( ( chksum == rx_buf[ payload_length - 1 ] )&&( rx_buf[ 4 ] == 0x41 )) {
0x3C9E	0x4820    LDR	R0, [PC, #128]
0x3CA0	0x7801    LDRB	R1, [R0, #0]
0x3CA2	0xF89D0005  LDRB	R0, [SP, #5]
0x3CA6	0x4288    CMP	R0, R1
0x3CA8	0xD11B    BNE	L_main402
0x3CAA	0x481E    LDR	R0, [PC, #120]
0x3CAC	0x7800    LDRB	R0, [R0, #0]
0x3CAE	0x2841    CMP	R0, #65
0x3CB0	0xD117    BNE	L_main402
L__main431:
;DriverRF4463PROMain.c, 665 :: 		UART1_Write_Text( rx_buf );
0x3CB2	0x481A    LDR	R0, [PC, #104]
0x3CB4	0xF7FFFAFC  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 666 :: 		UART1_Write_Text("\r\n");
0x3CB8	0x200D    MOVS	R0, #13
0x3CBA	0xF88D004E  STRB	R0, [SP, #78]
0x3CBE	0x200A    MOVS	R0, #10
0x3CC0	0xF88D004F  STRB	R0, [SP, #79]
0x3CC4	0x2000    MOVS	R0, #0
0x3CC6	0xF88D0050  STRB	R0, [SP, #80]
0x3CCA	0xF10D004E  ADD	R0, SP, #78
0x3CCE	0x4604    MOV	R4, R0
0x3CD0	0x4620    MOV	R0, R4
0x3CD2	0xF7FFFAED  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 669 :: 		rx_cnt++;
0x3CD6	0x4814    LDR	R0, [PC, #80]
0x3CD8	0x6800    LDR	R0, [R0, #0]
0x3CDA	0x1C41    ADDS	R1, R0, #1
0x3CDC	0x4812    LDR	R0, [PC, #72]
0x3CDE	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 675 :: 		}
0x3CE0	0xE001    B	L_main403
L_main402:
;DriverRF4463PROMain.c, 677 :: 		vRF4463RxInit();    // The received data is wrong, you must continue to receive
0x3CE2	0xF7FDF9AB  BL	_vRF4463RxInit+0
L_main403:
;DriverRF4463PROMain.c, 678 :: 		}
0x3CE6	0xE015    B	L_main404
L_main396:
;DriverRF4463PROMain.c, 681 :: 		vUSART1Start_TX("[ CRC ] Fail\r\n", 14 );
0x3CE8	0x200E    MOVS	R0, #14
0x3CEA	0xB401    PUSH	(R0)
0x3CEC	0xF10D0B55  ADD	R11, SP, #85
0x3CF0	0xF10B0A0F  ADD	R10, R11, #15
0x3CF4	0xF8DFC034  LDR	R12, [PC, #52]
0x3CF8	0xF7FEFC46  BL	___CC2DW+0
0x3CFC	0xF10D0055  ADD	R0, SP, #85
0x3D00	0xB401    PUSH	(R0)
0x3D02	0xF7FDF895  BL	_vUSART1Start_TX+0
0x3D06	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 682 :: 		VRF4463SDNReset();
0x3D08	0xF7FFFA0A  BL	_VRF4463SDNReset+0
;DriverRF4463PROMain.c, 683 :: 		vRF4463Init();
0x3D0C	0xF7FEFC46  BL	_vRF4463Init+0
;DriverRF4463PROMain.c, 684 :: 		vRF4463RxInit();
0x3D10	0xF7FDF994  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 685 :: 		}
L_main404:
;DriverRF4463PROMain.c, 686 :: 		}
L_main395:
;DriverRF4463PROMain.c, 687 :: 		}
L_main394:
;DriverRF4463PROMain.c, 688 :: 		}
0x3D14	0xE74E    B	L_main389
L_main390:
;DriverRF4463PROMain.c, 689 :: 		}
L_main388:
;DriverRF4463PROMain.c, 690 :: 		}
0x3D16	0xE711    B	L_main371
;DriverRF4463PROMain.c, 691 :: 		}
L_end_main:
L__main_end_loop:
0x3D18	0xE7FE    B	L__main_end_loop
0x3D1A	0xBF00    NOP
0x3D1C	0x22BE2000  	_rx_buf+0
0x3D20	0x22FF2000  	_rx_buf+65
0x3D24	0x22C22000  	_rx_buf+4
0x3D28	0x22902000  	_rx_cnt+0
0x3D2C	0x67BE0000  	?ICS?lstr6_DriverRF4463PROMain+0
; end of _main
___CC2DW:
;__Lib_System_4XX.c, 44 :: 		
0x2588	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 46 :: 		
L_loopDW:
;__Lib_System_4XX.c, 47 :: 		
0x258A	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_4XX.c, 48 :: 		
0x258E	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_4XX.c, 49 :: 		
0x2592	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 50 :: 		
0x2596	0xD1F8    BNE	L_loopDW
;__Lib_System_4XX.c, 52 :: 		
L_end___CC2DW:
0x2598	0xB001    ADD	SP, SP, #4
0x259A	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_4XX.c, 86 :: 		
0x254C	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 88 :: 		
0x254E	0xF04F0900  MOV	R9, #0
;__Lib_System_4XX.c, 89 :: 		
0x2552	0xF04F0C00  MOV	R12, #0
;__Lib_System_4XX.c, 90 :: 		
0x2556	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_4XX.c, 91 :: 		
0x255A	0xDC04    BGT	L_loopFZs
;__Lib_System_4XX.c, 92 :: 		
0x255C	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_4XX.c, 93 :: 		
0x2560	0xDB01    BLT	L_loopFZs
;__Lib_System_4XX.c, 94 :: 		
0x2562	0x46D4    MOV	R12, R10
;__Lib_System_4XX.c, 95 :: 		
0x2564	0x46EA    MOV	R10, SP
;__Lib_System_4XX.c, 96 :: 		
L_loopFZs:
;__Lib_System_4XX.c, 97 :: 		
0x2566	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_4XX.c, 98 :: 		
0x256A	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 99 :: 		
0x256E	0xD1FA    BNE	L_loopFZs
;__Lib_System_4XX.c, 100 :: 		
0x2570	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_4XX.c, 101 :: 		
0x2574	0xDD05    BLE	L_norep
;__Lib_System_4XX.c, 102 :: 		
0x2576	0x46E2    MOV	R10, R12
;__Lib_System_4XX.c, 103 :: 		
0x2578	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_4XX.c, 104 :: 		
0x257C	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_4XX.c, 105 :: 		
0x2580	0xE7F1    B	L_loopFZs
;__Lib_System_4XX.c, 106 :: 		
L_norep:
;__Lib_System_4XX.c, 108 :: 		
L_end___FillZeros:
0x2582	0xB001    ADD	SP, SP, #4
0x2584	0x4770    BX	LR
; end of ___FillZeros
_GPIO_Digital_Output:
;__Lib_GPIO_32F4xx.c, 233 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x2530	0xB081    SUB	SP, SP, #4
0x2532	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 234 :: 		
0x2536	0x4A04    LDR	R2, [PC, #16]
0x2538	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x253A	0xF7FFFC31  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 235 :: 		
L_end_GPIO_Digital_Output:
0x253E	0xF8DDE000  LDR	LR, [SP, #0]
0x2542	0xB001    ADD	SP, SP, #4
0x2544	0x4770    BX	LR
0x2546	0xBF00    NOP
0x2548	0x00140008  	#524308
; end of _GPIO_Digital_Output
_GPIO_Config:
;__Lib_GPIO_32F4xx.c, 74 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1DA0	0xB084    SUB	SP, SP, #16
0x1DA2	0xF8CDE000  STR	LR, [SP, #0]
0x1DA6	0xB28D    UXTH	R5, R1
0x1DA8	0x4616    MOV	R6, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 20 (R5)
; config start address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 75 :: 		
;__Lib_GPIO_32F4xx.c, 76 :: 		
;__Lib_GPIO_32F4xx.c, 80 :: 		
0x1DAA	0x4B86    LDR	R3, [PC, #536]
0x1DAC	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 28 (R7)
0x1DB0	0x461F    MOV	R7, R3
;__Lib_GPIO_32F4xx.c, 82 :: 		
0x1DB2	0x4618    MOV	R0, R3
0x1DB4	0xF7FEFE9E  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F4xx.c, 85 :: 		
0x1DB8	0xF1B50FFF  CMP	R5, #255
0x1DBC	0xD120    BNE	L_GPIO_Config22
;__Lib_GPIO_32F4xx.c, 86 :: 		
0x1DBE	0x683C    LDR	R4, [R7, #0]
;__Lib_GPIO_32F4xx.c, 87 :: 		
0x1DC0	0x4B81    LDR	R3, [PC, #516]
0x1DC2	0xEA040303  AND	R3, R4, R3, LSL #0
; tmp start address is: 0 (R0)
0x1DC6	0x4618    MOV	R0, R3
;__Lib_GPIO_32F4xx.c, 88 :: 		
0x1DC8	0x4B80    LDR	R3, [PC, #512]
0x1DCA	0x429E    CMP	R6, R3
0x1DCC	0xD114    BNE	L_GPIO_Config23
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 89 :: 		
0x1DCE	0xF2455355  MOVW	R3, #21845
0x1DD2	0xEA400303  ORR	R3, R0, R3, LSL #0
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 90 :: 		
0x1DD6	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 91 :: 		
0x1DD8	0x1D3D    ADDS	R5, R7, #4
0x1DDA	0x682C    LDR	R4, [R5, #0]
0x1DDC	0xF06F03FF  MVN	R3, #255
0x1DE0	0xEA040303  AND	R3, R4, R3, LSL #0
0x1DE4	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 92 :: 		
0x1DE6	0xF2070508  ADDW	R5, R7, #8
; port end address is: 28 (R7)
0x1DEA	0x682C    LDR	R4, [R5, #0]
0x1DEC	0xF64F73FF  MOVW	R3, #65535
0x1DF0	0xEA440303  ORR	R3, R4, R3, LSL #0
0x1DF4	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 93 :: 		
0x1DF6	0xE0E1    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 94 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F4xx.c, 95 :: 		
; port start address is: 28 (R7)
; tmp start address is: 0 (R0)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x1DF8	0x2E42    CMP	R6, #66
0x1DFA	0xD101    BNE	L_GPIO_Config24
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 96 :: 		
0x1DFC	0x6038    STR	R0, [R7, #0]
; tmp end address is: 0 (R0)
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 97 :: 		
0x1DFE	0xE0DD    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 98 :: 		
L_GPIO_Config24:
;__Lib_GPIO_32F4xx.c, 99 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config22:
;__Lib_GPIO_32F4xx.c, 101 :: 		
0x1E00	0x4B73    LDR	R3, [PC, #460]
0x1E02	0x429D    CMP	R5, R3
0x1E04	0xD113    BNE	L_GPIO_Config25
;__Lib_GPIO_32F4xx.c, 102 :: 		
0x1E06	0x4B71    LDR	R3, [PC, #452]
0x1E08	0x429E    CMP	R6, R3
0x1E0A	0xD10B    BNE	L_GPIO_Config26
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 103 :: 		
0x1E0C	0xF04F3355  MOV	R3, #1431655765
0x1E10	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 104 :: 		
0x1E12	0x1D3C    ADDS	R4, R7, #4
0x1E14	0x2300    MOVS	R3, #0
0x1E16	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 105 :: 		
0x1E18	0xF2070408  ADDW	R4, R7, #8
; port end address is: 28 (R7)
0x1E1C	0xF04F33FF  MOV	R3, #-1
0x1E20	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 106 :: 		
0x1E22	0xE0CB    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 107 :: 		
L_GPIO_Config26:
;__Lib_GPIO_32F4xx.c, 108 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x1E24	0x2E42    CMP	R6, #66
0x1E26	0xD102    BNE	L_GPIO_Config27
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 109 :: 		
0x1E28	0x2300    MOVS	R3, #0
0x1E2A	0x603B    STR	R3, [R7, #0]
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 110 :: 		
0x1E2C	0xE0C6    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 111 :: 		
L_GPIO_Config27:
;__Lib_GPIO_32F4xx.c, 112 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config25:
;__Lib_GPIO_32F4xx.c, 114 :: 		
0x1E2E	0xF0060301  AND	R3, R6, #1
0x1E32	0xB10B    CBZ	R3, L_GPIO_Config28
;__Lib_GPIO_32F4xx.c, 115 :: 		
; mode start address is: 0 (R0)
0x1E34	0x2003    MOVS	R0, #3
; mode end address is: 0 (R0)
0x1E36	0xE00A    B	L_GPIO_Config29
L_GPIO_Config28:
;__Lib_GPIO_32F4xx.c, 116 :: 		
0x1E38	0xF0060308  AND	R3, R6, #8
0x1E3C	0xB10B    CBZ	R3, L_GPIO_Config30
;__Lib_GPIO_32F4xx.c, 117 :: 		
; mode start address is: 0 (R0)
0x1E3E	0x2002    MOVS	R0, #2
; mode end address is: 0 (R0)
0x1E40	0xE005    B	L_GPIO_Config31
L_GPIO_Config30:
;__Lib_GPIO_32F4xx.c, 118 :: 		
0x1E42	0xF0060304  AND	R3, R6, #4
0x1E46	0xB10B    CBZ	R3, L_GPIO_Config32
;__Lib_GPIO_32F4xx.c, 119 :: 		
; mode start address is: 0 (R0)
0x1E48	0x2001    MOVS	R0, #1
; mode end address is: 0 (R0)
0x1E4A	0xE000    B	L_GPIO_Config33
L_GPIO_Config32:
;__Lib_GPIO_32F4xx.c, 121 :: 		
; mode start address is: 0 (R0)
0x1E4C	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
L_GPIO_Config33:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config31:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config29:
;__Lib_GPIO_32F4xx.c, 123 :: 		
; mode start address is: 0 (R0)
0x1E4E	0x4B61    LDR	R3, [PC, #388]
0x1E50	0xEA060303  AND	R3, R6, R3, LSL #0
0x1E54	0xB10B    CBZ	R3, L_GPIO_Config34
;__Lib_GPIO_32F4xx.c, 124 :: 		
; speed start address is: 4 (R1)
0x1E56	0x2103    MOVS	R1, #3
; speed end address is: 4 (R1)
0x1E58	0xE00A    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32F4xx.c, 125 :: 		
0x1E5A	0xF4066380  AND	R3, R6, #1024
0x1E5E	0xB10B    CBZ	R3, L_GPIO_Config36
;__Lib_GPIO_32F4xx.c, 126 :: 		
; speed start address is: 4 (R1)
0x1E60	0x2102    MOVS	R1, #2
; speed end address is: 4 (R1)
0x1E62	0xE005    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32F4xx.c, 127 :: 		
0x1E64	0xF4067300  AND	R3, R6, #512
0x1E68	0xB10B    CBZ	R3, L_GPIO_Config38
;__Lib_GPIO_32F4xx.c, 128 :: 		
; speed start address is: 4 (R1)
0x1E6A	0x2101    MOVS	R1, #1
; speed end address is: 4 (R1)
0x1E6C	0xE000    B	L_GPIO_Config39
L_GPIO_Config38:
;__Lib_GPIO_32F4xx.c, 130 :: 		
; speed start address is: 4 (R1)
0x1E6E	0x2100    MOVS	R1, #0
; speed end address is: 4 (R1)
L_GPIO_Config39:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config37:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config35:
;__Lib_GPIO_32F4xx.c, 132 :: 		
; speed start address is: 4 (R1)
0x1E70	0xF0060320  AND	R3, R6, #32
0x1E74	0xB10B    CBZ	R3, L_GPIO_Config40
;__Lib_GPIO_32F4xx.c, 133 :: 		
; otype start address is: 8 (R2)
0x1E76	0x2201    MOVS	R2, #1
; otype end address is: 8 (R2)
0x1E78	0xE000    B	L_GPIO_Config41
L_GPIO_Config40:
;__Lib_GPIO_32F4xx.c, 135 :: 		
; otype start address is: 8 (R2)
0x1E7A	0x2200    MOVS	R2, #0
; otype end address is: 8 (R2)
L_GPIO_Config41:
;__Lib_GPIO_32F4xx.c, 137 :: 		
; otype start address is: 8 (R2)
0x1E7C	0xF4067380  AND	R3, R6, #256
0x1E80	0xB10B    CBZ	R3, L_GPIO_Config42
;__Lib_GPIO_32F4xx.c, 138 :: 		
; pull start address is: 12 (R3)
0x1E82	0x2302    MOVS	R3, #2
; pull end address is: 12 (R3)
0x1E84	0xE005    B	L_GPIO_Config43
L_GPIO_Config42:
;__Lib_GPIO_32F4xx.c, 139 :: 		
0x1E86	0xF0060380  AND	R3, R6, #128
0x1E8A	0xB10B    CBZ	R3, L_GPIO_Config44
;__Lib_GPIO_32F4xx.c, 140 :: 		
; pull start address is: 12 (R3)
0x1E8C	0x2301    MOVS	R3, #1
; pull end address is: 12 (R3)
0x1E8E	0xE000    B	L_GPIO_Config45
L_GPIO_Config44:
;__Lib_GPIO_32F4xx.c, 142 :: 		
; pull start address is: 12 (R3)
0x1E90	0x2300    MOVS	R3, #0
; pull end address is: 12 (R3)
L_GPIO_Config45:
; pull start address is: 12 (R3)
; pull end address is: 12 (R3)
L_GPIO_Config43:
;__Lib_GPIO_32F4xx.c, 146 :: 		
; pull start address is: 12 (R3)
; pinpos start address is: 40 (R10)
0x1E92	0xF2400A00  MOVW	R10, #0
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
; mode end address is: 0 (R0)
; speed end address is: 4 (R1)
; otype end address is: 8 (R2)
; pull end address is: 12 (R3)
; pinpos end address is: 40 (R10)
0x1E96	0x9201    STR	R2, [SP, #4]
0x1E98	0xFA1FF985  UXTH	R9, R5
0x1E9C	0x46B0    MOV	R8, R6
0x1E9E	0x4606    MOV	R6, R0
0x1EA0	0x4618    MOV	R0, R3
0x1EA2	0x460A    MOV	R2, R1
0x1EA4	0x9901    LDR	R1, [SP, #4]
L_GPIO_Config46:
; pinpos start address is: 40 (R10)
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 24 (R6)
; mode end address is: 24 (R6)
; port start address is: 28 (R7)
; port end address is: 28 (R7)
; config start address is: 32 (R8)
; config end address is: 32 (R8)
; pin_mask start address is: 36 (R9)
; pin_mask end address is: 36 (R9)
0x1EA6	0xF1BA0F10  CMP	R10, #16
0x1EAA	0xF0808087  BCS	L_GPIO_Config47
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
;__Lib_GPIO_32F4xx.c, 148 :: 		
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; port start address is: 28 (R7)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x1EAE	0xF04F0301  MOV	R3, #1
0x1EB2	0xFA03F40A  LSL	R4, R3, R10
;__Lib_GPIO_32F4xx.c, 150 :: 		
0x1EB6	0xEA090304  AND	R3, R9, R4, LSL #0
;__Lib_GPIO_32F4xx.c, 152 :: 		
0x1EBA	0x42A3    CMP	R3, R4
0x1EBC	0xF040807B  BNE	L_GPIO_Config49
;__Lib_GPIO_32F4xx.c, 154 :: 		
0x1EC0	0xEA4F044A  LSL	R4, R10, #1
0x1EC4	0xF04F0303  MOV	R3, #3
0x1EC8	0x40A3    LSLS	R3, R4
0x1ECA	0x43DC    MVN	R4, R3
0x1ECC	0x683B    LDR	R3, [R7, #0]
0x1ECE	0x4023    ANDS	R3, R4
0x1ED0	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 155 :: 		
0x1ED2	0xEA4F034A  LSL	R3, R10, #1
0x1ED6	0xFA06F403  LSL	R4, R6, R3
0x1EDA	0x683B    LDR	R3, [R7, #0]
0x1EDC	0x4323    ORRS	R3, R4
0x1EDE	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 157 :: 		
0x1EE0	0xF008030C  AND	R3, R8, #12
0x1EE4	0xB33B    CBZ	R3, L_GPIO_Config50
;__Lib_GPIO_32F4xx.c, 160 :: 		
0x1EE6	0xF2070508  ADDW	R5, R7, #8
0x1EEA	0xEA4F044A  LSL	R4, R10, #1
0x1EEE	0xF04F0303  MOV	R3, #3
0x1EF2	0x40A3    LSLS	R3, R4
0x1EF4	0x43DC    MVN	R4, R3
0x1EF6	0x682B    LDR	R3, [R5, #0]
0x1EF8	0x4023    ANDS	R3, R4
0x1EFA	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 161 :: 		
0x1EFC	0xF2070508  ADDW	R5, R7, #8
0x1F00	0xEA4F034A  LSL	R3, R10, #1
0x1F04	0xFA02F403  LSL	R4, R2, R3
0x1F08	0x682B    LDR	R3, [R5, #0]
0x1F0A	0x4323    ORRS	R3, R4
0x1F0C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 164 :: 		
0x1F0E	0x1D3D    ADDS	R5, R7, #4
0x1F10	0xFA1FF48A  UXTH	R4, R10
0x1F14	0xF04F0301  MOV	R3, #1
0x1F18	0x40A3    LSLS	R3, R4
0x1F1A	0x43DC    MVN	R4, R3
0x1F1C	0x682B    LDR	R3, [R5, #0]
0x1F1E	0x4023    ANDS	R3, R4
0x1F20	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 165 :: 		
0x1F22	0x1D3D    ADDS	R5, R7, #4
0x1F24	0xFA1FF48A  UXTH	R4, R10
0x1F28	0xB28B    UXTH	R3, R1
0x1F2A	0xFA03F404  LSL	R4, R3, R4
0x1F2E	0xB2A4    UXTH	R4, R4
0x1F30	0x682B    LDR	R3, [R5, #0]
0x1F32	0x4323    ORRS	R3, R4
0x1F34	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 166 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F4xx.c, 169 :: 		
0x1F36	0xF207050C  ADDW	R5, R7, #12
0x1F3A	0xFA1FF38A  UXTH	R3, R10
0x1F3E	0x005C    LSLS	R4, R3, #1
0x1F40	0xB2A4    UXTH	R4, R4
0x1F42	0xF04F0303  MOV	R3, #3
0x1F46	0x40A3    LSLS	R3, R4
0x1F48	0x43DC    MVN	R4, R3
0x1F4A	0x682B    LDR	R3, [R5, #0]
0x1F4C	0x4023    ANDS	R3, R4
0x1F4E	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 170 :: 		
0x1F50	0xF207050C  ADDW	R5, R7, #12
0x1F54	0xEA4F034A  LSL	R3, R10, #1
0x1F58	0xFA00F403  LSL	R4, R0, R3
0x1F5C	0x682B    LDR	R3, [R5, #0]
0x1F5E	0x4323    ORRS	R3, R4
0x1F60	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 172 :: 		
0x1F62	0xF0080308  AND	R3, R8, #8
0x1F66	0xB333    CBZ	R3, L_GPIO_Config51
;__Lib_GPIO_32F4xx.c, 173 :: 		
0x1F68	0xF4080370  AND	R3, R8, #15728640
0x1F6C	0x0D1B    LSRS	R3, R3, #20
0x1F6E	0xF88D300C  STRB	R3, [SP, #12]
;__Lib_GPIO_32F4xx.c, 174 :: 		
0x1F72	0xF1BA0F07  CMP	R10, #7
0x1F76	0xD905    BLS	L_GPIO_Config52
;__Lib_GPIO_32F4xx.c, 175 :: 		
0x1F78	0xF2070324  ADDW	R3, R7, #36
0x1F7C	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 176 :: 		
0x1F7E	0xF1AA0508  SUB	R5, R10, #8
; pos start address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 177 :: 		
; pos end address is: 20 (R5)
0x1F82	0xE003    B	L_GPIO_Config53
L_GPIO_Config52:
;__Lib_GPIO_32F4xx.c, 178 :: 		
0x1F84	0xF2070320  ADDW	R3, R7, #32
0x1F88	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 179 :: 		
; pos start address is: 20 (R5)
0x1F8A	0x4655    MOV	R5, R10
; pos end address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 180 :: 		
L_GPIO_Config53:
;__Lib_GPIO_32F4xx.c, 181 :: 		
; pos start address is: 20 (R5)
0x1F8C	0x00AC    LSLS	R4, R5, #2
0x1F8E	0xF04F030F  MOV	R3, #15
0x1F92	0x40A3    LSLS	R3, R4
0x1F94	0x43DC    MVN	R4, R3
0x1F96	0x9B02    LDR	R3, [SP, #8]
0x1F98	0x681B    LDR	R3, [R3, #0]
0x1F9A	0xEA030404  AND	R4, R3, R4, LSL #0
0x1F9E	0x9B02    LDR	R3, [SP, #8]
0x1FA0	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 182 :: 		
0x1FA2	0xF89D400C  LDRB	R4, [SP, #12]
0x1FA6	0x00AB    LSLS	R3, R5, #2
; pos end address is: 20 (R5)
0x1FA8	0x409C    LSLS	R4, R3
0x1FAA	0x9B02    LDR	R3, [SP, #8]
0x1FAC	0x681B    LDR	R3, [R3, #0]
0x1FAE	0xEA430404  ORR	R4, R3, R4, LSL #0
0x1FB2	0x9B02    LDR	R3, [SP, #8]
0x1FB4	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 183 :: 		
L_GPIO_Config51:
;__Lib_GPIO_32F4xx.c, 185 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F4xx.c, 146 :: 		
0x1FB6	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F4xx.c, 186 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
; pinpos end address is: 40 (R10)
0x1FBA	0xE774    B	L_GPIO_Config46
L_GPIO_Config47:
;__Lib_GPIO_32F4xx.c, 187 :: 		
L_end_GPIO_Config:
0x1FBC	0xF8DDE000  LDR	LR, [SP, #0]
0x1FC0	0xB004    ADD	SP, SP, #16
0x1FC2	0x4770    BX	LR
0x1FC4	0xFC00FFFF  	#-1024
0x1FC8	0x0000FFFF  	#-65536
0x1FCC	0x00140008  	#524308
0x1FD0	0xFFFF0000  	#65535
0x1FD4	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F4xx.c, 26 :: 		
; gpio_port start address is: 0 (R0)
0x0AF4	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 28 :: 		
0x0AF6	0x491E    LDR	R1, [PC, #120]
0x0AF8	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0AFC	0x4608    MOV	R0, R1
;__Lib_GPIO_32F4xx.c, 29 :: 		
; pos start address is: 8 (R2)
0x0AFE	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F4xx.c, 30 :: 		
0x0B00	0xE012    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F4xx.c, 31 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0B02	0x2001    MOVS	R0, #1
; pos end address is: 0 (R0)
0x0B04	0xE02C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 32 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0B06	0x2002    MOVS	R0, #2
; pos end address is: 0 (R0)
0x0B08	0xE02A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 33 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0B0A	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0B0C	0xE028    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 34 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x0B0E	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0B10	0xE026    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 35 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x0B12	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0B14	0xE024    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 36 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0B16	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x0B18	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 37 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0B1A	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0B1C	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 38 :: 		
L_GPIO_Clk_Enable9:
; pos start address is: 0 (R0)
0x0B1E	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0B20	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 39 :: 		
L_GPIO_Clk_Enable10:
; pos start address is: 0 (R0)
0x0B22	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x0B26	0xE01B    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 40 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x0B28	0x4912    LDR	R1, [PC, #72]
0x0B2A	0x4288    CMP	R0, R1
0x0B2C	0xD0E9    BEQ	L_GPIO_Clk_Enable2
0x0B2E	0x4912    LDR	R1, [PC, #72]
0x0B30	0x4288    CMP	R0, R1
0x0B32	0xD0E8    BEQ	L_GPIO_Clk_Enable3
0x0B34	0x4911    LDR	R1, [PC, #68]
0x0B36	0x4288    CMP	R0, R1
0x0B38	0xD0E7    BEQ	L_GPIO_Clk_Enable4
0x0B3A	0x4911    LDR	R1, [PC, #68]
0x0B3C	0x4288    CMP	R0, R1
0x0B3E	0xD0E6    BEQ	L_GPIO_Clk_Enable5
0x0B40	0x4910    LDR	R1, [PC, #64]
0x0B42	0x4288    CMP	R0, R1
0x0B44	0xD0E5    BEQ	L_GPIO_Clk_Enable6
0x0B46	0x4910    LDR	R1, [PC, #64]
0x0B48	0x4288    CMP	R0, R1
0x0B4A	0xD0E4    BEQ	L_GPIO_Clk_Enable7
0x0B4C	0x490F    LDR	R1, [PC, #60]
0x0B4E	0x4288    CMP	R0, R1
0x0B50	0xD0E3    BEQ	L_GPIO_Clk_Enable8
0x0B52	0x490F    LDR	R1, [PC, #60]
0x0B54	0x4288    CMP	R0, R1
0x0B56	0xD0E2    BEQ	L_GPIO_Clk_Enable9
0x0B58	0x490E    LDR	R1, [PC, #56]
0x0B5A	0x4288    CMP	R0, R1
0x0B5C	0xD0E1    BEQ	L_GPIO_Clk_Enable10
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x0B5E	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F4xx.c, 42 :: 		
; pos start address is: 0 (R0)
0x0B60	0x490D    LDR	R1, [PC, #52]
0x0B62	0x6809    LDR	R1, [R1, #0]
0x0B64	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0B68	0x490B    LDR	R1, [PC, #44]
0x0B6A	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 43 :: 		
L_end_GPIO_Clk_Enable:
0x0B6C	0xB001    ADD	SP, SP, #4
0x0B6E	0x4770    BX	LR
0x0B70	0xFC00FFFF  	#-1024
0x0B74	0x00004002  	#1073872896
0x0B78	0x04004002  	#1073873920
0x0B7C	0x08004002  	#1073874944
0x0B80	0x0C004002  	#1073875968
0x0B84	0x10004002  	#1073876992
0x0B88	0x14004002  	#1073878016
0x0B8C	0x18004002  	#1073879040
0x0B90	0x1C004002  	#1073880064
0x0B94	0x20004002  	#1073881088
0x0B98	0x38304002  	RCC_AHB1ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Input:
;__Lib_GPIO_32F4xx.c, 237 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x23EC	0xB081    SUB	SP, SP, #4
0x23EE	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 238 :: 		
0x23F2	0xF04F0242  MOV	R2, #66
0x23F6	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x23F8	0xF7FFFCD2  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 239 :: 		
L_end_GPIO_Digital_Input:
0x23FC	0xF8DDE000  LDR	LR, [SP, #0]
0x2400	0xB001    ADD	SP, SP, #4
0x2402	0x4770    BX	LR
; end of _GPIO_Digital_Input
_InitTimer2:
;DriverRF4463PROMain.c, 459 :: 		void InitTimer2(){
0x2394	0xB081    SUB	SP, SP, #4
0x2396	0xF8CDE000  STR	LR, [SP, #0]
;DriverRF4463PROMain.c, 461 :: 		RCC_APB1ENR.TIM2EN = 1;
0x239A	0x2101    MOVS	R1, #1
0x239C	0xB249    SXTB	R1, R1
0x239E	0x480E    LDR	R0, [PC, #56]
0x23A0	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 462 :: 		TIM2_CR1.CEN = 0;
0x23A2	0x2100    MOVS	R1, #0
0x23A4	0xB249    SXTB	R1, R1
0x23A6	0x480D    LDR	R0, [PC, #52]
0x23A8	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 463 :: 		TIM2_PSC = 1499;
0x23AA	0xF24051DB  MOVW	R1, #1499
0x23AE	0x480C    LDR	R0, [PC, #48]
0x23B0	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 464 :: 		TIM2_ARR = 63839;
0x23B2	0xF64F115F  MOVW	R1, #63839
0x23B6	0x480B    LDR	R0, [PC, #44]
0x23B8	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 465 :: 		NVIC_IntEnable( IVT_INT_TIM2 );
0x23BA	0xF240002C  MOVW	R0, #44
0x23BE	0xF7FFFE0B  BL	_NVIC_IntEnable+0
;DriverRF4463PROMain.c, 466 :: 		TIM2_DIER.UIE = 1;
0x23C2	0x2101    MOVS	R1, #1
0x23C4	0xB249    SXTB	R1, R1
0x23C6	0x4808    LDR	R0, [PC, #32]
0x23C8	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 467 :: 		TIM2_CR1.CEN = 1;
0x23CA	0x4804    LDR	R0, [PC, #16]
0x23CC	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 468 :: 		}
L_end_InitTimer2:
0x23CE	0xF8DDE000  LDR	LR, [SP, #0]
0x23D2	0xB001    ADD	SP, SP, #4
0x23D4	0x4770    BX	LR
0x23D6	0xBF00    NOP
0x23D8	0x08004247  	RCC_APB1ENR+0
0x23DC	0x00004200  	TIM2_CR1+0
0x23E0	0x00284000  	TIM2_PSC+0
0x23E4	0x002C4000  	TIM2_ARR+0
0x23E8	0x01804200  	TIM2_DIER+0
; end of _InitTimer2
_NVIC_IntEnable:
;__Lib_System_4XX.c, 172 :: 		
; ivt start address is: 0 (R0)
0x1FD8	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_4XX.c, 184 :: 		
0x1FDA	0x2804    CMP	R0, #4
0x1FDC	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 189 :: 		
0x1FDE	0x4919    LDR	R1, [PC, #100]
0x1FE0	0x6809    LDR	R1, [R1, #0]
0x1FE2	0xF4413280  ORR	R2, R1, #65536
0x1FE6	0x4917    LDR	R1, [PC, #92]
0x1FE8	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 190 :: 		
0x1FEA	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_4XX.c, 191 :: 		
; ivt start address is: 0 (R0)
0x1FEC	0x2805    CMP	R0, #5
0x1FEE	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 196 :: 		
0x1FF0	0x4914    LDR	R1, [PC, #80]
0x1FF2	0x6809    LDR	R1, [R1, #0]
0x1FF4	0xF4413200  ORR	R2, R1, #131072
0x1FF8	0x4912    LDR	R1, [PC, #72]
0x1FFA	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 197 :: 		
0x1FFC	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_4XX.c, 198 :: 		
; ivt start address is: 0 (R0)
0x1FFE	0x2806    CMP	R0, #6
0x2000	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 203 :: 		
0x2002	0x4910    LDR	R1, [PC, #64]
0x2004	0x6809    LDR	R1, [R1, #0]
0x2006	0xF4412280  ORR	R2, R1, #262144
0x200A	0x490E    LDR	R1, [PC, #56]
0x200C	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 204 :: 		
0x200E	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_4XX.c, 205 :: 		
; ivt start address is: 0 (R0)
0x2010	0x280F    CMP	R0, #15
0x2012	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 210 :: 		
0x2014	0x490C    LDR	R1, [PC, #48]
0x2016	0x6809    LDR	R1, [R1, #0]
0x2018	0xF0410202  ORR	R2, R1, #2
0x201C	0x490A    LDR	R1, [PC, #40]
0x201E	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 211 :: 		
0x2020	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_4XX.c, 212 :: 		
; ivt start address is: 0 (R0)
0x2022	0x2810    CMP	R0, #16
0x2024	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_4XX.c, 217 :: 		
0x2026	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x202A	0x0961    LSRS	R1, R4, #5
0x202C	0x008A    LSLS	R2, R1, #2
0x202E	0x4907    LDR	R1, [PC, #28]
0x2030	0x188B    ADDS	R3, R1, R2
;__Lib_System_4XX.c, 218 :: 		
0x2032	0xF004021F  AND	R2, R4, #31
0x2036	0xF04F0101  MOV	R1, #1
0x203A	0x4091    LSLS	R1, R2
0x203C	0x6019    STR	R1, [R3, #0]
;__Lib_System_4XX.c, 219 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_4XX.c, 220 :: 		
L_end_NVIC_IntEnable:
0x203E	0xB001    ADD	SP, SP, #4
0x2040	0x4770    BX	LR
0x2042	0xBF00    NOP
0x2044	0xED24E000  	SCB_SHCRS+0
0x2048	0xE010E000  	STK_CTRL+0
0x204C	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_vUSARTConfigUSART1:
;uarthandler.c, 297 :: 		void vUSARTConfigUSART1 ( unsigned long ulBaudRate ) {
0x32CC	0xB081    SUB	SP, SP, #4
0x32CE	0xF8CDE000  STR	LR, [SP, #0]
;uarthandler.c, 299 :: 		UART1_Init_Advanced( ulBaudRate, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PB67 );
0x32D2	0x480D    LDR	R0, [PC, #52]
0x32D4	0xB401    PUSH	(R0)
0x32D6	0xF2400300  MOVW	R3, #0
0x32DA	0xF2400200  MOVW	R2, #0
0x32DE	0xF2400100  MOVW	R1, #0
0x32E2	0x9802    LDR	R0, [SP, #8]
0x32E4	0xF7FFF842  BL	_UART1_Init_Advanced+0
0x32E8	0xB001    ADD	SP, SP, #4
;uarthandler.c, 300 :: 		USART1_CR1bits.UE = 0;
0x32EA	0x2100    MOVS	R1, #0
0x32EC	0xB249    SXTB	R1, R1
0x32EE	0x4807    LDR	R0, [PC, #28]
0x32F0	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 302 :: 		ulClk = Clock_MHz() * 1000000;         // paso extra para verificacion en depuracion
0x32F2	0x4907    LDR	R1, [PC, #28]
0x32F4	0x4807    LDR	R0, [PC, #28]
0x32F6	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 306 :: 		USART1_CR1bits.UE = 1;
0x32F8	0x2101    MOVS	R1, #1
0x32FA	0xB249    SXTB	R1, R1
0x32FC	0x4803    LDR	R0, [PC, #12]
0x32FE	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 308 :: 		}
L_end_vUSARTConfigUSART1:
0x3300	0xF8DDE000  LDR	LR, [SP, #0]
0x3304	0xB001    ADD	SP, SP, #4
0x3306	0x4770    BX	LR
0x3308	0x64A80000  	__GPIO_MODULE_USART1_PB67+0
0x330C	0x01B44222  	USART1_CR1bits+0
0x3310	0x7A000A03  	#168000000
0x3314	0x23042000  	_ulClk+0
; end of _vUSARTConfigUSART1
_UART1_Init_Advanced:
;__Lib_UART_123_45_6.c, 404 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x236C	0xB081    SUB	SP, SP, #4
0x236E	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x2372	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45_6.c, 406 :: 		
0x2374	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x2376	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x2378	0xB408    PUSH	(R3)
0x237A	0xB293    UXTH	R3, R2
0x237C	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x237E	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x2380	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x2382	0xF7FEFC0B  BL	__Lib_UART_123_45_6_UARTx_Init_Advanced+0
0x2386	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45_6.c, 407 :: 		
L_end_UART1_Init_Advanced:
0x2388	0xF8DDE000  LDR	LR, [SP, #0]
0x238C	0xB001    ADD	SP, SP, #4
0x238E	0x4770    BX	LR
0x2390	0x10004001  	USART1_SR+0
; end of _UART1_Init_Advanced
__Lib_UART_123_45_6_UARTx_Init_Advanced:
;__Lib_UART_123_45_6.c, 319 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0B9C	0xB08B    SUB	SP, SP, #44
0x0B9E	0xF8CDE000  STR	LR, [SP, #0]
0x0BA2	0xB29A    UXTH	R2, R3
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; baud_rate start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
0x0BA4	0xF8BD302C  LDRH	R3, [SP, #44]
; module start address is: 24 (R6)
0x0BA8	0x9E0C    LDR	R6, [SP, #48]
;__Lib_UART_123_45_6.c, 323 :: 		
0x0BAA	0xAC06    ADD	R4, SP, #24
0x0BAC	0xF8AD3004  STRH	R3, [SP, #4]
0x0BB0	0xF8AD2008  STRH	R2, [SP, #8]
0x0BB4	0x9103    STR	R1, [SP, #12]
0x0BB6	0x9004    STR	R0, [SP, #16]
0x0BB8	0x4620    MOV	R0, R4
0x0BBA	0xF7FFFCD5  BL	_RCC_GetClocksFrequency+0
0x0BBE	0x9804    LDR	R0, [SP, #16]
0x0BC0	0x9903    LDR	R1, [SP, #12]
0x0BC2	0xF8BD2008  LDRH	R2, [SP, #8]
0x0BC6	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 325 :: 		
0x0BCA	0x4C71    LDR	R4, [PC, #452]
0x0BCC	0x42A0    CMP	R0, R4
0x0BCE	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced15
;__Lib_UART_123_45_6.c, 326 :: 		
0x0BD0	0x2501    MOVS	R5, #1
0x0BD2	0xB26D    SXTB	R5, R5
0x0BD4	0x4C6F    LDR	R4, [PC, #444]
0x0BD6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 327 :: 		
0x0BD8	0x4D6F    LDR	R5, [PC, #444]
0x0BDA	0x4C70    LDR	R4, [PC, #448]
0x0BDC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 328 :: 		
0x0BDE	0x4D70    LDR	R5, [PC, #448]
0x0BE0	0x4C70    LDR	R4, [PC, #448]
0x0BE2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 329 :: 		
0x0BE4	0x4D70    LDR	R5, [PC, #448]
0x0BE6	0x4C71    LDR	R4, [PC, #452]
0x0BE8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 330 :: 		
0x0BEA	0x4D71    LDR	R5, [PC, #452]
0x0BEC	0x4C71    LDR	R4, [PC, #452]
0x0BEE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 331 :: 		
0x0BF0	0x9C09    LDR	R4, [SP, #36]
0x0BF2	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 332 :: 		
0x0BF4	0xE06C    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced16
L___Lib_UART_123_45_6_UARTx_Init_Advanced15:
;__Lib_UART_123_45_6.c, 333 :: 		
0x0BF6	0x4C70    LDR	R4, [PC, #448]
0x0BF8	0x42A0    CMP	R0, R4
0x0BFA	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced17
;__Lib_UART_123_45_6.c, 334 :: 		
0x0BFC	0x2501    MOVS	R5, #1
0x0BFE	0xB26D    SXTB	R5, R5
0x0C00	0x4C6E    LDR	R4, [PC, #440]
0x0C02	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 335 :: 		
0x0C04	0x4D6E    LDR	R5, [PC, #440]
0x0C06	0x4C65    LDR	R4, [PC, #404]
0x0C08	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 336 :: 		
0x0C0A	0x4D6E    LDR	R5, [PC, #440]
0x0C0C	0x4C65    LDR	R4, [PC, #404]
0x0C0E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 337 :: 		
0x0C10	0x4D6D    LDR	R5, [PC, #436]
0x0C12	0x4C66    LDR	R4, [PC, #408]
0x0C14	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 338 :: 		
0x0C16	0x4D6D    LDR	R5, [PC, #436]
0x0C18	0x4C66    LDR	R4, [PC, #408]
0x0C1A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 339 :: 		
0x0C1C	0x9C08    LDR	R4, [SP, #32]
0x0C1E	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 340 :: 		
0x0C20	0xE056    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced18
L___Lib_UART_123_45_6_UARTx_Init_Advanced17:
;__Lib_UART_123_45_6.c, 341 :: 		
0x0C22	0x4C6B    LDR	R4, [PC, #428]
0x0C24	0x42A0    CMP	R0, R4
0x0C26	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced19
;__Lib_UART_123_45_6.c, 342 :: 		
0x0C28	0x2501    MOVS	R5, #1
0x0C2A	0xB26D    SXTB	R5, R5
0x0C2C	0x4C69    LDR	R4, [PC, #420]
0x0C2E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 343 :: 		
0x0C30	0x4D69    LDR	R5, [PC, #420]
0x0C32	0x4C5A    LDR	R4, [PC, #360]
0x0C34	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 344 :: 		
0x0C36	0x4D69    LDR	R5, [PC, #420]
0x0C38	0x4C5A    LDR	R4, [PC, #360]
0x0C3A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 345 :: 		
0x0C3C	0x4D68    LDR	R5, [PC, #416]
0x0C3E	0x4C5B    LDR	R4, [PC, #364]
0x0C40	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 346 :: 		
0x0C42	0x4D68    LDR	R5, [PC, #416]
0x0C44	0x4C5B    LDR	R4, [PC, #364]
0x0C46	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 347 :: 		
0x0C48	0x9C08    LDR	R4, [SP, #32]
0x0C4A	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 348 :: 		
0x0C4C	0xE040    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced20
L___Lib_UART_123_45_6_UARTx_Init_Advanced19:
;__Lib_UART_123_45_6.c, 349 :: 		
0x0C4E	0x4C66    LDR	R4, [PC, #408]
0x0C50	0x42A0    CMP	R0, R4
0x0C52	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced21
;__Lib_UART_123_45_6.c, 350 :: 		
0x0C54	0x2501    MOVS	R5, #1
0x0C56	0xB26D    SXTB	R5, R5
0x0C58	0x4C64    LDR	R4, [PC, #400]
0x0C5A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 351 :: 		
0x0C5C	0x4D64    LDR	R5, [PC, #400]
0x0C5E	0x4C4F    LDR	R4, [PC, #316]
0x0C60	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 352 :: 		
0x0C62	0x4D64    LDR	R5, [PC, #400]
0x0C64	0x4C4F    LDR	R4, [PC, #316]
0x0C66	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 353 :: 		
0x0C68	0x4D63    LDR	R5, [PC, #396]
0x0C6A	0x4C50    LDR	R4, [PC, #320]
0x0C6C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 354 :: 		
0x0C6E	0x4D63    LDR	R5, [PC, #396]
0x0C70	0x4C50    LDR	R4, [PC, #320]
0x0C72	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 355 :: 		
0x0C74	0x9C08    LDR	R4, [SP, #32]
0x0C76	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 356 :: 		
0x0C78	0xE02A    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced22
L___Lib_UART_123_45_6_UARTx_Init_Advanced21:
;__Lib_UART_123_45_6.c, 357 :: 		
0x0C7A	0x4C61    LDR	R4, [PC, #388]
0x0C7C	0x42A0    CMP	R0, R4
0x0C7E	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced23
;__Lib_UART_123_45_6.c, 358 :: 		
0x0C80	0x2501    MOVS	R5, #1
0x0C82	0xB26D    SXTB	R5, R5
0x0C84	0x4C5F    LDR	R4, [PC, #380]
0x0C86	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 359 :: 		
0x0C88	0x4D5F    LDR	R5, [PC, #380]
0x0C8A	0x4C44    LDR	R4, [PC, #272]
0x0C8C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 360 :: 		
0x0C8E	0x4D5F    LDR	R5, [PC, #380]
0x0C90	0x4C44    LDR	R4, [PC, #272]
0x0C92	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 361 :: 		
0x0C94	0x4D5E    LDR	R5, [PC, #376]
0x0C96	0x4C45    LDR	R4, [PC, #276]
0x0C98	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 362 :: 		
0x0C9A	0x4D5E    LDR	R5, [PC, #376]
0x0C9C	0x4C45    LDR	R4, [PC, #276]
0x0C9E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 363 :: 		
0x0CA0	0x9C08    LDR	R4, [SP, #32]
0x0CA2	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 364 :: 		
0x0CA4	0xE014    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced24
L___Lib_UART_123_45_6_UARTx_Init_Advanced23:
;__Lib_UART_123_45_6.c, 365 :: 		
0x0CA6	0x4C5C    LDR	R4, [PC, #368]
0x0CA8	0x42A0    CMP	R0, R4
0x0CAA	0xD111    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced25
;__Lib_UART_123_45_6.c, 366 :: 		
0x0CAC	0x2501    MOVS	R5, #1
0x0CAE	0xB26D    SXTB	R5, R5
0x0CB0	0x4C5A    LDR	R4, [PC, #360]
0x0CB2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 367 :: 		
0x0CB4	0x4D5A    LDR	R5, [PC, #360]
0x0CB6	0x4C39    LDR	R4, [PC, #228]
0x0CB8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 368 :: 		
0x0CBA	0x4D5A    LDR	R5, [PC, #360]
0x0CBC	0x4C39    LDR	R4, [PC, #228]
0x0CBE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 369 :: 		
0x0CC0	0x4D59    LDR	R5, [PC, #356]
0x0CC2	0x4C3A    LDR	R4, [PC, #232]
0x0CC4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 370 :: 		
0x0CC6	0x4D59    LDR	R5, [PC, #356]
0x0CC8	0x4C3A    LDR	R4, [PC, #232]
0x0CCA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 371 :: 		
0x0CCC	0x9C09    LDR	R4, [SP, #36]
0x0CCE	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 372 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced25:
L___Lib_UART_123_45_6_UARTx_Init_Advanced24:
L___Lib_UART_123_45_6_UARTx_Init_Advanced22:
L___Lib_UART_123_45_6_UARTx_Init_Advanced20:
L___Lib_UART_123_45_6_UARTx_Init_Advanced18:
L___Lib_UART_123_45_6_UARTx_Init_Advanced16:
;__Lib_UART_123_45_6.c, 374 :: 		
0x0CD0	0xF8AD3004  STRH	R3, [SP, #4]
; module end address is: 24 (R6)
0x0CD4	0xF8AD2008  STRH	R2, [SP, #8]
0x0CD8	0x9103    STR	R1, [SP, #12]
0x0CDA	0x9004    STR	R0, [SP, #16]
0x0CDC	0x4630    MOV	R0, R6
0x0CDE	0xF7FFFC1F  BL	_GPIO_Alternate_Function_Enable+0
0x0CE2	0x9804    LDR	R0, [SP, #16]
0x0CE4	0x9903    LDR	R1, [SP, #12]
0x0CE6	0xF8BD2008  LDRH	R2, [SP, #8]
0x0CEA	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 376 :: 		
0x0CEE	0xF2000510  ADDW	R5, R0, #16
0x0CF2	0x2400    MOVS	R4, #0
0x0CF4	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 377 :: 		
0x0CF6	0xF2000510  ADDW	R5, R0, #16
0x0CFA	0x682C    LDR	R4, [R5, #0]
0x0CFC	0x431C    ORRS	R4, R3
; stop_bits end address is: 12 (R3)
0x0CFE	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 378 :: 		
0x0D00	0xF200050C  ADDW	R5, R0, #12
0x0D04	0x2400    MOVS	R4, #0
0x0D06	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 380 :: 		
0x0D08	0xB11A    CBZ	R2, L___Lib_UART_123_45_6_UARTx_Init_Advanced40
;__Lib_UART_123_45_6.c, 381 :: 		
0x0D0A	0xF4426280  ORR	R2, R2, #1024
0x0D0E	0xB292    UXTH	R2, R2
; parity end address is: 8 (R2)
;__Lib_UART_123_45_6.c, 382 :: 		
0x0D10	0xE7FF    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced26
L___Lib_UART_123_45_6_UARTx_Init_Advanced40:
;__Lib_UART_123_45_6.c, 380 :: 		
;__Lib_UART_123_45_6.c, 382 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced26:
;__Lib_UART_123_45_6.c, 384 :: 		
; parity start address is: 8 (R2)
0x0D12	0xF200050C  ADDW	R5, R0, #12
0x0D16	0x682C    LDR	R4, [R5, #0]
0x0D18	0x4314    ORRS	R4, R2
; parity end address is: 8 (R2)
0x0D1A	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 386 :: 		
0x0D1C	0xF200060C  ADDW	R6, R0, #12
0x0D20	0x2501    MOVS	R5, #1
0x0D22	0x6834    LDR	R4, [R6, #0]
0x0D24	0xF365344D  BFI	R4, R5, #13, #1
0x0D28	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 387 :: 		
0x0D2A	0xF200060C  ADDW	R6, R0, #12
0x0D2E	0x2501    MOVS	R5, #1
0x0D30	0x6834    LDR	R4, [R6, #0]
0x0D32	0xF36504C3  BFI	R4, R5, #3, #1
0x0D36	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 388 :: 		
0x0D38	0xF200060C  ADDW	R6, R0, #12
0x0D3C	0x2501    MOVS	R5, #1
0x0D3E	0x6834    LDR	R4, [R6, #0]
0x0D40	0xF3650482  BFI	R4, R5, #2, #1
0x0D44	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 389 :: 		
0x0D46	0xF2000514  ADDW	R5, R0, #20
0x0D4A	0x2400    MOVS	R4, #0
0x0D4C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 394 :: 		
0x0D4E	0x9D05    LDR	R5, [SP, #20]
0x0D50	0x2419    MOVS	R4, #25
0x0D52	0x4365    MULS	R5, R4, R5
0x0D54	0x008C    LSLS	R4, R1, #2
; baud_rate end address is: 4 (R1)
0x0D56	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45_6.c, 395 :: 		
0x0D5A	0x2464    MOVS	R4, #100
0x0D5C	0xFBB7F4F4  UDIV	R4, R7, R4
0x0D60	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45_6.c, 397 :: 		
0x0D62	0x0935    LSRS	R5, R6, #4
0x0D64	0x2464    MOVS	R4, #100
0x0D66	0x436C    MULS	R4, R5, R4
0x0D68	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45_6.c, 398 :: 		
0x0D6A	0x0124    LSLS	R4, R4, #4
0x0D6C	0xF2040532  ADDW	R5, R4, #50
0x0D70	0x2464    MOVS	R4, #100
0x0D72	0xFBB5F4F4  UDIV	R4, R5, R4
0x0D76	0xF004040F  AND	R4, R4, #15
0x0D7A	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45_6.c, 400 :: 		
0x0D7E	0xF2000508  ADDW	R5, R0, #8
; UART_Base end address is: 0 (R0)
0x0D82	0xB2A4    UXTH	R4, R4
0x0D84	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 401 :: 		
L_end_UARTx_Init_Advanced:
0x0D86	0xF8DDE000  LDR	LR, [SP, #0]
0x0D8A	0xB00B    ADD	SP, SP, #44
0x0D8C	0x4770    BX	LR
0x0D8E	0xBF00    NOP
0x0D90	0x10004001  	USART1_SR+0
0x0D94	0x08904247  	RCC_APB2ENR+0
0x0D98	0xFFFFFFFF  	_UART1_Write+0
0x0D9C	0x23182000  	_UART_Wr_Ptr+0
0x0DA0	0xFFFFFFFF  	_UART1_Read+0
0x0DA4	0x231C2000  	_UART_Rd_Ptr+0
0x0DA8	0xFFFFFFFF  	_UART1_Data_Ready+0
0x0DAC	0x23202000  	_UART_Rdy_Ptr+0
0x0DB0	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x0DB4	0x23242000  	_UART_Tx_Idle_Ptr+0
0x0DB8	0x44004000  	USART2_SR+0
0x0DBC	0x08444247  	RCC_APB1ENR+0
0x0DC0	0xFFFFFFFF  	_UART2_Write+0
0x0DC4	0xFFFFFFFF  	_UART2_Read+0
0x0DC8	0xFFFFFFFF  	_UART2_Data_Ready+0
0x0DCC	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x0DD0	0x48004000  	USART3_SR+0
0x0DD4	0x08484247  	RCC_APB1ENR+0
0x0DD8	0xFFFFFFFF  	_UART3_Write+0
0x0DDC	0xFFFFFFFF  	_UART3_Read+0
0x0DE0	0xFFFFFFFF  	_UART3_Data_Ready+0
0x0DE4	0xFFFFFFFF  	_UART3_Tx_Idle+0
0x0DE8	0x4C004000  	UART4_SR+0
0x0DEC	0x084C4247  	RCC_APB1ENR+0
0x0DF0	0xFFFFFFFF  	_UART4_Write+0
0x0DF4	0xFFFFFFFF  	_UART4_Read+0
0x0DF8	0xFFFFFFFF  	_UART4_Data_Ready+0
0x0DFC	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x0E00	0x50004000  	UART5_SR+0
0x0E04	0x08504247  	RCC_APB1ENR+0
0x0E08	0xFFFFFFFF  	_UART5_Write+0
0x0E0C	0xFFFFFFFF  	_UART5_Read+0
0x0E10	0xFFFFFFFF  	_UART5_Data_Ready+0
0x0E14	0xFFFFFFFF  	_UART5_Tx_Idle+0
0x0E18	0x14004001  	USART6_SR+0
0x0E1C	0x08944247  	RCC_APB2ENR+0
0x0E20	0xFFFFFFFF  	_UART6_Write+0
0x0E24	0xFFFFFFFF  	_UART6_Read+0
0x0E28	0xFFFFFFFF  	_UART6_Data_Ready+0
0x0E2C	0xFFFFFFFF  	_UART6_Tx_Idle+0
; end of __Lib_UART_123_45_6_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_4XX.c, 402 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0568	0xB082    SUB	SP, SP, #8
0x056A	0xF8CDE000  STR	LR, [SP, #0]
0x056E	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_4XX.c, 404 :: 		
;__Lib_System_4XX.c, 406 :: 		
0x0570	0x1D19    ADDS	R1, R3, #4
0x0572	0x9101    STR	R1, [SP, #4]
0x0574	0xF7FFFE08  BL	_Get_Fosc_kHz+0
0x0578	0xF24031E8  MOVW	R1, #1000
0x057C	0xFB00F201  MUL	R2, R0, R1
0x0580	0x9901    LDR	R1, [SP, #4]
0x0582	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 409 :: 		
0x0584	0x4917    LDR	R1, [PC, #92]
0x0586	0x6809    LDR	R1, [R1, #0]
0x0588	0xF00101F0  AND	R1, R1, #240
;__Lib_System_4XX.c, 410 :: 		
0x058C	0x090A    LSRS	R2, R1, #4
;__Lib_System_4XX.c, 411 :: 		
0x058E	0x4916    LDR	R1, [PC, #88]
0x0590	0x1889    ADDS	R1, R1, R2
0x0592	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0594	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 413 :: 		
0x0596	0x1D19    ADDS	R1, R3, #4
0x0598	0x6809    LDR	R1, [R1, #0]
0x059A	0x4081    LSLS	R1, R0
; presc end address is: 0 (R0)
0x059C	0x6019    STR	R1, [R3, #0]
;__Lib_System_4XX.c, 416 :: 		
0x059E	0x4911    LDR	R1, [PC, #68]
0x05A0	0x6809    LDR	R1, [R1, #0]
0x05A2	0xF40151E0  AND	R1, R1, #7168
;__Lib_System_4XX.c, 417 :: 		
0x05A6	0x0A8A    LSRS	R2, R1, #10
;__Lib_System_4XX.c, 418 :: 		
0x05A8	0x490F    LDR	R1, [PC, #60]
0x05AA	0x1889    ADDS	R1, R1, R2
0x05AC	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x05AE	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 420 :: 		
0x05B0	0xF2030208  ADDW	R2, R3, #8
0x05B4	0x1D19    ADDS	R1, R3, #4
0x05B6	0x6809    LDR	R1, [R1, #0]
0x05B8	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x05BA	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 423 :: 		
0x05BC	0x4909    LDR	R1, [PC, #36]
0x05BE	0x6809    LDR	R1, [R1, #0]
0x05C0	0xF4014160  AND	R1, R1, #57344
;__Lib_System_4XX.c, 424 :: 		
0x05C4	0x0B4A    LSRS	R2, R1, #13
;__Lib_System_4XX.c, 425 :: 		
0x05C6	0x4908    LDR	R1, [PC, #32]
0x05C8	0x1889    ADDS	R1, R1, R2
0x05CA	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x05CC	0xB2C8    UXTB	R0, R1
;__Lib_System_4XX.c, 427 :: 		
0x05CE	0xF203020C  ADDW	R2, R3, #12
0x05D2	0x1D19    ADDS	R1, R3, #4
; RCC_Clocks end address is: 12 (R3)
0x05D4	0x6809    LDR	R1, [R1, #0]
0x05D6	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x05D8	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 428 :: 		
L_end_RCC_GetClocksFrequency:
0x05DA	0xF8DDE000  LDR	LR, [SP, #0]
0x05DE	0xB002    ADD	SP, SP, #8
0x05E0	0x4770    BX	LR
0x05E2	0xBF00    NOP
0x05E4	0x38084002  	RCC_CFGR+0
0x05E8	0x22942000  	__Lib_System_4XX_APBAHBPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
0x0188	0xB081    SUB	SP, SP, #4
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x018A	0x4802    LDR	R0, [PC, #8]
0x018C	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x018E	0xB001    ADD	SP, SP, #4
0x0190	0x4770    BX	LR
0x0192	0xBF00    NOP
0x0194	0x23082000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F4xx.c, 223 :: 		
; module start address is: 0 (R0)
0x0520	0xB083    SUB	SP, SP, #12
0x0522	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 226 :: 		
; i start address is: 16 (R4)
0x0526	0x2400    MOVS	R4, #0
; module end address is: 0 (R0)
; i end address is: 16 (R4)
;__Lib_GPIO_32F4xx.c, 227 :: 		
L_GPIO_Alternate_Function_Enable66:
; i start address is: 16 (R4)
; module start address is: 0 (R0)
0x0528	0x00A1    LSLS	R1, R4, #2
0x052A	0x1841    ADDS	R1, R0, R1
0x052C	0x6809    LDR	R1, [R1, #0]
0x052E	0xF1B13FFF  CMP	R1, #-1
0x0532	0xD014    BEQ	L_GPIO_Alternate_Function_Enable67
;__Lib_GPIO_32F4xx.c, 228 :: 		
0x0534	0xF2000134  ADDW	R1, R0, #52
0x0538	0x00A3    LSLS	R3, R4, #2
0x053A	0x18C9    ADDS	R1, R1, R3
0x053C	0x6809    LDR	R1, [R1, #0]
0x053E	0x460A    MOV	R2, R1
0x0540	0x18C1    ADDS	R1, R0, R3
0x0542	0x6809    LDR	R1, [R1, #0]
0x0544	0x9001    STR	R0, [SP, #4]
0x0546	0xF8AD4008  STRH	R4, [SP, #8]
0x054A	0x4608    MOV	R0, R1
0x054C	0x4611    MOV	R1, R2
0x054E	0xF7FFFE23  BL	__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function+0
0x0552	0xF8BD4008  LDRH	R4, [SP, #8]
0x0556	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 229 :: 		
0x0558	0x1C64    ADDS	R4, R4, #1
0x055A	0xB2A4    UXTH	R4, R4
;__Lib_GPIO_32F4xx.c, 230 :: 		
; module end address is: 0 (R0)
; i end address is: 16 (R4)
0x055C	0xE7E4    B	L_GPIO_Alternate_Function_Enable66
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F4xx.c, 231 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x055E	0xF8DDE000  LDR	LR, [SP, #0]
0x0562	0xB003    ADD	SP, SP, #12
0x0564	0x4770    BX	LR
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO_32F4xx.c, 190 :: 		
; configs start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0198	0xB083    SUB	SP, SP, #12
0x019A	0xF8CDE000  STR	LR, [SP, #0]
0x019E	0x4604    MOV	R4, R0
; configs end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 16 (R4)
; configs start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 195 :: 		
0x01A0	0xF00403FF  AND	R3, R4, #255
0x01A4	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x01A6	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 196 :: 		
0x01A8	0xF003020F  AND	R2, R3, #15
; pin start address is: 48 (R12)
0x01AC	0x4694    MOV	R12, R2
;__Lib_GPIO_32F4xx.c, 197 :: 		
0x01AE	0x0A22    LSRS	R2, R4, #8
; af_pin end address is: 16 (R4)
0x01B0	0xF002020F  AND	R2, R2, #15
; af start address is: 44 (R11)
0x01B4	0x4693    MOV	R11, R2
;__Lib_GPIO_32F4xx.c, 199 :: 		
0x01B6	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54
; port end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 200 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56:
0x01B8	0x4A2C    LDR	R2, [PC, #176]
0x01BA	0x9202    STR	R2, [SP, #8]
0x01BC	0xE029    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 201 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57:
0x01BE	0x4A2C    LDR	R2, [PC, #176]
0x01C0	0x9202    STR	R2, [SP, #8]
0x01C2	0xE026    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 202 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58:
0x01C4	0x4A2B    LDR	R2, [PC, #172]
0x01C6	0x9202    STR	R2, [SP, #8]
0x01C8	0xE023    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 203 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59:
0x01CA	0x4A2B    LDR	R2, [PC, #172]
0x01CC	0x9202    STR	R2, [SP, #8]
0x01CE	0xE020    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 204 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60:
0x01D0	0x4A2A    LDR	R2, [PC, #168]
0x01D2	0x9202    STR	R2, [SP, #8]
0x01D4	0xE01D    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 205 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61:
0x01D6	0x4A2A    LDR	R2, [PC, #168]
0x01D8	0x9202    STR	R2, [SP, #8]
0x01DA	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 206 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62:
0x01DC	0x4A29    LDR	R2, [PC, #164]
0x01DE	0x9202    STR	R2, [SP, #8]
0x01E0	0xE017    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 207 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63:
0x01E2	0x4A29    LDR	R2, [PC, #164]
0x01E4	0x9202    STR	R2, [SP, #8]
0x01E6	0xE014    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 208 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64:
0x01E8	0x4A28    LDR	R2, [PC, #160]
0x01EA	0x9202    STR	R2, [SP, #8]
0x01EC	0xE011    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 209 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54:
; port start address is: 0 (R0)
0x01EE	0x2800    CMP	R0, #0
0x01F0	0xD0E2    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56
0x01F2	0x2801    CMP	R0, #1
0x01F4	0xD0E3    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57
0x01F6	0x2802    CMP	R0, #2
0x01F8	0xD0E4    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58
0x01FA	0x2803    CMP	R0, #3
0x01FC	0xD0E5    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59
0x01FE	0x2804    CMP	R0, #4
0x0200	0xD0E6    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60
0x0202	0x2805    CMP	R0, #5
0x0204	0xD0E7    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61
0x0206	0x2806    CMP	R0, #6
0x0208	0xD0E8    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62
0x020A	0x2807    CMP	R0, #7
0x020C	0xD0E9    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63
0x020E	0x2808    CMP	R0, #8
0x0210	0xD0EA    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64
; port end address is: 0 (R0)
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55:
;__Lib_GPIO_32F4xx.c, 211 :: 		
0x0212	0x2201    MOVS	R2, #1
0x0214	0xFA02F20C  LSL	R2, R2, R12
0x0218	0xF8AD2004  STRH	R2, [SP, #4]
; configs end address is: 4 (R1)
0x021C	0x9802    LDR	R0, [SP, #8]
0x021E	0x460A    MOV	R2, R1
0x0220	0xF8BD1004  LDRH	R1, [SP, #4]
0x0224	0xF001FDBC  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 213 :: 		
0x0228	0x9A02    LDR	R2, [SP, #8]
0x022A	0xF2020120  ADDW	R1, R2, #32
; tmp_ptr start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x022E	0xF1BC0F07  CMP	R12, #7
0x0232	0xD908    BLS	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90
;__Lib_GPIO_32F4xx.c, 215 :: 		
0x0234	0x1D0A    ADDS	R2, R1, #4
; tmp_ptr end address is: 4 (R1)
; tmp_ptr start address is: 0 (R0)
0x0236	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 216 :: 		
0x0238	0xF1AC0208  SUB	R2, R12, #8
; pin end address is: 48 (R12)
; pin start address is: 4 (R1)
0x023C	0x4611    MOV	R1, R2
; tmp_ptr end address is: 0 (R0)
; pin end address is: 4 (R1)
0x023E	0x9101    STR	R1, [SP, #4]
0x0240	0x4601    MOV	R1, R0
0x0242	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 217 :: 		
0x0244	0xE000    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90:
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x0246	0x4660    MOV	R0, R12
;__Lib_GPIO_32F4xx.c, 217 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65:
;__Lib_GPIO_32F4xx.c, 218 :: 		
; pin start address is: 0 (R0)
; tmp_ptr start address is: 4 (R1)
0x0248	0x0083    LSLS	R3, R0, #2
0x024A	0xF04F020F  MOV	R2, #15
0x024E	0x409A    LSLS	R2, R3
0x0250	0x43D3    MVN	R3, R2
0x0252	0x680A    LDR	R2, [R1, #0]
0x0254	0x401A    ANDS	R2, R3
0x0256	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 219 :: 		
0x0258	0x0082    LSLS	R2, R0, #2
; pin end address is: 0 (R0)
0x025A	0xFA0BF302  LSL	R3, R11, R2
; af end address is: 44 (R11)
0x025E	0x680A    LDR	R2, [R1, #0]
0x0260	0x431A    ORRS	R2, R3
0x0262	0x600A    STR	R2, [R1, #0]
; tmp_ptr end address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 220 :: 		
L_end_GPIO_Config_Pin_Alternate_Function:
0x0264	0xF8DDE000  LDR	LR, [SP, #0]
0x0268	0xB003    ADD	SP, SP, #12
0x026A	0x4770    BX	LR
0x026C	0x00004002  	#1073872896
0x0270	0x04004002  	#1073873920
0x0274	0x08004002  	#1073874944
0x0278	0x0C004002  	#1073875968
0x027C	0x10004002  	#1073876992
0x0280	0x14004002  	#1073878016
0x0284	0x18004002  	#1073879040
0x0288	0x1C004002  	#1073880064
0x028C	0x20004002  	#1073881088
; end of __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
_UART1_Write_Text:
;__Lib_UART_123_45_6.c, 78 :: 		
; uart_text start address is: 0 (R0)
0x32B0	0xB081    SUB	SP, SP, #4
0x32B2	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 79 :: 		
0x32B6	0x4601    MOV	R1, R0
; uart_text end address is: 0 (R0)
0x32B8	0x4803    LDR	R0, [PC, #12]
0x32BA	0xF7FEFD2D  BL	__Lib_UART_123_45_6_UARTx_Write_Text+0
;__Lib_UART_123_45_6.c, 80 :: 		
L_end_UART1_Write_Text:
0x32BE	0xF8DDE000  LDR	LR, [SP, #0]
0x32C2	0xB001    ADD	SP, SP, #4
0x32C4	0x4770    BX	LR
0x32C6	0xBF00    NOP
0x32C8	0x10004001  	USART1_SR+0
; end of _UART1_Write_Text
__Lib_UART_123_45_6_UARTx_Write_Text:
;__Lib_UART_123_45_6.c, 67 :: 		
; uart_text start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x1D18	0xB081    SUB	SP, SP, #4
0x1D1A	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; uart_text start address is: 4 (R1)
;__Lib_UART_123_45_6.c, 68 :: 		
; counter start address is: 24 (R6)
0x1D1E	0x2600    MOVS	R6, #0
;__Lib_UART_123_45_6.c, 70 :: 		
0x1D20	0x780A    LDRB	R2, [R1, #0]
; data_ start address is: 12 (R3)
0x1D22	0xB2D3    UXTB	R3, R2
; UART_Base end address is: 0 (R0)
; uart_text end address is: 4 (R1)
; data_ end address is: 12 (R3)
; counter end address is: 24 (R6)
0x1D24	0x4605    MOV	R5, R0
0x1D26	0xB2D8    UXTB	R0, R3
0x1D28	0x460C    MOV	R4, R1
;__Lib_UART_123_45_6.c, 71 :: 		
L___Lib_UART_123_45_6_UARTx_Write_Text2:
; data_ start address is: 0 (R0)
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
; counter start address is: 24 (R6)
; uart_text start address is: 16 (R4)
; uart_text end address is: 16 (R4)
; UART_Base start address is: 20 (R5)
; UART_Base end address is: 20 (R5)
0x1D2A	0xB150    CBZ	R0, L___Lib_UART_123_45_6_UARTx_Write_Text3
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
;__Lib_UART_123_45_6.c, 72 :: 		
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
0x1D2C	0xB2C1    UXTB	R1, R0
; data_ end address is: 0 (R0)
0x1D2E	0x4628    MOV	R0, R5
0x1D30	0xF7FEFCE8  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 73 :: 		
0x1D34	0x1C72    ADDS	R2, R6, #1
0x1D36	0xB2D2    UXTB	R2, R2
0x1D38	0xB2D6    UXTB	R6, R2
;__Lib_UART_123_45_6.c, 74 :: 		
0x1D3A	0x18A2    ADDS	R2, R4, R2
0x1D3C	0x7812    LDRB	R2, [R2, #0]
; data_ start address is: 0 (R0)
0x1D3E	0xB2D0    UXTB	R0, R2
;__Lib_UART_123_45_6.c, 75 :: 		
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
; counter end address is: 24 (R6)
; data_ end address is: 0 (R0)
0x1D40	0xE7F3    B	L___Lib_UART_123_45_6_UARTx_Write_Text2
L___Lib_UART_123_45_6_UARTx_Write_Text3:
;__Lib_UART_123_45_6.c, 76 :: 		
L_end_UARTx_Write_Text:
0x1D42	0xF8DDE000  LDR	LR, [SP, #0]
0x1D46	0xB001    ADD	SP, SP, #4
0x1D48	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write_Text
__Lib_UART_123_45_6_UARTx_Write:
;__Lib_UART_123_45_6.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0704	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x0706	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x070A	0x4601    MOV	R1, R0
0x070C	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45_6.c, 36 :: 		
L___Lib_UART_123_45_6_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x0710	0x680B    LDR	R3, [R1, #0]
0x0712	0xF3C312C0  UBFX	R2, R3, #7, #1
0x0716	0xB902    CBNZ	R2, L___Lib_UART_123_45_6_UARTx_Write1
;__Lib_UART_123_45_6.c, 37 :: 		
0x0718	0xE7FA    B	L___Lib_UART_123_45_6_UARTx_Write0
L___Lib_UART_123_45_6_UARTx_Write1:
;__Lib_UART_123_45_6.c, 38 :: 		
0x071A	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x071C	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 39 :: 		
L_end_UARTx_Write:
0x071E	0xB001    ADD	SP, SP, #4
0x0720	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write
_vSPI1Init:
;driverspi.c, 22 :: 		void vSPI1Init ( void ) {
0x33D4	0xB081    SUB	SP, SP, #4
0x33D6	0xF8CDE000  STR	LR, [SP, #0]
;driverspi.c, 24 :: 		_SPI_MSB_FIRST | _SPI_SS_DISABLE | _SPI_SSM_ENABLE | _SPI_SSI_1, &_GPIO_MODULE_SPI1_PB345 );
0x33DA	0x4A09    LDR	R2, [PC, #36]
0x33DC	0xF2403104  MOVW	R1, #772
;driverspi.c, 23 :: 		SPI1_Init_Advanced( _SPI_FPCLK_DIV64, _SPI_MASTER | _SPI_8_BIT | _SPI_CLK_IDLE_LOW | _SPI_FIRST_CLK_EDGE_TRANSITION |
0x33E0	0x2005    MOVS	R0, #5
;driverspi.c, 24 :: 		_SPI_MSB_FIRST | _SPI_SS_DISABLE | _SPI_SSM_ENABLE | _SPI_SSI_1, &_GPIO_MODULE_SPI1_PB345 );
0x33E2	0xF7FEFCB3  BL	_SPI1_Init_Advanced+0
;driverspi.c, 26 :: 		SPI1_CR2bits.RXNEIE  = 1;       // habilitacion de ISR para RX
0x33E6	0x2101    MOVS	R1, #1
0x33E8	0xB249    SXTB	R1, R1
0x33EA	0x4806    LDR	R0, [PC, #24]
0x33EC	0x6001    STR	R1, [R0, #0]
;driverspi.c, 28 :: 		NVIC_IntEnable( IVT_INT_SPI1 );
0x33EE	0xF2400033  MOVW	R0, #51
0x33F2	0xF7FEFDF1  BL	_NVIC_IntEnable+0
;driverspi.c, 29 :: 		}
L_end_vSPI1Init:
0x33F6	0xF8DDE000  LDR	LR, [SP, #0]
0x33FA	0xB001    ADD	SP, SP, #4
0x33FC	0x4770    BX	LR
0x33FE	0xBF00    NOP
0x3400	0x65140000  	__GPIO_MODULE_SPI1_PB345+0
0x3404	0x00984226  	SPI1_CR2bits+0
; end of _vSPI1Init
_SPI1_Init_Advanced:
;__Lib_SPI_123.c, 82 :: 		
; module start address is: 8 (R2)
0x1D4C	0xB083    SUB	SP, SP, #12
0x1D4E	0xF8CDE000  STR	LR, [SP, #0]
0x1D52	0xF88D0004  STRB	R0, [SP, #4]
0x1D56	0x9102    STR	R1, [SP, #8]
; module end address is: 8 (R2)
; module start address is: 8 (R2)
;__Lib_SPI_123.c, 83 :: 		
0x1D58	0x4C0B    LDR	R4, [PC, #44]
0x1D5A	0x4B0C    LDR	R3, [PC, #48]
0x1D5C	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 84 :: 		
0x1D5E	0x4C0C    LDR	R4, [PC, #48]
0x1D60	0x4B0C    LDR	R3, [PC, #48]
0x1D62	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 86 :: 		
0x1D64	0x2401    MOVS	R4, #1
0x1D66	0xB264    SXTB	R4, R4
0x1D68	0x4B0B    LDR	R3, [PC, #44]
0x1D6A	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 87 :: 		
0x1D6C	0x4610    MOV	R0, R2
; module end address is: 8 (R2)
0x1D6E	0xF7FEFBD7  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_SPI_123.c, 89 :: 		
0x1D72	0x9A02    LDR	R2, [SP, #8]
0x1D74	0xF89D1004  LDRB	R1, [SP, #4]
0x1D78	0x4808    LDR	R0, [PC, #32]
0x1D7A	0xF7FEFDAF  BL	__Lib_SPI_123_SPIx_Init_Advanced+0
;__Lib_SPI_123.c, 90 :: 		
L_end_SPI1_Init_Advanced:
0x1D7E	0xF8DDE000  LDR	LR, [SP, #0]
0x1D82	0xB003    ADD	SP, SP, #12
0x1D84	0x4770    BX	LR
0x1D86	0xBF00    NOP
0x1D88	0xFFFFFFFF  	_SPI1_Read+0
0x1D8C	0x230C2000  	_SPI_Rd_Ptr+0
0x1D90	0xFFFFFFFF  	_SPI1_Write+0
0x1D94	0x23102000  	_SPI_Wr_Ptr+0
0x1D98	0x08B04247  	RCC_APB2ENR+0
0x1D9C	0x30004001  	SPI1_CR1+0
; end of _SPI1_Init_Advanced
__Lib_SPI_123_SPIx_Init_Advanced:
;__Lib_SPI_123.c, 53 :: 		
; config start address is: 8 (R2)
; clock_divider start address is: 4 (R1)
; base start address is: 0 (R0)
0x08DC	0xB081    SUB	SP, SP, #4
; config end address is: 8 (R2)
; clock_divider end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; clock_divider start address is: 4 (R1)
; config start address is: 8 (R2)
;__Lib_SPI_123.c, 56 :: 		
0x08DE	0x2300    MOVS	R3, #0
0x08E0	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 58 :: 		
0x08E2	0x00CB    LSLS	R3, R1, #3
0x08E4	0xB29B    UXTH	R3, R3
; clock_divider end address is: 4 (R1)
0x08E6	0xEA420303  ORR	R3, R2, R3, LSL #0
;__Lib_SPI_123.c, 60 :: 		
0x08EA	0x6804    LDR	R4, [R0, #0]
0x08EC	0xB29B    UXTH	R3, R3
0x08EE	0xEA440303  ORR	R3, R4, R3, LSL #0
0x08F2	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 61 :: 		
0x08F4	0x1D05    ADDS	R5, R0, #4
0x08F6	0x1413    ASRS	R3, R2, #16
; config end address is: 8 (R2)
0x08F8	0x461C    MOV	R4, R3
0x08FA	0x682B    LDR	R3, [R5, #0]
0x08FC	0xF3640382  BFI	R3, R4, #2, #1
0x0900	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 63 :: 		
0x0902	0xF200051C  ADDW	R5, R0, #28
0x0906	0x2400    MOVS	R4, #0
0x0908	0x682B    LDR	R3, [R5, #0]
0x090A	0xF36423CB  BFI	R3, R4, #11, #1
0x090E	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 64 :: 		
0x0910	0x2401    MOVS	R4, #1
0x0912	0x6803    LDR	R3, [R0, #0]
0x0914	0xF3641386  BFI	R3, R4, #6, #1
0x0918	0x6003    STR	R3, [R0, #0]
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 65 :: 		
L_end_SPIx_Init_Advanced:
0x091A	0xB001    ADD	SP, SP, #4
0x091C	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Init_Advanced
_vRF4463MainSetTXString:
;DriverRF4463PROMain.c, 107 :: 		void vRF4463MainSetTXString () {
0x33CC	0xB081    SUB	SP, SP, #4
;DriverRF4463PROMain.c, 112 :: 		}
L_end_vRF4463MainSetTXString:
0x33CE	0xB001    ADD	SP, SP, #4
0x33D0	0x4770    BX	LR
; end of _vRF4463MainSetTXString
_VRF4463SDNReset:
;driverrf4463pro.c, 894 :: 		void VRF4463SDNReset( void ) {
0x3120	0xB082    SUB	SP, SP, #8
0x3122	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 897 :: 		SDN = 1;
0x3126	0x2101    MOVS	R1, #1
0x3128	0xB249    SXTB	R1, R1
0x312A	0x4821    LDR	R0, [PC, #132]
0x312C	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 898 :: 		Delay_ms( 6 );        // RF Module reset  DELAY
0x312E	0xF242077E  MOVW	R7, #8318
0x3132	0xF2C00705  MOVT	R7, #5
0x3136	0xBF00    NOP
0x3138	0xBF00    NOP
L_VRF4463SDNReset148:
0x313A	0x1E7F    SUBS	R7, R7, #1
0x313C	0xD1FD    BNE	L_VRF4463SDNReset148
0x313E	0xBF00    NOP
0x3140	0xBF00    NOP
0x3142	0xBF00    NOP
;driverrf4463pro.c, 899 :: 		SDN = 0;
0x3144	0x2100    MOVS	R1, #0
0x3146	0xB249    SXTB	R1, R1
0x3148	0x4819    LDR	R0, [PC, #100]
0x314A	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 900 :: 		Delay_ms( 10 );       // Delay 10ms for RF module to enter working state
0x314C	0xF648377E  MOVW	R7, #35710
0x3150	0xF2C00708  MOVT	R7, #8
0x3154	0xBF00    NOP
0x3156	0xBF00    NOP
L_VRF4463SDNReset150:
0x3158	0x1E7F    SUBS	R7, R7, #1
0x315A	0xD1FD    BNE	L_VRF4463SDNReset150
0x315C	0xBF00    NOP
0x315E	0xBF00    NOP
0x3160	0xBF00    NOP
;driverrf4463pro.c, 902 :: 		nSEL = 1;
0x3162	0x2101    MOVS	R1, #1
0x3164	0xB249    SXTB	R1, R1
0x3166	0x4813    LDR	R0, [PC, #76]
0x3168	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 903 :: 		nSEL = 0;
0x316A	0x2100    MOVS	R1, #0
0x316C	0xB249    SXTB	R1, R1
0x316E	0x4811    LDR	R0, [PC, #68]
0x3170	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 904 :: 		for ( i = 0; i < 7; i++ ) {
0x3172	0x2000    MOVS	R0, #0
0x3174	0xF88D0004  STRB	R0, [SP, #4]
L_VRF4463SDNReset152:
0x3178	0xF89D0004  LDRB	R0, [SP, #4]
0x317C	0x2807    CMP	R0, #7
0x317E	0xD20E    BCS	L_VRF4463SDNReset153
;driverrf4463pro.c, 905 :: 		ucRf4463SPIByte( RF_POWER_UP_data[ i ] );   // send power up Command
0x3180	0xF89D1004  LDRB	R1, [SP, #4]
0x3184	0x480C    LDR	R0, [PC, #48]
0x3186	0x1840    ADDS	R0, R0, R1
0x3188	0x7800    LDRB	R0, [R0, #0]
0x318A	0xB401    PUSH	(R0)
0x318C	0xF7FDFA2E  BL	_ucRf4463SPIByte+0
0x3190	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 904 :: 		for ( i = 0; i < 7; i++ ) {
0x3192	0xF89D0004  LDRB	R0, [SP, #4]
0x3196	0x1C40    ADDS	R0, R0, #1
0x3198	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 906 :: 		}
0x319C	0xE7EC    B	L_VRF4463SDNReset152
L_VRF4463SDNReset153:
;driverrf4463pro.c, 907 :: 		nSEL = 1;
0x319E	0x2101    MOVS	R1, #1
0x31A0	0xB249    SXTB	R1, R1
0x31A2	0x4804    LDR	R0, [PC, #16]
0x31A4	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 910 :: 		}
L_end_VRF4463SDNReset:
0x31A6	0xF8DDE000  LDR	LR, [SP, #0]
0x31AA	0xB002    ADD	SP, SP, #8
0x31AC	0x4770    BX	LR
0x31AE	0xBF00    NOP
0x31B0	0x82844241  	GPIOD_ODRbits+0
0x31B4	0x82884241  	GPIOD_ODRbits+0
0x31B8	0x69F80000  	_RF_POWER_UP_data+0
; end of _VRF4463SDNReset
_ucRf4463SPIByte:
;driverrf4463pro.c, 744 :: 		unsigned char ucRf4463SPIByte( unsigned char ucData ) {
0x05EC	0xB081    SUB	SP, SP, #4
;driverrf4463pro.c, 746 :: 		ucSPI1ByteReceived = 0;
0x05EE	0x2100    MOVS	R1, #0
0x05F0	0x4808    LDR	R0, [PC, #32]
0x05F2	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 748 :: 		SPI1_DR = ucData;
0x05F4	0xF89D1004  LDRB	R1, [SP, #4]
0x05F8	0x4807    LDR	R0, [PC, #28]
0x05FA	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 750 :: 		while ( !SPI1_SRbits.TXE );                // espera a que el buffer este vacio
L_ucRf4463SPIByte112:
0x05FC	0x4807    LDR	R0, [PC, #28]
0x05FE	0x6800    LDR	R0, [R0, #0]
0x0600	0xB900    CBNZ	R0, L_ucRf4463SPIByte113
0x0602	0xE7FB    B	L_ucRf4463SPIByte112
L_ucRf4463SPIByte113:
;driverrf4463pro.c, 752 :: 		while ( SPI1_SRbits.BSY );                // espera a que el buffer este vacio
L_ucRf4463SPIByte114:
0x0604	0x4806    LDR	R0, [PC, #24]
0x0606	0x6800    LDR	R0, [R0, #0]
0x0608	0xB100    CBZ	R0, L_ucRf4463SPIByte115
0x060A	0xE7FB    B	L_ucRf4463SPIByte114
L_ucRf4463SPIByte115:
;driverrf4463pro.c, 754 :: 		return ( ucSPI1ByteReceived );
0x060C	0x4801    LDR	R0, [PC, #4]
0x060E	0x7800    LDRB	R0, [R0, #0]
;driverrf4463pro.c, 756 :: 		}
L_end_ucRf4463SPIByte:
0x0610	0xB001    ADD	SP, SP, #4
0x0612	0x4770    BX	LR
0x0614	0x228D2000  	_ucSPI1ByteReceived+0
0x0618	0x300C4001  	SPI1_DR+0
0x061C	0x01044226  	SPI1_SRbits+0
0x0620	0x011C4226  	SPI1_SRbits+0
; end of _ucRf4463SPIByte
_vRF4463Init:
;driverrf4463pro.c, 42 :: 		void vRF4463Init ( void ) {  // MODE,
0x259C	0xB087    SUB	SP, SP, #28
0x259E	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 45 :: 		for ( i = 4; i < 16; i++ ) {
0x25A2	0x2004    MOVS	R0, #4
0x25A4	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init2:
0x25A8	0xF89D0018  LDRB	R0, [SP, #24]
0x25AC	0x2810    CMP	R0, #16
0x25AE	0xD217    BCS	L_vRF4463Init3
;driverrf4463pro.c, 46 :: 		RF_MODEM_MOD_TYPE_12_data[ i ] = RF_MODEM_MOD_TYPE_12[ ucRF4463Rate ][ i - 4 ];
0x25B0	0xF89D1018  LDRB	R1, [SP, #24]
0x25B4	0x48C3    LDR	R0, [PC, #780]
0x25B6	0x1843    ADDS	R3, R0, R1
0x25B8	0x48C3    LDR	R0, [PC, #780]
0x25BA	0x7801    LDRB	R1, [R0, #0]
0x25BC	0x200C    MOVS	R0, #12
0x25BE	0x4341    MULS	R1, R0, R1
0x25C0	0x48C2    LDR	R0, [PC, #776]
0x25C2	0x1842    ADDS	R2, R0, R1
0x25C4	0xF89D0018  LDRB	R0, [SP, #24]
0x25C8	0x1F01    SUBS	R1, R0, #4
0x25CA	0xB209    SXTH	R1, R1
0x25CC	0x4610    MOV	R0, R2
0x25CE	0x1840    ADDS	R0, R0, R1
0x25D0	0x7800    LDRB	R0, [R0, #0]
0x25D2	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 45 :: 		for ( i = 4; i < 16; i++ ) {
0x25D4	0xF89D0018  LDRB	R0, [SP, #24]
0x25D8	0x1C40    ADDS	R0, R0, #1
0x25DA	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 47 :: 		}
0x25DE	0xE7E3    B	L_vRF4463Init2
L_vRF4463Init3:
;driverrf4463pro.c, 50 :: 		if ( ucRF4463Freq3 < 8 ) {
0x25E0	0x48BB    LDR	R0, [PC, #748]
0x25E2	0x7800    LDRB	R0, [R0, #0]
0x25E4	0x2808    CMP	R0, #8
0x25E6	0xF08080F9  BCS	L_vRF4463Init5
;driverrf4463pro.c, 51 :: 		for ( i = 4; i < 12; i++ ) {
0x25EA	0x2004    MOVS	R0, #4
0x25EC	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init6:
0x25F0	0xF89D0018  LDRB	R0, [SP, #24]
0x25F4	0x280C    CMP	R0, #12
0x25F6	0xD217    BCS	L_vRF4463Init7
;driverrf4463pro.c, 52 :: 		RF_MODEM_TX_RAMP_DELAY_8_data[ i ] = RF_MODEM_TX_RAMP_DELAY_8_433[ ucRF4463Rate ][ i - 4 ];
0x25F8	0xF89D1018  LDRB	R1, [SP, #24]
0x25FC	0x48B5    LDR	R0, [PC, #724]
0x25FE	0x1843    ADDS	R3, R0, R1
0x2600	0x48B1    LDR	R0, [PC, #708]
0x2602	0x7801    LDRB	R1, [R0, #0]
0x2604	0x2008    MOVS	R0, #8
0x2606	0x4341    MULS	R1, R0, R1
0x2608	0x48B3    LDR	R0, [PC, #716]
0x260A	0x1842    ADDS	R2, R0, R1
0x260C	0xF89D0018  LDRB	R0, [SP, #24]
0x2610	0x1F01    SUBS	R1, R0, #4
0x2612	0xB209    SXTH	R1, R1
0x2614	0x4610    MOV	R0, R2
0x2616	0x1840    ADDS	R0, R0, R1
0x2618	0x7800    LDRB	R0, [R0, #0]
0x261A	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 51 :: 		for ( i = 4; i < 12; i++ ) {
0x261C	0xF89D0018  LDRB	R0, [SP, #24]
0x2620	0x1C40    ADDS	R0, R0, #1
0x2622	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 53 :: 		}
0x2626	0xE7E3    B	L_vRF4463Init6
L_vRF4463Init7:
;driverrf4463pro.c, 54 :: 		for ( i = 4; i < 11; i++ ) {
0x2628	0x2004    MOVS	R0, #4
0x262A	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init9:
0x262E	0xF89D0018  LDRB	R0, [SP, #24]
0x2632	0x280B    CMP	R0, #11
0x2634	0xD217    BCS	L_vRF4463Init10
;driverrf4463pro.c, 55 :: 		RF_MODEM_AFC_GEAR_7_data[ i ] = RF_MODEM_AFC_GEAR_7_433[ ucRF4463Rate ][ i - 4 ];
0x2636	0xF89D1018  LDRB	R1, [SP, #24]
0x263A	0x48A8    LDR	R0, [PC, #672]
0x263C	0x1843    ADDS	R3, R0, R1
0x263E	0x48A2    LDR	R0, [PC, #648]
0x2640	0x7801    LDRB	R1, [R0, #0]
0x2642	0x2007    MOVS	R0, #7
0x2644	0x4341    MULS	R1, R0, R1
0x2646	0x48A6    LDR	R0, [PC, #664]
0x2648	0x1842    ADDS	R2, R0, R1
0x264A	0xF89D0018  LDRB	R0, [SP, #24]
0x264E	0x1F01    SUBS	R1, R0, #4
0x2650	0xB209    SXTH	R1, R1
0x2652	0x4610    MOV	R0, R2
0x2654	0x1840    ADDS	R0, R0, R1
0x2656	0x7800    LDRB	R0, [R0, #0]
0x2658	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 54 :: 		for ( i = 4; i < 11; i++ ) {
0x265A	0xF89D0018  LDRB	R0, [SP, #24]
0x265E	0x1C40    ADDS	R0, R0, #1
0x2660	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 56 :: 		}
0x2664	0xE7E3    B	L_vRF4463Init9
L_vRF4463Init10:
;driverrf4463pro.c, 57 :: 		for ( i = 4; i < 15; i++ ) {
0x2666	0x2004    MOVS	R0, #4
0x2668	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init12:
0x266C	0xF89D0018  LDRB	R0, [SP, #24]
0x2670	0x280F    CMP	R0, #15
0x2672	0xD217    BCS	L_vRF4463Init13
;driverrf4463pro.c, 58 :: 		RF_MODEM_OOK_CNT1_11_data[ i ] = RF_MODEM_OOK_CNT1_11_433[ ucRF4463Rate ][ i - 4 ];
0x2674	0xF89D1018  LDRB	R1, [SP, #24]
0x2678	0x489A    LDR	R0, [PC, #616]
0x267A	0x1843    ADDS	R3, R0, R1
0x267C	0x4892    LDR	R0, [PC, #584]
0x267E	0x7801    LDRB	R1, [R0, #0]
0x2680	0x200B    MOVS	R0, #11
0x2682	0x4341    MULS	R1, R0, R1
0x2684	0x4898    LDR	R0, [PC, #608]
0x2686	0x1842    ADDS	R2, R0, R1
0x2688	0xF89D0018  LDRB	R0, [SP, #24]
0x268C	0x1F01    SUBS	R1, R0, #4
0x268E	0xB209    SXTH	R1, R1
0x2690	0x4610    MOV	R0, R2
0x2692	0x1840    ADDS	R0, R0, R1
0x2694	0x7800    LDRB	R0, [R0, #0]
0x2696	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 57 :: 		for ( i = 4; i < 15; i++ ) {
0x2698	0xF89D0018  LDRB	R0, [SP, #24]
0x269C	0x1C40    ADDS	R0, R0, #1
0x269E	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 59 :: 		}
0x26A2	0xE7E3    B	L_vRF4463Init12
L_vRF4463Init13:
;driverrf4463pro.c, 60 :: 		for ( i = 4; i < 16; i++ ) {
0x26A4	0x2004    MOVS	R0, #4
0x26A6	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init15:
0x26AA	0xF89D0018  LDRB	R0, [SP, #24]
0x26AE	0x2810    CMP	R0, #16
0x26B0	0xD217    BCS	L_vRF4463Init16
;driverrf4463pro.c, 61 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x26B2	0xF89D1018  LDRB	R1, [SP, #24]
0x26B6	0x488D    LDR	R0, [PC, #564]
0x26B8	0x1843    ADDS	R3, R0, R1
0x26BA	0x4883    LDR	R0, [PC, #524]
0x26BC	0x7801    LDRB	R1, [R0, #0]
0x26BE	0x200C    MOVS	R0, #12
0x26C0	0x4341    MULS	R1, R0, R1
0x26C2	0x488B    LDR	R0, [PC, #556]
0x26C4	0x1842    ADDS	R2, R0, R1
0x26C6	0xF89D0018  LDRB	R0, [SP, #24]
0x26CA	0x1F01    SUBS	R1, R0, #4
0x26CC	0xB209    SXTH	R1, R1
0x26CE	0x4610    MOV	R0, R2
0x26D0	0x1840    ADDS	R0, R0, R1
0x26D2	0x7800    LDRB	R0, [R0, #0]
0x26D4	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 60 :: 		for ( i = 4; i < 16; i++ ) {
0x26D6	0xF89D0018  LDRB	R0, [SP, #24]
0x26DA	0x1C40    ADDS	R0, R0, #1
0x26DC	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 62 :: 		}
0x26E0	0xE7E3    B	L_vRF4463Init15
L_vRF4463Init16:
;driverrf4463pro.c, 63 :: 		for ( i = 4; i < 16; i++ ) {
0x26E2	0x2004    MOVS	R0, #4
0x26E4	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init18:
0x26E8	0xF89D0018  LDRB	R0, [SP, #24]
0x26EC	0x2810    CMP	R0, #16
0x26EE	0xD217    BCS	L_vRF4463Init19
;driverrf4463pro.c, 64 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x26F0	0xF89D1018  LDRB	R1, [SP, #24]
0x26F4	0x487F    LDR	R0, [PC, #508]
0x26F6	0x1843    ADDS	R3, R0, R1
0x26F8	0x4873    LDR	R0, [PC, #460]
0x26FA	0x7801    LDRB	R1, [R0, #0]
0x26FC	0x200C    MOVS	R0, #12
0x26FE	0x4341    MULS	R1, R0, R1
0x2700	0x487D    LDR	R0, [PC, #500]
0x2702	0x1842    ADDS	R2, R0, R1
0x2704	0xF89D0018  LDRB	R0, [SP, #24]
0x2708	0x1F01    SUBS	R1, R0, #4
0x270A	0xB209    SXTH	R1, R1
0x270C	0x4610    MOV	R0, R2
0x270E	0x1840    ADDS	R0, R0, R1
0x2710	0x7800    LDRB	R0, [R0, #0]
0x2712	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 63 :: 		for ( i = 4; i < 16; i++ ) {
0x2714	0xF89D0018  LDRB	R0, [SP, #24]
0x2718	0x1C40    ADDS	R0, R0, #1
0x271A	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 65 :: 		}
0x271E	0xE7E3    B	L_vRF4463Init18
L_vRF4463Init19:
;driverrf4463pro.c, 66 :: 		for ( i = 4; i < 16; i++ ) {
0x2720	0x2004    MOVS	R0, #4
0x2722	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init21:
0x2726	0xF89D0018  LDRB	R0, [SP, #24]
0x272A	0x2810    CMP	R0, #16
0x272C	0xD217    BCS	L_vRF4463Init22
;driverrf4463pro.c, 67 :: 		RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x272E	0xF89D1018  LDRB	R1, [SP, #24]
0x2732	0x4872    LDR	R0, [PC, #456]
0x2734	0x1843    ADDS	R3, R0, R1
0x2736	0x4864    LDR	R0, [PC, #400]
0x2738	0x7801    LDRB	R1, [R0, #0]
0x273A	0x200C    MOVS	R0, #12
0x273C	0x4341    MULS	R1, R0, R1
0x273E	0x4870    LDR	R0, [PC, #448]
0x2740	0x1842    ADDS	R2, R0, R1
0x2742	0xF89D0018  LDRB	R0, [SP, #24]
0x2746	0x1F01    SUBS	R1, R0, #4
0x2748	0xB209    SXTH	R1, R1
0x274A	0x4610    MOV	R0, R2
0x274C	0x1840    ADDS	R0, R0, R1
0x274E	0x7800    LDRB	R0, [R0, #0]
0x2750	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 66 :: 		for ( i = 4; i < 16; i++ ) {
0x2752	0xF89D0018  LDRB	R0, [SP, #24]
0x2756	0x1C40    ADDS	R0, R0, #1
0x2758	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 68 :: 		}
0x275C	0xE7E3    B	L_vRF4463Init21
L_vRF4463Init22:
;driverrf4463pro.c, 69 :: 		for ( i = 4; i < 13; i++ ) {
0x275E	0x2004    MOVS	R0, #4
0x2760	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init24:
0x2764	0xF89D0018  LDRB	R0, [SP, #24]
0x2768	0x280D    CMP	R0, #13
0x276A	0xD217    BCS	L_vRF4463Init25
;driverrf4463pro.c, 70 :: 		RF_MODEM_AGC_WINDOW_SIZE_9_data[ i ] = RF_MODEM_AGC_WINDOW_SIZE_9_433[ ucRF4463Rate ][ i - 4 ];
0x276C	0xF89D1018  LDRB	R1, [SP, #24]
0x2770	0x4864    LDR	R0, [PC, #400]
0x2772	0x1843    ADDS	R3, R0, R1
0x2774	0x4854    LDR	R0, [PC, #336]
0x2776	0x7801    LDRB	R1, [R0, #0]
0x2778	0x2009    MOVS	R0, #9
0x277A	0x4341    MULS	R1, R0, R1
0x277C	0x4862    LDR	R0, [PC, #392]
0x277E	0x1842    ADDS	R2, R0, R1
0x2780	0xF89D0018  LDRB	R0, [SP, #24]
0x2784	0x1F01    SUBS	R1, R0, #4
0x2786	0xB209    SXTH	R1, R1
0x2788	0x4610    MOV	R0, R2
0x278A	0x1840    ADDS	R0, R0, R1
0x278C	0x7800    LDRB	R0, [R0, #0]
0x278E	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 69 :: 		for ( i = 4; i < 13; i++ ) {
0x2790	0xF89D0018  LDRB	R0, [SP, #24]
0x2794	0x1C40    ADDS	R0, R0, #1
0x2796	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 71 :: 		}
0x279A	0xE7E3    B	L_vRF4463Init24
L_vRF4463Init25:
;driverrf4463pro.c, 72 :: 		for ( i = 4; i < 13; i++ ) {
0x279C	0x2004    MOVS	R0, #4
0x279E	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init27:
0x27A2	0xF89D0018  LDRB	R0, [SP, #24]
0x27A6	0x280D    CMP	R0, #13
0x27A8	0xD217    BCS	L_vRF4463Init28
;driverrf4463pro.c, 73 :: 		RF_MODEM_BCR_OSR_1_9_data[ i ] = RF_MODEM_BCR_OSR_1_9_433[ ucRF4463Rate ][ i - 4 ];
0x27AA	0xF89D1018  LDRB	R1, [SP, #24]
0x27AE	0x4857    LDR	R0, [PC, #348]
0x27B0	0x1843    ADDS	R3, R0, R1
0x27B2	0x4845    LDR	R0, [PC, #276]
0x27B4	0x7801    LDRB	R1, [R0, #0]
0x27B6	0x2009    MOVS	R0, #9
0x27B8	0x4341    MULS	R1, R0, R1
0x27BA	0x4855    LDR	R0, [PC, #340]
0x27BC	0x1842    ADDS	R2, R0, R1
0x27BE	0xF89D0018  LDRB	R0, [SP, #24]
0x27C2	0x1F01    SUBS	R1, R0, #4
0x27C4	0xB209    SXTH	R1, R1
0x27C6	0x4610    MOV	R0, R2
0x27C8	0x1840    ADDS	R0, R0, R1
0x27CA	0x7800    LDRB	R0, [R0, #0]
0x27CC	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 72 :: 		for ( i = 4; i < 13; i++ ) {
0x27CE	0xF89D0018  LDRB	R0, [SP, #24]
0x27D2	0x1C40    ADDS	R0, R0, #1
0x27D4	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 74 :: 		}
0x27D8	0xE7E3    B	L_vRF4463Init27
L_vRF4463Init28:
;driverrf4463pro.c, 75 :: 		}
0x27DA	0xE128    B	L_vRF4463Init30
L_vRF4463Init5:
;driverrf4463pro.c, 77 :: 		for ( i = 4; i < 12; i++ ) {
0x27DC	0x2004    MOVS	R0, #4
0x27DE	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init31:
0x27E2	0xF89D0018  LDRB	R0, [SP, #24]
0x27E6	0x280C    CMP	R0, #12
0x27E8	0xD217    BCS	L_vRF4463Init32
;driverrf4463pro.c, 78 :: 		RF_MODEM_TX_RAMP_DELAY_8_data[ i ] = RF_MODEM_TX_RAMP_DELAY_8_850[ ucRF4463Rate ][ i - 4 ];
0x27EA	0xF89D1018  LDRB	R1, [SP, #24]
0x27EE	0x4839    LDR	R0, [PC, #228]
0x27F0	0x1843    ADDS	R3, R0, R1
0x27F2	0x4835    LDR	R0, [PC, #212]
0x27F4	0x7801    LDRB	R1, [R0, #0]
0x27F6	0x2008    MOVS	R0, #8
0x27F8	0x4341    MULS	R1, R0, R1
0x27FA	0x4846    LDR	R0, [PC, #280]
0x27FC	0x1842    ADDS	R2, R0, R1
0x27FE	0xF89D0018  LDRB	R0, [SP, #24]
0x2802	0x1F01    SUBS	R1, R0, #4
0x2804	0xB209    SXTH	R1, R1
0x2806	0x4610    MOV	R0, R2
0x2808	0x1840    ADDS	R0, R0, R1
0x280A	0x7800    LDRB	R0, [R0, #0]
0x280C	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 77 :: 		for ( i = 4; i < 12; i++ ) {
0x280E	0xF89D0018  LDRB	R0, [SP, #24]
0x2812	0x1C40    ADDS	R0, R0, #1
0x2814	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 79 :: 		}
0x2818	0xE7E3    B	L_vRF4463Init31
L_vRF4463Init32:
;driverrf4463pro.c, 80 :: 		for ( i = 4; i < 11; i++ ) {
0x281A	0x2004    MOVS	R0, #4
0x281C	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init34:
0x2820	0xF89D0018  LDRB	R0, [SP, #24]
0x2824	0x280B    CMP	R0, #11
0x2826	0xD217    BCS	L_vRF4463Init35
;driverrf4463pro.c, 81 :: 		RF_MODEM_AFC_GEAR_7_data[ i ] = RF_MODEM_AFC_GEAR_7_850[ ucRF4463Rate ][ i - 4 ];
0x2828	0xF89D1018  LDRB	R1, [SP, #24]
0x282C	0x482B    LDR	R0, [PC, #172]
0x282E	0x1843    ADDS	R3, R0, R1
0x2830	0x4825    LDR	R0, [PC, #148]
0x2832	0x7801    LDRB	R1, [R0, #0]
0x2834	0x2007    MOVS	R0, #7
0x2836	0x4341    MULS	R1, R0, R1
0x2838	0x4837    LDR	R0, [PC, #220]
0x283A	0x1842    ADDS	R2, R0, R1
0x283C	0xF89D0018  LDRB	R0, [SP, #24]
0x2840	0x1F01    SUBS	R1, R0, #4
0x2842	0xB209    SXTH	R1, R1
0x2844	0x4610    MOV	R0, R2
0x2846	0x1840    ADDS	R0, R0, R1
0x2848	0x7800    LDRB	R0, [R0, #0]
0x284A	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 80 :: 		for ( i = 4; i < 11; i++ ) {
0x284C	0xF89D0018  LDRB	R0, [SP, #24]
0x2850	0x1C40    ADDS	R0, R0, #1
0x2852	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 82 :: 		}
0x2856	0xE7E3    B	L_vRF4463Init34
L_vRF4463Init35:
;driverrf4463pro.c, 83 :: 		for ( i = 4; i < 15; i++ ) {
0x2858	0x2004    MOVS	R0, #4
0x285A	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init37:
0x285E	0xF89D0018  LDRB	R0, [SP, #24]
0x2862	0x280F    CMP	R0, #15
0x2864	0xD217    BCS	L_vRF4463Init38
;driverrf4463pro.c, 84 :: 		RF_MODEM_OOK_CNT1_11_data[ i ] = RF_MODEM_OOK_CNT1_11_850[ ucRF4463Rate ][ i - 4 ];
0x2866	0xF89D1018  LDRB	R1, [SP, #24]
0x286A	0x481E    LDR	R0, [PC, #120]
0x286C	0x1843    ADDS	R3, R0, R1
0x286E	0x4816    LDR	R0, [PC, #88]
0x2870	0x7801    LDRB	R1, [R0, #0]
0x2872	0x200B    MOVS	R0, #11
0x2874	0x4341    MULS	R1, R0, R1
0x2876	0x4829    LDR	R0, [PC, #164]
0x2878	0x1842    ADDS	R2, R0, R1
0x287A	0xF89D0018  LDRB	R0, [SP, #24]
0x287E	0x1F01    SUBS	R1, R0, #4
0x2880	0xB209    SXTH	R1, R1
0x2882	0x4610    MOV	R0, R2
0x2884	0x1840    ADDS	R0, R0, R1
0x2886	0x7800    LDRB	R0, [R0, #0]
0x2888	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 83 :: 		for ( i = 4; i < 15; i++ ) {
0x288A	0xF89D0018  LDRB	R0, [SP, #24]
0x288E	0x1C40    ADDS	R0, R0, #1
0x2890	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 85 :: 		}
0x2894	0xE7E3    B	L_vRF4463Init37
L_vRF4463Init38:
;driverrf4463pro.c, 86 :: 		for ( i = 4; i < 16; i++ ) {
0x2896	0x2004    MOVS	R0, #4
0x2898	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init40:
0x289C	0xF89D0018  LDRB	R0, [SP, #24]
0x28A0	0x2810    CMP	R0, #16
0x28A2	0xD248    BCS	L_vRF4463Init41
;driverrf4463pro.c, 87 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x28A4	0xF89D1018  LDRB	R1, [SP, #24]
0x28A8	0x4810    LDR	R0, [PC, #64]
0x28AA	0x1843    ADDS	R3, R0, R1
0x28AC	0x4806    LDR	R0, [PC, #24]
0x28AE	0x7801    LDRB	R1, [R0, #0]
0x28B0	0x200C    MOVS	R0, #12
0x28B2	0x4341    MULS	R1, R0, R1
0x28B4	0x481A    LDR	R0, [PC, #104]
0x28B6	0x1842    ADDS	R2, R0, R1
0x28B8	0xF89D0018  LDRB	R0, [SP, #24]
0x28BC	0x1F01    SUBS	R1, R0, #4
0x28BE	0xB209    SXTH	R1, R1
0x28C0	0x4610    MOV	R0, R2
0x28C2	0xE02F    B	#94
0x28C4	0x22002000  	_RF_MODEM_MOD_TYPE_12_data+0
0x28C8	0x22A72000  	_ucRF4463Rate+0
0x28CC	0x632F0000  	_RF_MODEM_MOD_TYPE_12+0
0x28D0	0x22A42000  	_ucRF4463Freq3+0
0x28D4	0x22102000  	_RF_MODEM_TX_RAMP_DELAY_8_data+0
0x28D8	0x68250000  	_RF_MODEM_TX_RAMP_DELAY_8_433+0
0x28DC	0x221C2000  	_RF_MODEM_AFC_GEAR_7_data+0
0x28E0	0x69170000  	_RF_MODEM_AFC_GEAR_7_433+0
0x28E4	0x22292000  	_RF_MODEM_OOK_CNT1_11_data+0
0x28E8	0x642C0000  	_RF_MODEM_OOK_CNT1_11_433+0
0x28EC	0x22382000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+0
0x28F0	0x62AB0000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+0
0x28F4	0x22482000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x28F8	0x609B0000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+0
0x28FC	0x22582000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x2900	0x60170000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+0
0x2904	0x22682000  	_RF_MODEM_AGC_WINDOW_SIZE_9_data+0
0x2908	0x65E70000  	_RF_MODEM_AGC_WINDOW_SIZE_9_433+0
0x290C	0x22752000  	_RF_MODEM_BCR_OSR_1_9_data+0
0x2910	0x66AD0000  	_RF_MODEM_BCR_OSR_1_9_433+0
0x2914	0x67CD0000  	_RF_MODEM_TX_RAMP_DELAY_8_850+0
0x2918	0x68CA0000  	_RF_MODEM_AFC_GEAR_7_850+0
0x291C	0x63B30000  	_RF_MODEM_OOK_CNT1_11_850+0
0x2920	0x611F0000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+0
0x2924	0x1840    ADDS	R0, R0, R1
0x2926	0x7800    LDRB	R0, [R0, #0]
0x2928	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 86 :: 		for ( i = 4; i < 16; i++ ) {
0x292A	0xF89D0018  LDRB	R0, [SP, #24]
0x292E	0x1C40    ADDS	R0, R0, #1
0x2930	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 88 :: 		}
0x2934	0xE7B2    B	L_vRF4463Init40
L_vRF4463Init41:
;driverrf4463pro.c, 89 :: 		for ( i = 4; i < 16; i++ ) {
0x2936	0x2004    MOVS	R0, #4
0x2938	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init43:
0x293C	0xF89D0018  LDRB	R0, [SP, #24]
0x2940	0x2810    CMP	R0, #16
0x2942	0xD217    BCS	L_vRF4463Init44
;driverrf4463pro.c, 90 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x2944	0xF89D1018  LDRB	R1, [SP, #24]
0x2948	0x48E3    LDR	R0, [PC, #908]
0x294A	0x1843    ADDS	R3, R0, R1
0x294C	0x48E3    LDR	R0, [PC, #908]
0x294E	0x7801    LDRB	R1, [R0, #0]
0x2950	0x200C    MOVS	R0, #12
0x2952	0x4341    MULS	R1, R0, R1
0x2954	0x48E2    LDR	R0, [PC, #904]
0x2956	0x1842    ADDS	R2, R0, R1
0x2958	0xF89D0018  LDRB	R0, [SP, #24]
0x295C	0x1F01    SUBS	R1, R0, #4
0x295E	0xB209    SXTH	R1, R1
0x2960	0x4610    MOV	R0, R2
0x2962	0x1840    ADDS	R0, R0, R1
0x2964	0x7800    LDRB	R0, [R0, #0]
0x2966	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 89 :: 		for ( i = 4; i < 16; i++ ) {
0x2968	0xF89D0018  LDRB	R0, [SP, #24]
0x296C	0x1C40    ADDS	R0, R0, #1
0x296E	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 91 :: 		}
0x2972	0xE7E3    B	L_vRF4463Init43
L_vRF4463Init44:
;driverrf4463pro.c, 92 :: 		for ( i = 4; i < 16; i++ ) {
0x2974	0x2004    MOVS	R0, #4
0x2976	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init46:
0x297A	0xF89D0018  LDRB	R0, [SP, #24]
0x297E	0x2810    CMP	R0, #16
0x2980	0xD217    BCS	L_vRF4463Init47
;driverrf4463pro.c, 93 :: 		RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x2982	0xF89D1018  LDRB	R1, [SP, #24]
0x2986	0x48D7    LDR	R0, [PC, #860]
0x2988	0x1843    ADDS	R3, R0, R1
0x298A	0x48D4    LDR	R0, [PC, #848]
0x298C	0x7801    LDRB	R1, [R0, #0]
0x298E	0x200C    MOVS	R0, #12
0x2990	0x4341    MULS	R1, R0, R1
0x2992	0x48D5    LDR	R0, [PC, #852]
0x2994	0x1842    ADDS	R2, R0, R1
0x2996	0xF89D0018  LDRB	R0, [SP, #24]
0x299A	0x1F01    SUBS	R1, R0, #4
0x299C	0xB209    SXTH	R1, R1
0x299E	0x4610    MOV	R0, R2
0x29A0	0x1840    ADDS	R0, R0, R1
0x29A2	0x7800    LDRB	R0, [R0, #0]
0x29A4	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 92 :: 		for ( i = 4; i < 16; i++ ) {
0x29A6	0xF89D0018  LDRB	R0, [SP, #24]
0x29AA	0x1C40    ADDS	R0, R0, #1
0x29AC	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 94 :: 		}
0x29B0	0xE7E3    B	L_vRF4463Init46
L_vRF4463Init47:
;driverrf4463pro.c, 95 :: 		for ( i = 4; i < 13; i++ ) {
0x29B2	0x2004    MOVS	R0, #4
0x29B4	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init49:
0x29B8	0xF89D0018  LDRB	R0, [SP, #24]
0x29BC	0x280D    CMP	R0, #13
0x29BE	0xD217    BCS	L_vRF4463Init50
;driverrf4463pro.c, 96 :: 		RF_MODEM_AGC_WINDOW_SIZE_9_data[ i ] = RF_MODEM_AGC_WINDOW_SIZE_9_850[ ucRF4463Rate ][ i - 4 ];
0x29C0	0xF89D1018  LDRB	R1, [SP, #24]
0x29C4	0x48C9    LDR	R0, [PC, #804]
0x29C6	0x1843    ADDS	R3, R0, R1
0x29C8	0x48C4    LDR	R0, [PC, #784]
0x29CA	0x7801    LDRB	R1, [R0, #0]
0x29CC	0x2009    MOVS	R0, #9
0x29CE	0x4341    MULS	R1, R0, R1
0x29D0	0x48C7    LDR	R0, [PC, #796]
0x29D2	0x1842    ADDS	R2, R0, R1
0x29D4	0xF89D0018  LDRB	R0, [SP, #24]
0x29D8	0x1F01    SUBS	R1, R0, #4
0x29DA	0xB209    SXTH	R1, R1
0x29DC	0x4610    MOV	R0, R2
0x29DE	0x1840    ADDS	R0, R0, R1
0x29E0	0x7800    LDRB	R0, [R0, #0]
0x29E2	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 95 :: 		for ( i = 4; i < 13; i++ ) {
0x29E4	0xF89D0018  LDRB	R0, [SP, #24]
0x29E8	0x1C40    ADDS	R0, R0, #1
0x29EA	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 97 :: 		}
0x29EE	0xE7E3    B	L_vRF4463Init49
L_vRF4463Init50:
;driverrf4463pro.c, 98 :: 		for ( i = 4; i < 13; i++ ) {
0x29F0	0x2004    MOVS	R0, #4
0x29F2	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init52:
0x29F6	0xF89D0018  LDRB	R0, [SP, #24]
0x29FA	0x280D    CMP	R0, #13
0x29FC	0xD217    BCS	L_vRF4463Init53
;driverrf4463pro.c, 99 :: 		RF_MODEM_BCR_OSR_1_9_data[ i ] = RF_MODEM_BCR_OSR_1_9_850[ ucRF4463Rate ][ i - 4 ];
0x29FE	0xF89D1018  LDRB	R1, [SP, #24]
0x2A02	0x48BC    LDR	R0, [PC, #752]
0x2A04	0x1843    ADDS	R3, R0, R1
0x2A06	0x48B5    LDR	R0, [PC, #724]
0x2A08	0x7801    LDRB	R1, [R0, #0]
0x2A0A	0x2009    MOVS	R0, #9
0x2A0C	0x4341    MULS	R1, R0, R1
0x2A0E	0x48BA    LDR	R0, [PC, #744]
0x2A10	0x1842    ADDS	R2, R0, R1
0x2A12	0xF89D0018  LDRB	R0, [SP, #24]
0x2A16	0x1F01    SUBS	R1, R0, #4
0x2A18	0xB209    SXTH	R1, R1
0x2A1A	0x4610    MOV	R0, R2
0x2A1C	0x1840    ADDS	R0, R0, R1
0x2A1E	0x7800    LDRB	R0, [R0, #0]
0x2A20	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 98 :: 		for ( i = 4; i < 13; i++ ) {
0x2A22	0xF89D0018  LDRB	R0, [SP, #24]
0x2A26	0x1C40    ADDS	R0, R0, #1
0x2A28	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 100 :: 		}
0x2A2C	0xE7E3    B	L_vRF4463Init52
L_vRF4463Init53:
;driverrf4463pro.c, 101 :: 		}
L_vRF4463Init30:
;driverrf4463pro.c, 102 :: 		for ( i = 4; i < 11; i++ ) {
0x2A2E	0x2004    MOVS	R0, #4
0x2A30	0xF88D0018  STRB	R0, [SP, #24]
L_vRF4463Init55:
0x2A34	0xF89D0018  LDRB	R0, [SP, #24]
0x2A38	0x280B    CMP	R0, #11
0x2A3A	0xD217    BCS	L_vRF4463Init56
;driverrf4463pro.c, 103 :: 		RF_SYNTH_PFDCP_CPFF_7_data[ i ] = RF_SYNTH_PFDCP_CPFF_7[ ucRF4463Rate ][ i - 4 ];
0x2A3C	0xF89D1018  LDRB	R1, [SP, #24]
0x2A40	0x48AE    LDR	R0, [PC, #696]
0x2A42	0x1843    ADDS	R3, R0, R1
0x2A44	0x48A5    LDR	R0, [PC, #660]
0x2A46	0x7801    LDRB	R1, [R0, #0]
0x2A48	0x2007    MOVS	R0, #7
0x2A4A	0x4341    MULS	R1, R0, R1
0x2A4C	0x48AC    LDR	R0, [PC, #688]
0x2A4E	0x1842    ADDS	R2, R0, R1
0x2A50	0xF89D0018  LDRB	R0, [SP, #24]
0x2A54	0x1F01    SUBS	R1, R0, #4
0x2A56	0xB209    SXTH	R1, R1
0x2A58	0x4610    MOV	R0, R2
0x2A5A	0x1840    ADDS	R0, R0, R1
0x2A5C	0x7800    LDRB	R0, [R0, #0]
0x2A5E	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 102 :: 		for ( i = 4; i < 11; i++ ) {
0x2A60	0xF89D0018  LDRB	R0, [SP, #24]
0x2A64	0x1C40    ADDS	R0, R0, #1
0x2A66	0xF88D0018  STRB	R0, [SP, #24]
;driverrf4463pro.c, 104 :: 		}
0x2A6A	0xE7E3    B	L_vRF4463Init55
L_vRF4463Init56:
;driverrf4463pro.c, 108 :: 		vRF4463GPIO_SET( ucRF4463Mode );                              // PARAMETRO CONFIGURABLE
0x2A6C	0x48A5    LDR	R0, [PC, #660]
0x2A6E	0x7800    LDRB	R0, [R0, #0]
0x2A70	0xB401    PUSH	(R0)
0x2A72	0xF7FFF8BB  BL	_vRF4463GPIO_SET+0
0x2A76	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 111 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x2A78	0xA801    ADD	R0, SP, #4
0x2A7A	0x1C01    ADDS	R1, R0, #0
0x2A7C	0x2011    MOVS	R0, #17
0x2A7E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 112 :: 		app_command_buf[ 1 ] = 0x00;    // 0x0000
0x2A80	0xA801    ADD	R0, SP, #4
0x2A82	0x1C41    ADDS	R1, R0, #1
0x2A84	0x2000    MOVS	R0, #0
0x2A86	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 113 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1 Parameters
0x2A88	0xA801    ADD	R0, SP, #4
0x2A8A	0x1C81    ADDS	R1, R0, #2
0x2A8C	0x2001    MOVS	R0, #1
0x2A8E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 114 :: 		app_command_buf[ 3 ] = 0x00;    // 0x0000
0x2A90	0xA801    ADD	R0, SP, #4
0x2A92	0x1CC1    ADDS	R1, R0, #3
0x2A94	0x2000    MOVS	R0, #0
0x2A96	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 115 :: 		app_command_buf[ 4 ] = 98;      // freq  adjustment    ( rango desde 0 - 127 Low cap - High Cap )
0x2A98	0xA801    ADD	R0, SP, #4
0x2A9A	0x1D01    ADDS	R1, R0, #4
0x2A9C	0x2062    MOVS	R0, #98
0x2A9E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 116 :: 		spi_write( 5, app_command_buf );
0x2AA0	0xA801    ADD	R0, SP, #4
0x2AA2	0xB401    PUSH	(R0)
0x2AA4	0x2005    MOVS	R0, #5
0x2AA6	0xB401    PUSH	(R0)
0x2AA8	0xF7FFF8FC  BL	_spi_write+0
0x2AAC	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 119 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x2AAE	0xA801    ADD	R0, SP, #4
0x2AB0	0x1C01    ADDS	R1, R0, #0
0x2AB2	0x2011    MOVS	R0, #17
0x2AB4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 120 :: 		app_command_buf[ 1 ] = 0x00;    // 0x0003
0x2AB6	0xA801    ADD	R0, SP, #4
0x2AB8	0x1C41    ADDS	R1, R0, #1
0x2ABA	0x2000    MOVS	R0, #0
0x2ABC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 121 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1 Parameters
0x2ABE	0xA801    ADD	R0, SP, #4
0x2AC0	0x1C81    ADDS	R1, R0, #2
0x2AC2	0x2001    MOVS	R0, #1
0x2AC4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 122 :: 		app_command_buf[ 3 ] = 0x03;    // 0x0003
0x2AC6	0xA801    ADD	R0, SP, #4
0x2AC8	0x1CC1    ADDS	R1, R0, #3
0x2ACA	0x2003    MOVS	R0, #3
0x2ACC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 123 :: 		app_command_buf[ 4 ] = 0x40;    // tx = rx = 64 byte, ordinary PH,high performance mode  ?????????????????????
0x2ACE	0xA801    ADD	R0, SP, #4
0x2AD0	0x1D01    ADDS	R1, R0, #4
0x2AD2	0x2040    MOVS	R0, #64
0x2AD4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 124 :: 		spi_write( 5, app_command_buf );
0x2AD6	0xA801    ADD	R0, SP, #4
0x2AD8	0xB401    PUSH	(R0)
0x2ADA	0x2005    MOVS	R0, #5
0x2ADC	0xB401    PUSH	(R0)
0x2ADE	0xF7FFF8E1  BL	_spi_write+0
0x2AE2	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 128 :: 		spi_write( 0x08, RF_FRR_CTL_A_MODE_4_data );    // disable all fast response register
0x2AE4	0x4888    LDR	R0, [PC, #544]
0x2AE6	0xB401    PUSH	(R0)
0x2AE8	0x2008    MOVS	R0, #8
0x2AEA	0xB401    PUSH	(R0)
0x2AEC	0xF7FFF8DA  BL	_spi_write+0
0x2AF0	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 131 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x2AF2	0xA801    ADD	R0, SP, #4
0x2AF4	0x1C01    ADDS	R1, R0, #0
0x2AF6	0x2011    MOVS	R0, #17
0x2AF8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 132 :: 		app_command_buf[ 1 ] = 0x10;    // 0x1000
0x2AFA	0xA801    ADD	R0, SP, #4
0x2AFC	0x1C41    ADDS	R1, R0, #1
0x2AFE	0x2010    MOVS	R0, #16
0x2B00	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 133 :: 		app_command_buf[ 2 ] = 0x09;    // Total 9 Parameters
0x2B02	0xA801    ADD	R0, SP, #4
0x2B04	0x1C81    ADDS	R1, R0, #2
0x2B06	0x2009    MOVS	R0, #9
0x2B08	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 134 :: 		app_command_buf[ 3 ] = 0x00;    // 0x1000
0x2B0A	0xA801    ADD	R0, SP, #4
0x2B0C	0x1CC1    ADDS	R1, R0, #3
0x2B0E	0x2000    MOVS	R0, #0
0x2B10	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 136 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x2B12	0x487C    LDR	R0, [PC, #496]
0x2B14	0x7800    LDRB	R0, [R0, #0]
0x2B16	0x2802    CMP	R0, #2
0x2B18	0xD104    BNE	L_vRF4463Init58
;driverrf4463pro.c, 137 :: 		app_command_buf[ 4 ] = 0xff;     //  Need to send 255 bytes of Preamble
0x2B1A	0xA801    ADD	R0, SP, #4
0x2B1C	0x1D01    ADDS	R1, R0, #4
0x2B1E	0x20FF    MOVS	R0, #255
0x2B20	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 138 :: 		}
0x2B22	0xE003    B	L_vRF4463Init59
L_vRF4463Init58:
;driverrf4463pro.c, 140 :: 		app_command_buf[ 4 ] = 0x08;   //  Need to send 8 bytes of Preamble
0x2B24	0xA801    ADD	R0, SP, #4
0x2B26	0x1D01    ADDS	R1, R0, #4
0x2B28	0x2008    MOVS	R0, #8
0x2B2A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 141 :: 		}
L_vRF4463Init59:
;driverrf4463pro.c, 144 :: 		app_command_buf[ 5 ]   = 0x14;       // To detect 20 bit sync word,
0x2B2C	0xA801    ADD	R0, SP, #4
0x2B2E	0x1D41    ADDS	R1, R0, #5
0x2B30	0x2014    MOVS	R0, #20
0x2B32	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 145 :: 		app_command_buf[ 6 ]   = 0x00;       // Non-standard preamble settings, useless
0x2B34	0xA801    ADD	R0, SP, #4
0x2B36	0x1D81    ADDS	R1, R0, #6
0x2B38	0x2000    MOVS	R0, #0
0x2B3A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 146 :: 		app_command_buf[ 7 ]   = 0x0f;       // Time of the preamble Timeout   ????????????????????????????????????????????????????????????
0x2B3C	0xA801    ADD	R0, SP, #4
0x2B3E	0x1DC1    ADDS	R1, R0, #7
0x2B40	0x200F    MOVS	R0, #15
0x2B42	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 147 :: 		app_command_buf[ 8 ]   = 0x31;       // The length of the preamble is   byte Calculation , 1st = 1 NO manchest  Encoding, using standard 1010.??
0x2B44	0xA801    ADD	R0, SP, #4
0x2B46	0xF2000108  ADDW	R1, R0, #8
0x2B4A	0x2031    MOVS	R0, #49
0x2B4C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 148 :: 		app_command_buf[ 9 ]   = 0x0;        // Non-standard Preamble Patten 4th byte
0x2B4E	0xA801    ADD	R0, SP, #4
0x2B50	0xF2000109  ADDW	R1, R0, #9
0x2B54	0x2000    MOVS	R0, #0
0x2B56	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 149 :: 		app_command_buf[ 10 ]  = 0x00;       // Non-standard Preamble Patten 3rd byte
0x2B58	0xA801    ADD	R0, SP, #4
0x2B5A	0xF200010A  ADDW	R1, R0, #10
0x2B5E	0x2000    MOVS	R0, #0
0x2B60	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 150 :: 		app_command_buf[ 11 ]  = 0x00;       // Non-standard Preamble Patten 2nd byte
0x2B62	0xA801    ADD	R0, SP, #4
0x2B64	0xF200010B  ADDW	R1, R0, #11
0x2B68	0x2000    MOVS	R0, #0
0x2B6A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 151 :: 		app_command_buf[ 12 ]  = 0x00;       // Non-standard Preamble Patten 1st byte
0x2B6C	0xA801    ADD	R0, SP, #4
0x2B6E	0xF200010C  ADDW	R1, R0, #12
0x2B72	0x2000    MOVS	R0, #0
0x2B74	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 152 :: 		spi_write(13, app_command_buf);
0x2B76	0xA801    ADD	R0, SP, #4
0x2B78	0xB401    PUSH	(R0)
0x2B7A	0x200D    MOVS	R0, #13
0x2B7C	0xB401    PUSH	(R0)
0x2B7E	0xF7FFF891  BL	_spi_write+0
0x2B82	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 155 :: 		app_command_buf[ 0 ] = 0x11;         // SET PROPERTY
0x2B84	0xA801    ADD	R0, SP, #4
0x2B86	0x1C01    ADDS	R1, R0, #0
0x2B88	0x2011    MOVS	R0, #17
0x2B8A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 156 :: 		app_command_buf[ 1 ] = 0x11;         // command = 0x1100
0x2B8C	0xA801    ADD	R0, SP, #4
0x2B8E	0x1C41    ADDS	R1, R0, #1
0x2B90	0x2011    MOVS	R0, #17
0x2B92	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 157 :: 		app_command_buf[ 2 ] = 0x05;         // Total 5 Parameters
0x2B94	0xA801    ADD	R0, SP, #4
0x2B96	0x1C81    ADDS	R1, R0, #2
0x2B98	0x2005    MOVS	R0, #5
0x2B9A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 158 :: 		app_command_buf[ 3 ] = 0x00;         // command = 0x1100
0x2B9C	0xA801    ADD	R0, SP, #4
0x2B9E	0x1CC1    ADDS	R1, R0, #3
0x2BA0	0x2000    MOVS	R0, #0
0x2BA2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 159 :: 		app_command_buf[ 4 ] = 0x01;         // The synchronization word is defined and sent in the length field, and the synchronization word cannot be wrong,Not 4FSK, not manchest encoding, only 2 bytes
0x2BA4	0xA801    ADD	R0, SP, #4
0x2BA6	0x1D01    ADDS	R1, R0, #4
0x2BA8	0x2001    MOVS	R0, #1
0x2BAA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 161 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x2BAC	0x4855    LDR	R0, [PC, #340]
0x2BAE	0x7800    LDRB	R0, [R0, #0]
0x2BB0	0x2802    CMP	R0, #2
0x2BB2	0xD108    BNE	L_vRF4463Init60
;driverrf4463pro.c, 162 :: 		app_command_buf[ 5 ] = 0x55;      // Sync word 3
0x2BB4	0xA801    ADD	R0, SP, #4
0x2BB6	0x1D41    ADDS	R1, R0, #5
0x2BB8	0x2055    MOVS	R0, #85
0x2BBA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 163 :: 		app_command_buf[ 6 ] = 0x55;      // Sync word 2
0x2BBC	0xA801    ADD	R0, SP, #4
0x2BBE	0x1D81    ADDS	R1, R0, #6
0x2BC0	0x2055    MOVS	R0, #85
0x2BC2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 164 :: 		}
0x2BC4	0xE007    B	L_vRF4463Init61
L_vRF4463Init60:
;driverrf4463pro.c, 166 :: 		app_command_buf[ 5 ] = 0x2d;    // Sync word 3
0x2BC6	0xA801    ADD	R0, SP, #4
0x2BC8	0x1D41    ADDS	R1, R0, #5
0x2BCA	0x202D    MOVS	R0, #45
0x2BCC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 167 :: 		app_command_buf[ 6 ] = 0xd4;    // Sync word 2
0x2BCE	0xA801    ADD	R0, SP, #4
0x2BD0	0x1D81    ADDS	R1, R0, #6
0x2BD2	0x20D4    MOVS	R0, #212
0x2BD4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 168 :: 		}
L_vRF4463Init61:
;driverrf4463pro.c, 170 :: 		app_command_buf[ 7 ] =  0x00;        // Sync word 1
0x2BD6	0xA801    ADD	R0, SP, #4
0x2BD8	0x1DC1    ADDS	R1, R0, #7
0x2BDA	0x2000    MOVS	R0, #0
0x2BDC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 171 :: 		app_command_buf[ 8 ] = 0x00;         // Sync word 0
0x2BDE	0xA801    ADD	R0, SP, #4
0x2BE0	0xF2000108  ADDW	R1, R0, #8
0x2BE4	0x2000    MOVS	R0, #0
0x2BE6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 172 :: 		spi_write( 9, app_command_buf );
0x2BE8	0xA801    ADD	R0, SP, #4
0x2BEA	0xB401    PUSH	(R0)
0x2BEC	0x2009    MOVS	R0, #9
0x2BEE	0xB401    PUSH	(R0)
0x2BF0	0xF7FFF858  BL	_spi_write+0
0x2BF4	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 175 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x2BF6	0xA801    ADD	R0, SP, #4
0x2BF8	0x1C01    ADDS	R1, R0, #0
0x2BFA	0x2011    MOVS	R0, #17
0x2BFC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 176 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1200
0x2BFE	0xA801    ADD	R0, SP, #4
0x2C00	0x1C41    ADDS	R1, R0, #1
0x2C02	0x2012    MOVS	R0, #18
0x2C04	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 177 :: 		app_command_buf[ 2 ] = 0x01;        // Total 1 Parameters
0x2C06	0xA801    ADD	R0, SP, #4
0x2C08	0x1C81    ADDS	R1, R0, #2
0x2C0A	0x2001    MOVS	R0, #1
0x2C0C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 178 :: 		app_command_buf[ 3 ] = 0x00;        // command = 0x1200
0x2C0E	0xA801    ADD	R0, SP, #4
0x2C10	0x1CC1    ADDS	R1, R0, #3
0x2C12	0x2000    MOVS	R0, #0
0x2C14	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 179 :: 		app_command_buf[ 4 ] = 0x85;        // 1?cRC ??,CRC = itu-c, enable crc   ( original 0x81; )
0x2C16	0xA801    ADD	R0, SP, #4
0x2C18	0x1D01    ADDS	R1, R0, #4
0x2C1A	0x2085    MOVS	R0, #133
0x2C1C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 180 :: 		spi_write( 5, app_command_buf );
0x2C1E	0xA801    ADD	R0, SP, #4
0x2C20	0xB401    PUSH	(R0)
0x2C22	0x2005    MOVS	R0, #5
0x2C24	0xB401    PUSH	(R0)
0x2C26	0xF7FFF83D  BL	_spi_write+0
0x2C2A	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 183 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x2C2C	0xA801    ADD	R0, SP, #4
0x2C2E	0x1C01    ADDS	R1, R0, #0
0x2C30	0x2011    MOVS	R0, #17
0x2C32	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 184 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1206
0x2C34	0xA801    ADD	R0, SP, #4
0x2C36	0x1C41    ADDS	R1, R0, #1
0x2C38	0x2012    MOVS	R0, #18
0x2C3A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 185 :: 		app_command_buf[ 2 ] = 0x01;        // Total 1Parameters
0x2C3C	0xA801    ADD	R0, SP, #4
0x2C3E	0x1C81    ADDS	R1, R0, #2
0x2C40	0x2001    MOVS	R0, #1
0x2C42	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 186 :: 		app_command_buf[ 3 ] = 0x06;        // command = 0x1206
0x2C44	0xA801    ADD	R0, SP, #4
0x2C46	0x1CC1    ADDS	R1, R0, #3
0x2C48	0x2006    MOVS	R0, #6
0x2C4A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 187 :: 		app_command_buf[ 4 ] = 0x02;        //  tx = rx = 120d--1220 (tx packet,ph enable, not 4fsk, After receiving a packet of data,RX off,CRC Do not flip ,CRC MSB, data MSB
0x2C4C	0xA801    ADD	R0, SP, #4
0x2C4E	0x1D01    ADDS	R1, R0, #4
0x2C50	0x2002    MOVS	R0, #2
0x2C52	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 188 :: 		spi_write( 5, app_command_buf );
0x2C54	0xA801    ADD	R0, SP, #4
0x2C56	0xB401    PUSH	(R0)
0x2C58	0x2005    MOVS	R0, #5
0x2C5A	0xB401    PUSH	(R0)
0x2C5C	0xF7FFF822  BL	_spi_write+0
0x2C60	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 191 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x2C62	0xA801    ADD	R0, SP, #4
0x2C64	0x1C01    ADDS	R1, R0, #0
0x2C66	0x2011    MOVS	R0, #17
0x2C68	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 192 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1208
0x2C6A	0xA801    ADD	R0, SP, #4
0x2C6C	0x1C41    ADDS	R1, R0, #1
0x2C6E	0x2012    MOVS	R0, #18
0x2C70	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 193 :: 		app_command_buf[ 2 ] = 0x03;        // Total 3 Parameters
0x2C72	0xA801    ADD	R0, SP, #4
0x2C74	0x1C81    ADDS	R1, R0, #2
0x2C76	0x2003    MOVS	R0, #3
0x2C78	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 194 :: 		app_command_buf[ 3 ] = 0x08;        // command = 0x1208
0x2C7A	0xA801    ADD	R0, SP, #4
0x2C7C	0x1CC1    ADDS	R1, R0, #3
0x2C7E	0x2008    MOVS	R0, #8
0x2C80	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 195 :: 		app_command_buf[ 4 ] = 0x00;        // Length Field = LSB,  length Only 1 byte,length Not put In FiFo, fixed packet length mode
0x2C82	0xA801    ADD	R0, SP, #4
0x2C84	0x1D01    ADDS	R1, R0, #4
0x2C86	0x2000    MOVS	R0, #0
0x2C88	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 196 :: 		app_command_buf[ 5 ] = 0x00;        // Used for variable packet length mode, which defines which Field contains length Filed
0x2C8A	0xA801    ADD	R0, SP, #4
0x2C8C	0x1D41    ADDS	R1, R0, #5
0x2C8E	0x2000    MOVS	R0, #0
0x2C90	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 197 :: 		app_command_buf[ 6 ] = 0x00;        // Used for variable packet length mode, adjust the length of variable packet length
0x2C92	0xA801    ADD	R0, SP, #4
0x2C94	0x1D81    ADDS	R1, R0, #6
0x2C96	0x2000    MOVS	R0, #0
0x2C98	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 198 :: 		spi_write( 7, app_command_buf );
0x2C9A	0xA801    ADD	R0, SP, #4
0x2C9C	0xB401    PUSH	(R0)
0x2C9E	0x2007    MOVS	R0, #7
0x2CA0	0xB401    PUSH	(R0)
0x2CA2	0xF7FEFFFF  BL	_spi_write+0
0x2CA6	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 201 :: 		app_command_buf[ 0 ]  = 0x11;
0x2CA8	0xA801    ADD	R0, SP, #4
0x2CAA	0x1C01    ADDS	R1, R0, #0
0x2CAC	0x2011    MOVS	R0, #17
0x2CAE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 202 :: 		app_command_buf[ 1 ]  = 0x12;       // 0x120d
0x2CB0	0xA801    ADD	R0, SP, #4
0x2CB2	0x1C41    ADDS	R1, R0, #1
0x2CB4	0x2012    MOVS	R0, #18
0x2CB6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 203 :: 		app_command_buf[ 2 ]  = 0x0c;       // Total 12 Parameters
0x2CB8	0xA801    ADD	R0, SP, #4
0x2CBA	0x1C81    ADDS	R1, R0, #2
0x2CBC	0x200C    MOVS	R0, #12
0x2CBE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 204 :: 		app_command_buf[ 3 ]  = 0x0d;       // 0x120d
0x2CC0	0xA801    ADD	R0, SP, #4
0x2CC2	0x1CC1    ADDS	R1, R0, #3
0x2CC4	0x200D    MOVS	R0, #13
0x2CC6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 205 :: 		app_command_buf[ 4 ]  = 0x00;       //  Field 1 length (?4?)
0x2CC8	0xA801    ADD	R0, SP, #4
0x2CCA	0x1D01    ADDS	R1, R0, #4
0x2CCC	0x2000    MOVS	R0, #0
0x2CCE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 206 :: 		app_command_buf[ 5 ]  = payload_length;   //  field 1 length, (? 8?), ?Total14???
0x2CD0	0xA801    ADD	R0, SP, #4
0x2CD2	0x1D41    ADDS	R1, R0, #5
0x2CD4	0xF000B81A  B	#52
0x2CD8	0x22482000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x2CDC	0x22A72000  	_ucRF4463Rate+0
0x2CE0	0x62270000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+0
0x2CE4	0x22582000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x2CE8	0x61A30000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+0
0x2CEC	0x22682000  	_RF_MODEM_AGC_WINDOW_SIZE_9_data+0
0x2CF0	0x664A0000  	_RF_MODEM_AGC_WINDOW_SIZE_9_850+0
0x2CF4	0x22752000  	_RF_MODEM_BCR_OSR_1_9_data+0
0x2CF8	0x67100000  	_RF_MODEM_BCR_OSR_1_9_850+0
0x2CFC	0x22822000  	_RF_SYNTH_PFDCP_CPFF_7_data+0
0x2D00	0x687D0000  	_RF_SYNTH_PFDCP_CPFF_7+0
0x2D04	0x22A82000  	_ucRF4463Mode+0
0x2D08	0x69F00000  	_RF_FRR_CTL_A_MODE_4_data+0
0x2D0C	0x2042    MOVS	R0, #66
0x2D0E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 207 :: 		app_command_buf[ 6 ]  = 0x04;       // field 1 Is not 4FSK,manchest, whiting, PN9,
0x2D10	0xA801    ADD	R0, SP, #4
0x2D12	0x1D81    ADDS	R1, R0, #6
0x2D14	0x2004    MOVS	R0, #4
0x2D16	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 208 :: 		app_command_buf[ 7 ]  = 0xaa;       // field 1 crc enble, check enbale, There are also launchingCRC,cRC?Seed ?CRC_seed?????
0x2D18	0xA801    ADD	R0, SP, #4
0x2D1A	0x1DC1    ADDS	R1, R0, #7
0x2D1C	0x20AA    MOVS	R0, #170
0x2D1E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 209 :: 		app_command_buf[ 8 ]  = 0x00;       //  field 2 length(?4?)
0x2D20	0xA801    ADD	R0, SP, #4
0x2D22	0xF2000108  ADDW	R1, R0, #8
0x2D26	0x2000    MOVS	R0, #0
0x2D28	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 210 :: 		app_command_buf[ 9 ]  = 0x00;           //  field 2 length, (? 8?), length = 0 Means thisfield did not use
0x2D2A	0xA801    ADD	R0, SP, #4
0x2D2C	0xF2000109  ADDW	R1, R0, #9
0x2D30	0x2000    MOVS	R0, #0
0x2D32	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 211 :: 		app_command_buf[ 10 ] = 0x00;       // field 2 Is not 4FSK,manchest, whiting, PN9
0x2D34	0xA801    ADD	R0, SP, #4
0x2D36	0xF200010A  ADDW	R1, R0, #10
0x2D3A	0x2000    MOVS	R0, #0
0x2D3C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 212 :: 		app_command_buf[ 11 ] = 0x00;       //  field 2 ?CRCSet up
0x2D3E	0xA801    ADD	R0, SP, #4
0x2D40	0xF200010B  ADDW	R1, R0, #11
0x2D44	0x2000    MOVS	R0, #0
0x2D46	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 213 :: 		app_command_buf[ 12 ] = 0x00;       //  field 3 length, (? 8?), length = 0 Means thisfield did not use
0x2D48	0xA801    ADD	R0, SP, #4
0x2D4A	0xF200010C  ADDW	R1, R0, #12
0x2D4E	0x2000    MOVS	R0, #0
0x2D50	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 214 :: 		app_command_buf[ 13 ] = 0x00;           //  field 3 length, (? 8?), length = 0 Means thisfield did not use
0x2D52	0xA801    ADD	R0, SP, #4
0x2D54	0xF200010D  ADDW	R1, R0, #13
0x2D58	0x2000    MOVS	R0, #0
0x2D5A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 215 :: 		app_command_buf[ 14 ] = 0x00;       //  field 3 Is not 4FSK,manchest, whiting, PN9
0x2D5C	0xA801    ADD	R0, SP, #4
0x2D5E	0xF200010E  ADDW	R1, R0, #14
0x2D62	0x2000    MOVS	R0, #0
0x2D64	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 216 :: 		app_command_buf[ 15 ] = 0x00;       //  field 3 ?CRCSet up
0x2D66	0xA801    ADD	R0, SP, #4
0x2D68	0xF200010F  ADDW	R1, R0, #15
0x2D6C	0x2000    MOVS	R0, #0
0x2D6E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 217 :: 		spi_write( 16, app_command_buf );
0x2D70	0xA801    ADD	R0, SP, #4
0x2D72	0xB401    PUSH	(R0)
0x2D74	0x2010    MOVS	R0, #16
0x2D76	0xB401    PUSH	(R0)
0x2D78	0xF7FEFF94  BL	_spi_write+0
0x2D7C	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 220 :: 		app_command_buf[ 0 ]  = 0x11;
0x2D7E	0xA801    ADD	R0, SP, #4
0x2D80	0x1C01    ADDS	R1, R0, #0
0x2D82	0x2011    MOVS	R0, #17
0x2D84	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 221 :: 		app_command_buf[ 1 ]  = 0x12;       // 0x1219
0x2D86	0xA801    ADD	R0, SP, #4
0x2D88	0x1C41    ADDS	R1, R0, #1
0x2D8A	0x2012    MOVS	R0, #18
0x2D8C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 222 :: 		app_command_buf[ 2 ]  = 0x08;       // Total 8Parameters
0x2D8E	0xA801    ADD	R0, SP, #4
0x2D90	0x1C81    ADDS	R1, R0, #2
0x2D92	0x2008    MOVS	R0, #8
0x2D94	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 223 :: 		app_command_buf[ 3 ]  = 0x19;       // 0x1219
0x2D96	0xA801    ADD	R0, SP, #4
0x2D98	0x1CC1    ADDS	R1, R0, #3
0x2D9A	0x2019    MOVS	R0, #25
0x2D9C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 224 :: 		app_command_buf[ 4 ]  = 0x00;       // field4 length(?4?)
0x2D9E	0xA801    ADD	R0, SP, #4
0x2DA0	0x1D01    ADDS	R1, R0, #4
0x2DA2	0x2000    MOVS	R0, #0
0x2DA4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 225 :: 		app_command_buf[ 5 ]  = 0x00;       // field 4 length, (? 8?), length = 0 Means this field did not use
0x2DA6	0xA801    ADD	R0, SP, #4
0x2DA8	0x1D41    ADDS	R1, R0, #5
0x2DAA	0x2000    MOVS	R0, #0
0x2DAC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 226 :: 		app_command_buf[ 6 ]  = 0x00;       // field 4 Is not 4FSK,manchest, whiting, PN9
0x2DAE	0xA801    ADD	R0, SP, #4
0x2DB0	0x1D81    ADDS	R1, R0, #6
0x2DB2	0x2000    MOVS	R0, #0
0x2DB4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 227 :: 		app_command_buf[ 7 ]  = 0x00;       // field 4 ?CRCSet up
0x2DB6	0xA801    ADD	R0, SP, #4
0x2DB8	0x1DC1    ADDS	R1, R0, #7
0x2DBA	0x2000    MOVS	R0, #0
0x2DBC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 228 :: 		app_command_buf[ 8 ]  = 0x00;       // field5 length(?4?)
0x2DBE	0xA801    ADD	R0, SP, #4
0x2DC0	0xF2000108  ADDW	R1, R0, #8
0x2DC4	0x2000    MOVS	R0, #0
0x2DC6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 229 :: 		app_command_buf[ 9 ]  = 0x00;       // field 5 length, (? 8?), length = 0 Means this field did not use
0x2DC8	0xA801    ADD	R0, SP, #4
0x2DCA	0xF2000109  ADDW	R1, R0, #9
0x2DCE	0x2000    MOVS	R0, #0
0x2DD0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 230 :: 		app_command_buf[ 10 ] = 0x00;       // field 5 Is not 4FSK,manchest, whiting, PN9
0x2DD2	0xA801    ADD	R0, SP, #4
0x2DD4	0xF200010A  ADDW	R1, R0, #10
0x2DD8	0x2000    MOVS	R0, #0
0x2DDA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 231 :: 		app_command_buf[ 11 ] = 0x00;       // field 5 ?CRCSet up
0x2DDC	0xA801    ADD	R0, SP, #4
0x2DDE	0xF200010B  ADDW	R1, R0, #11
0x2DE2	0x2000    MOVS	R0, #0
0x2DE4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 232 :: 		spi_write( 12, app_command_buf );
0x2DE6	0xA801    ADD	R0, SP, #4
0x2DE8	0xB401    PUSH	(R0)
0x2DEA	0x200C    MOVS	R0, #12
0x2DEC	0xB401    PUSH	(R0)
0x2DEE	0xF7FEFF59  BL	_spi_write+0
0x2DF2	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 235 :: 		spi_write( 0x10, RF_MODEM_MOD_TYPE_12_data );   // //  2FSK ,  module source = PH fifo, disable manchest, tx, rx Do not flip, deviation Do not flip
0x2DF4	0x48B2    LDR	R0, [PC, #712]
0x2DF6	0xB401    PUSH	(R0)
0x2DF8	0x2010    MOVS	R0, #16
0x2DFA	0xB401    PUSH	(R0)
0x2DFC	0xF7FEFF52  BL	_spi_write+0
0x2E00	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 238 :: 		app_command_buf[0] = 0x11;
0x2E02	0xA801    ADD	R0, SP, #4
0x2E04	0x1C01    ADDS	R1, R0, #0
0x2E06	0x2011    MOVS	R0, #17
0x2E08	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 239 :: 		app_command_buf[1]  = 0x20;    // 0x200c
0x2E0A	0xA801    ADD	R0, SP, #4
0x2E0C	0x1C41    ADDS	R1, R0, #1
0x2E0E	0x2020    MOVS	R0, #32
0x2E10	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 240 :: 		app_command_buf[2]  = 0x01;    // Total 1Parameters
0x2E12	0xA801    ADD	R0, SP, #4
0x2E14	0x1C81    ADDS	R1, R0, #2
0x2E16	0x2001    MOVS	R0, #1
0x2E18	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 241 :: 		app_command_buf[3]  = 0x0c;   // 0x200c
0x2E1A	0xA801    ADD	R0, SP, #4
0x2E1C	0x1CC1    ADDS	R1, R0, #3
0x2E1E	0x200C    MOVS	R0, #12
0x2E20	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 243 :: 		if ( ucRF4463Freq3 < 8 ) {
0x2E22	0x48A8    LDR	R0, [PC, #672]
0x2E24	0x7800    LDRB	R0, [R0, #0]
0x2E26	0x2808    CMP	R0, #8
0x2E28	0xD216    BCS	L_vRF4463Init62
;driverrf4463pro.c, 244 :: 		if ( ucRF4463Rate >= dr_256k ) {
0x2E2A	0x48A7    LDR	R0, [PC, #668]
0x2E2C	0x7800    LDRB	R0, [R0, #0]
0x2E2E	0x2808    CMP	R0, #8
0x2E30	0xD304    BCC	L_vRF4463Init63
;driverrf4463pro.c, 245 :: 		app_command_buf[ 4 ] = 0x4f;
0x2E32	0xA801    ADD	R0, SP, #4
0x2E34	0x1D01    ADDS	R1, R0, #4
0x2E36	0x204F    MOVS	R0, #79
0x2E38	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 246 :: 		}
0x2E3A	0xE00C    B	L_vRF4463Init64
L_vRF4463Init63:
;driverrf4463pro.c, 247 :: 		else if ( ucRF4463Rate >= dr_19p2 ) {
0x2E3C	0x48A2    LDR	R0, [PC, #648]
0x2E3E	0x7800    LDRB	R0, [R0, #0]
0x2E40	0x2804    CMP	R0, #4
0x2E42	0xD304    BCC	L_vRF4463Init65
;driverrf4463pro.c, 248 :: 		app_command_buf[ 4 ]  = 0x5e;
0x2E44	0xA801    ADD	R0, SP, #4
0x2E46	0x1D01    ADDS	R1, R0, #4
0x2E48	0x205E    MOVS	R0, #94
0x2E4A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 249 :: 		}
0x2E4C	0xE003    B	L_vRF4463Init66
L_vRF4463Init65:
;driverrf4463pro.c, 251 :: 		app_command_buf[ 4 ]  = 0xd2;
0x2E4E	0xA801    ADD	R0, SP, #4
0x2E50	0x1D01    ADDS	R1, R0, #4
0x2E52	0x20D2    MOVS	R0, #210
0x2E54	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 252 :: 		}
L_vRF4463Init66:
L_vRF4463Init64:
;driverrf4463pro.c, 253 :: 		}
0x2E56	0xE015    B	L_vRF4463Init67
L_vRF4463Init62:
;driverrf4463pro.c, 255 :: 		if ( ucRF4463Rate >= dr_115p2 ) {
0x2E58	0x489B    LDR	R0, [PC, #620]
0x2E5A	0x7800    LDRB	R0, [R0, #0]
0x2E5C	0x2807    CMP	R0, #7
0x2E5E	0xD304    BCC	L_vRF4463Init68
;driverrf4463pro.c, 256 :: 		app_command_buf[ 4 ]  = 0x69;        // 15k
0x2E60	0xA801    ADD	R0, SP, #4
0x2E62	0x1D01    ADDS	R1, R0, #4
0x2E64	0x2069    MOVS	R0, #105
0x2E66	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 257 :: 		}
0x2E68	0xE00C    B	L_vRF4463Init69
L_vRF4463Init68:
;driverrf4463pro.c, 258 :: 		else if ( ucRF4463Rate >= dr_19p2 ) {
0x2E6A	0x4897    LDR	R0, [PC, #604]
0x2E6C	0x7800    LDRB	R0, [R0, #0]
0x2E6E	0x2804    CMP	R0, #4
0x2E70	0xD304    BCC	L_vRF4463Init70
;driverrf4463pro.c, 259 :: 		app_command_buf[ 4 ]  = 0x5e;        // 10k
0x2E72	0xA801    ADD	R0, SP, #4
0x2E74	0x1D01    ADDS	R1, R0, #4
0x2E76	0x205E    MOVS	R0, #94
0x2E78	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 260 :: 		}
0x2E7A	0xE003    B	L_vRF4463Init71
L_vRF4463Init70:
;driverrf4463pro.c, 262 :: 		app_command_buf[ 4 ]  = 0x18; // 8k
0x2E7C	0xA801    ADD	R0, SP, #4
0x2E7E	0x1D01    ADDS	R1, R0, #4
0x2E80	0x2018    MOVS	R0, #24
0x2E82	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 263 :: 		}
L_vRF4463Init71:
L_vRF4463Init69:
;driverrf4463pro.c, 264 :: 		}
L_vRF4463Init67:
;driverrf4463pro.c, 265 :: 		spi_write( 5, app_command_buf );
0x2E84	0xA801    ADD	R0, SP, #4
0x2E86	0xB401    PUSH	(R0)
0x2E88	0x2005    MOVS	R0, #5
0x2E8A	0xB401    PUSH	(R0)
0x2E8C	0xF7FEFF0A  BL	_spi_write+0
0x2E90	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 268 :: 		spi_write( 0x0C, RF_MODEM_TX_RAMP_DELAY_8_data );            // Without this Parameters,Not needed
0x2E92	0x488E    LDR	R0, [PC, #568]
0x2E94	0xB401    PUSH	(R0)
0x2E96	0x200C    MOVS	R0, #12
0x2E98	0xB401    PUSH	(R0)
0x2E9A	0xF7FEFF03  BL	_spi_write+0
0x2E9E	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 269 :: 		spi_write( 0x0D, RF_MODEM_BCR_OSR_1_9_data );                // Without this Parameters,Not needed
0x2EA0	0x488B    LDR	R0, [PC, #556]
0x2EA2	0xB401    PUSH	(R0)
0x2EA4	0x200D    MOVS	R0, #13
0x2EA6	0xB401    PUSH	(R0)
0x2EA8	0xF7FEFEFC  BL	_spi_write+0
0x2EAC	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 270 :: 		spi_write( 0x0B, RF_MODEM_AFC_GEAR_7_data );                // Without this Parameters,Not needed
0x2EAE	0x4889    LDR	R0, [PC, #548]
0x2EB0	0xB401    PUSH	(R0)
0x2EB2	0x200B    MOVS	R0, #11
0x2EB4	0xB401    PUSH	(R0)
0x2EB6	0xF7FEFEF5  BL	_spi_write+0
0x2EBA	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 271 :: 		spi_write( 0x05, RF_MODEM_AGC_CONTROL_1_data );                // Without this Parameters,Not needed
0x2EBC	0x4886    LDR	R0, [PC, #536]
0x2EBE	0xB401    PUSH	(R0)
0x2EC0	0x2005    MOVS	R0, #5
0x2EC2	0xB401    PUSH	(R0)
0x2EC4	0xF7FEFEEE  BL	_spi_write+0
0x2EC8	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 272 :: 		spi_write( 0x0D, RF_MODEM_AGC_WINDOW_SIZE_9_data );        // Without this Parameters,Not needed
0x2ECA	0x4884    LDR	R0, [PC, #528]
0x2ECC	0xB401    PUSH	(R0)
0x2ECE	0x200D    MOVS	R0, #13
0x2ED0	0xB401    PUSH	(R0)
0x2ED2	0xF7FEFEE7  BL	_spi_write+0
0x2ED6	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 273 :: 		spi_write( 0x0F, RF_MODEM_OOK_CNT1_11_data );                // Without this Parameters,Not needed
0x2ED8	0x4881    LDR	R0, [PC, #516]
0x2EDA	0xB401    PUSH	(R0)
0x2EDC	0x200F    MOVS	R0, #15
0x2EDE	0xB401    PUSH	(R0)
0x2EE0	0xF7FEFEE0  BL	_spi_write+0
0x2EE4	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 276 :: 		app_command_buf[ 0 ] = 0x11;
0x2EE6	0xA801    ADD	R0, SP, #4
0x2EE8	0x1C01    ADDS	R1, R0, #0
0x2EEA	0x2011    MOVS	R0, #17
0x2EEC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 277 :: 		app_command_buf[ 1 ] = 0x20;    // 0x204e
0x2EEE	0xA801    ADD	R0, SP, #4
0x2EF0	0x1C41    ADDS	R1, R0, #1
0x2EF2	0x2020    MOVS	R0, #32
0x2EF4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 278 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1Parameters
0x2EF6	0xA801    ADD	R0, SP, #4
0x2EF8	0x1C81    ADDS	R1, R0, #2
0x2EFA	0x2001    MOVS	R0, #1
0x2EFC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 279 :: 		app_command_buf[ 3 ] = 0x4e;   // 0x204e
0x2EFE	0xA801    ADD	R0, SP, #4
0x2F00	0x1CC1    ADDS	R1, R0, #3
0x2F02	0x204E    MOVS	R0, #78
0x2F04	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 281 :: 		if ( ucRF4463Rate == dr_500 ) {
0x2F06	0x4870    LDR	R0, [PC, #448]
0x2F08	0x7800    LDRB	R0, [R0, #0]
0x2F0A	0x280A    CMP	R0, #10
0x2F0C	0xD104    BNE	L_vRF4463Init72
;driverrf4463pro.c, 282 :: 		app_command_buf[ 4 ] = 0x3a;
0x2F0E	0xA801    ADD	R0, SP, #4
0x2F10	0x1D01    ADDS	R1, R0, #4
0x2F12	0x203A    MOVS	R0, #58
0x2F14	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 283 :: 		}
0x2F16	0xE003    B	L_vRF4463Init73
L_vRF4463Init72:
;driverrf4463pro.c, 285 :: 		app_command_buf[ 4 ] = 0x40;  //  rssi Reading deviation, the difference with the true value
0x2F18	0xA801    ADD	R0, SP, #4
0x2F1A	0x1D01    ADDS	R1, R0, #4
0x2F1C	0x2040    MOVS	R0, #64
0x2F1E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 286 :: 		}
L_vRF4463Init73:
;driverrf4463pro.c, 287 :: 		spi_write( 5, app_command_buf );
0x2F20	0xA801    ADD	R0, SP, #4
0x2F22	0xB401    PUSH	(R0)
0x2F24	0x2005    MOVS	R0, #5
0x2F26	0xB401    PUSH	(R0)
0x2F28	0xF7FEFEBC  BL	_spi_write+0
0x2F2C	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 290 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data );  // Without this Parameters,Not needed
0x2F2E	0x486D    LDR	R0, [PC, #436]
0x2F30	0xB401    PUSH	(R0)
0x2F32	0x2010    MOVS	R0, #16
0x2F34	0xB401    PUSH	(R0)
0x2F36	0xF7FEFEB5  BL	_spi_write+0
0x2F3A	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 291 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data );   // Without this Parameters,Not needed
0x2F3C	0x486A    LDR	R0, [PC, #424]
0x2F3E	0xB401    PUSH	(R0)
0x2F40	0x2010    MOVS	R0, #16
0x2F42	0xB401    PUSH	(R0)
0x2F44	0xF7FEFEAE  BL	_spi_write+0
0x2F48	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 292 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data );   // Without this Parameters,Not needed
0x2F4A	0x4868    LDR	R0, [PC, #416]
0x2F4C	0xB401    PUSH	(R0)
0x2F4E	0x2010    MOVS	R0, #16
0x2F50	0xB401    PUSH	(R0)
0x2F52	0xF7FEFEA7  BL	_spi_write+0
0x2F56	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 295 :: 		app_command_buf[ 0 ]  = 0x11;
0x2F58	0xA801    ADD	R0, SP, #4
0x2F5A	0x1C01    ADDS	R1, R0, #0
0x2F5C	0x2011    MOVS	R0, #17
0x2F5E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 296 :: 		app_command_buf[ 1 ]  = 0x22;    // 0x2200
0x2F60	0xA801    ADD	R0, SP, #4
0x2F62	0x1C41    ADDS	R1, R0, #1
0x2F64	0x2022    MOVS	R0, #34
0x2F66	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 297 :: 		app_command_buf[ 2 ]  = 0x04;    // Total 4Parameters
0x2F68	0xA801    ADD	R0, SP, #4
0x2F6A	0x1C81    ADDS	R1, R0, #2
0x2F6C	0x2004    MOVS	R0, #4
0x2F6E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 298 :: 		app_command_buf[ 3 ]  = 0x00;   // 0x2200
0x2F70	0xA801    ADD	R0, SP, #4
0x2F72	0x1CC1    ADDS	R1, R0, #3
0x2F74	0x2000    MOVS	R0, #0
0x2F76	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 299 :: 		app_command_buf[ 4 ]  = 0x08;  //0x10;   //   PA mode  = default , ??Class E mode,?Is not Switch Current mode  ????????
0x2F78	0xA801    ADD	R0, SP, #4
0x2F7A	0x1D01    ADDS	R1, R0, #4
0x2F7C	0x2008    MOVS	R0, #8
0x2F7E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 301 :: 		if ( ucRF4463Power > 0 || ucRF4463Power < 127 ) {
0x2F80	0x485B    LDR	R0, [PC, #364]
0x2F82	0x7800    LDRB	R0, [R0, #0]
0x2F84	0x2800    CMP	R0, #0
0x2F86	0xD804    BHI	L__vRF4463Init406
0x2F88	0x4859    LDR	R0, [PC, #356]
0x2F8A	0x7800    LDRB	R0, [R0, #0]
0x2F8C	0x287F    CMP	R0, #127
0x2F8E	0xD300    BCC	L__vRF4463Init406
0x2F90	0xE005    B	L_vRF4463Init76
L__vRF4463Init406:
;driverrf4463pro.c, 302 :: 		app_command_buf[ 5 ]  = ucRF4463Power;   //  Set to maximum power
0x2F92	0xA801    ADD	R0, SP, #4
0x2F94	0x1D41    ADDS	R1, R0, #5
0x2F96	0x4856    LDR	R0, [PC, #344]
0x2F98	0x7800    LDRB	R0, [R0, #0]
0x2F9A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 303 :: 		}
0x2F9C	0xE003    B	L_vRF4463Init77
L_vRF4463Init76:
;driverrf4463pro.c, 305 :: 		app_command_buf[ 5 ]  = 127;
0x2F9E	0xA801    ADD	R0, SP, #4
0x2FA0	0x1D41    ADDS	R1, R0, #5
0x2FA2	0x207F    MOVS	R0, #127
0x2FA4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 306 :: 		}
L_vRF4463Init77:
;driverrf4463pro.c, 308 :: 		app_command_buf[ 6 ] = 0x00; //???????? 0x00;   // CLK duty = 50%, other = Default
0x2FA6	0xA801    ADD	R0, SP, #4
0x2FA8	0x1D81    ADDS	R1, R0, #6
0x2FAA	0x2000    MOVS	R0, #0
0x2FAC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 310 :: 		if ( ( ucRF4463Rate <= dr_115p2 )||( ucRF4463Rate == dr_500 ) ) {
0x2FAE	0x4846    LDR	R0, [PC, #280]
0x2FB0	0x7800    LDRB	R0, [R0, #0]
0x2FB2	0x2807    CMP	R0, #7
0x2FB4	0xD904    BLS	L__vRF4463Init405
0x2FB6	0x4844    LDR	R0, [PC, #272]
0x2FB8	0x7800    LDRB	R0, [R0, #0]
0x2FBA	0x280A    CMP	R0, #10
0x2FBC	0xD000    BEQ	L__vRF4463Init405
0x2FBE	0xE004    B	L_vRF4463Init80
L__vRF4463Init405:
;driverrf4463pro.c, 311 :: 		app_command_buf[ 7 ]  = 0x3d;  // ???????? 0x5d;   // PA ramp time = default
0x2FC0	0xA801    ADD	R0, SP, #4
0x2FC2	0x1DC1    ADDS	R1, R0, #7
0x2FC4	0x203D    MOVS	R0, #61
0x2FC6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 312 :: 		}
0x2FC8	0xE003    B	L_vRF4463Init81
L_vRF4463Init80:
;driverrf4463pro.c, 314 :: 		app_command_buf[ 7 ]  = 0x5d;
0x2FCA	0xA801    ADD	R0, SP, #4
0x2FCC	0x1DC1    ADDS	R1, R0, #7
0x2FCE	0x205D    MOVS	R0, #93
0x2FD0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 315 :: 		}
L_vRF4463Init81:
;driverrf4463pro.c, 316 :: 		spi_write( 8, app_command_buf );
0x2FD2	0xA801    ADD	R0, SP, #4
0x2FD4	0xB401    PUSH	(R0)
0x2FD6	0x2008    MOVS	R0, #8
0x2FD8	0xB401    PUSH	(R0)
0x2FDA	0xF7FEFE63  BL	_spi_write+0
0x2FDE	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 320 :: 		spi_write( 0x0B , RF_SYNTH_PFDCP_CPFF_7_data );      // Without this Parameters,Not needed
0x2FE0	0x4844    LDR	R0, [PC, #272]
0x2FE2	0xB401    PUSH	(R0)
0x2FE4	0x200B    MOVS	R0, #11
0x2FE6	0xB401    PUSH	(R0)
0x2FE8	0xF7FEFE5C  BL	_spi_write+0
0x2FEC	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 323 :: 		if ( ucRF4463MatchEnabled ) {
0x2FEE	0x4842    LDR	R0, [PC, #264]
0x2FF0	0x7800    LDRB	R0, [R0, #0]
0x2FF2	0x2800    CMP	R0, #0
0x2FF4	0xF000805E  BEQ	L_vRF4463Init82
;driverrf4463pro.c, 324 :: 		app_command_buf[ 0 ]  = 0x11;               // SetProperty
0x2FF8	0xA801    ADD	R0, SP, #4
0x2FFA	0x1C01    ADDS	R1, R0, #0
0x2FFC	0x2011    MOVS	R0, #17
0x2FFE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 325 :: 		app_command_buf[ 1 ]  = 0x30;               // 0x30 group
0x3000	0xA801    ADD	R0, SP, #4
0x3002	0x1C41    ADDS	R1, R0, #1
0x3004	0x2030    MOVS	R0, #48
0x3006	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 326 :: 		app_command_buf[ 2 ]  = 0x0c;               // Total 12 Parameters
0x3008	0xA801    ADD	R0, SP, #4
0x300A	0x1C81    ADDS	R1, R0, #2
0x300C	0x200C    MOVS	R0, #12
0x300E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 327 :: 		app_command_buf[ 3 ]  = 0x00;               // 0x00 Index
0x3010	0xA801    ADD	R0, SP, #4
0x3012	0x1CC1    ADDS	R1, R0, #3
0x3014	0x2000    MOVS	R0, #0
0x3016	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 328 :: 		app_command_buf[ 4 ]  = ucRF4463ByteMatch1; // match 1 Value of
0x3018	0xA801    ADD	R0, SP, #4
0x301A	0x1D01    ADDS	R1, R0, #4
0x301C	0x4837    LDR	R0, [PC, #220]
0x301E	0x7800    LDRB	R0, [R0, #0]
0x3020	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 329 :: 		app_command_buf[ 5 ]  = ucRF4463ByteMask1;  // match 1 mask
0x3022	0xA801    ADD	R0, SP, #4
0x3024	0x1D41    ADDS	R1, R0, #5
0x3026	0x4836    LDR	R0, [PC, #216]
0x3028	0x7800    LDRB	R0, [R0, #0]
0x302A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 330 :: 		app_command_buf[ 6 ]  = ucRF4463MatchEnableReg; //  0x40; // enable match 1, match 1 The distance between the value of and the synchronization word, 0 = match
0x302C	0xA801    ADD	R0, SP, #4
0x302E	0x1D81    ADDS	R1, R0, #6
0x3030	0x4834    LDR	R0, [PC, #208]
0x3032	0x7800    LDRB	R0, [R0, #0]
0x3034	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 331 :: 		app_command_buf[ 7 ]  = ucRF4463ByteMatch2; // match 2 Value of
0x3036	0xA801    ADD	R0, SP, #4
0x3038	0x1DC1    ADDS	R1, R0, #7
0x303A	0x4833    LDR	R0, [PC, #204]
0x303C	0x7800    LDRB	R0, [R0, #0]
0x303E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 332 :: 		app_command_buf[ 8 ]  = ucRF4463ByteMask2;  // match 2 mask
0x3040	0xA801    ADD	R0, SP, #4
0x3042	0xF2000108  ADDW	R1, R0, #8
0x3046	0x4831    LDR	R0, [PC, #196]
0x3048	0x7800    LDRB	R0, [R0, #0]
0x304A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 333 :: 		app_command_buf[ 9 ]  = 0x01;               // enable match 2, match 2 The distance between the value of and the synchronization word  , and function
0x304C	0xA801    ADD	R0, SP, #4
0x304E	0xF2000109  ADDW	R1, R0, #9
0x3052	0x2001    MOVS	R0, #1
0x3054	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 334 :: 		app_command_buf[ 10 ] = ucRF4463ByteMatch3; // match 3 Value of
0x3056	0xA801    ADD	R0, SP, #4
0x3058	0xF200010A  ADDW	R1, R0, #10
0x305C	0x482C    LDR	R0, [PC, #176]
0x305E	0x7800    LDRB	R0, [R0, #0]
0x3060	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 335 :: 		app_command_buf[ 11 ] = ucRF4463ByteMask3;  // match 3 mask
0x3062	0xA801    ADD	R0, SP, #4
0x3064	0xF200010B  ADDW	R1, R0, #11
0x3068	0x482A    LDR	R0, [PC, #168]
0x306A	0x7800    LDRB	R0, [R0, #0]
0x306C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 336 :: 		app_command_buf[ 12 ] = 0x02;;              // enable match 3, match 3 The distance between the value of and the synchronization word    and function
0x306E	0xA801    ADD	R0, SP, #4
0x3070	0xF200010C  ADDW	R1, R0, #12
0x3074	0x2002    MOVS	R0, #2
0x3076	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 337 :: 		app_command_buf[ 13 ] = ucRF4463ByteMatch4; // match 4 Value of
0x3078	0xA801    ADD	R0, SP, #4
0x307A	0xF200010D  ADDW	R1, R0, #13
0x307E	0x4826    LDR	R0, [PC, #152]
0x3080	0x7800    LDRB	R0, [R0, #0]
0x3082	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 338 :: 		app_command_buf[ 14 ] = ucRF4463ByteMask4;  // match 4 mask
0x3084	0xA801    ADD	R0, SP, #4
0x3086	0xF200010E  ADDW	R1, R0, #14
0x308A	0x4824    LDR	R0, [PC, #144]
0x308C	0x7800    LDRB	R0, [R0, #0]
0x308E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 339 :: 		app_command_buf[ 15 ] = 0x03;               // enable match 4, match 4 The distance between the value of and the synchronization word    and function
0x3090	0xA801    ADD	R0, SP, #4
0x3092	0xF200010F  ADDW	R1, R0, #15
0x3096	0x2003    MOVS	R0, #3
0x3098	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 340 :: 		spi_write( 16, app_command_buf );
0x309A	0xA801    ADD	R0, SP, #4
0x309C	0xB401    PUSH	(R0)
0x309E	0x2010    MOVS	R0, #16
0x30A0	0xB401    PUSH	(R0)
0x30A2	0xF7FEFDFF  BL	_spi_write+0
0x30A6	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 342 :: 		if ( ucRF4463MatchEnableReg == 0x00 ) {
0x30A8	0x4816    LDR	R0, [PC, #88]
0x30AA	0x7800    LDRB	R0, [R0, #0]
0x30AC	0xB910    CBNZ	R0, L_vRF4463Init83
;driverrf4463pro.c, 343 :: 		ucRF4463MatchEnabled = 0;                // deshabilita el Match
0x30AE	0x2100    MOVS	R1, #0
0x30B0	0x4811    LDR	R0, [PC, #68]
0x30B2	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 344 :: 		}
L_vRF4463Init83:
;driverrf4463pro.c, 363 :: 		}
L_vRF4463Init82:
;driverrf4463pro.c, 366 :: 		rf_init_freq();     // FUNCION DE FRECUENCIA ( REVISAR PARAMETROS )
0x30B4	0xF7FFF82C  BL	_rf_init_freq+0
;driverrf4463pro.c, 367 :: 		}
L_end_vRF4463Init:
0x30B8	0xF8DDE000  LDR	LR, [SP, #0]
0x30BC	0xB007    ADD	SP, SP, #28
0x30BE	0x4770    BX	LR
0x30C0	0x22002000  	_RF_MODEM_MOD_TYPE_12_data+0
0x30C4	0x22A42000  	_ucRF4463Freq3+0
0x30C8	0x22A72000  	_ucRF4463Rate+0
0x30CC	0x22102000  	_RF_MODEM_TX_RAMP_DELAY_8_data+0
0x30D0	0x22752000  	_RF_MODEM_BCR_OSR_1_9_data+0
0x30D4	0x221C2000  	_RF_MODEM_AFC_GEAR_7_data+0
0x30D8	0x69FF0000  	_RF_MODEM_AGC_CONTROL_1_data+0
0x30DC	0x22682000  	_RF_MODEM_AGC_WINDOW_SIZE_9_data+0
0x30E0	0x22292000  	_RF_MODEM_OOK_CNT1_11_data+0
0x30E4	0x22382000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+0
0x30E8	0x22482000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x30EC	0x22582000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x30F0	0x228F2000  	_ucRF4463Power+0
0x30F4	0x22822000  	_RF_SYNTH_PFDCP_CPFF_7_data+0
0x30F8	0x21802000  	_ucRF4463MatchEnabled+0
0x30FC	0x217F2000  	_ucRF4463ByteMatch1+0
0x3100	0x21B42000  	_ucRF4463ByteMask1+0
0x3104	0x21812000  	_ucRF4463MatchEnableReg+0
0x3108	0x218E2000  	_ucRF4463ByteMatch2+0
0x310C	0x21C02000  	_ucRF4463ByteMask2+0
0x3110	0x219B2000  	_ucRF4463ByteMatch3+0
0x3114	0x21CC2000  	_ucRF4463ByteMask3+0
0x3118	0x21A82000  	_ucRF4463ByteMatch4+0
0x311C	0x21D82000  	_ucRF4463ByteMask4+0
; end of _vRF4463Init
_vRF4463GPIO_SET:
;driverrf4463pro.c, 373 :: 		void vRF4463GPIO_SET( unsigned char ucData ) {
0x1BEC	0xB083    SUB	SP, SP, #12
0x1BEE	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 376 :: 		ucAppCommandBuf[0] = 0x13;     // gpio Set up
0x1BF2	0xA801    ADD	R0, SP, #4
0x1BF4	0x1C01    ADDS	R1, R0, #0
0x1BF6	0x2013    MOVS	R0, #19
0x1BF8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 378 :: 		switch ( ucData ) {
0x1BFA	0xE023    B	L_vRF4463GPIO_SET84
;driverrf4463pro.c, 379 :: 		case tx_normal:
L_vRF4463GPIO_SET86:
;driverrf4463pro.c, 380 :: 		case rx_normal: ucAppCommandBuf[ 1 ] = 3;                 // GPIO0=1
L_vRF4463GPIO_SET87:
0x1BFC	0xA801    ADD	R0, SP, #4
0x1BFE	0x1C41    ADDS	R1, R0, #1
0x1C00	0x2003    MOVS	R0, #3
0x1C02	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 381 :: 		ucAppCommandBuf[ 2 ] = 2;                // GPIO1=0
0x1C04	0xA801    ADD	R0, SP, #4
0x1C06	0x1C81    ADDS	R1, R0, #2
0x1C08	0x2002    MOVS	R0, #2
0x1C0A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 382 :: 		break;
0x1C0C	0xE02E    B	L_vRF4463GPIO_SET85
;driverrf4463pro.c, 384 :: 		case tx_test:   ucAppCommandBuf[ 1 ] = 3;                 // GPIO0=1
L_vRF4463GPIO_SET88:
0x1C0E	0xA801    ADD	R0, SP, #4
0x1C10	0x1C41    ADDS	R1, R0, #1
0x1C12	0x2003    MOVS	R0, #3
0x1C14	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 385 :: 		ucAppCommandBuf[ 2 ] = 3;                // GPIO1=1
0x1C16	0xA801    ADD	R0, SP, #4
0x1C18	0x1C81    ADDS	R1, R0, #2
0x1C1A	0x2003    MOVS	R0, #3
0x1C1C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 386 :: 		break;
0x1C1E	0xE025    B	L_vRF4463GPIO_SET85
;driverrf4463pro.c, 388 :: 		case rx_test:   ucAppCommandBuf[ 1 ] = 2;                 // GPIO0=0
L_vRF4463GPIO_SET89:
0x1C20	0xA801    ADD	R0, SP, #4
0x1C22	0x1C41    ADDS	R1, R0, #1
0x1C24	0x2002    MOVS	R0, #2
0x1C26	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 389 :: 		ucAppCommandBuf[ 2 ] = 20;                // GPIO1=RX DATA
0x1C28	0xA801    ADD	R0, SP, #4
0x1C2A	0x1C81    ADDS	R1, R0, #2
0x1C2C	0x2014    MOVS	R0, #20
0x1C2E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 390 :: 		break;
0x1C30	0xE01C    B	L_vRF4463GPIO_SET85
;driverrf4463pro.c, 392 :: 		case rf_off:    ucAppCommandBuf[ 1 ] = 2;                 // GPIO0=0
L_vRF4463GPIO_SET90:
0x1C32	0xA801    ADD	R0, SP, #4
0x1C34	0x1C41    ADDS	R1, R0, #1
0x1C36	0x2002    MOVS	R0, #2
0x1C38	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 393 :: 		ucAppCommandBuf[ 2 ] = 2;                // GPIO1=0
0x1C3A	0xA801    ADD	R0, SP, #4
0x1C3C	0x1C81    ADDS	R1, R0, #2
0x1C3E	0x2002    MOVS	R0, #2
0x1C40	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 394 :: 		break;
0x1C42	0xE013    B	L_vRF4463GPIO_SET85
;driverrf4463pro.c, 395 :: 		}
L_vRF4463GPIO_SET84:
0x1C44	0xF89D000C  LDRB	R0, [SP, #12]
0x1C48	0x2800    CMP	R0, #0
0x1C4A	0xD0D7    BEQ	L_vRF4463GPIO_SET86
0x1C4C	0xF89D000C  LDRB	R0, [SP, #12]
0x1C50	0x2801    CMP	R0, #1
0x1C52	0xD0D3    BEQ	L_vRF4463GPIO_SET87
0x1C54	0xF89D000C  LDRB	R0, [SP, #12]
0x1C58	0x2802    CMP	R0, #2
0x1C5A	0xD0D8    BEQ	L_vRF4463GPIO_SET88
0x1C5C	0xF89D000C  LDRB	R0, [SP, #12]
0x1C60	0x2803    CMP	R0, #3
0x1C62	0xD0DD    BEQ	L_vRF4463GPIO_SET89
0x1C64	0xF89D000C  LDRB	R0, [SP, #12]
0x1C68	0x2804    CMP	R0, #4
0x1C6A	0xD0E2    BEQ	L_vRF4463GPIO_SET90
L_vRF4463GPIO_SET85:
;driverrf4463pro.c, 397 :: 		ucAppCommandBuf[ 3 ]  = 0x21;     //0x20;   //  gpio2, h = tx mode
0x1C6C	0xA801    ADD	R0, SP, #4
0x1C6E	0x1CC1    ADDS	R1, R0, #3
0x1C70	0x2021    MOVS	R0, #33
0x1C72	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 398 :: 		ucAppCommandBuf[ 4 ]  = 0x20;     // 0x14;  //   gpio3
0x1C74	0xA801    ADD	R0, SP, #4
0x1C76	0x1D01    ADDS	R1, R0, #4
0x1C78	0x2020    MOVS	R0, #32
0x1C7A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 399 :: 		ucAppCommandBuf[ 5 ]  = 0x27;     // nIRQ
0x1C7C	0xA801    ADD	R0, SP, #4
0x1C7E	0x1D41    ADDS	R1, R0, #5
0x1C80	0x2027    MOVS	R0, #39
0x1C82	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 400 :: 		ucAppCommandBuf[ 6 ]  = 0x0b;     // sdo
0x1C84	0xA801    ADD	R0, SP, #4
0x1C86	0x1D81    ADDS	R1, R0, #6
0x1C88	0x200B    MOVS	R0, #11
0x1C8A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 401 :: 		spi_write( 7, ucAppCommandBuf );
0x1C8C	0xA801    ADD	R0, SP, #4
0x1C8E	0xB401    PUSH	(R0)
0x1C90	0x2007    MOVS	R0, #7
0x1C92	0xB401    PUSH	(R0)
0x1C94	0xF000F806  BL	_spi_write+0
0x1C98	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 402 :: 		}
L_end_vRF4463GPIO_SET:
0x1C9A	0xF8DDE000  LDR	LR, [SP, #0]
0x1C9E	0xB003    ADD	SP, SP, #12
0x1CA0	0x4770    BX	LR
; end of _vRF4463GPIO_SET
_spi_write:
;driverrf4463pro.c, 761 :: 		void spi_write( unsigned char tx_length, unsigned char *p ) {
0x1CA4	0xB082    SUB	SP, SP, #8
0x1CA6	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 764 :: 		i = 0;
0x1CAA	0x2000    MOVS	R0, #0
0x1CAC	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 765 :: 		while ( i != 0xFF ) {
L_spi_write116:
0x1CB0	0xF89D0004  LDRB	R0, [SP, #4]
0x1CB4	0xF1B00FFF  CMP	R0, #255
0x1CB8	0xD004    BEQ	L_spi_write117
;driverrf4463pro.c, 766 :: 		i = check_cts();
0x1CBA	0xF7FEFD33  BL	_check_cts+0
0x1CBE	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 767 :: 		}
0x1CC2	0xE7F5    B	L_spi_write116
L_spi_write117:
;driverrf4463pro.c, 769 :: 		nSEL = 0;                              // habilita escritura
0x1CC4	0x2100    MOVS	R1, #0
0x1CC6	0xB249    SXTB	R1, R1
0x1CC8	0x4812    LDR	R0, [PC, #72]
0x1CCA	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 771 :: 		for ( i = 0; i < tx_length; i++ ) {
0x1CCC	0x2000    MOVS	R0, #0
0x1CCE	0xF88D0004  STRB	R0, [SP, #4]
L_spi_write118:
0x1CD2	0xF89D1008  LDRB	R1, [SP, #8]
0x1CD6	0xF89D0004  LDRB	R0, [SP, #4]
0x1CDA	0x4288    CMP	R0, R1
0x1CDC	0xD212    BCS	L_spi_write119
;driverrf4463pro.c, 772 :: 		j = *( p + i );
0x1CDE	0xF89D1004  LDRB	R1, [SP, #4]
0x1CE2	0x9803    LDR	R0, [SP, #12]
0x1CE4	0x1840    ADDS	R0, R0, R1
0x1CE6	0x7800    LDRB	R0, [R0, #0]
0x1CE8	0xF88D0005  STRB	R0, [SP, #5]
;driverrf4463pro.c, 773 :: 		ucRf4463SPIByte( j );
0x1CEC	0xF89D0005  LDRB	R0, [SP, #5]
0x1CF0	0xB401    PUSH	(R0)
0x1CF2	0xF7FEFC7B  BL	_ucRf4463SPIByte+0
0x1CF6	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 771 :: 		for ( i = 0; i < tx_length; i++ ) {
0x1CF8	0xF89D0004  LDRB	R0, [SP, #4]
0x1CFC	0x1C40    ADDS	R0, R0, #1
0x1CFE	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 774 :: 		}
0x1D02	0xE7E6    B	L_spi_write118
L_spi_write119:
;driverrf4463pro.c, 776 :: 		nSEL = 1;                              // desabilita escritura
0x1D04	0x2101    MOVS	R1, #1
0x1D06	0xB249    SXTB	R1, R1
0x1D08	0x4802    LDR	R0, [PC, #8]
0x1D0A	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 777 :: 		}
L_end_spi_write:
0x1D0C	0xF8DDE000  LDR	LR, [SP, #0]
0x1D10	0xB002    ADD	SP, SP, #8
0x1D12	0x4770    BX	LR
0x1D14	0x82884241  	GPIOD_ODRbits+0
; end of _spi_write
_check_cts:
;driverrf4463pro.c, 782 :: 		unsigned char check_cts( void ) {           // This Command follows the Command and reads the response
0x0724	0xB082    SUB	SP, SP, #8
0x0726	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 785 :: 		nSEL = 1;
0x072A	0x2101    MOVS	R1, #1
0x072C	0xB249    SXTB	R1, R1
0x072E	0x480E    LDR	R0, [PC, #56]
0x0730	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 786 :: 		nSEL = 0;
0x0732	0x2100    MOVS	R1, #0
0x0734	0xB249    SXTB	R1, R1
0x0736	0x480C    LDR	R0, [PC, #48]
0x0738	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 787 :: 		ucRf4463SPIByte( 0x44 );
0x073A	0x2044    MOVS	R0, #68
0x073C	0xB401    PUSH	(R0)
0x073E	0xF7FFFF55  BL	_ucRf4463SPIByte+0
0x0742	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 788 :: 		i = ucRf4463SPIByte( 0 );
0x0744	0x2000    MOVS	R0, #0
0x0746	0xB401    PUSH	(R0)
0x0748	0xF7FFFF50  BL	_ucRf4463SPIByte+0
0x074C	0xB001    ADD	SP, SP, #4
0x074E	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 789 :: 		nSEL = 1;
0x0752	0x2101    MOVS	R1, #1
0x0754	0xB249    SXTB	R1, R1
0x0756	0x4804    LDR	R0, [PC, #16]
0x0758	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 790 :: 		return ( i );
0x075A	0xF89D0004  LDRB	R0, [SP, #4]
;driverrf4463pro.c, 791 :: 		}
L_end_check_cts:
0x075E	0xF8DDE000  LDR	LR, [SP, #0]
0x0762	0xB002    ADD	SP, SP, #8
0x0764	0x4770    BX	LR
0x0766	0xBF00    NOP
0x0768	0x82884241  	GPIOD_ODRbits+0
; end of _check_cts
_rf_init_freq:
;driverrf4463pro.c, 628 :: 		void rf_init_freq ( void ) {
0x2110	0xB08B    SUB	SP, SP, #44
0x2112	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 634 :: 		ulFrequency = ( ucRF4463Freq3 * 100 ) + ( ucRF4463Freq2 * 10 ) + ucRF4463Freq1;
0x2116	0x488B    LDR	R0, [PC, #556]
0x2118	0x7801    LDRB	R1, [R0, #0]
0x211A	0x2064    MOVS	R0, #100
0x211C	0xB200    SXTH	R0, R0
0x211E	0xFB01F200  MUL	R2, R1, R0
0x2122	0xB212    SXTH	R2, R2
0x2124	0x4888    LDR	R0, [PC, #544]
0x2126	0x7801    LDRB	R1, [R0, #0]
0x2128	0x200A    MOVS	R0, #10
0x212A	0xB200    SXTH	R0, R0
0x212C	0x4348    MULS	R0, R1, R0
0x212E	0xB200    SXTH	R0, R0
0x2130	0x1811    ADDS	R1, R2, R0
0x2132	0xB209    SXTH	R1, R1
0x2134	0x4885    LDR	R0, [PC, #532]
0x2136	0x7800    LDRB	R0, [R0, #0]
0x2138	0x1808    ADDS	R0, R1, R0
0x213A	0xB200    SXTH	R0, R0
0x213C	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 636 :: 		ulFrequency = ( ulFrequency * 10000 );
0x213E	0x9905    LDR	R1, [SP, #20]
0x2140	0xF2427010  MOVW	R0, #10000
0x2144	0x4348    MULS	R0, R1, R0
0x2146	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 639 :: 		if ( ulFrequency >= 7600000 ) {
0x2148	0x9905    LDR	R1, [SP, #20]
0x214A	0x4881    LDR	R0, [PC, #516]
0x214C	0x4281    CMP	R1, R0
0x214E	0xD309    BCC	L_rf_init_freq99
;driverrf4463pro.c, 640 :: 		ucOUTDIV = 4;
0x2150	0x2004    MOVS	R0, #4
0x2152	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 641 :: 		ucBAND = 0;
0x2156	0x2000    MOVS	R0, #0
0x2158	0xF88D0008  STRB	R0, [SP, #8]
;driverrf4463pro.c, 642 :: 		ucVCO = 0xFF;
0x215C	0x20FF    MOVS	R0, #255
0x215E	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 643 :: 		}
0x2162	0xE040    B	L_rf_init_freq100
L_rf_init_freq99:
;driverrf4463pro.c, 646 :: 		else if ( ulFrequency >= 5460000 ) {
0x2164	0x9905    LDR	R1, [SP, #20]
0x2166	0x487B    LDR	R0, [PC, #492]
0x2168	0x4281    CMP	R1, R0
0x216A	0xD309    BCC	L_rf_init_freq101
;driverrf4463pro.c, 647 :: 		ucOUTDIV = 6;
0x216C	0x2006    MOVS	R0, #6
0x216E	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 648 :: 		ucBAND   = 1;
0x2172	0x2001    MOVS	R0, #1
0x2174	0xF88D0008  STRB	R0, [SP, #8]
;driverrf4463pro.c, 649 :: 		ucVCO    = 0xFE;
0x2178	0x20FE    MOVS	R0, #254
0x217A	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 650 :: 		}
0x217E	0xE032    B	L_rf_init_freq102
L_rf_init_freq101:
;driverrf4463pro.c, 653 :: 		else if ( ulFrequency >= 3850000 ) {
0x2180	0x9905    LDR	R1, [SP, #20]
0x2182	0x4875    LDR	R0, [PC, #468]
0x2184	0x4281    CMP	R1, R0
0x2186	0xD309    BCC	L_rf_init_freq103
;driverrf4463pro.c, 654 :: 		ucOUTDIV = 8;
0x2188	0x2008    MOVS	R0, #8
0x218A	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 655 :: 		ucBAND   = 2;
0x218E	0x2002    MOVS	R0, #2
0x2190	0xF88D0008  STRB	R0, [SP, #8]
;driverrf4463pro.c, 656 :: 		ucVCO    = 0xFE;
0x2194	0x20FE    MOVS	R0, #254
0x2196	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 657 :: 		}
0x219A	0xE024    B	L_rf_init_freq104
L_rf_init_freq103:
;driverrf4463pro.c, 660 :: 		else if ( ulFrequency >= 2730000 ) {
0x219C	0x9905    LDR	R1, [SP, #20]
0x219E	0x486F    LDR	R0, [PC, #444]
0x21A0	0x4281    CMP	R1, R0
0x21A2	0xD309    BCC	L_rf_init_freq105
;driverrf4463pro.c, 661 :: 		ucOUTDIV = 12;
0x21A4	0x200C    MOVS	R0, #12
0x21A6	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 662 :: 		ucBAND   = 3;
0x21AA	0x2003    MOVS	R0, #3
0x21AC	0xF88D0008  STRB	R0, [SP, #8]
;driverrf4463pro.c, 663 :: 		ucVCO    = 0xFD;
0x21B0	0x20FD    MOVS	R0, #253
0x21B2	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 664 :: 		}
0x21B6	0xE016    B	L_rf_init_freq106
L_rf_init_freq105:
;driverrf4463pro.c, 667 :: 		else if ( ulFrequency >= 1940000 ) {
0x21B8	0x9905    LDR	R1, [SP, #20]
0x21BA	0x4869    LDR	R0, [PC, #420]
0x21BC	0x4281    CMP	R1, R0
0x21BE	0xD309    BCC	L_rf_init_freq107
;driverrf4463pro.c, 668 :: 		ucOUTDIV = 16;
0x21C0	0x2010    MOVS	R0, #16
0x21C2	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 669 :: 		ucBAND   = 4;
0x21C6	0x2004    MOVS	R0, #4
0x21C8	0xF88D0008  STRB	R0, [SP, #8]
;driverrf4463pro.c, 670 :: 		ucVCO    = 0xFC;
0x21CC	0x20FC    MOVS	R0, #252
0x21CE	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 671 :: 		}
0x21D2	0xE008    B	L_rf_init_freq108
L_rf_init_freq107:
;driverrf4463pro.c, 675 :: 		ucOUTDIV = 24;
0x21D4	0x2018    MOVS	R0, #24
0x21D6	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 676 :: 		ucBAND   = 5;
0x21DA	0x2005    MOVS	R0, #5
0x21DC	0xF88D0008  STRB	R0, [SP, #8]
;driverrf4463pro.c, 677 :: 		ucVCO    = 0xFA;
0x21E0	0x20FA    MOVS	R0, #250
0x21E2	0xF88D0006  STRB	R0, [SP, #6]
;driverrf4463pro.c, 678 :: 		}
L_rf_init_freq108:
L_rf_init_freq106:
L_rf_init_freq104:
L_rf_init_freq102:
L_rf_init_freq100:
;driverrf4463pro.c, 680 :: 		ucDIV = ucOUTDIV / 2;
0x21E6	0xF89D1004  LDRB	R1, [SP, #4]
0x21EA	0x2002    MOVS	R0, #2
0x21EC	0xFBB1F0F0  UDIV	R0, R1, R0
0x21F0	0xF88D0005  STRB	R0, [SP, #5]
;driverrf4463pro.c, 682 :: 		ulData = ( ulFrequency * ucDIV ) / 3;          // ucDIV = 88.5 = 88   //// UCdiv = 2
0x21F4	0xF89D1005  LDRB	R1, [SP, #5]
0x21F8	0x9805    LDR	R0, [SP, #20]
0x21FA	0x4341    MULS	R1, R0, R1
0x21FC	0x2003    MOVS	R0, #3
0x21FE	0xFBB1F0F0  UDIV	R0, R1, R0
0x2202	0x9004    STR	R0, [SP, #16]
;driverrf4463pro.c, 683 :: 		ucINTE = ( ulData / 100000) - 1;               // ulData = 6 000 000  //// ULdATA = 9 000 000
0x2204	0x9904    LDR	R1, [SP, #16]
0x2206	0x4857    LDR	R0, [PC, #348]
0x2208	0xFBB1F0F0  UDIV	R0, R1, R0
0x220C	0x1E40    SUBS	R0, R0, #1
0x220E	0xF88D0007  STRB	R0, [SP, #7]
;driverrf4463pro.c, 684 :: 		ulFRAC = ( ulData - ( ucINTE + 1 ) * 100000 ) * 16384 / 3125;         // ulFRAC = 15 728 640
0x2212	0xF89D0007  LDRB	R0, [SP, #7]
0x2216	0x1C41    ADDS	R1, R0, #1
0x2218	0xB209    SXTH	R1, R1
0x221A	0x4852    LDR	R0, [PC, #328]
0x221C	0x4341    MULS	R1, R0, R1
0x221E	0x9804    LDR	R0, [SP, #16]
0x2220	0x1A41    SUB	R1, R0, R1
0x2222	0xF2440000  MOVW	R0, #16384
0x2226	0x4341    MULS	R1, R0, R1
0x2228	0xF6404035  MOVW	R0, #3125
0x222C	0xFBB1F0F0  UDIV	R0, R1, R0
0x2230	0x9003    STR	R0, [SP, #12]
;driverrf4463pro.c, 685 :: 		ulFRAC = ulFRAC + 0x80000;
0x2232	0x9803    LDR	R0, [SP, #12]
0x2234	0xF5002000  ADD	R0, R0, #524288
0x2238	0x9003    STR	R0, [SP, #12]
;driverrf4463pro.c, 687 :: 		ucFRAC_0 = ulFRAC;
0x223A	0x9803    LDR	R0, [SP, #12]
0x223C	0xF88D000B  STRB	R0, [SP, #11]
;driverrf4463pro.c, 688 :: 		ulFRAC >>= 8;
0x2240	0x9803    LDR	R0, [SP, #12]
0x2242	0x0A00    LSRS	R0, R0, #8
0x2244	0x9003    STR	R0, [SP, #12]
;driverrf4463pro.c, 689 :: 		ucFRAC_1 = ulFRAC;
0x2246	0x9803    LDR	R0, [SP, #12]
0x2248	0xF88D000A  STRB	R0, [SP, #10]
;driverrf4463pro.c, 690 :: 		ulFRAC >>= 8;
0x224C	0x9803    LDR	R0, [SP, #12]
0x224E	0x0A00    LSRS	R0, R0, #8
0x2250	0x9003    STR	R0, [SP, #12]
;driverrf4463pro.c, 691 :: 		ucFRAC_2 = ulFRAC;
0x2252	0x9803    LDR	R0, [SP, #12]
0x2254	0xF88D0009  STRB	R0, [SP, #9]
;driverrf4463pro.c, 695 :: 		app_command_buf[ 0 ] = 0x11;           // SET property    MODEM_CLKGEN_BAND
0x2258	0xA806    ADD	R0, SP, #24
0x225A	0x1C01    ADDS	R1, R0, #0
0x225C	0x2011    MOVS	R0, #17
0x225E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 696 :: 		app_command_buf[ 1 ] = 0x20;           // Group  // 0x2051
0x2260	0xA806    ADD	R0, SP, #24
0x2262	0x1C41    ADDS	R1, R0, #1
0x2264	0x2020    MOVS	R0, #32
0x2266	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 697 :: 		app_command_buf[ 2 ] = 0x01;           // Num Arguments // Total 1 Parameters
0x2268	0xA806    ADD	R0, SP, #24
0x226A	0x1C81    ADDS	R1, R0, #2
0x226C	0x2001    MOVS	R0, #1
0x226E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 698 :: 		app_command_buf[ 3 ] = 0x51;           // Number  // 0x2051
0x2270	0xA806    ADD	R0, SP, #24
0x2272	0x1CC1    ADDS	R1, R0, #3
0x2274	0x2051    MOVS	R0, #81
0x2276	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 699 :: 		app_command_buf[ 4 ] = 0x08 | ucBAND;  // Argumento  //  high performance mode , clk outpu = osc /4
0x2278	0xA806    ADD	R0, SP, #24
0x227A	0x1D01    ADDS	R1, R0, #4
0x227C	0xF89D0008  LDRB	R0, [SP, #8]
0x2280	0xF0400008  ORR	R0, R0, #8
0x2284	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 700 :: 		spi_write( 5, app_command_buf );
0x2286	0xA806    ADD	R0, SP, #24
0x2288	0xB401    PUSH	(R0)
0x228A	0x2005    MOVS	R0, #5
0x228C	0xB401    PUSH	(R0)
0x228E	0xF7FFFD09  BL	_spi_write+0
0x2292	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 702 :: 		app_command_buf[ 0 ]  = 0x11;
0x2294	0xA806    ADD	R0, SP, #24
0x2296	0x1C01    ADDS	R1, R0, #0
0x2298	0x2011    MOVS	R0, #17
0x229A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 703 :: 		app_command_buf[ 1 ]  = 0x40;    // 0x4000         FREQ_CONTROL_INTE
0x229C	0xA806    ADD	R0, SP, #24
0x229E	0x1C41    ADDS	R1, R0, #1
0x22A0	0x2040    MOVS	R0, #64
0x22A2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 704 :: 		app_command_buf[ 2 ]  = 0x08;    // Total 8 Parameters
0x22A4	0xA806    ADD	R0, SP, #24
0x22A6	0x1C81    ADDS	R1, R0, #2
0x22A8	0x2008    MOVS	R0, #8
0x22AA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 705 :: 		app_command_buf[ 3 ]  = 0x00;   // 0x4000
0x22AC	0xA806    ADD	R0, SP, #24
0x22AE	0x1CC1    ADDS	R1, R0, #3
0x22B0	0x2000    MOVS	R0, #0
0x22B2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 706 :: 		app_command_buf[ 4 ]  = ucINTE;   //  default value
0x22B4	0xA806    ADD	R0, SP, #24
0x22B6	0x1D01    ADDS	R1, R0, #4
0x22B8	0xF89D0007  LDRB	R0, [SP, #7]
0x22BC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 707 :: 		app_command_buf[ 5 ]  = ucFRAC_2;   //  defaul value
0x22BE	0xA806    ADD	R0, SP, #24
0x22C0	0x1D41    ADDS	R1, R0, #5
0x22C2	0xF89D0009  LDRB	R0, [SP, #9]
0x22C6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 708 :: 		app_command_buf[ 6 ]  = ucFRAC_1;   //  default value
0x22C8	0xA806    ADD	R0, SP, #24
0x22CA	0x1D81    ADDS	R1, R0, #6
0x22CC	0xF89D000A  LDRB	R0, [SP, #10]
0x22D0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 709 :: 		app_command_buf[ 7 ]  = ucFRAC_0;   // frac ,from WDS
0x22D2	0xA806    ADD	R0, SP, #24
0x22D4	0x1DC1    ADDS	R1, R0, #7
0x22D6	0xF89D000B  LDRB	R0, [SP, #11]
0x22DA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 712 :: 		if ( ulRF4463Step == 250 ) {
0x22DC	0x4822    LDR	R0, [PC, #136]
0x22DE	0x6800    LDR	R0, [R0, #0]
0x22E0	0x28FA    CMP	R0, #250
0x22E2	0xD10A    BNE	L_rf_init_freq109
;driverrf4463pro.c, 713 :: 		app_command_buf[ 8 ]  = step_250K_step1;   // channel step1  from wds  // al parecer aqu? esta el ancho del canal
0x22E4	0xA806    ADD	R0, SP, #24
0x22E6	0xF2000108  ADDW	R1, R0, #8
0x22EA	0x2022    MOVS	R0, #34
0x22EC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 714 :: 		app_command_buf[ 9 ]  = step_250K_step0;   // channel step0  from wds
0x22EE	0xA806    ADD	R0, SP, #24
0x22F0	0xF2000109  ADDW	R1, R0, #9
0x22F4	0x2022    MOVS	R0, #34
0x22F6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 715 :: 		}
0x22F8	0xE00E    B	L_rf_init_freq110
L_rf_init_freq109:
;driverrf4463pro.c, 716 :: 		else if ( ulRF4463Step == 500 ) {
0x22FA	0x481B    LDR	R0, [PC, #108]
0x22FC	0x6800    LDR	R0, [R0, #0]
0x22FE	0xF5B07FFA  CMP	R0, #500
0x2302	0xD109    BNE	L_rf_init_freq111
;driverrf4463pro.c, 717 :: 		app_command_buf[ 8 ]  = step_500K_step1;   // channel step1  from wds  // al parecer aqu? esta el ancho del canal
0x2304	0xA806    ADD	R0, SP, #24
0x2306	0xF2000108  ADDW	R1, R0, #8
0x230A	0x2044    MOVS	R0, #68
0x230C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 718 :: 		app_command_buf[ 9 ]  = step_500K_step0;   // channel step0  from wds
0x230E	0xA806    ADD	R0, SP, #24
0x2310	0xF2000109  ADDW	R1, R0, #9
0x2314	0x2044    MOVS	R0, #68
0x2316	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 719 :: 		}
L_rf_init_freq111:
L_rf_init_freq110:
;driverrf4463pro.c, 721 :: 		app_command_buf[ 10 ] = 0x20;  //  from wds Without this Values
0x2318	0xA806    ADD	R0, SP, #24
0x231A	0xF200010A  ADDW	R1, R0, #10
0x231E	0x2020    MOVS	R0, #32
0x2320	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 722 :: 		app_command_buf[ 11 ] = ucVCO;    // from wds Without this Values
0x2322	0xA806    ADD	R0, SP, #24
0x2324	0xF200010B  ADDW	R1, R0, #11
0x2328	0xF89D0006  LDRB	R0, [SP, #6]
0x232C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 723 :: 		spi_write( 12, app_command_buf );
0x232E	0xA806    ADD	R0, SP, #24
0x2330	0xB401    PUSH	(R0)
0x2332	0x200C    MOVS	R0, #12
0x2334	0xB401    PUSH	(R0)
0x2336	0xF7FFFCB5  BL	_spi_write+0
0x233A	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 724 :: 		}
L_end_rf_init_freq:
0x233C	0xF8DDE000  LDR	LR, [SP, #0]
0x2340	0xB00B    ADD	SP, SP, #44
0x2342	0x4770    BX	LR
0x2344	0x22A42000  	_ucRF4463Freq3+0
0x2348	0x22A52000  	_ucRF4463Freq2+0
0x234C	0x22A62000  	_ucRF4463Freq1+0
0x2350	0xF7800073  	#7600000
0x2354	0x50200053  	#5460000
0x2358	0xBF10003A  	#3850000
0x235C	0xA8100029  	#2730000
0x2360	0x9A20001D  	#1940000
0x2364	0x86A00001  	#100000
0x2368	0x20842000  	_ulRF4463Step+0
; end of _rf_init_freq
_vRF4463ClearInterrupts:
;driverrf4463pro.c, 419 :: 		void vRF4463ClearInterrupts( void ) {
0x31BC	0xB082    SUB	SP, SP, #8
0x31BE	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 422 :: 		p[ 0 ] = GET_INT_STATUS;
0x31C2	0xA801    ADD	R0, SP, #4
0x31C4	0x1C01    ADDS	R1, R0, #0
0x31C6	0x2020    MOVS	R0, #32
0x31C8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 423 :: 		p[ 1 ] = 0;               // clr  PH pending
0x31CA	0xA801    ADD	R0, SP, #4
0x31CC	0x1C41    ADDS	R1, R0, #1
0x31CE	0x2000    MOVS	R0, #0
0x31D0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 424 :: 		p[ 2 ] = 0;               // clr modem_pending
0x31D2	0xA801    ADD	R0, SP, #4
0x31D4	0x1C81    ADDS	R1, R0, #2
0x31D6	0x2000    MOVS	R0, #0
0x31D8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 425 :: 		p[ 3 ] = 0;               // clr chip pending
0x31DA	0xA801    ADD	R0, SP, #4
0x31DC	0x1CC1    ADDS	R1, R0, #3
0x31DE	0x2000    MOVS	R0, #0
0x31E0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 426 :: 		spi_write( 4, p );
0x31E2	0xA801    ADD	R0, SP, #4
0x31E4	0xB401    PUSH	(R0)
0x31E6	0x2004    MOVS	R0, #4
0x31E8	0xB401    PUSH	(R0)
0x31EA	0xF7FEFD5B  BL	_spi_write+0
0x31EE	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 427 :: 		spi_read( 9, GET_INT_STATUS );
0x31F0	0x2020    MOVS	R0, #32
0x31F2	0xB401    PUSH	(R0)
0x31F4	0x2009    MOVS	R0, #9
0x31F6	0xB401    PUSH	(R0)
0x31F8	0xF7FEFF2A  BL	_spi_read+0
0x31FC	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 428 :: 		}
L_end_vRF4463ClearInterrupts:
0x31FE	0xF8DDE000  LDR	LR, [SP, #0]
0x3202	0xB002    ADD	SP, SP, #8
0x3204	0x4770    BX	LR
; end of _vRF4463ClearInterrupts
_spi_read:
;driverrf4463pro.c, 796 :: 		void spi_read( unsigned char data_length, unsigned char api_command ) {
0x2050	0xB083    SUB	SP, SP, #12
0x2052	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 800 :: 		p[ 0 ] = api_command;
0x2056	0xF10D0005  ADD	R0, SP, #5
0x205A	0x1C01    ADDS	R1, R0, #0
0x205C	0xF89D0010  LDRB	R0, [SP, #16]
0x2060	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 801 :: 		i = 0;
0x2062	0x2000    MOVS	R0, #0
0x2064	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 802 :: 		while ( i != 0xFF ) {
L_spi_read121:
0x2068	0xF89D0004  LDRB	R0, [SP, #4]
0x206C	0xF1B00FFF  CMP	R0, #255
0x2070	0xD004    BEQ	L_spi_read122
;driverrf4463pro.c, 803 :: 		i = check_cts();                // Check if you can send Command
0x2072	0xF7FEFB57  BL	_check_cts+0
0x2076	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 804 :: 		}
0x207A	0xE7F5    B	L_spi_read121
L_spi_read122:
;driverrf4463pro.c, 806 :: 		spi_write( 1, p );    // Send Command
0x207C	0xF10D0005  ADD	R0, SP, #5
0x2080	0xB401    PUSH	(R0)
0x2082	0x2001    MOVS	R0, #1
0x2084	0xB401    PUSH	(R0)
0x2086	0xF7FFFE0D  BL	_spi_write+0
0x208A	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 808 :: 		i = 0;
0x208C	0x2000    MOVS	R0, #0
0x208E	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 809 :: 		while ( i != 0xFF ) {
L_spi_read123:
0x2092	0xF89D0004  LDRB	R0, [SP, #4]
0x2096	0xF1B00FFF  CMP	R0, #255
0x209A	0xD004    BEQ	L_spi_read124
;driverrf4463pro.c, 810 :: 		i = check_cts();        //Check whether the data can be read
0x209C	0xF7FEFB42  BL	_check_cts+0
0x20A0	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 811 :: 		}
0x20A4	0xE7F5    B	L_spi_read123
L_spi_read124:
;driverrf4463pro.c, 813 :: 		nSEL = 1;
0x20A6	0x2101    MOVS	R1, #1
0x20A8	0xB249    SXTB	R1, R1
0x20AA	0x4817    LDR	R0, [PC, #92]
0x20AC	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 814 :: 		nSEL = 0;
0x20AE	0x2100    MOVS	R1, #0
0x20B0	0xB249    SXTB	R1, R1
0x20B2	0x4815    LDR	R0, [PC, #84]
0x20B4	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 815 :: 		ucRf4463SPIByte( 0x44 );
0x20B6	0x2044    MOVS	R0, #68
0x20B8	0xB401    PUSH	(R0)
0x20BA	0xF7FEFA97  BL	_ucRf4463SPIByte+0
0x20BE	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 816 :: 		for ( i = 0; i < data_length; i++ ) {        // Read data
0x20C0	0x2000    MOVS	R0, #0
0x20C2	0xF88D0004  STRB	R0, [SP, #4]
L_spi_read125:
0x20C6	0xF89D100C  LDRB	R1, [SP, #12]
0x20CA	0xF89D0004  LDRB	R0, [SP, #4]
0x20CE	0x4288    CMP	R0, R1
0x20D0	0xD211    BCS	L_spi_read126
;driverrf4463pro.c, 817 :: 		spi_read_buf[ i ] = ucRf4463SPIByte( 0x00 );             // 0x00
0x20D2	0xF89D1004  LDRB	R1, [SP, #4]
0x20D6	0x480D    LDR	R0, [PC, #52]
0x20D8	0x1840    ADDS	R0, R0, R1
0x20DA	0x9002    STR	R0, [SP, #8]
0x20DC	0x2000    MOVS	R0, #0
0x20DE	0xB401    PUSH	(R0)
0x20E0	0xF7FEFA84  BL	_ucRf4463SPIByte+0
0x20E4	0xB001    ADD	SP, SP, #4
0x20E6	0x9902    LDR	R1, [SP, #8]
0x20E8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 816 :: 		for ( i = 0; i < data_length; i++ ) {        // Read data
0x20EA	0xF89D0004  LDRB	R0, [SP, #4]
0x20EE	0x1C40    ADDS	R0, R0, #1
0x20F0	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 818 :: 		}
0x20F4	0xE7E7    B	L_spi_read125
L_spi_read126:
;driverrf4463pro.c, 819 :: 		nSEL = 1;
0x20F6	0x2101    MOVS	R1, #1
0x20F8	0xB249    SXTB	R1, R1
0x20FA	0x4803    LDR	R0, [PC, #12]
0x20FC	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 820 :: 		}
L_end_spi_read:
0x20FE	0xF8DDE000  LDR	LR, [SP, #0]
0x2102	0xB003    ADD	SP, SP, #12
0x2104	0x4770    BX	LR
0x2106	0xBF00    NOP
0x2108	0x82884241  	GPIOD_ODRbits+0
0x210C	0x22A92000  	_spi_read_buf+0
; end of _spi_read
_vRF4463PartInfo:
;driverrf4463pro.c, 430 :: 		void vRF4463PartInfo( void ) {  // Solicitud totalmente operativa
0x3208	0xB084    SUB	SP, SP, #16
0x320A	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 433 :: 		p[ 0 ] = PART_INFO;
0x320E	0xA801    ADD	R0, SP, #4
0x3210	0x1C01    ADDS	R1, R0, #0
0x3212	0x2001    MOVS	R0, #1
0x3214	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 437 :: 		spi_write( 1, p );
0x3216	0xA801    ADD	R0, SP, #4
0x3218	0xB401    PUSH	(R0)
0x321A	0x2001    MOVS	R0, #1
0x321C	0xB401    PUSH	(R0)
0x321E	0xF7FEFD41  BL	_spi_write+0
0x3222	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 438 :: 		spi_read( 9, PART_INFO );
0x3224	0x2001    MOVS	R0, #1
0x3226	0xB401    PUSH	(R0)
0x3228	0x2009    MOVS	R0, #9
0x322A	0xB401    PUSH	(R0)
0x322C	0xF7FEFF10  BL	_spi_read+0
0x3230	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 439 :: 		}
L_end_vRF4463PartInfo:
0x3232	0xF8DDE000  LDR	LR, [SP, #0]
0x3236	0xB004    ADD	SP, SP, #16
0x3238	0x4770    BX	LR
; end of _vRF4463PartInfo
_vUSARTReceivedFromUSART1:
;uarthandler.c, 321 :: 		void vUSARTReceivedFromUSART1 ( ) {
0x323C	0xB081    SUB	SP, SP, #4
0x323E	0xF8CDE000  STR	LR, [SP, #0]
;uarthandler.c, 323 :: 		vUSARTCleanBuffer( ucUSARTActiveBuffer1, ulUSARTActiveBuffer1BytesReceived ); // borra todo el buffer
0x3242	0x4816    LDR	R0, [PC, #88]
0x3244	0x6800    LDR	R0, [R0, #0]
0x3246	0xB401    PUSH	(R0)
0x3248	0x4815    LDR	R0, [PC, #84]
0x324A	0xB401    PUSH	(R0)
0x324C	0xF7FDFEE6  BL	_vUSARTCleanBuffer+0
0x3250	0xB002    ADD	SP, SP, #8
;uarthandler.c, 325 :: 		vUSARTStartMEMtoMEM( ucUSART1RXBuffer, ucUSARTActiveBuffer1, ulUSART1ByteReceived ); // copia el buffer de entrada
0x3252	0x4814    LDR	R0, [PC, #80]
0x3254	0x6800    LDR	R0, [R0, #0]
0x3256	0xB401    PUSH	(R0)
0x3258	0x4811    LDR	R0, [PC, #68]
0x325A	0xB401    PUSH	(R0)
0x325C	0x4812    LDR	R0, [PC, #72]
0x325E	0xB401    PUSH	(R0)
0x3260	0xF7FDFEAE  BL	_vUSARTStartMEMtoMEM+0
0x3264	0xB003    ADD	SP, SP, #12
;uarthandler.c, 326 :: 		vUSARTCleanBuffer( ucUSART1RXBuffer, ulUSART1ByteReceived );          // lo limpia
0x3266	0x480F    LDR	R0, [PC, #60]
0x3268	0x6800    LDR	R0, [R0, #0]
0x326A	0xB401    PUSH	(R0)
0x326C	0x480E    LDR	R0, [PC, #56]
0x326E	0xB401    PUSH	(R0)
0x3270	0xF7FDFED4  BL	_vUSARTCleanBuffer+0
0x3274	0xB002    ADD	SP, SP, #8
;uarthandler.c, 327 :: 		ulUSARTActiveBuffer1BytesReceived = ulUSART1ByteReceived;             // le pasa el valor
0x3276	0x480B    LDR	R0, [PC, #44]
0x3278	0x6801    LDR	R1, [R0, #0]
0x327A	0x4808    LDR	R0, [PC, #32]
0x327C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 328 :: 		ulUSART1ByteReceived = 0;                                             // pone a cero el contador
0x327E	0x2100    MOVS	R1, #0
0x3280	0x4808    LDR	R0, [PC, #32]
0x3282	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 329 :: 		fUSART1Buffer = CLEAR_TO_WRITE;                                       // indica que esta limpio
0x3284	0x2100    MOVS	R1, #0
0x3286	0x4809    LDR	R0, [PC, #36]
0x3288	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 330 :: 		vRF4463MainCommandProcessor( ucUSARTActiveBuffer1 );
0x328A	0x4805    LDR	R0, [PC, #20]
0x328C	0xB401    PUSH	(R0)
0x328E	0xF7FDFF67  BL	_vRF4463MainCommandProcessor+0
0x3292	0xB001    ADD	SP, SP, #4
;uarthandler.c, 331 :: 		}
L_end_vUSARTReceivedFromUSART1:
0x3294	0xF8DDE000  LDR	LR, [SP, #0]
0x3298	0xB001    ADD	SP, SP, #4
0x329A	0x4770    BX	LR
0x329C	0x10002000  	_ulUSARTActiveBuffer1BytesReceived+0
0x32A0	0x00002000  	_ucUSARTActiveBuffer1+0
0x32A4	0x20042000  	_ulUSART1ByteReceived+0
0x32A8	0x10042000  	_ucUSART1RXBuffer+0
0x32AC	0x20082000  	_fUSART1Buffer+0
; end of _vUSARTReceivedFromUSART1
_vUSARTCleanBuffer:
;uarthandler.c, 314 :: 		void vUSARTCleanBuffer ( unsigned char *ucBuffer, unsigned int uiCnt ) {
0x101C	0xB081    SUB	SP, SP, #4
0x101E	0xF8CDE000  STR	LR, [SP, #0]
;uarthandler.c, 316 :: 		vUSARTStartMEMtoMEMZero( ucBuffer, uiCnt );
0x1022	0xF8BD0008  LDRH	R0, [SP, #8]
0x1026	0xB401    PUSH	(R0)
0x1028	0x9802    LDR	R0, [SP, #8]
0x102A	0xB401    PUSH	(R0)
0x102C	0xF7FFFAFA  BL	_vUSARTStartMEMtoMEMZero+0
0x1030	0xB002    ADD	SP, SP, #8
;uarthandler.c, 317 :: 		}
L_end_vUSARTCleanBuffer:
0x1032	0xF8DDE000  LDR	LR, [SP, #0]
0x1036	0xB001    ADD	SP, SP, #4
0x1038	0x4770    BX	LR
; end of _vUSARTCleanBuffer
_vUSARTStartMEMtoMEMZero:
;uarthandler.c, 158 :: 		unsigned char vUSARTStartMEMtoMEMZero ( unsigned long *pcBufferDestination, unsigned long ulSizeInBytes ) {
0x0624	0xB081    SUB	SP, SP, #4
;uarthandler.c, 160 :: 		while ( DMA2_S4CRbits.EN );
L_vUSARTStartMEMtoMEMZero213:
0x0626	0x4812    LDR	R0, [PC, #72]
0x0628	0x6800    LDR	R0, [R0, #0]
0x062A	0xB100    CBZ	R0, L_vUSARTStartMEMtoMEMZero214
0x062C	0xE7FB    B	L_vUSARTStartMEMtoMEMZero213
L_vUSARTStartMEMtoMEMZero214:
;uarthandler.c, 162 :: 		if ( ulSizeInBytes > 0 ) {                // la transmision anterior termino?
0x062E	0x9802    LDR	R0, [SP, #8]
0x0630	0x2800    CMP	R0, #0
0x0632	0xD91A    BLS	L_vUSARTStartMEMtoMEMZero215
;uarthandler.c, 163 :: 		DMA2_S4CRbits.EN = 0;                  // Desabilita la recepci?n para poder modificar los par?metros
0x0634	0x2100    MOVS	R1, #0
0x0636	0xB249    SXTB	R1, R1
0x0638	0x480D    LDR	R0, [PC, #52]
0x063A	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 164 :: 		while ( DMA2_S4CRbits.EN );            // espera a que se haya desabilitado realmente
L_vUSARTStartMEMtoMEMZero216:
0x063C	0x480C    LDR	R0, [PC, #48]
0x063E	0x6800    LDR	R0, [R0, #0]
0x0640	0xB100    CBZ	R0, L_vUSARTStartMEMtoMEMZero217
0x0642	0xE7FB    B	L_vUSARTStartMEMtoMEMZero216
L_vUSARTStartMEMtoMEMZero217:
;uarthandler.c, 167 :: 		DMA2_S4PAR = ( unsigned long ) &ucUSARTNull;          // Direccion de periferico a rutear
0x0644	0x490B    LDR	R1, [PC, #44]
0x0646	0x480C    LDR	R0, [PC, #48]
0x0648	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 168 :: 		DMA2_S4M0AR = ( unsigned long ) pcBufferDestination;  // Direccion de la memoria a rutear
0x064A	0x9901    LDR	R1, [SP, #4]
0x064C	0x480B    LDR	R0, [PC, #44]
0x064E	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 170 :: 		DMA2_S4NDTR = ulSizeInBytes;           // Tamagno de datos a manejar (Header + Payload)
0x0650	0x9902    LDR	R1, [SP, #8]
0x0652	0x480B    LDR	R0, [PC, #44]
0x0654	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 171 :: 		DMA2_S4CRbits.EN = 1;
0x0656	0x2101    MOVS	R1, #1
0x0658	0xB249    SXTB	R1, R1
0x065A	0x4805    LDR	R0, [PC, #20]
0x065C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 172 :: 		while ( DMA2_S4CRbits.EN );
L_vUSARTStartMEMtoMEMZero218:
0x065E	0x4804    LDR	R0, [PC, #16]
0x0660	0x6800    LDR	R0, [R0, #0]
0x0662	0xB100    CBZ	R0, L_vUSARTStartMEMtoMEMZero219
0x0664	0xE7FB    B	L_vUSARTStartMEMtoMEMZero218
L_vUSARTStartMEMtoMEMZero219:
;uarthandler.c, 173 :: 		return 1;                              // indica que transmitio
0x0666	0x2001    MOVS	R0, #1
0x0668	0xE000    B	L_end_vUSARTStartMEMtoMEMZero
;uarthandler.c, 174 :: 		}
L_vUSARTStartMEMtoMEMZero215:
;uarthandler.c, 175 :: 		return 0;                                 // indica que NO transmitio
0x066A	0x2000    MOVS	R0, #0
;uarthandler.c, 176 :: 		}
L_end_vUSARTStartMEMtoMEMZero:
0x066C	0xB001    ADD	SP, SP, #4
0x066E	0x4770    BX	LR
0x0670	0x8E00424C  	DMA2_S4CRbits+0
0x0674	0x20912000  	_ucUSARTNull+0
0x0678	0x64784002  	DMA2_S4PAR+0
0x067C	0x647C4002  	DMA2_S4M0AR+0
0x0680	0x64744002  	DMA2_S4NDTR+0
; end of _vUSARTStartMEMtoMEMZero
_vUSARTStartMEMtoMEM:
;uarthandler.c, 206 :: 		unsigned char vUSARTStartMEMtoMEM ( unsigned long *pcBufferOrigin, unsigned long *pcBufferDestination, unsigned long ulSizeInBytes ) {
0x0FC0	0xB081    SUB	SP, SP, #4
;uarthandler.c, 208 :: 		while ( DMA2_S1CRbits.EN );
L_vUSARTStartMEMtoMEM222:
0x0FC2	0x4812    LDR	R0, [PC, #72]
0x0FC4	0x6800    LDR	R0, [R0, #0]
0x0FC6	0xB100    CBZ	R0, L_vUSARTStartMEMtoMEM223
0x0FC8	0xE7FB    B	L_vUSARTStartMEMtoMEM222
L_vUSARTStartMEMtoMEM223:
;uarthandler.c, 210 :: 		if ( ulSizeInBytes > 0 ) {                // la transmision anterior termino?
0x0FCA	0x9803    LDR	R0, [SP, #12]
0x0FCC	0x2800    CMP	R0, #0
0x0FCE	0xD91A    BLS	L_vUSARTStartMEMtoMEM224
;uarthandler.c, 211 :: 		DMA2_S1CRbits.EN = 0;                  // Desabilita la recepci?n para poder modificar los par?metros
0x0FD0	0x2100    MOVS	R1, #0
0x0FD2	0xB249    SXTB	R1, R1
0x0FD4	0x480D    LDR	R0, [PC, #52]
0x0FD6	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 212 :: 		while ( DMA2_S1CRbits.EN );            // espera a que se haya desabilitado realmente
L_vUSARTStartMEMtoMEM225:
0x0FD8	0x480C    LDR	R0, [PC, #48]
0x0FDA	0x6800    LDR	R0, [R0, #0]
0x0FDC	0xB100    CBZ	R0, L_vUSARTStartMEMtoMEM226
0x0FDE	0xE7FB    B	L_vUSARTStartMEMtoMEM225
L_vUSARTStartMEMtoMEM226:
;uarthandler.c, 215 :: 		DMA2_S1PAR = ( unsigned long ) pcBufferOrigin;        // Direccion de periferico a rutear
0x0FE0	0x9901    LDR	R1, [SP, #4]
0x0FE2	0x480B    LDR	R0, [PC, #44]
0x0FE4	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 216 :: 		DMA2_S1M0AR = ( unsigned long ) pcBufferDestination;  // Direccion de la memoria a rutear
0x0FE6	0x9902    LDR	R1, [SP, #8]
0x0FE8	0x480A    LDR	R0, [PC, #40]
0x0FEA	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 218 :: 		DMA2_S1NDTR = ulSizeInBytes;           // Tamagno de datos a manejar (Header + Payload)
0x0FEC	0x9903    LDR	R1, [SP, #12]
0x0FEE	0x480A    LDR	R0, [PC, #40]
0x0FF0	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 219 :: 		DMA2_S1CRbits.EN = 1;
0x0FF2	0x2101    MOVS	R1, #1
0x0FF4	0xB249    SXTB	R1, R1
0x0FF6	0x4805    LDR	R0, [PC, #20]
0x0FF8	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 220 :: 		while ( DMA2_S1CRbits.EN );
L_vUSARTStartMEMtoMEM227:
0x0FFA	0x4804    LDR	R0, [PC, #16]
0x0FFC	0x6800    LDR	R0, [R0, #0]
0x0FFE	0xB100    CBZ	R0, L_vUSARTStartMEMtoMEM228
0x1000	0xE7FB    B	L_vUSARTStartMEMtoMEM227
L_vUSARTStartMEMtoMEM228:
;uarthandler.c, 221 :: 		return 1;                              // indica que transmitio
0x1002	0x2001    MOVS	R0, #1
0x1004	0xE000    B	L_end_vUSARTStartMEMtoMEM
;uarthandler.c, 222 :: 		}
L_vUSARTStartMEMtoMEM224:
;uarthandler.c, 223 :: 		return 0;                                 // indica que NO transmitio
0x1006	0x2000    MOVS	R0, #0
;uarthandler.c, 225 :: 		}
L_end_vUSARTStartMEMtoMEM:
0x1008	0xB001    ADD	SP, SP, #4
0x100A	0x4770    BX	LR
0x100C	0x8500424C  	DMA2_S1CRbits+0
0x1010	0x64304002  	DMA2_S1PAR+0
0x1014	0x64344002  	DMA2_S1M0AR+0
0x1018	0x642C4002  	DMA2_S1NDTR+0
; end of _vUSARTStartMEMtoMEM
_vRF4463MainCommandProcessor:
;DriverRF4463PROMain.c, 116 :: 		void vRF4463MainCommandProcessor ( unsigned char *ucBuffer ) {
0x1160	0xB09C    SUB	SP, SP, #112
0x1162	0xF8CDE000  STR	LR, [SP, #0]
;DriverRF4463PROMain.c, 117 :: 		unsigned char ucCommand [ 32 ] = { 0x00 };
0x1166	0xF10D0B04  ADD	R11, SP, #4
0x116A	0xF10B0A67  ADD	R10, R11, #103
0x116E	0xF8DFC2CC  LDR	R12, [PC, #716]
0x1172	0xF001FA09  BL	___CC2DW+0
;DriverRF4463PROMain.c, 118 :: 		unsigned long ulArgument = 0;
;DriverRF4463PROMain.c, 119 :: 		unsigned char ucLongArgument[ 64 ] = { 0x00 };     // Espera argumentos de hasta 11 bytes
;DriverRF4463PROMain.c, 120 :: 		unsigned char ucCounterBuffer = 0;
;DriverRF4463PROMain.c, 121 :: 		unsigned char ucCounterCommand = 0;
;DriverRF4463PROMain.c, 122 :: 		unsigned char ucCounterLongArgument = 0;
;DriverRF4463PROMain.c, 125 :: 		if ( ucBuffer[ 0 ] > '@' && ucBuffer[ 0 ] <= 'z' ) {
0x1176	0x981C    LDR	R0, [SP, #112]
0x1178	0x1C00    ADDS	R0, R0, #0
0x117A	0x7800    LDRB	R0, [R0, #0]
0x117C	0x2840    CMP	R0, #64
0x117E	0xD94F    BLS	L_vRF4463MainCommandProcessor248
0x1180	0x981C    LDR	R0, [SP, #112]
0x1182	0x1C00    ADDS	R0, R0, #0
0x1184	0x7800    LDRB	R0, [R0, #0]
0x1186	0x287A    CMP	R0, #122
0x1188	0xD84A    BHI	L_vRF4463MainCommandProcessor248
L__vRF4463MainCommandProcessor430:
;DriverRF4463PROMain.c, 127 :: 		while ( ucBuffer[ ucCounterBuffer ] != '|' && ucCounterCommand < 32 ) {      // primer token
L_vRF4463MainCommandProcessor249:
0x118A	0xF89D1068  LDRB	R1, [SP, #104]
0x118E	0x981C    LDR	R0, [SP, #112]
0x1190	0x1840    ADDS	R0, R0, R1
0x1192	0x7800    LDRB	R0, [R0, #0]
0x1194	0x287C    CMP	R0, #124
0x1196	0xD01E    BEQ	L_vRF4463MainCommandProcessor250
0x1198	0xF89D0069  LDRB	R0, [SP, #105]
0x119C	0x2820    CMP	R0, #32
0x119E	0xD21A    BCS	L_vRF4463MainCommandProcessor250
L__vRF4463MainCommandProcessor429:
;DriverRF4463PROMain.c, 128 :: 		ucCommand[ ucCounterCommand++ ] = toupper( ucBuffer[ ucCounterBuffer++ ] );
0x11A0	0xA901    ADD	R1, SP, #4
0x11A2	0xF89D0069  LDRB	R0, [SP, #105]
0x11A6	0x1808    ADDS	R0, R1, R0
0x11A8	0x901B    STR	R0, [SP, #108]
0x11AA	0xF89D1068  LDRB	R1, [SP, #104]
0x11AE	0x981C    LDR	R0, [SP, #112]
0x11B0	0x1840    ADDS	R0, R0, R1
0x11B2	0x7800    LDRB	R0, [R0, #0]
0x11B4	0xB2C4    UXTB	R4, R0
0x11B6	0xB2E0    UXTB	R0, R4
0x11B8	0xF7FFFB80  BL	_toupper+0
0x11BC	0x991B    LDR	R1, [SP, #108]
0x11BE	0x7008    STRB	R0, [R1, #0]
0x11C0	0xF89D0069  LDRB	R0, [SP, #105]
0x11C4	0x1C40    ADDS	R0, R0, #1
0x11C6	0xF88D0069  STRB	R0, [SP, #105]
0x11CA	0xF89D0068  LDRB	R0, [SP, #104]
0x11CE	0x1C40    ADDS	R0, R0, #1
0x11D0	0xF88D0068  STRB	R0, [SP, #104]
;DriverRF4463PROMain.c, 129 :: 		}
0x11D4	0xE7D9    B	L_vRF4463MainCommandProcessor249
L_vRF4463MainCommandProcessor250:
;DriverRF4463PROMain.c, 131 :: 		ucCounterBuffer++;                                                           // evita el Token
0x11D6	0xF89D0068  LDRB	R0, [SP, #104]
0x11DA	0x1C40    ADDS	R0, R0, #1
0x11DC	0xF88D0068  STRB	R0, [SP, #104]
;DriverRF4463PROMain.c, 133 :: 		while ( ucBuffer[ ucCounterBuffer ] != CHR_CR && ucCounterLongArgument < 64 ) {   // segundo token
L_vRF4463MainCommandProcessor253:
0x11E0	0xF89D1068  LDRB	R1, [SP, #104]
0x11E4	0x981C    LDR	R0, [SP, #112]
0x11E6	0x1840    ADDS	R0, R0, R1
0x11E8	0x7800    LDRB	R0, [R0, #0]
0x11EA	0x280D    CMP	R0, #13
0x11EC	0xD018    BEQ	L_vRF4463MainCommandProcessor254
0x11EE	0xF89D006A  LDRB	R0, [SP, #106]
0x11F2	0x2840    CMP	R0, #64
0x11F4	0xD214    BCS	L_vRF4463MainCommandProcessor254
L__vRF4463MainCommandProcessor428:
;DriverRF4463PROMain.c, 134 :: 		ucLongArgument[ ucCounterLongArgument ] = ucBuffer[ ucCounterBuffer ] ;   //  toupper(
0x11F6	0xA90A    ADD	R1, SP, #40
0x11F8	0xF89D006A  LDRB	R0, [SP, #106]
0x11FC	0x180A    ADDS	R2, R1, R0
0x11FE	0xF89D1068  LDRB	R1, [SP, #104]
0x1202	0x981C    LDR	R0, [SP, #112]
0x1204	0x1840    ADDS	R0, R0, R1
0x1206	0x7800    LDRB	R0, [R0, #0]
0x1208	0x7010    STRB	R0, [R2, #0]
;DriverRF4463PROMain.c, 135 :: 		ucCounterBuffer++;
0x120A	0xF89D0068  LDRB	R0, [SP, #104]
0x120E	0x1C40    ADDS	R0, R0, #1
0x1210	0xF88D0068  STRB	R0, [SP, #104]
;DriverRF4463PROMain.c, 136 :: 		ucCounterLongArgument++;
0x1214	0xF89D006A  LDRB	R0, [SP, #106]
0x1218	0x1C40    ADDS	R0, R0, #1
0x121A	0xF88D006A  STRB	R0, [SP, #106]
;DriverRF4463PROMain.c, 137 :: 		}
0x121E	0xE7DF    B	L_vRF4463MainCommandProcessor253
L_vRF4463MainCommandProcessor254:
;DriverRF4463PROMain.c, 138 :: 		}
L_vRF4463MainCommandProcessor248:
;DriverRF4463PROMain.c, 142 :: 		if ( memcmp( CMD_RADIO_POWER_SET, ucCommand, sizeof( CMD_RADIO_POWER_SET ) ) == 0x00 ) {
0x1220	0xAC01    ADD	R4, SP, #4
0x1222	0x220A    MOVS	R2, #10
0x1224	0xB212    SXTH	R2, R2
0x1226	0x4621    MOV	R1, R4
0x1228	0x4885    LDR	R0, [PC, #532]
0x122A	0xF7FFFA9F  BL	_memcmp+0
0x122E	0xBB20    CBNZ	R0, L_vRF4463MainCommandProcessor257
;DriverRF4463PROMain.c, 143 :: 		ulArgument = StrToShort( ucLongArgument );
0x1230	0xAC0A    ADD	R4, SP, #40
0x1232	0x4620    MOV	R0, R4
0x1234	0xF7FFFAB4  BL	_StrToShort+0
0x1238	0x9009    STR	R0, [SP, #36]
;DriverRF4463PROMain.c, 145 :: 		if ( ulArgument > 0 && ulArgument <= 127 ) {
0x123A	0x9809    LDR	R0, [SP, #36]
0x123C	0x2800    CMP	R0, #0
0x123E	0xD911    BLS	L_vRF4463MainCommandProcessor260
0x1240	0x9809    LDR	R0, [SP, #36]
0x1242	0x287F    CMP	R0, #127
0x1244	0xD80E    BHI	L_vRF4463MainCommandProcessor260
L__vRF4463MainCommandProcessor427:
;DriverRF4463PROMain.c, 146 :: 		ucRF4463Power = ulArgument;
0x1246	0x9909    LDR	R1, [SP, #36]
0x1248	0x487E    LDR	R0, [PC, #504]
0x124A	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 147 :: 		vRF4463MainApplyChanges();
0x124C	0xF7FFFA4C  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 148 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1250	0x487D    LDR	R0, [PC, #500]
0x1252	0xF7FFF957  BL	_strlen+0
0x1256	0xB401    PUSH	(R0)
0x1258	0x487B    LDR	R0, [PC, #492]
0x125A	0xB401    PUSH	(R0)
0x125C	0xF7FFFDE8  BL	_vUSART1Start_TX+0
0x1260	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 149 :: 		}
0x1262	0xE008    B	L_vRF4463MainCommandProcessor261
L_vRF4463MainCommandProcessor260:
;DriverRF4463PROMain.c, 151 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1264	0x4879    LDR	R0, [PC, #484]
0x1266	0xF7FFF94D  BL	_strlen+0
0x126A	0xB401    PUSH	(R0)
0x126C	0x4877    LDR	R0, [PC, #476]
0x126E	0xB401    PUSH	(R0)
0x1270	0xF7FFFDDE  BL	_vUSART1Start_TX+0
0x1274	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 152 :: 		}
L_vRF4463MainCommandProcessor261:
;DriverRF4463PROMain.c, 153 :: 		}
0x1276	0xF000BC7F  B	L_vRF4463MainCommandProcessor262
L_vRF4463MainCommandProcessor257:
;DriverRF4463PROMain.c, 157 :: 		else if ( memcmp( CMD_RADIO_BAND_SET, ucCommand, sizeof( CMD_RADIO_BAND_SET ) ) == 0x00 ) {
0x127A	0xAC01    ADD	R4, SP, #4
0x127C	0x2209    MOVS	R2, #9
0x127E	0xB212    SXTH	R2, R2
0x1280	0x4621    MOV	R1, R4
0x1282	0x4873    LDR	R0, [PC, #460]
0x1284	0xF7FFFA72  BL	_memcmp+0
0x1288	0x2800    CMP	R0, #0
0x128A	0xD13F    BNE	L_vRF4463MainCommandProcessor263
;DriverRF4463PROMain.c, 158 :: 		ulArgument = StrToInt( ucLongArgument );
0x128C	0xAC0A    ADD	R4, SP, #40
0x128E	0x4620    MOV	R0, R4
0x1290	0xF7FFFB46  BL	_StrToInt+0
0x1294	0x9009    STR	R0, [SP, #36]
;DriverRF4463PROMain.c, 160 :: 		if ( ulArgument == 433 || ulArgument == 868 || ulArgument == 915 ) {
0x1296	0x9909    LDR	R1, [SP, #36]
0x1298	0xF24010B1  MOVW	R0, #433
0x129C	0x4281    CMP	R1, R0
0x129E	0xD009    BEQ	L__vRF4463MainCommandProcessor426
0x12A0	0x9809    LDR	R0, [SP, #36]
0x12A2	0xF5B07F59  CMP	R0, #868
0x12A6	0xD005    BEQ	L__vRF4463MainCommandProcessor426
0x12A8	0x9909    LDR	R1, [SP, #36]
0x12AA	0xF2403093  MOVW	R0, #915
0x12AE	0x4281    CMP	R1, R0
0x12B0	0xD000    BEQ	L__vRF4463MainCommandProcessor426
0x12B2	0xE020    B	L_vRF4463MainCommandProcessor266
L__vRF4463MainCommandProcessor426:
;DriverRF4463PROMain.c, 161 :: 		ucRF4463Freq3 = ucLongArgument[ 0 ] - 48;
0x12B4	0xA80A    ADD	R0, SP, #40
0x12B6	0x1C00    ADDS	R0, R0, #0
0x12B8	0x7800    LDRB	R0, [R0, #0]
0x12BA	0xF2A00130  SUBW	R1, R0, #48
0x12BE	0x4865    LDR	R0, [PC, #404]
0x12C0	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 162 :: 		ucRF4463Freq2 = ucLongArgument[ 1 ] - 48;
0x12C2	0xA80A    ADD	R0, SP, #40
0x12C4	0x1C40    ADDS	R0, R0, #1
0x12C6	0x7800    LDRB	R0, [R0, #0]
0x12C8	0xF2A00130  SUBW	R1, R0, #48
0x12CC	0x4862    LDR	R0, [PC, #392]
0x12CE	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 163 :: 		ucRF4463Freq1 = ucLongArgument[ 2 ] - 48;
0x12D0	0xA80A    ADD	R0, SP, #40
0x12D2	0x1C80    ADDS	R0, R0, #2
0x12D4	0x7800    LDRB	R0, [R0, #0]
0x12D6	0xF2A00130  SUBW	R1, R0, #48
0x12DA	0x4860    LDR	R0, [PC, #384]
0x12DC	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 164 :: 		vRF4463MainApplyChanges();
0x12DE	0xF7FFFA03  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 165 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x12E2	0x4859    LDR	R0, [PC, #356]
0x12E4	0xF7FFF90E  BL	_strlen+0
0x12E8	0xB401    PUSH	(R0)
0x12EA	0x4857    LDR	R0, [PC, #348]
0x12EC	0xB401    PUSH	(R0)
0x12EE	0xF7FFFD9F  BL	_vUSART1Start_TX+0
0x12F2	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 166 :: 		}
0x12F4	0xE008    B	L_vRF4463MainCommandProcessor267
L_vRF4463MainCommandProcessor266:
;DriverRF4463PROMain.c, 168 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x12F6	0x4855    LDR	R0, [PC, #340]
0x12F8	0xF7FFF904  BL	_strlen+0
0x12FC	0xB401    PUSH	(R0)
0x12FE	0x4853    LDR	R0, [PC, #332]
0x1300	0xB401    PUSH	(R0)
0x1302	0xF7FFFD95  BL	_vUSART1Start_TX+0
0x1306	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 169 :: 		}
L_vRF4463MainCommandProcessor267:
;DriverRF4463PROMain.c, 170 :: 		}
0x1308	0xF000BC36  B	L_vRF4463MainCommandProcessor268
L_vRF4463MainCommandProcessor263:
;DriverRF4463PROMain.c, 174 :: 		else if ( memcmp( CMD_RADIO_RATE_SET, ucCommand, sizeof( CMD_RADIO_RATE_SET ) ) == 0x00 ) {
0x130C	0xAC01    ADD	R4, SP, #4
0x130E	0x2209    MOVS	R2, #9
0x1310	0xB212    SXTH	R2, R2
0x1312	0x4621    MOV	R1, R4
0x1314	0x4852    LDR	R0, [PC, #328]
0x1316	0xF7FFFA29  BL	_memcmp+0
0x131A	0x2800    CMP	R0, #0
0x131C	0xF0408104  BNE	L_vRF4463MainCommandProcessor269
;DriverRF4463PROMain.c, 175 :: 		ulArgument = StrToLong( ucLongArgument );
0x1320	0xAC0A    ADD	R4, SP, #40
0x1322	0x4620    MOV	R0, R4
0x1324	0xF7FFFB8C  BL	_StrToLong+0
0x1328	0x9009    STR	R0, [SP, #36]
;DriverRF4463PROMain.c, 177 :: 		switch ( ulArgument ) {
0x132A	0xE0C5    B	L_vRF4463MainCommandProcessor270
;DriverRF4463PROMain.c, 178 :: 		case 500      : ucRF4463Rate = dr_500;
L_vRF4463MainCommandProcessor272:
0x132C	0x210A    MOVS	R1, #10
0x132E	0x484D    LDR	R0, [PC, #308]
0x1330	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 179 :: 		vRF4463MainApplyChanges();
0x1332	0xF7FFF9D9  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 180 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1336	0x4844    LDR	R0, [PC, #272]
0x1338	0xF7FFF8E4  BL	_strlen+0
0x133C	0xB401    PUSH	(R0)
0x133E	0x4842    LDR	R0, [PC, #264]
0x1340	0xB401    PUSH	(R0)
0x1342	0xF7FFFD75  BL	_vUSART1Start_TX+0
0x1346	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 181 :: 		break;
0x1348	0xE0EC    B	L_vRF4463MainCommandProcessor271
;DriverRF4463PROMain.c, 182 :: 		case 1200     : ucRF4463Rate = dr_1p2;
L_vRF4463MainCommandProcessor273:
0x134A	0x2100    MOVS	R1, #0
0x134C	0x4845    LDR	R0, [PC, #276]
0x134E	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 183 :: 		vRF4463MainApplyChanges();
0x1350	0xF7FFF9CA  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 184 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1354	0x483C    LDR	R0, [PC, #240]
0x1356	0xF7FFF8D5  BL	_strlen+0
0x135A	0xB401    PUSH	(R0)
0x135C	0x483A    LDR	R0, [PC, #232]
0x135E	0xB401    PUSH	(R0)
0x1360	0xF7FFFD66  BL	_vUSART1Start_TX+0
0x1364	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 185 :: 		break;
0x1366	0xE0DD    B	L_vRF4463MainCommandProcessor271
;DriverRF4463PROMain.c, 186 :: 		case 2400     : ucRF4463Rate = dr_2p4;
L_vRF4463MainCommandProcessor274:
0x1368	0x2101    MOVS	R1, #1
0x136A	0x483E    LDR	R0, [PC, #248]
0x136C	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 187 :: 		vRF4463MainApplyChanges();
0x136E	0xF7FFF9BB  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 188 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1372	0x4835    LDR	R0, [PC, #212]
0x1374	0xF7FFF8C6  BL	_strlen+0
0x1378	0xB401    PUSH	(R0)
0x137A	0x4833    LDR	R0, [PC, #204]
0x137C	0xB401    PUSH	(R0)
0x137E	0xF7FFFD57  BL	_vUSART1Start_TX+0
0x1382	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 189 :: 		break;
0x1384	0xE0CE    B	L_vRF4463MainCommandProcessor271
;DriverRF4463PROMain.c, 190 :: 		case 4800     : ucRF4463Rate = dr_4p8;
L_vRF4463MainCommandProcessor275:
0x1386	0x2102    MOVS	R1, #2
0x1388	0x4836    LDR	R0, [PC, #216]
0x138A	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 191 :: 		vRF4463MainApplyChanges();
0x138C	0xF7FFF9AC  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 192 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1390	0x482D    LDR	R0, [PC, #180]
0x1392	0xF7FFF8B7  BL	_strlen+0
0x1396	0xB401    PUSH	(R0)
0x1398	0x482B    LDR	R0, [PC, #172]
0x139A	0xB401    PUSH	(R0)
0x139C	0xF7FFFD48  BL	_vUSART1Start_TX+0
0x13A0	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 193 :: 		break;
0x13A2	0xE0BF    B	L_vRF4463MainCommandProcessor271
;DriverRF4463PROMain.c, 194 :: 		case 9600     : ucRF4463Rate = dr_9p6;
L_vRF4463MainCommandProcessor276:
0x13A4	0x2103    MOVS	R1, #3
0x13A6	0x482F    LDR	R0, [PC, #188]
0x13A8	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 195 :: 		vRF4463MainApplyChanges();
0x13AA	0xF7FFF99D  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 196 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x13AE	0x4826    LDR	R0, [PC, #152]
0x13B0	0xF7FFF8A8  BL	_strlen+0
0x13B4	0xB401    PUSH	(R0)
0x13B6	0x4824    LDR	R0, [PC, #144]
0x13B8	0xB401    PUSH	(R0)
0x13BA	0xF7FFFD39  BL	_vUSART1Start_TX+0
0x13BE	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 197 :: 		break;
0x13C0	0xE0B0    B	L_vRF4463MainCommandProcessor271
;DriverRF4463PROMain.c, 198 :: 		case 19200    : ucRF4463Rate = dr_19p2;
L_vRF4463MainCommandProcessor277:
0x13C2	0x2104    MOVS	R1, #4
0x13C4	0x4827    LDR	R0, [PC, #156]
0x13C6	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 199 :: 		vRF4463MainApplyChanges();
0x13C8	0xF7FFF98E  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 200 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x13CC	0x481E    LDR	R0, [PC, #120]
0x13CE	0xF7FFF899  BL	_strlen+0
0x13D2	0xB401    PUSH	(R0)
0x13D4	0x481C    LDR	R0, [PC, #112]
0x13D6	0xB401    PUSH	(R0)
0x13D8	0xF7FFFD2A  BL	_vUSART1Start_TX+0
0x13DC	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 201 :: 		break;
0x13DE	0xE0A1    B	L_vRF4463MainCommandProcessor271
;DriverRF4463PROMain.c, 202 :: 		case 38400    : ucRF4463Rate = dr_38p4;
L_vRF4463MainCommandProcessor278:
0x13E0	0x2105    MOVS	R1, #5
0x13E2	0x4820    LDR	R0, [PC, #128]
0x13E4	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 203 :: 		vRF4463MainApplyChanges();
0x13E6	0xF7FFF97F  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 204 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x13EA	0x4817    LDR	R0, [PC, #92]
0x13EC	0xF7FFF88A  BL	_strlen+0
0x13F0	0xB401    PUSH	(R0)
0x13F2	0x4815    LDR	R0, [PC, #84]
0x13F4	0xB401    PUSH	(R0)
0x13F6	0xF7FFFD1B  BL	_vUSART1Start_TX+0
0x13FA	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 205 :: 		break;
0x13FC	0xE092    B	L_vRF4463MainCommandProcessor271
;DriverRF4463PROMain.c, 206 :: 		case 76800    : ucRF4463Rate = dr_76p8;
L_vRF4463MainCommandProcessor279:
0x13FE	0x2106    MOVS	R1, #6
0x1400	0x4818    LDR	R0, [PC, #96]
0x1402	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 207 :: 		vRF4463MainApplyChanges();
0x1404	0xF7FFF970  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 208 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1408	0x480F    LDR	R0, [PC, #60]
0x140A	0xF7FFF87B  BL	_strlen+0
0x140E	0xB401    PUSH	(R0)
0x1410	0x480D    LDR	R0, [PC, #52]
0x1412	0xB401    PUSH	(R0)
0x1414	0xF7FFFD0C  BL	_vUSART1Start_TX+0
0x1418	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 209 :: 		break;
0x141A	0xE083    B	L_vRF4463MainCommandProcessor271
;DriverRF4463PROMain.c, 210 :: 		case 115200   : ucRF4463Rate = dr_115p2;
L_vRF4463MainCommandProcessor280:
0x141C	0x2107    MOVS	R1, #7
0x141E	0x4811    LDR	R0, [PC, #68]
0x1420	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 211 :: 		vRF4463MainApplyChanges();
0x1422	0xF7FFF961  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 212 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1426	0x4808    LDR	R0, [PC, #32]
0x1428	0xF7FFF86C  BL	_strlen+0
0x142C	0xB401    PUSH	(R0)
0x142E	0x4806    LDR	R0, [PC, #24]
0x1430	0xB401    PUSH	(R0)
0x1432	0xF7FFFCFD  BL	_vUSART1Start_TX+0
0x1436	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 213 :: 		break;
0x1438	0xE074    B	L_vRF4463MainCommandProcessor271
0x143A	0xE015    B	#42
0x143C	0x65800000  	?ICSvRF4463MainCommandProcessor_ucCommand_L0+0
0x1440	0x200C2000  	_CMD_RADIO_POWER_SET+0
0x1444	0x228F2000  	_ucRF4463Power+0
0x1448	0x20162000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x144C	0x203E2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x1450	0x205E2000  	_CMD_RADIO_BAND_SET+0
0x1454	0x22A42000  	_ucRF4463Freq3+0
0x1458	0x22A52000  	_ucRF4463Freq2+0
0x145C	0x22A62000  	_ucRF4463Freq1+0
0x1460	0x20672000  	_CMD_RADIO_RATE_SET+0
0x1464	0x22A72000  	_ucRF4463Rate+0
;DriverRF4463PROMain.c, 214 :: 		case 256000   : ucRF4463Rate = dr_256k;
L_vRF4463MainCommandProcessor281:
0x1468	0x2108    MOVS	R1, #8
0x146A	0x48B4    LDR	R0, [PC, #720]
0x146C	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 215 :: 		vRF4463MainApplyChanges();
0x146E	0xF7FFF93B  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 216 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1472	0x48B3    LDR	R0, [PC, #716]
0x1474	0xF7FFF846  BL	_strlen+0
0x1478	0xB401    PUSH	(R0)
0x147A	0x48B1    LDR	R0, [PC, #708]
0x147C	0xB401    PUSH	(R0)
0x147E	0xF7FFFCD7  BL	_vUSART1Start_TX+0
0x1482	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 217 :: 		break;
0x1484	0xE04E    B	L_vRF4463MainCommandProcessor271
;DriverRF4463PROMain.c, 218 :: 		case 500000   : ucRF4463Rate = dr_500k;
L_vRF4463MainCommandProcessor282:
0x1486	0x2109    MOVS	R1, #9
0x1488	0x48AC    LDR	R0, [PC, #688]
0x148A	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 219 :: 		vRF4463MainApplyChanges();
0x148C	0xF7FFF92C  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 220 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1490	0x48AB    LDR	R0, [PC, #684]
0x1492	0xF7FFF837  BL	_strlen+0
0x1496	0xB401    PUSH	(R0)
0x1498	0x48A9    LDR	R0, [PC, #676]
0x149A	0xB401    PUSH	(R0)
0x149C	0xF7FFFCC8  BL	_vUSART1Start_TX+0
0x14A0	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 221 :: 		break;
0x14A2	0xE03F    B	L_vRF4463MainCommandProcessor271
;DriverRF4463PROMain.c, 222 :: 		default       : vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
L_vRF4463MainCommandProcessor283:
0x14A4	0x48A7    LDR	R0, [PC, #668]
0x14A6	0xF7FFF82D  BL	_strlen+0
0x14AA	0xB401    PUSH	(R0)
0x14AC	0x48A5    LDR	R0, [PC, #660]
0x14AE	0xB401    PUSH	(R0)
0x14B0	0xF7FFFCBE  BL	_vUSART1Start_TX+0
0x14B4	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 223 :: 		}
0x14B6	0xE035    B	L_vRF4463MainCommandProcessor271
L_vRF4463MainCommandProcessor270:
0x14B8	0x9809    LDR	R0, [SP, #36]
0x14BA	0xF5B07FFA  CMP	R0, #500
0x14BE	0xF43FAF35  BEQ	L_vRF4463MainCommandProcessor272
0x14C2	0x9809    LDR	R0, [SP, #36]
0x14C4	0xF5B06F96  CMP	R0, #1200
0x14C8	0xF43FAF3F  BEQ	L_vRF4463MainCommandProcessor273
0x14CC	0x9809    LDR	R0, [SP, #36]
0x14CE	0xF5B06F16  CMP	R0, #2400
0x14D2	0xF43FAF49  BEQ	L_vRF4463MainCommandProcessor274
0x14D6	0x9809    LDR	R0, [SP, #36]
0x14D8	0xF5B05F96  CMP	R0, #4800
0x14DC	0xF43FAF53  BEQ	L_vRF4463MainCommandProcessor275
0x14E0	0x9809    LDR	R0, [SP, #36]
0x14E2	0xF5B05F16  CMP	R0, #9600
0x14E6	0xF43FAF5D  BEQ	L_vRF4463MainCommandProcessor276
0x14EA	0x9809    LDR	R0, [SP, #36]
0x14EC	0xF5B04F96  CMP	R0, #19200
0x14F0	0xF43FAF67  BEQ	L_vRF4463MainCommandProcessor277
0x14F4	0x9809    LDR	R0, [SP, #36]
0x14F6	0xF5B04F16  CMP	R0, #38400
0x14FA	0xF43FAF71  BEQ	L_vRF4463MainCommandProcessor278
0x14FE	0x9809    LDR	R0, [SP, #36]
0x1500	0xF5B03F96  CMP	R0, #76800
0x1504	0xF43FAF7B  BEQ	L_vRF4463MainCommandProcessor279
0x1508	0x9809    LDR	R0, [SP, #36]
0x150A	0xF5B03FE1  CMP	R0, #115200
0x150E	0xF43FAF85  BEQ	L_vRF4463MainCommandProcessor280
0x1512	0x9809    LDR	R0, [SP, #36]
0x1514	0xF5B03F7A  CMP	R0, #256000
0x1518	0xD0A6    BEQ	L_vRF4463MainCommandProcessor281
0x151A	0x9909    LDR	R1, [SP, #36]
0x151C	0x488A    LDR	R0, [PC, #552]
0x151E	0x4281    CMP	R1, R0
0x1520	0xD0B1    BEQ	L_vRF4463MainCommandProcessor282
0x1522	0xE7BF    B	L_vRF4463MainCommandProcessor283
L_vRF4463MainCommandProcessor271:
;DriverRF4463PROMain.c, 224 :: 		}
0x1524	0xF000BB28  B	L_vRF4463MainCommandProcessor284
L_vRF4463MainCommandProcessor269:
;DriverRF4463PROMain.c, 228 :: 		else if ( memcmp( CMD_RADIO_CHANNEL_SET, ucCommand, sizeof( CMD_RADIO_CHANNEL_SET ) ) == 0x00 ) {
0x1528	0xAC01    ADD	R4, SP, #4
0x152A	0x220C    MOVS	R2, #12
0x152C	0xB212    SXTH	R2, R2
0x152E	0x4621    MOV	R1, R4
0x1530	0x4886    LDR	R0, [PC, #536]
0x1532	0xF7FFF91B  BL	_memcmp+0
0x1536	0xBB20    CBNZ	R0, L_vRF4463MainCommandProcessor285
;DriverRF4463PROMain.c, 229 :: 		ulArgument = StrToInt( ucLongArgument );
0x1538	0xAC0A    ADD	R4, SP, #40
0x153A	0x4620    MOV	R0, R4
0x153C	0xF7FFF9F0  BL	_StrToInt+0
0x1540	0x9009    STR	R0, [SP, #36]
;DriverRF4463PROMain.c, 231 :: 		if ( ulArgument >= 0 && ulArgument <= 50 ) {
0x1542	0x9809    LDR	R0, [SP, #36]
0x1544	0x2800    CMP	R0, #0
0x1546	0xD311    BCC	L_vRF4463MainCommandProcessor288
0x1548	0x9809    LDR	R0, [SP, #36]
0x154A	0x2832    CMP	R0, #50
0x154C	0xD80E    BHI	L_vRF4463MainCommandProcessor288
L__vRF4463MainCommandProcessor425:
;DriverRF4463PROMain.c, 232 :: 		ucRF4463FreqChannel = ulArgument;    // Se aplica al ejecutar funciones de TX o RX
0x154E	0x9909    LDR	R1, [SP, #36]
0x1550	0x487F    LDR	R0, [PC, #508]
0x1552	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 233 :: 		vRF4463MainApplyChanges();
0x1554	0xF7FFF8C8  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 234 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1558	0x4879    LDR	R0, [PC, #484]
0x155A	0xF7FEFFD3  BL	_strlen+0
0x155E	0xB401    PUSH	(R0)
0x1560	0x4877    LDR	R0, [PC, #476]
0x1562	0xB401    PUSH	(R0)
0x1564	0xF7FFFC64  BL	_vUSART1Start_TX+0
0x1568	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 235 :: 		}
0x156A	0xE008    B	L_vRF4463MainCommandProcessor289
L_vRF4463MainCommandProcessor288:
;DriverRF4463PROMain.c, 237 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x156C	0x4875    LDR	R0, [PC, #468]
0x156E	0xF7FEFFC9  BL	_strlen+0
0x1572	0xB401    PUSH	(R0)
0x1574	0x4873    LDR	R0, [PC, #460]
0x1576	0xB401    PUSH	(R0)
0x1578	0xF7FFFC5A  BL	_vUSART1Start_TX+0
0x157C	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 238 :: 		}
L_vRF4463MainCommandProcessor289:
;DriverRF4463PROMain.c, 239 :: 		}
0x157E	0xF000BAFB  B	L_vRF4463MainCommandProcessor290
L_vRF4463MainCommandProcessor285:
;DriverRF4463PROMain.c, 243 :: 		else if ( memcmp( CMD_RADIO_BW_SET, ucCommand, sizeof( CMD_RADIO_BW_SET ) ) == 0x00 ) {
0x1582	0xAC01    ADD	R4, SP, #4
0x1584	0x2207    MOVS	R2, #7
0x1586	0xB212    SXTH	R2, R2
0x1588	0x4621    MOV	R1, R4
0x158A	0x4872    LDR	R0, [PC, #456]
0x158C	0xF7FFF8EE  BL	_memcmp+0
0x1590	0xBB30    CBNZ	R0, L_vRF4463MainCommandProcessor291
;DriverRF4463PROMain.c, 244 :: 		ulArgument = StrToInt( ucLongArgument );
0x1592	0xAC0A    ADD	R4, SP, #40
0x1594	0x4620    MOV	R0, R4
0x1596	0xF7FFF9C3  BL	_StrToInt+0
0x159A	0x9009    STR	R0, [SP, #36]
;DriverRF4463PROMain.c, 246 :: 		if ( ulArgument == 250 || ulArgument == 500 ) {
0x159C	0x9809    LDR	R0, [SP, #36]
0x159E	0x28FA    CMP	R0, #250
0x15A0	0xD004    BEQ	L__vRF4463MainCommandProcessor424
0x15A2	0x9809    LDR	R0, [SP, #36]
0x15A4	0xF5B07FFA  CMP	R0, #500
0x15A8	0xD000    BEQ	L__vRF4463MainCommandProcessor424
0x15AA	0xE00E    B	L_vRF4463MainCommandProcessor294
L__vRF4463MainCommandProcessor424:
;DriverRF4463PROMain.c, 247 :: 		ulRF4463Step = ulArgument;
0x15AC	0x9909    LDR	R1, [SP, #36]
0x15AE	0x486A    LDR	R0, [PC, #424]
0x15B0	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 248 :: 		vRF4463MainApplyChanges();
0x15B2	0xF7FFF899  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 249 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x15B6	0x4862    LDR	R0, [PC, #392]
0x15B8	0xF7FEFFA4  BL	_strlen+0
0x15BC	0xB401    PUSH	(R0)
0x15BE	0x4860    LDR	R0, [PC, #384]
0x15C0	0xB401    PUSH	(R0)
0x15C2	0xF7FFFC35  BL	_vUSART1Start_TX+0
0x15C6	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 250 :: 		}
0x15C8	0xE008    B	L_vRF4463MainCommandProcessor295
L_vRF4463MainCommandProcessor294:
;DriverRF4463PROMain.c, 252 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x15CA	0x485E    LDR	R0, [PC, #376]
0x15CC	0xF7FEFF9A  BL	_strlen+0
0x15D0	0xB401    PUSH	(R0)
0x15D2	0x485C    LDR	R0, [PC, #368]
0x15D4	0xB401    PUSH	(R0)
0x15D6	0xF7FFFC2B  BL	_vUSART1Start_TX+0
0x15DA	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 253 :: 		}
L_vRF4463MainCommandProcessor295:
;DriverRF4463PROMain.c, 254 :: 		}
0x15DC	0xF000BACC  B	L_vRF4463MainCommandProcessor296
L_vRF4463MainCommandProcessor291:
;DriverRF4463PROMain.c, 261 :: 		else if ( memcmp( CMD_RADIO_MODE_SET, ucCommand, sizeof( CMD_RADIO_MODE_SET ) ) == 0x00 ) {
0x15E0	0xAC01    ADD	R4, SP, #4
0x15E2	0x2209    MOVS	R2, #9
0x15E4	0xB212    SXTH	R2, R2
0x15E6	0x4621    MOV	R1, R4
0x15E8	0x485C    LDR	R0, [PC, #368]
0x15EA	0xF7FFF8BF  BL	_memcmp+0
0x15EE	0x2800    CMP	R0, #0
0x15F0	0xF040809B  BNE	L_vRF4463MainCommandProcessor297
;DriverRF4463PROMain.c, 263 :: 		ucCounterCommand = 0;
0x15F4	0x2000    MOVS	R0, #0
0x15F6	0xF88D0069  STRB	R0, [SP, #105]
;DriverRF4463PROMain.c, 265 :: 		while ( ucLongArgument[ ucCounterCommand ] != ucUSARTNull && ucCounterCommand < 32 ) {
L_vRF4463MainCommandProcessor298:
0x15FA	0xA90A    ADD	R1, SP, #40
0x15FC	0xF89D0069  LDRB	R0, [SP, #105]
0x1600	0x1808    ADDS	R0, R1, R0
0x1602	0x7801    LDRB	R1, [R0, #0]
0x1604	0x4856    LDR	R0, [PC, #344]
0x1606	0x7800    LDRB	R0, [R0, #0]
0x1608	0x4281    CMP	R1, R0
0x160A	0xD019    BEQ	L_vRF4463MainCommandProcessor299
0x160C	0xF89D0069  LDRB	R0, [SP, #105]
0x1610	0x2820    CMP	R0, #32
0x1612	0xD215    BCS	L_vRF4463MainCommandProcessor299
L__vRF4463MainCommandProcessor423:
;DriverRF4463PROMain.c, 266 :: 		ucLongArgument[ ucCounterCommand ] = toupper( ucLongArgument[ ucCounterCommand ] );
0x1614	0xA90A    ADD	R1, SP, #40
0x1616	0xF89D0069  LDRB	R0, [SP, #105]
0x161A	0x1808    ADDS	R0, R1, R0
0x161C	0x901B    STR	R0, [SP, #108]
0x161E	0xA90A    ADD	R1, SP, #40
0x1620	0xF89D0069  LDRB	R0, [SP, #105]
0x1624	0x1808    ADDS	R0, R1, R0
0x1626	0x7800    LDRB	R0, [R0, #0]
0x1628	0xB2C4    UXTB	R4, R0
0x162A	0xB2E0    UXTB	R0, R4
0x162C	0xF7FFF946  BL	_toupper+0
0x1630	0x991B    LDR	R1, [SP, #108]
0x1632	0x7008    STRB	R0, [R1, #0]
;DriverRF4463PROMain.c, 267 :: 		ucCounterCommand++;
0x1634	0xF89D0069  LDRB	R0, [SP, #105]
0x1638	0x1C40    ADDS	R0, R0, #1
0x163A	0xF88D0069  STRB	R0, [SP, #105]
;DriverRF4463PROMain.c, 268 :: 		}
0x163E	0xE7DC    B	L_vRF4463MainCommandProcessor298
L_vRF4463MainCommandProcessor299:
;DriverRF4463PROMain.c, 271 :: 		if ( memcmp( ARG_RADIO_MODE_STBY, ucLongArgument, sizeof( ARG_RADIO_MODE_STBY ) ) == 0x00 ) {
0x1640	0xAC0A    ADD	R4, SP, #40
0x1642	0x2205    MOVS	R2, #5
0x1644	0xB212    SXTH	R2, R2
0x1646	0x4621    MOV	R1, R4
0x1648	0x4846    LDR	R0, [PC, #280]
0x164A	0xF7FFF88F  BL	_memcmp+0
0x164E	0xB960    CBNZ	R0, L_vRF4463MainCommandProcessor302
;DriverRF4463PROMain.c, 272 :: 		ucRF4463Mode = rf_off;
0x1650	0x2104    MOVS	R1, #4
0x1652	0x4845    LDR	R0, [PC, #276]
0x1654	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 273 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_STBY, strlen( ANS_COMMAND_MODE_STBY ) );
0x1656	0x4845    LDR	R0, [PC, #276]
0x1658	0xF7FEFF54  BL	_strlen+0
0x165C	0xB401    PUSH	(R0)
0x165E	0x4843    LDR	R0, [PC, #268]
0x1660	0xB401    PUSH	(R0)
0x1662	0xF7FFFBE5  BL	_vUSART1Start_TX+0
0x1666	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 274 :: 		}
0x1668	0xE05E    B	L_vRF4463MainCommandProcessor303
L_vRF4463MainCommandProcessor302:
;DriverRF4463PROMain.c, 275 :: 		else if ( memcmp( ARG_RADIO_MODE_TX_CONT, ucLongArgument, sizeof( ARG_RADIO_MODE_TX_CONT ) ) == 0x00 ) {
0x166A	0xAC0A    ADD	R4, SP, #40
0x166C	0x2208    MOVS	R2, #8
0x166E	0xB212    SXTH	R2, R2
0x1670	0x4621    MOV	R1, R4
0x1672	0x483F    LDR	R0, [PC, #252]
0x1674	0xF7FFF87A  BL	_memcmp+0
0x1678	0xB970    CBNZ	R0, L_vRF4463MainCommandProcessor304
;DriverRF4463PROMain.c, 276 :: 		ucRF4463Mode = tx_test_mode;
0x167A	0x2102    MOVS	R1, #2
0x167C	0x483A    LDR	R0, [PC, #232]
0x167E	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 277 :: 		vRF4463MainApplyChanges();
0x1680	0xF7FFF832  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 278 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_TX_CONT, strlen( ANS_COMMAND_MODE_TX_CONT ) );
0x1684	0x483B    LDR	R0, [PC, #236]
0x1686	0xF7FEFF3D  BL	_strlen+0
0x168A	0xB401    PUSH	(R0)
0x168C	0x4839    LDR	R0, [PC, #228]
0x168E	0xB401    PUSH	(R0)
0x1690	0xF7FFFBCE  BL	_vUSART1Start_TX+0
0x1694	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 279 :: 		}
0x1696	0xE047    B	L_vRF4463MainCommandProcessor305
L_vRF4463MainCommandProcessor304:
;DriverRF4463PROMain.c, 280 :: 		else if ( memcmp( ARG_RADIO_MODE_RX_CONT, ucLongArgument, sizeof( ARG_RADIO_MODE_RX_CONT ) ) == 0x00 ) {
0x1698	0xAC0A    ADD	R4, SP, #40
0x169A	0x2208    MOVS	R2, #8
0x169C	0xB212    SXTH	R2, R2
0x169E	0x4621    MOV	R1, R4
0x16A0	0x4835    LDR	R0, [PC, #212]
0x16A2	0xF7FFF863  BL	_memcmp+0
0x16A6	0xB960    CBNZ	R0, L_vRF4463MainCommandProcessor306
;DriverRF4463PROMain.c, 281 :: 		ucRF4463Mode = rx_test_mode;
0x16A8	0x2103    MOVS	R1, #3
0x16AA	0x482F    LDR	R0, [PC, #188]
0x16AC	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 282 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_RX_CONT, strlen( ANS_COMMAND_MODE_RX_CONT ) );
0x16AE	0x4833    LDR	R0, [PC, #204]
0x16B0	0xF7FEFF28  BL	_strlen+0
0x16B4	0xB401    PUSH	(R0)
0x16B6	0x4831    LDR	R0, [PC, #196]
0x16B8	0xB401    PUSH	(R0)
0x16BA	0xF7FFFBB9  BL	_vUSART1Start_TX+0
0x16BE	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 283 :: 		}
0x16C0	0xE032    B	L_vRF4463MainCommandProcessor307
L_vRF4463MainCommandProcessor306:
;DriverRF4463PROMain.c, 284 :: 		else if ( memcmp( ARG_RADIO_MODE_TX_MASTER, ucLongArgument, sizeof( ARG_RADIO_MODE_TX_MASTER ) ) == 0x00 ) {
0x16C2	0xAC0A    ADD	R4, SP, #40
0x16C4	0x220A    MOVS	R2, #10
0x16C6	0xB212    SXTH	R2, R2
0x16C8	0x4621    MOV	R1, R4
0x16CA	0x482D    LDR	R0, [PC, #180]
0x16CC	0xF7FFF84E  BL	_memcmp+0
0x16D0	0xB960    CBNZ	R0, L_vRF4463MainCommandProcessor308
;DriverRF4463PROMain.c, 285 :: 		ucRF4463Mode = master_mode;
0x16D2	0x2100    MOVS	R1, #0
0x16D4	0x4824    LDR	R0, [PC, #144]
0x16D6	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 286 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_TX_MASTER, strlen( ANS_COMMAND_MODE_TX_MASTER ) );
0x16D8	0x482A    LDR	R0, [PC, #168]
0x16DA	0xF7FEFF13  BL	_strlen+0
0x16DE	0xB401    PUSH	(R0)
0x16E0	0x4828    LDR	R0, [PC, #160]
0x16E2	0xB401    PUSH	(R0)
0x16E4	0xF7FFFBA4  BL	_vUSART1Start_TX+0
0x16E8	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 287 :: 		}
0x16EA	0xE01D    B	L_vRF4463MainCommandProcessor309
L_vRF4463MainCommandProcessor308:
;DriverRF4463PROMain.c, 288 :: 		else if ( memcmp( ARG_RADIO_MODE_RX_SLAVE, ucLongArgument, sizeof( ARG_RADIO_MODE_RX_SLAVE ) ) == 0x00 ) {
0x16EC	0xAC0A    ADD	R4, SP, #40
0x16EE	0x2209    MOVS	R2, #9
0x16F0	0xB212    SXTH	R2, R2
0x16F2	0x4621    MOV	R1, R4
0x16F4	0x4824    LDR	R0, [PC, #144]
0x16F6	0xF7FFF839  BL	_memcmp+0
0x16FA	0xB960    CBNZ	R0, L_vRF4463MainCommandProcessor310
;DriverRF4463PROMain.c, 289 :: 		ucRF4463Mode = slave_mode;
0x16FC	0x2101    MOVS	R1, #1
0x16FE	0x481A    LDR	R0, [PC, #104]
0x1700	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 290 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_RX_SLAVE, strlen( ANS_COMMAND_MODE_RX_SLAVE ) );
0x1702	0x4822    LDR	R0, [PC, #136]
0x1704	0xF7FEFEFE  BL	_strlen+0
0x1708	0xB401    PUSH	(R0)
0x170A	0x4820    LDR	R0, [PC, #128]
0x170C	0xB401    PUSH	(R0)
0x170E	0xF7FFFB8F  BL	_vUSART1Start_TX+0
0x1712	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 291 :: 		}
0x1714	0xE008    B	L_vRF4463MainCommandProcessor311
L_vRF4463MainCommandProcessor310:
;DriverRF4463PROMain.c, 293 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1716	0x480B    LDR	R0, [PC, #44]
0x1718	0xF7FEFEF4  BL	_strlen+0
0x171C	0xB401    PUSH	(R0)
0x171E	0x4809    LDR	R0, [PC, #36]
0x1720	0xB401    PUSH	(R0)
0x1722	0xF7FFFB85  BL	_vUSART1Start_TX+0
0x1726	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 294 :: 		}
L_vRF4463MainCommandProcessor311:
L_vRF4463MainCommandProcessor309:
L_vRF4463MainCommandProcessor307:
L_vRF4463MainCommandProcessor305:
L_vRF4463MainCommandProcessor303:
;DriverRF4463PROMain.c, 295 :: 		}
0x1728	0xE226    B	L_vRF4463MainCommandProcessor312
L_vRF4463MainCommandProcessor297:
;DriverRF4463PROMain.c, 300 :: 		else if ( memcmp( CMD_RADIO_PACKET_SEND, ucCommand, sizeof( CMD_RADIO_PACKET_SEND ) ) == 0x00 ) {
0x172A	0xAC01    ADD	R4, SP, #4
0x172C	0x220C    MOVS	R2, #12
0x172E	0xB212    SXTH	R2, R2
0x1730	0x4621    MOV	R1, R4
0x1732	0x4817    LDR	R0, [PC, #92]
0x1734	0xF7FFF81A  BL	_memcmp+0
0x1738	0xF000B82C  B	#88
0x173C	0x22A72000  	_ucRF4463Rate+0
0x1740	0x20162000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x1744	0x203E2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x1748	0xA1200007  	#500000
0x174C	0x20702000  	_CMD_RADIO_CHANNEL_SET+0
0x1750	0x207C2000  	_ucRF4463FreqChannel+0
0x1754	0x207D2000  	_CMD_RADIO_BW_SET+0
0x1758	0x20842000  	_ulRF4463Step+0
0x175C	0x20882000  	_CMD_RADIO_MODE_SET+0
0x1760	0x20912000  	_ucUSARTNull+0
0x1764	0x20922000  	_ARG_RADIO_MODE_STBY+0
0x1768	0x22A82000  	_ucRF4463Mode+0
0x176C	0x20972000  	_ANS_COMMAND_MODE_STBY+0
0x1770	0x20B92000  	_ARG_RADIO_MODE_TX_CONT+0
0x1774	0x20C12000  	_ANS_COMMAND_MODE_TX_CONT+0
0x1778	0x20E32000  	_ARG_RADIO_MODE_RX_CONT+0
0x177C	0x20EB2000  	_ANS_COMMAND_MODE_RX_CONT+0
0x1780	0x210D2000  	_ARG_RADIO_MODE_TX_MASTER+0
0x1784	0x21172000  	_ANS_COMMAND_MODE_TX_MASTER+0
0x1788	0x213B2000  	_ARG_RADIO_MODE_RX_SLAVE+0
0x178C	0x21442000  	_ANS_COMMAND_MODE_RX_SLAVE+0
0x1790	0x21672000  	_CMD_RADIO_PACKET_SEND+0
0x1794	0xB970    CBNZ	R0, L_vRF4463MainCommandProcessor313
;DriverRF4463PROMain.c, 304 :: 		ulArgument = StrToLong( ucLongArgument );
0x1796	0xAC0A    ADD	R4, SP, #40
0x1798	0x4620    MOV	R0, R4
0x179A	0xF7FFF951  BL	_StrToLong+0
0x179E	0x9009    STR	R0, [SP, #36]
;DriverRF4463PROMain.c, 306 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x17A0	0x48B0    LDR	R0, [PC, #704]
0x17A2	0xF7FEFEAF  BL	_strlen+0
0x17A6	0xB401    PUSH	(R0)
0x17A8	0x48AE    LDR	R0, [PC, #696]
0x17AA	0xB401    PUSH	(R0)
0x17AC	0xF7FFFB40  BL	_vUSART1Start_TX+0
0x17B0	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 308 :: 		}
0x17B2	0xE1E1    B	L_vRF4463MainCommandProcessor314
L_vRF4463MainCommandProcessor313:
;DriverRF4463PROMain.c, 313 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_1_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_1_SET ) ) == 0x00 ) {
0x17B4	0xAC01    ADD	R4, SP, #4
0x17B6	0x220C    MOVS	R2, #12
0x17B8	0xB212    SXTH	R2, R2
0x17BA	0x4621    MOV	R1, R4
0x17BC	0x48AA    LDR	R0, [PC, #680]
0x17BE	0xF7FEFFD5  BL	_memcmp+0
0x17C2	0x2800    CMP	R0, #0
0x17C4	0xD12A    BNE	L_vRF4463MainCommandProcessor315
;DriverRF4463PROMain.c, 314 :: 		ulArgument = StrToLong( ucLongArgument );
0x17C6	0xAC0A    ADD	R4, SP, #40
0x17C8	0x4620    MOV	R0, R4
0x17CA	0xF7FFF939  BL	_StrToLong+0
0x17CE	0x9009    STR	R0, [SP, #36]
;DriverRF4463PROMain.c, 315 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x17D0	0x9809    LDR	R0, [SP, #36]
0x17D2	0x2800    CMP	R0, #0
0x17D4	0xD318    BCC	L_vRF4463MainCommandProcessor318
0x17D6	0x9809    LDR	R0, [SP, #36]
0x17D8	0xF1B00FFF  CMP	R0, #255
0x17DC	0xD814    BHI	L_vRF4463MainCommandProcessor318
L__vRF4463MainCommandProcessor422:
;DriverRF4463PROMain.c, 316 :: 		ucRF4463ByteMatch1 = ulArgument;
0x17DE	0x9909    LDR	R1, [SP, #36]
0x17E0	0x48A2    LDR	R0, [PC, #648]
0x17E2	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 317 :: 		ucRF4463MatchEnabled = 1;
0x17E4	0x2101    MOVS	R1, #1
0x17E6	0x48A2    LDR	R0, [PC, #648]
0x17E8	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 318 :: 		ucRF4463MatchEnableReg = 0x40;
0x17EA	0x2140    MOVS	R1, #64
0x17EC	0x48A1    LDR	R0, [PC, #644]
0x17EE	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 319 :: 		vRF4463MainApplyChanges();
0x17F0	0xF7FEFF7A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 320 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x17F4	0x48A0    LDR	R0, [PC, #640]
0x17F6	0xF7FEFE85  BL	_strlen+0
0x17FA	0xB401    PUSH	(R0)
0x17FC	0x489E    LDR	R0, [PC, #632]
0x17FE	0xB401    PUSH	(R0)
0x1800	0xF7FFFB16  BL	_vUSART1Start_TX+0
0x1804	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 321 :: 		}
0x1806	0xE008    B	L_vRF4463MainCommandProcessor319
L_vRF4463MainCommandProcessor318:
;DriverRF4463PROMain.c, 323 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1808	0x4896    LDR	R0, [PC, #600]
0x180A	0xF7FEFE7B  BL	_strlen+0
0x180E	0xB401    PUSH	(R0)
0x1810	0x4894    LDR	R0, [PC, #592]
0x1812	0xB401    PUSH	(R0)
0x1814	0xF7FFFB0C  BL	_vUSART1Start_TX+0
0x1818	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 324 :: 		}
L_vRF4463MainCommandProcessor319:
;DriverRF4463PROMain.c, 325 :: 		}
0x181A	0xE1AD    B	L_vRF4463MainCommandProcessor320
L_vRF4463MainCommandProcessor315:
;DriverRF4463PROMain.c, 329 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_2_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_2_SET ) ) == 0x00 ) {
0x181C	0xAC01    ADD	R4, SP, #4
0x181E	0x220C    MOVS	R2, #12
0x1820	0xB212    SXTH	R2, R2
0x1822	0x4621    MOV	R1, R4
0x1824	0x4895    LDR	R0, [PC, #596]
0x1826	0xF7FEFFA1  BL	_memcmp+0
0x182A	0x2800    CMP	R0, #0
0x182C	0xD12A    BNE	L_vRF4463MainCommandProcessor321
;DriverRF4463PROMain.c, 330 :: 		ulArgument = StrToLong( ucLongArgument );
0x182E	0xAC0A    ADD	R4, SP, #40
0x1830	0x4620    MOV	R0, R4
0x1832	0xF7FFF905  BL	_StrToLong+0
0x1836	0x9009    STR	R0, [SP, #36]
;DriverRF4463PROMain.c, 331 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1838	0x9809    LDR	R0, [SP, #36]
0x183A	0x2800    CMP	R0, #0
0x183C	0xD318    BCC	L_vRF4463MainCommandProcessor324
0x183E	0x9809    LDR	R0, [SP, #36]
0x1840	0xF1B00FFF  CMP	R0, #255
0x1844	0xD814    BHI	L_vRF4463MainCommandProcessor324
L__vRF4463MainCommandProcessor421:
;DriverRF4463PROMain.c, 332 :: 		ucRF4463ByteMatch2 = ulArgument;
0x1846	0x9909    LDR	R1, [SP, #36]
0x1848	0x488D    LDR	R0, [PC, #564]
0x184A	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 333 :: 		ucRF4463MatchEnabled = 1;
0x184C	0x2101    MOVS	R1, #1
0x184E	0x4888    LDR	R0, [PC, #544]
0x1850	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 334 :: 		ucRF4463MatchEnableReg = 0x40;
0x1852	0x2140    MOVS	R1, #64
0x1854	0x4887    LDR	R0, [PC, #540]
0x1856	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 335 :: 		vRF4463MainApplyChanges();
0x1858	0xF7FEFF46  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 336 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x185C	0x4886    LDR	R0, [PC, #536]
0x185E	0xF7FEFE51  BL	_strlen+0
0x1862	0xB401    PUSH	(R0)
0x1864	0x4884    LDR	R0, [PC, #528]
0x1866	0xB401    PUSH	(R0)
0x1868	0xF7FFFAE2  BL	_vUSART1Start_TX+0
0x186C	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 337 :: 		}
0x186E	0xE008    B	L_vRF4463MainCommandProcessor325
L_vRF4463MainCommandProcessor324:
;DriverRF4463PROMain.c, 339 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1870	0x487C    LDR	R0, [PC, #496]
0x1872	0xF7FEFE47  BL	_strlen+0
0x1876	0xB401    PUSH	(R0)
0x1878	0x487A    LDR	R0, [PC, #488]
0x187A	0xB401    PUSH	(R0)
0x187C	0xF7FFFAD8  BL	_vUSART1Start_TX+0
0x1880	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 340 :: 		}
L_vRF4463MainCommandProcessor325:
;DriverRF4463PROMain.c, 341 :: 		}
0x1882	0xE179    B	L_vRF4463MainCommandProcessor326
L_vRF4463MainCommandProcessor321:
;DriverRF4463PROMain.c, 345 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_3_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_3_SET ) ) == 0x00 ) {
0x1884	0xAC01    ADD	R4, SP, #4
0x1886	0x220C    MOVS	R2, #12
0x1888	0xB212    SXTH	R2, R2
0x188A	0x4621    MOV	R1, R4
0x188C	0x487D    LDR	R0, [PC, #500]
0x188E	0xF7FEFF6D  BL	_memcmp+0
0x1892	0x2800    CMP	R0, #0
0x1894	0xD12A    BNE	L_vRF4463MainCommandProcessor327
;DriverRF4463PROMain.c, 346 :: 		ulArgument = StrToLong( ucLongArgument );
0x1896	0xAC0A    ADD	R4, SP, #40
0x1898	0x4620    MOV	R0, R4
0x189A	0xF7FFF8D1  BL	_StrToLong+0
0x189E	0x9009    STR	R0, [SP, #36]
;DriverRF4463PROMain.c, 347 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x18A0	0x9809    LDR	R0, [SP, #36]
0x18A2	0x2800    CMP	R0, #0
0x18A4	0xD318    BCC	L_vRF4463MainCommandProcessor330
0x18A6	0x9809    LDR	R0, [SP, #36]
0x18A8	0xF1B00FFF  CMP	R0, #255
0x18AC	0xD814    BHI	L_vRF4463MainCommandProcessor330
L__vRF4463MainCommandProcessor420:
;DriverRF4463PROMain.c, 348 :: 		ucRF4463ByteMatch3 = ulArgument;
0x18AE	0x9909    LDR	R1, [SP, #36]
0x18B0	0x4875    LDR	R0, [PC, #468]
0x18B2	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 349 :: 		ucRF4463MatchEnabled = 1;
0x18B4	0x2101    MOVS	R1, #1
0x18B6	0x486E    LDR	R0, [PC, #440]
0x18B8	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 350 :: 		ucRF4463MatchEnableReg = 0x40;
0x18BA	0x2140    MOVS	R1, #64
0x18BC	0x486D    LDR	R0, [PC, #436]
0x18BE	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 351 :: 		vRF4463MainApplyChanges();
0x18C0	0xF7FEFF12  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 352 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x18C4	0x486C    LDR	R0, [PC, #432]
0x18C6	0xF7FEFE1D  BL	_strlen+0
0x18CA	0xB401    PUSH	(R0)
0x18CC	0x486A    LDR	R0, [PC, #424]
0x18CE	0xB401    PUSH	(R0)
0x18D0	0xF7FFFAAE  BL	_vUSART1Start_TX+0
0x18D4	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 353 :: 		}
0x18D6	0xE008    B	L_vRF4463MainCommandProcessor331
L_vRF4463MainCommandProcessor330:
;DriverRF4463PROMain.c, 355 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x18D8	0x4862    LDR	R0, [PC, #392]
0x18DA	0xF7FEFE13  BL	_strlen+0
0x18DE	0xB401    PUSH	(R0)
0x18E0	0x4860    LDR	R0, [PC, #384]
0x18E2	0xB401    PUSH	(R0)
0x18E4	0xF7FFFAA4  BL	_vUSART1Start_TX+0
0x18E8	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 356 :: 		}
L_vRF4463MainCommandProcessor331:
;DriverRF4463PROMain.c, 357 :: 		}
0x18EA	0xE145    B	L_vRF4463MainCommandProcessor332
L_vRF4463MainCommandProcessor327:
;DriverRF4463PROMain.c, 361 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_4_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_4_SET ) ) == 0x00 ) {
0x18EC	0xAC01    ADD	R4, SP, #4
0x18EE	0x220C    MOVS	R2, #12
0x18F0	0xB212    SXTH	R2, R2
0x18F2	0x4621    MOV	R1, R4
0x18F4	0x4865    LDR	R0, [PC, #404]
0x18F6	0xF7FEFF39  BL	_memcmp+0
0x18FA	0x2800    CMP	R0, #0
0x18FC	0xD12A    BNE	L_vRF4463MainCommandProcessor333
;DriverRF4463PROMain.c, 362 :: 		ulArgument = StrToLong( ucLongArgument );
0x18FE	0xAC0A    ADD	R4, SP, #40
0x1900	0x4620    MOV	R0, R4
0x1902	0xF7FFF89D  BL	_StrToLong+0
0x1906	0x9009    STR	R0, [SP, #36]
;DriverRF4463PROMain.c, 363 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1908	0x9809    LDR	R0, [SP, #36]
0x190A	0x2800    CMP	R0, #0
0x190C	0xD318    BCC	L_vRF4463MainCommandProcessor336
0x190E	0x9809    LDR	R0, [SP, #36]
0x1910	0xF1B00FFF  CMP	R0, #255
0x1914	0xD814    BHI	L_vRF4463MainCommandProcessor336
L__vRF4463MainCommandProcessor419:
;DriverRF4463PROMain.c, 364 :: 		ucRF4463ByteMatch4 = ulArgument;
0x1916	0x9909    LDR	R1, [SP, #36]
0x1918	0x485D    LDR	R0, [PC, #372]
0x191A	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 365 :: 		ucRF4463MatchEnabled = 1;
0x191C	0x2101    MOVS	R1, #1
0x191E	0x4854    LDR	R0, [PC, #336]
0x1920	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 366 :: 		ucRF4463MatchEnableReg = 0x40;
0x1922	0x2140    MOVS	R1, #64
0x1924	0x4853    LDR	R0, [PC, #332]
0x1926	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 367 :: 		vRF4463MainApplyChanges();
0x1928	0xF7FEFEDE  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 368 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x192C	0x4852    LDR	R0, [PC, #328]
0x192E	0xF7FEFDE9  BL	_strlen+0
0x1932	0xB401    PUSH	(R0)
0x1934	0x4850    LDR	R0, [PC, #320]
0x1936	0xB401    PUSH	(R0)
0x1938	0xF7FFFA7A  BL	_vUSART1Start_TX+0
0x193C	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 369 :: 		}
0x193E	0xE008    B	L_vRF4463MainCommandProcessor337
L_vRF4463MainCommandProcessor336:
;DriverRF4463PROMain.c, 371 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1940	0x4848    LDR	R0, [PC, #288]
0x1942	0xF7FEFDDF  BL	_strlen+0
0x1946	0xB401    PUSH	(R0)
0x1948	0x4846    LDR	R0, [PC, #280]
0x194A	0xB401    PUSH	(R0)
0x194C	0xF7FFFA70  BL	_vUSART1Start_TX+0
0x1950	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 372 :: 		}
L_vRF4463MainCommandProcessor337:
;DriverRF4463PROMain.c, 373 :: 		}
0x1952	0xE111    B	L_vRF4463MainCommandProcessor338
L_vRF4463MainCommandProcessor333:
;DriverRF4463PROMain.c, 377 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_1_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_1_SET ) ) == 0x00 ) {
0x1954	0xAC01    ADD	R4, SP, #4
0x1956	0x220B    MOVS	R2, #11
0x1958	0xB212    SXTH	R2, R2
0x195A	0x4621    MOV	R1, R4
0x195C	0x484D    LDR	R0, [PC, #308]
0x195E	0xF7FEFF05  BL	_memcmp+0
0x1962	0x2800    CMP	R0, #0
0x1964	0xD127    BNE	L_vRF4463MainCommandProcessor339
;DriverRF4463PROMain.c, 378 :: 		ulArgument = StrToLong( ucLongArgument );
0x1966	0xAC0A    ADD	R4, SP, #40
0x1968	0x4620    MOV	R0, R4
0x196A	0xF7FFF869  BL	_StrToLong+0
0x196E	0x9009    STR	R0, [SP, #36]
;DriverRF4463PROMain.c, 379 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1970	0x9809    LDR	R0, [SP, #36]
0x1972	0x2800    CMP	R0, #0
0x1974	0xD315    BCC	L_vRF4463MainCommandProcessor342
0x1976	0x9809    LDR	R0, [SP, #36]
0x1978	0xF1B00FFF  CMP	R0, #255
0x197C	0xD811    BHI	L_vRF4463MainCommandProcessor342
L__vRF4463MainCommandProcessor418:
;DriverRF4463PROMain.c, 380 :: 		ucRF4463ByteMask1 = ulArgument;
0x197E	0x9909    LDR	R1, [SP, #36]
0x1980	0x4845    LDR	R0, [PC, #276]
0x1982	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 381 :: 		ucRF4463MatchEnabled = 1;
0x1984	0x2101    MOVS	R1, #1
0x1986	0x483A    LDR	R0, [PC, #232]
0x1988	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 382 :: 		vRF4463MainApplyChanges();
0x198A	0xF7FEFEAD  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 383 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x198E	0x483A    LDR	R0, [PC, #232]
0x1990	0xF7FEFDB8  BL	_strlen+0
0x1994	0xB401    PUSH	(R0)
0x1996	0x4838    LDR	R0, [PC, #224]
0x1998	0xB401    PUSH	(R0)
0x199A	0xF7FFFA49  BL	_vUSART1Start_TX+0
0x199E	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 384 :: 		}
0x19A0	0xE008    B	L_vRF4463MainCommandProcessor343
L_vRF4463MainCommandProcessor342:
;DriverRF4463PROMain.c, 386 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x19A2	0x4830    LDR	R0, [PC, #192]
0x19A4	0xF7FEFDAE  BL	_strlen+0
0x19A8	0xB401    PUSH	(R0)
0x19AA	0x482E    LDR	R0, [PC, #184]
0x19AC	0xB401    PUSH	(R0)
0x19AE	0xF7FFFA3F  BL	_vUSART1Start_TX+0
0x19B2	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 387 :: 		}
L_vRF4463MainCommandProcessor343:
;DriverRF4463PROMain.c, 388 :: 		}
0x19B4	0xE0E0    B	L_vRF4463MainCommandProcessor344
L_vRF4463MainCommandProcessor339:
;DriverRF4463PROMain.c, 392 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_2_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_2_SET ) ) == 0x00 ) {
0x19B6	0xAC01    ADD	R4, SP, #4
0x19B8	0x220B    MOVS	R2, #11
0x19BA	0xB212    SXTH	R2, R2
0x19BC	0x4621    MOV	R1, R4
0x19BE	0x4837    LDR	R0, [PC, #220]
0x19C0	0xF7FEFED4  BL	_memcmp+0
0x19C4	0x2800    CMP	R0, #0
0x19C6	0xD127    BNE	L_vRF4463MainCommandProcessor345
;DriverRF4463PROMain.c, 393 :: 		ulArgument = StrToLong( ucLongArgument );
0x19C8	0xAC0A    ADD	R4, SP, #40
0x19CA	0x4620    MOV	R0, R4
0x19CC	0xF7FFF838  BL	_StrToLong+0
0x19D0	0x9009    STR	R0, [SP, #36]
;DriverRF4463PROMain.c, 394 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x19D2	0x9809    LDR	R0, [SP, #36]
0x19D4	0x2800    CMP	R0, #0
0x19D6	0xD315    BCC	L_vRF4463MainCommandProcessor348
0x19D8	0x9809    LDR	R0, [SP, #36]
0x19DA	0xF1B00FFF  CMP	R0, #255
0x19DE	0xD811    BHI	L_vRF4463MainCommandProcessor348
L__vRF4463MainCommandProcessor417:
;DriverRF4463PROMain.c, 395 :: 		ucRF4463ByteMask2 = ulArgument;
0x19E0	0x9909    LDR	R1, [SP, #36]
0x19E2	0x482F    LDR	R0, [PC, #188]
0x19E4	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 396 :: 		ucRF4463MatchEnabled = 1;
0x19E6	0x2101    MOVS	R1, #1
0x19E8	0x4821    LDR	R0, [PC, #132]
0x19EA	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 397 :: 		vRF4463MainApplyChanges();
0x19EC	0xF7FEFE7C  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 398 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x19F0	0x4821    LDR	R0, [PC, #132]
0x19F2	0xF7FEFD87  BL	_strlen+0
0x19F6	0xB401    PUSH	(R0)
0x19F8	0x481F    LDR	R0, [PC, #124]
0x19FA	0xB401    PUSH	(R0)
0x19FC	0xF7FFFA18  BL	_vUSART1Start_TX+0
0x1A00	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 399 :: 		}
0x1A02	0xE008    B	L_vRF4463MainCommandProcessor349
L_vRF4463MainCommandProcessor348:
;DriverRF4463PROMain.c, 401 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1A04	0x4817    LDR	R0, [PC, #92]
0x1A06	0xF7FEFD7D  BL	_strlen+0
0x1A0A	0xB401    PUSH	(R0)
0x1A0C	0x4815    LDR	R0, [PC, #84]
0x1A0E	0xB401    PUSH	(R0)
0x1A10	0xF7FFFA0E  BL	_vUSART1Start_TX+0
0x1A14	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 402 :: 		}
L_vRF4463MainCommandProcessor349:
;DriverRF4463PROMain.c, 403 :: 		}
0x1A16	0xE0AF    B	L_vRF4463MainCommandProcessor350
L_vRF4463MainCommandProcessor345:
;DriverRF4463PROMain.c, 407 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_3_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_3_SET ) ) == 0x00 ) {
0x1A18	0xAC01    ADD	R4, SP, #4
0x1A1A	0x220B    MOVS	R2, #11
0x1A1C	0xB212    SXTH	R2, R2
0x1A1E	0x4621    MOV	R1, R4
0x1A20	0x4820    LDR	R0, [PC, #128]
0x1A22	0xF7FEFEA3  BL	_memcmp+0
0x1A26	0x2800    CMP	R0, #0
0x1A28	0xD14C    BNE	L_vRF4463MainCommandProcessor351
;DriverRF4463PROMain.c, 408 :: 		ulArgument = StrToLong( ucLongArgument );
0x1A2A	0xAC0A    ADD	R4, SP, #40
0x1A2C	0x4620    MOV	R0, R4
0x1A2E	0xF7FFF807  BL	_StrToLong+0
0x1A32	0x9009    STR	R0, [SP, #36]
;DriverRF4463PROMain.c, 409 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1A34	0x9809    LDR	R0, [SP, #36]
0x1A36	0x2800    CMP	R0, #0
0x1A38	0xD33A    BCC	L_vRF4463MainCommandProcessor354
0x1A3A	0x9809    LDR	R0, [SP, #36]
0x1A3C	0xF1B00FFF  CMP	R0, #255
0x1A40	0xD836    BHI	L_vRF4463MainCommandProcessor354
L__vRF4463MainCommandProcessor416:
;DriverRF4463PROMain.c, 410 :: 		ucRF4463ByteMask3 = ulArgument;
0x1A42	0x9909    LDR	R1, [SP, #36]
0x1A44	0x4818    LDR	R0, [PC, #96]
0x1A46	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 411 :: 		ucRF4463MatchEnabled = 1;
0x1A48	0x2101    MOVS	R1, #1
0x1A4A	0x4809    LDR	R0, [PC, #36]
0x1A4C	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 412 :: 		vRF4463MainApplyChanges();
0x1A4E	0xF7FEFE4B  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 413 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1A52	0x4809    LDR	R0, [PC, #36]
0x1A54	0xF7FEFD56  BL	_strlen+0
0x1A58	0xB401    PUSH	(R0)
0x1A5A	0x4807    LDR	R0, [PC, #28]
0x1A5C	0xB401    PUSH	(R0)
0x1A5E	0xF7FFF9E7  BL	_vUSART1Start_TX+0
0x1A62	0xE023    B	#70
0x1A64	0x203E2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x1A68	0x21732000  	_CMD_RADIO_MATCH_BYTE_1_SET+0
0x1A6C	0x217F2000  	_ucRF4463ByteMatch1+0
0x1A70	0x21802000  	_ucRF4463MatchEnabled+0
0x1A74	0x21812000  	_ucRF4463MatchEnableReg+0
0x1A78	0x20162000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x1A7C	0x21822000  	_CMD_RADIO_MATCH_BYTE_2_SET+0
0x1A80	0x218E2000  	_ucRF4463ByteMatch2+0
0x1A84	0x218F2000  	_CMD_RADIO_MATCH_BYTE_3_SET+0
0x1A88	0x219B2000  	_ucRF4463ByteMatch3+0
0x1A8C	0x219C2000  	_CMD_RADIO_MATCH_BYTE_4_SET+0
0x1A90	0x21A82000  	_ucRF4463ByteMatch4+0
0x1A94	0x21A92000  	_CMD_RADIO_MATCH_MASK_1_SET+0
0x1A98	0x21B42000  	_ucRF4463ByteMask1+0
0x1A9C	0x21B52000  	_CMD_RADIO_MATCH_MASK_2_SET+0
0x1AA0	0x21C02000  	_ucRF4463ByteMask2+0
0x1AA4	0x21C12000  	_CMD_RADIO_MATCH_MASK_3_SET+0
0x1AA8	0x21CC2000  	_ucRF4463ByteMask3+0
0x1AAC	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 414 :: 		}
0x1AAE	0xE008    B	L_vRF4463MainCommandProcessor355
L_vRF4463MainCommandProcessor354:
;DriverRF4463PROMain.c, 416 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1AB0	0x4833    LDR	R0, [PC, #204]
0x1AB2	0xF7FEFD27  BL	_strlen+0
0x1AB6	0xB401    PUSH	(R0)
0x1AB8	0x4831    LDR	R0, [PC, #196]
0x1ABA	0xB401    PUSH	(R0)
0x1ABC	0xF7FFF9B8  BL	_vUSART1Start_TX+0
0x1AC0	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 417 :: 		}
L_vRF4463MainCommandProcessor355:
;DriverRF4463PROMain.c, 418 :: 		}
0x1AC2	0xE059    B	L_vRF4463MainCommandProcessor356
L_vRF4463MainCommandProcessor351:
;DriverRF4463PROMain.c, 422 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_4_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_4_SET ) ) == 0x00 ) {
0x1AC4	0xAC01    ADD	R4, SP, #4
0x1AC6	0x220B    MOVS	R2, #11
0x1AC8	0xB212    SXTH	R2, R2
0x1ACA	0x4621    MOV	R1, R4
0x1ACC	0x482D    LDR	R0, [PC, #180]
0x1ACE	0xF7FEFE4D  BL	_memcmp+0
0x1AD2	0x2800    CMP	R0, #0
0x1AD4	0xD127    BNE	L_vRF4463MainCommandProcessor357
;DriverRF4463PROMain.c, 423 :: 		ulArgument = StrToLong( ucLongArgument );
0x1AD6	0xAC0A    ADD	R4, SP, #40
0x1AD8	0x4620    MOV	R0, R4
0x1ADA	0xF7FEFFB1  BL	_StrToLong+0
0x1ADE	0x9009    STR	R0, [SP, #36]
;DriverRF4463PROMain.c, 424 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1AE0	0x9809    LDR	R0, [SP, #36]
0x1AE2	0x2800    CMP	R0, #0
0x1AE4	0xD315    BCC	L_vRF4463MainCommandProcessor360
0x1AE6	0x9809    LDR	R0, [SP, #36]
0x1AE8	0xF1B00FFF  CMP	R0, #255
0x1AEC	0xD811    BHI	L_vRF4463MainCommandProcessor360
L__vRF4463MainCommandProcessor415:
;DriverRF4463PROMain.c, 425 :: 		ucRF4463ByteMask4 = ulArgument;
0x1AEE	0x9909    LDR	R1, [SP, #36]
0x1AF0	0x4825    LDR	R0, [PC, #148]
0x1AF2	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 426 :: 		ucRF4463MatchEnabled = 1;
0x1AF4	0x2101    MOVS	R1, #1
0x1AF6	0x4825    LDR	R0, [PC, #148]
0x1AF8	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 427 :: 		vRF4463MainApplyChanges();
0x1AFA	0xF7FEFDF5  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 428 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1AFE	0x4824    LDR	R0, [PC, #144]
0x1B00	0xF7FEFD00  BL	_strlen+0
0x1B04	0xB401    PUSH	(R0)
0x1B06	0x4822    LDR	R0, [PC, #136]
0x1B08	0xB401    PUSH	(R0)
0x1B0A	0xF7FFF991  BL	_vUSART1Start_TX+0
0x1B0E	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 429 :: 		}
0x1B10	0xE008    B	L_vRF4463MainCommandProcessor361
L_vRF4463MainCommandProcessor360:
;DriverRF4463PROMain.c, 431 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1B12	0x481B    LDR	R0, [PC, #108]
0x1B14	0xF7FEFCF6  BL	_strlen+0
0x1B18	0xB401    PUSH	(R0)
0x1B1A	0x4819    LDR	R0, [PC, #100]
0x1B1C	0xB401    PUSH	(R0)
0x1B1E	0xF7FFF987  BL	_vUSART1Start_TX+0
0x1B22	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 432 :: 		}
L_vRF4463MainCommandProcessor361:
;DriverRF4463PROMain.c, 433 :: 		}
0x1B24	0xE028    B	L_vRF4463MainCommandProcessor362
L_vRF4463MainCommandProcessor357:
;DriverRF4463PROMain.c, 437 :: 		else if ( memcmp( CMD_RADIO_MATCH_UNSET, ucCommand, sizeof( CMD_RADIO_MATCH_UNSET ) ) == 0x00 ) {
0x1B26	0xAC01    ADD	R4, SP, #4
0x1B28	0x220C    MOVS	R2, #12
0x1B2A	0xB212    SXTH	R2, R2
0x1B2C	0x4621    MOV	R1, R4
0x1B2E	0x4819    LDR	R0, [PC, #100]
0x1B30	0xF7FEFE1C  BL	_memcmp+0
0x1B34	0xB970    CBNZ	R0, L_vRF4463MainCommandProcessor363
;DriverRF4463PROMain.c, 439 :: 		ucRF4463MatchEnableReg = 1;
0x1B36	0x2101    MOVS	R1, #1
0x1B38	0x4817    LDR	R0, [PC, #92]
0x1B3A	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 440 :: 		vRF4463MainApplyChanges();
0x1B3C	0xF7FEFDD4  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 441 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x1B40	0x4813    LDR	R0, [PC, #76]
0x1B42	0xF7FEFCDF  BL	_strlen+0
0x1B46	0xB401    PUSH	(R0)
0x1B48	0x4811    LDR	R0, [PC, #68]
0x1B4A	0xB401    PUSH	(R0)
0x1B4C	0xF7FFF970  BL	_vUSART1Start_TX+0
0x1B50	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 446 :: 		}
0x1B52	0xE011    B	L_vRF4463MainCommandProcessor364
L_vRF4463MainCommandProcessor363:
;DriverRF4463PROMain.c, 450 :: 		vUSART1Start_TX( ANS_DEBUG_COMMAND_UNKNOWN, strlen( ANS_DEBUG_COMMAND_UNKNOWN ) );
0x1B54	0x4811    LDR	R0, [PC, #68]
0x1B56	0xF7FEFCD5  BL	_strlen+0
0x1B5A	0xB401    PUSH	(R0)
0x1B5C	0x480F    LDR	R0, [PC, #60]
0x1B5E	0xB401    PUSH	(R0)
0x1B60	0xF7FFF966  BL	_vUSART1Start_TX+0
0x1B64	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 451 :: 		vUSART1Start_TX( ucBuffer, strlen( ucBuffer ) );  // DEPURACION
0x1B66	0x981C    LDR	R0, [SP, #112]
0x1B68	0xF7FEFCCC  BL	_strlen+0
0x1B6C	0xB401    PUSH	(R0)
0x1B6E	0x981D    LDR	R0, [SP, #116]
0x1B70	0xB401    PUSH	(R0)
0x1B72	0xF7FFF95D  BL	_vUSART1Start_TX+0
0x1B76	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 452 :: 		}
L_vRF4463MainCommandProcessor364:
L_vRF4463MainCommandProcessor362:
L_vRF4463MainCommandProcessor356:
L_vRF4463MainCommandProcessor350:
L_vRF4463MainCommandProcessor344:
L_vRF4463MainCommandProcessor338:
L_vRF4463MainCommandProcessor332:
L_vRF4463MainCommandProcessor326:
L_vRF4463MainCommandProcessor320:
L_vRF4463MainCommandProcessor314:
L_vRF4463MainCommandProcessor312:
L_vRF4463MainCommandProcessor296:
L_vRF4463MainCommandProcessor290:
L_vRF4463MainCommandProcessor284:
L_vRF4463MainCommandProcessor268:
L_vRF4463MainCommandProcessor262:
;DriverRF4463PROMain.c, 453 :: 		}
L_end_vRF4463MainCommandProcessor:
0x1B78	0xF8DDE000  LDR	LR, [SP, #0]
0x1B7C	0xB01C    ADD	SP, SP, #112
0x1B7E	0x4770    BX	LR
0x1B80	0x203E2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x1B84	0x21CD2000  	_CMD_RADIO_MATCH_MASK_4_SET+0
0x1B88	0x21D82000  	_ucRF4463ByteMask4+0
0x1B8C	0x21802000  	_ucRF4463MatchEnabled+0
0x1B90	0x20162000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x1B94	0x21D92000  	_CMD_RADIO_MATCH_UNSET+0
0x1B98	0x21812000  	_ucRF4463MatchEnableReg+0
0x1B9C	0x21E52000  	_ANS_DEBUG_COMMAND_UNKNOWN+0
; end of _vRF4463MainCommandProcessor
_toupper:
;__Lib_CType.c, 76 :: 		
; character start address is: 0 (R0)
0x08BC	0xB081    SUB	SP, SP, #4
; character end address is: 0 (R0)
; character start address is: 0 (R0)
;__Lib_CType.c, 77 :: 		
0x08BE	0x287A    CMP	R0, #122
0x08C0	0xD808    BHI	L__toupper47
0x08C2	0x2861    CMP	R0, #97
0x08C4	0xD307    BCC	L__toupper48
L__toupper44:
;__Lib_CType.c, 78 :: 		
0x08C6	0xF64F71DF  MOVW	R1, #65503
0x08CA	0xB209    SXTH	R1, R1
0x08CC	0xEA000101  AND	R1, R0, R1, LSL #0
0x08D0	0xB2C8    UXTB	R0, R1
; character end address is: 0 (R0)
;__Lib_CType.c, 77 :: 		
0x08D2	0xE7FF    B	L__toupper46
L__toupper47:
L__toupper46:
; character start address is: 0 (R0)
; character end address is: 0 (R0)
0x08D4	0xE7FF    B	L__toupper45
L__toupper48:
L__toupper45:
;__Lib_CType.c, 79 :: 		
; character start address is: 0 (R0)
; character end address is: 0 (R0)
;__Lib_CType.c, 80 :: 		
L_end_toupper:
0x08D6	0xB001    ADD	SP, SP, #4
0x08D8	0x4770    BX	LR
; end of _toupper
_memcmp:
;__Lib_CString.c, 30 :: 		
; n start address is: 8 (R2)
; s2 start address is: 4 (R1)
; s1 start address is: 0 (R0)
0x076C	0xB081    SUB	SP, SP, #4
; n end address is: 8 (R2)
; s2 end address is: 4 (R1)
; s1 end address is: 0 (R0)
; s1 start address is: 0 (R0)
; s2 start address is: 4 (R1)
; n start address is: 8 (R2)
0x076E	0xF8AD2000  STRH	R2, [SP, #0]
; s1 end address is: 0 (R0)
; n end address is: 8 (R2)
; s2 end address is: 4 (R1)
0x0772	0x4602    MOV	R2, R0
0x0774	0xF9BD0000  LDRSH	R0, [SP, #0]
;__Lib_CString.c, 31 :: 		
L_memcmp4:
; n start address is: 0 (R0)
; n start address is: 0 (R0)
; s2 start address is: 4 (R1)
; s1 start address is: 8 (R2)
0x0778	0xB204    SXTH	R4, R0
0x077A	0x1E43    SUBS	R3, R0, #1
0x077C	0xB218    SXTH	R0, R3
; n end address is: 0 (R0)
0x077E	0xB15C    CBZ	R4, L_memcmp5
; n end address is: 0 (R0)
;__Lib_CString.c, 32 :: 		
; n start address is: 0 (R0)
0x0780	0x7814    LDRB	R4, [R2, #0]
0x0782	0x780B    LDRB	R3, [R1, #0]
0x0784	0x429C    CMP	R4, R3
0x0786	0xD004    BEQ	L_memcmp6
; n end address is: 0 (R0)
;__Lib_CString.c, 33 :: 		
0x0788	0x7814    LDRB	R4, [R2, #0]
; s1 end address is: 8 (R2)
0x078A	0x780B    LDRB	R3, [R1, #0]
; s2 end address is: 4 (R1)
0x078C	0x1AE3    SUB	R3, R4, R3
0x078E	0xB218    SXTH	R0, R3
0x0790	0xE004    B	L_end_memcmp
L_memcmp6:
;__Lib_CString.c, 37 :: 		
; s2 start address is: 4 (R1)
; s1 start address is: 8 (R2)
; n start address is: 0 (R0)
0x0792	0x1C52    ADDS	R2, R2, #1
;__Lib_CString.c, 38 :: 		
0x0794	0x1C49    ADDS	R1, R1, #1
;__Lib_CString.c, 39 :: 		
; n end address is: 0 (R0)
; s1 end address is: 8 (R2)
; s2 end address is: 4 (R1)
0x0796	0xE7EF    B	L_memcmp4
L_memcmp5:
;__Lib_CString.c, 40 :: 		
0x0798	0x2000    MOVS	R0, #0
0x079A	0xB200    SXTH	R0, R0
;__Lib_CString.c, 41 :: 		
L_end_memcmp:
0x079C	0xB001    ADD	SP, SP, #4
0x079E	0x4770    BX	LR
; end of _memcmp
_StrToShort:
;__Lib_Conversions.c, 918 :: 		
; byte_in start address is: 0 (R0)
0x07A0	0xB085    SUB	SP, SP, #20
0x07A2	0xF8CDE000  STR	LR, [SP, #0]
0x07A6	0x4605    MOV	R5, R0
; byte_in end address is: 0 (R0)
; byte_in start address is: 20 (R5)
;__Lib_Conversions.c, 920 :: 		
0x07A8	0x2100    MOVS	R1, #0
0x07AA	0xF88D100C  STRB	R1, [SP, #12]
0x07AE	0x2100    MOVS	R1, #0
0x07B0	0xF88D100D  STRB	R1, [SP, #13]
0x07B4	0x2100    MOVS	R1, #0
0x07B6	0xF88D100E  STRB	R1, [SP, #14]
0x07BA	0xF88D100F  STRB	R1, [SP, #15]
0x07BE	0xF88D1010  STRB	R1, [SP, #16]
;__Lib_Conversions.c, 921 :: 		
;__Lib_Conversions.c, 922 :: 		
; result start address is: 12 (R3)
0x07C2	0x2300    MOVS	R3, #0
0x07C4	0xB25B    SXTB	R3, R3
;__Lib_Conversions.c, 923 :: 		
;__Lib_Conversions.c, 925 :: 		
0x07C6	0xF88D3004  STRB	R3, [SP, #4]
0x07CA	0x4628    MOV	R0, R5
0x07CC	0xF7FFFE9A  BL	_strlen+0
0x07D0	0xF99D3004  LDRSB	R3, [SP, #4]
; i1 start address is: 16 (R4)
0x07D4	0xB2C4    UXTB	R4, R0
;__Lib_Conversions.c, 926 :: 		
0x07D6	0xB2C1    UXTB	R1, R0
0x07D8	0x2904    CMP	R1, #4
0x07DA	0xF2008069  BHI	L_StrToShort176
;__Lib_Conversions.c, 928 :: 		
0x07DE	0xAA03    ADD	R2, SP, #12
0x07E0	0xF10D010D  ADD	R1, SP, #13
0x07E4	0xF88D4004  STRB	R4, [SP, #4]
0x07E8	0xF88D3005  STRB	R3, [SP, #5]
0x07EC	0x9502    STR	R5, [SP, #8]
0x07EE	0x4628    MOV	R0, R5
0x07F0	0xF7FFFE4C  BL	__Lib_Conversions_Forward_Input+0
0x07F4	0x9D02    LDR	R5, [SP, #8]
0x07F6	0xF99D3005  LDRSB	R3, [SP, #5]
0x07FA	0xF89D4004  LDRB	R4, [SP, #4]
; multiplier start address is: 0 (R0)
0x07FE	0xB280    UXTH	R0, R0
;__Lib_Conversions.c, 930 :: 		
0x0800	0xF89D100C  LDRB	R1, [SP, #12]
0x0804	0x2901    CMP	R1, #1
0x0806	0xD850    BHI	L_StrToShort177
;__Lib_Conversions.c, 932 :: 		
0x0808	0x7829    LDRB	R1, [R5, #0]
0x080A	0x292D    CMP	R1, #45
0x080C	0xD01E    BEQ	L_StrToShort178
; byte_in end address is: 20 (R5)
;__Lib_Conversions.c, 934 :: 		
; i start address is: 8 (R2)
0x080E	0x2200    MOVS	R2, #0
; i1 end address is: 16 (R4)
; multiplier end address is: 0 (R0)
; result end address is: 12 (R3)
; i end address is: 8 (R2)
0x0810	0xB285    UXTH	R5, R0
0x0812	0xB2E0    UXTB	R0, R4
L_StrToShort179:
; i start address is: 8 (R2)
; multiplier start address is: 20 (R5)
; i1 start address is: 0 (R0)
; result start address is: 12 (R3)
0x0814	0x4282    CMP	R2, R0
0x0816	0xD210    BCS	L_StrToShort180
;__Lib_Conversions.c, 936 :: 		
0x0818	0xF10D010D  ADD	R1, SP, #13
0x081C	0x1889    ADDS	R1, R1, R2
0x081E	0x7809    LDRB	R1, [R1, #0]
0x0820	0x3930    SUBS	R1, #48
0x0822	0xB209    SXTH	R1, R1
0x0824	0x4369    MULS	R1, R5, R1
0x0826	0xB289    UXTH	R1, R1
0x0828	0x1859    ADDS	R1, R3, R1
0x082A	0xB24B    SXTB	R3, R1
;__Lib_Conversions.c, 937 :: 		
0x082C	0x210A    MOVS	R1, #10
0x082E	0xFBB5F5F1  UDIV	R5, R5, R1
0x0832	0xB2AD    UXTH	R5, R5
;__Lib_Conversions.c, 934 :: 		
0x0834	0x1C52    ADDS	R2, R2, #1
0x0836	0xB2D2    UXTB	R2, R2
;__Lib_Conversions.c, 938 :: 		
; multiplier end address is: 20 (R5)
; i1 end address is: 0 (R0)
; i end address is: 8 (R2)
0x0838	0xE7EC    B	L_StrToShort179
L_StrToShort180:
;__Lib_Conversions.c, 939 :: 		
0x083A	0xF06F017F  MVN	R1, #127
0x083E	0x428B    CMP	R3, R1
0x0840	0xD102    BNE	L__StrToShort469
; result end address is: 12 (R3)
;__Lib_Conversions.c, 940 :: 		
; result start address is: 0 (R0)
0x0842	0x2000    MOVS	R0, #0
0x0844	0xB240    SXTB	R0, R0
; result end address is: 0 (R0)
0x0846	0xE000    B	L_StrToShort182
L__StrToShort469:
;__Lib_Conversions.c, 939 :: 		
0x0848	0xB258    SXTB	R0, R3
;__Lib_Conversions.c, 940 :: 		
L_StrToShort182:
;__Lib_Conversions.c, 941 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x084A	0xE02D    B	L_StrToShort183
L_StrToShort178:
;__Lib_Conversions.c, 942 :: 		
; result start address is: 12 (R3)
; multiplier start address is: 0 (R0)
; i1 start address is: 16 (R4)
; byte_in start address is: 20 (R5)
0x084C	0x462A    MOV	R2, R5
0x084E	0x212D    MOVS	R1, #45
0x0850	0x7029    STRB	R1, [R5, #0]
; byte_in end address is: 20 (R5)
0x0852	0x7811    LDRB	R1, [R2, #0]
0x0854	0xB329    CBZ	R1, L__StrToShort471
0x0856	0xF89D100C  LDRB	R1, [SP, #12]
0x085A	0x2901    CMP	R1, #1
0x085C	0xD123    BNE	L__StrToShort472
L__StrToShort466:
;__Lib_Conversions.c, 944 :: 		
; i start address is: 8 (R2)
0x085E	0x2201    MOVS	R2, #1
; i1 end address is: 16 (R4)
; multiplier end address is: 0 (R0)
; result end address is: 12 (R3)
; i end address is: 8 (R2)
0x0860	0xF8AD0004  STRH	R0, [SP, #4]
0x0864	0xB2E0    UXTB	R0, R4
0x0866	0xF8BD4004  LDRH	R4, [SP, #4]
L_StrToShort187:
; i start address is: 8 (R2)
; multiplier start address is: 16 (R4)
; i1 start address is: 0 (R0)
; result start address is: 12 (R3)
0x086A	0x4282    CMP	R2, R0
0x086C	0xD210    BCS	L_StrToShort188
;__Lib_Conversions.c, 946 :: 		
0x086E	0xF10D010D  ADD	R1, SP, #13
0x0872	0x1889    ADDS	R1, R1, R2
0x0874	0x7809    LDRB	R1, [R1, #0]
0x0876	0x3930    SUBS	R1, #48
0x0878	0xB209    SXTH	R1, R1
0x087A	0x4361    MULS	R1, R4, R1
0x087C	0xB289    UXTH	R1, R1
0x087E	0x1859    ADDS	R1, R3, R1
0x0880	0xB24B    SXTB	R3, R1
;__Lib_Conversions.c, 947 :: 		
0x0882	0x210A    MOVS	R1, #10
0x0884	0xFBB4F4F1  UDIV	R4, R4, R1
0x0888	0xB2A4    UXTH	R4, R4
;__Lib_Conversions.c, 944 :: 		
0x088A	0x1C52    ADDS	R2, R2, #1
0x088C	0xB2D2    UXTB	R2, R2
;__Lib_Conversions.c, 948 :: 		
; i1 end address is: 0 (R0)
; multiplier end address is: 16 (R4)
; i end address is: 8 (R2)
0x088E	0xE7EC    B	L_StrToShort187
L_StrToShort188:
;__Lib_Conversions.c, 949 :: 		
0x0890	0x4259    RSBS	R1, R3, #0
; result end address is: 12 (R3)
; result start address is: 0 (R0)
0x0892	0xB248    SXTB	R0, R1
;__Lib_Conversions.c, 950 :: 		
0x0894	0xB249    SXTB	R1, R1
0x0896	0x297F    CMP	R1, #127
0x0898	0xD102    BNE	L__StrToShort470
;__Lib_Conversions.c, 951 :: 		
0x089A	0x2000    MOVS	R0, #0
0x089C	0xB240    SXTB	R0, R0
; result end address is: 0 (R0)
0x089E	0xE7FF    B	L_StrToShort190
L__StrToShort470:
;__Lib_Conversions.c, 950 :: 		
;__Lib_Conversions.c, 951 :: 		
L_StrToShort190:
;__Lib_Conversions.c, 942 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x08A0	0xE000    B	L__StrToShort468
L__StrToShort471:
0x08A2	0xB258    SXTB	R0, R3
L__StrToShort468:
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x08A4	0xE000    B	L__StrToShort467
L__StrToShort472:
0x08A6	0xB258    SXTB	R0, R3
L__StrToShort467:
;__Lib_Conversions.c, 952 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
L_StrToShort183:
;__Lib_Conversions.c, 953 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x08A8	0xE001    B	L_StrToShort191
L_StrToShort177:
;__Lib_Conversions.c, 954 :: 		
; result start address is: 0 (R0)
0x08AA	0x2000    MOVS	R0, #0
0x08AC	0xB240    SXTB	R0, R0
; result end address is: 0 (R0)
L_StrToShort191:
;__Lib_Conversions.c, 955 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x08AE	0xE001    B	L_StrToShort192
L_StrToShort176:
;__Lib_Conversions.c, 956 :: 		
; result start address is: 0 (R0)
0x08B0	0x2000    MOVS	R0, #0
0x08B2	0xB240    SXTB	R0, R0
; result end address is: 0 (R0)
L_StrToShort192:
;__Lib_Conversions.c, 957 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
;__Lib_Conversions.c, 958 :: 		
L_end_StrToShort:
0x08B4	0xF8DDE000  LDR	LR, [SP, #0]
0x08B8	0xB005    ADD	SP, SP, #20
0x08BA	0x4770    BX	LR
; end of _StrToShort
_strlen:
;__Lib_CString.c, 143 :: 		
; s start address is: 0 (R0)
0x0504	0xB081    SUB	SP, SP, #4
0x0506	0x4601    MOV	R1, R0
; s end address is: 0 (R0)
; s start address is: 4 (R1)
;__Lib_CString.c, 146 :: 		
; cp start address is: 0 (R0)
0x0508	0x4608    MOV	R0, R1
; s end address is: 4 (R1)
; cp end address is: 0 (R0)
0x050A	0x460B    MOV	R3, R1
;__Lib_CString.c, 147 :: 		
L_strlen36:
; cp start address is: 0 (R0)
; s start address is: 12 (R3)
0x050C	0x4602    MOV	R2, R0
0x050E	0x1C40    ADDS	R0, R0, #1
0x0510	0x7811    LDRB	R1, [R2, #0]
0x0512	0xB101    CBZ	R1, L_strlen37
;__Lib_CString.c, 148 :: 		
0x0514	0xE7FA    B	L_strlen36
L_strlen37:
;__Lib_CString.c, 149 :: 		
0x0516	0x1AC1    SUB	R1, R0, R3
; s end address is: 12 (R3)
; cp end address is: 0 (R0)
0x0518	0x1E49    SUBS	R1, R1, #1
0x051A	0xB208    SXTH	R0, R1
;__Lib_CString.c, 150 :: 		
L_end_strlen:
0x051C	0xB001    ADD	SP, SP, #4
0x051E	0x4770    BX	LR
; end of _strlen
__Lib_Conversions_Forward_Input:
;__Lib_Conversions.c, 777 :: 		
; counter start address is: 8 (R2)
; buf_str2 start address is: 4 (R1)
; byte_in start address is: 0 (R0)
0x048C	0xB081    SUB	SP, SP, #4
0x048E	0xF8CDE000  STR	LR, [SP, #0]
0x0492	0x4604    MOV	R4, R0
0x0494	0x460D    MOV	R5, R1
0x0496	0x4616    MOV	R6, R2
; counter end address is: 8 (R2)
; buf_str2 end address is: 4 (R1)
; byte_in end address is: 0 (R0)
; byte_in start address is: 16 (R4)
; buf_str2 start address is: 20 (R5)
; counter start address is: 24 (R6)
;__Lib_Conversions.c, 779 :: 		
0x0498	0x4620    MOV	R0, R4
0x049A	0xF000F833  BL	_strlen+0
; i start address is: 28 (R7)
0x049E	0xB2C7    UXTB	R7, R0
;__Lib_Conversions.c, 781 :: 		
; multiplier start address is: 40 (R10)
0x04A0	0xF04F0A01  MOV	R10, #1
0x04A4	0xF2400B00  MOVW	R11, #0
; byte_in end address is: 16 (R4)
; buf_str2 end address is: 20 (R5)
; counter end address is: 24 (R6)
; multiplier end address is: 40 (R10)
; i end address is: 28 (R7)
0x04A8	0x4622    MOV	R2, R4
0x04AA	0x4629    MOV	R1, R5
0x04AC	0x4630    MOV	R0, R6
;__Lib_Conversions.c, 783 :: 		
L___Lib_Conversions_Forward_Input139:
; multiplier start address is: 40 (R10)
; byte_in start address is: 8 (R2)
; buf_str2 start address is: 4 (R1)
; counter start address is: 0 (R0)
; i start address is: 28 (R7)
; counter start address is: 0 (R0)
; counter end address is: 0 (R0)
; buf_str2 start address is: 4 (R1)
; buf_str2 end address is: 4 (R1)
; byte_in start address is: 8 (R2)
; byte_in end address is: 8 (R2)
0x04AE	0x2F00    CMP	R7, #0
0x04B0	0xD91E    BLS	L___Lib_Conversions_Forward_Input140
; counter end address is: 0 (R0)
; buf_str2 end address is: 4 (R1)
; byte_in end address is: 8 (R2)
;__Lib_Conversions.c, 785 :: 		
; byte_in start address is: 8 (R2)
; buf_str2 start address is: 4 (R1)
; counter start address is: 0 (R0)
0x04B2	0x19D3    ADDS	R3, R2, R7
0x04B4	0x1E5B    SUBS	R3, R3, #1
0x04B6	0x781B    LDRB	R3, [R3, #0]
; tmp start address is: 16 (R4)
0x04B8	0xB2DC    UXTB	R4, R3
;__Lib_Conversions.c, 786 :: 		
0x04BA	0x2B30    CMP	R3, #48
0x04BC	0xD312    BCC	L___Lib_Conversions_Forward_Input438
0x04BE	0x2C39    CMP	R4, #57
0x04C0	0xD810    BHI	L___Lib_Conversions_Forward_Input437
; tmp end address is: 16 (R4)
L___Lib_Conversions_Forward_Input436:
;__Lib_Conversions.c, 788 :: 		
0x04C2	0x19CB    ADDS	R3, R1, R7
0x04C4	0x1E5C    SUBS	R4, R3, #1
0x04C6	0x19D3    ADDS	R3, R2, R7
0x04C8	0x1E5B    SUBS	R3, R3, #1
0x04CA	0x781B    LDRB	R3, [R3, #0]
0x04CC	0x7023    STRB	R3, [R4, #0]
;__Lib_Conversions.c, 789 :: 		
0x04CE	0x250A    MOVS	R5, #10
0x04D0	0x2600    MOVS	R6, #0
0x04D2	0xFBAA3405  UMULL	R3, R4, R10, R5
0x04D6	0xFB0B4405  MLA	R4, R11, R5, R4
0x04DA	0xFB0A4406  MLA	R4, R10, R6, R4
0x04DE	0x469A    MOV	R10, R3
0x04E0	0x46A3    MOV	R11, R4
;__Lib_Conversions.c, 790 :: 		
0x04E2	0xE002    B	L___Lib_Conversions_Forward_Input144
;__Lib_Conversions.c, 786 :: 		
L___Lib_Conversions_Forward_Input438:
L___Lib_Conversions_Forward_Input437:
;__Lib_Conversions.c, 792 :: 		
0x04E4	0x7803    LDRB	R3, [R0, #0]
0x04E6	0x1C5B    ADDS	R3, R3, #1
0x04E8	0x7003    STRB	R3, [R0, #0]
; multiplier end address is: 40 (R10)
L___Lib_Conversions_Forward_Input144:
;__Lib_Conversions.c, 793 :: 		
; multiplier start address is: 40 (R10)
0x04EA	0x1E7F    SUBS	R7, R7, #1
0x04EC	0xB2FF    UXTB	R7, R7
;__Lib_Conversions.c, 794 :: 		
; counter end address is: 0 (R0)
; buf_str2 end address is: 4 (R1)
; byte_in end address is: 8 (R2)
; i end address is: 28 (R7)
0x04EE	0xE7DE    B	L___Lib_Conversions_Forward_Input139
L___Lib_Conversions_Forward_Input140:
;__Lib_Conversions.c, 795 :: 		
0x04F0	0x220A    MOVS	R2, #10
0x04F2	0x2300    MOVS	R3, #0
0x04F4	0x4650    MOV	R0, R10
0x04F6	0x4659    MOV	R1, R11
0x04F8	0xF7FFFECA  BL	__Div_64x64_U+0
; multiplier end address is: 40 (R10)
;__Lib_Conversions.c, 797 :: 		
;__Lib_Conversions.c, 798 :: 		
L_end_Forward_Input:
0x04FC	0xF8DDE000  LDR	LR, [SP, #0]
0x0500	0xB001    ADD	SP, SP, #4
0x0502	0x4770    BX	LR
; end of __Lib_Conversions_Forward_Input
__Div_64x64_U:
;__Lib_Math.c, 373 :: 		
0x0290	0xB081    SUB	SP, SP, #4
;__Lib_Math.c, 376 :: 		
0x0292	0xE92D41F0  PUSH	(R4, R5, R6, R7, R8, R14)
;__Lib_Math.c, 377 :: 		
0x0296	0x461C    MOV	R4, R3
;__Lib_Math.c, 378 :: 		
0x0298	0x4615    MOV	R5, R2
;__Lib_Math.c, 380 :: 		
0x029A	0x428C    CMP	R4, R1
;__Lib_Math.c, 381 :: 		
0x029C	0xBF08    IT	EQ
;__Lib_Math.c, 382 :: 		
0x029E	0x4285    CMPEQ	R5, R0
;__Lib_Math.c, 383 :: 		
0x02A0	0xBF82    ITTT	HI
;__Lib_Math.c, 384 :: 		
0x02A2	0xF04F0300  MOVHI	R3, #0
;__Lib_Math.c, 385 :: 		
0x02A6	0xF04F0200  MOVHI	R2, #0
;__Lib_Math.c, 387 :: 		
0x02AA	0xE0E4    BHI	__me_label_return
;__Lib_Math.c, 392 :: 		
0x02AC	0x2C00    CMP	R4, #0
;__Lib_Math.c, 393 :: 		
0x02AE	0xBF08    IT	EQ
;__Lib_Math.c, 394 :: 		
0x02B0	0x2D00    CMPEQ	R5, #0
;__Lib_Math.c, 397 :: 		
0x02B2	0xD107    BNE	__me_not_zero_
;__Lib_Math.c, 399 :: 		
0x02B4	0x2900    CMP	R1, #0
;__Lib_Math.c, 400 :: 		
0x02B6	0xBF0E    ITEE	EQ
;__Lib_Math.c, 401 :: 		
0x02B8	0x2800    CMPEQ	R0, #0
;__Lib_Math.c, 404 :: 		
0x02BA	0xF06F0000  MVNNE	R0, #0
;__Lib_Math.c, 405 :: 		
0x02BE	0xF06F0100  MVNNE	R1, #0
;__Lib_Math.c, 411 :: 		
0x02C2	0xE0DE    B	__me_lab_end
;__Lib_Math.c, 419 :: 		
__me_not_zero_:
;__Lib_Math.c, 420 :: 		
0x02C4	0xF05F0900  MOVS	R9, #0
;__Lib_Math.c, 421 :: 		
0x02C8	0xF05F0E00  MOVS	LR, #0
;__Lib_Math.c, 426 :: 		
0x02CC	0x2C00    CMP	R4, #0
;__Lib_Math.c, 427 :: 		
0x02CE	0xBF08    IT	EQ
;__Lib_Math.c, 428 :: 		
0x02D0	0x428D    CMPEQ	R5, R1
;__Lib_Math.c, 429 :: 		
0x02D2	0xBF9C    ITT	LS
;__Lib_Math.c, 430 :: 		
0x02D4	0x462C    MOVLS	R4, R5
;__Lib_Math.c, 431 :: 		
0x02D6	0xF04F0500  MOVLS	R5, #0
;__Lib_Math.c, 434 :: 		
0x02DA	0x0C07    LSRS	R7, R0, #16
;__Lib_Math.c, 435 :: 		
0x02DC	0xEA474701  ORR	R7, R7, R1, LSL #16
;__Lib_Math.c, 436 :: 		
0x02E0	0x0C0E    LSRS	R6, R1, #16
;__Lib_Math.c, 437 :: 		
0x02E2	0x42B4    CMP	R4, R6
;__Lib_Math.c, 438 :: 		
0x02E4	0xBF08    IT	EQ
;__Lib_Math.c, 439 :: 		
0x02E6	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 441 :: 		
0x02E8	0xBF9E    ITTT	LS
;__Lib_Math.c, 442 :: 		
0x02EA	0xEA5F4404  LSLSLS	R4, R4, #16
;__Lib_Math.c, 443 :: 		
0x02EE	0xEA444415  ORRLS	R4, R4, R5, LSR #16
;__Lib_Math.c, 444 :: 		
0x02F2	0xEA5F4505  LSLSLS	R5, R5, #16
;__Lib_Math.c, 447 :: 		
0x02F6	0x0A07    LSRS	R7, R0, #8
;__Lib_Math.c, 448 :: 		
0x02F8	0xEA476701  ORR	R7, R7, R1, LSL #24
;__Lib_Math.c, 449 :: 		
0x02FC	0x0A0E    LSRS	R6, R1, #8
;__Lib_Math.c, 450 :: 		
0x02FE	0x42B4    CMP	R4, R6
;__Lib_Math.c, 451 :: 		
0x0300	0xBF08    IT	EQ
;__Lib_Math.c, 452 :: 		
0x0302	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 454 :: 		
0x0304	0xBF9E    ITTT	LS
;__Lib_Math.c, 455 :: 		
0x0306	0xEA5F2404  LSLSLS	R4, R4, #8
;__Lib_Math.c, 456 :: 		
0x030A	0xEA446415  ORRLS	R4, R4, R5, LSR #24
;__Lib_Math.c, 457 :: 		
0x030E	0xEA5F2505  LSLSLS	R5, R5, #8
;__Lib_Math.c, 461 :: 		
0x0312	0x0847    LSRS	R7, R0, #1
;__Lib_Math.c, 462 :: 		
0x0314	0xEA4777C1  ORR	R7, R7, R1, LSL #31
;__Lib_Math.c, 463 :: 		
0x0318	0x084E    LSRS	R6, R1, #1
;__Lib_Math.c, 464 :: 		
0x031A	0x42B4    CMP	R4, R6
;__Lib_Math.c, 465 :: 		
0x031C	0xBF08    IT	EQ
;__Lib_Math.c, 466 :: 		
0x031E	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 467 :: 		
0x0320	0xF2008094  BHI	__me_mod1
;__Lib_Math.c, 469 :: 		
0x0324	0x0887    LSRS	R7, R0, #2
;__Lib_Math.c, 470 :: 		
0x0326	0xEA477781  ORR	R7, R7, R1, LSL #30
;__Lib_Math.c, 471 :: 		
0x032A	0x088E    LSRS	R6, R1, #2
;__Lib_Math.c, 472 :: 		
0x032C	0x42B4    CMP	R4, R6
;__Lib_Math.c, 473 :: 		
0x032E	0xBF08    IT	EQ
;__Lib_Math.c, 474 :: 		
0x0330	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 475 :: 		
0x0332	0xF200807D  BHI	__me_mod2
;__Lib_Math.c, 477 :: 		
0x0336	0x08C7    LSRS	R7, R0, #3
;__Lib_Math.c, 478 :: 		
0x0338	0xEA477741  ORR	R7, R7, R1, LSL #29
;__Lib_Math.c, 479 :: 		
0x033C	0x08CE    LSRS	R6, R1, #3
;__Lib_Math.c, 480 :: 		
0x033E	0x42B4    CMP	R4, R6
;__Lib_Math.c, 481 :: 		
0x0340	0xBF08    IT	EQ
;__Lib_Math.c, 482 :: 		
0x0342	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 483 :: 		
0x0344	0xD866    BHI	__me_mod3
;__Lib_Math.c, 485 :: 		
0x0346	0x0907    LSRS	R7, R0, #4
;__Lib_Math.c, 486 :: 		
0x0348	0xEA477701  ORR	R7, R7, R1, LSL #28
;__Lib_Math.c, 487 :: 		
0x034C	0x090E    LSRS	R6, R1, #4
;__Lib_Math.c, 488 :: 		
0x034E	0x42B4    CMP	R4, R6
;__Lib_Math.c, 489 :: 		
0x0350	0xBF08    IT	EQ
;__Lib_Math.c, 490 :: 		
0x0352	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 491 :: 		
0x0354	0xD850    BHI	__me_mod4
;__Lib_Math.c, 493 :: 		
0x0356	0x0947    LSRS	R7, R0, #5
;__Lib_Math.c, 494 :: 		
0x0358	0xEA4767C1  ORR	R7, R7, R1, LSL #27
;__Lib_Math.c, 495 :: 		
0x035C	0x094E    LSRS	R6, R1, #5
;__Lib_Math.c, 496 :: 		
0x035E	0x42B4    CMP	R4, R6
;__Lib_Math.c, 497 :: 		
0x0360	0xBF08    IT	EQ
;__Lib_Math.c, 498 :: 		
0x0362	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 499 :: 		
0x0364	0xD83A    BHI	__me_mod5
;__Lib_Math.c, 501 :: 		
0x0366	0x0987    LSRS	R7, R0, #6
;__Lib_Math.c, 502 :: 		
0x0368	0xEA476781  ORR	R7, R7, R1, LSL #26
;__Lib_Math.c, 503 :: 		
0x036C	0x098E    LSRS	R6, R1, #6
;__Lib_Math.c, 504 :: 		
0x036E	0x42B4    CMP	R4, R6
;__Lib_Math.c, 505 :: 		
0x0370	0xBF08    IT	EQ
;__Lib_Math.c, 506 :: 		
0x0372	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 507 :: 		
0x0374	0xD824    BHI	__me_mod6
;__Lib_Math.c, 509 :: 		
0x0376	0x09C7    LSRS	R7, R0, #7
;__Lib_Math.c, 510 :: 		
0x0378	0xEA476741  ORR	R7, R7, R1, LSL #25
;__Lib_Math.c, 511 :: 		
0x037C	0x09CE    LSRS	R6, R1, #7
;__Lib_Math.c, 512 :: 		
0x037E	0x42B4    CMP	R4, R6
;__Lib_Math.c, 513 :: 		
0x0380	0xBF08    IT	EQ
;__Lib_Math.c, 514 :: 		
0x0382	0x42BD    CMPEQ	R5, R7
;__Lib_Math.c, 515 :: 		
0x0384	0xD80D    BHI	__me_mod7
;__Lib_Math.c, 520 :: 		
__me_divll:
;__Lib_Math.c, 521 :: 		
0x0386	0x01E6    LSLS	R6, R4, #7
;__Lib_Math.c, 522 :: 		
0x0388	0xEA466655  ORR	R6, R6, R5, LSR #25
;__Lib_Math.c, 523 :: 		
0x038C	0x01EF    LSLS	R7, R5, #7
;__Lib_Math.c, 524 :: 		
0x038E	0x42B1    CMP	R1, R6
;__Lib_Math.c, 525 :: 		
0x0390	0xBF08    IT	EQ
;__Lib_Math.c, 526 :: 		
0x0392	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 527 :: 		
0x0394	0xD301    BCC	__me_label_1
;__Lib_Math.c, 528 :: 		
0x0396	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 529 :: 		
0x0398	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 530 :: 		
__me_label_1:
;__Lib_Math.c, 531 :: 		
0x039A	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 532 :: 		
0x039E	0xEB5E0E0E  ADCS	LR, LR, LR, LSL #0
;__Lib_Math.c, 535 :: 		
__me_mod7:
;__Lib_Math.c, 536 :: 		
0x03A2	0x01A6    LSLS	R6, R4, #6
;__Lib_Math.c, 537 :: 		
0x03A4	0xEA466695  ORR	R6, R6, R5, LSR #26
;__Lib_Math.c, 538 :: 		
0x03A8	0xEA4F1785  LSL	R7, R5, #6
;__Lib_Math.c, 539 :: 		
0x03AC	0x42B1    CMP	R1, R6
;__Lib_Math.c, 540 :: 		
0x03AE	0xBF08    IT	EQ
;__Lib_Math.c, 541 :: 		
0x03B0	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 543 :: 		
0x03B2	0xD301    BCC	__me_label_2
;__Lib_Math.c, 544 :: 		
0x03B4	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 545 :: 		
0x03B6	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 546 :: 		
__me_label_2:
;__Lib_Math.c, 547 :: 		
0x03B8	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 548 :: 		
0x03BC	0xEB4E0E0E  ADC	LR, LR, LR, LSL #0
;__Lib_Math.c, 550 :: 		
__me_mod6:
;__Lib_Math.c, 551 :: 		
0x03C0	0x0166    LSLS	R6, R4, #5
;__Lib_Math.c, 552 :: 		
0x03C2	0xEA4666D5  ORR	R6, R6, R5, LSR #27
;__Lib_Math.c, 553 :: 		
0x03C6	0x016F    LSLS	R7, R5, #5
;__Lib_Math.c, 554 :: 		
0x03C8	0x42B1    CMP	R1, R6
;__Lib_Math.c, 555 :: 		
0x03CA	0xBF08    IT	EQ
;__Lib_Math.c, 556 :: 		
0x03CC	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 558 :: 		
0x03CE	0xD301    BCC	__me_label_3
;__Lib_Math.c, 559 :: 		
0x03D0	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 560 :: 		
0x03D2	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 561 :: 		
__me_label_3:
;__Lib_Math.c, 562 :: 		
0x03D4	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 563 :: 		
0x03D8	0xEB4E0E0E  ADC	LR, LR, LR, LSL #0
;__Lib_Math.c, 565 :: 		
__me_mod5:
;__Lib_Math.c, 566 :: 		
0x03DC	0x0126    LSLS	R6, R4, #4
;__Lib_Math.c, 567 :: 		
0x03DE	0xEA467615  ORR	R6, R6, R5, LSR #28
;__Lib_Math.c, 568 :: 		
0x03E2	0x012F    LSLS	R7, R5, #4
;__Lib_Math.c, 569 :: 		
0x03E4	0x42B1    CMP	R1, R6
;__Lib_Math.c, 570 :: 		
0x03E6	0xBF08    IT	EQ
;__Lib_Math.c, 571 :: 		
0x03E8	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 573 :: 		
0x03EA	0xD301    BCC	__me_label_4
;__Lib_Math.c, 574 :: 		
0x03EC	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 575 :: 		
0x03EE	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 576 :: 		
__me_label_4:
;__Lib_Math.c, 577 :: 		
0x03F0	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 578 :: 		
0x03F4	0xEB5E0E0E  ADCS	LR, LR, LR, LSL #0
;__Lib_Math.c, 580 :: 		
__me_mod4:
;__Lib_Math.c, 581 :: 		
0x03F8	0x00E6    LSLS	R6, R4, #3
;__Lib_Math.c, 582 :: 		
0x03FA	0xEA467655  ORR	R6, R6, R5, LSR #29
;__Lib_Math.c, 583 :: 		
0x03FE	0x00EF    LSLS	R7, R5, #3
;__Lib_Math.c, 584 :: 		
0x0400	0x42B1    CMP	R1, R6
;__Lib_Math.c, 585 :: 		
0x0402	0xBF08    IT	EQ
;__Lib_Math.c, 586 :: 		
0x0404	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 588 :: 		
0x0406	0xD301    BCC	__me_label_5
;__Lib_Math.c, 589 :: 		
0x0408	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 590 :: 		
0x040A	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 591 :: 		
__me_label_5:
;__Lib_Math.c, 592 :: 		
0x040C	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 593 :: 		
0x0410	0xEB4E0E0E  ADC	LR, LR, LR, LSL #0
;__Lib_Math.c, 595 :: 		
__me_mod3:
;__Lib_Math.c, 596 :: 		
0x0414	0x00A6    LSLS	R6, R4, #2
;__Lib_Math.c, 597 :: 		
0x0416	0xEA467695  ORR	R6, R6, R5, LSR #30
;__Lib_Math.c, 598 :: 		
0x041A	0x00AF    LSLS	R7, R5, #2
;__Lib_Math.c, 599 :: 		
0x041C	0x42B1    CMP	R1, R6
;__Lib_Math.c, 600 :: 		
0x041E	0xBF08    IT	EQ
;__Lib_Math.c, 601 :: 		
0x0420	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 603 :: 		
0x0422	0xD301    BCC	__me_label_6
;__Lib_Math.c, 604 :: 		
0x0424	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 605 :: 		
0x0426	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 606 :: 		
__me_label_6:
;__Lib_Math.c, 607 :: 		
0x0428	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 608 :: 		
0x042C	0xEB4E0E0E  ADC	LR, LR, LR, LSL #0
;__Lib_Math.c, 610 :: 		
__me_mod2:
;__Lib_Math.c, 611 :: 		
0x0430	0x0066    LSLS	R6, R4, #1
;__Lib_Math.c, 612 :: 		
0x0432	0xEA4676D5  ORR	R6, R6, R5, LSR #31
;__Lib_Math.c, 613 :: 		
0x0436	0x006F    LSLS	R7, R5, #1
;__Lib_Math.c, 614 :: 		
0x0438	0x42B1    CMP	R1, R6
;__Lib_Math.c, 615 :: 		
0x043A	0xBF08    IT	EQ
;__Lib_Math.c, 616 :: 		
0x043C	0x42B8    CMPEQ	R0, R7
;__Lib_Math.c, 618 :: 		
0x043E	0xD301    BCC	__me_label_7
;__Lib_Math.c, 619 :: 		
0x0440	0x1BC0    SUBS	R0, R0, R7
;__Lib_Math.c, 620 :: 		
0x0442	0x41B1    SBCS	R1, R6
;__Lib_Math.c, 621 :: 		
__me_label_7:
;__Lib_Math.c, 622 :: 		
0x0444	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 623 :: 		
0x0448	0xEB5E0E0E  ADCS	LR, LR, LR, LSL #0
;__Lib_Math.c, 625 :: 		
__me_mod1:
;__Lib_Math.c, 626 :: 		
0x044C	0x42A1    CMP	R1, R4
;__Lib_Math.c, 627 :: 		
0x044E	0xBF08    IT	EQ
;__Lib_Math.c, 628 :: 		
0x0450	0x42A8    CMPEQ	R0, R5
;__Lib_Math.c, 630 :: 		
0x0452	0xD301    BCC	__me_label_8
;__Lib_Math.c, 631 :: 		
0x0454	0x1B40    SUBS	R0, R0, R5
;__Lib_Math.c, 632 :: 		
0x0456	0x41A1    SBCS	R1, R4
;__Lib_Math.c, 633 :: 		
__me_label_8:
;__Lib_Math.c, 634 :: 		
0x0458	0xEB590909  ADCS	R9, R9, R9, LSL #0
;__Lib_Math.c, 635 :: 		
0x045C	0xEB5E0E0E  ADCS	LR, LR, LR, LSL #0
;__Lib_Math.c, 639 :: 		
0x0460	0x42A3    CMP	R3, R4
;__Lib_Math.c, 640 :: 		
0x0462	0xBF08    IT	EQ
;__Lib_Math.c, 641 :: 		
0x0464	0x42AA    CMPEQ	R2, R5
;__Lib_Math.c, 642 :: 		
0x0466	0xBF3E    ITTT	CC
;__Lib_Math.c, 643 :: 		
0x0468	0x0A2D    LSRCC	R5, R5, #8
;__Lib_Math.c, 644 :: 		
0x046A	0xEA456504  ORRCC	R5, R5, R4, LSL #24
;__Lib_Math.c, 645 :: 		
0x046E	0x0A24    LSRCC	R4, R4, #8
;__Lib_Math.c, 646 :: 		
0x0470	0xD389    BCC	__me_divll
;__Lib_Math.c, 650 :: 		
0x0472	0x4673    MOV	R3, LR
;__Lib_Math.c, 651 :: 		
0x0474	0x464A    MOV	R2, R9
;__Lib_Math.c, 654 :: 		
__me_label_return:
;__Lib_Math.c, 655 :: 		
0x0476	0x461E    MOV	R6, R3
;__Lib_Math.c, 656 :: 		
0x0478	0x4617    MOV	R7, R2
;__Lib_Math.c, 657 :: 		
0x047A	0x460B    MOV	R3, R1
;__Lib_Math.c, 658 :: 		
0x047C	0x4602    MOV	R2, R0
;__Lib_Math.c, 659 :: 		
0x047E	0x4631    MOV	R1, R6
;__Lib_Math.c, 660 :: 		
0x0480	0x4638    MOV	R0, R7
;__Lib_Math.c, 663 :: 		
__me_lab_end:
;__Lib_Math.c, 664 :: 		
0x0482	0xE8BD41F0  POP	(R4, R5, R6, R7, R8, R14)
;__Lib_Math.c, 683 :: 		
L_end__Div_64x64_U:
0x0486	0xB001    ADD	SP, SP, #4
0x0488	0x4770    BX	LR
; end of __Div_64x64_U
_vRF4463MainApplyChanges:
;DriverRF4463PROMain.c, 100 :: 		void vRF4463MainApplyChanges () {
0x06E8	0xB081    SUB	SP, SP, #4
0x06EA	0xF8CDE000  STR	LR, [SP, #0]
;DriverRF4463PROMain.c, 101 :: 		VRF4463SDNReset();
0x06EE	0xF002FD17  BL	_VRF4463SDNReset+0
;DriverRF4463PROMain.c, 102 :: 		vRF4463Init();
0x06F2	0xF001FF53  BL	_vRF4463Init+0
;DriverRF4463PROMain.c, 103 :: 		vRF4463ClearInterrupts();
0x06F6	0xF002FD61  BL	_vRF4463ClearInterrupts+0
;DriverRF4463PROMain.c, 104 :: 		}
L_end_vRF4463MainApplyChanges:
0x06FA	0xF8DDE000  LDR	LR, [SP, #0]
0x06FE	0xB001    ADD	SP, SP, #4
0x0700	0x4770    BX	LR
; end of _vRF4463MainApplyChanges
_vUSART1Start_TX:
;uarthandler.c, 255 :: 		unsigned char vUSART1Start_TX ( unsigned long *ucBuffer, unsigned long ulSize ) {
0x0E30	0xB081    SUB	SP, SP, #4
;uarthandler.c, 256 :: 		while ( DMA2_S7CRbits.EN || !USART1_SRbits.TC );
L_vUSART1Start_TX231:
0x0E32	0x481A    LDR	R0, [PC, #104]
0x0E34	0x6800    LDR	R0, [R0, #0]
0x0E36	0xB920    CBNZ	R0, L__vUSART1Start_TX414
0x0E38	0x4819    LDR	R0, [PC, #100]
0x0E3A	0x6800    LDR	R0, [R0, #0]
0x0E3C	0x2800    CMP	R0, #0
0x0E3E	0xD000    BEQ	L__vUSART1Start_TX414
0x0E40	0xE000    B	L_vUSART1Start_TX232
L__vUSART1Start_TX414:
0x0E42	0xE7F6    B	L_vUSART1Start_TX231
L_vUSART1Start_TX232:
;uarthandler.c, 258 :: 		if ( USART1_CR1bits.UE && USART1_SRbits.TC && ulSize > 0 ) { // la transmision anterior termino?
0x0E44	0x4817    LDR	R0, [PC, #92]
0x0E46	0x6800    LDR	R0, [R0, #0]
0x0E48	0x2800    CMP	R0, #0
0x0E4A	0xD023    BEQ	L_vUSART1Start_TX237
0x0E4C	0x4814    LDR	R0, [PC, #80]
0x0E4E	0x6800    LDR	R0, [R0, #0]
0x0E50	0x2800    CMP	R0, #0
0x0E52	0xD01F    BEQ	L_vUSART1Start_TX237
0x0E54	0x9802    LDR	R0, [SP, #8]
0x0E56	0x2800    CMP	R0, #0
0x0E58	0xD91C    BLS	L_vUSART1Start_TX237
L__vUSART1Start_TX413:
;uarthandler.c, 259 :: 		DMA2_S7CRbits.EN = 0;                       // Desabilita la recepci?n para poder modificar los par?metros
0x0E5A	0x2100    MOVS	R1, #0
0x0E5C	0xB249    SXTB	R1, R1
0x0E5E	0x480F    LDR	R0, [PC, #60]
0x0E60	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 260 :: 		while ( DMA2_S7CRbits.EN );                 // espera a que se haya desabilitado realmente
L_vUSART1Start_TX238:
0x0E62	0x480E    LDR	R0, [PC, #56]
0x0E64	0x6800    LDR	R0, [R0, #0]
0x0E66	0xB100    CBZ	R0, L_vUSART1Start_TX239
0x0E68	0xE7FB    B	L_vUSART1Start_TX238
L_vUSART1Start_TX239:
;uarthandler.c, 262 :: 		DMA2_S7M0AR = ( unsigned long ) ucBuffer;   // Direcci?n de la memoria a rutear
0x0E6A	0x9901    LDR	R1, [SP, #4]
0x0E6C	0x480E    LDR	R0, [PC, #56]
0x0E6E	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 263 :: 		DMA2_S7NDTR = ulSize;                       // Tama?o de datos a manejar
0x0E70	0x9902    LDR	R1, [SP, #8]
0x0E72	0x480E    LDR	R0, [PC, #56]
0x0E74	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 264 :: 		DMA2_S7CRbits.EN = 1;
0x0E76	0x2101    MOVS	R1, #1
0x0E78	0xB249    SXTB	R1, R1
0x0E7A	0x4808    LDR	R0, [PC, #32]
0x0E7C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 265 :: 		while ( DMA2_S7CRbits.EN || !USART1_SRbits.TC );
L_vUSART1Start_TX240:
0x0E7E	0x4807    LDR	R0, [PC, #28]
0x0E80	0x6800    LDR	R0, [R0, #0]
0x0E82	0xB920    CBNZ	R0, L__vUSART1Start_TX412
0x0E84	0x4806    LDR	R0, [PC, #24]
0x0E86	0x6800    LDR	R0, [R0, #0]
0x0E88	0x2800    CMP	R0, #0
0x0E8A	0xD000    BEQ	L__vUSART1Start_TX412
0x0E8C	0xE000    B	L_vUSART1Start_TX241
L__vUSART1Start_TX412:
0x0E8E	0xE7F6    B	L_vUSART1Start_TX240
L_vUSART1Start_TX241:
;uarthandler.c, 266 :: 		return 1;                                   // indica que transmitio
0x0E90	0x2001    MOVS	R0, #1
0x0E92	0xE000    B	L_end_vUSART1Start_TX
;uarthandler.c, 267 :: 		}
L_vUSART1Start_TX237:
;uarthandler.c, 268 :: 		return 0;                                      // indica que NO transmitio
0x0E94	0x2000    MOVS	R0, #0
;uarthandler.c, 270 :: 		}
L_end_vUSART1Start_TX:
0x0E96	0xB001    ADD	SP, SP, #4
0x0E98	0x4770    BX	LR
0x0E9A	0xBF00    NOP
0x0E9C	0x9700424C  	DMA2_S7CRbits+0
0x0EA0	0x00184222  	USART1_SRbits+0
0x0EA4	0x01B44222  	USART1_CR1bits+0
0x0EA8	0x64C44002  	DMA2_S7M0AR+0
0x0EAC	0x64BC4002  	DMA2_S7NDTR+0
; end of _vUSART1Start_TX
_StrToInt:
;__Lib_Conversions.c, 975 :: 		
; byte_in start address is: 0 (R0)
0x0920	0xB085    SUB	SP, SP, #20
0x0922	0xF8CDE000  STR	LR, [SP, #0]
0x0926	0x4605    MOV	R5, R0
; byte_in end address is: 0 (R0)
; byte_in start address is: 20 (R5)
;__Lib_Conversions.c, 977 :: 		
0x0928	0x2100    MOVS	R1, #0
0x092A	0xF88D100C  STRB	R1, [SP, #12]
0x092E	0x2100    MOVS	R1, #0
0x0930	0xF88D100D  STRB	R1, [SP, #13]
0x0934	0x2100    MOVS	R1, #0
0x0936	0xF88D100E  STRB	R1, [SP, #14]
0x093A	0xF88D100F  STRB	R1, [SP, #15]
0x093E	0xF88D1010  STRB	R1, [SP, #16]
0x0942	0xF88D1011  STRB	R1, [SP, #17]
0x0946	0xF88D1012  STRB	R1, [SP, #18]
;__Lib_Conversions.c, 978 :: 		
;__Lib_Conversions.c, 979 :: 		
; result start address is: 12 (R3)
0x094A	0xF2400300  MOVW	R3, #0
0x094E	0xB21B    SXTH	R3, R3
;__Lib_Conversions.c, 980 :: 		
;__Lib_Conversions.c, 982 :: 		
0x0950	0xF8AD3004  STRH	R3, [SP, #4]
0x0954	0x4628    MOV	R0, R5
0x0956	0xF7FFFDD5  BL	_strlen+0
0x095A	0xF9BD3004  LDRSH	R3, [SP, #4]
; i1 start address is: 16 (R4)
0x095E	0xB2C4    UXTB	R4, R0
;__Lib_Conversions.c, 983 :: 		
0x0960	0xB2C1    UXTB	R1, R0
0x0962	0x2906    CMP	R1, #6
0x0964	0xF2008063  BHI	L_StrToInt193
;__Lib_Conversions.c, 985 :: 		
0x0968	0xAA03    ADD	R2, SP, #12
0x096A	0xF10D010D  ADD	R1, SP, #13
0x096E	0xF88D4004  STRB	R4, [SP, #4]
0x0972	0xF8AD3006  STRH	R3, [SP, #6]
0x0976	0x9502    STR	R5, [SP, #8]
0x0978	0x4628    MOV	R0, R5
0x097A	0xF7FFFD87  BL	__Lib_Conversions_Forward_Input+0
0x097E	0x9D02    LDR	R5, [SP, #8]
0x0980	0xF9BD3006  LDRSH	R3, [SP, #6]
0x0984	0xF89D4004  LDRB	R4, [SP, #4]
; multiplier start address is: 24 (R6)
0x0988	0x4606    MOV	R6, R0
;__Lib_Conversions.c, 987 :: 		
0x098A	0xF89D100C  LDRB	R1, [SP, #12]
0x098E	0x2901    CMP	R1, #1
0x0990	0xD84A    BHI	L_StrToInt194
;__Lib_Conversions.c, 989 :: 		
0x0992	0x7829    LDRB	R1, [R5, #0]
0x0994	0x292D    CMP	R1, #45
0x0996	0xD01B    BEQ	L_StrToInt195
; byte_in end address is: 20 (R5)
;__Lib_Conversions.c, 991 :: 		
; i start address is: 0 (R0)
0x0998	0x2000    MOVS	R0, #0
; i1 end address is: 16 (R4)
; multiplier end address is: 24 (R6)
; i end address is: 0 (R0)
; result end address is: 12 (R3)
0x099A	0xB2E2    UXTB	R2, R4
0x099C	0x4635    MOV	R5, R6
L_StrToInt196:
; i start address is: 0 (R0)
; multiplier start address is: 20 (R5)
; i1 start address is: 8 (R2)
; result start address is: 12 (R3)
0x099E	0x4290    CMP	R0, R2
0x09A0	0xD20E    BCS	L_StrToInt197
;__Lib_Conversions.c, 993 :: 		
0x09A2	0xF10D010D  ADD	R1, SP, #13
0x09A6	0x1809    ADDS	R1, R1, R0
0x09A8	0x7809    LDRB	R1, [R1, #0]
0x09AA	0x3930    SUBS	R1, #48
0x09AC	0xB209    SXTH	R1, R1
0x09AE	0x4369    MULS	R1, R5, R1
0x09B0	0x1859    ADDS	R1, R3, R1
0x09B2	0xB20B    SXTH	R3, R1
;__Lib_Conversions.c, 994 :: 		
0x09B4	0x210A    MOVS	R1, #10
0x09B6	0xFBB5F5F1  UDIV	R5, R5, R1
;__Lib_Conversions.c, 991 :: 		
0x09BA	0x1C40    ADDS	R0, R0, #1
0x09BC	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 995 :: 		
; i1 end address is: 8 (R2)
; multiplier end address is: 20 (R5)
; i end address is: 0 (R0)
0x09BE	0xE7EE    B	L_StrToInt196
L_StrToInt197:
;__Lib_Conversions.c, 996 :: 		
0x09C0	0x491E    LDR	R1, [PC, #120]
0x09C2	0x428B    CMP	R3, R1
0x09C4	0xD102    BNE	L__StrToInt476
; result end address is: 12 (R3)
;__Lib_Conversions.c, 997 :: 		
; result start address is: 0 (R0)
0x09C6	0x2000    MOVS	R0, #0
0x09C8	0xB200    SXTH	R0, R0
; result end address is: 0 (R0)
0x09CA	0xE000    B	L_StrToInt199
L__StrToInt476:
;__Lib_Conversions.c, 996 :: 		
0x09CC	0xB218    SXTH	R0, R3
;__Lib_Conversions.c, 997 :: 		
L_StrToInt199:
;__Lib_Conversions.c, 998 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x09CE	0xE02A    B	L_StrToInt200
L_StrToInt195:
;__Lib_Conversions.c, 999 :: 		
; result start address is: 12 (R3)
; multiplier start address is: 24 (R6)
; i1 start address is: 16 (R4)
; byte_in start address is: 20 (R5)
0x09D0	0x462A    MOV	R2, R5
0x09D2	0x212D    MOVS	R1, #45
0x09D4	0x7029    STRB	R1, [R5, #0]
; byte_in end address is: 20 (R5)
0x09D6	0x7811    LDRB	R1, [R2, #0]
0x09D8	0xB311    CBZ	R1, L__StrToInt478
0x09DA	0xF89D100C  LDRB	R1, [SP, #12]
0x09DE	0x2901    CMP	R1, #1
0x09E0	0xD120    BNE	L__StrToInt479
L__StrToInt473:
;__Lib_Conversions.c, 1001 :: 		
; i start address is: 8 (R2)
0x09E2	0x2201    MOVS	R2, #1
; i1 end address is: 16 (R4)
; multiplier end address is: 24 (R6)
; result end address is: 12 (R3)
; i end address is: 8 (R2)
0x09E4	0xB2E0    UXTB	R0, R4
0x09E6	0x4634    MOV	R4, R6
L_StrToInt204:
; i start address is: 8 (R2)
; multiplier start address is: 16 (R4)
; i1 start address is: 0 (R0)
; result start address is: 12 (R3)
0x09E8	0x4282    CMP	R2, R0
0x09EA	0xD20E    BCS	L_StrToInt205
;__Lib_Conversions.c, 1003 :: 		
0x09EC	0xF10D010D  ADD	R1, SP, #13
0x09F0	0x1889    ADDS	R1, R1, R2
0x09F2	0x7809    LDRB	R1, [R1, #0]
0x09F4	0x3930    SUBS	R1, #48
0x09F6	0xB209    SXTH	R1, R1
0x09F8	0x4361    MULS	R1, R4, R1
0x09FA	0x1859    ADDS	R1, R3, R1
0x09FC	0xB20B    SXTH	R3, R1
;__Lib_Conversions.c, 1004 :: 		
0x09FE	0x210A    MOVS	R1, #10
0x0A00	0xFBB4F4F1  UDIV	R4, R4, R1
;__Lib_Conversions.c, 1001 :: 		
0x0A04	0x1C52    ADDS	R2, R2, #1
0x0A06	0xB2D2    UXTB	R2, R2
;__Lib_Conversions.c, 1005 :: 		
; i1 end address is: 0 (R0)
; multiplier end address is: 16 (R4)
; i end address is: 8 (R2)
0x0A08	0xE7EE    B	L_StrToInt204
L_StrToInt205:
;__Lib_Conversions.c, 1006 :: 		
0x0A0A	0x425A    RSBS	R2, R3, #0
0x0A0C	0xB212    SXTH	R2, R2
; result end address is: 12 (R3)
; result start address is: 0 (R0)
0x0A0E	0xB210    SXTH	R0, R2
;__Lib_Conversions.c, 1007 :: 		
0x0A10	0xF64771FF  MOVW	R1, #32767
0x0A14	0x428A    CMP	R2, R1
0x0A16	0xD102    BNE	L__StrToInt477
;__Lib_Conversions.c, 1008 :: 		
0x0A18	0x2000    MOVS	R0, #0
0x0A1A	0xB200    SXTH	R0, R0
; result end address is: 0 (R0)
0x0A1C	0xE7FF    B	L_StrToInt207
L__StrToInt477:
;__Lib_Conversions.c, 1007 :: 		
;__Lib_Conversions.c, 1008 :: 		
L_StrToInt207:
;__Lib_Conversions.c, 999 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x0A1E	0xE000    B	L__StrToInt475
L__StrToInt478:
0x0A20	0xB218    SXTH	R0, R3
L__StrToInt475:
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x0A22	0xE000    B	L__StrToInt474
L__StrToInt479:
0x0A24	0xB218    SXTH	R0, R3
L__StrToInt474:
;__Lib_Conversions.c, 1009 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
L_StrToInt200:
;__Lib_Conversions.c, 1010 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x0A26	0xE001    B	L_StrToInt208
L_StrToInt194:
;__Lib_Conversions.c, 1011 :: 		
; result start address is: 0 (R0)
0x0A28	0x2000    MOVS	R0, #0
0x0A2A	0xB200    SXTH	R0, R0
; result end address is: 0 (R0)
L_StrToInt208:
;__Lib_Conversions.c, 1012 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
0x0A2C	0xE001    B	L_StrToInt209
L_StrToInt193:
;__Lib_Conversions.c, 1013 :: 		
; result start address is: 0 (R0)
0x0A2E	0x2000    MOVS	R0, #0
0x0A30	0xB200    SXTH	R0, R0
; result end address is: 0 (R0)
L_StrToInt209:
;__Lib_Conversions.c, 1014 :: 		
; result start address is: 0 (R0)
; result end address is: 0 (R0)
;__Lib_Conversions.c, 1015 :: 		
L_end_StrToInt:
0x0A32	0xF8DDE000  LDR	LR, [SP, #0]
0x0A36	0xB005    ADD	SP, SP, #20
0x0A38	0x4770    BX	LR
0x0A3A	0xBF00    NOP
0x0A3C	0x8000FFFF  	#-32768
; end of _StrToInt
_StrToLong:
;__Lib_Conversions.c, 1074 :: 		
; dWord_in start address is: 0 (R0)
0x0A40	0xB085    SUB	SP, SP, #20
0x0A42	0xF8CDE000  STR	LR, [SP, #0]
0x0A46	0x4604    MOV	R4, R0
; dWord_in end address is: 0 (R0)
; dWord_in start address is: 16 (R4)
;__Lib_Conversions.c, 1076 :: 		
0x0A48	0xF10D0B05  ADD	R11, SP, #5
0x0A4C	0xF10B0A0B  ADD	R10, R11, #11
0x0A50	0xF8DFC09C  LDR	R12, [PC, #156]
0x0A54	0xF001FD98  BL	___CC2DW+0
;__Lib_Conversions.c, 1077 :: 		
;__Lib_Conversions.c, 1078 :: 		
0x0A58	0xF04F0100  MOV	R1, #0
0x0A5C	0x9104    STR	R1, [SP, #16]
;__Lib_Conversions.c, 1079 :: 		
;__Lib_Conversions.c, 1081 :: 		
0x0A5E	0x4620    MOV	R0, R4
0x0A60	0xF7FFFD50  BL	_strlen+0
0x0A64	0xF88D0004  STRB	R0, [SP, #4]
;__Lib_Conversions.c, 1083 :: 		
0x0A68	0xB2C1    UXTB	R1, R0
0x0A6A	0x290A    CMP	R1, #10
0x0A6C	0xD839    BHI	L_StrToLong217
;__Lib_Conversions.c, 1085 :: 		
0x0A6E	0xF10D0205  ADD	R2, SP, #5
0x0A72	0xF10D0106  ADD	R1, SP, #6
0x0A76	0x4620    MOV	R0, R4
; dWord_in end address is: 16 (R4)
0x0A78	0xF7FFFD08  BL	__Lib_Conversions_Forward_Input+0
; multiplier start address is: 16 (R4)
0x0A7C	0x4604    MOV	R4, R0
0x0A7E	0x460D    MOV	R5, R1
;__Lib_Conversions.c, 1087 :: 		
0x0A80	0xF89D1005  LDRB	R1, [SP, #5]
0x0A84	0xBB51    CBNZ	R1, L_StrToLong218
;__Lib_Conversions.c, 1089 :: 		
; i start address is: 44 (R11)
0x0A86	0xF2400B00  MOVW	R11, #0
; multiplier end address is: 16 (R4)
; i end address is: 44 (R11)
0x0A8A	0xFA5FFA8B  UXTB	R10, R11
L_StrToLong219:
; i start address is: 40 (R10)
; multiplier start address is: 16 (R4)
0x0A8E	0xF89D1004  LDRB	R1, [SP, #4]
0x0A92	0x458A    CMP	R10, R1
0x0A94	0xD221    BCS	L_StrToLong220
;__Lib_Conversions.c, 1091 :: 		
0x0A96	0xF10D0106  ADD	R1, SP, #6
0x0A9A	0xEB01010A  ADD	R1, R1, R10, LSL #0
0x0A9E	0x7809    LDRB	R1, [R1, #0]
0x0AA0	0x3930    SUBS	R1, #48
0x0AA2	0xB209    SXTH	R1, R1
0x0AA4	0xFBA12304  UMULL	R2, R3, R1, R4
0x0AA8	0xFB023304  MLA	R3, R2, R4, R3
0x0AAC	0xFB013305  MLA	R3, R1, R5, R3
0x0AB0	0x9904    LDR	R1, [SP, #16]
0x0AB2	0x1889    ADDS	R1, R1, R2
0x0AB4	0x415A    ADCS	R2, R3
0x0AB6	0x9104    STR	R1, [SP, #16]
;__Lib_Conversions.c, 1092 :: 		
0x0AB8	0x220A    MOVS	R2, #10
0x0ABA	0x2300    MOVS	R3, #0
0x0ABC	0x4620    MOV	R0, R4
0x0ABE	0x4629    MOV	R1, R5
0x0AC0	0xF7FFFBE6  BL	__Div_64x64_U+0
; multiplier end address is: 16 (R4)
; multiplier start address is: 8 (R2)
0x0AC4	0x4602    MOV	R2, R0
0x0AC6	0x460B    MOV	R3, R1
;__Lib_Conversions.c, 1089 :: 		
0x0AC8	0xF10A0101  ADD	R1, R10, #1
; i end address is: 40 (R10)
; i start address is: 44 (R11)
0x0ACC	0xFA5FFB81  UXTB	R11, R1
;__Lib_Conversions.c, 1093 :: 		
0x0AD0	0x4614    MOV	R4, R2
0x0AD2	0x461D    MOV	R5, R3
; multiplier end address is: 8 (R2)
; i end address is: 44 (R11)
0x0AD4	0xFA5FFA8B  UXTB	R10, R11
0x0AD8	0xE7D9    B	L_StrToLong219
L_StrToLong220:
;__Lib_Conversions.c, 1094 :: 		
0x0ADA	0xE001    B	L_StrToLong222
L_StrToLong218:
;__Lib_Conversions.c, 1095 :: 		
0x0ADC	0x2100    MOVS	R1, #0
0x0ADE	0x9104    STR	R1, [SP, #16]
L_StrToLong222:
;__Lib_Conversions.c, 1096 :: 		
0x0AE0	0xE001    B	L_StrToLong223
L_StrToLong217:
;__Lib_Conversions.c, 1097 :: 		
0x0AE2	0x2100    MOVS	R1, #0
0x0AE4	0x9104    STR	R1, [SP, #16]
L_StrToLong223:
;__Lib_Conversions.c, 1098 :: 		
0x0AE6	0x9804    LDR	R0, [SP, #16]
;__Lib_Conversions.c, 1099 :: 		
L_end_StrToLong:
0x0AE8	0xF8DDE000  LDR	LR, [SP, #0]
0x0AEC	0xB005    ADD	SP, SP, #20
0x0AEE	0x4770    BX	LR
0x0AF0	0x69DD0000  	?ICSStrToLong_counter_L0+0
; end of _StrToLong
_vRF4463TxData:
;driverrf4463pro.c, 558 :: 		void vRF4463TxData( void ) {
0x3318	0xB086    SUB	SP, SP, #24
0x331A	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 561 :: 		ucRF4463IRQ = 0;
0x331E	0x2100    MOVS	R1, #0
0x3320	0x4822    LDR	R0, [PC, #136]
0x3322	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 563 :: 		Flag.is_tx = 1;
0x3324	0x2101    MOVS	R1, #1
0x3326	0xB249    SXTB	R1, R1
0x3328	0x4821    LDR	R0, [PC, #132]
0x332A	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 566 :: 		LED_RED =~ LED_RED;
0x332C	0x4821    LDR	R0, [PC, #132]
0x332E	0x6800    LDR	R0, [R0, #0]
0x3330	0xF0800101  EOR	R1, R0, #1
0x3334	0xB2C9    UXTB	R1, R1
0x3336	0x481F    LDR	R0, [PC, #124]
0x3338	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 567 :: 		vRF4463FifoReset();            // fifo_reset();  // Buffer empty
0x333A	0xF7FDFEFB  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 568 :: 		spi_write_fifo();              // Fill the buffer with data
0x333E	0xF7FDFE9B  BL	_spi_write_fifo+0
;driverrf4463pro.c, 569 :: 		vRF4463EnableTxInterrupt();    // enable_tx_interrupt();
0x3342	0xF7FEFC2D  BL	_vRF4463EnableTxInterrupt+0
;driverrf4463pro.c, 570 :: 		vRF4463ClearInterrupts();       // clr_interrupt();  // Clear interrupt factor
0x3346	0xF7FFFF39  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 571 :: 		vRF4463TxStart();              // tx_start();    // Enter launch mode, start launch
0x334A	0xF7FDFE13  BL	_vRF4463TxStart+0
;driverrf4463pro.c, 572 :: 		rf_timeout = 0;
0x334E	0x2100    MOVS	R1, #0
0x3350	0x4819    LDR	R0, [PC, #100]
0x3352	0x8001    STRH	R1, [R0, #0]
;driverrf4463pro.c, 574 :: 		Flag.rf_reach_timeout = 0;
0x3354	0x2100    MOVS	R1, #0
0x3356	0xB249    SXTB	R1, R1
0x3358	0x4818    LDR	R0, [PC, #96]
0x335A	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 576 :: 		if ( ucRF4463IRQ ) {
0x335C	0x4813    LDR	R0, [PC, #76]
0x335E	0x7800    LDRB	R0, [R0, #0]
0x3360	0xB160    CBZ	R0, L_vRF4463TxData93
;driverrf4463pro.c, 577 :: 		UART1_Write_Text( "[ UART1 ] TX INT\r\n" );
0x3362	0xF10D0B04  ADD	R11, SP, #4
0x3366	0xF10B0A13  ADD	R10, R11, #19
0x336A	0xF8DFC054  LDR	R12, [PC, #84]
0x336E	0xF7FFF90B  BL	___CC2DW+0
0x3372	0xA801    ADD	R0, SP, #4
0x3374	0x4604    MOV	R4, R0
0x3376	0x4620    MOV	R0, R4
0x3378	0xF7FFFF9A  BL	_UART1_Write_Text+0
;driverrf4463pro.c, 578 :: 		}
L_vRF4463TxData93:
;driverrf4463pro.c, 581 :: 		while ( nIRQ ) {     //nIRQ
L_vRF4463TxData94:
0x337C	0x4811    LDR	R0, [PC, #68]
0x337E	0x6800    LDR	R0, [R0, #0]
0x3380	0xB140    CBZ	R0, L_vRF4463TxData95
;driverrf4463pro.c, 584 :: 		if ( Flag.rf_reach_timeout ) {
0x3382	0x490E    LDR	R1, [PC, #56]
0x3384	0x6808    LDR	R0, [R1, #0]
0x3386	0xB120    CBZ	R0, L_vRF4463TxData96
;driverrf4463pro.c, 585 :: 		VRF4463SDNReset();
0x3388	0xF7FFFECA  BL	_VRF4463SDNReset+0
;driverrf4463pro.c, 586 :: 		vRF4463Init();        //SI4463_init();  // RF Module initialization
0x338C	0xF7FFF906  BL	_vRF4463Init+0
;driverrf4463pro.c, 587 :: 		break;                // Forced out
0x3390	0xE000    B	L_vRF4463TxData95
;driverrf4463pro.c, 588 :: 		}
L_vRF4463TxData96:
;driverrf4463pro.c, 589 :: 		}
0x3392	0xE7F3    B	L_vRF4463TxData94
L_vRF4463TxData95:
;driverrf4463pro.c, 591 :: 		tx_cnt++;
0x3394	0x480C    LDR	R0, [PC, #48]
0x3396	0x6800    LDR	R0, [R0, #0]
0x3398	0x1C41    ADDS	R1, R0, #1
0x339A	0x480B    LDR	R0, [PC, #44]
0x339C	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 593 :: 		vRF4463RxInit();          // rx_init();                //rf After the transmission is completed, enter the receiving mode
0x339E	0xF7FDFE4D  BL	_vRF4463RxInit+0
;driverrf4463pro.c, 594 :: 		}
L_end_vRF4463TxData:
0x33A2	0xF8DDE000  LDR	LR, [SP, #0]
0x33A6	0xB006    ADD	SP, SP, #24
0x33A8	0x4770    BX	LR
0x33AA	0xBF00    NOP
0x33AC	0x21FB2000  	DriverRF4463PROMain_ucRF4463IRQ+0
0x33B0	0x57A42204  	_Flag+0
0x33B4	0x02AC4242  	GPIOE_ODRbits+0
0x33B8	0x23002000  	_rf_timeout+0
0x33BC	0x57A82204  	_Flag+0
0x33C0	0x69BC0000  	?ICS?lstr1_DriverRF4463PROMain+0
0x33C4	0x82004241  	GPIOD_IDRbits+0
0x33C8	0x21FC2000  	_tx_cnt+0
; end of _vRF4463TxData
_vRF4463FifoReset:
;driverrf4463pro.c, 407 :: 		void vRF4463FifoReset( void ) {
0x1134	0xB082    SUB	SP, SP, #8
0x1136	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 410 :: 		p[ 0 ] = FIFO_INFO;
0x113A	0xA801    ADD	R0, SP, #4
0x113C	0x1C01    ADDS	R1, R0, #0
0x113E	0x2015    MOVS	R0, #21
0x1140	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 411 :: 		p[ 1 ] = 0x03;   // reset tx ,rx fifo
0x1142	0xA801    ADD	R0, SP, #4
0x1144	0x1C41    ADDS	R1, R0, #1
0x1146	0x2003    MOVS	R0, #3
0x1148	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 412 :: 		spi_write( 2, p );
0x114A	0xA801    ADD	R0, SP, #4
0x114C	0xB401    PUSH	(R0)
0x114E	0x2002    MOVS	R0, #2
0x1150	0xB401    PUSH	(R0)
0x1152	0xF000FDA7  BL	_spi_write+0
0x1156	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 413 :: 		}
L_end_vRF4463FifoReset:
0x1158	0xF8DDE000  LDR	LR, [SP, #0]
0x115C	0xB002    ADD	SP, SP, #8
0x115E	0x4770    BX	LR
; end of _vRF4463FifoReset
_spi_write_fifo:
;driverrf4463pro.c, 846 :: 		void spi_write_fifo( void ) {
0x1078	0xB082    SUB	SP, SP, #8
0x107A	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 849 :: 		i = 0;
0x107E	0x2000    MOVS	R0, #0
0x1080	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 850 :: 		while ( i != 0xFF ) {
L_spi_write_fifo133:
0x1084	0xF89D0004  LDRB	R0, [SP, #4]
0x1088	0xF1B00FFF  CMP	R0, #255
0x108C	0xD004    BEQ	L_spi_write_fifo134
;driverrf4463pro.c, 851 :: 		i = check_cts();                // Check if you can send Command
0x108E	0xF7FFFB49  BL	_check_cts+0
0x1092	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 852 :: 		}
0x1096	0xE7F5    B	L_spi_write_fifo133
L_spi_write_fifo134:
;driverrf4463pro.c, 854 :: 		nSEL = 1;
0x1098	0x2101    MOVS	R1, #1
0x109A	0xB249    SXTB	R1, R1
0x109C	0x4821    LDR	R0, [PC, #132]
0x109E	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 855 :: 		nSEL = 0;
0x10A0	0x2100    MOVS	R1, #0
0x10A2	0xB249    SXTB	R1, R1
0x10A4	0x481F    LDR	R0, [PC, #124]
0x10A6	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 856 :: 		ucRf4463SPIByte( WRITE_TX_FIFO );
0x10A8	0x2066    MOVS	R0, #102
0x10AA	0xB401    PUSH	(R0)
0x10AC	0xF7FFFA9E  BL	_ucRf4463SPIByte+0
0x10B0	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 858 :: 		if ( ucRF4463Mode == tx_test_mode) {
0x10B2	0x481D    LDR	R0, [PC, #116]
0x10B4	0x7800    LDRB	R0, [R0, #0]
0x10B6	0x2802    CMP	R0, #2
0x10B8	0xD116    BNE	L_spi_write_fifo135
;driverrf4463pro.c, 859 :: 		for ( i = 0; i < payload_length; i++ ) {
0x10BA	0x2000    MOVS	R0, #0
0x10BC	0xF88D0004  STRB	R0, [SP, #4]
L_spi_write_fifo136:
0x10C0	0xF89D0004  LDRB	R0, [SP, #4]
0x10C4	0x2842    CMP	R0, #66
0x10C6	0xD20E    BCS	L_spi_write_fifo137
;driverrf4463pro.c, 860 :: 		ucRf4463SPIByte( tx_test_aa_data[ i ] );   // Send 10 test data
0x10C8	0xF89D1004  LDRB	R1, [SP, #4]
0x10CC	0x4817    LDR	R0, [PC, #92]
0x10CE	0x1840    ADDS	R0, R0, R1
0x10D0	0x7800    LDRB	R0, [R0, #0]
0x10D2	0xB401    PUSH	(R0)
0x10D4	0xF7FFFA8A  BL	_ucRf4463SPIByte+0
0x10D8	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 859 :: 		for ( i = 0; i < payload_length; i++ ) {
0x10DA	0xF89D0004  LDRB	R0, [SP, #4]
0x10DE	0x1C40    ADDS	R0, R0, #1
0x10E0	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 861 :: 		}
0x10E4	0xE7EC    B	L_spi_write_fifo136
L_spi_write_fifo137:
;driverrf4463pro.c, 862 :: 		}
0x10E6	0xE015    B	L_spi_write_fifo139
L_spi_write_fifo135:
;driverrf4463pro.c, 864 :: 		for ( i = 0; i < payload_length; i++ ) {
0x10E8	0x2000    MOVS	R0, #0
0x10EA	0xF88D0004  STRB	R0, [SP, #4]
L_spi_write_fifo140:
0x10EE	0xF89D0004  LDRB	R0, [SP, #4]
0x10F2	0x2842    CMP	R0, #66
0x10F4	0xD20E    BCS	L_spi_write_fifo141
;driverrf4463pro.c, 865 :: 		ucRf4463SPIByte( ucRF4463TXdata[ i ] );
0x10F6	0xF89D1004  LDRB	R1, [SP, #4]
0x10FA	0x480D    LDR	R0, [PC, #52]
0x10FC	0x1840    ADDS	R0, R0, R1
0x10FE	0x7800    LDRB	R0, [R0, #0]
0x1100	0xB401    PUSH	(R0)
0x1102	0xF7FFFA73  BL	_ucRf4463SPIByte+0
0x1106	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 864 :: 		for ( i = 0; i < payload_length; i++ ) {
0x1108	0xF89D0004  LDRB	R0, [SP, #4]
0x110C	0x1C40    ADDS	R0, R0, #1
0x110E	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 866 :: 		}
0x1112	0xE7EC    B	L_spi_write_fifo140
L_spi_write_fifo141:
;driverrf4463pro.c, 867 :: 		}
L_spi_write_fifo139:
;driverrf4463pro.c, 868 :: 		nSEL = 1;
0x1114	0x2101    MOVS	R1, #1
0x1116	0xB249    SXTB	R1, R1
0x1118	0x4802    LDR	R0, [PC, #8]
0x111A	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 869 :: 		}
L_end_spi_write_fifo:
0x111C	0xF8DDE000  LDR	LR, [SP, #0]
0x1120	0xB002    ADD	SP, SP, #8
0x1122	0x4770    BX	LR
0x1124	0x82884241  	GPIOD_ODRbits+0
0x1128	0x22A82000  	_ucRF4463Mode+0
0x112C	0x69CF0000  	_tx_test_aa_data+0
0x1130	0x69640000  	_ucRF4463TXdata+0
; end of _spi_write_fifo
_vRF4463EnableTxInterrupt:
;driverrf4463pro.c, 460 :: 		void vRF4463EnableTxInterrupt( void ) {
0x1BA0	0xB083    SUB	SP, SP, #12
0x1BA2	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 463 :: 		p[ 0 ] = 0x11;
0x1BA6	0xA801    ADD	R0, SP, #4
0x1BA8	0x1C01    ADDS	R1, R0, #0
0x1BAA	0x2011    MOVS	R0, #17
0x1BAC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 464 :: 		p[ 1 ] = 0x01;            // 0x0100
0x1BAE	0xA801    ADD	R0, SP, #4
0x1BB0	0x1C41    ADDS	R1, R0, #1
0x1BB2	0x2001    MOVS	R0, #1
0x1BB4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 465 :: 		p[ 2 ] = 0x02;            // 2Parameters
0x1BB6	0xA801    ADD	R0, SP, #4
0x1BB8	0x1C81    ADDS	R1, R0, #2
0x1BBA	0x2002    MOVS	R0, #2
0x1BBC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 466 :: 		p[ 3 ] = 0x00;            // 0x0100
0x1BBE	0xA801    ADD	R0, SP, #4
0x1BC0	0x1CC1    ADDS	R1, R0, #3
0x1BC2	0x2000    MOVS	R0, #0
0x1BC4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 467 :: 		p[ 4 ] = 0x01;            // Ph  int
0x1BC6	0xA801    ADD	R0, SP, #4
0x1BC8	0x1D01    ADDS	R1, R0, #4
0x1BCA	0x2001    MOVS	R0, #1
0x1BCC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 468 :: 		p[ 5 ] = 0x20;            //  enable  packet sent interrupt
0x1BCE	0xA801    ADD	R0, SP, #4
0x1BD0	0x1D41    ADDS	R1, R0, #5
0x1BD2	0x2020    MOVS	R0, #32
0x1BD4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 469 :: 		spi_write( 0x06, p );     // enable  packet receive interrupt
0x1BD6	0xA801    ADD	R0, SP, #4
0x1BD8	0xB401    PUSH	(R0)
0x1BDA	0x2006    MOVS	R0, #6
0x1BDC	0xB401    PUSH	(R0)
0x1BDE	0xF000F861  BL	_spi_write+0
0x1BE2	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 470 :: 		}
L_end_vRF4463EnableTxInterrupt:
0x1BE4	0xF8DDE000  LDR	LR, [SP, #0]
0x1BE8	0xB003    ADD	SP, SP, #12
0x1BEA	0x4770    BX	LR
; end of _vRF4463EnableTxInterrupt
_vRF4463TxStart:
;driverrf4463pro.c, 486 :: 		void vRF4463TxStart( void ) {
0x0F74	0xB083    SUB	SP, SP, #12
0x0F76	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 489 :: 		p[ 0 ] = START_TX ;              // start Command
0x0F7A	0xA801    ADD	R0, SP, #4
0x0F7C	0x1C01    ADDS	R1, R0, #0
0x0F7E	0x2031    MOVS	R0, #49
0x0F80	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 490 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 1 default
0x0F82	0xA801    ADD	R0, SP, #4
0x0F84	0x1C41    ADDS	R1, R0, #1
0x0F86	0x480D    LDR	R0, [PC, #52]
0x0F88	0x7800    LDRB	R0, [R0, #0]
0x0F8A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 491 :: 		p[ 2 ] = 0x30;                   // Back after launch Readymode, Do not retransmit, launch immediately
0x0F8C	0xA801    ADD	R0, SP, #4
0x0F8E	0x1C81    ADDS	R1, R0, #2
0x0F90	0x2030    MOVS	R0, #48
0x0F92	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 492 :: 		p[ 3 ] = 0;
0x0F94	0xA801    ADD	R0, SP, #4
0x0F96	0x1CC1    ADDS	R1, R0, #3
0x0F98	0x2000    MOVS	R0, #0
0x0F9A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 493 :: 		p[ 4 ] = 0;                      // payload_length; // Total to transmit 10 bytes
0x0F9C	0xA801    ADD	R0, SP, #4
0x0F9E	0x1D01    ADDS	R1, R0, #4
0x0FA0	0x2000    MOVS	R0, #0
0x0FA2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 494 :: 		spi_write( 5, p );
0x0FA4	0xA801    ADD	R0, SP, #4
0x0FA6	0xB401    PUSH	(R0)
0x0FA8	0x2005    MOVS	R0, #5
0x0FAA	0xB401    PUSH	(R0)
0x0FAC	0xF000FE7A  BL	_spi_write+0
0x0FB0	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 495 :: 		}
L_end_vRF4463TxStart:
0x0FB2	0xF8DDE000  LDR	LR, [SP, #0]
0x0FB6	0xB003    ADD	SP, SP, #12
0x0FB8	0x4770    BX	LR
0x0FBA	0xBF00    NOP
0x0FBC	0x207C2000  	_ucRF4463FreqChannel+0
; end of _vRF4463TxStart
_vRF4463RxInit:
;driverrf4463pro.c, 541 :: 		void vRF4463RxInit( void ) {
0x103C	0xB081    SUB	SP, SP, #4
0x103E	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 542 :: 		Flag.is_tx = 0;
0x1042	0x2100    MOVS	R1, #0
0x1044	0xB249    SXTB	R1, R1
0x1046	0x480A    LDR	R0, [PC, #40]
0x1048	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 543 :: 		vRF4463FifoReset();           // fifo_reset();  // Buffer empty
0x104A	0xF000F873  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 544 :: 		vRF4463EnableRxInterrupt();   // enable_rx_interrupt();
0x104E	0xF7FFFF67  BL	_vRF4463EnableRxInterrupt+0
;driverrf4463pro.c, 545 :: 		vRF4463ClearInterrupts();      // clr_interrupt();  // Clear interrupt factor
0x1052	0xF002F8B3  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 547 :: 		if ( ucRF4463Mode == rx_test_mode ) {
0x1056	0x4807    LDR	R0, [PC, #28]
0x1058	0x7800    LDRB	R0, [R0, #0]
0x105A	0x2803    CMP	R0, #3
0x105C	0xD102    BNE	L_vRF4463RxInit91
;driverrf4463pro.c, 548 :: 		vRF4463RxStartTest();      // rx_start_test();
0x105E	0xF7FFFF27  BL	_vRF4463RxStartTest+0
;driverrf4463pro.c, 549 :: 		}
0x1062	0xE001    B	L_vRF4463RxInit92
L_vRF4463RxInit91:
;driverrf4463pro.c, 551 :: 		vRF4463RxStart();        // rx_start();    // Enter receiving mode, after receiving data, return to Readymode
0x1064	0xF7FFFB0E  BL	_vRF4463RxStart+0
;driverrf4463pro.c, 552 :: 		}
L_vRF4463RxInit92:
;driverrf4463pro.c, 553 :: 		}
L_end_vRF4463RxInit:
0x1068	0xF8DDE000  LDR	LR, [SP, #0]
0x106C	0xB001    ADD	SP, SP, #4
0x106E	0x4770    BX	LR
0x1070	0x57A42204  	_Flag+0
0x1074	0x22A82000  	_ucRF4463Mode+0
; end of _vRF4463RxInit
_vRF4463EnableRxInterrupt:
;driverrf4463pro.c, 444 :: 		void vRF4463EnableRxInterrupt( void ) {
0x0F20	0xB083    SUB	SP, SP, #12
0x0F22	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 447 :: 		p[ 0 ] = 0x11;
0x0F26	0xA801    ADD	R0, SP, #4
0x0F28	0x1C01    ADDS	R1, R0, #0
0x0F2A	0x2011    MOVS	R0, #17
0x0F2C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 448 :: 		p[ 1 ] = 0x01;            // 0x0100
0x0F2E	0xA801    ADD	R0, SP, #4
0x0F30	0x1C41    ADDS	R1, R0, #1
0x0F32	0x2001    MOVS	R0, #1
0x0F34	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 449 :: 		p[ 2 ] = 0x03;            // 3Parameters
0x0F36	0xA801    ADD	R0, SP, #4
0x0F38	0x1C81    ADDS	R1, R0, #2
0x0F3A	0x2003    MOVS	R0, #3
0x0F3C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 450 :: 		p[ 3 ] = 0x00;            // 0100
0x0F3E	0xA801    ADD	R0, SP, #4
0x0F40	0x1CC1    ADDS	R1, R0, #3
0x0F42	0x2000    MOVS	R0, #0
0x0F44	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 451 :: 		p[ 4 ] = 0x03;            // ph, modem int       0x03;
0x0F46	0xA801    ADD	R0, SP, #4
0x0F48	0x1D01    ADDS	R1, R0, #4
0x0F4A	0x2003    MOVS	R0, #3
0x0F4C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 452 :: 		p[ 5 ] = 0x18;            // 0x10;   // Pack received int
0x0F4E	0xA801    ADD	R0, SP, #4
0x0F50	0x1D41    ADDS	R1, R0, #5
0x0F52	0x2018    MOVS	R0, #24
0x0F54	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 453 :: 		p[ 6 ] = 0x00;            //preamble int, sync int setting
0x0F56	0xA801    ADD	R0, SP, #4
0x0F58	0x1D81    ADDS	R1, R0, #6
0x0F5A	0x2000    MOVS	R0, #0
0x0F5C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 454 :: 		spi_write( 0x07, p );     // enable  packet receive interrupt
0x0F5E	0xA801    ADD	R0, SP, #4
0x0F60	0xB401    PUSH	(R0)
0x0F62	0x2007    MOVS	R0, #7
0x0F64	0xB401    PUSH	(R0)
0x0F66	0xF000FE9D  BL	_spi_write+0
0x0F6A	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 455 :: 		}
L_end_vRF4463EnableRxInterrupt:
0x0F6C	0xF8DDE000  LDR	LR, [SP, #0]
0x0F70	0xB003    ADD	SP, SP, #12
0x0F72	0x4770    BX	LR
; end of _vRF4463EnableRxInterrupt
_vRF4463RxStartTest:
;driverrf4463pro.c, 519 :: 		void vRF4463RxStartTest( void ) {
0x0EB0	0xB083    SUB	SP, SP, #12
0x0EB2	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 522 :: 		LED_GREEN = 1;
0x0EB6	0x2101    MOVS	R1, #1
0x0EB8	0xB249    SXTB	R1, R1
0x0EBA	0x4817    LDR	R0, [PC, #92]
0x0EBC	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 524 :: 		p[ 0 ] = START_RX;        // start Command
0x0EBE	0xA801    ADD	R0, SP, #4
0x0EC0	0x1C01    ADDS	R1, R0, #0
0x0EC2	0x2032    MOVS	R0, #50
0x0EC4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 525 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 0
0x0EC6	0xA801    ADD	R0, SP, #4
0x0EC8	0x1C41    ADDS	R1, R0, #1
0x0ECA	0x4814    LDR	R0, [PC, #80]
0x0ECC	0x7800    LDRB	R0, [R0, #0]
0x0ECE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 526 :: 		p[ 2 ] = 0x00;            // Enter receiving mode immediately
0x0ED0	0xA801    ADD	R0, SP, #4
0x0ED2	0x1C81    ADDS	R1, R0, #2
0x0ED4	0x2000    MOVS	R0, #0
0x0ED6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 527 :: 		p[ 3 ] = 0;
0x0ED8	0xA801    ADD	R0, SP, #4
0x0EDA	0x1CC1    ADDS	R1, R0, #3
0x0EDC	0x2000    MOVS	R0, #0
0x0EDE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 529 :: 		p[ 4 ] = 0;
0x0EE0	0xA801    ADD	R0, SP, #4
0x0EE2	0x1D01    ADDS	R1, R0, #4
0x0EE4	0x2000    MOVS	R0, #0
0x0EE6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 530 :: 		p[ 5 ] = 0;               // unchanged after preamble timeout
0x0EE8	0xA801    ADD	R0, SP, #4
0x0EEA	0x1D41    ADDS	R1, R0, #5
0x0EEC	0x2000    MOVS	R0, #0
0x0EEE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 533 :: 		p[ 6 ] = 0x08;
0x0EF0	0xA801    ADD	R0, SP, #4
0x0EF2	0x1D81    ADDS	R1, R0, #6
0x0EF4	0x2008    MOVS	R0, #8
0x0EF6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 534 :: 		p[ 7 ] = 0x08;
0x0EF8	0xA801    ADD	R0, SP, #4
0x0EFA	0x1DC1    ADDS	R1, R0, #7
0x0EFC	0x2008    MOVS	R0, #8
0x0EFE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 535 :: 		spi_write( 8, p );
0x0F00	0xA801    ADD	R0, SP, #4
0x0F02	0xB401    PUSH	(R0)
0x0F04	0x2008    MOVS	R0, #8
0x0F06	0xB401    PUSH	(R0)
0x0F08	0xF000FECC  BL	_spi_write+0
0x0F0C	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 536 :: 		}
L_end_vRF4463RxStartTest:
0x0F0E	0xF8DDE000  LDR	LR, [SP, #0]
0x0F12	0xB003    ADD	SP, SP, #12
0x0F14	0x4770    BX	LR
0x0F16	0xBF00    NOP
0x0F18	0x02A44242  	GPIOE_ODRbits+0
0x0F1C	0x207C2000  	_ucRF4463FreqChannel+0
; end of _vRF4463RxStartTest
_vRF4463RxStart:
;driverrf4463pro.c, 500 :: 		void vRF4463RxStart( void ) {
0x0684	0xB083    SUB	SP, SP, #12
0x0686	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 503 :: 		p[ 0 ] = START_RX ;              // start Command
0x068A	0xA801    ADD	R0, SP, #4
0x068C	0x1C01    ADDS	R1, R0, #0
0x068E	0x2032    MOVS	R0, #50
0x0690	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 504 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 0
0x0692	0xA801    ADD	R0, SP, #4
0x0694	0x1C41    ADDS	R1, R0, #1
0x0696	0x4813    LDR	R0, [PC, #76]
0x0698	0x7800    LDRB	R0, [R0, #0]
0x069A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 505 :: 		p[ 2 ] = 0x00;                   // Enter receiving mode immediately
0x069C	0xA801    ADD	R0, SP, #4
0x069E	0x1C81    ADDS	R1, R0, #2
0x06A0	0x2000    MOVS	R0, #0
0x06A2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 506 :: 		p[ 3 ] = 0;
0x06A4	0xA801    ADD	R0, SP, #4
0x06A6	0x1CC1    ADDS	R1, R0, #3
0x06A8	0x2000    MOVS	R0, #0
0x06AA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 507 :: 		p[ 4 ] = 0;                      // payload_length; // Total to receive 10 bytes
0x06AC	0xA801    ADD	R0, SP, #4
0x06AE	0x1D01    ADDS	R1, R0, #4
0x06B0	0x2000    MOVS	R0, #0
0x06B2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 508 :: 		p[ 5 ] = 0;                      // unchanged after preamble timeout
0x06B4	0xA801    ADD	R0, SP, #4
0x06B6	0x1D41    ADDS	R1, R0, #5
0x06B8	0x2000    MOVS	R0, #0
0x06BA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 511 :: 		p[ 6 ] = 0x08;
0x06BC	0xA801    ADD	R0, SP, #4
0x06BE	0x1D81    ADDS	R1, R0, #6
0x06C0	0x2008    MOVS	R0, #8
0x06C2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 512 :: 		p[ 7 ] = 0x08;
0x06C4	0xA801    ADD	R0, SP, #4
0x06C6	0x1DC1    ADDS	R1, R0, #7
0x06C8	0x2008    MOVS	R0, #8
0x06CA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 513 :: 		spi_write( 8, p );
0x06CC	0xA801    ADD	R0, SP, #4
0x06CE	0xB401    PUSH	(R0)
0x06D0	0x2008    MOVS	R0, #8
0x06D2	0xB401    PUSH	(R0)
0x06D4	0xF001FAE6  BL	_spi_write+0
0x06D8	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 514 :: 		}
L_end_vRF4463RxStart:
0x06DA	0xF8DDE000  LDR	LR, [SP, #0]
0x06DE	0xB003    ADD	SP, SP, #12
0x06E0	0x4770    BX	LR
0x06E2	0xBF00    NOP
0x06E4	0x207C2000  	_ucRF4463FreqChannel+0
; end of _vRF4463RxStart
_vRF4463TxCont:
;driverrf4463pro.c, 599 :: 		void vRF4463TxCont( void ) {
0x2404	0xB081    SUB	SP, SP, #4
0x2406	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 602 :: 		LED_RED = 1;
0x240A	0x2101    MOVS	R1, #1
0x240C	0xB249    SXTB	R1, R1
0x240E	0x480F    LDR	R0, [PC, #60]
0x2410	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 603 :: 		vRF4463FifoReset();                     //  fifo_reset();  // Buffer empty
0x2412	0xF7FEFE8F  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 604 :: 		spi_write_fifo();                       // Fill the buffer with data
0x2416	0xF7FEFE2F  BL	_spi_write_fifo+0
;driverrf4463pro.c, 605 :: 		vRF4463EnableTxInterrupt();             //  enable_tx_interrupt();
0x241A	0xF7FFFBC1  BL	_vRF4463EnableTxInterrupt+0
;driverrf4463pro.c, 606 :: 		vRF4463ClearInterrupts();               //  clr_interrupt();  // Clear interrupt factor
0x241E	0xF000FECD  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 607 :: 		vRF4463TxStart();                       //  tx_start();    // Enter launch mode, start launch
0x2422	0xF7FEFDA7  BL	_vRF4463TxStart+0
;driverrf4463pro.c, 608 :: 		rf_timeout = 0;
0x2426	0x2100    MOVS	R1, #0
0x2428	0x4809    LDR	R0, [PC, #36]
0x242A	0x8001    STRH	R1, [R0, #0]
;driverrf4463pro.c, 609 :: 		Flag.rf_reach_timeout = 0;
0x242C	0x2100    MOVS	R1, #0
0x242E	0xB249    SXTB	R1, R1
0x2430	0x4808    LDR	R0, [PC, #32]
0x2432	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 611 :: 		ucRF4463IRQ = 0;
0x2434	0x2100    MOVS	R1, #0
0x2436	0x4808    LDR	R0, [PC, #32]
0x2438	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 614 :: 		while( nIRQ ) {          //nIRQ ) {
L_vRF4463TxCont97:
0x243A	0x4808    LDR	R0, [PC, #32]
0x243C	0x6800    LDR	R0, [R0, #0]
0x243E	0xB100    CBZ	R0, L_vRF4463TxCont98
;driverrf4463pro.c, 622 :: 		}
0x2440	0xE7FB    B	L_vRF4463TxCont97
L_vRF4463TxCont98:
;driverrf4463pro.c, 623 :: 		}
L_end_vRF4463TxCont:
0x2442	0xF8DDE000  LDR	LR, [SP, #0]
0x2446	0xB001    ADD	SP, SP, #4
0x2448	0x4770    BX	LR
0x244A	0xBF00    NOP
0x244C	0x02AC4242  	GPIOE_ODRbits+0
0x2450	0x23002000  	_rf_timeout+0
0x2454	0x57A82204  	_Flag+0
0x2458	0x21FB2000  	DriverRF4463PROMain_ucRF4463IRQ+0
0x245C	0x82004241  	GPIOD_IDRbits+0
; end of _vRF4463TxCont
_spi_read_fifo:
;driverrf4463pro.c, 874 :: 		void spi_read_fifo( void ) {
0x2460	0xB083    SUB	SP, SP, #12
0x2462	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 877 :: 		i = 0;
0x2466	0x2000    MOVS	R0, #0
0x2468	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 878 :: 		while ( i != 0xFF ) {
L_spi_read_fifo143:
0x246C	0xF89D0004  LDRB	R0, [SP, #4]
0x2470	0xF1B00FFF  CMP	R0, #255
0x2474	0xD004    BEQ	L_spi_read_fifo144
;driverrf4463pro.c, 879 :: 		i = check_cts();                   // Check if you can send Command
0x2476	0xF7FEF955  BL	_check_cts+0
0x247A	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 880 :: 		}
0x247E	0xE7F5    B	L_spi_read_fifo143
L_spi_read_fifo144:
;driverrf4463pro.c, 882 :: 		nSEL = 1;
0x2480	0x2101    MOVS	R1, #1
0x2482	0xB249    SXTB	R1, R1
0x2484	0x4815    LDR	R0, [PC, #84]
0x2486	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 883 :: 		nSEL = 0;
0x2488	0x2100    MOVS	R1, #0
0x248A	0xB249    SXTB	R1, R1
0x248C	0x4813    LDR	R0, [PC, #76]
0x248E	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 884 :: 		ucRf4463SPIByte( READ_RX_FIFO );
0x2490	0x2077    MOVS	R0, #119
0x2492	0xB401    PUSH	(R0)
0x2494	0xF7FEF8AA  BL	_ucRf4463SPIByte+0
0x2498	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 885 :: 		for ( i = 0; i < payload_length; i++ ) {
0x249A	0x2000    MOVS	R0, #0
0x249C	0xF88D0004  STRB	R0, [SP, #4]
L_spi_read_fifo145:
0x24A0	0xF89D0004  LDRB	R0, [SP, #4]
0x24A4	0x2842    CMP	R0, #66
0x24A6	0xD211    BCS	L_spi_read_fifo146
;driverrf4463pro.c, 886 :: 		rx_buf[ i ] = ucRf4463SPIByte( 0xFF );      // Receive 10 test data
0x24A8	0xF89D1004  LDRB	R1, [SP, #4]
0x24AC	0x480C    LDR	R0, [PC, #48]
0x24AE	0x1840    ADDS	R0, R0, R1
0x24B0	0x9002    STR	R0, [SP, #8]
0x24B2	0x20FF    MOVS	R0, #255
0x24B4	0xB401    PUSH	(R0)
0x24B6	0xF7FEF899  BL	_ucRf4463SPIByte+0
0x24BA	0xB001    ADD	SP, SP, #4
0x24BC	0x9902    LDR	R1, [SP, #8]
0x24BE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 885 :: 		for ( i = 0; i < payload_length; i++ ) {
0x24C0	0xF89D0004  LDRB	R0, [SP, #4]
0x24C4	0x1C40    ADDS	R0, R0, #1
0x24C6	0xF88D0004  STRB	R0, [SP, #4]
;driverrf4463pro.c, 887 :: 		}
0x24CA	0xE7E9    B	L_spi_read_fifo145
L_spi_read_fifo146:
;driverrf4463pro.c, 888 :: 		nSEL = 1;
0x24CC	0x2101    MOVS	R1, #1
0x24CE	0xB249    SXTB	R1, R1
0x24D0	0x4802    LDR	R0, [PC, #8]
0x24D2	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 889 :: 		}
L_end_spi_read_fifo:
0x24D4	0xF8DDE000  LDR	LR, [SP, #0]
0x24D8	0xB003    ADD	SP, SP, #12
0x24DA	0x4770    BX	LR
0x24DC	0x82884241  	GPIOD_ODRbits+0
0x24E0	0x22BE2000  	_rx_buf+0
; end of _spi_read_fifo
__Lib_System_4XX_InitialSetUpRCCRCC2:
;__Lib_System_4XX.c, 465 :: 		
0x3640	0xB082    SUB	SP, SP, #8
0x3642	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_4XX.c, 468 :: 		
; ulRCC_CR start address is: 8 (R2)
0x3646	0x4A92    LDR	R2, [PC, #584]
;__Lib_System_4XX.c, 469 :: 		
; ulRCC_PLLCFGR start address is: 12 (R3)
0x3648	0x4B92    LDR	R3, [PC, #584]
;__Lib_System_4XX.c, 470 :: 		
; ulRCC_CFGR start address is: 16 (R4)
0x364A	0x4C93    LDR	R4, [PC, #588]
;__Lib_System_4XX.c, 471 :: 		
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x364C	0x4893    LDR	R0, [PC, #588]
;__Lib_System_4XX.c, 472 :: 		
; Fosc_kHz start address is: 4 (R1)
0x364E	0x4994    LDR	R1, [PC, #592]
;__Lib_System_4XX.c, 474 :: 		
0x3650	0x2803    CMP	R0, #3
0x3652	0xF040803C  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC234
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 475 :: 		
0x3656	0x4893    LDR	R0, [PC, #588]
0x3658	0x4281    CMP	R1, R0
0x365A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC235
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 476 :: 		
0x365C	0x4892    LDR	R0, [PC, #584]
0x365E	0x6800    LDR	R0, [R0, #0]
0x3660	0xF0400105  ORR	R1, R0, #5
0x3664	0x4890    LDR	R0, [PC, #576]
0x3666	0x6001    STR	R1, [R0, #0]
0x3668	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC236
L___Lib_System_4XX_InitialSetUpRCCRCC235:
;__Lib_System_4XX.c, 477 :: 		
; Fosc_kHz start address is: 4 (R1)
0x366A	0x4890    LDR	R0, [PC, #576]
0x366C	0x4281    CMP	R1, R0
0x366E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC237
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 478 :: 		
0x3670	0x488D    LDR	R0, [PC, #564]
0x3672	0x6800    LDR	R0, [R0, #0]
0x3674	0xF0400104  ORR	R1, R0, #4
0x3678	0x488B    LDR	R0, [PC, #556]
0x367A	0x6001    STR	R1, [R0, #0]
0x367C	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC238
L___Lib_System_4XX_InitialSetUpRCCRCC237:
;__Lib_System_4XX.c, 479 :: 		
; Fosc_kHz start address is: 4 (R1)
0x367E	0x488C    LDR	R0, [PC, #560]
0x3680	0x4281    CMP	R1, R0
0x3682	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC239
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 480 :: 		
0x3684	0x4888    LDR	R0, [PC, #544]
0x3686	0x6800    LDR	R0, [R0, #0]
0x3688	0xF0400103  ORR	R1, R0, #3
0x368C	0x4886    LDR	R0, [PC, #536]
0x368E	0x6001    STR	R1, [R0, #0]
0x3690	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC240
L___Lib_System_4XX_InitialSetUpRCCRCC239:
;__Lib_System_4XX.c, 481 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3692	0xF64E2060  MOVW	R0, #60000
0x3696	0x4281    CMP	R1, R0
0x3698	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC241
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 482 :: 		
0x369A	0x4883    LDR	R0, [PC, #524]
0x369C	0x6800    LDR	R0, [R0, #0]
0x369E	0xF0400102  ORR	R1, R0, #2
0x36A2	0x4881    LDR	R0, [PC, #516]
0x36A4	0x6001    STR	R1, [R0, #0]
0x36A6	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC242
L___Lib_System_4XX_InitialSetUpRCCRCC241:
;__Lib_System_4XX.c, 483 :: 		
; Fosc_kHz start address is: 4 (R1)
0x36A8	0xF2475030  MOVW	R0, #30000
0x36AC	0x4281    CMP	R1, R0
0x36AE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC243
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 484 :: 		
0x36B0	0x487D    LDR	R0, [PC, #500]
0x36B2	0x6800    LDR	R0, [R0, #0]
0x36B4	0xF0400101  ORR	R1, R0, #1
0x36B8	0x487B    LDR	R0, [PC, #492]
0x36BA	0x6001    STR	R1, [R0, #0]
0x36BC	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC244
L___Lib_System_4XX_InitialSetUpRCCRCC243:
;__Lib_System_4XX.c, 486 :: 		
0x36BE	0x487A    LDR	R0, [PC, #488]
0x36C0	0x6801    LDR	R1, [R0, #0]
0x36C2	0xF06F0007  MVN	R0, #7
0x36C6	0x4001    ANDS	R1, R0
0x36C8	0x4877    LDR	R0, [PC, #476]
0x36CA	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC244:
L___Lib_System_4XX_InitialSetUpRCCRCC242:
L___Lib_System_4XX_InitialSetUpRCCRCC240:
L___Lib_System_4XX_InitialSetUpRCCRCC238:
L___Lib_System_4XX_InitialSetUpRCCRCC236:
;__Lib_System_4XX.c, 487 :: 		
0x36CC	0xE10C    B	L___Lib_System_4XX_InitialSetUpRCCRCC245
L___Lib_System_4XX_InitialSetUpRCCRCC234:
;__Lib_System_4XX.c, 488 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x36CE	0x2802    CMP	R0, #2
0x36D0	0xF0408046  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC246
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 489 :: 		
0x36D4	0x4877    LDR	R0, [PC, #476]
0x36D6	0x4281    CMP	R1, R0
0x36D8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC247
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 490 :: 		
0x36DA	0x4873    LDR	R0, [PC, #460]
0x36DC	0x6800    LDR	R0, [R0, #0]
0x36DE	0xF0400106  ORR	R1, R0, #6
0x36E2	0x4871    LDR	R0, [PC, #452]
0x36E4	0x6001    STR	R1, [R0, #0]
0x36E6	0xE03A    B	L___Lib_System_4XX_InitialSetUpRCCRCC248
L___Lib_System_4XX_InitialSetUpRCCRCC247:
;__Lib_System_4XX.c, 491 :: 		
; Fosc_kHz start address is: 4 (R1)
0x36E8	0x4870    LDR	R0, [PC, #448]
0x36EA	0x4281    CMP	R1, R0
0x36EC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC249
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 492 :: 		
0x36EE	0x486E    LDR	R0, [PC, #440]
0x36F0	0x6800    LDR	R0, [R0, #0]
0x36F2	0xF0400105  ORR	R1, R0, #5
0x36F6	0x486C    LDR	R0, [PC, #432]
0x36F8	0x6001    STR	R1, [R0, #0]
0x36FA	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC250
L___Lib_System_4XX_InitialSetUpRCCRCC249:
;__Lib_System_4XX.c, 493 :: 		
; Fosc_kHz start address is: 4 (R1)
0x36FC	0x486E    LDR	R0, [PC, #440]
0x36FE	0x4281    CMP	R1, R0
0x3700	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC251
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 494 :: 		
0x3702	0x4869    LDR	R0, [PC, #420]
0x3704	0x6800    LDR	R0, [R0, #0]
0x3706	0xF0400104  ORR	R1, R0, #4
0x370A	0x4867    LDR	R0, [PC, #412]
0x370C	0x6001    STR	R1, [R0, #0]
0x370E	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC252
L___Lib_System_4XX_InitialSetUpRCCRCC251:
;__Lib_System_4XX.c, 495 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3710	0x486A    LDR	R0, [PC, #424]
0x3712	0x4281    CMP	R1, R0
0x3714	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC253
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 496 :: 		
0x3716	0x4864    LDR	R0, [PC, #400]
0x3718	0x6800    LDR	R0, [R0, #0]
0x371A	0xF0400103  ORR	R1, R0, #3
0x371E	0x4862    LDR	R0, [PC, #392]
0x3720	0x6001    STR	R1, [R0, #0]
0x3722	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC254
L___Lib_System_4XX_InitialSetUpRCCRCC253:
;__Lib_System_4XX.c, 497 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3724	0xF64B3080  MOVW	R0, #48000
0x3728	0x4281    CMP	R1, R0
0x372A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC255
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 498 :: 		
0x372C	0x485E    LDR	R0, [PC, #376]
0x372E	0x6800    LDR	R0, [R0, #0]
0x3730	0xF0400102  ORR	R1, R0, #2
0x3734	0x485C    LDR	R0, [PC, #368]
0x3736	0x6001    STR	R1, [R0, #0]
0x3738	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC256
L___Lib_System_4XX_InitialSetUpRCCRCC255:
;__Lib_System_4XX.c, 499 :: 		
; Fosc_kHz start address is: 4 (R1)
0x373A	0xF64550C0  MOVW	R0, #24000
0x373E	0x4281    CMP	R1, R0
0x3740	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC257
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 500 :: 		
0x3742	0x4859    LDR	R0, [PC, #356]
0x3744	0x6800    LDR	R0, [R0, #0]
0x3746	0xF0400101  ORR	R1, R0, #1
0x374A	0x4857    LDR	R0, [PC, #348]
0x374C	0x6001    STR	R1, [R0, #0]
0x374E	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC258
L___Lib_System_4XX_InitialSetUpRCCRCC257:
;__Lib_System_4XX.c, 502 :: 		
0x3750	0x4855    LDR	R0, [PC, #340]
0x3752	0x6801    LDR	R1, [R0, #0]
0x3754	0xF06F0007  MVN	R0, #7
0x3758	0x4001    ANDS	R1, R0
0x375A	0x4853    LDR	R0, [PC, #332]
0x375C	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC258:
L___Lib_System_4XX_InitialSetUpRCCRCC256:
L___Lib_System_4XX_InitialSetUpRCCRCC254:
L___Lib_System_4XX_InitialSetUpRCCRCC252:
L___Lib_System_4XX_InitialSetUpRCCRCC250:
L___Lib_System_4XX_InitialSetUpRCCRCC248:
;__Lib_System_4XX.c, 503 :: 		
0x375E	0xE0C3    B	L___Lib_System_4XX_InitialSetUpRCCRCC259
L___Lib_System_4XX_InitialSetUpRCCRCC246:
;__Lib_System_4XX.c, 504 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x3760	0x2801    CMP	R0, #1
0x3762	0xF0408051  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC260
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 505 :: 		
0x3766	0x4851    LDR	R0, [PC, #324]
0x3768	0x4281    CMP	R1, R0
0x376A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC261
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 506 :: 		
0x376C	0x484E    LDR	R0, [PC, #312]
0x376E	0x6800    LDR	R0, [R0, #0]
0x3770	0xF0400107  ORR	R1, R0, #7
0x3774	0x484C    LDR	R0, [PC, #304]
0x3776	0x6001    STR	R1, [R0, #0]
0x3778	0xE045    B	L___Lib_System_4XX_InitialSetUpRCCRCC262
L___Lib_System_4XX_InitialSetUpRCCRCC261:
;__Lib_System_4XX.c, 507 :: 		
; Fosc_kHz start address is: 4 (R1)
0x377A	0x4851    LDR	R0, [PC, #324]
0x377C	0x4281    CMP	R1, R0
0x377E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC263
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 508 :: 		
0x3780	0x4849    LDR	R0, [PC, #292]
0x3782	0x6800    LDR	R0, [R0, #0]
0x3784	0xF0400106  ORR	R1, R0, #6
0x3788	0x4847    LDR	R0, [PC, #284]
0x378A	0x6001    STR	R1, [R0, #0]
0x378C	0xE03B    B	L___Lib_System_4XX_InitialSetUpRCCRCC264
L___Lib_System_4XX_InitialSetUpRCCRCC263:
;__Lib_System_4XX.c, 509 :: 		
; Fosc_kHz start address is: 4 (R1)
0x378E	0x4848    LDR	R0, [PC, #288]
0x3790	0x4281    CMP	R1, R0
0x3792	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC265
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 510 :: 		
0x3794	0x4844    LDR	R0, [PC, #272]
0x3796	0x6800    LDR	R0, [R0, #0]
0x3798	0xF0400105  ORR	R1, R0, #5
0x379C	0x4842    LDR	R0, [PC, #264]
0x379E	0x6001    STR	R1, [R0, #0]
0x37A0	0xE031    B	L___Lib_System_4XX_InitialSetUpRCCRCC266
L___Lib_System_4XX_InitialSetUpRCCRCC265:
;__Lib_System_4XX.c, 511 :: 		
; Fosc_kHz start address is: 4 (R1)
0x37A2	0x4846    LDR	R0, [PC, #280]
0x37A4	0x4281    CMP	R1, R0
0x37A6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC267
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 512 :: 		
0x37A8	0x483F    LDR	R0, [PC, #252]
0x37AA	0x6800    LDR	R0, [R0, #0]
0x37AC	0xF0400104  ORR	R1, R0, #4
0x37B0	0x483D    LDR	R0, [PC, #244]
0x37B2	0x6001    STR	R1, [R0, #0]
0x37B4	0xE027    B	L___Lib_System_4XX_InitialSetUpRCCRCC268
L___Lib_System_4XX_InitialSetUpRCCRCC267:
;__Lib_System_4XX.c, 513 :: 		
; Fosc_kHz start address is: 4 (R1)
0x37B6	0xF24D20F0  MOVW	R0, #54000
0x37BA	0x4281    CMP	R1, R0
0x37BC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC269
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 514 :: 		
0x37BE	0x483A    LDR	R0, [PC, #232]
0x37C0	0x6800    LDR	R0, [R0, #0]
0x37C2	0xF0400103  ORR	R1, R0, #3
0x37C6	0x4838    LDR	R0, [PC, #224]
0x37C8	0x6001    STR	R1, [R0, #0]
0x37CA	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC270
L___Lib_System_4XX_InitialSetUpRCCRCC269:
;__Lib_System_4XX.c, 515 :: 		
; Fosc_kHz start address is: 4 (R1)
0x37CC	0xF64840A0  MOVW	R0, #36000
0x37D0	0x4281    CMP	R1, R0
0x37D2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC271
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 516 :: 		
0x37D4	0x4834    LDR	R0, [PC, #208]
0x37D6	0x6800    LDR	R0, [R0, #0]
0x37D8	0xF0400102  ORR	R1, R0, #2
0x37DC	0x4832    LDR	R0, [PC, #200]
0x37DE	0x6001    STR	R1, [R0, #0]
0x37E0	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC272
L___Lib_System_4XX_InitialSetUpRCCRCC271:
;__Lib_System_4XX.c, 517 :: 		
; Fosc_kHz start address is: 4 (R1)
0x37E2	0xF2446050  MOVW	R0, #18000
0x37E6	0x4281    CMP	R1, R0
0x37E8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC273
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 518 :: 		
0x37EA	0x482F    LDR	R0, [PC, #188]
0x37EC	0x6800    LDR	R0, [R0, #0]
0x37EE	0xF0400101  ORR	R1, R0, #1
0x37F2	0x482D    LDR	R0, [PC, #180]
0x37F4	0x6001    STR	R1, [R0, #0]
0x37F6	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC274
L___Lib_System_4XX_InitialSetUpRCCRCC273:
;__Lib_System_4XX.c, 520 :: 		
0x37F8	0x482B    LDR	R0, [PC, #172]
0x37FA	0x6801    LDR	R1, [R0, #0]
0x37FC	0xF06F0007  MVN	R0, #7
0x3800	0x4001    ANDS	R1, R0
0x3802	0x4829    LDR	R0, [PC, #164]
0x3804	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC274:
L___Lib_System_4XX_InitialSetUpRCCRCC272:
L___Lib_System_4XX_InitialSetUpRCCRCC270:
L___Lib_System_4XX_InitialSetUpRCCRCC268:
L___Lib_System_4XX_InitialSetUpRCCRCC266:
L___Lib_System_4XX_InitialSetUpRCCRCC264:
L___Lib_System_4XX_InitialSetUpRCCRCC262:
;__Lib_System_4XX.c, 521 :: 		
0x3806	0xE06F    B	L___Lib_System_4XX_InitialSetUpRCCRCC275
L___Lib_System_4XX_InitialSetUpRCCRCC260:
;__Lib_System_4XX.c, 522 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x3808	0x2800    CMP	R0, #0
0x380A	0xF040806D  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC276
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 523 :: 		
0x380E	0x482D    LDR	R0, [PC, #180]
0x3810	0x4281    CMP	R1, R0
0x3812	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC277
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 524 :: 		
0x3814	0x4824    LDR	R0, [PC, #144]
0x3816	0x6800    LDR	R0, [R0, #0]
0x3818	0xF0400107  ORR	R1, R0, #7
0x381C	0x4822    LDR	R0, [PC, #136]
0x381E	0x6001    STR	R1, [R0, #0]
0x3820	0xE062    B	L___Lib_System_4XX_InitialSetUpRCCRCC278
L___Lib_System_4XX_InitialSetUpRCCRCC277:
;__Lib_System_4XX.c, 525 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3822	0x4825    LDR	R0, [PC, #148]
0x3824	0x4281    CMP	R1, R0
0x3826	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC279
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 526 :: 		
0x3828	0x481F    LDR	R0, [PC, #124]
0x382A	0x6800    LDR	R0, [R0, #0]
0x382C	0xF0400106  ORR	R1, R0, #6
0x3830	0x481D    LDR	R0, [PC, #116]
0x3832	0x6001    STR	R1, [R0, #0]
0x3834	0xE058    B	L___Lib_System_4XX_InitialSetUpRCCRCC280
L___Lib_System_4XX_InitialSetUpRCCRCC279:
;__Lib_System_4XX.c, 527 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3836	0x4824    LDR	R0, [PC, #144]
0x3838	0x4281    CMP	R1, R0
0x383A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC281
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 528 :: 		
0x383C	0x481A    LDR	R0, [PC, #104]
0x383E	0x6800    LDR	R0, [R0, #0]
0x3840	0xF0400105  ORR	R1, R0, #5
0x3844	0x4818    LDR	R0, [PC, #96]
0x3846	0x6001    STR	R1, [R0, #0]
0x3848	0xE04E    B	L___Lib_System_4XX_InitialSetUpRCCRCC282
L___Lib_System_4XX_InitialSetUpRCCRCC281:
;__Lib_System_4XX.c, 529 :: 		
; Fosc_kHz start address is: 4 (R1)
0x384A	0xF5B14F7A  CMP	R1, #64000
0x384E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC283
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 530 :: 		
0x3850	0x4815    LDR	R0, [PC, #84]
0x3852	0x6800    LDR	R0, [R0, #0]
0x3854	0xF0400104  ORR	R1, R0, #4
0x3858	0x4813    LDR	R0, [PC, #76]
0x385A	0x6001    STR	R1, [R0, #0]
0x385C	0xE044    B	L___Lib_System_4XX_InitialSetUpRCCRCC284
L___Lib_System_4XX_InitialSetUpRCCRCC283:
;__Lib_System_4XX.c, 531 :: 		
; Fosc_kHz start address is: 4 (R1)
0x385E	0xF64B3080  MOVW	R0, #48000
0x3862	0x4281    CMP	R1, R0
0x3864	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC285
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 532 :: 		
0x3866	0x4810    LDR	R0, [PC, #64]
0x3868	0x6800    LDR	R0, [R0, #0]
0x386A	0xF0400103  ORR	R1, R0, #3
0x386E	0x480E    LDR	R0, [PC, #56]
0x3870	0x6001    STR	R1, [R0, #0]
0x3872	0xE039    B	L___Lib_System_4XX_InitialSetUpRCCRCC286
L___Lib_System_4XX_InitialSetUpRCCRCC285:
;__Lib_System_4XX.c, 533 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3874	0xF5B14FFA  CMP	R1, #32000
0x3878	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC287
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 534 :: 		
0x387A	0x480B    LDR	R0, [PC, #44]
0x387C	0x6800    LDR	R0, [R0, #0]
0x387E	0xF0400102  ORR	R1, R0, #2
0x3882	0x4809    LDR	R0, [PC, #36]
0x3884	0x6001    STR	R1, [R0, #0]
0x3886	0xE02F    B	L___Lib_System_4XX_InitialSetUpRCCRCC288
L___Lib_System_4XX_InitialSetUpRCCRCC287:
;__Lib_System_4XX.c, 535 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3888	0xF5B15F7A  CMP	R1, #16000
0x388C	0xD925    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC289
0x388E	0xE01D    B	#58
0x3890	0x00800101  	#16842880
0x3894	0x54190440  	#71324697
0x3898	0x94020060  	#6329346
0x389C	0x00030000  	#3
0x38A0	0x90400002  	#168000
0x38A4	0x49F00002  	#150000
0x38A8	0x3C004002  	FLASH_ACR+0
0x38AC	0xD4C00001  	#120000
0x38B0	0x5F900001  	#90000
0x38B4	0x32800002  	#144000
0x38B8	0x77000001  	#96000
0x38BC	0x19400001  	#72000
0x38C0	0xA5E00001  	#108000
0x38C4	0xB5800001  	#112000
0x38C8	0x38800001  	#80000
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 536 :: 		
0x38CC	0x482D    LDR	R0, [PC, #180]
0x38CE	0x6800    LDR	R0, [R0, #0]
0x38D0	0xF0400101  ORR	R1, R0, #1
0x38D4	0x482B    LDR	R0, [PC, #172]
0x38D6	0x6001    STR	R1, [R0, #0]
0x38D8	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC290
L___Lib_System_4XX_InitialSetUpRCCRCC289:
;__Lib_System_4XX.c, 538 :: 		
0x38DA	0x482A    LDR	R0, [PC, #168]
0x38DC	0x6801    LDR	R1, [R0, #0]
0x38DE	0xF06F0007  MVN	R0, #7
0x38E2	0x4001    ANDS	R1, R0
0x38E4	0x4827    LDR	R0, [PC, #156]
0x38E6	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC290:
L___Lib_System_4XX_InitialSetUpRCCRCC288:
L___Lib_System_4XX_InitialSetUpRCCRCC286:
L___Lib_System_4XX_InitialSetUpRCCRCC284:
L___Lib_System_4XX_InitialSetUpRCCRCC282:
L___Lib_System_4XX_InitialSetUpRCCRCC280:
L___Lib_System_4XX_InitialSetUpRCCRCC278:
;__Lib_System_4XX.c, 539 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC276:
L___Lib_System_4XX_InitialSetUpRCCRCC275:
L___Lib_System_4XX_InitialSetUpRCCRCC259:
L___Lib_System_4XX_InitialSetUpRCCRCC245:
;__Lib_System_4XX.c, 541 :: 		
0x38E8	0x2101    MOVS	R1, #1
0x38EA	0xB249    SXTB	R1, R1
0x38EC	0x4826    LDR	R0, [PC, #152]
0x38EE	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 542 :: 		
0x38F0	0x4826    LDR	R0, [PC, #152]
0x38F2	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 544 :: 		
0x38F4	0xF7FEFDF6  BL	__Lib_System_4XX_SystemClockSetDefault+0
;__Lib_System_4XX.c, 546 :: 		
0x38F8	0x4825    LDR	R0, [PC, #148]
0x38FA	0x6003    STR	R3, [R0, #0]
; ulRCC_PLLCFGR end address is: 12 (R3)
;__Lib_System_4XX.c, 547 :: 		
0x38FC	0x4825    LDR	R0, [PC, #148]
0x38FE	0x6004    STR	R4, [R0, #0]
;__Lib_System_4XX.c, 548 :: 		
0x3900	0x4825    LDR	R0, [PC, #148]
0x3902	0xEA020100  AND	R1, R2, R0, LSL #0
0x3906	0x4825    LDR	R0, [PC, #148]
0x3908	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 550 :: 		
0x390A	0xF0020001  AND	R0, R2, #1
0x390E	0xB140    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2102
; ulRCC_CFGR end address is: 16 (R4)
; ulRCC_CR end address is: 8 (R2)
0x3910	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 551 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC292:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x3912	0x4822    LDR	R0, [PC, #136]
0x3914	0x6800    LDR	R0, [R0, #0]
0x3916	0xF0000002  AND	R0, R0, #2
0x391A	0x2800    CMP	R0, #0
0x391C	0xD100    BNE	L___Lib_System_4XX_InitialSetUpRCCRCC293
;__Lib_System_4XX.c, 552 :: 		
0x391E	0xE7F8    B	L___Lib_System_4XX_InitialSetUpRCCRCC292
L___Lib_System_4XX_InitialSetUpRCCRCC293:
;__Lib_System_4XX.c, 553 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x3920	0xE000    B	L___Lib_System_4XX_InitialSetUpRCCRCC291
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2102:
;__Lib_System_4XX.c, 550 :: 		
0x3922	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 553 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC291:
;__Lib_System_4XX.c, 555 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x3924	0xF4023080  AND	R0, R2, #65536
0x3928	0xB148    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2103
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_4XX.c, 556 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC295:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x392A	0x481C    LDR	R0, [PC, #112]
0x392C	0x6800    LDR	R0, [R0, #0]
0x392E	0xF4003000  AND	R0, R0, #131072
0x3932	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC296
;__Lib_System_4XX.c, 557 :: 		
0x3934	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC295
L___Lib_System_4XX_InitialSetUpRCCRCC296:
;__Lib_System_4XX.c, 558 :: 		
0x3936	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x3938	0x460A    MOV	R2, R1
0x393A	0x9901    LDR	R1, [SP, #4]
0x393C	0xE002    B	L___Lib_System_4XX_InitialSetUpRCCRCC294
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2103:
;__Lib_System_4XX.c, 555 :: 		
0x393E	0x9101    STR	R1, [SP, #4]
0x3940	0x4611    MOV	R1, R2
0x3942	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_4XX.c, 558 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC294:
;__Lib_System_4XX.c, 560 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x3944	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x3948	0xB170    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2104
;__Lib_System_4XX.c, 561 :: 		
0x394A	0x4814    LDR	R0, [PC, #80]
0x394C	0x6800    LDR	R0, [R0, #0]
0x394E	0xF0407180  ORR	R1, R0, #16777216
0x3952	0x4812    LDR	R0, [PC, #72]
0x3954	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x3956	0x4611    MOV	R1, R2
;__Lib_System_4XX.c, 562 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC298:
; ulRCC_CFGR start address is: 4 (R1)
0x3958	0x4810    LDR	R0, [PC, #64]
0x395A	0x6800    LDR	R0, [R0, #0]
0x395C	0xF0007000  AND	R0, R0, #33554432
0x3960	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC299
;__Lib_System_4XX.c, 563 :: 		
0x3962	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC298
L___Lib_System_4XX_InitialSetUpRCCRCC299:
;__Lib_System_4XX.c, 564 :: 		
0x3964	0x460A    MOV	R2, R1
0x3966	0xE7FF    B	L___Lib_System_4XX_InitialSetUpRCCRCC297
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_4XX_InitialSetUpRCCRCC2104:
;__Lib_System_4XX.c, 560 :: 		
;__Lib_System_4XX.c, 564 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC297:
;__Lib_System_4XX.c, 567 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2100:
; ulRCC_CFGR start address is: 8 (R2)
0x3968	0x480A    LDR	R0, [PC, #40]
0x396A	0x6800    LDR	R0, [R0, #0]
0x396C	0xF000010C  AND	R1, R0, #12
0x3970	0x0090    LSLS	R0, R2, #2
0x3972	0xF000000C  AND	R0, R0, #12
0x3976	0x4281    CMP	R1, R0
0x3978	0xD000    BEQ	L___Lib_System_4XX_InitialSetUpRCCRCC2101
;__Lib_System_4XX.c, 568 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x397A	0xE7F5    B	L___Lib_System_4XX_InitialSetUpRCCRCC2100
L___Lib_System_4XX_InitialSetUpRCCRCC2101:
;__Lib_System_4XX.c, 570 :: 		
L_end_InitialSetUpRCCRCC2:
0x397C	0xF8DDE000  LDR	LR, [SP, #0]
0x3980	0xB002    ADD	SP, SP, #8
0x3982	0x4770    BX	LR
0x3984	0x3C004002  	FLASH_ACR+0
0x3988	0x80204247  	FLASH_ACR+0
0x398C	0x80244247  	FLASH_ACR+0
0x3990	0x38044002  	RCC_PLLCFGR+0
0x3994	0x38084002  	RCC_CFGR+0
0x3998	0xFFFF000F  	#1048575
0x399C	0x38004002  	RCC_CR+0
; end of __Lib_System_4XX_InitialSetUpRCCRCC2
__Lib_System_4XX_SystemClockSetDefault:
;__Lib_System_4XX.c, 444 :: 		
0x24E4	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 447 :: 		
0x24E6	0x480D    LDR	R0, [PC, #52]
0x24E8	0x6800    LDR	R0, [R0, #0]
0x24EA	0xF0400101  ORR	R1, R0, #1
0x24EE	0x480B    LDR	R0, [PC, #44]
0x24F0	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 450 :: 		
0x24F2	0x2100    MOVS	R1, #0
0x24F4	0x480A    LDR	R0, [PC, #40]
0x24F6	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 453 :: 		
0x24F8	0x4808    LDR	R0, [PC, #32]
0x24FA	0x6801    LDR	R1, [R0, #0]
0x24FC	0x4809    LDR	R0, [PC, #36]
0x24FE	0x4001    ANDS	R1, R0
0x2500	0x4806    LDR	R0, [PC, #24]
0x2502	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 456 :: 		
0x2504	0x4908    LDR	R1, [PC, #32]
0x2506	0x4809    LDR	R0, [PC, #36]
0x2508	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 459 :: 		
0x250A	0x4804    LDR	R0, [PC, #16]
0x250C	0x6801    LDR	R1, [R0, #0]
0x250E	0xF46F2080  MVN	R0, #262144
0x2512	0x4001    ANDS	R1, R0
0x2514	0x4801    LDR	R0, [PC, #4]
0x2516	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 463 :: 		
L_end_SystemClockSetDefault:
0x2518	0xB001    ADD	SP, SP, #4
0x251A	0x4770    BX	LR
0x251C	0x38004002  	RCC_CR+0
0x2520	0x38084002  	RCC_CFGR+0
0x2524	0xFFFFFEF6  	#-17367041
0x2528	0x30102400  	#603992080
0x252C	0x38044002  	RCC_PLLCFGR+0
; end of __Lib_System_4XX_SystemClockSetDefault
__Lib_System_4XX_InitialSetUpFosc:
;__Lib_System_4XX.c, 382 :: 		
0x3D30	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 383 :: 		
0x3D32	0x4904    LDR	R1, [PC, #16]
0x3D34	0x4804    LDR	R0, [PC, #16]
0x3D36	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 384 :: 		
0x3D38	0x4904    LDR	R1, [PC, #16]
0x3D3A	0x4805    LDR	R0, [PC, #20]
0x3D3C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 385 :: 		
L_end_InitialSetUpFosc:
0x3D3E	0xB001    ADD	SP, SP, #4
0x3D40	0x4770    BX	LR
0x3D42	0xBF00    NOP
0x3D44	0x90400002  	#168000
0x3D48	0x23082000  	___System_CLOCK_IN_KHZ+0
0x3D4C	0x00030000  	#3
0x3D50	0x23142000  	__VOLTAGE_RANGE+0
; end of __Lib_System_4XX_InitialSetUpFosc
___GenExcept:
;__Lib_System_4XX.c, 327 :: 		
0x3D80	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 328 :: 		
L___GenExcept30:
0x3D82	0xE7FE    B	L___GenExcept30
;__Lib_System_4XX.c, 329 :: 		
L_end___GenExcept:
0x3D84	0xB001    ADD	SP, SP, #4
0x3D86	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_4XX.c, 360 :: 		
0x3D54	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 363 :: 		
0x3D56	0xF64E5088  MOVW	R0, #60808
;__Lib_System_4XX.c, 364 :: 		
0x3D5A	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_4XX.c, 366 :: 		
0x3D5E	0x6801    LDR	R1, [R0, #0]
;__Lib_System_4XX.c, 368 :: 		
0x3D60	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_4XX.c, 370 :: 		
0x3D64	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 372 :: 		
0x3D66	0xBF00    NOP
;__Lib_System_4XX.c, 373 :: 		
0x3D68	0xBF00    NOP
;__Lib_System_4XX.c, 374 :: 		
0x3D6A	0xBF00    NOP
;__Lib_System_4XX.c, 375 :: 		
0x3D6C	0xBF00    NOP
;__Lib_System_4XX.c, 377 :: 		
0x3D6E	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_4XX.c, 378 :: 		
0x3D72	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_4XX.c, 379 :: 		
0x3D76	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_4XX.c, 380 :: 		
L_end___EnableFPU:
0x3D7A	0xB001    ADD	SP, SP, #4
0x3D7C	0x4770    BX	LR
; end of ___EnableFPU
0x6A04	0xB500    PUSH	(R14)
0x6A06	0xF8DFB024  LDR	R11, [PC, #36]
0x6A0A	0xF8DFA024  LDR	R10, [PC, #36]
0x6A0E	0xF8DFC024  LDR	R12, [PC, #36]
0x6A12	0xF7FBFDB9  BL	9608
0x6A16	0xF8DFB020  LDR	R11, [PC, #32]
0x6A1A	0xF8DFA020  LDR	R10, [PC, #32]
0x6A1E	0xF8DFC020  LDR	R12, [PC, #32]
0x6A22	0xF7FBFDB1  BL	9608
0x6A26	0xBD00    POP	(R15)
0x6A28	0x4770    BX	LR
0x6A2A	0xBF00    NOP
0x6A2C	0x00002000  	#536870912
0x6A30	0x228F2000  	#536879759
0x6A34	0x3D880000  	#15752
0x6A38	0x22902000  	#536879760
0x6A3C	0x22A42000  	#536879780
0x6A40	0x69A80000  	#27048
0x6AA0	0xB500    PUSH	(R14)
0x6AA2	0xF8DFB010  LDR	R11, [PC, #16]
0x6AA6	0xF8DFA010  LDR	R10, [PC, #16]
0x6AAA	0xF7FBFD4F  BL	9548
0x6AAE	0xBD00    POP	(R15)
0x6AB0	0x4770    BX	LR
0x6AB2	0xBF00    NOP
0x6AB4	0x00002000  	#536870912
0x6AB8	0x23282000  	#536879912
_vUARTISR:
;uarthandler.c, 115 :: 		void vUARTISR() iv IVT_INT_USART1 ics ICS_AUTO{
;uarthandler.c, 116 :: 		LED_BLUE =~ LED_BLUE;
0x342C	0x4845    LDR	R0, [PC, #276]
0x342E	0x6800    LDR	R0, [R0, #0]
0x3430	0xF0800101  EOR	R1, R0, #1
0x3434	0xB2C9    UXTB	R1, R1
0x3436	0x4843    LDR	R0, [PC, #268]
0x3438	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 118 :: 		if( USART1_SRbits.RXNE ){
0x343A	0x4843    LDR	R0, [PC, #268]
0x343C	0x6800    LDR	R0, [R0, #0]
0x343E	0x2800    CMP	R0, #0
0x3440	0xF000807F  BEQ	L_vUARTISR194
;uarthandler.c, 119 :: 		ucData1 = USART1_DR;
0x3444	0x4841    LDR	R0, [PC, #260]
0x3446	0x6801    LDR	R1, [R0, #0]
0x3448	0x4841    LDR	R0, [PC, #260]
0x344A	0x7001    STRB	R1, [R0, #0]
;uarthandler.c, 120 :: 		if ( ucData1 != CHR_CR && ucData1 != CHR_LF && ulUSART1ByteReceived < BUFFER_MAX_USART ) {
0x344C	0x4840    LDR	R0, [PC, #256]
0x344E	0x7800    LDRB	R0, [R0, #0]
0x3450	0x280D    CMP	R0, #13
0x3452	0xF000804A  BEQ	L_vUARTISR197
0x3456	0x483E    LDR	R0, [PC, #248]
0x3458	0x7800    LDRB	R0, [R0, #0]
0x345A	0x280A    CMP	R0, #10
0x345C	0xF0008045  BEQ	L_vUARTISR197
0x3460	0x483C    LDR	R0, [PC, #240]
0x3462	0x6800    LDR	R0, [R0, #0]
0x3464	0xF5B05F80  CMP	R0, #4096
0x3468	0xF080803F  BCS	L_vUARTISR197
L__vUARTISR411:
;uarthandler.c, 123 :: 		ucData1 == CHR_s ||
0x346C	0x4838    LDR	R0, [PC, #224]
0x346E	0x7800    LDRB	R0, [R0, #0]
0x3470	0x2853    CMP	R0, #83
0x3472	0xD00C    BEQ	L__vUARTISR410
0x3474	0x4836    LDR	R0, [PC, #216]
0x3476	0x7800    LDRB	R0, [R0, #0]
0x3478	0x2873    CMP	R0, #115
0x347A	0xD008    BEQ	L__vUARTISR410
;uarthandler.c, 124 :: 		ucData1 == CHR_U ||
0x347C	0x4834    LDR	R0, [PC, #208]
0x347E	0x7800    LDRB	R0, [R0, #0]
0x3480	0x2855    CMP	R0, #85
0x3482	0xD004    BEQ	L__vUARTISR410
;uarthandler.c, 125 :: 		ucData1 == CHR_u ) &&
0x3484	0x4832    LDR	R0, [PC, #200]
0x3486	0x7800    LDRB	R0, [R0, #0]
0x3488	0x2875    CMP	R0, #117
0x348A	0xD000    BEQ	L__vUARTISR410
0x348C	0xE00F    B	L_vUARTISR202
;uarthandler.c, 126 :: 		ulUSART1ByteReceived == 0 ) {
L__vUARTISR410:
0x348E	0x4831    LDR	R0, [PC, #196]
0x3490	0x6800    LDR	R0, [R0, #0]
0x3492	0xB960    CBNZ	R0, L_vUARTISR202
L__vUARTISR409:
;uarthandler.c, 127 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x3494	0x482F    LDR	R0, [PC, #188]
0x3496	0x6801    LDR	R1, [R0, #0]
0x3498	0x482F    LDR	R0, [PC, #188]
0x349A	0x1841    ADDS	R1, R0, R1
0x349C	0x482C    LDR	R0, [PC, #176]
0x349E	0x7800    LDRB	R0, [R0, #0]
0x34A0	0x7008    STRB	R0, [R1, #0]
0x34A2	0x482C    LDR	R0, [PC, #176]
0x34A4	0x6800    LDR	R0, [R0, #0]
0x34A6	0x1C41    ADDS	R1, R0, #1
0x34A8	0x482A    LDR	R0, [PC, #168]
0x34AA	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 128 :: 		}
0x34AC	0xE01C    B	L_vUARTISR203
L_vUARTISR202:
;uarthandler.c, 131 :: 		ucUSART1RXBuffer[ 0 ] == CHR_s ||
0x34AE	0x482A    LDR	R0, [PC, #168]
0x34B0	0x7800    LDRB	R0, [R0, #0]
0x34B2	0x2853    CMP	R0, #83
0x34B4	0xD00C    BEQ	L__vUARTISR408
0x34B6	0x4828    LDR	R0, [PC, #160]
0x34B8	0x7800    LDRB	R0, [R0, #0]
0x34BA	0x2873    CMP	R0, #115
0x34BC	0xD008    BEQ	L__vUARTISR408
;uarthandler.c, 132 :: 		ucUSART1RXBuffer[ 0 ] == CHR_U ||
0x34BE	0x4826    LDR	R0, [PC, #152]
0x34C0	0x7800    LDRB	R0, [R0, #0]
0x34C2	0x2855    CMP	R0, #85
0x34C4	0xD004    BEQ	L__vUARTISR408
;uarthandler.c, 133 :: 		ucUSART1RXBuffer[ 0 ] == CHR_u ) {
0x34C6	0x4824    LDR	R0, [PC, #144]
0x34C8	0x7800    LDRB	R0, [R0, #0]
0x34CA	0x2875    CMP	R0, #117
0x34CC	0xD000    BEQ	L__vUARTISR408
0x34CE	0xE00B    B	L_vUARTISR206
L__vUARTISR408:
;uarthandler.c, 134 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x34D0	0x4820    LDR	R0, [PC, #128]
0x34D2	0x6801    LDR	R1, [R0, #0]
0x34D4	0x4820    LDR	R0, [PC, #128]
0x34D6	0x1841    ADDS	R1, R0, R1
0x34D8	0x481D    LDR	R0, [PC, #116]
0x34DA	0x7800    LDRB	R0, [R0, #0]
0x34DC	0x7008    STRB	R0, [R1, #0]
0x34DE	0x481D    LDR	R0, [PC, #116]
0x34E0	0x6800    LDR	R0, [R0, #0]
0x34E2	0x1C41    ADDS	R1, R0, #1
0x34E4	0x481B    LDR	R0, [PC, #108]
0x34E6	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 135 :: 		}
L_vUARTISR206:
L_vUARTISR203:
;uarthandler.c, 136 :: 		}
0x34E8	0xE02B    B	L_vUARTISR207
L_vUARTISR197:
;uarthandler.c, 138 :: 		else if ( ucData1 == CHR_CR ) {
0x34EA	0x4819    LDR	R0, [PC, #100]
0x34EC	0x7800    LDRB	R0, [R0, #0]
0x34EE	0x280D    CMP	R0, #13
0x34F0	0xD10C    BNE	L_vUARTISR208
;uarthandler.c, 139 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x34F2	0x4818    LDR	R0, [PC, #96]
0x34F4	0x6801    LDR	R1, [R0, #0]
0x34F6	0x4818    LDR	R0, [PC, #96]
0x34F8	0x1841    ADDS	R1, R0, R1
0x34FA	0x4815    LDR	R0, [PC, #84]
0x34FC	0x7800    LDRB	R0, [R0, #0]
0x34FE	0x7008    STRB	R0, [R1, #0]
0x3500	0x4814    LDR	R0, [PC, #80]
0x3502	0x6800    LDR	R0, [R0, #0]
0x3504	0x1C41    ADDS	R1, R0, #1
0x3506	0x4813    LDR	R0, [PC, #76]
0x3508	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 140 :: 		}
0x350A	0xE01A    B	L_vUARTISR209
L_vUARTISR208:
;uarthandler.c, 142 :: 		else if ( ucData1 == CHR_LF && ucUSART1RXBuffer[ ulUSART1ByteReceived - 1 ] == CHR_CR ) {
0x350C	0x4810    LDR	R0, [PC, #64]
0x350E	0x7800    LDRB	R0, [R0, #0]
0x3510	0x280A    CMP	R0, #10
0x3512	0xD116    BNE	L_vUARTISR212
0x3514	0x480F    LDR	R0, [PC, #60]
0x3516	0x6800    LDR	R0, [R0, #0]
0x3518	0x1E41    SUBS	R1, R0, #1
0x351A	0x480F    LDR	R0, [PC, #60]
0x351C	0x1840    ADDS	R0, R0, R1
0x351E	0x7800    LDRB	R0, [R0, #0]
0x3520	0x280D    CMP	R0, #13
0x3522	0xD10E    BNE	L_vUARTISR212
L__vUARTISR407:
;uarthandler.c, 143 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x3524	0x480B    LDR	R0, [PC, #44]
0x3526	0x6801    LDR	R1, [R0, #0]
0x3528	0x480B    LDR	R0, [PC, #44]
0x352A	0x1841    ADDS	R1, R0, R1
0x352C	0x4808    LDR	R0, [PC, #32]
0x352E	0x7800    LDRB	R0, [R0, #0]
0x3530	0x7008    STRB	R0, [R1, #0]
0x3532	0x4808    LDR	R0, [PC, #32]
0x3534	0x6800    LDR	R0, [R0, #0]
0x3536	0x1C41    ADDS	R1, R0, #1
0x3538	0x4806    LDR	R0, [PC, #24]
0x353A	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 144 :: 		fUSART1Buffer = READY_TO_READ;
0x353C	0x2101    MOVS	R1, #1
0x353E	0x4807    LDR	R0, [PC, #28]
0x3540	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 145 :: 		}
L_vUARTISR212:
L_vUARTISR209:
L_vUARTISR207:
;uarthandler.c, 146 :: 		}
L_vUARTISR194:
;uarthandler.c, 147 :: 		}
L_end_vUARTISR:
0x3542	0x4770    BX	LR
0x3544	0x02B44242  	GPIOE_ODRbits+0
0x3548	0x00144222  	USART1_SRbits+0
0x354C	0x10044001  	USART1_DR+0
0x3550	0x228E2000  	_ucData1+0
0x3554	0x20042000  	_ulUSART1ByteReceived+0
0x3558	0x10042000  	_ucUSART1RXBuffer+0
0x355C	0x20082000  	_fUSART1Buffer+0
; end of _vUARTISR
_Timer2_interrupt:
;DriverRF4463PROMain.c, 92 :: 		void Timer2_interrupt() iv IVT_INT_TIM2 {
;DriverRF4463PROMain.c, 93 :: 		TIM2_SR.UIF = 0;
0x3408	0x2100    MOVS	R1, #0
0x340A	0xB249    SXTB	R1, R1
0x340C	0x4804    LDR	R0, [PC, #16]
0x340E	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 94 :: 		Flag.rf_reach_timeout = 1; //Enter your code here
0x3410	0x2101    MOVS	R1, #1
0x3412	0xB249    SXTB	R1, R1
0x3414	0x4803    LDR	R0, [PC, #12]
0x3416	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 95 :: 		Flag.reach_1s = 1;
0x3418	0x4803    LDR	R0, [PC, #12]
0x341A	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 96 :: 		}
L_end_Timer2_interrupt:
0x341C	0x4770    BX	LR
0x341E	0xBF00    NOP
0x3420	0x02004200  	TIM2_SR+0
0x3424	0x57A82204  	_Flag+0
0x3428	0x57A02204  	_Flag+0
; end of _Timer2_interrupt
_DMA2Strm7_interrupt:
;uarthandler.c, 89 :: 		void DMA2Strm7_interrupt() iv IVT_INT_DMA2_Stream7 ics ICS_AUTO {
;uarthandler.c, 91 :: 		if ( DMA2_HISRbits.FEIF7 ) {
0x3560	0x4815    LDR	R0, [PC, #84]
0x3562	0x6800    LDR	R0, [R0, #0]
0x3564	0xB120    CBZ	R0, L_DMA2Strm7_interrupt185
;uarthandler.c, 92 :: 		DMA2_HIFCRbits.CFEIF7 = 1;
0x3566	0x2101    MOVS	R1, #1
0x3568	0xB249    SXTB	R1, R1
0x356A	0x4814    LDR	R0, [PC, #80]
0x356C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 93 :: 		}
0x356E	0xE022    B	L_DMA2Strm7_interrupt186
L_DMA2Strm7_interrupt185:
;uarthandler.c, 94 :: 		else if ( DMA2_HISRbits.DMEIF7 ) {
0x3570	0x4813    LDR	R0, [PC, #76]
0x3572	0x6800    LDR	R0, [R0, #0]
0x3574	0xB120    CBZ	R0, L_DMA2Strm7_interrupt187
;uarthandler.c, 95 :: 		DMA2_HIFCRbits.CDMEIF7 = 1;
0x3576	0x2101    MOVS	R1, #1
0x3578	0xB249    SXTB	R1, R1
0x357A	0x4812    LDR	R0, [PC, #72]
0x357C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 96 :: 		}
0x357E	0xE01A    B	L_DMA2Strm7_interrupt188
L_DMA2Strm7_interrupt187:
;uarthandler.c, 97 :: 		else if ( DMA2_HISRbits.TEIF7 ) {     // TRANSFER ERROR INTERRUPT FLAG
0x3580	0x4811    LDR	R0, [PC, #68]
0x3582	0x6800    LDR	R0, [R0, #0]
0x3584	0xB120    CBZ	R0, L_DMA2Strm7_interrupt189
;uarthandler.c, 98 :: 		DMA2_HIFCRbits.CTEIF7 = 1;       // limpia el flag de error
0x3586	0x2101    MOVS	R1, #1
0x3588	0xB249    SXTB	R1, R1
0x358A	0x4810    LDR	R0, [PC, #64]
0x358C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 100 :: 		}
0x358E	0xE012    B	L_DMA2Strm7_interrupt190
L_DMA2Strm7_interrupt189:
;uarthandler.c, 101 :: 		else if ( DMA2_HISRbits.HTIF7 ) {
0x3590	0x480F    LDR	R0, [PC, #60]
0x3592	0x6800    LDR	R0, [R0, #0]
0x3594	0xB120    CBZ	R0, L_DMA2Strm7_interrupt191
;uarthandler.c, 102 :: 		DMA2_HIFCRbits.CHTIF7 = 1;
0x3596	0x2101    MOVS	R1, #1
0x3598	0xB249    SXTB	R1, R1
0x359A	0x480E    LDR	R0, [PC, #56]
0x359C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 103 :: 		}
0x359E	0xE00A    B	L_DMA2Strm7_interrupt192
L_DMA2Strm7_interrupt191:
;uarthandler.c, 104 :: 		else if ( DMA2_HISRbits.TCIF7 ) {     // TRANSFER COMPLETE INTERRUPT FLAG = envio el frame completo
0x35A0	0x480D    LDR	R0, [PC, #52]
0x35A2	0x6800    LDR	R0, [R0, #0]
0x35A4	0xB138    CBZ	R0, L_DMA2Strm7_interrupt193
;uarthandler.c, 105 :: 		DMA2_HIFCRbits.CTCIF7 = 1;       // limpia TODOS LOS FLAGS DE DMA2 CANAL 2
0x35A6	0x2101    MOVS	R1, #1
0x35A8	0xB249    SXTB	R1, R1
0x35AA	0x480C    LDR	R0, [PC, #48]
0x35AC	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 106 :: 		DMA2_S7CRbits.EN = 0;            // EXPERIMENTAL PARA CAMBIAR EL VALOR DEL CONTADOR
0x35AE	0x2100    MOVS	R1, #0
0x35B0	0xB249    SXTB	R1, R1
0x35B2	0x480B    LDR	R0, [PC, #44]
0x35B4	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 108 :: 		}
L_DMA2Strm7_interrupt193:
L_DMA2Strm7_interrupt192:
L_DMA2Strm7_interrupt190:
L_DMA2Strm7_interrupt188:
L_DMA2Strm7_interrupt186:
;uarthandler.c, 109 :: 		}
L_end_DMA2Strm7_interrupt:
0x35B6	0x4770    BX	LR
0x35B8	0x80D8424C  	DMA2_HISRbits+0
0x35BC	0x81D8424C  	DMA2_HIFCRbits+0
0x35C0	0x80E0424C  	DMA2_HISRbits+0
0x35C4	0x81E0424C  	DMA2_HIFCRbits+0
0x35C8	0x80E4424C  	DMA2_HISRbits+0
0x35CC	0x81E4424C  	DMA2_HIFCRbits+0
0x35D0	0x80E8424C  	DMA2_HISRbits+0
0x35D4	0x81E8424C  	DMA2_HIFCRbits+0
0x35D8	0x80EC424C  	DMA2_HISRbits+0
0x35DC	0x81EC424C  	DMA2_HIFCRbits+0
0x35E0	0x9700424C  	DMA2_S7CRbits+0
; end of _DMA2Strm7_interrupt
_Int_SPI1:
;driverspi.c, 11 :: 		void Int_SPI1() iv IVT_INT_SPI1 ics ICS_AUTO {
;driverspi.c, 13 :: 		if ( SPI1_SRbits.RXNE ) {
0x35E4	0x4803    LDR	R0, [PC, #12]
0x35E6	0x6800    LDR	R0, [R0, #0]
0x35E8	0xB118    CBZ	R0, L_Int_SPI10
;driverspi.c, 14 :: 		ucSPI1ByteReceived = ( unsigned char )SPI1_DR;      // lee el Byte recibido
0x35EA	0x4803    LDR	R0, [PC, #12]
0x35EC	0x6801    LDR	R1, [R0, #0]
0x35EE	0x4803    LDR	R0, [PC, #12]
0x35F0	0x7001    STRB	R1, [R0, #0]
;driverspi.c, 17 :: 		}
L_Int_SPI10:
;driverspi.c, 18 :: 		}
L_end_Int_SPI1:
0x35F2	0x4770    BX	LR
0x35F4	0x01004226  	SPI1_SRbits+0
0x35F8	0x300C4001  	SPI1_DR+0
0x35FC	0x228D2000  	_ucSPI1ByteReceived+0
; end of _Int_SPI1
_vRF4463ISR:
;driverrf4463pro.c, 29 :: 		void vRF4463ISR() iv IVT_INT_EXTI0 ics ICS_AUTO{
0x3600	0xB081    SUB	SP, SP, #4
0x3602	0xF8CDE000  STR	LR, [SP, #0]
;driverrf4463pro.c, 30 :: 		if( EXTI_PR.B0 ){
0x3606	0x480B    LDR	R0, [PC, #44]
0x3608	0x6800    LDR	R0, [R0, #0]
0x360A	0xB178    CBZ	R0, L_vRF4463ISR1
;driverrf4463pro.c, 31 :: 		EXTI_PR.B0 |= 1;
0x360C	0x4809    LDR	R0, [PC, #36]
0x360E	0x6800    LDR	R0, [R0, #0]
0x3610	0xF0400101  ORR	R1, R0, #1
0x3614	0xB2C9    UXTB	R1, R1
0x3616	0x4807    LDR	R0, [PC, #28]
0x3618	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 32 :: 		LED_GREEN = 1;
0x361A	0x2101    MOVS	R1, #1
0x361C	0xB249    SXTB	R1, R1
0x361E	0x4806    LDR	R0, [PC, #24]
0x3620	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 33 :: 		ucRF4463IRQ = 1;
0x3622	0x2101    MOVS	R1, #1
0x3624	0x4805    LDR	R0, [PC, #20]
0x3626	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 34 :: 		vRF4463ClearInterrupts();
0x3628	0xF7FFFDC8  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 35 :: 		}
L_vRF4463ISR1:
;driverrf4463pro.c, 36 :: 		}
L_end_vRF4463ISR:
0x362C	0xF8DDE000  LDR	LR, [SP, #0]
0x3630	0xB001    ADD	SP, SP, #4
0x3632	0x4770    BX	LR
0x3634	0x82804227  	EXTI_PR+0
0x3638	0x02A44242  	GPIOE_ODRbits+0
0x363C	0x21FB2000  	DriverRF4463PROMain_ucRF4463IRQ+0
; end of _vRF4463ISR
;DriverRF4463PROMain.c,0 :: ?ICS_ucUSARTActiveBuffer1 [4096]
0x3D88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+0
0x3D8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4
0x3D90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+8
0x3D94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+12
0x3D98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+16
0x3D9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+20
0x3DA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+24
0x3DA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+28
0x3DA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+32
0x3DAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+36
0x3DB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+40
0x3DB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+44
0x3DB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+48
0x3DBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+52
0x3DC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+56
0x3DC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+60
0x3DC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+64
0x3DCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+68
0x3DD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+72
0x3DD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+76
0x3DD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+80
0x3DDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+84
0x3DE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+88
0x3DE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+92
0x3DE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+96
0x3DEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+100
0x3DF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+104
0x3DF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+108
0x3DF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+112
0x3DFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+116
0x3E00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+120
0x3E04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+124
0x3E08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+128
0x3E0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+132
0x3E10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+136
0x3E14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+140
0x3E18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+144
0x3E1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+148
0x3E20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+152
0x3E24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+156
0x3E28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+160
0x3E2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+164
0x3E30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+168
0x3E34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+172
0x3E38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+176
0x3E3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+180
0x3E40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+184
0x3E44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+188
0x3E48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+192
0x3E4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+196
0x3E50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+200
0x3E54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+204
0x3E58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+208
0x3E5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+212
0x3E60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+216
0x3E64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+220
0x3E68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+224
0x3E6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+228
0x3E70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+232
0x3E74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+236
0x3E78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+240
0x3E7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+244
0x3E80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+248
0x3E84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+252
0x3E88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+256
0x3E8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+260
0x3E90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+264
0x3E94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+268
0x3E98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+272
0x3E9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+276
0x3EA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+280
0x3EA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+284
0x3EA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+288
0x3EAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+292
0x3EB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+296
0x3EB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+300
0x3EB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+304
0x3EBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+308
0x3EC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+312
0x3EC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+316
0x3EC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+320
0x3ECC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+324
0x3ED0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+328
0x3ED4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+332
0x3ED8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+336
0x3EDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+340
0x3EE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+344
0x3EE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+348
0x3EE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+352
0x3EEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+356
0x3EF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+360
0x3EF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+364
0x3EF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+368
0x3EFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+372
0x3F00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+376
0x3F04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+380
0x3F08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+384
0x3F0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+388
0x3F10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+392
0x3F14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+396
0x3F18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+400
0x3F1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+404
0x3F20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+408
0x3F24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+412
0x3F28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+416
0x3F2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+420
0x3F30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+424
0x3F34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+428
0x3F38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+432
0x3F3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+436
0x3F40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+440
0x3F44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+444
0x3F48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+448
0x3F4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+452
0x3F50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+456
0x3F54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+460
0x3F58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+464
0x3F5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+468
0x3F60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+472
0x3F64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+476
0x3F68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+480
0x3F6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+484
0x3F70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+488
0x3F74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+492
0x3F78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+496
0x3F7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+500
0x3F80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+504
0x3F84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+508
0x3F88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+512
0x3F8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+516
0x3F90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+520
0x3F94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+524
0x3F98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+528
0x3F9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+532
0x3FA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+536
0x3FA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+540
0x3FA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+544
0x3FAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+548
0x3FB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+552
0x3FB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+556
0x3FB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+560
0x3FBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+564
0x3FC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+568
0x3FC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+572
0x3FC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+576
0x3FCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+580
0x3FD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+584
0x3FD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+588
0x3FD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+592
0x3FDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+596
0x3FE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+600
0x3FE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+604
0x3FE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+608
0x3FEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+612
0x3FF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+616
0x3FF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+620
0x3FF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+624
0x3FFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+628
0x4000	0x00000000 ;?ICS_ucUSARTActiveBuffer1+632
0x4004	0x00000000 ;?ICS_ucUSARTActiveBuffer1+636
0x4008	0x00000000 ;?ICS_ucUSARTActiveBuffer1+640
0x400C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+644
0x4010	0x00000000 ;?ICS_ucUSARTActiveBuffer1+648
0x4014	0x00000000 ;?ICS_ucUSARTActiveBuffer1+652
0x4018	0x00000000 ;?ICS_ucUSARTActiveBuffer1+656
0x401C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+660
0x4020	0x00000000 ;?ICS_ucUSARTActiveBuffer1+664
0x4024	0x00000000 ;?ICS_ucUSARTActiveBuffer1+668
0x4028	0x00000000 ;?ICS_ucUSARTActiveBuffer1+672
0x402C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+676
0x4030	0x00000000 ;?ICS_ucUSARTActiveBuffer1+680
0x4034	0x00000000 ;?ICS_ucUSARTActiveBuffer1+684
0x4038	0x00000000 ;?ICS_ucUSARTActiveBuffer1+688
0x403C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+692
0x4040	0x00000000 ;?ICS_ucUSARTActiveBuffer1+696
0x4044	0x00000000 ;?ICS_ucUSARTActiveBuffer1+700
0x4048	0x00000000 ;?ICS_ucUSARTActiveBuffer1+704
0x404C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+708
0x4050	0x00000000 ;?ICS_ucUSARTActiveBuffer1+712
0x4054	0x00000000 ;?ICS_ucUSARTActiveBuffer1+716
0x4058	0x00000000 ;?ICS_ucUSARTActiveBuffer1+720
0x405C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+724
0x4060	0x00000000 ;?ICS_ucUSARTActiveBuffer1+728
0x4064	0x00000000 ;?ICS_ucUSARTActiveBuffer1+732
0x4068	0x00000000 ;?ICS_ucUSARTActiveBuffer1+736
0x406C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+740
0x4070	0x00000000 ;?ICS_ucUSARTActiveBuffer1+744
0x4074	0x00000000 ;?ICS_ucUSARTActiveBuffer1+748
0x4078	0x00000000 ;?ICS_ucUSARTActiveBuffer1+752
0x407C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+756
0x4080	0x00000000 ;?ICS_ucUSARTActiveBuffer1+760
0x4084	0x00000000 ;?ICS_ucUSARTActiveBuffer1+764
0x4088	0x00000000 ;?ICS_ucUSARTActiveBuffer1+768
0x408C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+772
0x4090	0x00000000 ;?ICS_ucUSARTActiveBuffer1+776
0x4094	0x00000000 ;?ICS_ucUSARTActiveBuffer1+780
0x4098	0x00000000 ;?ICS_ucUSARTActiveBuffer1+784
0x409C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+788
0x40A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+792
0x40A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+796
0x40A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+800
0x40AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+804
0x40B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+808
0x40B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+812
0x40B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+816
0x40BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+820
0x40C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+824
0x40C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+828
0x40C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+832
0x40CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+836
0x40D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+840
0x40D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+844
0x40D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+848
0x40DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+852
0x40E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+856
0x40E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+860
0x40E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+864
0x40EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+868
0x40F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+872
0x40F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+876
0x40F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+880
0x40FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+884
0x4100	0x00000000 ;?ICS_ucUSARTActiveBuffer1+888
0x4104	0x00000000 ;?ICS_ucUSARTActiveBuffer1+892
0x4108	0x00000000 ;?ICS_ucUSARTActiveBuffer1+896
0x410C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+900
0x4110	0x00000000 ;?ICS_ucUSARTActiveBuffer1+904
0x4114	0x00000000 ;?ICS_ucUSARTActiveBuffer1+908
0x4118	0x00000000 ;?ICS_ucUSARTActiveBuffer1+912
0x411C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+916
0x4120	0x00000000 ;?ICS_ucUSARTActiveBuffer1+920
0x4124	0x00000000 ;?ICS_ucUSARTActiveBuffer1+924
0x4128	0x00000000 ;?ICS_ucUSARTActiveBuffer1+928
0x412C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+932
0x4130	0x00000000 ;?ICS_ucUSARTActiveBuffer1+936
0x4134	0x00000000 ;?ICS_ucUSARTActiveBuffer1+940
0x4138	0x00000000 ;?ICS_ucUSARTActiveBuffer1+944
0x413C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+948
0x4140	0x00000000 ;?ICS_ucUSARTActiveBuffer1+952
0x4144	0x00000000 ;?ICS_ucUSARTActiveBuffer1+956
0x4148	0x00000000 ;?ICS_ucUSARTActiveBuffer1+960
0x414C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+964
0x4150	0x00000000 ;?ICS_ucUSARTActiveBuffer1+968
0x4154	0x00000000 ;?ICS_ucUSARTActiveBuffer1+972
0x4158	0x00000000 ;?ICS_ucUSARTActiveBuffer1+976
0x415C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+980
0x4160	0x00000000 ;?ICS_ucUSARTActiveBuffer1+984
0x4164	0x00000000 ;?ICS_ucUSARTActiveBuffer1+988
0x4168	0x00000000 ;?ICS_ucUSARTActiveBuffer1+992
0x416C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+996
0x4170	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1000
0x4174	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1004
0x4178	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1008
0x417C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1012
0x4180	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1016
0x4184	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1020
0x4188	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1024
0x418C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1028
0x4190	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1032
0x4194	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1036
0x4198	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1040
0x419C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1044
0x41A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1048
0x41A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1052
0x41A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1056
0x41AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1060
0x41B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1064
0x41B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1068
0x41B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1072
0x41BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1076
0x41C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1080
0x41C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1084
0x41C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1088
0x41CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1092
0x41D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1096
0x41D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1100
0x41D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1104
0x41DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1108
0x41E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1112
0x41E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1116
0x41E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1120
0x41EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1124
0x41F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1128
0x41F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1132
0x41F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1136
0x41FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1140
0x4200	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1144
0x4204	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1148
0x4208	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1152
0x420C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1156
0x4210	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1160
0x4214	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1164
0x4218	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1168
0x421C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1172
0x4220	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1176
0x4224	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1180
0x4228	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1184
0x422C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1188
0x4230	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1192
0x4234	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1196
0x4238	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1200
0x423C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1204
0x4240	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1208
0x4244	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1212
0x4248	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1216
0x424C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1220
0x4250	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1224
0x4254	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1228
0x4258	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1232
0x425C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1236
0x4260	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1240
0x4264	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1244
0x4268	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1248
0x426C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1252
0x4270	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1256
0x4274	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1260
0x4278	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1264
0x427C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1268
0x4280	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1272
0x4284	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1276
0x4288	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1280
0x428C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1284
0x4290	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1288
0x4294	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1292
0x4298	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1296
0x429C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1300
0x42A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1304
0x42A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1308
0x42A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1312
0x42AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1316
0x42B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1320
0x42B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1324
0x42B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1328
0x42BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1332
0x42C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1336
0x42C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1340
0x42C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1344
0x42CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1348
0x42D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1352
0x42D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1356
0x42D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1360
0x42DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1364
0x42E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1368
0x42E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1372
0x42E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1376
0x42EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1380
0x42F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1384
0x42F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1388
0x42F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1392
0x42FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1396
0x4300	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1400
0x4304	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1404
0x4308	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1408
0x430C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1412
0x4310	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1416
0x4314	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1420
0x4318	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1424
0x431C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1428
0x4320	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1432
0x4324	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1436
0x4328	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1440
0x432C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1444
0x4330	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1448
0x4334	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1452
0x4338	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1456
0x433C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1460
0x4340	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1464
0x4344	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1468
0x4348	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1472
0x434C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1476
0x4350	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1480
0x4354	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1484
0x4358	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1488
0x435C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1492
0x4360	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1496
0x4364	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1500
0x4368	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1504
0x436C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1508
0x4370	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1512
0x4374	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1516
0x4378	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1520
0x437C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1524
0x4380	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1528
0x4384	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1532
0x4388	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1536
0x438C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1540
0x4390	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1544
0x4394	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1548
0x4398	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1552
0x439C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1556
0x43A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1560
0x43A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1564
0x43A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1568
0x43AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1572
0x43B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1576
0x43B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1580
0x43B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1584
0x43BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1588
0x43C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1592
0x43C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1596
0x43C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1600
0x43CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1604
0x43D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1608
0x43D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1612
0x43D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1616
0x43DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1620
0x43E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1624
0x43E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1628
0x43E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1632
0x43EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1636
0x43F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1640
0x43F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1644
0x43F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1648
0x43FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1652
0x4400	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1656
0x4404	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1660
0x4408	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1664
0x440C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1668
0x4410	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1672
0x4414	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1676
0x4418	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1680
0x441C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1684
0x4420	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1688
0x4424	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1692
0x4428	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1696
0x442C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1700
0x4430	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1704
0x4434	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1708
0x4438	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1712
0x443C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1716
0x4440	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1720
0x4444	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1724
0x4448	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1728
0x444C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1732
0x4450	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1736
0x4454	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1740
0x4458	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1744
0x445C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1748
0x4460	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1752
0x4464	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1756
0x4468	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1760
0x446C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1764
0x4470	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1768
0x4474	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1772
0x4478	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1776
0x447C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1780
0x4480	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1784
0x4484	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1788
0x4488	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1792
0x448C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1796
0x4490	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1800
0x4494	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1804
0x4498	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1808
0x449C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1812
0x44A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1816
0x44A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1820
0x44A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1824
0x44AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1828
0x44B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1832
0x44B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1836
0x44B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1840
0x44BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1844
0x44C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1848
0x44C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1852
0x44C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1856
0x44CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1860
0x44D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1864
0x44D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1868
0x44D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1872
0x44DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1876
0x44E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1880
0x44E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1884
0x44E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1888
0x44EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1892
0x44F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1896
0x44F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1900
0x44F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1904
0x44FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1908
0x4500	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1912
0x4504	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1916
0x4508	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1920
0x450C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1924
0x4510	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1928
0x4514	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1932
0x4518	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1936
0x451C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1940
0x4520	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1944
0x4524	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1948
0x4528	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1952
0x452C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1956
0x4530	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1960
0x4534	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1964
0x4538	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1968
0x453C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1972
0x4540	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1976
0x4544	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1980
0x4548	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1984
0x454C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1988
0x4550	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1992
0x4554	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1996
0x4558	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2000
0x455C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2004
0x4560	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2008
0x4564	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2012
0x4568	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2016
0x456C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2020
0x4570	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2024
0x4574	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2028
0x4578	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2032
0x457C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2036
0x4580	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2040
0x4584	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2044
0x4588	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2048
0x458C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2052
0x4590	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2056
0x4594	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2060
0x4598	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2064
0x459C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2068
0x45A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2072
0x45A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2076
0x45A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2080
0x45AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2084
0x45B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2088
0x45B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2092
0x45B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2096
0x45BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2100
0x45C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2104
0x45C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2108
0x45C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2112
0x45CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2116
0x45D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2120
0x45D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2124
0x45D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2128
0x45DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2132
0x45E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2136
0x45E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2140
0x45E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2144
0x45EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2148
0x45F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2152
0x45F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2156
0x45F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2160
0x45FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2164
0x4600	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2168
0x4604	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2172
0x4608	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2176
0x460C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2180
0x4610	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2184
0x4614	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2188
0x4618	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2192
0x461C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2196
0x4620	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2200
0x4624	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2204
0x4628	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2208
0x462C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2212
0x4630	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2216
0x4634	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2220
0x4638	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2224
0x463C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2228
0x4640	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2232
0x4644	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2236
0x4648	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2240
0x464C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2244
0x4650	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2248
0x4654	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2252
0x4658	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2256
0x465C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2260
0x4660	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2264
0x4664	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2268
0x4668	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2272
0x466C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2276
0x4670	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2280
0x4674	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2284
0x4678	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2288
0x467C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2292
0x4680	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2296
0x4684	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2300
0x4688	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2304
0x468C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2308
0x4690	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2312
0x4694	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2316
0x4698	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2320
0x469C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2324
0x46A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2328
0x46A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2332
0x46A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2336
0x46AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2340
0x46B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2344
0x46B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2348
0x46B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2352
0x46BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2356
0x46C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2360
0x46C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2364
0x46C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2368
0x46CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2372
0x46D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2376
0x46D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2380
0x46D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2384
0x46DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2388
0x46E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2392
0x46E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2396
0x46E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2400
0x46EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2404
0x46F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2408
0x46F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2412
0x46F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2416
0x46FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2420
0x4700	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2424
0x4704	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2428
0x4708	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2432
0x470C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2436
0x4710	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2440
0x4714	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2444
0x4718	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2448
0x471C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2452
0x4720	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2456
0x4724	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2460
0x4728	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2464
0x472C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2468
0x4730	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2472
0x4734	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2476
0x4738	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2480
0x473C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2484
0x4740	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2488
0x4744	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2492
0x4748	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2496
0x474C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2500
0x4750	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2504
0x4754	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2508
0x4758	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2512
0x475C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2516
0x4760	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2520
0x4764	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2524
0x4768	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2528
0x476C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2532
0x4770	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2536
0x4774	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2540
0x4778	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2544
0x477C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2548
0x4780	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2552
0x4784	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2556
0x4788	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2560
0x478C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2564
0x4790	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2568
0x4794	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2572
0x4798	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2576
0x479C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2580
0x47A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2584
0x47A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2588
0x47A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2592
0x47AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2596
0x47B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2600
0x47B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2604
0x47B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2608
0x47BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2612
0x47C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2616
0x47C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2620
0x47C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2624
0x47CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2628
0x47D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2632
0x47D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2636
0x47D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2640
0x47DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2644
0x47E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2648
0x47E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2652
0x47E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2656
0x47EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2660
0x47F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2664
0x47F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2668
0x47F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2672
0x47FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2676
0x4800	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2680
0x4804	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2684
0x4808	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2688
0x480C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2692
0x4810	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2696
0x4814	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2700
0x4818	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2704
0x481C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2708
0x4820	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2712
0x4824	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2716
0x4828	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2720
0x482C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2724
0x4830	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2728
0x4834	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2732
0x4838	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2736
0x483C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2740
0x4840	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2744
0x4844	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2748
0x4848	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2752
0x484C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2756
0x4850	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2760
0x4854	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2764
0x4858	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2768
0x485C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2772
0x4860	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2776
0x4864	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2780
0x4868	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2784
0x486C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2788
0x4870	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2792
0x4874	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2796
0x4878	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2800
0x487C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2804
0x4880	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2808
0x4884	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2812
0x4888	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2816
0x488C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2820
0x4890	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2824
0x4894	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2828
0x4898	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2832
0x489C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2836
0x48A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2840
0x48A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2844
0x48A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2848
0x48AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2852
0x48B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2856
0x48B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2860
0x48B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2864
0x48BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2868
0x48C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2872
0x48C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2876
0x48C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2880
0x48CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2884
0x48D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2888
0x48D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2892
0x48D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2896
0x48DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2900
0x48E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2904
0x48E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2908
0x48E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2912
0x48EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2916
0x48F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2920
0x48F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2924
0x48F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2928
0x48FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2932
0x4900	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2936
0x4904	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2940
0x4908	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2944
0x490C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2948
0x4910	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2952
0x4914	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2956
0x4918	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2960
0x491C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2964
0x4920	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2968
0x4924	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2972
0x4928	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2976
0x492C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2980
0x4930	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2984
0x4934	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2988
0x4938	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2992
0x493C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2996
0x4940	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3000
0x4944	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3004
0x4948	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3008
0x494C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3012
0x4950	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3016
0x4954	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3020
0x4958	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3024
0x495C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3028
0x4960	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3032
0x4964	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3036
0x4968	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3040
0x496C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3044
0x4970	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3048
0x4974	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3052
0x4978	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3056
0x497C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3060
0x4980	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3064
0x4984	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3068
0x4988	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3072
0x498C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3076
0x4990	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3080
0x4994	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3084
0x4998	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3088
0x499C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3092
0x49A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3096
0x49A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3100
0x49A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3104
0x49AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3108
0x49B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3112
0x49B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3116
0x49B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3120
0x49BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3124
0x49C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3128
0x49C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3132
0x49C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3136
0x49CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3140
0x49D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3144
0x49D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3148
0x49D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3152
0x49DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3156
0x49E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3160
0x49E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3164
0x49E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3168
0x49EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3172
0x49F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3176
0x49F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3180
0x49F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3184
0x49FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3188
0x4A00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3192
0x4A04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3196
0x4A08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3200
0x4A0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3204
0x4A10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3208
0x4A14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3212
0x4A18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3216
0x4A1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3220
0x4A20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3224
0x4A24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3228
0x4A28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3232
0x4A2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3236
0x4A30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3240
0x4A34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3244
0x4A38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3248
0x4A3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3252
0x4A40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3256
0x4A44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3260
0x4A48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3264
0x4A4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3268
0x4A50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3272
0x4A54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3276
0x4A58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3280
0x4A5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3284
0x4A60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3288
0x4A64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3292
0x4A68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3296
0x4A6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3300
0x4A70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3304
0x4A74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3308
0x4A78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3312
0x4A7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3316
0x4A80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3320
0x4A84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3324
0x4A88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3328
0x4A8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3332
0x4A90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3336
0x4A94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3340
0x4A98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3344
0x4A9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3348
0x4AA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3352
0x4AA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3356
0x4AA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3360
0x4AAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3364
0x4AB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3368
0x4AB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3372
0x4AB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3376
0x4ABC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3380
0x4AC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3384
0x4AC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3388
0x4AC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3392
0x4ACC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3396
0x4AD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3400
0x4AD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3404
0x4AD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3408
0x4ADC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3412
0x4AE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3416
0x4AE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3420
0x4AE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3424
0x4AEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3428
0x4AF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3432
0x4AF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3436
0x4AF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3440
0x4AFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3444
0x4B00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3448
0x4B04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3452
0x4B08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3456
0x4B0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3460
0x4B10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3464
0x4B14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3468
0x4B18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3472
0x4B1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3476
0x4B20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3480
0x4B24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3484
0x4B28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3488
0x4B2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3492
0x4B30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3496
0x4B34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3500
0x4B38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3504
0x4B3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3508
0x4B40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3512
0x4B44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3516
0x4B48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3520
0x4B4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3524
0x4B50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3528
0x4B54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3532
0x4B58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3536
0x4B5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3540
0x4B60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3544
0x4B64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3548
0x4B68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3552
0x4B6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3556
0x4B70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3560
0x4B74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3564
0x4B78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3568
0x4B7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3572
0x4B80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3576
0x4B84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3580
0x4B88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3584
0x4B8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3588
0x4B90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3592
0x4B94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3596
0x4B98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3600
0x4B9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3604
0x4BA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3608
0x4BA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3612
0x4BA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3616
0x4BAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3620
0x4BB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3624
0x4BB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3628
0x4BB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3632
0x4BBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3636
0x4BC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3640
0x4BC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3644
0x4BC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3648
0x4BCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3652
0x4BD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3656
0x4BD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3660
0x4BD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3664
0x4BDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3668
0x4BE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3672
0x4BE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3676
0x4BE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3680
0x4BEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3684
0x4BF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3688
0x4BF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3692
0x4BF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3696
0x4BFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3700
0x4C00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3704
0x4C04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3708
0x4C08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3712
0x4C0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3716
0x4C10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3720
0x4C14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3724
0x4C18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3728
0x4C1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3732
0x4C20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3736
0x4C24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3740
0x4C28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3744
0x4C2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3748
0x4C30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3752
0x4C34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3756
0x4C38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3760
0x4C3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3764
0x4C40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3768
0x4C44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3772
0x4C48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3776
0x4C4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3780
0x4C50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3784
0x4C54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3788
0x4C58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3792
0x4C5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3796
0x4C60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3800
0x4C64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3804
0x4C68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3808
0x4C6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3812
0x4C70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3816
0x4C74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3820
0x4C78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3824
0x4C7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3828
0x4C80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3832
0x4C84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3836
0x4C88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3840
0x4C8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3844
0x4C90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3848
0x4C94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3852
0x4C98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3856
0x4C9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3860
0x4CA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3864
0x4CA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3868
0x4CA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3872
0x4CAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3876
0x4CB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3880
0x4CB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3884
0x4CB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3888
0x4CBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3892
0x4CC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3896
0x4CC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3900
0x4CC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3904
0x4CCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3908
0x4CD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3912
0x4CD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3916
0x4CD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3920
0x4CDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3924
0x4CE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3928
0x4CE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3932
0x4CE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3936
0x4CEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3940
0x4CF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3944
0x4CF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3948
0x4CF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3952
0x4CFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3956
0x4D00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3960
0x4D04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3964
0x4D08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3968
0x4D0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3972
0x4D10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3976
0x4D14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3980
0x4D18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3984
0x4D1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3988
0x4D20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3992
0x4D24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3996
0x4D28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4000
0x4D2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4004
0x4D30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4008
0x4D34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4012
0x4D38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4016
0x4D3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4020
0x4D40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4024
0x4D44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4028
0x4D48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4032
0x4D4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4036
0x4D50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4040
0x4D54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4044
0x4D58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4048
0x4D5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4052
0x4D60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4056
0x4D64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4060
0x4D68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4064
0x4D6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4068
0x4D70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4072
0x4D74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4076
0x4D78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4080
0x4D7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4084
0x4D80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4088
0x4D84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4092
; end of ?ICS_ucUSARTActiveBuffer1
;DriverRF4463PROMain.c,0 :: ?ICS_ulUSARTActiveBuffer1BytesReceived [4]
0x4D88	0x00000000 ;?ICS_ulUSARTActiveBuffer1BytesReceived+0
; end of ?ICS_ulUSARTActiveBuffer1BytesReceived
;DriverRF4463PROMain.c,0 :: ?ICS_ucUSART1RXBuffer [4096]
0x4D8C	0x00000000 ;?ICS_ucUSART1RXBuffer+0
0x4D90	0x00000000 ;?ICS_ucUSART1RXBuffer+4
0x4D94	0x00000000 ;?ICS_ucUSART1RXBuffer+8
0x4D98	0x00000000 ;?ICS_ucUSART1RXBuffer+12
0x4D9C	0x00000000 ;?ICS_ucUSART1RXBuffer+16
0x4DA0	0x00000000 ;?ICS_ucUSART1RXBuffer+20
0x4DA4	0x00000000 ;?ICS_ucUSART1RXBuffer+24
0x4DA8	0x00000000 ;?ICS_ucUSART1RXBuffer+28
0x4DAC	0x00000000 ;?ICS_ucUSART1RXBuffer+32
0x4DB0	0x00000000 ;?ICS_ucUSART1RXBuffer+36
0x4DB4	0x00000000 ;?ICS_ucUSART1RXBuffer+40
0x4DB8	0x00000000 ;?ICS_ucUSART1RXBuffer+44
0x4DBC	0x00000000 ;?ICS_ucUSART1RXBuffer+48
0x4DC0	0x00000000 ;?ICS_ucUSART1RXBuffer+52
0x4DC4	0x00000000 ;?ICS_ucUSART1RXBuffer+56
0x4DC8	0x00000000 ;?ICS_ucUSART1RXBuffer+60
0x4DCC	0x00000000 ;?ICS_ucUSART1RXBuffer+64
0x4DD0	0x00000000 ;?ICS_ucUSART1RXBuffer+68
0x4DD4	0x00000000 ;?ICS_ucUSART1RXBuffer+72
0x4DD8	0x00000000 ;?ICS_ucUSART1RXBuffer+76
0x4DDC	0x00000000 ;?ICS_ucUSART1RXBuffer+80
0x4DE0	0x00000000 ;?ICS_ucUSART1RXBuffer+84
0x4DE4	0x00000000 ;?ICS_ucUSART1RXBuffer+88
0x4DE8	0x00000000 ;?ICS_ucUSART1RXBuffer+92
0x4DEC	0x00000000 ;?ICS_ucUSART1RXBuffer+96
0x4DF0	0x00000000 ;?ICS_ucUSART1RXBuffer+100
0x4DF4	0x00000000 ;?ICS_ucUSART1RXBuffer+104
0x4DF8	0x00000000 ;?ICS_ucUSART1RXBuffer+108
0x4DFC	0x00000000 ;?ICS_ucUSART1RXBuffer+112
0x4E00	0x00000000 ;?ICS_ucUSART1RXBuffer+116
0x4E04	0x00000000 ;?ICS_ucUSART1RXBuffer+120
0x4E08	0x00000000 ;?ICS_ucUSART1RXBuffer+124
0x4E0C	0x00000000 ;?ICS_ucUSART1RXBuffer+128
0x4E10	0x00000000 ;?ICS_ucUSART1RXBuffer+132
0x4E14	0x00000000 ;?ICS_ucUSART1RXBuffer+136
0x4E18	0x00000000 ;?ICS_ucUSART1RXBuffer+140
0x4E1C	0x00000000 ;?ICS_ucUSART1RXBuffer+144
0x4E20	0x00000000 ;?ICS_ucUSART1RXBuffer+148
0x4E24	0x00000000 ;?ICS_ucUSART1RXBuffer+152
0x4E28	0x00000000 ;?ICS_ucUSART1RXBuffer+156
0x4E2C	0x00000000 ;?ICS_ucUSART1RXBuffer+160
0x4E30	0x00000000 ;?ICS_ucUSART1RXBuffer+164
0x4E34	0x00000000 ;?ICS_ucUSART1RXBuffer+168
0x4E38	0x00000000 ;?ICS_ucUSART1RXBuffer+172
0x4E3C	0x00000000 ;?ICS_ucUSART1RXBuffer+176
0x4E40	0x00000000 ;?ICS_ucUSART1RXBuffer+180
0x4E44	0x00000000 ;?ICS_ucUSART1RXBuffer+184
0x4E48	0x00000000 ;?ICS_ucUSART1RXBuffer+188
0x4E4C	0x00000000 ;?ICS_ucUSART1RXBuffer+192
0x4E50	0x00000000 ;?ICS_ucUSART1RXBuffer+196
0x4E54	0x00000000 ;?ICS_ucUSART1RXBuffer+200
0x4E58	0x00000000 ;?ICS_ucUSART1RXBuffer+204
0x4E5C	0x00000000 ;?ICS_ucUSART1RXBuffer+208
0x4E60	0x00000000 ;?ICS_ucUSART1RXBuffer+212
0x4E64	0x00000000 ;?ICS_ucUSART1RXBuffer+216
0x4E68	0x00000000 ;?ICS_ucUSART1RXBuffer+220
0x4E6C	0x00000000 ;?ICS_ucUSART1RXBuffer+224
0x4E70	0x00000000 ;?ICS_ucUSART1RXBuffer+228
0x4E74	0x00000000 ;?ICS_ucUSART1RXBuffer+232
0x4E78	0x00000000 ;?ICS_ucUSART1RXBuffer+236
0x4E7C	0x00000000 ;?ICS_ucUSART1RXBuffer+240
0x4E80	0x00000000 ;?ICS_ucUSART1RXBuffer+244
0x4E84	0x00000000 ;?ICS_ucUSART1RXBuffer+248
0x4E88	0x00000000 ;?ICS_ucUSART1RXBuffer+252
0x4E8C	0x00000000 ;?ICS_ucUSART1RXBuffer+256
0x4E90	0x00000000 ;?ICS_ucUSART1RXBuffer+260
0x4E94	0x00000000 ;?ICS_ucUSART1RXBuffer+264
0x4E98	0x00000000 ;?ICS_ucUSART1RXBuffer+268
0x4E9C	0x00000000 ;?ICS_ucUSART1RXBuffer+272
0x4EA0	0x00000000 ;?ICS_ucUSART1RXBuffer+276
0x4EA4	0x00000000 ;?ICS_ucUSART1RXBuffer+280
0x4EA8	0x00000000 ;?ICS_ucUSART1RXBuffer+284
0x4EAC	0x00000000 ;?ICS_ucUSART1RXBuffer+288
0x4EB0	0x00000000 ;?ICS_ucUSART1RXBuffer+292
0x4EB4	0x00000000 ;?ICS_ucUSART1RXBuffer+296
0x4EB8	0x00000000 ;?ICS_ucUSART1RXBuffer+300
0x4EBC	0x00000000 ;?ICS_ucUSART1RXBuffer+304
0x4EC0	0x00000000 ;?ICS_ucUSART1RXBuffer+308
0x4EC4	0x00000000 ;?ICS_ucUSART1RXBuffer+312
0x4EC8	0x00000000 ;?ICS_ucUSART1RXBuffer+316
0x4ECC	0x00000000 ;?ICS_ucUSART1RXBuffer+320
0x4ED0	0x00000000 ;?ICS_ucUSART1RXBuffer+324
0x4ED4	0x00000000 ;?ICS_ucUSART1RXBuffer+328
0x4ED8	0x00000000 ;?ICS_ucUSART1RXBuffer+332
0x4EDC	0x00000000 ;?ICS_ucUSART1RXBuffer+336
0x4EE0	0x00000000 ;?ICS_ucUSART1RXBuffer+340
0x4EE4	0x00000000 ;?ICS_ucUSART1RXBuffer+344
0x4EE8	0x00000000 ;?ICS_ucUSART1RXBuffer+348
0x4EEC	0x00000000 ;?ICS_ucUSART1RXBuffer+352
0x4EF0	0x00000000 ;?ICS_ucUSART1RXBuffer+356
0x4EF4	0x00000000 ;?ICS_ucUSART1RXBuffer+360
0x4EF8	0x00000000 ;?ICS_ucUSART1RXBuffer+364
0x4EFC	0x00000000 ;?ICS_ucUSART1RXBuffer+368
0x4F00	0x00000000 ;?ICS_ucUSART1RXBuffer+372
0x4F04	0x00000000 ;?ICS_ucUSART1RXBuffer+376
0x4F08	0x00000000 ;?ICS_ucUSART1RXBuffer+380
0x4F0C	0x00000000 ;?ICS_ucUSART1RXBuffer+384
0x4F10	0x00000000 ;?ICS_ucUSART1RXBuffer+388
0x4F14	0x00000000 ;?ICS_ucUSART1RXBuffer+392
0x4F18	0x00000000 ;?ICS_ucUSART1RXBuffer+396
0x4F1C	0x00000000 ;?ICS_ucUSART1RXBuffer+400
0x4F20	0x00000000 ;?ICS_ucUSART1RXBuffer+404
0x4F24	0x00000000 ;?ICS_ucUSART1RXBuffer+408
0x4F28	0x00000000 ;?ICS_ucUSART1RXBuffer+412
0x4F2C	0x00000000 ;?ICS_ucUSART1RXBuffer+416
0x4F30	0x00000000 ;?ICS_ucUSART1RXBuffer+420
0x4F34	0x00000000 ;?ICS_ucUSART1RXBuffer+424
0x4F38	0x00000000 ;?ICS_ucUSART1RXBuffer+428
0x4F3C	0x00000000 ;?ICS_ucUSART1RXBuffer+432
0x4F40	0x00000000 ;?ICS_ucUSART1RXBuffer+436
0x4F44	0x00000000 ;?ICS_ucUSART1RXBuffer+440
0x4F48	0x00000000 ;?ICS_ucUSART1RXBuffer+444
0x4F4C	0x00000000 ;?ICS_ucUSART1RXBuffer+448
0x4F50	0x00000000 ;?ICS_ucUSART1RXBuffer+452
0x4F54	0x00000000 ;?ICS_ucUSART1RXBuffer+456
0x4F58	0x00000000 ;?ICS_ucUSART1RXBuffer+460
0x4F5C	0x00000000 ;?ICS_ucUSART1RXBuffer+464
0x4F60	0x00000000 ;?ICS_ucUSART1RXBuffer+468
0x4F64	0x00000000 ;?ICS_ucUSART1RXBuffer+472
0x4F68	0x00000000 ;?ICS_ucUSART1RXBuffer+476
0x4F6C	0x00000000 ;?ICS_ucUSART1RXBuffer+480
0x4F70	0x00000000 ;?ICS_ucUSART1RXBuffer+484
0x4F74	0x00000000 ;?ICS_ucUSART1RXBuffer+488
0x4F78	0x00000000 ;?ICS_ucUSART1RXBuffer+492
0x4F7C	0x00000000 ;?ICS_ucUSART1RXBuffer+496
0x4F80	0x00000000 ;?ICS_ucUSART1RXBuffer+500
0x4F84	0x00000000 ;?ICS_ucUSART1RXBuffer+504
0x4F88	0x00000000 ;?ICS_ucUSART1RXBuffer+508
0x4F8C	0x00000000 ;?ICS_ucUSART1RXBuffer+512
0x4F90	0x00000000 ;?ICS_ucUSART1RXBuffer+516
0x4F94	0x00000000 ;?ICS_ucUSART1RXBuffer+520
0x4F98	0x00000000 ;?ICS_ucUSART1RXBuffer+524
0x4F9C	0x00000000 ;?ICS_ucUSART1RXBuffer+528
0x4FA0	0x00000000 ;?ICS_ucUSART1RXBuffer+532
0x4FA4	0x00000000 ;?ICS_ucUSART1RXBuffer+536
0x4FA8	0x00000000 ;?ICS_ucUSART1RXBuffer+540
0x4FAC	0x00000000 ;?ICS_ucUSART1RXBuffer+544
0x4FB0	0x00000000 ;?ICS_ucUSART1RXBuffer+548
0x4FB4	0x00000000 ;?ICS_ucUSART1RXBuffer+552
0x4FB8	0x00000000 ;?ICS_ucUSART1RXBuffer+556
0x4FBC	0x00000000 ;?ICS_ucUSART1RXBuffer+560
0x4FC0	0x00000000 ;?ICS_ucUSART1RXBuffer+564
0x4FC4	0x00000000 ;?ICS_ucUSART1RXBuffer+568
0x4FC8	0x00000000 ;?ICS_ucUSART1RXBuffer+572
0x4FCC	0x00000000 ;?ICS_ucUSART1RXBuffer+576
0x4FD0	0x00000000 ;?ICS_ucUSART1RXBuffer+580
0x4FD4	0x00000000 ;?ICS_ucUSART1RXBuffer+584
0x4FD8	0x00000000 ;?ICS_ucUSART1RXBuffer+588
0x4FDC	0x00000000 ;?ICS_ucUSART1RXBuffer+592
0x4FE0	0x00000000 ;?ICS_ucUSART1RXBuffer+596
0x4FE4	0x00000000 ;?ICS_ucUSART1RXBuffer+600
0x4FE8	0x00000000 ;?ICS_ucUSART1RXBuffer+604
0x4FEC	0x00000000 ;?ICS_ucUSART1RXBuffer+608
0x4FF0	0x00000000 ;?ICS_ucUSART1RXBuffer+612
0x4FF4	0x00000000 ;?ICS_ucUSART1RXBuffer+616
0x4FF8	0x00000000 ;?ICS_ucUSART1RXBuffer+620
0x4FFC	0x00000000 ;?ICS_ucUSART1RXBuffer+624
0x5000	0x00000000 ;?ICS_ucUSART1RXBuffer+628
0x5004	0x00000000 ;?ICS_ucUSART1RXBuffer+632
0x5008	0x00000000 ;?ICS_ucUSART1RXBuffer+636
0x500C	0x00000000 ;?ICS_ucUSART1RXBuffer+640
0x5010	0x00000000 ;?ICS_ucUSART1RXBuffer+644
0x5014	0x00000000 ;?ICS_ucUSART1RXBuffer+648
0x5018	0x00000000 ;?ICS_ucUSART1RXBuffer+652
0x501C	0x00000000 ;?ICS_ucUSART1RXBuffer+656
0x5020	0x00000000 ;?ICS_ucUSART1RXBuffer+660
0x5024	0x00000000 ;?ICS_ucUSART1RXBuffer+664
0x5028	0x00000000 ;?ICS_ucUSART1RXBuffer+668
0x502C	0x00000000 ;?ICS_ucUSART1RXBuffer+672
0x5030	0x00000000 ;?ICS_ucUSART1RXBuffer+676
0x5034	0x00000000 ;?ICS_ucUSART1RXBuffer+680
0x5038	0x00000000 ;?ICS_ucUSART1RXBuffer+684
0x503C	0x00000000 ;?ICS_ucUSART1RXBuffer+688
0x5040	0x00000000 ;?ICS_ucUSART1RXBuffer+692
0x5044	0x00000000 ;?ICS_ucUSART1RXBuffer+696
0x5048	0x00000000 ;?ICS_ucUSART1RXBuffer+700
0x504C	0x00000000 ;?ICS_ucUSART1RXBuffer+704
0x5050	0x00000000 ;?ICS_ucUSART1RXBuffer+708
0x5054	0x00000000 ;?ICS_ucUSART1RXBuffer+712
0x5058	0x00000000 ;?ICS_ucUSART1RXBuffer+716
0x505C	0x00000000 ;?ICS_ucUSART1RXBuffer+720
0x5060	0x00000000 ;?ICS_ucUSART1RXBuffer+724
0x5064	0x00000000 ;?ICS_ucUSART1RXBuffer+728
0x5068	0x00000000 ;?ICS_ucUSART1RXBuffer+732
0x506C	0x00000000 ;?ICS_ucUSART1RXBuffer+736
0x5070	0x00000000 ;?ICS_ucUSART1RXBuffer+740
0x5074	0x00000000 ;?ICS_ucUSART1RXBuffer+744
0x5078	0x00000000 ;?ICS_ucUSART1RXBuffer+748
0x507C	0x00000000 ;?ICS_ucUSART1RXBuffer+752
0x5080	0x00000000 ;?ICS_ucUSART1RXBuffer+756
0x5084	0x00000000 ;?ICS_ucUSART1RXBuffer+760
0x5088	0x00000000 ;?ICS_ucUSART1RXBuffer+764
0x508C	0x00000000 ;?ICS_ucUSART1RXBuffer+768
0x5090	0x00000000 ;?ICS_ucUSART1RXBuffer+772
0x5094	0x00000000 ;?ICS_ucUSART1RXBuffer+776
0x5098	0x00000000 ;?ICS_ucUSART1RXBuffer+780
0x509C	0x00000000 ;?ICS_ucUSART1RXBuffer+784
0x50A0	0x00000000 ;?ICS_ucUSART1RXBuffer+788
0x50A4	0x00000000 ;?ICS_ucUSART1RXBuffer+792
0x50A8	0x00000000 ;?ICS_ucUSART1RXBuffer+796
0x50AC	0x00000000 ;?ICS_ucUSART1RXBuffer+800
0x50B0	0x00000000 ;?ICS_ucUSART1RXBuffer+804
0x50B4	0x00000000 ;?ICS_ucUSART1RXBuffer+808
0x50B8	0x00000000 ;?ICS_ucUSART1RXBuffer+812
0x50BC	0x00000000 ;?ICS_ucUSART1RXBuffer+816
0x50C0	0x00000000 ;?ICS_ucUSART1RXBuffer+820
0x50C4	0x00000000 ;?ICS_ucUSART1RXBuffer+824
0x50C8	0x00000000 ;?ICS_ucUSART1RXBuffer+828
0x50CC	0x00000000 ;?ICS_ucUSART1RXBuffer+832
0x50D0	0x00000000 ;?ICS_ucUSART1RXBuffer+836
0x50D4	0x00000000 ;?ICS_ucUSART1RXBuffer+840
0x50D8	0x00000000 ;?ICS_ucUSART1RXBuffer+844
0x50DC	0x00000000 ;?ICS_ucUSART1RXBuffer+848
0x50E0	0x00000000 ;?ICS_ucUSART1RXBuffer+852
0x50E4	0x00000000 ;?ICS_ucUSART1RXBuffer+856
0x50E8	0x00000000 ;?ICS_ucUSART1RXBuffer+860
0x50EC	0x00000000 ;?ICS_ucUSART1RXBuffer+864
0x50F0	0x00000000 ;?ICS_ucUSART1RXBuffer+868
0x50F4	0x00000000 ;?ICS_ucUSART1RXBuffer+872
0x50F8	0x00000000 ;?ICS_ucUSART1RXBuffer+876
0x50FC	0x00000000 ;?ICS_ucUSART1RXBuffer+880
0x5100	0x00000000 ;?ICS_ucUSART1RXBuffer+884
0x5104	0x00000000 ;?ICS_ucUSART1RXBuffer+888
0x5108	0x00000000 ;?ICS_ucUSART1RXBuffer+892
0x510C	0x00000000 ;?ICS_ucUSART1RXBuffer+896
0x5110	0x00000000 ;?ICS_ucUSART1RXBuffer+900
0x5114	0x00000000 ;?ICS_ucUSART1RXBuffer+904
0x5118	0x00000000 ;?ICS_ucUSART1RXBuffer+908
0x511C	0x00000000 ;?ICS_ucUSART1RXBuffer+912
0x5120	0x00000000 ;?ICS_ucUSART1RXBuffer+916
0x5124	0x00000000 ;?ICS_ucUSART1RXBuffer+920
0x5128	0x00000000 ;?ICS_ucUSART1RXBuffer+924
0x512C	0x00000000 ;?ICS_ucUSART1RXBuffer+928
0x5130	0x00000000 ;?ICS_ucUSART1RXBuffer+932
0x5134	0x00000000 ;?ICS_ucUSART1RXBuffer+936
0x5138	0x00000000 ;?ICS_ucUSART1RXBuffer+940
0x513C	0x00000000 ;?ICS_ucUSART1RXBuffer+944
0x5140	0x00000000 ;?ICS_ucUSART1RXBuffer+948
0x5144	0x00000000 ;?ICS_ucUSART1RXBuffer+952
0x5148	0x00000000 ;?ICS_ucUSART1RXBuffer+956
0x514C	0x00000000 ;?ICS_ucUSART1RXBuffer+960
0x5150	0x00000000 ;?ICS_ucUSART1RXBuffer+964
0x5154	0x00000000 ;?ICS_ucUSART1RXBuffer+968
0x5158	0x00000000 ;?ICS_ucUSART1RXBuffer+972
0x515C	0x00000000 ;?ICS_ucUSART1RXBuffer+976
0x5160	0x00000000 ;?ICS_ucUSART1RXBuffer+980
0x5164	0x00000000 ;?ICS_ucUSART1RXBuffer+984
0x5168	0x00000000 ;?ICS_ucUSART1RXBuffer+988
0x516C	0x00000000 ;?ICS_ucUSART1RXBuffer+992
0x5170	0x00000000 ;?ICS_ucUSART1RXBuffer+996
0x5174	0x00000000 ;?ICS_ucUSART1RXBuffer+1000
0x5178	0x00000000 ;?ICS_ucUSART1RXBuffer+1004
0x517C	0x00000000 ;?ICS_ucUSART1RXBuffer+1008
0x5180	0x00000000 ;?ICS_ucUSART1RXBuffer+1012
0x5184	0x00000000 ;?ICS_ucUSART1RXBuffer+1016
0x5188	0x00000000 ;?ICS_ucUSART1RXBuffer+1020
0x518C	0x00000000 ;?ICS_ucUSART1RXBuffer+1024
0x5190	0x00000000 ;?ICS_ucUSART1RXBuffer+1028
0x5194	0x00000000 ;?ICS_ucUSART1RXBuffer+1032
0x5198	0x00000000 ;?ICS_ucUSART1RXBuffer+1036
0x519C	0x00000000 ;?ICS_ucUSART1RXBuffer+1040
0x51A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1044
0x51A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1048
0x51A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1052
0x51AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1056
0x51B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1060
0x51B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1064
0x51B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1068
0x51BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1072
0x51C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1076
0x51C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1080
0x51C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1084
0x51CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1088
0x51D0	0x00000000 ;?ICS_ucUSART1RXBuffer+1092
0x51D4	0x00000000 ;?ICS_ucUSART1RXBuffer+1096
0x51D8	0x00000000 ;?ICS_ucUSART1RXBuffer+1100
0x51DC	0x00000000 ;?ICS_ucUSART1RXBuffer+1104
0x51E0	0x00000000 ;?ICS_ucUSART1RXBuffer+1108
0x51E4	0x00000000 ;?ICS_ucUSART1RXBuffer+1112
0x51E8	0x00000000 ;?ICS_ucUSART1RXBuffer+1116
0x51EC	0x00000000 ;?ICS_ucUSART1RXBuffer+1120
0x51F0	0x00000000 ;?ICS_ucUSART1RXBuffer+1124
0x51F4	0x00000000 ;?ICS_ucUSART1RXBuffer+1128
0x51F8	0x00000000 ;?ICS_ucUSART1RXBuffer+1132
0x51FC	0x00000000 ;?ICS_ucUSART1RXBuffer+1136
0x5200	0x00000000 ;?ICS_ucUSART1RXBuffer+1140
0x5204	0x00000000 ;?ICS_ucUSART1RXBuffer+1144
0x5208	0x00000000 ;?ICS_ucUSART1RXBuffer+1148
0x520C	0x00000000 ;?ICS_ucUSART1RXBuffer+1152
0x5210	0x00000000 ;?ICS_ucUSART1RXBuffer+1156
0x5214	0x00000000 ;?ICS_ucUSART1RXBuffer+1160
0x5218	0x00000000 ;?ICS_ucUSART1RXBuffer+1164
0x521C	0x00000000 ;?ICS_ucUSART1RXBuffer+1168
0x5220	0x00000000 ;?ICS_ucUSART1RXBuffer+1172
0x5224	0x00000000 ;?ICS_ucUSART1RXBuffer+1176
0x5228	0x00000000 ;?ICS_ucUSART1RXBuffer+1180
0x522C	0x00000000 ;?ICS_ucUSART1RXBuffer+1184
0x5230	0x00000000 ;?ICS_ucUSART1RXBuffer+1188
0x5234	0x00000000 ;?ICS_ucUSART1RXBuffer+1192
0x5238	0x00000000 ;?ICS_ucUSART1RXBuffer+1196
0x523C	0x00000000 ;?ICS_ucUSART1RXBuffer+1200
0x5240	0x00000000 ;?ICS_ucUSART1RXBuffer+1204
0x5244	0x00000000 ;?ICS_ucUSART1RXBuffer+1208
0x5248	0x00000000 ;?ICS_ucUSART1RXBuffer+1212
0x524C	0x00000000 ;?ICS_ucUSART1RXBuffer+1216
0x5250	0x00000000 ;?ICS_ucUSART1RXBuffer+1220
0x5254	0x00000000 ;?ICS_ucUSART1RXBuffer+1224
0x5258	0x00000000 ;?ICS_ucUSART1RXBuffer+1228
0x525C	0x00000000 ;?ICS_ucUSART1RXBuffer+1232
0x5260	0x00000000 ;?ICS_ucUSART1RXBuffer+1236
0x5264	0x00000000 ;?ICS_ucUSART1RXBuffer+1240
0x5268	0x00000000 ;?ICS_ucUSART1RXBuffer+1244
0x526C	0x00000000 ;?ICS_ucUSART1RXBuffer+1248
0x5270	0x00000000 ;?ICS_ucUSART1RXBuffer+1252
0x5274	0x00000000 ;?ICS_ucUSART1RXBuffer+1256
0x5278	0x00000000 ;?ICS_ucUSART1RXBuffer+1260
0x527C	0x00000000 ;?ICS_ucUSART1RXBuffer+1264
0x5280	0x00000000 ;?ICS_ucUSART1RXBuffer+1268
0x5284	0x00000000 ;?ICS_ucUSART1RXBuffer+1272
0x5288	0x00000000 ;?ICS_ucUSART1RXBuffer+1276
0x528C	0x00000000 ;?ICS_ucUSART1RXBuffer+1280
0x5290	0x00000000 ;?ICS_ucUSART1RXBuffer+1284
0x5294	0x00000000 ;?ICS_ucUSART1RXBuffer+1288
0x5298	0x00000000 ;?ICS_ucUSART1RXBuffer+1292
0x529C	0x00000000 ;?ICS_ucUSART1RXBuffer+1296
0x52A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1300
0x52A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1304
0x52A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1308
0x52AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1312
0x52B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1316
0x52B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1320
0x52B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1324
0x52BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1328
0x52C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1332
0x52C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1336
0x52C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1340
0x52CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1344
0x52D0	0x00000000 ;?ICS_ucUSART1RXBuffer+1348
0x52D4	0x00000000 ;?ICS_ucUSART1RXBuffer+1352
0x52D8	0x00000000 ;?ICS_ucUSART1RXBuffer+1356
0x52DC	0x00000000 ;?ICS_ucUSART1RXBuffer+1360
0x52E0	0x00000000 ;?ICS_ucUSART1RXBuffer+1364
0x52E4	0x00000000 ;?ICS_ucUSART1RXBuffer+1368
0x52E8	0x00000000 ;?ICS_ucUSART1RXBuffer+1372
0x52EC	0x00000000 ;?ICS_ucUSART1RXBuffer+1376
0x52F0	0x00000000 ;?ICS_ucUSART1RXBuffer+1380
0x52F4	0x00000000 ;?ICS_ucUSART1RXBuffer+1384
0x52F8	0x00000000 ;?ICS_ucUSART1RXBuffer+1388
0x52FC	0x00000000 ;?ICS_ucUSART1RXBuffer+1392
0x5300	0x00000000 ;?ICS_ucUSART1RXBuffer+1396
0x5304	0x00000000 ;?ICS_ucUSART1RXBuffer+1400
0x5308	0x00000000 ;?ICS_ucUSART1RXBuffer+1404
0x530C	0x00000000 ;?ICS_ucUSART1RXBuffer+1408
0x5310	0x00000000 ;?ICS_ucUSART1RXBuffer+1412
0x5314	0x00000000 ;?ICS_ucUSART1RXBuffer+1416
0x5318	0x00000000 ;?ICS_ucUSART1RXBuffer+1420
0x531C	0x00000000 ;?ICS_ucUSART1RXBuffer+1424
0x5320	0x00000000 ;?ICS_ucUSART1RXBuffer+1428
0x5324	0x00000000 ;?ICS_ucUSART1RXBuffer+1432
0x5328	0x00000000 ;?ICS_ucUSART1RXBuffer+1436
0x532C	0x00000000 ;?ICS_ucUSART1RXBuffer+1440
0x5330	0x00000000 ;?ICS_ucUSART1RXBuffer+1444
0x5334	0x00000000 ;?ICS_ucUSART1RXBuffer+1448
0x5338	0x00000000 ;?ICS_ucUSART1RXBuffer+1452
0x533C	0x00000000 ;?ICS_ucUSART1RXBuffer+1456
0x5340	0x00000000 ;?ICS_ucUSART1RXBuffer+1460
0x5344	0x00000000 ;?ICS_ucUSART1RXBuffer+1464
0x5348	0x00000000 ;?ICS_ucUSART1RXBuffer+1468
0x534C	0x00000000 ;?ICS_ucUSART1RXBuffer+1472
0x5350	0x00000000 ;?ICS_ucUSART1RXBuffer+1476
0x5354	0x00000000 ;?ICS_ucUSART1RXBuffer+1480
0x5358	0x00000000 ;?ICS_ucUSART1RXBuffer+1484
0x535C	0x00000000 ;?ICS_ucUSART1RXBuffer+1488
0x5360	0x00000000 ;?ICS_ucUSART1RXBuffer+1492
0x5364	0x00000000 ;?ICS_ucUSART1RXBuffer+1496
0x5368	0x00000000 ;?ICS_ucUSART1RXBuffer+1500
0x536C	0x00000000 ;?ICS_ucUSART1RXBuffer+1504
0x5370	0x00000000 ;?ICS_ucUSART1RXBuffer+1508
0x5374	0x00000000 ;?ICS_ucUSART1RXBuffer+1512
0x5378	0x00000000 ;?ICS_ucUSART1RXBuffer+1516
0x537C	0x00000000 ;?ICS_ucUSART1RXBuffer+1520
0x5380	0x00000000 ;?ICS_ucUSART1RXBuffer+1524
0x5384	0x00000000 ;?ICS_ucUSART1RXBuffer+1528
0x5388	0x00000000 ;?ICS_ucUSART1RXBuffer+1532
0x538C	0x00000000 ;?ICS_ucUSART1RXBuffer+1536
0x5390	0x00000000 ;?ICS_ucUSART1RXBuffer+1540
0x5394	0x00000000 ;?ICS_ucUSART1RXBuffer+1544
0x5398	0x00000000 ;?ICS_ucUSART1RXBuffer+1548
0x539C	0x00000000 ;?ICS_ucUSART1RXBuffer+1552
0x53A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1556
0x53A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1560
0x53A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1564
0x53AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1568
0x53B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1572
0x53B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1576
0x53B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1580
0x53BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1584
0x53C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1588
0x53C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1592
0x53C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1596
0x53CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1600
0x53D0	0x00000000 ;?ICS_ucUSART1RXBuffer+1604
0x53D4	0x00000000 ;?ICS_ucUSART1RXBuffer+1608
0x53D8	0x00000000 ;?ICS_ucUSART1RXBuffer+1612
0x53DC	0x00000000 ;?ICS_ucUSART1RXBuffer+1616
0x53E0	0x00000000 ;?ICS_ucUSART1RXBuffer+1620
0x53E4	0x00000000 ;?ICS_ucUSART1RXBuffer+1624
0x53E8	0x00000000 ;?ICS_ucUSART1RXBuffer+1628
0x53EC	0x00000000 ;?ICS_ucUSART1RXBuffer+1632
0x53F0	0x00000000 ;?ICS_ucUSART1RXBuffer+1636
0x53F4	0x00000000 ;?ICS_ucUSART1RXBuffer+1640
0x53F8	0x00000000 ;?ICS_ucUSART1RXBuffer+1644
0x53FC	0x00000000 ;?ICS_ucUSART1RXBuffer+1648
0x5400	0x00000000 ;?ICS_ucUSART1RXBuffer+1652
0x5404	0x00000000 ;?ICS_ucUSART1RXBuffer+1656
0x5408	0x00000000 ;?ICS_ucUSART1RXBuffer+1660
0x540C	0x00000000 ;?ICS_ucUSART1RXBuffer+1664
0x5410	0x00000000 ;?ICS_ucUSART1RXBuffer+1668
0x5414	0x00000000 ;?ICS_ucUSART1RXBuffer+1672
0x5418	0x00000000 ;?ICS_ucUSART1RXBuffer+1676
0x541C	0x00000000 ;?ICS_ucUSART1RXBuffer+1680
0x5420	0x00000000 ;?ICS_ucUSART1RXBuffer+1684
0x5424	0x00000000 ;?ICS_ucUSART1RXBuffer+1688
0x5428	0x00000000 ;?ICS_ucUSART1RXBuffer+1692
0x542C	0x00000000 ;?ICS_ucUSART1RXBuffer+1696
0x5430	0x00000000 ;?ICS_ucUSART1RXBuffer+1700
0x5434	0x00000000 ;?ICS_ucUSART1RXBuffer+1704
0x5438	0x00000000 ;?ICS_ucUSART1RXBuffer+1708
0x543C	0x00000000 ;?ICS_ucUSART1RXBuffer+1712
0x5440	0x00000000 ;?ICS_ucUSART1RXBuffer+1716
0x5444	0x00000000 ;?ICS_ucUSART1RXBuffer+1720
0x5448	0x00000000 ;?ICS_ucUSART1RXBuffer+1724
0x544C	0x00000000 ;?ICS_ucUSART1RXBuffer+1728
0x5450	0x00000000 ;?ICS_ucUSART1RXBuffer+1732
0x5454	0x00000000 ;?ICS_ucUSART1RXBuffer+1736
0x5458	0x00000000 ;?ICS_ucUSART1RXBuffer+1740
0x545C	0x00000000 ;?ICS_ucUSART1RXBuffer+1744
0x5460	0x00000000 ;?ICS_ucUSART1RXBuffer+1748
0x5464	0x00000000 ;?ICS_ucUSART1RXBuffer+1752
0x5468	0x00000000 ;?ICS_ucUSART1RXBuffer+1756
0x546C	0x00000000 ;?ICS_ucUSART1RXBuffer+1760
0x5470	0x00000000 ;?ICS_ucUSART1RXBuffer+1764
0x5474	0x00000000 ;?ICS_ucUSART1RXBuffer+1768
0x5478	0x00000000 ;?ICS_ucUSART1RXBuffer+1772
0x547C	0x00000000 ;?ICS_ucUSART1RXBuffer+1776
0x5480	0x00000000 ;?ICS_ucUSART1RXBuffer+1780
0x5484	0x00000000 ;?ICS_ucUSART1RXBuffer+1784
0x5488	0x00000000 ;?ICS_ucUSART1RXBuffer+1788
0x548C	0x00000000 ;?ICS_ucUSART1RXBuffer+1792
0x5490	0x00000000 ;?ICS_ucUSART1RXBuffer+1796
0x5494	0x00000000 ;?ICS_ucUSART1RXBuffer+1800
0x5498	0x00000000 ;?ICS_ucUSART1RXBuffer+1804
0x549C	0x00000000 ;?ICS_ucUSART1RXBuffer+1808
0x54A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1812
0x54A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1816
0x54A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1820
0x54AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1824
0x54B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1828
0x54B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1832
0x54B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1836
0x54BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1840
0x54C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1844
0x54C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1848
0x54C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1852
0x54CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1856
0x54D0	0x00000000 ;?ICS_ucUSART1RXBuffer+1860
0x54D4	0x00000000 ;?ICS_ucUSART1RXBuffer+1864
0x54D8	0x00000000 ;?ICS_ucUSART1RXBuffer+1868
0x54DC	0x00000000 ;?ICS_ucUSART1RXBuffer+1872
0x54E0	0x00000000 ;?ICS_ucUSART1RXBuffer+1876
0x54E4	0x00000000 ;?ICS_ucUSART1RXBuffer+1880
0x54E8	0x00000000 ;?ICS_ucUSART1RXBuffer+1884
0x54EC	0x00000000 ;?ICS_ucUSART1RXBuffer+1888
0x54F0	0x00000000 ;?ICS_ucUSART1RXBuffer+1892
0x54F4	0x00000000 ;?ICS_ucUSART1RXBuffer+1896
0x54F8	0x00000000 ;?ICS_ucUSART1RXBuffer+1900
0x54FC	0x00000000 ;?ICS_ucUSART1RXBuffer+1904
0x5500	0x00000000 ;?ICS_ucUSART1RXBuffer+1908
0x5504	0x00000000 ;?ICS_ucUSART1RXBuffer+1912
0x5508	0x00000000 ;?ICS_ucUSART1RXBuffer+1916
0x550C	0x00000000 ;?ICS_ucUSART1RXBuffer+1920
0x5510	0x00000000 ;?ICS_ucUSART1RXBuffer+1924
0x5514	0x00000000 ;?ICS_ucUSART1RXBuffer+1928
0x5518	0x00000000 ;?ICS_ucUSART1RXBuffer+1932
0x551C	0x00000000 ;?ICS_ucUSART1RXBuffer+1936
0x5520	0x00000000 ;?ICS_ucUSART1RXBuffer+1940
0x5524	0x00000000 ;?ICS_ucUSART1RXBuffer+1944
0x5528	0x00000000 ;?ICS_ucUSART1RXBuffer+1948
0x552C	0x00000000 ;?ICS_ucUSART1RXBuffer+1952
0x5530	0x00000000 ;?ICS_ucUSART1RXBuffer+1956
0x5534	0x00000000 ;?ICS_ucUSART1RXBuffer+1960
0x5538	0x00000000 ;?ICS_ucUSART1RXBuffer+1964
0x553C	0x00000000 ;?ICS_ucUSART1RXBuffer+1968
0x5540	0x00000000 ;?ICS_ucUSART1RXBuffer+1972
0x5544	0x00000000 ;?ICS_ucUSART1RXBuffer+1976
0x5548	0x00000000 ;?ICS_ucUSART1RXBuffer+1980
0x554C	0x00000000 ;?ICS_ucUSART1RXBuffer+1984
0x5550	0x00000000 ;?ICS_ucUSART1RXBuffer+1988
0x5554	0x00000000 ;?ICS_ucUSART1RXBuffer+1992
0x5558	0x00000000 ;?ICS_ucUSART1RXBuffer+1996
0x555C	0x00000000 ;?ICS_ucUSART1RXBuffer+2000
0x5560	0x00000000 ;?ICS_ucUSART1RXBuffer+2004
0x5564	0x00000000 ;?ICS_ucUSART1RXBuffer+2008
0x5568	0x00000000 ;?ICS_ucUSART1RXBuffer+2012
0x556C	0x00000000 ;?ICS_ucUSART1RXBuffer+2016
0x5570	0x00000000 ;?ICS_ucUSART1RXBuffer+2020
0x5574	0x00000000 ;?ICS_ucUSART1RXBuffer+2024
0x5578	0x00000000 ;?ICS_ucUSART1RXBuffer+2028
0x557C	0x00000000 ;?ICS_ucUSART1RXBuffer+2032
0x5580	0x00000000 ;?ICS_ucUSART1RXBuffer+2036
0x5584	0x00000000 ;?ICS_ucUSART1RXBuffer+2040
0x5588	0x00000000 ;?ICS_ucUSART1RXBuffer+2044
0x558C	0x00000000 ;?ICS_ucUSART1RXBuffer+2048
0x5590	0x00000000 ;?ICS_ucUSART1RXBuffer+2052
0x5594	0x00000000 ;?ICS_ucUSART1RXBuffer+2056
0x5598	0x00000000 ;?ICS_ucUSART1RXBuffer+2060
0x559C	0x00000000 ;?ICS_ucUSART1RXBuffer+2064
0x55A0	0x00000000 ;?ICS_ucUSART1RXBuffer+2068
0x55A4	0x00000000 ;?ICS_ucUSART1RXBuffer+2072
0x55A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2076
0x55AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2080
0x55B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2084
0x55B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2088
0x55B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2092
0x55BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2096
0x55C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2100
0x55C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2104
0x55C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2108
0x55CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2112
0x55D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2116
0x55D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2120
0x55D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2124
0x55DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2128
0x55E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2132
0x55E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2136
0x55E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2140
0x55EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2144
0x55F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2148
0x55F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2152
0x55F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2156
0x55FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2160
0x5600	0x00000000 ;?ICS_ucUSART1RXBuffer+2164
0x5604	0x00000000 ;?ICS_ucUSART1RXBuffer+2168
0x5608	0x00000000 ;?ICS_ucUSART1RXBuffer+2172
0x560C	0x00000000 ;?ICS_ucUSART1RXBuffer+2176
0x5610	0x00000000 ;?ICS_ucUSART1RXBuffer+2180
0x5614	0x00000000 ;?ICS_ucUSART1RXBuffer+2184
0x5618	0x00000000 ;?ICS_ucUSART1RXBuffer+2188
0x561C	0x00000000 ;?ICS_ucUSART1RXBuffer+2192
0x5620	0x00000000 ;?ICS_ucUSART1RXBuffer+2196
0x5624	0x00000000 ;?ICS_ucUSART1RXBuffer+2200
0x5628	0x00000000 ;?ICS_ucUSART1RXBuffer+2204
0x562C	0x00000000 ;?ICS_ucUSART1RXBuffer+2208
0x5630	0x00000000 ;?ICS_ucUSART1RXBuffer+2212
0x5634	0x00000000 ;?ICS_ucUSART1RXBuffer+2216
0x5638	0x00000000 ;?ICS_ucUSART1RXBuffer+2220
0x563C	0x00000000 ;?ICS_ucUSART1RXBuffer+2224
0x5640	0x00000000 ;?ICS_ucUSART1RXBuffer+2228
0x5644	0x00000000 ;?ICS_ucUSART1RXBuffer+2232
0x5648	0x00000000 ;?ICS_ucUSART1RXBuffer+2236
0x564C	0x00000000 ;?ICS_ucUSART1RXBuffer+2240
0x5650	0x00000000 ;?ICS_ucUSART1RXBuffer+2244
0x5654	0x00000000 ;?ICS_ucUSART1RXBuffer+2248
0x5658	0x00000000 ;?ICS_ucUSART1RXBuffer+2252
0x565C	0x00000000 ;?ICS_ucUSART1RXBuffer+2256
0x5660	0x00000000 ;?ICS_ucUSART1RXBuffer+2260
0x5664	0x00000000 ;?ICS_ucUSART1RXBuffer+2264
0x5668	0x00000000 ;?ICS_ucUSART1RXBuffer+2268
0x566C	0x00000000 ;?ICS_ucUSART1RXBuffer+2272
0x5670	0x00000000 ;?ICS_ucUSART1RXBuffer+2276
0x5674	0x00000000 ;?ICS_ucUSART1RXBuffer+2280
0x5678	0x00000000 ;?ICS_ucUSART1RXBuffer+2284
0x567C	0x00000000 ;?ICS_ucUSART1RXBuffer+2288
0x5680	0x00000000 ;?ICS_ucUSART1RXBuffer+2292
0x5684	0x00000000 ;?ICS_ucUSART1RXBuffer+2296
0x5688	0x00000000 ;?ICS_ucUSART1RXBuffer+2300
0x568C	0x00000000 ;?ICS_ucUSART1RXBuffer+2304
0x5690	0x00000000 ;?ICS_ucUSART1RXBuffer+2308
0x5694	0x00000000 ;?ICS_ucUSART1RXBuffer+2312
0x5698	0x00000000 ;?ICS_ucUSART1RXBuffer+2316
0x569C	0x00000000 ;?ICS_ucUSART1RXBuffer+2320
0x56A0	0x00000000 ;?ICS_ucUSART1RXBuffer+2324
0x56A4	0x00000000 ;?ICS_ucUSART1RXBuffer+2328
0x56A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2332
0x56AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2336
0x56B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2340
0x56B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2344
0x56B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2348
0x56BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2352
0x56C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2356
0x56C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2360
0x56C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2364
0x56CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2368
0x56D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2372
0x56D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2376
0x56D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2380
0x56DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2384
0x56E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2388
0x56E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2392
0x56E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2396
0x56EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2400
0x56F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2404
0x56F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2408
0x56F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2412
0x56FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2416
0x5700	0x00000000 ;?ICS_ucUSART1RXBuffer+2420
0x5704	0x00000000 ;?ICS_ucUSART1RXBuffer+2424
0x5708	0x00000000 ;?ICS_ucUSART1RXBuffer+2428
0x570C	0x00000000 ;?ICS_ucUSART1RXBuffer+2432
0x5710	0x00000000 ;?ICS_ucUSART1RXBuffer+2436
0x5714	0x00000000 ;?ICS_ucUSART1RXBuffer+2440
0x5718	0x00000000 ;?ICS_ucUSART1RXBuffer+2444
0x571C	0x00000000 ;?ICS_ucUSART1RXBuffer+2448
0x5720	0x00000000 ;?ICS_ucUSART1RXBuffer+2452
0x5724	0x00000000 ;?ICS_ucUSART1RXBuffer+2456
0x5728	0x00000000 ;?ICS_ucUSART1RXBuffer+2460
0x572C	0x00000000 ;?ICS_ucUSART1RXBuffer+2464
0x5730	0x00000000 ;?ICS_ucUSART1RXBuffer+2468
0x5734	0x00000000 ;?ICS_ucUSART1RXBuffer+2472
0x5738	0x00000000 ;?ICS_ucUSART1RXBuffer+2476
0x573C	0x00000000 ;?ICS_ucUSART1RXBuffer+2480
0x5740	0x00000000 ;?ICS_ucUSART1RXBuffer+2484
0x5744	0x00000000 ;?ICS_ucUSART1RXBuffer+2488
0x5748	0x00000000 ;?ICS_ucUSART1RXBuffer+2492
0x574C	0x00000000 ;?ICS_ucUSART1RXBuffer+2496
0x5750	0x00000000 ;?ICS_ucUSART1RXBuffer+2500
0x5754	0x00000000 ;?ICS_ucUSART1RXBuffer+2504
0x5758	0x00000000 ;?ICS_ucUSART1RXBuffer+2508
0x575C	0x00000000 ;?ICS_ucUSART1RXBuffer+2512
0x5760	0x00000000 ;?ICS_ucUSART1RXBuffer+2516
0x5764	0x00000000 ;?ICS_ucUSART1RXBuffer+2520
0x5768	0x00000000 ;?ICS_ucUSART1RXBuffer+2524
0x576C	0x00000000 ;?ICS_ucUSART1RXBuffer+2528
0x5770	0x00000000 ;?ICS_ucUSART1RXBuffer+2532
0x5774	0x00000000 ;?ICS_ucUSART1RXBuffer+2536
0x5778	0x00000000 ;?ICS_ucUSART1RXBuffer+2540
0x577C	0x00000000 ;?ICS_ucUSART1RXBuffer+2544
0x5780	0x00000000 ;?ICS_ucUSART1RXBuffer+2548
0x5784	0x00000000 ;?ICS_ucUSART1RXBuffer+2552
0x5788	0x00000000 ;?ICS_ucUSART1RXBuffer+2556
0x578C	0x00000000 ;?ICS_ucUSART1RXBuffer+2560
0x5790	0x00000000 ;?ICS_ucUSART1RXBuffer+2564
0x5794	0x00000000 ;?ICS_ucUSART1RXBuffer+2568
0x5798	0x00000000 ;?ICS_ucUSART1RXBuffer+2572
0x579C	0x00000000 ;?ICS_ucUSART1RXBuffer+2576
0x57A0	0x00000000 ;?ICS_ucUSART1RXBuffer+2580
0x57A4	0x00000000 ;?ICS_ucUSART1RXBuffer+2584
0x57A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2588
0x57AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2592
0x57B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2596
0x57B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2600
0x57B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2604
0x57BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2608
0x57C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2612
0x57C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2616
0x57C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2620
0x57CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2624
0x57D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2628
0x57D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2632
0x57D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2636
0x57DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2640
0x57E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2644
0x57E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2648
0x57E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2652
0x57EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2656
0x57F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2660
0x57F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2664
0x57F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2668
0x57FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2672
0x5800	0x00000000 ;?ICS_ucUSART1RXBuffer+2676
0x5804	0x00000000 ;?ICS_ucUSART1RXBuffer+2680
0x5808	0x00000000 ;?ICS_ucUSART1RXBuffer+2684
0x580C	0x00000000 ;?ICS_ucUSART1RXBuffer+2688
0x5810	0x00000000 ;?ICS_ucUSART1RXBuffer+2692
0x5814	0x00000000 ;?ICS_ucUSART1RXBuffer+2696
0x5818	0x00000000 ;?ICS_ucUSART1RXBuffer+2700
0x581C	0x00000000 ;?ICS_ucUSART1RXBuffer+2704
0x5820	0x00000000 ;?ICS_ucUSART1RXBuffer+2708
0x5824	0x00000000 ;?ICS_ucUSART1RXBuffer+2712
0x5828	0x00000000 ;?ICS_ucUSART1RXBuffer+2716
0x582C	0x00000000 ;?ICS_ucUSART1RXBuffer+2720
0x5830	0x00000000 ;?ICS_ucUSART1RXBuffer+2724
0x5834	0x00000000 ;?ICS_ucUSART1RXBuffer+2728
0x5838	0x00000000 ;?ICS_ucUSART1RXBuffer+2732
0x583C	0x00000000 ;?ICS_ucUSART1RXBuffer+2736
0x5840	0x00000000 ;?ICS_ucUSART1RXBuffer+2740
0x5844	0x00000000 ;?ICS_ucUSART1RXBuffer+2744
0x5848	0x00000000 ;?ICS_ucUSART1RXBuffer+2748
0x584C	0x00000000 ;?ICS_ucUSART1RXBuffer+2752
0x5850	0x00000000 ;?ICS_ucUSART1RXBuffer+2756
0x5854	0x00000000 ;?ICS_ucUSART1RXBuffer+2760
0x5858	0x00000000 ;?ICS_ucUSART1RXBuffer+2764
0x585C	0x00000000 ;?ICS_ucUSART1RXBuffer+2768
0x5860	0x00000000 ;?ICS_ucUSART1RXBuffer+2772
0x5864	0x00000000 ;?ICS_ucUSART1RXBuffer+2776
0x5868	0x00000000 ;?ICS_ucUSART1RXBuffer+2780
0x586C	0x00000000 ;?ICS_ucUSART1RXBuffer+2784
0x5870	0x00000000 ;?ICS_ucUSART1RXBuffer+2788
0x5874	0x00000000 ;?ICS_ucUSART1RXBuffer+2792
0x5878	0x00000000 ;?ICS_ucUSART1RXBuffer+2796
0x587C	0x00000000 ;?ICS_ucUSART1RXBuffer+2800
0x5880	0x00000000 ;?ICS_ucUSART1RXBuffer+2804
0x5884	0x00000000 ;?ICS_ucUSART1RXBuffer+2808
0x5888	0x00000000 ;?ICS_ucUSART1RXBuffer+2812
0x588C	0x00000000 ;?ICS_ucUSART1RXBuffer+2816
0x5890	0x00000000 ;?ICS_ucUSART1RXBuffer+2820
0x5894	0x00000000 ;?ICS_ucUSART1RXBuffer+2824
0x5898	0x00000000 ;?ICS_ucUSART1RXBuffer+2828
0x589C	0x00000000 ;?ICS_ucUSART1RXBuffer+2832
0x58A0	0x00000000 ;?ICS_ucUSART1RXBuffer+2836
0x58A4	0x00000000 ;?ICS_ucUSART1RXBuffer+2840
0x58A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2844
0x58AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2848
0x58B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2852
0x58B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2856
0x58B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2860
0x58BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2864
0x58C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2868
0x58C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2872
0x58C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2876
0x58CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2880
0x58D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2884
0x58D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2888
0x58D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2892
0x58DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2896
0x58E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2900
0x58E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2904
0x58E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2908
0x58EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2912
0x58F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2916
0x58F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2920
0x58F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2924
0x58FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2928
0x5900	0x00000000 ;?ICS_ucUSART1RXBuffer+2932
0x5904	0x00000000 ;?ICS_ucUSART1RXBuffer+2936
0x5908	0x00000000 ;?ICS_ucUSART1RXBuffer+2940
0x590C	0x00000000 ;?ICS_ucUSART1RXBuffer+2944
0x5910	0x00000000 ;?ICS_ucUSART1RXBuffer+2948
0x5914	0x00000000 ;?ICS_ucUSART1RXBuffer+2952
0x5918	0x00000000 ;?ICS_ucUSART1RXBuffer+2956
0x591C	0x00000000 ;?ICS_ucUSART1RXBuffer+2960
0x5920	0x00000000 ;?ICS_ucUSART1RXBuffer+2964
0x5924	0x00000000 ;?ICS_ucUSART1RXBuffer+2968
0x5928	0x00000000 ;?ICS_ucUSART1RXBuffer+2972
0x592C	0x00000000 ;?ICS_ucUSART1RXBuffer+2976
0x5930	0x00000000 ;?ICS_ucUSART1RXBuffer+2980
0x5934	0x00000000 ;?ICS_ucUSART1RXBuffer+2984
0x5938	0x00000000 ;?ICS_ucUSART1RXBuffer+2988
0x593C	0x00000000 ;?ICS_ucUSART1RXBuffer+2992
0x5940	0x00000000 ;?ICS_ucUSART1RXBuffer+2996
0x5944	0x00000000 ;?ICS_ucUSART1RXBuffer+3000
0x5948	0x00000000 ;?ICS_ucUSART1RXBuffer+3004
0x594C	0x00000000 ;?ICS_ucUSART1RXBuffer+3008
0x5950	0x00000000 ;?ICS_ucUSART1RXBuffer+3012
0x5954	0x00000000 ;?ICS_ucUSART1RXBuffer+3016
0x5958	0x00000000 ;?ICS_ucUSART1RXBuffer+3020
0x595C	0x00000000 ;?ICS_ucUSART1RXBuffer+3024
0x5960	0x00000000 ;?ICS_ucUSART1RXBuffer+3028
0x5964	0x00000000 ;?ICS_ucUSART1RXBuffer+3032
0x5968	0x00000000 ;?ICS_ucUSART1RXBuffer+3036
0x596C	0x00000000 ;?ICS_ucUSART1RXBuffer+3040
0x5970	0x00000000 ;?ICS_ucUSART1RXBuffer+3044
0x5974	0x00000000 ;?ICS_ucUSART1RXBuffer+3048
0x5978	0x00000000 ;?ICS_ucUSART1RXBuffer+3052
0x597C	0x00000000 ;?ICS_ucUSART1RXBuffer+3056
0x5980	0x00000000 ;?ICS_ucUSART1RXBuffer+3060
0x5984	0x00000000 ;?ICS_ucUSART1RXBuffer+3064
0x5988	0x00000000 ;?ICS_ucUSART1RXBuffer+3068
0x598C	0x00000000 ;?ICS_ucUSART1RXBuffer+3072
0x5990	0x00000000 ;?ICS_ucUSART1RXBuffer+3076
0x5994	0x00000000 ;?ICS_ucUSART1RXBuffer+3080
0x5998	0x00000000 ;?ICS_ucUSART1RXBuffer+3084
0x599C	0x00000000 ;?ICS_ucUSART1RXBuffer+3088
0x59A0	0x00000000 ;?ICS_ucUSART1RXBuffer+3092
0x59A4	0x00000000 ;?ICS_ucUSART1RXBuffer+3096
0x59A8	0x00000000 ;?ICS_ucUSART1RXBuffer+3100
0x59AC	0x00000000 ;?ICS_ucUSART1RXBuffer+3104
0x59B0	0x00000000 ;?ICS_ucUSART1RXBuffer+3108
0x59B4	0x00000000 ;?ICS_ucUSART1RXBuffer+3112
0x59B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3116
0x59BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3120
0x59C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3124
0x59C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3128
0x59C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3132
0x59CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3136
0x59D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3140
0x59D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3144
0x59D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3148
0x59DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3152
0x59E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3156
0x59E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3160
0x59E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3164
0x59EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3168
0x59F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3172
0x59F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3176
0x59F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3180
0x59FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3184
0x5A00	0x00000000 ;?ICS_ucUSART1RXBuffer+3188
0x5A04	0x00000000 ;?ICS_ucUSART1RXBuffer+3192
0x5A08	0x00000000 ;?ICS_ucUSART1RXBuffer+3196
0x5A0C	0x00000000 ;?ICS_ucUSART1RXBuffer+3200
0x5A10	0x00000000 ;?ICS_ucUSART1RXBuffer+3204
0x5A14	0x00000000 ;?ICS_ucUSART1RXBuffer+3208
0x5A18	0x00000000 ;?ICS_ucUSART1RXBuffer+3212
0x5A1C	0x00000000 ;?ICS_ucUSART1RXBuffer+3216
0x5A20	0x00000000 ;?ICS_ucUSART1RXBuffer+3220
0x5A24	0x00000000 ;?ICS_ucUSART1RXBuffer+3224
0x5A28	0x00000000 ;?ICS_ucUSART1RXBuffer+3228
0x5A2C	0x00000000 ;?ICS_ucUSART1RXBuffer+3232
0x5A30	0x00000000 ;?ICS_ucUSART1RXBuffer+3236
0x5A34	0x00000000 ;?ICS_ucUSART1RXBuffer+3240
0x5A38	0x00000000 ;?ICS_ucUSART1RXBuffer+3244
0x5A3C	0x00000000 ;?ICS_ucUSART1RXBuffer+3248
0x5A40	0x00000000 ;?ICS_ucUSART1RXBuffer+3252
0x5A44	0x00000000 ;?ICS_ucUSART1RXBuffer+3256
0x5A48	0x00000000 ;?ICS_ucUSART1RXBuffer+3260
0x5A4C	0x00000000 ;?ICS_ucUSART1RXBuffer+3264
0x5A50	0x00000000 ;?ICS_ucUSART1RXBuffer+3268
0x5A54	0x00000000 ;?ICS_ucUSART1RXBuffer+3272
0x5A58	0x00000000 ;?ICS_ucUSART1RXBuffer+3276
0x5A5C	0x00000000 ;?ICS_ucUSART1RXBuffer+3280
0x5A60	0x00000000 ;?ICS_ucUSART1RXBuffer+3284
0x5A64	0x00000000 ;?ICS_ucUSART1RXBuffer+3288
0x5A68	0x00000000 ;?ICS_ucUSART1RXBuffer+3292
0x5A6C	0x00000000 ;?ICS_ucUSART1RXBuffer+3296
0x5A70	0x00000000 ;?ICS_ucUSART1RXBuffer+3300
0x5A74	0x00000000 ;?ICS_ucUSART1RXBuffer+3304
0x5A78	0x00000000 ;?ICS_ucUSART1RXBuffer+3308
0x5A7C	0x00000000 ;?ICS_ucUSART1RXBuffer+3312
0x5A80	0x00000000 ;?ICS_ucUSART1RXBuffer+3316
0x5A84	0x00000000 ;?ICS_ucUSART1RXBuffer+3320
0x5A88	0x00000000 ;?ICS_ucUSART1RXBuffer+3324
0x5A8C	0x00000000 ;?ICS_ucUSART1RXBuffer+3328
0x5A90	0x00000000 ;?ICS_ucUSART1RXBuffer+3332
0x5A94	0x00000000 ;?ICS_ucUSART1RXBuffer+3336
0x5A98	0x00000000 ;?ICS_ucUSART1RXBuffer+3340
0x5A9C	0x00000000 ;?ICS_ucUSART1RXBuffer+3344
0x5AA0	0x00000000 ;?ICS_ucUSART1RXBuffer+3348
0x5AA4	0x00000000 ;?ICS_ucUSART1RXBuffer+3352
0x5AA8	0x00000000 ;?ICS_ucUSART1RXBuffer+3356
0x5AAC	0x00000000 ;?ICS_ucUSART1RXBuffer+3360
0x5AB0	0x00000000 ;?ICS_ucUSART1RXBuffer+3364
0x5AB4	0x00000000 ;?ICS_ucUSART1RXBuffer+3368
0x5AB8	0x00000000 ;?ICS_ucUSART1RXBuffer+3372
0x5ABC	0x00000000 ;?ICS_ucUSART1RXBuffer+3376
0x5AC0	0x00000000 ;?ICS_ucUSART1RXBuffer+3380
0x5AC4	0x00000000 ;?ICS_ucUSART1RXBuffer+3384
0x5AC8	0x00000000 ;?ICS_ucUSART1RXBuffer+3388
0x5ACC	0x00000000 ;?ICS_ucUSART1RXBuffer+3392
0x5AD0	0x00000000 ;?ICS_ucUSART1RXBuffer+3396
0x5AD4	0x00000000 ;?ICS_ucUSART1RXBuffer+3400
0x5AD8	0x00000000 ;?ICS_ucUSART1RXBuffer+3404
0x5ADC	0x00000000 ;?ICS_ucUSART1RXBuffer+3408
0x5AE0	0x00000000 ;?ICS_ucUSART1RXBuffer+3412
0x5AE4	0x00000000 ;?ICS_ucUSART1RXBuffer+3416
0x5AE8	0x00000000 ;?ICS_ucUSART1RXBuffer+3420
0x5AEC	0x00000000 ;?ICS_ucUSART1RXBuffer+3424
0x5AF0	0x00000000 ;?ICS_ucUSART1RXBuffer+3428
0x5AF4	0x00000000 ;?ICS_ucUSART1RXBuffer+3432
0x5AF8	0x00000000 ;?ICS_ucUSART1RXBuffer+3436
0x5AFC	0x00000000 ;?ICS_ucUSART1RXBuffer+3440
0x5B00	0x00000000 ;?ICS_ucUSART1RXBuffer+3444
0x5B04	0x00000000 ;?ICS_ucUSART1RXBuffer+3448
0x5B08	0x00000000 ;?ICS_ucUSART1RXBuffer+3452
0x5B0C	0x00000000 ;?ICS_ucUSART1RXBuffer+3456
0x5B10	0x00000000 ;?ICS_ucUSART1RXBuffer+3460
0x5B14	0x00000000 ;?ICS_ucUSART1RXBuffer+3464
0x5B18	0x00000000 ;?ICS_ucUSART1RXBuffer+3468
0x5B1C	0x00000000 ;?ICS_ucUSART1RXBuffer+3472
0x5B20	0x00000000 ;?ICS_ucUSART1RXBuffer+3476
0x5B24	0x00000000 ;?ICS_ucUSART1RXBuffer+3480
0x5B28	0x00000000 ;?ICS_ucUSART1RXBuffer+3484
0x5B2C	0x00000000 ;?ICS_ucUSART1RXBuffer+3488
0x5B30	0x00000000 ;?ICS_ucUSART1RXBuffer+3492
0x5B34	0x00000000 ;?ICS_ucUSART1RXBuffer+3496
0x5B38	0x00000000 ;?ICS_ucUSART1RXBuffer+3500
0x5B3C	0x00000000 ;?ICS_ucUSART1RXBuffer+3504
0x5B40	0x00000000 ;?ICS_ucUSART1RXBuffer+3508
0x5B44	0x00000000 ;?ICS_ucUSART1RXBuffer+3512
0x5B48	0x00000000 ;?ICS_ucUSART1RXBuffer+3516
0x5B4C	0x00000000 ;?ICS_ucUSART1RXBuffer+3520
0x5B50	0x00000000 ;?ICS_ucUSART1RXBuffer+3524
0x5B54	0x00000000 ;?ICS_ucUSART1RXBuffer+3528
0x5B58	0x00000000 ;?ICS_ucUSART1RXBuffer+3532
0x5B5C	0x00000000 ;?ICS_ucUSART1RXBuffer+3536
0x5B60	0x00000000 ;?ICS_ucUSART1RXBuffer+3540
0x5B64	0x00000000 ;?ICS_ucUSART1RXBuffer+3544
0x5B68	0x00000000 ;?ICS_ucUSART1RXBuffer+3548
0x5B6C	0x00000000 ;?ICS_ucUSART1RXBuffer+3552
0x5B70	0x00000000 ;?ICS_ucUSART1RXBuffer+3556
0x5B74	0x00000000 ;?ICS_ucUSART1RXBuffer+3560
0x5B78	0x00000000 ;?ICS_ucUSART1RXBuffer+3564
0x5B7C	0x00000000 ;?ICS_ucUSART1RXBuffer+3568
0x5B80	0x00000000 ;?ICS_ucUSART1RXBuffer+3572
0x5B84	0x00000000 ;?ICS_ucUSART1RXBuffer+3576
0x5B88	0x00000000 ;?ICS_ucUSART1RXBuffer+3580
0x5B8C	0x00000000 ;?ICS_ucUSART1RXBuffer+3584
0x5B90	0x00000000 ;?ICS_ucUSART1RXBuffer+3588
0x5B94	0x00000000 ;?ICS_ucUSART1RXBuffer+3592
0x5B98	0x00000000 ;?ICS_ucUSART1RXBuffer+3596
0x5B9C	0x00000000 ;?ICS_ucUSART1RXBuffer+3600
0x5BA0	0x00000000 ;?ICS_ucUSART1RXBuffer+3604
0x5BA4	0x00000000 ;?ICS_ucUSART1RXBuffer+3608
0x5BA8	0x00000000 ;?ICS_ucUSART1RXBuffer+3612
0x5BAC	0x00000000 ;?ICS_ucUSART1RXBuffer+3616
0x5BB0	0x00000000 ;?ICS_ucUSART1RXBuffer+3620
0x5BB4	0x00000000 ;?ICS_ucUSART1RXBuffer+3624
0x5BB8	0x00000000 ;?ICS_ucUSART1RXBuffer+3628
0x5BBC	0x00000000 ;?ICS_ucUSART1RXBuffer+3632
0x5BC0	0x00000000 ;?ICS_ucUSART1RXBuffer+3636
0x5BC4	0x00000000 ;?ICS_ucUSART1RXBuffer+3640
0x5BC8	0x00000000 ;?ICS_ucUSART1RXBuffer+3644
0x5BCC	0x00000000 ;?ICS_ucUSART1RXBuffer+3648
0x5BD0	0x00000000 ;?ICS_ucUSART1RXBuffer+3652
0x5BD4	0x00000000 ;?ICS_ucUSART1RXBuffer+3656
0x5BD8	0x00000000 ;?ICS_ucUSART1RXBuffer+3660
0x5BDC	0x00000000 ;?ICS_ucUSART1RXBuffer+3664
0x5BE0	0x00000000 ;?ICS_ucUSART1RXBuffer+3668
0x5BE4	0x00000000 ;?ICS_ucUSART1RXBuffer+3672
0x5BE8	0x00000000 ;?ICS_ucUSART1RXBuffer+3676
0x5BEC	0x00000000 ;?ICS_ucUSART1RXBuffer+3680
0x5BF0	0x00000000 ;?ICS_ucUSART1RXBuffer+3684
0x5BF4	0x00000000 ;?ICS_ucUSART1RXBuffer+3688
0x5BF8	0x00000000 ;?ICS_ucUSART1RXBuffer+3692
0x5BFC	0x00000000 ;?ICS_ucUSART1RXBuffer+3696
0x5C00	0x00000000 ;?ICS_ucUSART1RXBuffer+3700
0x5C04	0x00000000 ;?ICS_ucUSART1RXBuffer+3704
0x5C08	0x00000000 ;?ICS_ucUSART1RXBuffer+3708
0x5C0C	0x00000000 ;?ICS_ucUSART1RXBuffer+3712
0x5C10	0x00000000 ;?ICS_ucUSART1RXBuffer+3716
0x5C14	0x00000000 ;?ICS_ucUSART1RXBuffer+3720
0x5C18	0x00000000 ;?ICS_ucUSART1RXBuffer+3724
0x5C1C	0x00000000 ;?ICS_ucUSART1RXBuffer+3728
0x5C20	0x00000000 ;?ICS_ucUSART1RXBuffer+3732
0x5C24	0x00000000 ;?ICS_ucUSART1RXBuffer+3736
0x5C28	0x00000000 ;?ICS_ucUSART1RXBuffer+3740
0x5C2C	0x00000000 ;?ICS_ucUSART1RXBuffer+3744
0x5C30	0x00000000 ;?ICS_ucUSART1RXBuffer+3748
0x5C34	0x00000000 ;?ICS_ucUSART1RXBuffer+3752
0x5C38	0x00000000 ;?ICS_ucUSART1RXBuffer+3756
0x5C3C	0x00000000 ;?ICS_ucUSART1RXBuffer+3760
0x5C40	0x00000000 ;?ICS_ucUSART1RXBuffer+3764
0x5C44	0x00000000 ;?ICS_ucUSART1RXBuffer+3768
0x5C48	0x00000000 ;?ICS_ucUSART1RXBuffer+3772
0x5C4C	0x00000000 ;?ICS_ucUSART1RXBuffer+3776
0x5C50	0x00000000 ;?ICS_ucUSART1RXBuffer+3780
0x5C54	0x00000000 ;?ICS_ucUSART1RXBuffer+3784
0x5C58	0x00000000 ;?ICS_ucUSART1RXBuffer+3788
0x5C5C	0x00000000 ;?ICS_ucUSART1RXBuffer+3792
0x5C60	0x00000000 ;?ICS_ucUSART1RXBuffer+3796
0x5C64	0x00000000 ;?ICS_ucUSART1RXBuffer+3800
0x5C68	0x00000000 ;?ICS_ucUSART1RXBuffer+3804
0x5C6C	0x00000000 ;?ICS_ucUSART1RXBuffer+3808
0x5C70	0x00000000 ;?ICS_ucUSART1RXBuffer+3812
0x5C74	0x00000000 ;?ICS_ucUSART1RXBuffer+3816
0x5C78	0x00000000 ;?ICS_ucUSART1RXBuffer+3820
0x5C7C	0x00000000 ;?ICS_ucUSART1RXBuffer+3824
0x5C80	0x00000000 ;?ICS_ucUSART1RXBuffer+3828
0x5C84	0x00000000 ;?ICS_ucUSART1RXBuffer+3832
0x5C88	0x00000000 ;?ICS_ucUSART1RXBuffer+3836
0x5C8C	0x00000000 ;?ICS_ucUSART1RXBuffer+3840
0x5C90	0x00000000 ;?ICS_ucUSART1RXBuffer+3844
0x5C94	0x00000000 ;?ICS_ucUSART1RXBuffer+3848
0x5C98	0x00000000 ;?ICS_ucUSART1RXBuffer+3852
0x5C9C	0x00000000 ;?ICS_ucUSART1RXBuffer+3856
0x5CA0	0x00000000 ;?ICS_ucUSART1RXBuffer+3860
0x5CA4	0x00000000 ;?ICS_ucUSART1RXBuffer+3864
0x5CA8	0x00000000 ;?ICS_ucUSART1RXBuffer+3868
0x5CAC	0x00000000 ;?ICS_ucUSART1RXBuffer+3872
0x5CB0	0x00000000 ;?ICS_ucUSART1RXBuffer+3876
0x5CB4	0x00000000 ;?ICS_ucUSART1RXBuffer+3880
0x5CB8	0x00000000 ;?ICS_ucUSART1RXBuffer+3884
0x5CBC	0x00000000 ;?ICS_ucUSART1RXBuffer+3888
0x5CC0	0x00000000 ;?ICS_ucUSART1RXBuffer+3892
0x5CC4	0x00000000 ;?ICS_ucUSART1RXBuffer+3896
0x5CC8	0x00000000 ;?ICS_ucUSART1RXBuffer+3900
0x5CCC	0x00000000 ;?ICS_ucUSART1RXBuffer+3904
0x5CD0	0x00000000 ;?ICS_ucUSART1RXBuffer+3908
0x5CD4	0x00000000 ;?ICS_ucUSART1RXBuffer+3912
0x5CD8	0x00000000 ;?ICS_ucUSART1RXBuffer+3916
0x5CDC	0x00000000 ;?ICS_ucUSART1RXBuffer+3920
0x5CE0	0x00000000 ;?ICS_ucUSART1RXBuffer+3924
0x5CE4	0x00000000 ;?ICS_ucUSART1RXBuffer+3928
0x5CE8	0x00000000 ;?ICS_ucUSART1RXBuffer+3932
0x5CEC	0x00000000 ;?ICS_ucUSART1RXBuffer+3936
0x5CF0	0x00000000 ;?ICS_ucUSART1RXBuffer+3940
0x5CF4	0x00000000 ;?ICS_ucUSART1RXBuffer+3944
0x5CF8	0x00000000 ;?ICS_ucUSART1RXBuffer+3948
0x5CFC	0x00000000 ;?ICS_ucUSART1RXBuffer+3952
0x5D00	0x00000000 ;?ICS_ucUSART1RXBuffer+3956
0x5D04	0x00000000 ;?ICS_ucUSART1RXBuffer+3960
0x5D08	0x00000000 ;?ICS_ucUSART1RXBuffer+3964
0x5D0C	0x00000000 ;?ICS_ucUSART1RXBuffer+3968
0x5D10	0x00000000 ;?ICS_ucUSART1RXBuffer+3972
0x5D14	0x00000000 ;?ICS_ucUSART1RXBuffer+3976
0x5D18	0x00000000 ;?ICS_ucUSART1RXBuffer+3980
0x5D1C	0x00000000 ;?ICS_ucUSART1RXBuffer+3984
0x5D20	0x00000000 ;?ICS_ucUSART1RXBuffer+3988
0x5D24	0x00000000 ;?ICS_ucUSART1RXBuffer+3992
0x5D28	0x00000000 ;?ICS_ucUSART1RXBuffer+3996
0x5D2C	0x00000000 ;?ICS_ucUSART1RXBuffer+4000
0x5D30	0x00000000 ;?ICS_ucUSART1RXBuffer+4004
0x5D34	0x00000000 ;?ICS_ucUSART1RXBuffer+4008
0x5D38	0x00000000 ;?ICS_ucUSART1RXBuffer+4012
0x5D3C	0x00000000 ;?ICS_ucUSART1RXBuffer+4016
0x5D40	0x00000000 ;?ICS_ucUSART1RXBuffer+4020
0x5D44	0x00000000 ;?ICS_ucUSART1RXBuffer+4024
0x5D48	0x00000000 ;?ICS_ucUSART1RXBuffer+4028
0x5D4C	0x00000000 ;?ICS_ucUSART1RXBuffer+4032
0x5D50	0x00000000 ;?ICS_ucUSART1RXBuffer+4036
0x5D54	0x00000000 ;?ICS_ucUSART1RXBuffer+4040
0x5D58	0x00000000 ;?ICS_ucUSART1RXBuffer+4044
0x5D5C	0x00000000 ;?ICS_ucUSART1RXBuffer+4048
0x5D60	0x00000000 ;?ICS_ucUSART1RXBuffer+4052
0x5D64	0x00000000 ;?ICS_ucUSART1RXBuffer+4056
0x5D68	0x00000000 ;?ICS_ucUSART1RXBuffer+4060
0x5D6C	0x00000000 ;?ICS_ucUSART1RXBuffer+4064
0x5D70	0x00000000 ;?ICS_ucUSART1RXBuffer+4068
0x5D74	0x00000000 ;?ICS_ucUSART1RXBuffer+4072
0x5D78	0x00000000 ;?ICS_ucUSART1RXBuffer+4076
0x5D7C	0x00000000 ;?ICS_ucUSART1RXBuffer+4080
0x5D80	0x00000000 ;?ICS_ucUSART1RXBuffer+4084
0x5D84	0x00000000 ;?ICS_ucUSART1RXBuffer+4088
0x5D88	0x00000000 ;?ICS_ucUSART1RXBuffer+4092
; end of ?ICS_ucUSART1RXBuffer
;DriverRF4463PROMain.c,0 :: ?ICS_ulUSART1ByteReceived [4]
0x5D8C	0x00000000 ;?ICS_ulUSART1ByteReceived+0
; end of ?ICS_ulUSART1ByteReceived
;DriverRF4463PROMain.c,0 :: ?ICS_fUSART1Buffer [4]
0x5D90	0x00000000 ;?ICS_fUSART1Buffer+0
; end of ?ICS_fUSART1Buffer
;DriverRF4463PROMain.c,0 :: ?ICS_CMD_RADIO_POWER_SET [10]
0x5D94	0x5F544553 ;?ICS_CMD_RADIO_POWER_SET+0
0x5D98	0x45574F50 ;?ICS_CMD_RADIO_POWER_SET+4
0x5D9C	0x0052 ;?ICS_CMD_RADIO_POWER_SET+8
; end of ?ICS_CMD_RADIO_POWER_SET
;DriverRF4463PROMain.c,0 :: ?ICS_ANS_COMMAND_VALUE_ACCEPTED [40]
0x5D9E	0x4F43205B ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+0
0x5DA2	0x4E414D4D ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+4
0x5DA6	0x205D2044 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+8
0x5DAA	0x554C4156 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+12
0x5DAE	0x43412045 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+16
0x5DB2	0x54504543 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+20
0x5DB6	0x41204445 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+24
0x5DBA	0x4120444E ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+28
0x5DBE	0x494C5050 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+32
0x5DC2	0x000D4445 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+36
; end of ?ICS_ANS_COMMAND_VALUE_ACCEPTED
;DriverRF4463PROMain.c,0 :: ?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE [32]
0x5DC6	0x4F43205B ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x5DCA	0x4E414D4D ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+4
0x5DCE	0x205D2044 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+8
0x5DD2	0x554C4156 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+12
0x5DD6	0x554F2045 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+16
0x5DDA	0x464F2054 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+20
0x5DDE	0x4E415220 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+24
0x5DE2	0x000D4547 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+28
; end of ?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE
;,0 :: _initBlock_8 [18]
; Containing: ?ICS_CMD_RADIO_BAND_SET [9]
;             ?ICS_CMD_RADIO_RATE_SET [9]
0x5DE6	0x5F544553 ;_initBlock_8+0 : ?ICS_CMD_RADIO_BAND_SET at 0x5DE6
0x5DEA	0x444E4142 ;_initBlock_8+4
0x5DEE	0x54455300 ;_initBlock_8+8 : ?ICS_CMD_RADIO_RATE_SET at 0x5DEF
0x5DF2	0x5441525F ;_initBlock_8+12
0x5DF6	0x0045 ;_initBlock_8+16
; end of _initBlock_8
;DriverRF4463PROMain.c,0 :: ?ICS_CMD_RADIO_CHANNEL_SET [12]
0x5DF8	0x5F544553 ;?ICS_CMD_RADIO_CHANNEL_SET+0
0x5DFC	0x4E414843 ;?ICS_CMD_RADIO_CHANNEL_SET+4
0x5E00	0x004C454E ;?ICS_CMD_RADIO_CHANNEL_SET+8
; end of ?ICS_CMD_RADIO_CHANNEL_SET
;,0 :: _initBlock_10 [8]
; Containing: ?ICS_ucRF4463FreqChannel [1]
;             ?ICS_CMD_RADIO_BW_SET [7]
0x5E04	0x54455301 ;_initBlock_10+0 : ?ICS_ucRF4463FreqChannel at 0x5E04 : ?ICS_CMD_RADIO_BW_SET at 0x5E05
0x5E08	0x0057425F ;_initBlock_10+4
; end of _initBlock_10
;DriverRF4463PROMain.c,0 :: ?ICS_ulRF4463Step [4]
0x5E0C	0x000000FA ;?ICS_ulRF4463Step+0
; end of ?ICS_ulRF4463Step
;,0 :: _initBlock_12 [10]
; Containing: ?ICS_CMD_RADIO_MODE_SET [9]
;             ?ICS_ucUSARTNull [1]
0x5E10	0x5F544553 ;_initBlock_12+0 : ?ICS_CMD_RADIO_MODE_SET at 0x5E10
0x5E14	0x45444F4D ;_initBlock_12+4
0x5E18	0x0000 ;_initBlock_12+8 : ?ICS_ucUSARTNull at 0x5E19
; end of _initBlock_12
;,0 :: _initBlock_13 [178]
; Containing: ?ICS_ARG_RADIO_MODE_STBY [5]
;             ?ICS_ANS_COMMAND_MODE_STBY [34]
;             ?ICS_ARG_RADIO_MODE_TX_CONT [8]
;             ?ICS_ANS_COMMAND_MODE_TX_CONT [34]
;             ?ICS_ARG_RADIO_MODE_RX_CONT [8]
;             ?ICS_ANS_COMMAND_MODE_RX_CONT [34]
;             ?ICS_ARG_RADIO_MODE_TX_MASTER [10]
;             ?ICS_ANS_COMMAND_MODE_TX_MASTER [36]
;             ?ICS_ARG_RADIO_MODE_RX_SLAVE [9]
0x5E1A	0x59425453 ;_initBlock_13+0 : ?ICS_ARG_RADIO_MODE_STBY at 0x5E1A
0x5E1E	0x43205B00 ;_initBlock_13+4 : ?ICS_ANS_COMMAND_MODE_STBY at 0x5E1F
0x5E22	0x414D4D4F ;_initBlock_13+8
0x5E26	0x5D20444E ;_initBlock_13+12
0x5E2A	0x444F4D20 ;_initBlock_13+16
0x5E2E	0x43412045 ;_initBlock_13+20
0x5E32	0x45564954 ;_initBlock_13+24
0x5E36	0x5453203A ;_initBlock_13+28
0x5E3A	0x42444E41 ;_initBlock_13+32
0x5E3E	0x54000D59 ;_initBlock_13+36 : ?ICS_ARG_RADIO_MODE_TX_CONT at 0x5E41
0x5E42	0x4F435F58 ;_initBlock_13+40
0x5E46	0x5B00544E ;_initBlock_13+44 : ?ICS_ANS_COMMAND_MODE_TX_CONT at 0x5E49
0x5E4A	0x4D4F4320 ;_initBlock_13+48
0x5E4E	0x444E414D ;_initBlock_13+52
0x5E52	0x4D205D20 ;_initBlock_13+56
0x5E56	0x2045444F ;_initBlock_13+60
0x5E5A	0x49544341 ;_initBlock_13+64
0x5E5E	0x203A4556 ;_initBlock_13+68
0x5E62	0x43205854 ;_initBlock_13+72
0x5E66	0x0D544E4F ;_initBlock_13+76
0x5E6A	0x5F585200 ;_initBlock_13+80 : ?ICS_ARG_RADIO_MODE_RX_CONT at 0x5E6B
0x5E6E	0x544E4F43 ;_initBlock_13+84
0x5E72	0x43205B00 ;_initBlock_13+88 : ?ICS_ANS_COMMAND_MODE_RX_CONT at 0x5E73
0x5E76	0x414D4D4F ;_initBlock_13+92
0x5E7A	0x5D20444E ;_initBlock_13+96
0x5E7E	0x444F4D20 ;_initBlock_13+100
0x5E82	0x43412045 ;_initBlock_13+104
0x5E86	0x45564954 ;_initBlock_13+108
0x5E8A	0x5852203A ;_initBlock_13+112
0x5E8E	0x4E4F4320 ;_initBlock_13+116
0x5E92	0x54000D54 ;_initBlock_13+120 : ?ICS_ARG_RADIO_MODE_TX_MASTER at 0x5E95
0x5E96	0x414D5F58 ;_initBlock_13+124
0x5E9A	0x52455453 ;_initBlock_13+128
0x5E9E	0x43205B00 ;_initBlock_13+132 : ?ICS_ANS_COMMAND_MODE_TX_MASTER at 0x5E9F
0x5EA2	0x414D4D4F ;_initBlock_13+136
0x5EA6	0x5D20444E ;_initBlock_13+140
0x5EAA	0x444F4D20 ;_initBlock_13+144
0x5EAE	0x43412045 ;_initBlock_13+148
0x5EB2	0x45564954 ;_initBlock_13+152
0x5EB6	0x5854203A ;_initBlock_13+156
0x5EBA	0x53414D20 ;_initBlock_13+160
0x5EBE	0x0D524554 ;_initBlock_13+164
0x5EC2	0x5F585200 ;_initBlock_13+168 : ?ICS_ARG_RADIO_MODE_RX_SLAVE at 0x5EC3
0x5EC6	0x56414C53 ;_initBlock_13+172
0x5ECA	0x0045 ;_initBlock_13+176
; end of _initBlock_13
;,0 :: _initBlock_14 [60]
; Containing: ?ICS_ANS_COMMAND_MODE_RX_SLAVE [35]
;             ?ICS_CMD_RADIO_PACKET_SEND [12]
;             ?ICS_CMD_RADIO_MATCH_BYTE_1_SET [12]
;             ?ICS_ucRF4463ByteMatch1 [1]
0x5ECC	0x4F43205B ;_initBlock_14+0 : ?ICS_ANS_COMMAND_MODE_RX_SLAVE at 0x5ECC
0x5ED0	0x4E414D4D ;_initBlock_14+4
0x5ED4	0x205D2044 ;_initBlock_14+8
0x5ED8	0x45444F4D ;_initBlock_14+12
0x5EDC	0x54434120 ;_initBlock_14+16
0x5EE0	0x3A455649 ;_initBlock_14+20
0x5EE4	0x20585220 ;_initBlock_14+24
0x5EE8	0x56414C53 ;_initBlock_14+28
0x5EEC	0x53000D45 ;_initBlock_14+32 : ?ICS_CMD_RADIO_PACKET_SEND at 0x5EEF
0x5EF0	0x5F444E45 ;_initBlock_14+36
0x5EF4	0x4B434150 ;_initBlock_14+40
0x5EF8	0x53005445 ;_initBlock_14+44 : ?ICS_CMD_RADIO_MATCH_BYTE_1_SET at 0x5EFB
0x5EFC	0x4D5F5445 ;_initBlock_14+48
0x5F00	0x48435441 ;_initBlock_14+52
0x5F04	0x0100315F ;_initBlock_14+56 : ?ICS_ucRF4463ByteMatch1 at 0x5F07
; end of _initBlock_14
;,0 :: _initBlock_15 [2]
; Containing: ?ICS_ucRF4463MatchEnabled [1]
;             ?ICS_ucRF4463MatchEnableReg [1]
0x5F08	0x4001 ;_initBlock_15+0 : ?ICS_ucRF4463MatchEnabled at 0x5F08 : ?ICS_ucRF4463MatchEnableReg at 0x5F09
; end of _initBlock_15
;DriverRF4463PROMain.c,0 :: ?ICS_CMD_RADIO_MATCH_BYTE_2_SET [12]
0x5F0A	0x5F544553 ;?ICS_CMD_RADIO_MATCH_BYTE_2_SET+0
0x5F0E	0x4354414D ;?ICS_CMD_RADIO_MATCH_BYTE_2_SET+4
0x5F12	0x00325F48 ;?ICS_CMD_RADIO_MATCH_BYTE_2_SET+8
; end of ?ICS_CMD_RADIO_MATCH_BYTE_2_SET
;,0 :: _initBlock_17 [14]
; Containing: ?ICS_ucRF4463ByteMatch2 [1]
;             ?ICS_CMD_RADIO_MATCH_BYTE_3_SET [12]
;             ?ICS_ucRF4463ByteMatch3 [1]
0x5F16	0x54455301 ;_initBlock_17+0 : ?ICS_ucRF4463ByteMatch2 at 0x5F16 : ?ICS_CMD_RADIO_MATCH_BYTE_3_SET at 0x5F17
0x5F1A	0x54414D5F ;_initBlock_17+4
0x5F1E	0x335F4843 ;_initBlock_17+8
0x5F22	0x0100 ;_initBlock_17+12 : ?ICS_ucRF4463ByteMatch3 at 0x5F23
; end of _initBlock_17
;DriverRF4463PROMain.c,0 :: ?ICS_CMD_RADIO_MATCH_BYTE_4_SET [12]
0x5F24	0x5F544553 ;?ICS_CMD_RADIO_MATCH_BYTE_4_SET+0
0x5F28	0x4354414D ;?ICS_CMD_RADIO_MATCH_BYTE_4_SET+4
0x5F2C	0x00345F48 ;?ICS_CMD_RADIO_MATCH_BYTE_4_SET+8
; end of ?ICS_CMD_RADIO_MATCH_BYTE_4_SET
;,0 :: _initBlock_19 [12]
; Containing: ?ICS_ucRF4463ByteMatch4 [1]
;             ?ICS_CMD_RADIO_MATCH_MASK_1_SET [11]
0x5F30	0x54455301 ;_initBlock_19+0 : ?ICS_ucRF4463ByteMatch4 at 0x5F30 : ?ICS_CMD_RADIO_MATCH_MASK_1_SET at 0x5F31
0x5F34	0x53414D5F ;_initBlock_19+4
0x5F38	0x00315F4B ;_initBlock_19+8
; end of _initBlock_19
;,0 :: _initBlock_20 [12]
; Containing: ?ICS_ucRF4463ByteMask1 [1]
;             ?ICS_CMD_RADIO_MATCH_MASK_2_SET [11]
0x5F3C	0x544553FF ;_initBlock_20+0 : ?ICS_ucRF4463ByteMask1 at 0x5F3C : ?ICS_CMD_RADIO_MATCH_MASK_2_SET at 0x5F3D
0x5F40	0x53414D5F ;_initBlock_20+4
0x5F44	0x00325F4B ;_initBlock_20+8
; end of _initBlock_20
;,0 :: _initBlock_21 [12]
; Containing: ?ICS_ucRF4463ByteMask2 [1]
;             ?ICS_CMD_RADIO_MATCH_MASK_3_SET [11]
0x5F48	0x544553FF ;_initBlock_21+0 : ?ICS_ucRF4463ByteMask2 at 0x5F48 : ?ICS_CMD_RADIO_MATCH_MASK_3_SET at 0x5F49
0x5F4C	0x53414D5F ;_initBlock_21+4
0x5F50	0x00335F4B ;_initBlock_21+8
; end of _initBlock_21
;,0 :: _initBlock_22 [12]
; Containing: ?ICS_ucRF4463ByteMask3 [1]
;             ?ICS_CMD_RADIO_MATCH_MASK_4_SET [11]
0x5F54	0x544553FF ;_initBlock_22+0 : ?ICS_ucRF4463ByteMask3 at 0x5F54 : ?ICS_CMD_RADIO_MATCH_MASK_4_SET at 0x5F55
0x5F58	0x53414D5F ;_initBlock_22+4
0x5F5C	0x00345F4B ;_initBlock_22+8
; end of _initBlock_22
;,0 :: _initBlock_23 [36]
; Containing: ?ICS_ucRF4463ByteMask4 [1]
;             ?ICS_CMD_RADIO_MATCH_UNSET [12]
;             ?ICS_ANS_DEBUG_COMMAND_UNKNOWN [22]
;             ?ICSDriverRF4463PROMain_ucRF4463IRQ [1]
0x5F60	0x534E55FF ;_initBlock_23+0 : ?ICS_ucRF4463ByteMask4 at 0x5F60 : ?ICS_CMD_RADIO_MATCH_UNSET at 0x5F61
0x5F64	0x4D5F5445 ;_initBlock_23+4
0x5F68	0x48435441 ;_initBlock_23+8
0x5F6C	0x43205B00 ;_initBlock_23+12 : ?ICS_ANS_DEBUG_COMMAND_UNKNOWN at 0x5F6D
0x5F70	0x414D4D4F ;_initBlock_23+16
0x5F74	0x5D20444E ;_initBlock_23+20
0x5F78	0x4B4E5520 ;_initBlock_23+24
0x5F7C	0x4E574F4E ;_initBlock_23+28
0x5F80	0x0000203A ;_initBlock_23+32 : ?ICSDriverRF4463PROMain_ucRF4463IRQ at 0x5F83
; end of _initBlock_23
;DriverRF4463PROMain.c,0 :: ?ICS_tx_cnt [4]
0x5F84	0x00000000 ;?ICS_tx_cnt+0
; end of ?ICS_tx_cnt
;DriverRF4463PROMain.c,0 :: ?ICS_RF_MODEM_MOD_TYPE_12_data [16]
0x5F88	0x000C2011 ;?ICS_RF_MODEM_MOD_TYPE_12_data+0
0x5F8C	0x00000000 ;?ICS_RF_MODEM_MOD_TYPE_12_data+4
0x5F90	0x00000000 ;?ICS_RF_MODEM_MOD_TYPE_12_data+8
0x5F94	0x00000000 ;?ICS_RF_MODEM_MOD_TYPE_12_data+12
; end of ?ICS_RF_MODEM_MOD_TYPE_12_data
;DriverRF4463PROMain.c,0 :: ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data [12]
0x5F98	0x18082011 ;?ICS_RF_MODEM_TX_RAMP_DELAY_8_data+0
0x5F9C	0x00000000 ;?ICS_RF_MODEM_TX_RAMP_DELAY_8_data+4
0x5FA0	0x00000000 ;?ICS_RF_MODEM_TX_RAMP_DELAY_8_data+8
; end of ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data
;,0 :: _initBlock_27 [28]
; Containing: ?ICS_RF_MODEM_AFC_GEAR_7_data [13]
;             ?ICS_RF_MODEM_OOK_CNT1_11_data [15]
0x5FA4	0x2C072011 ;_initBlock_27+0 : ?ICS_RF_MODEM_AFC_GEAR_7_data at 0x5FA4
0x5FA8	0x00000000 ;_initBlock_27+4
0x5FAC	0x00000000 ;_initBlock_27+8
0x5FB0	0x0B201100 ;_initBlock_27+12 : ?ICS_RF_MODEM_OOK_CNT1_11_data at 0x5FB1
0x5FB4	0x00000042 ;_initBlock_27+16
0x5FB8	0x00000000 ;_initBlock_27+20
0x5FBC	0x00000000 ;_initBlock_27+24
; end of _initBlock_27
;DriverRF4463PROMain.c,0 :: ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data [16]
0x5FC0	0x000C2111 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+0
0x5FC4	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+4
0x5FC8	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+8
0x5FCC	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+12
; end of ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data
;DriverRF4463PROMain.c,0 :: ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data [16]
0x5FD0	0x0C0C2111 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x5FD4	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+4
0x5FD8	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+8
0x5FDC	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+12
; end of ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data
;DriverRF4463PROMain.c,0 :: ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data [16]
0x5FE0	0x180C2111 ;?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x5FE4	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+4
0x5FE8	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+8
0x5FEC	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+12
; end of ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data
;,0 :: _initBlock_31 [26]
; Containing: ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data [13]
;             ?ICS_RF_MODEM_BCR_OSR_1_9_data [13]
0x5FF0	0x38092011 ;_initBlock_31+0 : ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data at 0x5FF0
0x5FF4	0x00000000 ;_initBlock_31+4
0x5FF8	0x00000000 ;_initBlock_31+8
0x5FFC	0x09201100 ;_initBlock_31+12 : ?ICS_RF_MODEM_BCR_OSR_1_9_data at 0x5FFD
0x6000	0x00000022 ;_initBlock_31+16
0x6004	0x00000000 ;_initBlock_31+20
0x6008	0x0000 ;_initBlock_31+24
; end of _initBlock_31
;,0 :: _initBlock_32 [12]
; Containing: ?ICS_RF_SYNTH_PFDCP_CPFF_7_data [11]
;             ?ICS_ucSPI1ByteReceived [1]
0x600A	0x00072311 ;_initBlock_32+0 : ?ICS_RF_SYNTH_PFDCP_CPFF_7_data at 0x600A
0x600E	0x00000000 ;_initBlock_32+4
0x6012	0x00000000 ;_initBlock_32+8 : ?ICS_ucSPI1ByteReceived at 0x6015
; end of _initBlock_32
;,0 :: _initBlock_33 [1046]
; Containing: ?ICS_ucData1 [1]
;             RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433 [132]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433 [132]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850 [132]
;             RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850 [132]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850 [132]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433 [132]
;             RF_MODEM_MOD_TYPE_12 [132]
;             RF_MODEM_OOK_CNT1_11_850 [121]
0x6016	0x05DEB800 ;_initBlock_33+0 : ?ICS_ucData1 at 0x6016 : RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433 at 0x6017
0x601A	0x030C1617 ;_initBlock_33+4
0x601E	0x00FF1500 ;_initBlock_33+8
0x6022	0x05DEB800 ;_initBlock_33+12
0x6026	0x030C1617 ;_initBlock_33+16
0x602A	0x00FF1500 ;_initBlock_33+20
0x602E	0xEAC9B900 ;_initBlock_33+24
0x6032	0x0A111205 ;_initBlock_33+28
0x6036	0x03FC1504 ;_initBlock_33+32
0x603A	0x05DEB800 ;_initBlock_33+36
0x603E	0x030C1617 ;_initBlock_33+40
0x6042	0x00FF1500 ;_initBlock_33+44
0x6046	0xEAC9B900 ;_initBlock_33+48
0x604A	0x0A111205 ;_initBlock_33+52
0x604E	0x03FC1504 ;_initBlock_33+56
0x6052	0xD6CEDD00 ;_initBlock_33+60
0x6056	0x0300F6E6 ;_initBlock_33+64
0x605A	0x3FF01503 ;_initBlock_33+68
0x605E	0xD6DBF400 ;_initBlock_33+72
0x6062	0xFEF7ECDF ;_initBlock_33+76
0x6066	0xFFF01501 ;_initBlock_33+80
0x606A	0xD6DBF403 ;_initBlock_33+84
0x606E	0xFEF7ECDF ;_initBlock_33+88
0x6072	0xFFF01501 ;_initBlock_33+92
0x6076	0xDCEC0C03 ;_initBlock_33+96
0x607A	0xF6EDE3DC ;_initBlock_33+100
0x607E	0xFFC015FD ;_initBlock_33+104
0x6082	0xDBC7C80F ;_initBlock_33+108
0x6086	0x070802F2 ;_initBlock_33+112
0x608A	0x0FFC1503 ;_initBlock_33+116
0x608E	0xEAC9B900 ;_initBlock_33+120
0x6092	0x0A111205 ;_initBlock_33+124
0x6096	0x03FC1504 ;_initBlock_33+128
0x609A	0x15000300 ;_initBlock_33+132 : RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433 at 0x609B
0x609E	0xFF0000FF ;_initBlock_33+136
0x60A2	0xF57F30C4 ;_initBlock_33+140
0x60A6	0x150003B5 ;_initBlock_33+144
0x60AA	0xFF0000FF ;_initBlock_33+148
0x60AE	0xF57F30C4 ;_initBlock_33+152
0x60B2	0x15040AB5 ;_initBlock_33+156
0x60B6	0xCC0003FC ;_initBlock_33+160
0x60BA	0x21A030A1 ;_initBlock_33+164
0x60BE	0x150003D1 ;_initBlock_33+168
0x60C2	0xFF0000FF ;_initBlock_33+172
0x60C6	0xF57F30C4 ;_initBlock_33+176
0x60CA	0x15040AB5 ;_initBlock_33+180
0x60CE	0xCC0003FC ;_initBlock_33+184
0x60D2	0x21A030A1 ;_initBlock_33+188
0x60D6	0x150303D1 ;_initBlock_33+192
0x60DA	0x7E003FF0 ;_initBlock_33+196
0x60DE	0x58BA1B64 ;_initBlock_33+200
0x60E2	0x1501FE0B ;_initBlock_33+204
0x60E6	0x5B03FFF0 ;_initBlock_33+208
0x60EA	0x6DC00F47 ;_initBlock_33+212
0x60EE	0x1501FE25 ;_initBlock_33+216
0x60F2	0x5B03FFF0 ;_initBlock_33+220
0x60F6	0x6DC00F47 ;_initBlock_33+224
0x60FA	0x15FDF625 ;_initBlock_33+228
0x60FE	0x390FFFC0 ;_initBlock_33+232
0x6102	0x7FC3002B ;_initBlock_33+236
0x6106	0x1503073F ;_initBlock_33+240
0x610A	0xA2000FFC ;_initBlock_33+244
0x610E	0x3FAF2681 ;_initBlock_33+248
0x6112	0x15040AEE ;_initBlock_33+252
0x6116	0xCC0003FC ;_initBlock_33+256
0x611A	0x21A030A1 ;_initBlock_33+260
0x611E	0x30C4FFD1 ;_initBlock_33+264 : RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850 at 0x611F
0x6122	0xB8B5F57F ;_initBlock_33+268
0x6126	0x161705DE ;_initBlock_33+272
0x612A	0x30C4FF0C ;_initBlock_33+276
0x612E	0xB8B5F57F ;_initBlock_33+280
0x6132	0x161705DE ;_initBlock_33+284
0x6136	0x0FBAFF0C ;_initBlock_33+288
0x613A	0xC9A9CF51 ;_initBlock_33+292
0x613E	0x0F1E1BFC ;_initBlock_33+296
0x6142	0x30C4FF01 ;_initBlock_33+300
0x6146	0xB8B5F57F ;_initBlock_33+304
0x614A	0x161705DE ;_initBlock_33+308
0x614E	0x0FBAFF0C ;_initBlock_33+312
0x6152	0xC9A9CF51 ;_initBlock_33+316
0x6156	0x0F1E1BFC ;_initBlock_33+320
0x615A	0x30C4FF01 ;_initBlock_33+324
0x615E	0xB8B5F57F ;_initBlock_33+328
0x6162	0x161705DE ;_initBlock_33+332
0x6166	0x1B647E0C ;_initBlock_33+336
0x616A	0xDD0B58BA ;_initBlock_33+340
0x616E	0xF6E6D6CE ;_initBlock_33+344
0x6172	0x1B647E00 ;_initBlock_33+348
0x6176	0xDD0B58BA ;_initBlock_33+352
0x617A	0xF6E6D6CE ;_initBlock_33+356
0x617E	0x002B3900 ;_initBlock_33+360
0x6182	0x0C3F7FC3 ;_initBlock_33+364
0x6186	0xE3DCDCEC ;_initBlock_33+368
0x618A	0x2681A2ED ;_initBlock_33+372
0x618E	0xC8EE3FAF ;_initBlock_33+376
0x6192	0x02F2DBC7 ;_initBlock_33+380
0x6196	0x30A1CC08 ;_initBlock_33+384
0x619A	0xB9D121A0 ;_initBlock_33+388
0x619E	0x1205EAC9 ;_initBlock_33+392
0x61A2	0x05DEB811 ;_initBlock_33+396 : RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850 at 0x61A3
0x61A6	0x030C1617 ;_initBlock_33+400
0x61AA	0x00FF1500 ;_initBlock_33+404
0x61AE	0x05DEB800 ;_initBlock_33+408
0x61B2	0x030C1617 ;_initBlock_33+412
0x61B6	0x00FF1500 ;_initBlock_33+416
0x61BA	0x1BFCC900 ;_initBlock_33+420
0x61BE	0xFC010F1E ;_initBlock_33+424
0x61C2	0x00FF15FD ;_initBlock_33+428
0x61C6	0x05DEB80F ;_initBlock_33+432
0x61CA	0x030C1617 ;_initBlock_33+436
0x61CE	0x00FF1500 ;_initBlock_33+440
0x61D2	0x1BFCC900 ;_initBlock_33+444
0x61D6	0xFC010F1E ;_initBlock_33+448
0x61DA	0x00FF15FD ;_initBlock_33+452
0x61DE	0x05DEB80F ;_initBlock_33+456
0x61E2	0x030C1617 ;_initBlock_33+460
0x61E6	0x00FF1500 ;_initBlock_33+464
0x61EA	0xD6CEDD00 ;_initBlock_33+468
0x61EE	0x0300F6E6 ;_initBlock_33+472
0x61F2	0x3FF01503 ;_initBlock_33+476
0x61F6	0x15030300 ;_initBlock_33+480
0x61FA	0x7E003FF0 ;_initBlock_33+484
0x61FE	0x58BA1B64 ;_initBlock_33+488
0x6202	0xDCEC0C0B ;_initBlock_33+492
0x6206	0xF6EDE3DC ;_initBlock_33+496
0x620A	0xFFC015FD ;_initBlock_33+500
0x620E	0xDBC7C80F ;_initBlock_33+504
0x6212	0x070802F2 ;_initBlock_33+508
0x6216	0x0FFC1503 ;_initBlock_33+512
0x621A	0xEAC9B900 ;_initBlock_33+516
0x621E	0x0A111205 ;_initBlock_33+520
0x6222	0x03FC1504 ;_initBlock_33+524
0x6226	0x15000300 ;_initBlock_33+528 : RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850 at 0x6227
0x622A	0xFF0000FF ;_initBlock_33+532
0x622E	0xF57F30C4 ;_initBlock_33+536
0x6232	0x150003B5 ;_initBlock_33+540
0x6236	0xFF0000FF ;_initBlock_33+544
0x623A	0xF57F30C4 ;_initBlock_33+548
0x623E	0x15FDFCB5 ;_initBlock_33+552
0x6242	0xFF0F00FF ;_initBlock_33+556
0x6246	0xCF510FBA ;_initBlock_33+560
0x624A	0x150003A9 ;_initBlock_33+564
0x624E	0xFF0000FF ;_initBlock_33+568
0x6252	0xF57F30C4 ;_initBlock_33+572
0x6256	0x15FDFCB5 ;_initBlock_33+576
0x625A	0xFF0F00FF ;_initBlock_33+580
0x625E	0xCF510FBA ;_initBlock_33+584
0x6262	0x150003A9 ;_initBlock_33+588
0x6266	0xFF0000FF ;_initBlock_33+592
0x626A	0xF57F30C4 ;_initBlock_33+596
0x626E	0x150303B5 ;_initBlock_33+600
0x6272	0x7E003FF0 ;_initBlock_33+604
0x6276	0x58BA1B64 ;_initBlock_33+608
0x627A	0x15FDF60B ;_initBlock_33+612
0x627E	0x390FFFC0 ;_initBlock_33+616
0x6282	0x7FC3002B ;_initBlock_33+620
0x6286	0x1503073F ;_initBlock_33+624
0x628A	0xA2000FFC ;_initBlock_33+628
0x628E	0x3FAF2681 ;_initBlock_33+632
0x6292	0x15040AEE ;_initBlock_33+636
0x6296	0xCC0003FC ;_initBlock_33+640
0x629A	0x21A030A1 ;_initBlock_33+644
0x629E	0x000000D1 ;_initBlock_33+648
0x62A2	0x00000000 ;_initBlock_33+652
0x62A6	0x00000000 ;_initBlock_33+656
0x62AA	0x30C4FF00 ;_initBlock_33+660 : RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433 at 0x62AB
0x62AE	0xB8B5F57F ;_initBlock_33+664
0x62B2	0x161705DE ;_initBlock_33+668
0x62B6	0x30C4FF0C ;_initBlock_33+672
0x62BA	0xB8B5F57F ;_initBlock_33+676
0x62BE	0x161705DE ;_initBlock_33+680
0x62C2	0x30A1CC0C ;_initBlock_33+684
0x62C6	0xB9D121A0 ;_initBlock_33+688
0x62CA	0x1205EAC9 ;_initBlock_33+692
0x62CE	0x30C4FF11 ;_initBlock_33+696
0x62D2	0xB8B5F57F ;_initBlock_33+700
0x62D6	0x161705DE ;_initBlock_33+704
0x62DA	0x30A1CC0C ;_initBlock_33+708
0x62DE	0xB9D121A0 ;_initBlock_33+712
0x62E2	0x1205EAC9 ;_initBlock_33+716
0x62E6	0x1B647E11 ;_initBlock_33+720
0x62EA	0xDD0B58BA ;_initBlock_33+724
0x62EE	0xF6E6D6CE ;_initBlock_33+728
0x62F2	0x0F475B00 ;_initBlock_33+732
0x62F6	0xF4256DC0 ;_initBlock_33+736
0x62FA	0xECDFD6DB ;_initBlock_33+740
0x62FE	0x0F475BF7 ;_initBlock_33+744
0x6302	0xF4256DC0 ;_initBlock_33+748
0x6306	0xECDFD6DB ;_initBlock_33+752
0x630A	0x002B39F7 ;_initBlock_33+756
0x630E	0x0C3F7FC3 ;_initBlock_33+760
0x6312	0xE3DCDCEC ;_initBlock_33+764
0x6316	0x2681A2ED ;_initBlock_33+768
0x631A	0xC8EE3FAF ;_initBlock_33+772
0x631E	0x02F2DBC7 ;_initBlock_33+776
0x6322	0x30A1CC08 ;_initBlock_33+780
0x6326	0xB9D121A0 ;_initBlock_33+784
0x632A	0x1205EAC9 ;_initBlock_33+788
0x632E	0x07000311 ;_initBlock_33+792 : RF_MODEM_MOD_TYPE_12 at 0x632F
0x6332	0x04C01200 ;_initBlock_33+796
0x6336	0x00C0C62D ;_initBlock_33+800
0x633A	0x07000300 ;_initBlock_33+804
0x633E	0x04802500 ;_initBlock_33+808
0x6342	0x00C0C62D ;_initBlock_33+812
0x6346	0x07000300 ;_initBlock_33+816
0x634A	0x04004B00 ;_initBlock_33+820
0x634E	0x00C0C62D ;_initBlock_33+824
0x6352	0x07000300 ;_initBlock_33+828
0x6356	0x04009600 ;_initBlock_33+832
0x635A	0x00C0C62D ;_initBlock_33+836
0x635E	0x07000300 ;_initBlock_33+840
0x6362	0x04002C01 ;_initBlock_33+844
0x6366	0x00C0C62D ;_initBlock_33+848
0x636A	0x07000301 ;_initBlock_33+852
0x636E	0x08002C01 ;_initBlock_33+856
0x6372	0x00C0C62D ;_initBlock_33+860
0x6376	0x07000301 ;_initBlock_33+864
0x637A	0x08005802 ;_initBlock_33+868
0x637E	0x00C0C62D ;_initBlock_33+872
0x6382	0x07000301 ;_initBlock_33+876
0x6386	0x08008403 ;_initBlock_33+880
0x638A	0x00C0C62D ;_initBlock_33+884
0x638E	0x07000301 ;_initBlock_33+888
0x6392	0x01001027 ;_initBlock_33+892
0x6396	0x0080C3C9 ;_initBlock_33+896
0x639A	0x07000301 ;_initBlock_33+900
0x639E	0x01404B4C ;_initBlock_33+904
0x63A2	0x0080C3C9 ;_initBlock_33+908
0x63A6	0x0700031B ;_initBlock_33+912
0x63AA	0x04D00700 ;_initBlock_33+916
0x63AE	0x00C0C62D ;_initBlock_33+920
0x63B2	0xD602A400 ;_initBlock_33+924 : RF_MODEM_OOK_CNT1_11_850 at 0x63B3
0x63B6	0x019B0381 ;_initBlock_33+928
0x63BA	0x020CFF80 ;_initBlock_33+932
0x63BE	0x83D602A4 ;_initBlock_33+936
0x63C2	0x8001E700 ;_initBlock_33+940
0x63C6	0xA4020CFF ;_initBlock_33+944
0x63CA	0x0083D602 ;_initBlock_33+948
0x63CE	0xFF8001E7 ;_initBlock_33+952
0x63D2	0x03A4020C ;_initBlock_33+956
0x63D6	0x110103D6 ;_initBlock_33+960
0x63DA	0x0CFF8001 ;_initBlock_33+964
0x63DE	0xD603A402 ;_initBlock_33+968
0x63E2	0x01550103 ;_initBlock_33+972
0x63E6	0x020CFF80 ;_initBlock_33+976
0x63EA	0x03D603A4 ;_initBlock_33+980
0x63EE	0x80010001 ;_initBlock_33+984
0x63F2	0xA4020CFF ;_initBlock_33+988
0x63F6	0x0003D603 ;_initBlock_33+992
0x63FA	0xFF800180 ;_initBlock_33+996
0x63FE	0x03A4020C ;_initBlock_33+1000
0x6402	0x800003D6 ;_initBlock_33+1004
0x6406	0x0CFF8001 ;_initBlock_33+1008
0x640A	0xD603A402 ;_initBlock_33+1012
0x640E	0x01D50003 ;_initBlock_33+1016
0x6412	0x020CFF80 ;_initBlock_33+1020
0x6416	0x03D603A4 ;_initBlock_33+1024
0x641A	0x8001D500 ;_initBlock_33+1028
0x641E	0xA4020CFF ;_initBlock_33+1032
0x6422	0x0281D602 ;_initBlock_33+1036
0x6426	0xFF8001B4 ;_initBlock_33+1040
0x642A	0x020C ;_initBlock_33+1044
; end of _initBlock_33
;DriverRF4463PROMain.c,211 :: _RF_MODEM_OOK_CNT1_11_433 [121]
0x642C	0x83D602A4 ;_RF_MODEM_OOK_CNT1_11_433+0
0x6430	0x8001AD00 ;_RF_MODEM_OOK_CNT1_11_433+4
0x6434	0xA4000CFF ;_RF_MODEM_OOK_CNT1_11_433+8
0x6438	0x0083D602 ;_RF_MODEM_OOK_CNT1_11_433+12
0x643C	0xFF8001AD ;_RF_MODEM_OOK_CNT1_11_433+16
0x6440	0x03A4000C ;_RF_MODEM_OOK_CNT1_11_433+20
0x6444	0xCC0003D6 ;_RF_MODEM_OOK_CNT1_11_433+24
0x6448	0x0CFF8001 ;_RF_MODEM_OOK_CNT1_11_433+28
0x644C	0xD603A400 ;_RF_MODEM_OOK_CNT1_11_433+32
0x6450	0x01CC0003 ;_RF_MODEM_OOK_CNT1_11_433+36
0x6454	0x000CFF80 ;_RF_MODEM_OOK_CNT1_11_433+40
0x6458	0x03D603A4 ;_RF_MODEM_OOK_CNT1_11_433+44
0x645C	0x80010001 ;_RF_MODEM_OOK_CNT1_11_433+48
0x6460	0xA4000CFF ;_RF_MODEM_OOK_CNT1_11_433+52
0x6464	0x0003D603 ;_RF_MODEM_OOK_CNT1_11_433+56
0x6468	0xFF800180 ;_RF_MODEM_OOK_CNT1_11_433+60
0x646C	0x03A4000C ;_RF_MODEM_OOK_CNT1_11_433+64
0x6470	0x400003D6 ;_RF_MODEM_OOK_CNT1_11_433+68
0x6474	0x0CFF8001 ;_RF_MODEM_OOK_CNT1_11_433+72
0x6478	0xD603A400 ;_RF_MODEM_OOK_CNT1_11_433+76
0x647C	0x012B0003 ;_RF_MODEM_OOK_CNT1_11_433+80
0x6480	0x000CFF80 ;_RF_MODEM_OOK_CNT1_11_433+84
0x6484	0x03D603A4 ;_RF_MODEM_OOK_CNT1_11_433+88
0x6488	0x8001D500 ;_RF_MODEM_OOK_CNT1_11_433+92
0x648C	0xA4000CFF ;_RF_MODEM_OOK_CNT1_11_433+96
0x6490	0x0003D603 ;_RF_MODEM_OOK_CNT1_11_433+100
0x6494	0xFF8001D5 ;_RF_MODEM_OOK_CNT1_11_433+104
0x6498	0x02A4000C ;_RF_MODEM_OOK_CNT1_11_433+108
0x649C	0xB40281D6 ;_RF_MODEM_OOK_CNT1_11_433+112
0x64A0	0x0CFF8001 ;_RF_MODEM_OOK_CNT1_11_433+116
0x64A4	0x00 ;_RF_MODEM_OOK_CNT1_11_433+120
; end of _RF_MODEM_OOK_CNT1_11_433
;__Lib_GPIO_32F4xx_Defs.c,801 :: __GPIO_MODULE_USART1_PB67 [108]
0x64A8	0x00000716 ;__GPIO_MODULE_USART1_PB67+0
0x64AC	0x00000717 ;__GPIO_MODULE_USART1_PB67+4
0x64B0	0xFFFFFFFF ;__GPIO_MODULE_USART1_PB67+8
0x64B4	0x00000000 ;__GPIO_MODULE_USART1_PB67+12
0x64B8	0x00000000 ;__GPIO_MODULE_USART1_PB67+16
0x64BC	0x00000000 ;__GPIO_MODULE_USART1_PB67+20
0x64C0	0x00000000 ;__GPIO_MODULE_USART1_PB67+24
0x64C4	0x00000000 ;__GPIO_MODULE_USART1_PB67+28
0x64C8	0x00000000 ;__GPIO_MODULE_USART1_PB67+32
0x64CC	0x00000000 ;__GPIO_MODULE_USART1_PB67+36
0x64D0	0x00000000 ;__GPIO_MODULE_USART1_PB67+40
0x64D4	0x00000000 ;__GPIO_MODULE_USART1_PB67+44
0x64D8	0x00000000 ;__GPIO_MODULE_USART1_PB67+48
0x64DC	0x00000818 ;__GPIO_MODULE_USART1_PB67+52
0x64E0	0x00000818 ;__GPIO_MODULE_USART1_PB67+56
0x64E4	0x00000000 ;__GPIO_MODULE_USART1_PB67+60
0x64E8	0x00000000 ;__GPIO_MODULE_USART1_PB67+64
0x64EC	0x00000000 ;__GPIO_MODULE_USART1_PB67+68
0x64F0	0x00000000 ;__GPIO_MODULE_USART1_PB67+72
0x64F4	0x00000000 ;__GPIO_MODULE_USART1_PB67+76
0x64F8	0x00000000 ;__GPIO_MODULE_USART1_PB67+80
0x64FC	0x00000000 ;__GPIO_MODULE_USART1_PB67+84
0x6500	0x00000000 ;__GPIO_MODULE_USART1_PB67+88
0x6504	0x00000000 ;__GPIO_MODULE_USART1_PB67+92
0x6508	0x00000000 ;__GPIO_MODULE_USART1_PB67+96
0x650C	0x00000000 ;__GPIO_MODULE_USART1_PB67+100
0x6510	0x00000000 ;__GPIO_MODULE_USART1_PB67+104
; end of __GPIO_MODULE_USART1_PB67
;__Lib_GPIO_32F4xx_Defs.c,745 :: __GPIO_MODULE_SPI1_PB345 [108]
0x6514	0x00000513 ;__GPIO_MODULE_SPI1_PB345+0
0x6518	0x00000514 ;__GPIO_MODULE_SPI1_PB345+4
0x651C	0x00000515 ;__GPIO_MODULE_SPI1_PB345+8
0x6520	0xFFFFFFFF ;__GPIO_MODULE_SPI1_PB345+12
0x6524	0x00000000 ;__GPIO_MODULE_SPI1_PB345+16
0x6528	0x00000000 ;__GPIO_MODULE_SPI1_PB345+20
0x652C	0x00000000 ;__GPIO_MODULE_SPI1_PB345+24
0x6530	0x00000000 ;__GPIO_MODULE_SPI1_PB345+28
0x6534	0x00000000 ;__GPIO_MODULE_SPI1_PB345+32
0x6538	0x00000000 ;__GPIO_MODULE_SPI1_PB345+36
0x653C	0x00000000 ;__GPIO_MODULE_SPI1_PB345+40
0x6540	0x00000000 ;__GPIO_MODULE_SPI1_PB345+44
0x6544	0x00000000 ;__GPIO_MODULE_SPI1_PB345+48
0x6548	0x00000818 ;__GPIO_MODULE_SPI1_PB345+52
0x654C	0x00000818 ;__GPIO_MODULE_SPI1_PB345+56
0x6550	0x00000818 ;__GPIO_MODULE_SPI1_PB345+60
0x6554	0xFFFFFFFF ;__GPIO_MODULE_SPI1_PB345+64
0x6558	0x00000000 ;__GPIO_MODULE_SPI1_PB345+68
0x655C	0x00000000 ;__GPIO_MODULE_SPI1_PB345+72
0x6560	0x00000000 ;__GPIO_MODULE_SPI1_PB345+76
0x6564	0x00000000 ;__GPIO_MODULE_SPI1_PB345+80
0x6568	0x00000000 ;__GPIO_MODULE_SPI1_PB345+84
0x656C	0x00000000 ;__GPIO_MODULE_SPI1_PB345+88
0x6570	0x00000000 ;__GPIO_MODULE_SPI1_PB345+92
0x6574	0x00000000 ;__GPIO_MODULE_SPI1_PB345+96
0x6578	0x00000000 ;__GPIO_MODULE_SPI1_PB345+100
0x657C	0x00000000 ;__GPIO_MODULE_SPI1_PB345+104
; end of __GPIO_MODULE_SPI1_PB345
;DriverRF4463PROMain.c,0 :: ?ICSvRF4463MainCommandProcessor_ucCommand_L0 [32]
0x6580	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+0
0x6584	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+4
0x6588	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+8
0x658C	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+12
0x6590	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+16
0x6594	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+20
0x6598	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+24
0x659C	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+28
; end of ?ICSvRF4463MainCommandProcessor_ucCommand_L0
;DriverRF4463PROMain.c,0 :: ?ICSvRF4463MainCommandProcessor_ulArgument_L0 [4]
0x65A0	0x00000000 ;?ICSvRF4463MainCommandProcessor_ulArgument_L0+0
; end of ?ICSvRF4463MainCommandProcessor_ulArgument_L0
;DriverRF4463PROMain.c,0 :: ?ICSvRF4463MainCommandProcessor_ucLongArgument_L0 [64]
0x65A4	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+0
0x65A8	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+4
0x65AC	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+8
0x65B0	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+12
0x65B4	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+16
0x65B8	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+20
0x65BC	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+24
0x65C0	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+28
0x65C4	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+32
0x65C8	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+36
0x65CC	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+40
0x65D0	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+44
0x65D4	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+48
0x65D8	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+52
0x65DC	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+56
0x65E0	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+60
; end of ?ICSvRF4463MainCommandProcessor_ucLongArgument_L0
;,0 :: _initBlock_40 [2]
; Containing: ?ICSvRF4463MainCommandProcessor_ucCounterBuffer_L0 [1]
;             ?ICSvRF4463MainCommandProcessor_ucCounterCommand_L0 [1]
0x65E4	0x0000 ;_initBlock_40+0 : ?ICSvRF4463MainCommandProcessor_ucCounterBuffer_L0 at 0x65E4 : ?ICSvRF4463MainCommandProcessor_ucCounterCommand_L0 at 0x65E5
; end of _initBlock_40
;,0 :: _initBlock_41 [100]
; Containing: ?ICSvRF4463MainCommandProcessor_ucCounterLongArgument_L0 [1]
;             RF_MODEM_AGC_WINDOW_SIZE_9_433 [99]
0x65E6	0xABAB1100 ;_initBlock_41+0 : ?ICSvRF4463MainCommandProcessor_ucCounterLongArgument_L0 at 0x65E6 : RF_MODEM_AGC_WINDOW_SIZE_9_433 at 0x65E7
0x65EA	0x00141A00 ;_initBlock_41+4
0x65EE	0x56112B00 ;_initBlock_41+8
0x65F2	0xA01A0056 ;_initBlock_41+12
0x65F6	0x112A0000 ;_initBlock_41+16
0x65FA	0x1A002B2B ;_initBlock_41+20
0x65FE	0x29000050 ;_initBlock_41+24
0x6602	0x00151511 ;_initBlock_41+28
0x6606	0x0000281A ;_initBlock_41+32
0x660A	0x0E0E1128 ;_initBlock_41+36
0x660E	0x55211A00 ;_initBlock_41+40
0x6612	0x0E112800 ;_initBlock_41+44
0x6616	0x101A000E ;_initBlock_41+48
0x661A	0x112800AB ;_initBlock_41+52
0x661E	0x1A000E0E ;_initBlock_41+56
0x6622	0x28005508 ;_initBlock_41+60
0x6626	0x000E0E11 ;_initBlock_41+64
0x662A	0x008E051A ;_initBlock_41+68
0x662E	0x0D0D2228 ;_initBlock_41+72
0x6632	0x00321A00 ;_initBlock_41+76
0x6636	0x07222800 ;_initBlock_41+80
0x663A	0x191A0007 ;_initBlock_41+84
0x663E	0x1127009A ;_initBlock_41+88
0x6642	0x1A00CDCD ;_initBlock_41+92
0x6646	0x2B000030 ;_initBlock_41+96
; end of _initBlock_41
;,0 :: _initBlock_42 [198]
; Containing: RF_MODEM_AGC_WINDOW_SIZE_9_850 [99]
;             RF_MODEM_BCR_OSR_1_9_433 [99]
0x664A	0x00ABAB11 ;_initBlock_42+0 : RF_MODEM_AGC_WINDOW_SIZE_9_850 at 0x664A
0x664E	0x00FFFF02 ;_initBlock_42+4
0x6652	0xABAB112B ;_initBlock_42+8
0x6656	0xFFFF0200 ;_initBlock_42+12
0x665A	0x56112B00 ;_initBlock_42+16
0x665E	0xD5020056 ;_initBlock_42+20
0x6662	0x112A0055 ;_initBlock_42+24
0x6666	0x02002B2B ;_initBlock_42+28
0x666A	0x2900AB6A ;_initBlock_42+32
0x666E	0x00151511 ;_initBlock_42+36
0x6672	0x00AB4202 ;_initBlock_42+40
0x6676	0x0E0E1128 ;_initBlock_42+44
0x667A	0x55210200 ;_initBlock_42+48
0x667E	0x0E112800 ;_initBlock_42+52
0x6682	0x1002000E ;_initBlock_42+56
0x6686	0x112800AB ;_initBlock_42+60
0x668A	0x02000E0E ;_initBlock_42+64
0x668E	0x2800AB10 ;_initBlock_42+68
0x6692	0x000D0D22 ;_initBlock_42+72
0x6696	0x0000321A ;_initBlock_42+76
0x669A	0x07072228 ;_initBlock_42+80
0x669E	0x9A191A00 ;_initBlock_42+84
0x66A2	0xCD112700 ;_initBlock_42+88
0x66A6	0x301A00CD ;_initBlock_42+92
0x66AA	0x032B0000 ;_initBlock_42+96 : RF_MODEM_BCR_OSR_1_9_433 at 0x66AD
0x66AE	0xC6A7000D ;_initBlock_42+100
0x66B2	0xC2025400 ;_initBlock_42+104
0x66B6	0x4F018701 ;_initBlock_42+108
0x66BA	0x02A8008B ;_initBlock_42+112
0x66BE	0x02C300C2 ;_initBlock_42+116
0x66C2	0x1A02179F ;_initBlock_42+120
0x66C6	0x62000002 ;_initBlock_42+124
0x66CA	0x072D3E05 ;_initBlock_42+128
0x66CE	0x000002FF ;_initBlock_42+132
0x66D2	0x44DD0741 ;_initBlock_42+136
0x66D6	0x0002FF07 ;_initBlock_42+140
0x66DA	0xDD074100 ;_initBlock_42+144
0x66DE	0x02FF0744 ;_initBlock_42+148
0x66E2	0x07410000 ;_initBlock_42+152
0x66E6	0xFF0744DD ;_initBlock_42+156
0x66EA	0x41000002 ;_initBlock_42+160
0x66EE	0x0744DD07 ;_initBlock_42+164
0x66F2	0x000002FF ;_initBlock_42+168
0x66F6	0x7B5E0475 ;_initBlock_42+172
0x66FA	0x00029A05 ;_initBlock_42+176
0x66FE	0x88083C00 ;_initBlock_42+180
0x6702	0x02FF0789 ;_initBlock_42+184
0x6706	0x00AA0300 ;_initBlock_42+188
0x670A	0x4600CF8B ;_initBlock_42+192
0x670E	0xC202 ;_initBlock_42+196
; end of _initBlock_42
;,0 :: _initBlock_43 [134]
; Containing: RF_MODEM_BCR_OSR_1_9_850 [99]
;             ?ICS?lstr3_DriverRF4463PROMain [35]
0x6710	0xA7000D03 ;_initBlock_43+0 : RF_MODEM_BCR_OSR_1_9_850 at 0x6710
0x6714	0x025400C6 ;_initBlock_43+4
0x6718	0x000D03C2 ;_initBlock_43+8
0x671C	0x5400C6A7 ;_initBlock_43+12
0x6720	0x8701C202 ;_initBlock_43+16
0x6724	0x008B4F01 ;_initBlock_43+20
0x6728	0x00C202A8 ;_initBlock_43+24
0x672C	0x179F02C3 ;_initBlock_43+28
0x6730	0x00029301 ;_initBlock_43+32
0x6734	0x3E056200 ;_initBlock_43+36
0x6738	0x0204052D ;_initBlock_43+40
0x673C	0x07410000 ;_initBlock_43+44
0x6740	0xFF0744DD ;_initBlock_43+48
0x6744	0x41000002 ;_initBlock_43+52
0x6748	0x0744DD07 ;_initBlock_43+56
0x674C	0x000002FF ;_initBlock_43+60
0x6750	0x44DD0741 ;_initBlock_43+64
0x6754	0x0002FF07 ;_initBlock_43+68
0x6758	0x5E047500 ;_initBlock_43+72
0x675C	0x029A057B ;_initBlock_43+76
0x6760	0x083C0000 ;_initBlock_43+80
0x6764	0xFF078988 ;_initBlock_43+84
0x6768	0xAA030002 ;_initBlock_43+88
0x676C	0x00CF8B00 ;_initBlock_43+92
0x6770	0x5BC20246 ;_initBlock_43+96 : ?ICS?lstr3_DriverRF4463PROMain at 0x6773
0x6774	0x53595320 ;_initBlock_43+100
0x6778	0x4D545320 ;_initBlock_43+104
0x677C	0x34463233 ;_initBlock_43+108
0x6780	0x43563730 ;_initBlock_43+112
0x6784	0x53205D20 ;_initBlock_43+116
0x6788	0x74726174 ;_initBlock_43+120
0x678C	0x73795320 ;_initBlock_43+124
0x6790	0x0D6D6574 ;_initBlock_43+128
0x6794	0x000A ;_initBlock_43+132
; end of _initBlock_43
;,0 :: _initBlock_44 [40]
; Containing: ?ICS?lstr4_DriverRF4463PROMain [37]
;             ?ICS?lstr5_DriverRF4463PROMain [3]
0x6796	0x5953205B ;_initBlock_44+0 : ?ICS?lstr4_DriverRF4463PROMain at 0x6796
0x679A	0x54532053 ;_initBlock_44+4
0x679E	0x4632334D ;_initBlock_44+8
0x67A2	0x56373034 ;_initBlock_44+12
0x67A6	0x205D2043 ;_initBlock_44+16
0x67AA	0x52204652 ;_initBlock_44+20
0x67AE	0x6F696461 ;_initBlock_44+24
0x67B2	0x61657220 ;_initBlock_44+28
0x67B6	0x0A0D7964 ;_initBlock_44+32
0x67BA	0x000A0D00 ;_initBlock_44+36 : ?ICS?lstr5_DriverRF4463PROMain at 0x67BB
; end of _initBlock_44
;,0 :: _initBlock_45 [268]
; Containing: ?ICS?lstr6_DriverRF4463PROMain [15]
;             RF_MODEM_TX_RAMP_DELAY_8_850 [88]
;             RF_MODEM_TX_RAMP_DELAY_8_433 [88]
;             RF_SYNTH_PFDCP_CPFF_7 [77]
0x67BE	0x5243205B ;_initBlock_45+0 : ?ICS?lstr6_DriverRF4463PROMain at 0x67BE
0x67C2	0x205D2043 ;_initBlock_45+4
0x67C6	0x6C696146 ;_initBlock_45+8
0x67CA	0x01000A0D ;_initBlock_45+12 : RF_MODEM_TX_RAMP_DELAY_8_850 at 0x67CD
0x67CE	0xC0030880 ;_initBlock_45+16
0x67D2	0x01203200 ;_initBlock_45+20
0x67D6	0xC0030880 ;_initBlock_45+24
0x67DA	0x01203000 ;_initBlock_45+28
0x67DE	0xC0030880 ;_initBlock_45+32
0x67E2	0x01203000 ;_initBlock_45+36
0x67E6	0xC0030800 ;_initBlock_45+40
0x67EA	0x01203000 ;_initBlock_45+44
0x67EE	0xC0030800 ;_initBlock_45+48
0x67F2	0x01203000 ;_initBlock_45+52
0x67F6	0xC0030800 ;_initBlock_45+56
0x67FA	0x01102000 ;_initBlock_45+60
0x67FE	0xC0030800 ;_initBlock_45+64
0x6802	0x01101000 ;_initBlock_45+68
0x6806	0xC0030800 ;_initBlock_45+72
0x680A	0x01201000 ;_initBlock_45+76
0x680E	0x80030800 ;_initBlock_45+80
0x6812	0x01300000 ;_initBlock_45+84
0x6816	0x80030800 ;_initBlock_45+88
0x681A	0x01300000 ;_initBlock_45+92
0x681E	0x80030880 ;_initBlock_45+96
0x6822	0x01217200 ;_initBlock_45+100 : RF_MODEM_TX_RAMP_DELAY_8_433 at 0x6825
0x6826	0x80030880 ;_initBlock_45+104
0x682A	0x01207000 ;_initBlock_45+108
0x682E	0x80030880 ;_initBlock_45+112
0x6832	0x01207000 ;_initBlock_45+116
0x6836	0x80030800 ;_initBlock_45+120
0x683A	0x01207000 ;_initBlock_45+124
0x683E	0x80030800 ;_initBlock_45+128
0x6842	0x01207000 ;_initBlock_45+132
0x6846	0x80030800 ;_initBlock_45+136
0x684A	0x01103000 ;_initBlock_45+140
0x684E	0x80030800 ;_initBlock_45+144
0x6852	0x01102000 ;_initBlock_45+148
0x6856	0x80030800 ;_initBlock_45+152
0x685A	0x01101000 ;_initBlock_45+156
0x685E	0x80030800 ;_initBlock_45+160
0x6862	0x01201000 ;_initBlock_45+164
0x6866	0x80030800 ;_initBlock_45+168
0x686A	0x01300000 ;_initBlock_45+172
0x686E	0x80030800 ;_initBlock_45+176
0x6872	0x01300000 ;_initBlock_45+180
0x6876	0x80030880 ;_initBlock_45+184
0x687A	0x2C217200 ;_initBlock_45+188 : RF_SYNTH_PFDCP_CPFF_7 at 0x687D
0x687E	0x0C040B0E ;_initBlock_45+192
0x6882	0x0E2C0373 ;_initBlock_45+196
0x6886	0x730C040B ;_initBlock_45+200
0x688A	0x0B0E2C03 ;_initBlock_45+204
0x688E	0x03730C04 ;_initBlock_45+208
0x6892	0x040B0E2C ;_initBlock_45+212
0x6896	0x2C03730C ;_initBlock_45+216
0x689A	0x0C040B0E ;_initBlock_45+220
0x689E	0x0E2C0373 ;_initBlock_45+224
0x68A2	0x730C040B ;_initBlock_45+228
0x68A6	0x0B043403 ;_initBlock_45+232
0x68AA	0x03700704 ;_initBlock_45+236
0x68AE	0x040B0434 ;_initBlock_45+240
0x68B2	0x01037007 ;_initBlock_45+244
0x68B6	0x02050B05 ;_initBlock_45+248
0x68BA	0x05010300 ;_initBlock_45+252
0x68BE	0x0002050B ;_initBlock_45+256
0x68C2	0x0B0E2C03 ;_initBlock_45+260
0x68C6	0x03730C04 ;_initBlock_45+264
; end of _initBlock_45
;,0 :: _initBlock_46 [154]
; Containing: RF_MODEM_AFC_GEAR_7_850 [77]
;             RF_MODEM_AFC_GEAR_7_433 [77]
0x68CA	0x01803604 ;_initBlock_46+0 : RF_MODEM_AFC_GEAR_7_850 at 0x68CA
0x68CE	0x04803052 ;_initBlock_46+4
0x68D2	0x30038036 ;_initBlock_46+8
0x68D6	0x3604807F ;_initBlock_46+12
0x68DA	0x10170780 ;_initBlock_46+16
0x68DE	0x80120080 ;_initBlock_46+20
0x68E2	0xA0B1042A ;_initBlock_46+24
0x68E6	0x54801200 ;_initBlock_46+28
0x68EA	0x00A09A02 ;_initBlock_46+32
0x68EE	0x01A88012 ;_initBlock_46+36
0x68F2	0x1200A08F ;_initBlock_46+40
0x68F6	0x1F015081 ;_initBlock_46+44
0x68FA	0x832300A0 ;_initBlock_46+48
0x68FE	0xA08400EF ;_initBlock_46+52
0x6902	0xFF8F2300 ;_initBlock_46+56
0x6906	0x00E0C900 ;_initBlock_46+60
0x690A	0x01FF8F23 ;_initBlock_46+64
0x690E	0x3604E023 ;_initBlock_46+68
0x6912	0x69500180 ;_initBlock_46+72
0x6916	0x80360480 ;_initBlock_46+76 : RF_MODEM_AFC_GEAR_7_433 at 0x6917
0x691A	0x80AF3003 ;_initBlock_46+80
0x691E	0x07803604 ;_initBlock_46+84
0x6922	0x0080DD14 ;_initBlock_46+88
0x6926	0x042A8012 ;_initBlock_46+92
0x692A	0x1200A03A ;_initBlock_46+96
0x692E	0x5A025480 ;_initBlock_46+100
0x6932	0x801200A0 ;_initBlock_46+104
0x6936	0xE06801A8 ;_initBlock_46+108
0x693A	0x50811200 ;_initBlock_46+112
0x693E	0x00E02001 ;_initBlock_46+116
0x6942	0x019F8212 ;_initBlock_46+120
0x6946	0x2300E003 ;_initBlock_46+124
0x694A	0x7700DD87 ;_initBlock_46+128
0x694E	0x8F2300E0 ;_initBlock_46+132
0x6952	0xE0C900FF ;_initBlock_46+136
0x6956	0xFF8F2300 ;_initBlock_46+140
0x695A	0x04E02301 ;_initBlock_46+144
0x695E	0x50018036 ;_initBlock_46+148
0x6962	0x8069 ;_initBlock_46+152
; end of _initBlock_46
;DriverRF4463PROMain.c,407 :: _ucRF4463TXdata [66]
0x6964	0x01010101 ;_ucRF4463TXdata+0
0x6968	0x44434241 ;_ucRF4463TXdata+4
0x696C	0x48474645 ;_ucRF4463TXdata+8
0x6970	0x4C4B4A49 ;_ucRF4463TXdata+12
0x6974	0x504F4E4D ;_ucRF4463TXdata+16
0x6978	0x54535251 ;_ucRF4463TXdata+20
0x697C	0x58575655 ;_ucRF4463TXdata+24
0x6980	0x42415A59 ;_ucRF4463TXdata+28
0x6984	0x46454443 ;_ucRF4463TXdata+32
0x6988	0x4A494847 ;_ucRF4463TXdata+36
0x698C	0x4E4D4C4B ;_ucRF4463TXdata+40
0x6990	0x5251504F ;_ucRF4463TXdata+44
0x6994	0x56555453 ;_ucRF4463TXdata+48
0x6998	0x5A595857 ;_ucRF4463TXdata+52
0x699C	0x44434241 ;_ucRF4463TXdata+56
0x69A0	0x48474645 ;_ucRF4463TXdata+60
0x69A4	0xF311 ;_ucRF4463TXdata+64
; end of _ucRF4463TXdata
;DriverRF4463PROMain.c,0 :: ?ICS_rx_cnt [4]
0x69A8	0x00000000 ;?ICS_rx_cnt+0
; end of ?ICS_rx_cnt
;__Lib_System_4XX.c,0 :: ?ICS__Lib_System_4XX_APBAHBPrescTable [16]
0x69AC	0x00000000 ;?ICS__Lib_System_4XX_APBAHBPrescTable+0
0x69B0	0x04030201 ;?ICS__Lib_System_4XX_APBAHBPrescTable+4
0x69B4	0x04030201 ;?ICS__Lib_System_4XX_APBAHBPrescTable+8
0x69B8	0x09080706 ;?ICS__Lib_System_4XX_APBAHBPrescTable+12
; end of ?ICS__Lib_System_4XX_APBAHBPrescTable
;,0 :: _initBlock_50 [34]
; Containing: ?ICS?lstr1_DriverRF4463PROMain [19]
;             tx_test_aa_data [14]
;             ?ICSStrToLong_counter_L0 [1]
0x69BC	0x4155205B ;_initBlock_50+0 : ?ICS?lstr1_DriverRF4463PROMain at 0x69BC
0x69C0	0x20315452 ;_initBlock_50+4
0x69C4	0x5854205D ;_initBlock_50+8
0x69C8	0x544E4920 ;_initBlock_50+12
0x69CC	0xAA000A0D ;_initBlock_50+16 : tx_test_aa_data at 0x69CF
0x69D0	0xAAAAAAAA ;_initBlock_50+20
0x69D4	0xAAAAAAAA ;_initBlock_50+24
0x69D8	0xAAAAAAAA ;_initBlock_50+28
0x69DC	0x00AA ;_initBlock_50+32 : ?ICSStrToLong_counter_L0 at 0x69DD
; end of _initBlock_50
;__Lib_Conversions.c,0 :: ?ICSStrToLong_buf_str_L0 [10]
0x69DE	0x00000000 ;?ICSStrToLong_buf_str_L0+0
0x69E2	0x00000000 ;?ICSStrToLong_buf_str_L0+4
0x69E6	0x0000 ;?ICSStrToLong_buf_str_L0+8
; end of ?ICSStrToLong_buf_str_L0
;__Lib_Conversions.c,0 :: ?ICS__Lib_Conversions_Forward_Input_multiplier_L0 [8]
0x69E8	0x00000001 ;?ICS__Lib_Conversions_Forward_Input_multiplier_L0+0
0x69EC	0x00000000 ;?ICS__Lib_Conversions_Forward_Input_multiplier_L0+4
; end of ?ICS__Lib_Conversions_Forward_Input_multiplier_L0
;DriverRF4463PROMain.c,371 :: _RF_FRR_CTL_A_MODE_4_data [8]
0x69F0	0x00040211 ;_RF_FRR_CTL_A_MODE_4_data+0
0x69F4	0x00000000 ;_RF_FRR_CTL_A_MODE_4_data+4
; end of _RF_FRR_CTL_A_MODE_4_data
;,0 :: _initBlock_54 [12]
; Containing: RF_POWER_UP_data [7]
;             RF_MODEM_AGC_CONTROL_1_data [5]
0x69F8	0x01000102 ;_initBlock_54+0 : RF_POWER_UP_data at 0x69F8
0x69FC	0x1180C3C9 ;_initBlock_54+4 : RF_MODEM_AGC_CONTROL_1_data at 0x69FF
0x6A00	0xE2350120 ;_initBlock_54+8
; end of _initBlock_54
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0188      [16]    _Get_Fosc_kHz
0x0198     [248]    __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
0x0290     [506]    __Div_64x64_U
0x048C     [120]    __Lib_Conversions_Forward_Input
0x0504      [28]    _strlen
0x0520      [70]    _GPIO_Alternate_Function_Enable
0x0568     [132]    _RCC_GetClocksFrequency
0x05EC      [56]    _ucRf4463SPIByte
0x0624      [96]    _vUSARTStartMEMtoMEMZero
0x0684     [100]    _vRF4463RxStart
0x06E8      [26]    _vRF4463MainApplyChanges
0x0704      [30]    __Lib_UART_123_45_6_UARTx_Write
0x0724      [72]    _check_cts
0x076C      [52]    _memcmp
0x07A0     [284]    _StrToShort
0x08BC      [30]    _toupper
0x08DC      [66]    __Lib_SPI_123_SPIx_Init_Advanced
0x0920     [288]    _StrToInt
0x0A40     [180]    _StrToLong
0x0AF4     [168]    _GPIO_Clk_Enable
0x0B9C     [660]    __Lib_UART_123_45_6_UARTx_Init_Advanced
0x0E30     [128]    _vUSART1Start_TX
0x0EB0     [112]    _vRF4463RxStartTest
0x0F20      [84]    _vRF4463EnableRxInterrupt
0x0F74      [76]    _vRF4463TxStart
0x0FC0      [92]    _vUSARTStartMEMtoMEM
0x101C      [30]    _vUSARTCleanBuffer
0x103C      [60]    _vRF4463RxInit
0x1078     [188]    _spi_write_fifo
0x1134      [44]    _vRF4463FifoReset
0x1160    [2624]    _vRF4463MainCommandProcessor
0x1BA0      [76]    _vRF4463EnableTxInterrupt
0x1BEC     [182]    _vRF4463GPIO_SET
0x1CA4     [116]    _spi_write
0x1D18      [50]    __Lib_UART_123_45_6_UARTx_Write_Text
0x1D4C      [84]    _SPI1_Init_Advanced
0x1DA0     [568]    _GPIO_Config
0x1FD8     [120]    _NVIC_IntEnable
0x2050     [192]    _spi_read
0x2110     [604]    _rf_init_freq
0x236C      [40]    _UART1_Init_Advanced
0x2394      [88]    _InitTimer2
0x23EC      [24]    _GPIO_Digital_Input
0x2404      [92]    _vRF4463TxCont
0x2460     [132]    _spi_read_fifo
0x24E4      [76]    __Lib_System_4XX_SystemClockSetDefault
0x2530      [28]    _GPIO_Digital_Output
0x254C      [58]    ___FillZeros
0x2588      [20]    ___CC2DW
0x259C    [2948]    _vRF4463Init
0x3120     [156]    _VRF4463SDNReset
0x31BC      [74]    _vRF4463ClearInterrupts
0x3208      [50]    _vRF4463PartInfo
0x323C     [116]    _vUSARTReceivedFromUSART1
0x32B0      [28]    _UART1_Write_Text
0x32CC      [76]    _vUSARTConfigUSART1
0x3318     [180]    _vRF4463TxData
0x33CC       [6]    _vRF4463MainSetTXString
0x33D4      [52]    _vSPI1Init
0x3408      [36]    _Timer2_interrupt
0x342C     [308]    _vUARTISR
0x3560     [132]    _DMA2Strm7_interrupt
0x35E4      [28]    _Int_SPI1
0x3600      [64]    _vRF4463ISR
0x3640     [864]    __Lib_System_4XX_InitialSetUpRCCRCC2
0x39A0     [912]    _main
0x3D30      [36]    __Lib_System_4XX_InitialSetUpFosc
0x3D54      [42]    ___EnableFPU
0x3D80       [8]    ___GenExcept
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [8]    FARG_LongDoubleToStr_dnum
0x0000       [4]    FARG_FloatToStr_fnum
0x20000000    [4096]    _ucUSARTActiveBuffer1
0x20001000       [4]    _ulUSARTActiveBuffer1BytesReceived
0x20001004    [4096]    _ucUSART1RXBuffer
0x20002004       [4]    _ulUSART1ByteReceived
0x20002008       [4]    _fUSART1Buffer
0x2000200C      [10]    _CMD_RADIO_POWER_SET
0x20002016      [40]    _ANS_COMMAND_VALUE_ACCEPTED
0x2000203E      [32]    _ANS_COMMAND_VALUE_OUT_OF_RANGE
0x2000205E       [9]    _CMD_RADIO_BAND_SET
0x20002067       [9]    _CMD_RADIO_RATE_SET
0x20002070      [12]    _CMD_RADIO_CHANNEL_SET
0x2000207C       [1]    _ucRF4463FreqChannel
0x2000207D       [7]    _CMD_RADIO_BW_SET
0x20002084       [4]    _ulRF4463Step
0x20002088       [9]    _CMD_RADIO_MODE_SET
0x20002091       [1]    _ucUSARTNull
0x20002092       [5]    _ARG_RADIO_MODE_STBY
0x20002097      [34]    _ANS_COMMAND_MODE_STBY
0x200020B9       [8]    _ARG_RADIO_MODE_TX_CONT
0x200020C1      [34]    _ANS_COMMAND_MODE_TX_CONT
0x200020E3       [8]    _ARG_RADIO_MODE_RX_CONT
0x200020EB      [34]    _ANS_COMMAND_MODE_RX_CONT
0x2000210D      [10]    _ARG_RADIO_MODE_TX_MASTER
0x20002117      [36]    _ANS_COMMAND_MODE_TX_MASTER
0x2000213B       [9]    _ARG_RADIO_MODE_RX_SLAVE
0x20002144      [35]    _ANS_COMMAND_MODE_RX_SLAVE
0x20002167      [12]    _CMD_RADIO_PACKET_SEND
0x20002173      [12]    _CMD_RADIO_MATCH_BYTE_1_SET
0x2000217F       [1]    _ucRF4463ByteMatch1
0x20002180       [1]    _ucRF4463MatchEnabled
0x20002181       [1]    _ucRF4463MatchEnableReg
0x20002182      [12]    _CMD_RADIO_MATCH_BYTE_2_SET
0x2000218E       [1]    _ucRF4463ByteMatch2
0x2000218F      [12]    _CMD_RADIO_MATCH_BYTE_3_SET
0x2000219B       [1]    _ucRF4463ByteMatch3
0x2000219C      [12]    _CMD_RADIO_MATCH_BYTE_4_SET
0x200021A8       [1]    _ucRF4463ByteMatch4
0x200021A9      [11]    _CMD_RADIO_MATCH_MASK_1_SET
0x200021B4       [1]    _ucRF4463ByteMask1
0x200021B5      [11]    _CMD_RADIO_MATCH_MASK_2_SET
0x200021C0       [1]    _ucRF4463ByteMask2
0x200021C1      [11]    _CMD_RADIO_MATCH_MASK_3_SET
0x200021CC       [1]    _ucRF4463ByteMask3
0x200021CD      [11]    _CMD_RADIO_MATCH_MASK_4_SET
0x200021D8       [1]    _ucRF4463ByteMask4
0x200021D9      [12]    _CMD_RADIO_MATCH_UNSET
0x200021E5      [22]    _ANS_DEBUG_COMMAND_UNKNOWN
0x200021FB       [1]    DriverRF4463PROMain_ucRF4463IRQ
0x200021FC       [4]    _tx_cnt
0x20002200      [16]    _RF_MODEM_MOD_TYPE_12_data
0x20002210      [12]    _RF_MODEM_TX_RAMP_DELAY_8_data
0x2000221C      [13]    _RF_MODEM_AFC_GEAR_7_data
0x20002229      [15]    _RF_MODEM_OOK_CNT1_11_data
0x20002238      [16]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data
0x20002248      [16]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data
0x20002258      [16]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data
0x20002268      [13]    _RF_MODEM_AGC_WINDOW_SIZE_9_data
0x20002275      [13]    _RF_MODEM_BCR_OSR_1_9_data
0x20002282      [11]    _RF_SYNTH_PFDCP_CPFF_7_data
0x2000228D       [1]    _ucSPI1ByteReceived
0x2000228E       [1]    _ucData1
0x2000228F       [1]    _ucRF4463Power
0x20002290       [4]    _rx_cnt
0x20002294      [16]    __Lib_System_4XX_APBAHBPrescTable
0x200022A4       [1]    _ucRF4463Freq3
0x200022A5       [1]    _ucRF4463Freq2
0x200022A6       [1]    _ucRF4463Freq1
0x200022A7       [1]    _ucRF4463Rate
0x200022A8       [1]    _ucRF4463Mode
0x200022A9      [20]    _spi_read_buf
0x200022BD       [1]    _Flag
0x200022BE      [66]    _rx_buf
0x20002300       [2]    _rf_timeout
0x20002302       [1]    _reset_mode
0x20002304       [4]    _ulClk
0x20002308       [4]    ___System_CLOCK_IN_KHZ
0x2000230C       [4]    _SPI_Rd_Ptr
0x20002310       [4]    _SPI_Wr_Ptr
0x20002314       [4]    __VOLTAGE_RANGE
0x20002318       [4]    _UART_Wr_Ptr
0x2000231C       [4]    _UART_Rd_Ptr
0x20002320       [4]    _UART_Rdy_Ptr
0x20002324       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x3D88    [4096]    ?ICS_ucUSARTActiveBuffer1
0x4D88       [4]    ?ICS_ulUSARTActiveBuffer1BytesReceived
0x4D8C    [4096]    ?ICS_ucUSART1RXBuffer
0x5D8C       [4]    ?ICS_ulUSART1ByteReceived
0x5D90       [4]    ?ICS_fUSART1Buffer
0x5D94      [10]    ?ICS_CMD_RADIO_POWER_SET
0x5D9E      [40]    ?ICS_ANS_COMMAND_VALUE_ACCEPTED
0x5DC6      [32]    ?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE
0x5DE6       [9]    ?ICS_CMD_RADIO_BAND_SET
0x5DEF       [9]    ?ICS_CMD_RADIO_RATE_SET
0x5DF8      [12]    ?ICS_CMD_RADIO_CHANNEL_SET
0x5E04       [1]    ?ICS_ucRF4463FreqChannel
0x5E05       [7]    ?ICS_CMD_RADIO_BW_SET
0x5E0C       [4]    ?ICS_ulRF4463Step
0x5E10       [9]    ?ICS_CMD_RADIO_MODE_SET
0x5E19       [1]    ?ICS_ucUSARTNull
0x5E1A       [5]    ?ICS_ARG_RADIO_MODE_STBY
0x5E1F      [34]    ?ICS_ANS_COMMAND_MODE_STBY
0x5E41       [8]    ?ICS_ARG_RADIO_MODE_TX_CONT
0x5E49      [34]    ?ICS_ANS_COMMAND_MODE_TX_CONT
0x5E6B       [8]    ?ICS_ARG_RADIO_MODE_RX_CONT
0x5E73      [34]    ?ICS_ANS_COMMAND_MODE_RX_CONT
0x5E95      [10]    ?ICS_ARG_RADIO_MODE_TX_MASTER
0x5E9F      [36]    ?ICS_ANS_COMMAND_MODE_TX_MASTER
0x5EC3       [9]    ?ICS_ARG_RADIO_MODE_RX_SLAVE
0x5ECC      [35]    ?ICS_ANS_COMMAND_MODE_RX_SLAVE
0x5EEF      [12]    ?ICS_CMD_RADIO_PACKET_SEND
0x5EFB      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_1_SET
0x5F07       [1]    ?ICS_ucRF4463ByteMatch1
0x5F08       [1]    ?ICS_ucRF4463MatchEnabled
0x5F09       [1]    ?ICS_ucRF4463MatchEnableReg
0x5F0A      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_2_SET
0x5F16       [1]    ?ICS_ucRF4463ByteMatch2
0x5F17      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_3_SET
0x5F23       [1]    ?ICS_ucRF4463ByteMatch3
0x5F24      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_4_SET
0x5F30       [1]    ?ICS_ucRF4463ByteMatch4
0x5F31      [11]    ?ICS_CMD_RADIO_MATCH_MASK_1_SET
0x5F3C       [1]    ?ICS_ucRF4463ByteMask1
0x5F3D      [11]    ?ICS_CMD_RADIO_MATCH_MASK_2_SET
0x5F48       [1]    ?ICS_ucRF4463ByteMask2
0x5F49      [11]    ?ICS_CMD_RADIO_MATCH_MASK_3_SET
0x5F54       [1]    ?ICS_ucRF4463ByteMask3
0x5F55      [11]    ?ICS_CMD_RADIO_MATCH_MASK_4_SET
0x5F60       [1]    ?ICS_ucRF4463ByteMask4
0x5F61      [12]    ?ICS_CMD_RADIO_MATCH_UNSET
0x5F6D      [22]    ?ICS_ANS_DEBUG_COMMAND_UNKNOWN
0x5F83       [1]    ?ICSDriverRF4463PROMain_ucRF4463IRQ
0x5F84       [4]    ?ICS_tx_cnt
0x5F88      [16]    ?ICS_RF_MODEM_MOD_TYPE_12_data
0x5F98      [12]    ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data
0x5FA4      [13]    ?ICS_RF_MODEM_AFC_GEAR_7_data
0x5FB1      [15]    ?ICS_RF_MODEM_OOK_CNT1_11_data
0x5FC0      [16]    ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data
0x5FD0      [16]    ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data
0x5FE0      [16]    ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data
0x5FF0      [13]    ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data
0x5FFD      [13]    ?ICS_RF_MODEM_BCR_OSR_1_9_data
0x600A      [11]    ?ICS_RF_SYNTH_PFDCP_CPFF_7_data
0x6015       [1]    ?ICS_ucSPI1ByteReceived
0x6016       [1]    ?ICS_ucData1
0x6017     [132]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433
0x609B     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433
0x611F     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850
0x61A3     [132]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850
0x6227     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850
0x62AB     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433
0x632F     [132]    _RF_MODEM_MOD_TYPE_12
0x63B3     [121]    _RF_MODEM_OOK_CNT1_11_850
0x642C     [121]    _RF_MODEM_OOK_CNT1_11_433
0x64A8     [108]    __GPIO_MODULE_USART1_PB67
0x6514     [108]    __GPIO_MODULE_SPI1_PB345
0x6580      [32]    ?ICSvRF4463MainCommandProcessor_ucCommand_L0
0x65A0       [4]    ?ICSvRF4463MainCommandProcessor_ulArgument_L0
0x65A4      [64]    ?ICSvRF4463MainCommandProcessor_ucLongArgument_L0
0x65E4       [1]    ?ICSvRF4463MainCommandProcessor_ucCounterBuffer_L0
0x65E5       [1]    ?ICSvRF4463MainCommandProcessor_ucCounterCommand_L0
0x65E6       [1]    ?ICSvRF4463MainCommandProcessor_ucCounterLongArgument_L0
0x65E7      [99]    _RF_MODEM_AGC_WINDOW_SIZE_9_433
0x664A      [99]    _RF_MODEM_AGC_WINDOW_SIZE_9_850
0x66AD      [99]    _RF_MODEM_BCR_OSR_1_9_433
0x6710      [99]    _RF_MODEM_BCR_OSR_1_9_850
0x6773      [35]    ?ICS?lstr3_DriverRF4463PROMain
0x6796      [37]    ?ICS?lstr4_DriverRF4463PROMain
0x67BB       [3]    ?ICS?lstr5_DriverRF4463PROMain
0x67BE      [15]    ?ICS?lstr6_DriverRF4463PROMain
0x67CD      [88]    _RF_MODEM_TX_RAMP_DELAY_8_850
0x6825      [88]    _RF_MODEM_TX_RAMP_DELAY_8_433
0x687D      [77]    _RF_SYNTH_PFDCP_CPFF_7
0x68CA      [77]    _RF_MODEM_AFC_GEAR_7_850
0x6917      [77]    _RF_MODEM_AFC_GEAR_7_433
0x6964      [66]    _ucRF4463TXdata
0x69A8       [4]    ?ICS_rx_cnt
0x69AC      [16]    ?ICS__Lib_System_4XX_APBAHBPrescTable
0x69BC      [19]    ?ICS?lstr1_DriverRF4463PROMain
0x69CF      [14]    _tx_test_aa_data
0x69DD       [1]    ?ICSStrToLong_counter_L0
0x69DE      [10]    ?ICSStrToLong_buf_str_L0
0x69E8       [8]    ?ICS__Lib_Conversions_Forward_Input_multiplier_L0
0x69F0       [8]    _RF_FRR_CTL_A_MODE_4_data
0x69F8       [7]    _RF_POWER_UP_data
0x69FF       [5]    _RF_MODEM_AGC_CONTROL_1_data
