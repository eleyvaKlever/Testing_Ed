;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22/12/2020 02:37:08 p. m.
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0x4FFC2000  	536891388
0x0004	0x255D0000  	9565
0x0008	0x2AD50000  	10965
0x000C	0x2AD50000  	10965
0x0010	0x2AD50000  	10965
0x0014	0x2AD50000  	10965
0x0018	0x2AD50000  	10965
0x001C	0x2AD50000  	10965
0x0020	0x2AD50000  	10965
0x0024	0x2AD50000  	10965
0x0028	0x2AD50000  	10965
0x002C	0x2AD50000  	10965
0x0030	0x2AD50000  	10965
0x0034	0x2AD50000  	10965
0x0038	0x2AD50000  	10965
0x003C	0x2AD50000  	10965
0x0040	0x2AD50000  	10965
0x0044	0x2AD50000  	10965
0x0048	0x2AD50000  	10965
0x004C	0x2AD50000  	10965
0x0050	0x2AD50000  	10965
0x0054	0x24E50000  	9445
0x0058	0x2AD50000  	10965
0x005C	0x2AD50000  	10965
0x0060	0x2AD50000  	10965
0x0064	0x2AD50000  	10965
0x0068	0x2AD50000  	10965
0x006C	0x2AD50000  	10965
0x0070	0x2AD50000  	10965
0x0074	0x2AD50000  	10965
0x0078	0x2AD50000  	10965
0x007C	0x23890000  	9097
0x0080	0x2AD50000  	10965
0x0084	0x2AD50000  	10965
0x0088	0x2AD50000  	10965
0x008C	0x2AD50000  	10965
0x0090	0x2AD50000  	10965
0x0094	0x2AD50000  	10965
0x0098	0x2AD50000  	10965
0x009C	0x2AD50000  	10965
0x00A0	0x2AD50000  	10965
0x00A4	0x2AD50000  	10965
0x00A8	0x25390000  	9529
0x00AC	0x23B50000  	9141
0x00B0	0x2AD50000  	10965
0x00B4	0x2AD50000  	10965
0x00B8	0x2AD50000  	10965
0x00BC	0x2AD50000  	10965
; end of ____SysVT
_main:
;DriverRF4463PROMain.c, 493 :: 		void main() {
0x255C	0xB09E    SUB	SP, SP, #120
0x255E	0xF000F9CF  BL	10496
0x2562	0xF002F83D  BL	17888
0x2566	0xF000FAB9  BL	10972
0x256A	0xF001FFEB  BL	17732
;DriverRF4463PROMain.c, 497 :: 		Delay_ms( 2000 );                    // delay de depuracion
0x256E	0x4F02    LDR	R7, [PC, #8]
L_main325:
0x2570	0x1E7F    SUBS	R7, R7, #1
0x2572	0xD1FD    BNE	L_main325
0x2574	0xBF00    NOP
0x2576	0xE002    B	#4
0x2578	0xC2A900A2  	#10666665
0x257C	0xBF00    NOP
;DriverRF4463PROMain.c, 505 :: 		GPIO_Digital_Input( &GPIOH_BASE, _GPIO_PINMASK_0 );      //nIRQ
0x257E	0x2101    MOVS	R1, #1
0x2580	0x4888    LDR	R0, [PC, #544]
0x2582	0xF7FFF817  BL	_GPIO_Digital_Input+0
;DriverRF4463PROMain.c, 506 :: 		GPIO_Digital_Output( &GPIOH_BASE, _GPIO_PINMASK_1 );     //SDN
0x2586	0x2102    MOVS	R1, #2
0x2588	0x4886    LDR	R0, [PC, #536]
0x258A	0xF7FEFFBD  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 508 :: 		GPIO_Digital_Output( &GPIOB_BASE, _GPIO_PINMASK_12 );    // nSel
0x258E	0x4986    LDR	R1, [PC, #536]
0x2590	0x4886    LDR	R0, [PC, #536]
0x2592	0xF7FEFFB9  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 523 :: 		RCC_APB2ENR.SYSCFGEN = 1;
0x2596	0x4A86    LDR	R2, [PC, #536]
0x2598	0x6810    LDR	R0, [R2, #0]
0x259A	0x2101    MOVS	R1, #1
0x259C	0x4308    ORRS	R0, R1
0x259E	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 524 :: 		SYSCFG_EXTICR1  = 0x0005;
0x25A0	0x2105    MOVS	R1, #5
0x25A2	0x4884    LDR	R0, [PC, #528]
0x25A4	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 525 :: 		EXTI_IMR.B0     |= 1;
0x25A6	0x4884    LDR	R0, [PC, #528]
0x25A8	0x6800    LDR	R0, [R0, #0]
0x25AA	0x2201    MOVS	R2, #1
0x25AC	0x4002    ANDS	R2, R0
0x25AE	0x4883    LDR	R0, [PC, #524]
0x25B0	0x7801    LDRB	R1, [R0, #0]
0x25B2	0x2001    MOVS	R0, BitMask(_CMD_RADIO_POWER_SET+0)
0x25B4	0x4008    ANDS	R0, R1
0x25B6	0x4613    MOV	R3, R2
0x25B8	0x4303    ORRS	R3, R0
0x25BA	0x4A7F    LDR	R2, [PC, #508]
0x25BC	0x6810    LDR	R0, [R2, #0]
0x25BE	0x2101    MOVS	R1, #1
0x25C0	0x4019    ANDS	R1, R3
0x25C2	0xD002    BEQ	L__main432
0x25C4	0x2101    MOVS	R1, #1
0x25C6	0x4308    ORRS	R0, R1
0x25C8	0xE001    B	L__main431
L__main432:
0x25CA	0x2101    MOVS	R1, #1
0x25CC	0x4388    BICS	R0, R1
L__main431:
0x25CE	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 526 :: 		EXTI_FTSR.B0    |= 1;
0x25D0	0x487B    LDR	R0, [PC, #492]
0x25D2	0x6800    LDR	R0, [R0, #0]
0x25D4	0x2201    MOVS	R2, #1
0x25D6	0x4002    ANDS	R2, R0
0x25D8	0x4878    LDR	R0, [PC, #480]
0x25DA	0x7801    LDRB	R1, [R0, #0]
0x25DC	0x2001    MOVS	R0, BitMask(_CMD_RADIO_POWER_SET+0)
0x25DE	0x4008    ANDS	R0, R1
0x25E0	0x4613    MOV	R3, R2
0x25E2	0x4303    ORRS	R3, R0
0x25E4	0x4A76    LDR	R2, [PC, #472]
0x25E6	0x6810    LDR	R0, [R2, #0]
0x25E8	0x2101    MOVS	R1, #1
0x25EA	0x4019    ANDS	R1, R3
0x25EC	0xD002    BEQ	L__main434
0x25EE	0x2101    MOVS	R1, #1
0x25F0	0x4308    ORRS	R0, R1
0x25F2	0xE001    B	L__main433
L__main434:
0x25F4	0x2101    MOVS	R1, #1
0x25F6	0x4388    BICS	R0, R1
L__main433:
0x25F8	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 528 :: 		nSEL = 1;
0x25FA	0x4A72    LDR	R2, [PC, #456]
0x25FC	0x6810    LDR	R0, [R2, #0]
0x25FE	0x2101    MOVS	R1, #1
0x2600	0x0309    LSLS	R1, R1, #12
0x2602	0x4308    ORRS	R0, R1
0x2604	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 533 :: 		InitTimer2();
0x2606	0xF7FEFF87  BL	_InitTimer2+0
;DriverRF4463PROMain.c, 534 :: 		NVIC_IntEnable( IVT_INT_EXTI0_1 );
0x260A	0x2015    MOVS	R0, #21
0x260C	0xF7FEFFD8  BL	_NVIC_IntEnable+0
;DriverRF4463PROMain.c, 537 :: 		vUSARTConfigUSART1( 115200 );  // configura todos las parametros de USART
0x2610	0x486D    LDR	R0, [PC, #436]
0x2612	0xB401    PUSH	(R0)
0x2614	0xF7FEFFAE  BL	_vUSARTConfigUSART1+0
0x2618	0xB001    ADD	SP, SP, #4
;DriverRF4463PROMain.c, 539 :: 		UART1_Write_Text("[ SYS STM32L072CB ] Start System\r\n");
0x261A	0x2608    MOVS	R6, #8
0x261C	0x446E    ADD	R6, SP, R6
0x261E	0x2523    MOVS	R5, #35
0x2620	0x19AD    ADDS	R5, R5, R6
0x2622	0x4F6A    LDR	R7, [PC, #424]
0x2624	0xF7FEFFEA  BL	___CC2DW+0
0x2628	0x2008    MOVS	R0, #8
0x262A	0x4468    ADD	R0, SP, R0
0x262C	0x4604    MOV	R4, R0
0x262E	0x4620    MOV	R0, R4
0x2630	0xF7FFF804  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 541 :: 		vSPI2Init();           // configura todos los parametros de SPI
0x2634	0xF7FFFE44  BL	_vSPI2Init+0
;DriverRF4463PROMain.c, 546 :: 		ucRF4463Freq3 = 9;
0x2638	0x2109    MOVS	R1, #9
0x263A	0x4865    LDR	R0, [PC, #404]
0x263C	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 547 :: 		ucRF4463Freq2 = 1;
0x263E	0x2101    MOVS	R1, #1
0x2640	0x4864    LDR	R0, [PC, #400]
0x2642	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 548 :: 		ucRF4463Freq1 = 5;
0x2644	0x2105    MOVS	R1, #5
0x2646	0x4864    LDR	R0, [PC, #400]
0x2648	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 551 :: 		ucRF4463Power = 127;            // 34
0x264A	0x217F    MOVS	R1, #127
0x264C	0x4863    LDR	R0, [PC, #396]
0x264E	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 553 :: 		ucRF4463Rate  = dr_1p2;                // BAUDRATE
0x2650	0x2100    MOVS	R1, #0
0x2652	0x4863    LDR	R0, [PC, #396]
0x2654	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 555 :: 		ucRF4463Mode  = master_mode;          // para transmision continua usar: tx_test_mode
0x2656	0x2100    MOVS	R1, #0
0x2658	0x4862    LDR	R0, [PC, #392]
0x265A	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 557 :: 		ucRF4463FreqChannel = 1;
0x265C	0x2101    MOVS	R1, #1
0x265E	0x4862    LDR	R0, [PC, #392]
0x2660	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 561 :: 		reset_mode = 0;
0x2662	0x2100    MOVS	R1, #0
0x2664	0x4861    LDR	R0, [PC, #388]
0x2666	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 566 :: 		vRF4463MainSetTXString();    // usada para establecer el encabezdo predeterminado
0x2668	0xF7FFFE40  BL	_vRF4463MainSetTXString+0
;DriverRF4463PROMain.c, 567 :: 		VRF4463SDNReset();
0x266C	0xF7FFFE42  BL	_VRF4463SDNReset+0
;DriverRF4463PROMain.c, 568 :: 		vRF4463Init();
0x2670	0xF7FFF878  BL	_vRF4463Init+0
;DriverRF4463PROMain.c, 569 :: 		vRF4463ClearInterrupts();
0x2674	0xF7FEFFEA  BL	_vRF4463ClearInterrupts+0
;DriverRF4463PROMain.c, 570 :: 		vRF4463PartInfo ();          // SOLICITA EL MODELO DEL RADIO
0x2678	0xF7FFF80A  BL	_vRF4463PartInfo+0
;DriverRF4463PROMain.c, 572 :: 		UART1_Write_Text( "[ SYS STM32L072CB ] RF Radio ready\r\n" );
0x267C	0x262C    MOVS	R6, #44
0x267E	0x446E    ADD	R6, SP, R6
0x2680	0x2525    MOVS	R5, #37
0x2682	0x19AD    ADDS	R5, R5, R6
0x2684	0x4F5A    LDR	R7, [PC, #360]
0x2686	0xF7FEFFB9  BL	___CC2DW+0
0x268A	0x202C    MOVS	R0, #44
0x268C	0x4468    ADD	R0, SP, R0
0x268E	0x4604    MOV	R4, R0
0x2690	0x4620    MOV	R0, R4
0x2692	0xF7FEFFD3  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 575 :: 		while ( 1 ) {
L_main327:
;DriverRF4463PROMain.c, 578 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x2696	0x4857    LDR	R0, [PC, #348]
0x2698	0x6800    LDR	R0, [R0, #0]
0x269A	0x2801    CMP	R0, #1
0x269C	0xD1FF    BNE	L_main329
;DriverRF4463PROMain.c, 580 :: 		}
L_main329:
;DriverRF4463PROMain.c, 591 :: 		if ( ucRF4463Mode == master_mode ) {
0x269E	0x4851    LDR	R0, [PC, #324]
0x26A0	0x7800    LDRB	R0, [R0, #0]
0x26A2	0x2800    CMP	R0, #0
0x26A4	0xD102    BNE	L_main330
;DriverRF4463PROMain.c, 592 :: 		vRF4463TxData();
0x26A6	0xF7FFF809  BL	_vRF4463TxData+0
;DriverRF4463PROMain.c, 593 :: 		}
0x26AA	0xE00C    B	L_main331
L_main330:
;DriverRF4463PROMain.c, 596 :: 		else if ( ucRF4463Mode == slave_mode ) {
0x26AC	0x484D    LDR	R0, [PC, #308]
0x26AE	0x7800    LDRB	R0, [R0, #0]
0x26B0	0x2801    CMP	R0, #1
0x26B2	0xD102    BNE	L_main332
;DriverRF4463PROMain.c, 597 :: 		vRF4463RxInit();
0x26B4	0xF7FEFC0E  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 598 :: 		}
0x26B8	0xE005    B	L_main333
L_main332:
;DriverRF4463PROMain.c, 601 :: 		else if ( ucRF4463Mode == rf_off ) {
0x26BA	0x484A    LDR	R0, [PC, #296]
0x26BC	0x7800    LDRB	R0, [R0, #0]
0x26BE	0x2804    CMP	R0, #4
0x26C0	0xD101    BNE	L_main334
;DriverRF4463PROMain.c, 602 :: 		vRF4463RxInit();
0x26C2	0xF7FEFC07  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 603 :: 		}
L_main334:
L_main333:
L_main331:
;DriverRF4463PROMain.c, 606 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x26C6	0x4847    LDR	R0, [PC, #284]
0x26C8	0x7800    LDRB	R0, [R0, #0]
0x26CA	0x2802    CMP	R0, #2
0x26CC	0xD10F    BNE	L_main335
;DriverRF4463PROMain.c, 607 :: 		vRF4463TxCont();
0x26CE	0xF7FEFEB9  BL	_vRF4463TxCont+0
;DriverRF4463PROMain.c, 608 :: 		while ( 1 ) {
L_main336:
;DriverRF4463PROMain.c, 610 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x26D2	0x4848    LDR	R0, [PC, #288]
0x26D4	0x6800    LDR	R0, [R0, #0]
0x26D6	0x2801    CMP	R0, #1
0x26D8	0xD100    BNE	L_main338
;DriverRF4463PROMain.c, 611 :: 		break;
0x26DA	0xE008    B	L_main337
;DriverRF4463PROMain.c, 612 :: 		}
L_main338:
;DriverRF4463PROMain.c, 614 :: 		if ( !nIRQ ) {
0x26DC	0x4846    LDR	R0, [PC, #280]
0x26DE	0x6801    LDR	R1, [R0, #0]
0x26E0	0x2001    MOVS	R0, #1
0x26E2	0x4008    ANDS	R0, R1
0x26E4	0x2800    CMP	R0, #0
0x26E6	0xD101    BNE	L_main339
;DriverRF4463PROMain.c, 615 :: 		vRF4463TxCont();
0x26E8	0xF7FEFEAC  BL	_vRF4463TxCont+0
;DriverRF4463PROMain.c, 616 :: 		}
L_main339:
;DriverRF4463PROMain.c, 617 :: 		}
0x26EC	0xE7F1    B	L_main336
L_main337:
;DriverRF4463PROMain.c, 618 :: 		}
L_main335:
;DriverRF4463PROMain.c, 620 :: 		if ( ucRF4463Mode == rx_test_mode ) {
0x26EE	0x483D    LDR	R0, [PC, #244]
0x26F0	0x7800    LDRB	R0, [R0, #0]
0x26F2	0x2803    CMP	R0, #3
0x26F4	0xD107    BNE	L_main340
;DriverRF4463PROMain.c, 621 :: 		vRF4463RxInit ();
0x26F6	0xF7FEFBED  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 622 :: 		while ( 1 ) {
L_main341:
;DriverRF4463PROMain.c, 624 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x26FA	0x483E    LDR	R0, [PC, #248]
0x26FC	0x6800    LDR	R0, [R0, #0]
0x26FE	0x2801    CMP	R0, #1
0x2700	0xD100    BNE	L_main343
;DriverRF4463PROMain.c, 625 :: 		break;
0x2702	0xE000    B	L_main342
;DriverRF4463PROMain.c, 626 :: 		}
L_main343:
;DriverRF4463PROMain.c, 629 :: 		}
0x2704	0xE7F9    B	L_main341
L_main342:
;DriverRF4463PROMain.c, 630 :: 		}
L_main340:
;DriverRF4463PROMain.c, 632 :: 		if ( reset_mode == 0 ) {
0x2706	0x4839    LDR	R0, [PC, #228]
0x2708	0x7800    LDRB	R0, [R0, #0]
0x270A	0x2800    CMP	R0, #0
0x270C	0xD000    BEQ	#0
0x270E	0xE0E6    B	L_main344
;DriverRF4463PROMain.c, 634 :: 		while ( 1 ) {
L_main345:
;DriverRF4463PROMain.c, 636 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x2710	0x4838    LDR	R0, [PC, #224]
0x2712	0x6800    LDR	R0, [R0, #0]
0x2714	0x2801    CMP	R0, #1
0x2716	0xD100    BNE	L_main347
;DriverRF4463PROMain.c, 637 :: 		break;
0x2718	0xE0E1    B	L_main346
;DriverRF4463PROMain.c, 638 :: 		}
L_main347:
;DriverRF4463PROMain.c, 640 :: 		if ( Flag.reach_1s ) {
0x271A	0x4838    LDR	R0, [PC, #224]
0x271C	0x7801    LDRB	R1, [R0, #0]
0x271E	0x2001    MOVS	R0, #1
0x2720	0x4008    ANDS	R0, R1
0x2722	0x2800    CMP	R0, #0
0x2724	0xD00A    BEQ	L_main348
;DriverRF4463PROMain.c, 641 :: 		Flag.reach_1s = 0;
0x2726	0x4A35    LDR	R2, [PC, #212]
0x2728	0x7810    LDRB	R0, [R2, #0]
0x272A	0x2101    MOVS	R1, #1
0x272C	0x4388    BICS	R0, R1
0x272E	0x7010    STRB	R0, [R2, #0]
;DriverRF4463PROMain.c, 642 :: 		if ( ucRF4463Mode == master_mode ) {
0x2730	0x482C    LDR	R0, [PC, #176]
0x2732	0x7800    LDRB	R0, [R0, #0]
0x2734	0x2800    CMP	R0, #0
0x2736	0xD101    BNE	L_main349
;DriverRF4463PROMain.c, 643 :: 		vRF4463TxData();
0x2738	0xF7FEFFC0  BL	_vRF4463TxData+0
;DriverRF4463PROMain.c, 644 :: 		}
L_main349:
;DriverRF4463PROMain.c, 645 :: 		}
L_main348:
;DriverRF4463PROMain.c, 648 :: 		if ( !Flag.is_tx ) {
0x273C	0x482F    LDR	R0, [PC, #188]
0x273E	0x7801    LDRB	R1, [R0, #0]
0x2740	0x2002    MOVS	R0, #2
0x2742	0x4008    ANDS	R0, R1
0x2744	0x0840    LSRS	R0, R0, #1
0x2746	0x2800    CMP	R0, #0
0x2748	0xD000    BEQ	#0
0x274A	0xE0C7    B	L_main350
;DriverRF4463PROMain.c, 649 :: 		if ( !nIRQ ) {          // !nIRQ
0x274C	0x482A    LDR	R0, [PC, #168]
0x274E	0x6801    LDR	R1, [R0, #0]
0x2750	0x2001    MOVS	R0, #1
0x2752	0x4008    ANDS	R0, R1
0x2754	0x2800    CMP	R0, #0
0x2756	0xD000    BEQ	#0
0x2758	0xE0C0    B	L_main351
;DriverRF4463PROMain.c, 650 :: 		spi_read(9,0x22);  // aqui hay que leer  el RSSI
0x275A	0x2022    MOVS	R0, #34
0x275C	0xB401    PUSH	(R0)
0x275E	0x2009    MOVS	R0, #9
0x2760	0xB401    PUSH	(R0)
0x2762	0xF7FEF935  BL	_spi_read+0
0x2766	0xB002    ADD	SP, SP, #8
;DriverRF4463PROMain.c, 651 :: 		iVal = ( float ) spi_read_buf[3];
0x2768	0x4825    LDR	R0, [PC, #148]
0x276A	0x7800    LDRB	R0, [R0, #0]
0x276C	0xF7FEFEC2  BL	__UnsignedIntegralToFloat+0
0x2770	0x4601    MOV	R1, R0
0x2772	0x4824    LDR	R0, [PC, #144]
0x2774	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 652 :: 		rssi = ((iVal / 2) - 64) -70;
0x2776	0x4823    LDR	R0, [PC, #140]
0x2778	0x6800    LDR	R0, [R0, #0]
0x277A	0x4A23    LDR	R2, [PC, #140]
0x277C	0xF7FEFDC8  BL	__Div_FP+0
0x2780	0x4A22    LDR	R2, [PC, #136]
0x2782	0xF7FEFE57  BL	__Sub_FP+0
0x2786	0x4A22    LDR	R2, [PC, #136]
0x2788	0xF7FEFE54  BL	__Sub_FP+0
0x278C	0x4921    LDR	R1, [PC, #132]
0x278E	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 653 :: 		vRF4463ClearInterrupts();
0x2790	0xF7FEFF5C  BL	_vRF4463ClearInterrupts+0
;DriverRF4463PROMain.c, 655 :: 		if ( ( spi_read_buf[ 4 ] & 0x08) == 0 ) { // crc error check
0x2794	0x4820    LDR	R0, [PC, #128]
0x2796	0x7801    LDRB	R1, [R0, #0]
0x2798	0x2008    MOVS	R0, #8
0x279A	0x4008    ANDS	R0, R1
0x279C	0xB2C0    UXTB	R0, R0
0x279E	0x2800    CMP	R0, #0
0x27A0	0xE03C    B	#120
0x27A2	0xBF00    NOP
0x27A4	0x1C005000  	GPIOH_BASE+0
0x27A8	0x10000000  	#4096
0x27AC	0x04005000  	GPIOB_BASE+0
0x27B0	0x10344002  	RCC_APB2ENR+0
0x27B4	0x00084001  	SYSCFG_EXTICR1+0
0x27B8	0x04004001  	EXTI_IMR+0
0x27BC	0xFFFFFFFF  	_CMD_RADIO_POWER_SET+0
0x27C0	0x040C4001  	EXTI_FTSR+0
0x27C4	0x04145000  	GPIOB_ODR+0
0x27C8	0xC2000001  	#115200
0x27CC	0x40300000  	?ICS?lstr18_DriverRF4463PROMain+0
0x27D0	0x009F2000  	_ucRF4463Freq3+0
0x27D4	0x10B02000  	_ucRF4463Freq2+0
0x27D8	0x10B12000  	_ucRF4463Freq1+0
0x27DC	0x10C82000  	_ucRF4463Power+0
0x27E0	0x10C62000  	_ucRF4463Rate+0
0x27E4	0x10C72000  	_ucRF4463Mode+0
0x27E8	0x009D2000  	_ucRF4463FreqChannel+0
0x27EC	0x11162000  	_reset_mode+0
0x27F0	0x40540000  	?ICS?lstr19_DriverRF4463PROMain+0
0x27F4	0x00A42000  	_fUSART1Buffer+0
0x27F8	0x1C105000  	GPIOH_IDR+0
0x27FC	0x10C92000  	_Flag+0
0x2800	0x10B52000  	_spi_read_buf+3
0x2804	0x11182000  	_iVal+0
0x2808	0x00004000  	#1073741824
0x280C	0x00004280  	#1115684864
0x2810	0x0000428C  	#1116471296
0x2814	0x10CC2000  	_rssi+0
0x2818	0x10B62000  	_spi_read_buf+4
0x281C	0xD14B    BNE	L_main352
;DriverRF4463PROMain.c, 659 :: 		spi_read_fifo();
0x281E	0xF7FEFDC9  BL	_spi_read_fifo+0
;DriverRF4463PROMain.c, 660 :: 		vRF4463FifoReset();
0x2822	0xF7FEF84F  BL	_vRF4463FifoReset+0
;DriverRF4463PROMain.c, 662 :: 		chksum = 0;
0x2826	0x2000    MOVS	R0, #0
0x2828	0x9001    STR	R0, [SP, #4]
;DriverRF4463PROMain.c, 663 :: 		for ( i = 4; i < payload_length - 1; i++ )                // Calculation Checksum
0x282A	0x2004    MOVS	R0, #4
0x282C	0x9000    STR	R0, [SP, #0]
L_main353:
0x282E	0x9800    LDR	R0, [SP, #0]
0x2830	0xB2C0    UXTB	R0, R0
0x2832	0x2841    CMP	R0, #65
0x2834	0xDA0D    BGE	L_main354
;DriverRF4463PROMain.c, 664 :: 		chksum += rx_buf[ i ];
0x2836	0x9900    LDR	R1, [SP, #0]
0x2838	0xB2C9    UXTB	R1, R1
0x283A	0x482A    LDR	R0, [PC, #168]
0x283C	0x1840    ADDS	R0, R0, R1
0x283E	0x7801    LDRB	R1, [R0, #0]
0x2840	0x9801    LDR	R0, [SP, #4]
0x2842	0xB2C0    UXTB	R0, R0
0x2844	0x1840    ADDS	R0, R0, R1
0x2846	0x9001    STR	R0, [SP, #4]
;DriverRF4463PROMain.c, 663 :: 		for ( i = 4; i < payload_length - 1; i++ )                // Calculation Checksum
0x2848	0x9800    LDR	R0, [SP, #0]
0x284A	0xB2C0    UXTB	R0, R0
0x284C	0x3001    ADDS	R0, #1
0x284E	0x9000    STR	R0, [SP, #0]
;DriverRF4463PROMain.c, 664 :: 		chksum += rx_buf[ i ];
0x2850	0xE7ED    B	L_main353
L_main354:
;DriverRF4463PROMain.c, 666 :: 		if ( ( chksum == rx_buf[ payload_length - 1 ] )&&( rx_buf[ 4 ] == 0x41 )) {
0x2852	0x4825    LDR	R0, [PC, #148]
0x2854	0x7801    LDRB	R1, [R0, #0]
0x2856	0x9801    LDR	R0, [SP, #4]
0x2858	0xB2C0    UXTB	R0, R0
0x285A	0x4288    CMP	R0, R1
0x285C	0xD128    BNE	L_main358
0x285E	0x4823    LDR	R0, [PC, #140]
0x2860	0x7800    LDRB	R0, [R0, #0]
0x2862	0x2841    CMP	R0, #65
0x2864	0xD124    BNE	L_main358
L__main384:
;DriverRF4463PROMain.c, 670 :: 		UART1_Write_Text( "[ Message ] = " );
0x2866	0x2654    MOVS	R6, #84
0x2868	0x446E    ADD	R6, SP, R6
0x286A	0x250F    MOVS	R5, #15
0x286C	0x19AD    ADDS	R5, R5, R6
0x286E	0x4F20    LDR	R7, [PC, #128]
0x2870	0xF7FEFEC4  BL	___CC2DW+0
0x2874	0x2054    MOVS	R0, #84
0x2876	0x4468    ADD	R0, SP, R0
0x2878	0x4604    MOV	R4, R0
0x287A	0x4620    MOV	R0, R4
0x287C	0xF7FEFEDE  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 671 :: 		UART1_Write_Text( rx_buf );
0x2880	0x4818    LDR	R0, [PC, #96]
0x2882	0xF7FEFEDB  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 672 :: 		UART1_Write_Text("\r\n");
0x2886	0x2664    MOVS	R6, #100
0x2888	0x446E    ADD	R6, SP, R6
0x288A	0x2503    MOVS	R5, #3
0x288C	0x19AD    ADDS	R5, R5, R6
0x288E	0x4F19    LDR	R7, [PC, #100]
0x2890	0xF7FEFEB4  BL	___CC2DW+0
0x2894	0x2064    MOVS	R0, #100
0x2896	0x4468    ADD	R0, SP, R0
0x2898	0x4604    MOV	R4, R0
0x289A	0x4620    MOV	R0, R4
0x289C	0xF7FEFECE  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 675 :: 		rx_cnt++;
0x28A0	0x4815    LDR	R0, [PC, #84]
0x28A2	0x6800    LDR	R0, [R0, #0]
0x28A4	0x1C41    ADDS	R1, R0, #1
0x28A6	0x4814    LDR	R0, [PC, #80]
0x28A8	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 676 :: 		getRSSI();
0x28AA	0xF7FEFDF1  BL	_getRSSI+0
;DriverRF4463PROMain.c, 681 :: 		}
0x28AE	0xE001    B	L_main359
L_main358:
;DriverRF4463PROMain.c, 683 :: 		vRF4463RxInit();    // The received data is wrong, you must continue to receive
0x28B0	0xF7FEFB10  BL	_vRF4463RxInit+0
L_main359:
;DriverRF4463PROMain.c, 684 :: 		}
0x28B4	0xE012    B	L_main360
L_main352:
;DriverRF4463PROMain.c, 688 :: 		UART1_Write_Text( "[ CRC ] Fail\r\n" );
0x28B6	0x2668    MOVS	R6, #104
0x28B8	0x446E    ADD	R6, SP, R6
0x28BA	0x250F    MOVS	R5, #15
0x28BC	0x19AD    ADDS	R5, R5, R6
0x28BE	0x4F0F    LDR	R7, [PC, #60]
0x28C0	0xF7FEFE9C  BL	___CC2DW+0
0x28C4	0x2068    MOVS	R0, #104
0x28C6	0x4468    ADD	R0, SP, R0
0x28C8	0x4604    MOV	R4, R0
0x28CA	0x4620    MOV	R0, R4
0x28CC	0xF7FEFEB6  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 689 :: 		VRF4463SDNReset();
0x28D0	0xF7FFFD10  BL	_VRF4463SDNReset+0
;DriverRF4463PROMain.c, 690 :: 		vRF4463Init();
0x28D4	0xF7FEFF46  BL	_vRF4463Init+0
;DriverRF4463PROMain.c, 691 :: 		vRF4463RxInit();
0x28D8	0xF7FEFAFC  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 692 :: 		}
L_main360:
;DriverRF4463PROMain.c, 693 :: 		}
L_main351:
;DriverRF4463PROMain.c, 694 :: 		}
L_main350:
;DriverRF4463PROMain.c, 695 :: 		}
0x28DC	0xE718    B	L_main345
L_main346:
;DriverRF4463PROMain.c, 696 :: 		}
L_main344:
;DriverRF4463PROMain.c, 697 :: 		}
0x28DE	0xE6DA    B	L_main327
;DriverRF4463PROMain.c, 698 :: 		}
L_end_main:
L__main_end_loop:
0x28E0	0xE7FE    B	L__main_end_loop
0x28E2	0xBF00    NOP
0x28E4	0x10D42000  	_rx_buf+0
0x28E8	0x11152000  	_rx_buf+65
0x28EC	0x10D82000  	_rx_buf+4
0x28F0	0x407C0000  	?ICS?lstr20_DriverRF4463PROMain+0
0x28F4	0x408C0000  	?ICS?lstr21_DriverRF4463PROMain+0
0x28F8	0x00A82000  	_rx_cnt+0
0x28FC	0x40900000  	?ICS?lstr22_DriverRF4463PROMain+0
; end of _main
_NVIC_IntEnable:
;__Lib_System_M0Plus_HSI48.c, 164 :: 		
; ivt start address is: 0 (R0)
0x15C0	0xB500    PUSH	(R14)
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_M0Plus_HSI48.c, 177 :: 		
0x15C2	0x280F    CMP	R0, #15
0x15C4	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_M0Plus_HSI48.c, 183 :: 		
0x15C6	0x490B    LDR	R1, [PC, #44]
0x15C8	0x680A    LDR	R2, [R1, #0]
0x15CA	0x2102    MOVS	R1, #2
0x15CC	0x430A    ORRS	R2, R1
0x15CE	0x4909    LDR	R1, [PC, #36]
0x15D0	0x600A    STR	R2, [R1, #0]
;__Lib_System_M0Plus_HSI48.c, 184 :: 		
0x15D2	0xE00D    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_M0Plus_HSI48.c, 185 :: 		
; ivt start address is: 0 (R0)
0x15D4	0x2810    CMP	R0, #16
0x15D6	0xD30B    BCC	L_NVIC_IntEnable8
;__Lib_System_M0Plus_HSI48.c, 190 :: 		
0x15D8	0x4603    MOV	R3, R0
0x15DA	0x3B10    SUBS	R3, #16
; ivt end address is: 0 (R0)
0x15DC	0x0959    LSRS	R1, R3, #5
0x15DE	0x008A    LSLS	R2, R1, #2
0x15E0	0x4905    LDR	R1, [PC, #20]
0x15E2	0x188C    ADDS	R4, R1, R2
;__Lib_System_M0Plus_HSI48.c, 191 :: 		
0x15E4	0x211F    MOVS	R1, #31
0x15E6	0x400B    ANDS	R3, R1
0x15E8	0x2201    MOVS	R2, #1
0x15EA	0x4611    MOV	R1, R2
0x15EC	0x4099    LSLS	R1, R3
0x15EE	0x6021    STR	R1, [R4, #0]
;__Lib_System_M0Plus_HSI48.c, 192 :: 		
L_NVIC_IntEnable8:
L_NVIC_IntEnable7:
;__Lib_System_M0Plus_HSI48.c, 193 :: 		
L_end_NVIC_IntEnable:
0x15F0	0xBD00    POP	(R15)
0x15F2	0xBF00    NOP
0x15F4	0xE010E000  	STK_CSR+0
0x15F8	0xE100E000  	NVIC_ISER+0
; end of _NVIC_IntEnable
___CC2DW:
;__Lib_System_M0Plus_HSI48.c, 28 :: 		
0x15FC	0xB081    SUB	SP, SP, #4
;__Lib_System_M0Plus_HSI48.c, 30 :: 		
L_loopDW:
;__Lib_System_M0Plus_HSI48.c, 31 :: 		
0x15FE	0x783C    LDRB	R4, [R7, #0]
;__Lib_System_M0Plus_HSI48.c, 32 :: 		
0x1600	0x1C7F    ADDS	R7, R7, #1
;__Lib_System_M0Plus_HSI48.c, 33 :: 		
0x1602	0x7034    STRB	R4, [R6, #0]
;__Lib_System_M0Plus_HSI48.c, 34 :: 		
0x1604	0x1C76    ADDS	R6, R6, #1
;__Lib_System_M0Plus_HSI48.c, 35 :: 		
0x1606	0x42AE    CMP	R6, R5
;__Lib_System_M0Plus_HSI48.c, 36 :: 		
0x1608	0xD1F9    BNE	L_loopDW
;__Lib_System_M0Plus_HSI48.c, 38 :: 		
L_end___CC2DW:
0x160A	0xB001    ADD	SP, SP, #4
0x160C	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_M0Plus_HSI48.c, 77 :: 		
0x1610	0xB081    SUB	SP, SP, #4
;__Lib_System_M0Plus_HSI48.c, 79 :: 		
0x1612	0x2400    MOVS	R4, #0
;__Lib_System_M0Plus_HSI48.c, 80 :: 		
0x1614	0x2700    MOVS	R7, #0
;__Lib_System_M0Plus_HSI48.c, 81 :: 		
0x1616	0x45AD    CMP	SP, R5
;__Lib_System_M0Plus_HSI48.c, 82 :: 		
0x1618	0xDC03    BGT	L_loopFZs
;__Lib_System_M0Plus_HSI48.c, 83 :: 		
0x161A	0x45B5    CMP	SP, R6
;__Lib_System_M0Plus_HSI48.c, 84 :: 		
0x161C	0xDB01    BLT	L_loopFZs
;__Lib_System_M0Plus_HSI48.c, 85 :: 		
0x161E	0x462F    MOV	R7, R5
;__Lib_System_M0Plus_HSI48.c, 86 :: 		
0x1620	0x466D    MOV	R5, SP
;__Lib_System_M0Plus_HSI48.c, 87 :: 		
L_loopFZs:
;__Lib_System_M0Plus_HSI48.c, 88 :: 		
0x1622	0x6034    STR	R4, [R6, #0]
;__Lib_System_M0Plus_HSI48.c, 89 :: 		
0x1624	0x1D36    ADDS	R6, R6, #4
;__Lib_System_M0Plus_HSI48.c, 90 :: 		
0x1626	0x42AE    CMP	R6, R5
;__Lib_System_M0Plus_HSI48.c, 91 :: 		
0x1628	0xD1FB    BNE	L_loopFZs
;__Lib_System_M0Plus_HSI48.c, 92 :: 		
0x162A	0x42AF    CMP	R7, R5
;__Lib_System_M0Plus_HSI48.c, 93 :: 		
0x162C	0xDD03    BLE	L_norep
;__Lib_System_M0Plus_HSI48.c, 94 :: 		
0x162E	0x463D    MOV	R5, R7
;__Lib_System_M0Plus_HSI48.c, 95 :: 		
0x1630	0x6826    LDR	R6, [R4, #0]
;__Lib_System_M0Plus_HSI48.c, 96 :: 		
0x1632	0x1D36    ADDS	R6, R6, #4
;__Lib_System_M0Plus_HSI48.c, 97 :: 		
0x1634	0xE7F5    B	L_loopFZs
;__Lib_System_M0Plus_HSI48.c, 98 :: 		
L_norep:
;__Lib_System_M0Plus_HSI48.c, 100 :: 		
L_end___FillZeros:
0x1636	0xB001    ADD	SP, SP, #4
0x1638	0x4770    BX	LR
; end of ___FillZeros
_GPIO_Digital_Input:
;__Lib_GPIO_32L07x.c, 542 :: 		
; pinMask start address is: 4 (R1)
; port start address is: 0 (R0)
0x15B4	0xB500    PUSH	(R14)
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pinMask start address is: 4 (R1)
;__Lib_GPIO_32L07x.c, 544 :: 		
0x15B6	0x2242    MOVS	R2, #66
0x15B8	0xB289    UXTH	R1, R1
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
0x15BA	0xF7FFFCA5  BL	_GPIO_Config+0
;__Lib_GPIO_32L07x.c, 545 :: 		
L_end_GPIO_Digital_Input:
0x15BE	0xBD00    POP	(R15)
; end of _GPIO_Digital_Input
_GPIO_Config:
;__Lib_GPIO_32L07x.c, 251 :: 		
; port start address is: 0 (R0)
0x0F08	0xB500    PUSH	(R14)
0x0F0A	0xB086    SUB	SP, SP, #24
0x0F0C	0x9101    STR	R1, [SP, #4]
0x0F0E	0x9202    STR	R2, [SP, #8]
; port end address is: 0 (R0)
; port start address is: 0 (R0)
;__Lib_GPIO_32L07x.c, 254 :: 		
;__Lib_GPIO_32L07x.c, 255 :: 		
;__Lib_GPIO_32L07x.c, 256 :: 		
;__Lib_GPIO_32L07x.c, 258 :: 		
;__Lib_GPIO_32L07x.c, 259 :: 		
;__Lib_GPIO_32L07x.c, 260 :: 		
;__Lib_GPIO_32L07x.c, 261 :: 		
;__Lib_GPIO_32L07x.c, 263 :: 		
;__Lib_GPIO_32L07x.c, 264 :: 		
;__Lib_GPIO_32L07x.c, 265 :: 		
;__Lib_GPIO_32L07x.c, 270 :: 		
0x0F10	0x4BA8    LDR	R3, [PC, #672]
0x0F12	0x4003    ANDS	R3, R0
0x0F14	0x9304    STR	R3, [SP, #16]
;__Lib_GPIO_32L07x.c, 272 :: 		
; port end address is: 0 (R0)
0x0F16	0xF7FFFAC5  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32L07x.c, 275 :: 		
0x0F1A	0x9B01    LDR	R3, [SP, #4]
0x0F1C	0xB29B    UXTH	R3, R3
0x0F1E	0x2BFF    CMP	R3, #255
0x0F20	0xD121    BNE	L_GPIO_Config25
;__Lib_GPIO_32L07x.c, 277 :: 		
0x0F22	0x9B04    LDR	R3, [SP, #16]
0x0F24	0x681C    LDR	R4, [R3, #0]
;__Lib_GPIO_32L07x.c, 278 :: 		
0x0F26	0x4BA4    LDR	R3, [PC, #656]
0x0F28	0x4620    MOV	R0, R4
0x0F2A	0x4018    ANDS	R0, R3
; tmp start address is: 0 (R0)
;__Lib_GPIO_32L07x.c, 280 :: 		
0x0F2C	0x9C02    LDR	R4, [SP, #8]
0x0F2E	0x4BA3    LDR	R3, [PC, #652]
0x0F30	0x429C    CMP	R4, R3
0x0F32	0xD112    BNE	L_GPIO_Config26
;__Lib_GPIO_32L07x.c, 283 :: 		
0x0F34	0x4BA2    LDR	R3, [PC, #648]
0x0F36	0x4604    MOV	R4, R0
0x0F38	0x431C    ORRS	R4, R3
; tmp end address is: 0 (R0)
;__Lib_GPIO_32L07x.c, 284 :: 		
0x0F3A	0x9B04    LDR	R3, [SP, #16]
0x0F3C	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32L07x.c, 287 :: 		
0x0F3E	0x9B04    LDR	R3, [SP, #16]
0x0F40	0x1D1D    ADDS	R5, R3, #4
0x0F42	0x682C    LDR	R4, [R5, #0]
0x0F44	0x4B9F    LDR	R3, [PC, #636]
0x0F46	0x4023    ANDS	R3, R4
0x0F48	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32L07x.c, 290 :: 		
0x0F4A	0x9B04    LDR	R3, [SP, #16]
0x0F4C	0x461D    MOV	R5, R3
0x0F4E	0x3508    ADDS	R5, #8
0x0F50	0x682C    LDR	R4, [R5, #0]
0x0F52	0x4B9D    LDR	R3, [PC, #628]
0x0F54	0x4323    ORRS	R3, R4
0x0F56	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32L07x.c, 291 :: 		
0x0F58	0xE12A    B	L_end_GPIO_Config
;__Lib_GPIO_32L07x.c, 292 :: 		
L_GPIO_Config26:
;__Lib_GPIO_32L07x.c, 294 :: 		
; tmp start address is: 0 (R0)
0x0F5A	0x9B02    LDR	R3, [SP, #8]
0x0F5C	0x2B42    CMP	R3, #66
0x0F5E	0xD102    BNE	L_GPIO_Config27
;__Lib_GPIO_32L07x.c, 297 :: 		
0x0F60	0x9B04    LDR	R3, [SP, #16]
0x0F62	0x6018    STR	R0, [R3, #0]
; tmp end address is: 0 (R0)
;__Lib_GPIO_32L07x.c, 298 :: 		
0x0F64	0xE124    B	L_end_GPIO_Config
;__Lib_GPIO_32L07x.c, 299 :: 		
L_GPIO_Config27:
;__Lib_GPIO_32L07x.c, 300 :: 		
L_GPIO_Config25:
;__Lib_GPIO_32L07x.c, 303 :: 		
0x0F66	0x9C01    LDR	R4, [SP, #4]
0x0F68	0xB2A4    UXTH	R4, R4
0x0F6A	0x4B98    LDR	R3, [PC, #608]
0x0F6C	0x429C    CMP	R4, R3
0x0F6E	0xD121    BNE	L_GPIO_Config28
;__Lib_GPIO_32L07x.c, 305 :: 		
0x0F70	0x9B04    LDR	R3, [SP, #16]
0x0F72	0x681C    LDR	R4, [R3, #0]
;__Lib_GPIO_32L07x.c, 306 :: 		
0x0F74	0x4B94    LDR	R3, [PC, #592]
0x0F76	0x4023    ANDS	R3, R4
; tmp start address is: 0 (R0)
0x0F78	0x4618    MOV	R0, R3
;__Lib_GPIO_32L07x.c, 308 :: 		
0x0F7A	0x9C02    LDR	R4, [SP, #8]
0x0F7C	0x4B8F    LDR	R3, [PC, #572]
0x0F7E	0x429C    CMP	R4, R3
0x0F80	0xD112    BNE	L_GPIO_Config29
;__Lib_GPIO_32L07x.c, 311 :: 		
0x0F82	0x4B93    LDR	R3, [PC, #588]
0x0F84	0x4604    MOV	R4, R0
0x0F86	0x431C    ORRS	R4, R3
; tmp end address is: 0 (R0)
;__Lib_GPIO_32L07x.c, 312 :: 		
0x0F88	0x9B04    LDR	R3, [SP, #16]
0x0F8A	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32L07x.c, 315 :: 		
0x0F8C	0x9B04    LDR	R3, [SP, #16]
0x0F8E	0x1D1D    ADDS	R5, R3, #4
0x0F90	0x682C    LDR	R4, [R5, #0]
0x0F92	0x4B90    LDR	R3, [PC, #576]
0x0F94	0x4023    ANDS	R3, R4
0x0F96	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32L07x.c, 318 :: 		
0x0F98	0x9B04    LDR	R3, [SP, #16]
0x0F9A	0x461D    MOV	R5, R3
0x0F9C	0x3508    ADDS	R5, #8
0x0F9E	0x682C    LDR	R4, [R5, #0]
0x0FA0	0x4B85    LDR	R3, [PC, #532]
0x0FA2	0x4323    ORRS	R3, R4
0x0FA4	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32L07x.c, 319 :: 		
0x0FA6	0xE103    B	L_end_GPIO_Config
;__Lib_GPIO_32L07x.c, 320 :: 		
L_GPIO_Config29:
;__Lib_GPIO_32L07x.c, 322 :: 		
; tmp start address is: 0 (R0)
0x0FA8	0x9B02    LDR	R3, [SP, #8]
0x0FAA	0x2B42    CMP	R3, #66
0x0FAC	0xD102    BNE	L_GPIO_Config30
;__Lib_GPIO_32L07x.c, 325 :: 		
0x0FAE	0x9B04    LDR	R3, [SP, #16]
0x0FB0	0x6018    STR	R0, [R3, #0]
; tmp end address is: 0 (R0)
;__Lib_GPIO_32L07x.c, 326 :: 		
0x0FB2	0xE0FD    B	L_end_GPIO_Config
;__Lib_GPIO_32L07x.c, 327 :: 		
L_GPIO_Config30:
;__Lib_GPIO_32L07x.c, 328 :: 		
L_GPIO_Config28:
;__Lib_GPIO_32L07x.c, 331 :: 		
0x0FB4	0x9C01    LDR	R4, [SP, #4]
0x0FB6	0xB2A4    UXTH	R4, R4
0x0FB8	0x4B83    LDR	R3, [PC, #524]
0x0FBA	0x429C    CMP	R4, R3
0x0FBC	0xD117    BNE	L_GPIO_Config31
;__Lib_GPIO_32L07x.c, 333 :: 		
0x0FBE	0x9C02    LDR	R4, [SP, #8]
0x0FC0	0x4B7E    LDR	R3, [PC, #504]
0x0FC2	0x429C    CMP	R4, R3
0x0FC4	0xD10C    BNE	L_GPIO_Config32
;__Lib_GPIO_32L07x.c, 336 :: 		
0x0FC6	0x4C84    LDR	R4, [PC, #528]
0x0FC8	0x9B04    LDR	R3, [SP, #16]
0x0FCA	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32L07x.c, 339 :: 		
0x0FCC	0x9B04    LDR	R3, [SP, #16]
0x0FCE	0x1D1C    ADDS	R4, R3, #4
0x0FD0	0x2300    MOVS	R3, #0
0x0FD2	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32L07x.c, 342 :: 		
0x0FD4	0x9B04    LDR	R3, [SP, #16]
0x0FD6	0x461C    MOV	R4, R3
0x0FD8	0x3408    ADDS	R4, #8
0x0FDA	0x4B80    LDR	R3, [PC, #512]
0x0FDC	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32L07x.c, 343 :: 		
0x0FDE	0xE0E7    B	L_end_GPIO_Config
;__Lib_GPIO_32L07x.c, 344 :: 		
L_GPIO_Config32:
;__Lib_GPIO_32L07x.c, 346 :: 		
0x0FE0	0x9B02    LDR	R3, [SP, #8]
0x0FE2	0x2B42    CMP	R3, #66
0x0FE4	0xD103    BNE	L_GPIO_Config33
;__Lib_GPIO_32L07x.c, 349 :: 		
0x0FE6	0x2400    MOVS	R4, #0
0x0FE8	0x9B04    LDR	R3, [SP, #16]
0x0FEA	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32L07x.c, 350 :: 		
0x0FEC	0xE0E0    B	L_end_GPIO_Config
;__Lib_GPIO_32L07x.c, 351 :: 		
L_GPIO_Config33:
;__Lib_GPIO_32L07x.c, 352 :: 		
L_GPIO_Config31:
;__Lib_GPIO_32L07x.c, 361 :: 		
0x0FEE	0x9C02    LDR	R4, [SP, #8]
0x0FF0	0x2301    MOVS	R3, #1
0x0FF2	0x4023    ANDS	R3, R4
0x0FF4	0x2B00    CMP	R3, #0
0x0FF6	0xD002    BEQ	L_GPIO_Config34
;__Lib_GPIO_32L07x.c, 363 :: 		
; mode start address is: 0 (R0)
0x0FF8	0x2003    MOVS	R0, #3
;__Lib_GPIO_32L07x.c, 364 :: 		
0x0FFA	0x4607    MOV	R7, R0
; mode end address is: 0 (R0)
0x0FFC	0xE00F    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32L07x.c, 366 :: 		
0x0FFE	0x9C02    LDR	R4, [SP, #8]
0x1000	0x2308    MOVS	R3, #8
0x1002	0x4023    ANDS	R3, R4
0x1004	0x2B00    CMP	R3, #0
0x1006	0xD001    BEQ	L_GPIO_Config36
;__Lib_GPIO_32L07x.c, 368 :: 		
; mode start address is: 0 (R0)
0x1008	0x2002    MOVS	R0, #2
;__Lib_GPIO_32L07x.c, 369 :: 		
; mode end address is: 0 (R0)
0x100A	0xE007    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32L07x.c, 371 :: 		
0x100C	0x9C02    LDR	R4, [SP, #8]
0x100E	0x2304    MOVS	R3, #4
0x1010	0x4023    ANDS	R3, R4
0x1012	0x2B00    CMP	R3, #0
0x1014	0xD001    BEQ	L_GPIO_Config38
;__Lib_GPIO_32L07x.c, 373 :: 		
; mode start address is: 0 (R0)
0x1016	0x2001    MOVS	R0, #1
;__Lib_GPIO_32L07x.c, 374 :: 		
; mode end address is: 0 (R0)
0x1018	0xE000    B	L_GPIO_Config39
L_GPIO_Config38:
;__Lib_GPIO_32L07x.c, 378 :: 		
; mode start address is: 0 (R0)
0x101A	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
;__Lib_GPIO_32L07x.c, 379 :: 		
L_GPIO_Config39:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config37:
; mode start address is: 0 (R0)
0x101C	0x4607    MOV	R7, R0
; mode end address is: 0 (R0)
L_GPIO_Config35:
;__Lib_GPIO_32L07x.c, 387 :: 		
; mode start address is: 28 (R7)
0x101E	0x9C02    LDR	R4, [SP, #8]
0x1020	0x4B6F    LDR	R3, [PC, #444]
0x1022	0x4023    ANDS	R3, R4
0x1024	0x2B00    CMP	R3, #0
0x1026	0xD001    BEQ	L_GPIO_Config40
;__Lib_GPIO_32L07x.c, 389 :: 		
; speed start address is: 8 (R2)
0x1028	0x2203    MOVS	R2, #3
;__Lib_GPIO_32L07x.c, 390 :: 		
; speed end address is: 8 (R2)
0x102A	0xE010    B	L_GPIO_Config41
L_GPIO_Config40:
;__Lib_GPIO_32L07x.c, 392 :: 		
0x102C	0x9C02    LDR	R4, [SP, #8]
0x102E	0x4B6D    LDR	R3, [PC, #436]
0x1030	0x4023    ANDS	R3, R4
0x1032	0x2B00    CMP	R3, #0
0x1034	0xD001    BEQ	L_GPIO_Config42
;__Lib_GPIO_32L07x.c, 394 :: 		
; speed start address is: 8 (R2)
0x1036	0x2202    MOVS	R2, #2
;__Lib_GPIO_32L07x.c, 395 :: 		
; speed end address is: 8 (R2)
0x1038	0xE009    B	L_GPIO_Config43
L_GPIO_Config42:
;__Lib_GPIO_32L07x.c, 397 :: 		
0x103A	0x9C02    LDR	R4, [SP, #8]
0x103C	0x4B6A    LDR	R3, [PC, #424]
0x103E	0x4023    ANDS	R3, R4
0x1040	0x2B00    CMP	R3, #0
0x1042	0xD002    BEQ	L_GPIO_Config44
;__Lib_GPIO_32L07x.c, 399 :: 		
; speed start address is: 4 (R1)
0x1044	0x2101    MOVS	R1, #1
;__Lib_GPIO_32L07x.c, 400 :: 		
0x1046	0x460A    MOV	R2, R1
; speed end address is: 4 (R1)
0x1048	0xE001    B	L_GPIO_Config45
L_GPIO_Config44:
;__Lib_GPIO_32L07x.c, 404 :: 		
; speed start address is: 4 (R1)
0x104A	0x2100    MOVS	R1, #0
; speed end address is: 4 (R1)
0x104C	0x460A    MOV	R2, R1
;__Lib_GPIO_32L07x.c, 405 :: 		
L_GPIO_Config45:
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
L_GPIO_Config43:
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
L_GPIO_Config41:
;__Lib_GPIO_32L07x.c, 408 :: 		
; speed start address is: 8 (R2)
0x104E	0x9C02    LDR	R4, [SP, #8]
0x1050	0x2320    MOVS	R3, #32
0x1052	0x4023    ANDS	R3, R4
0x1054	0x2B00    CMP	R3, #0
0x1056	0xD001    BEQ	L_GPIO_Config46
;__Lib_GPIO_32L07x.c, 410 :: 		
; otype start address is: 4 (R1)
0x1058	0x2101    MOVS	R1, #1
;__Lib_GPIO_32L07x.c, 411 :: 		
; otype end address is: 4 (R1)
0x105A	0xE000    B	L_GPIO_Config47
L_GPIO_Config46:
;__Lib_GPIO_32L07x.c, 415 :: 		
; otype start address is: 4 (R1)
0x105C	0x2100    MOVS	R1, #0
; otype end address is: 4 (R1)
;__Lib_GPIO_32L07x.c, 416 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32L07x.c, 424 :: 		
; otype start address is: 4 (R1)
0x105E	0x9C02    LDR	R4, [SP, #8]
0x1060	0x23FF    MOVS	R3, #255
0x1062	0x3301    ADDS	R3, #1
0x1064	0x4023    ANDS	R3, R4
0x1066	0x2B00    CMP	R3, #0
0x1068	0xD002    BEQ	L_GPIO_Config48
;__Lib_GPIO_32L07x.c, 426 :: 		
; pull start address is: 16 (R4)
0x106A	0x2402    MOVS	R4, #2
;__Lib_GPIO_32L07x.c, 427 :: 		
0x106C	0x4620    MOV	R0, R4
; pull end address is: 16 (R4)
0x106E	0xE008    B	L_GPIO_Config49
L_GPIO_Config48:
;__Lib_GPIO_32L07x.c, 429 :: 		
0x1070	0x9C02    LDR	R4, [SP, #8]
0x1072	0x2380    MOVS	R3, #128
0x1074	0x4023    ANDS	R3, R4
0x1076	0x2B00    CMP	R3, #0
0x1078	0xD001    BEQ	L_GPIO_Config50
;__Lib_GPIO_32L07x.c, 431 :: 		
; pull start address is: 16 (R4)
0x107A	0x2401    MOVS	R4, #1
;__Lib_GPIO_32L07x.c, 432 :: 		
; pull end address is: 16 (R4)
0x107C	0xE000    B	L_GPIO_Config51
L_GPIO_Config50:
;__Lib_GPIO_32L07x.c, 435 :: 		
; pull start address is: 16 (R4)
0x107E	0x2400    MOVS	R4, #0
; pull end address is: 16 (R4)
L_GPIO_Config51:
; pull start address is: 16 (R4)
0x1080	0x4620    MOV	R0, R4
; pull end address is: 16 (R4)
L_GPIO_Config49:
;__Lib_GPIO_32L07x.c, 438 :: 		
; pull start address is: 0 (R0)
0x1082	0x2300    MOVS	R3, #0
0x1084	0x9303    STR	R3, [SP, #12]
L_GPIO_Config52:
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 28 (R7)
; mode end address is: 28 (R7)
0x1086	0x9B03    LDR	R3, [SP, #12]
0x1088	0x2B10    CMP	R3, #16
0x108A	0xD300    BCC	#0
0x108C	0xE090    B	L_GPIO_Config53
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 28 (R7)
;__Lib_GPIO_32L07x.c, 440 :: 		
; mode start address is: 28 (R7)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x108E	0x9D03    LDR	R5, [SP, #12]
0x1090	0x2301    MOVS	R3, #1
0x1092	0x461C    MOV	R4, R3
0x1094	0x40AC    LSLS	R4, R5
;__Lib_GPIO_32L07x.c, 443 :: 		
0x1096	0x9B01    LDR	R3, [SP, #4]
0x1098	0xB29B    UXTH	R3, R3
0x109A	0x4023    ANDS	R3, R4
;__Lib_GPIO_32L07x.c, 444 :: 		
0x109C	0x42A3    CMP	R3, R4
0x109E	0xD000    BEQ	#0
0x10A0	0xE082    B	L_GPIO_Config55
;__Lib_GPIO_32L07x.c, 447 :: 		
0x10A2	0x9B03    LDR	R3, [SP, #12]
0x10A4	0x005D    LSLS	R5, R3, #1
0x10A6	0x2403    MOVS	R4, #3
0x10A8	0x4623    MOV	R3, R4
0x10AA	0x40AB    LSLS	R3, R5
0x10AC	0x43DC    MVN	R4, R3
0x10AE	0x9B04    LDR	R3, [SP, #16]
0x10B0	0x681B    LDR	R3, [R3, #0]
0x10B2	0x401C    ANDS	R4, R3
0x10B4	0x9B04    LDR	R3, [SP, #16]
0x10B6	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32L07x.c, 449 :: 		
0x10B8	0x9B03    LDR	R3, [SP, #12]
0x10BA	0x005B    LSLS	R3, R3, #1
0x10BC	0x463C    MOV	R4, R7
0x10BE	0x409C    LSLS	R4, R3
0x10C0	0x9B04    LDR	R3, [SP, #16]
0x10C2	0x681B    LDR	R3, [R3, #0]
0x10C4	0x431C    ORRS	R4, R3
0x10C6	0x9B04    LDR	R3, [SP, #16]
0x10C8	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32L07x.c, 453 :: 		
0x10CA	0x9C02    LDR	R4, [SP, #8]
0x10CC	0x230C    MOVS	R3, #12
0x10CE	0x4023    ANDS	R3, R4
0x10D0	0x2B00    CMP	R3, #0
0x10D2	0xD027    BEQ	L_GPIO_Config56
;__Lib_GPIO_32L07x.c, 456 :: 		
0x10D4	0x9B04    LDR	R3, [SP, #16]
0x10D6	0x461E    MOV	R6, R3
0x10D8	0x3608    ADDS	R6, #8
0x10DA	0x9B03    LDR	R3, [SP, #12]
0x10DC	0x005D    LSLS	R5, R3, #1
0x10DE	0x2403    MOVS	R4, #3
0x10E0	0x4623    MOV	R3, R4
0x10E2	0x40AB    LSLS	R3, R5
0x10E4	0x43DC    MVN	R4, R3
0x10E6	0x6833    LDR	R3, [R6, #0]
0x10E8	0x4023    ANDS	R3, R4
0x10EA	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32L07x.c, 458 :: 		
0x10EC	0x9B04    LDR	R3, [SP, #16]
0x10EE	0x461D    MOV	R5, R3
0x10F0	0x3508    ADDS	R5, #8
0x10F2	0x9B03    LDR	R3, [SP, #12]
0x10F4	0x005B    LSLS	R3, R3, #1
0x10F6	0x4614    MOV	R4, R2
0x10F8	0x409C    LSLS	R4, R3
0x10FA	0x682B    LDR	R3, [R5, #0]
0x10FC	0x4323    ORRS	R3, R4
0x10FE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32L07x.c, 462 :: 		
0x1100	0x9B04    LDR	R3, [SP, #16]
0x1102	0x1D1E    ADDS	R6, R3, #4
0x1104	0x9D03    LDR	R5, [SP, #12]
0x1106	0x2401    MOVS	R4, #1
0x1108	0x4623    MOV	R3, R4
0x110A	0x40AB    LSLS	R3, R5
0x110C	0x43DC    MVN	R4, R3
0x110E	0x6833    LDR	R3, [R6, #0]
0x1110	0x4023    ANDS	R3, R4
0x1112	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32L07x.c, 464 :: 		
0x1114	0x9B04    LDR	R3, [SP, #16]
0x1116	0x1D1D    ADDS	R5, R3, #4
0x1118	0x9B03    LDR	R3, [SP, #12]
0x111A	0x460C    MOV	R4, R1
0x111C	0x409C    LSLS	R4, R3
0x111E	0x682B    LDR	R3, [R5, #0]
0x1120	0x4323    ORRS	R3, R4
0x1122	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32L07x.c, 465 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32L07x.c, 470 :: 		
0x1124	0x9B04    LDR	R3, [SP, #16]
0x1126	0x461E    MOV	R6, R3
0x1128	0x360C    ADDS	R6, #12
0x112A	0x9B03    LDR	R3, [SP, #12]
0x112C	0x005D    LSLS	R5, R3, #1
0x112E	0x2403    MOVS	R4, #3
0x1130	0x4623    MOV	R3, R4
0x1132	0x40AB    LSLS	R3, R5
0x1134	0x43DC    MVN	R4, R3
0x1136	0x6833    LDR	R3, [R6, #0]
0x1138	0x4023    ANDS	R3, R4
0x113A	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32L07x.c, 472 :: 		
0x113C	0x9B04    LDR	R3, [SP, #16]
0x113E	0x461D    MOV	R5, R3
0x1140	0x350C    ADDS	R5, #12
0x1142	0x9B03    LDR	R3, [SP, #12]
0x1144	0x005B    LSLS	R3, R3, #1
0x1146	0x4604    MOV	R4, R0
0x1148	0x409C    LSLS	R4, R3
0x114A	0x682B    LDR	R3, [R5, #0]
0x114C	0x4323    ORRS	R3, R4
0x114E	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32L07x.c, 484 :: 		
0x1150	0x9C02    LDR	R4, [SP, #8]
0x1152	0x2308    MOVS	R3, #8
0x1154	0x4023    ANDS	R3, R4
0x1156	0x2B00    CMP	R3, #0
0x1158	0xD026    BEQ	L_GPIO_Config57
;__Lib_GPIO_32L07x.c, 486 :: 		
0x115A	0x9C02    LDR	R4, [SP, #8]
0x115C	0x4B23    LDR	R3, [PC, #140]
0x115E	0x4023    ANDS	R3, R4
0x1160	0x0D1B    LSRS	R3, R3, #20
0x1162	0x9300    STR	R3, [SP, #0]
;__Lib_GPIO_32L07x.c, 489 :: 		
0x1164	0x9B03    LDR	R3, [SP, #12]
0x1166	0x2B07    CMP	R3, #7
0x1168	0xD906    BLS	L_GPIO_Config58
;__Lib_GPIO_32L07x.c, 491 :: 		
0x116A	0x9B04    LDR	R3, [SP, #16]
0x116C	0x3324    ADDS	R3, #36
0x116E	0x9305    STR	R3, [SP, #20]
;__Lib_GPIO_32L07x.c, 492 :: 		
0x1170	0x9B03    LDR	R3, [SP, #12]
0x1172	0x461E    MOV	R6, R3
0x1174	0x3E08    SUBS	R6, #8
; pos start address is: 24 (R6)
;__Lib_GPIO_32L07x.c, 493 :: 		
; pos end address is: 24 (R6)
0x1176	0xE003    B	L_GPIO_Config59
L_GPIO_Config58:
;__Lib_GPIO_32L07x.c, 497 :: 		
0x1178	0x9B04    LDR	R3, [SP, #16]
0x117A	0x3320    ADDS	R3, #32
0x117C	0x9305    STR	R3, [SP, #20]
;__Lib_GPIO_32L07x.c, 498 :: 		
; pos start address is: 24 (R6)
0x117E	0x9E03    LDR	R6, [SP, #12]
; pos end address is: 24 (R6)
;__Lib_GPIO_32L07x.c, 499 :: 		
L_GPIO_Config59:
;__Lib_GPIO_32L07x.c, 502 :: 		
; pos start address is: 24 (R6)
0x1180	0x00B5    LSLS	R5, R6, #2
0x1182	0x240F    MOVS	R4, #15
0x1184	0x4623    MOV	R3, R4
0x1186	0x40AB    LSLS	R3, R5
0x1188	0x43DC    MVN	R4, R3
0x118A	0x9B05    LDR	R3, [SP, #20]
0x118C	0x681B    LDR	R3, [R3, #0]
0x118E	0x401C    ANDS	R4, R3
0x1190	0x9B05    LDR	R3, [SP, #20]
0x1192	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32L07x.c, 504 :: 		
0x1194	0x9D00    LDR	R5, [SP, #0]
0x1196	0xB2ED    UXTB	R5, R5
0x1198	0x00B3    LSLS	R3, R6, #2
; pos end address is: 24 (R6)
0x119A	0x462C    MOV	R4, R5
0x119C	0x409C    LSLS	R4, R3
0x119E	0x9B05    LDR	R3, [SP, #20]
0x11A0	0x681B    LDR	R3, [R3, #0]
0x11A2	0x431C    ORRS	R4, R3
0x11A4	0x9B05    LDR	R3, [SP, #20]
0x11A6	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32L07x.c, 505 :: 		
L_GPIO_Config57:
;__Lib_GPIO_32L07x.c, 506 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32L07x.c, 438 :: 		
0x11A8	0x9B03    LDR	R3, [SP, #12]
0x11AA	0x3301    ADDS	R3, #1
0x11AC	0x9303    STR	R3, [SP, #12]
;__Lib_GPIO_32L07x.c, 507 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 28 (R7)
0x11AE	0xE76A    B	L_GPIO_Config52
L_GPIO_Config53:
;__Lib_GPIO_32L07x.c, 508 :: 		
L_end_GPIO_Config:
0x11B0	0xB006    ADD	SP, SP, #24
0x11B2	0xBD00    POP	(R15)
0x11B4	0xFC00FFFF  	#-1024
0x11B8	0x0000FFFF  	#-65536
0x11BC	0x00140008  	#524308
0x11C0	0x55550000  	#21845
0x11C4	0xFF00FFFF  	#-256
0x11C8	0xFFFF0000  	#65535
0x11CC	0xFF000000  	#65280
0x11D0	0x00005555  	#1431633920
0x11D4	0x00FFFFFF  	#-65281
0x11D8	0x55555555  	#1431655765
0x11DC	0xFFFFFFFF  	#-1
0x11E0	0x08000008  	#526336
0x11E4	0x04000000  	#1024
0x11E8	0x02000000  	#512
0x11EC	0x000000F0  	#15728640
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32L07x.c, 146 :: 		
; port start address is: 0 (R0)
0x04A4	0xB500    PUSH	(R14)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
;__Lib_GPIO_32L07x.c, 153 :: 		
0x04A6	0x4915    LDR	R1, [PC, #84]
0x04A8	0x4001    ANDS	R1, R0
; port end address is: 0 (R0)
; portBase start address is: 0 (R0)
0x04AA	0x4608    MOV	R0, R1
;__Lib_GPIO_32L07x.c, 155 :: 		
; pos start address is: 8 (R2)
0x04AC	0x2200    MOVS	R2, #0
;__Lib_GPIO_32L07x.c, 156 :: 		
0x04AE	0xE00B    B	L_GPIO_Clk_Enable9
; portBase end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32L07x.c, 158 :: 		
L_GPIO_Clk_Enable11:
;__Lib_GPIO_32L07x.c, 160 :: 		
; pos start address is: 0 (R0)
0x04B0	0x2001    MOVS	R0, #1
;__Lib_GPIO_32L07x.c, 161 :: 		
; pos end address is: 0 (R0)
0x04B2	0xE01C    B	L_GPIO_Clk_Enable10
;__Lib_GPIO_32L07x.c, 163 :: 		
L_GPIO_Clk_Enable12:
;__Lib_GPIO_32L07x.c, 165 :: 		
; pos start address is: 0 (R0)
0x04B4	0x2002    MOVS	R0, #2
;__Lib_GPIO_32L07x.c, 166 :: 		
; pos end address is: 0 (R0)
0x04B6	0xE01A    B	L_GPIO_Clk_Enable10
;__Lib_GPIO_32L07x.c, 168 :: 		
L_GPIO_Clk_Enable13:
;__Lib_GPIO_32L07x.c, 170 :: 		
; pos start address is: 0 (R0)
0x04B8	0x2004    MOVS	R0, #4
;__Lib_GPIO_32L07x.c, 171 :: 		
; pos end address is: 0 (R0)
0x04BA	0xE018    B	L_GPIO_Clk_Enable10
;__Lib_GPIO_32L07x.c, 173 :: 		
L_GPIO_Clk_Enable14:
;__Lib_GPIO_32L07x.c, 175 :: 		
; pos start address is: 0 (R0)
0x04BC	0x2008    MOVS	R0, #8
;__Lib_GPIO_32L07x.c, 176 :: 		
; pos end address is: 0 (R0)
0x04BE	0xE016    B	L_GPIO_Clk_Enable10
;__Lib_GPIO_32L07x.c, 178 :: 		
L_GPIO_Clk_Enable15:
;__Lib_GPIO_32L07x.c, 180 :: 		
; pos start address is: 0 (R0)
0x04C0	0x2010    MOVS	R0, #16
;__Lib_GPIO_32L07x.c, 181 :: 		
; pos end address is: 0 (R0)
0x04C2	0xE014    B	L_GPIO_Clk_Enable10
;__Lib_GPIO_32L07x.c, 183 :: 		
L_GPIO_Clk_Enable16:
;__Lib_GPIO_32L07x.c, 185 :: 		
; pos start address is: 0 (R0)
0x04C4	0x2080    MOVS	R0, #128
;__Lib_GPIO_32L07x.c, 186 :: 		
; pos end address is: 0 (R0)
0x04C6	0xE012    B	L_GPIO_Clk_Enable10
;__Lib_GPIO_32L07x.c, 188 :: 		
L_GPIO_Clk_Enable9:
; pos start address is: 8 (R2)
; portBase start address is: 0 (R0)
0x04C8	0x490D    LDR	R1, [PC, #52]
0x04CA	0x4288    CMP	R0, R1
0x04CC	0xD0F0    BEQ	L_GPIO_Clk_Enable11
0x04CE	0x490D    LDR	R1, [PC, #52]
0x04D0	0x4288    CMP	R0, R1
0x04D2	0xD0EF    BEQ	L_GPIO_Clk_Enable12
0x04D4	0x490C    LDR	R1, [PC, #48]
0x04D6	0x4288    CMP	R0, R1
0x04D8	0xD0EE    BEQ	L_GPIO_Clk_Enable13
0x04DA	0x490C    LDR	R1, [PC, #48]
0x04DC	0x4288    CMP	R0, R1
0x04DE	0xD0ED    BEQ	L_GPIO_Clk_Enable14
0x04E0	0x490B    LDR	R1, [PC, #44]
0x04E2	0x4288    CMP	R0, R1
0x04E4	0xD0EC    BEQ	L_GPIO_Clk_Enable15
0x04E6	0x490B    LDR	R1, [PC, #44]
0x04E8	0x4288    CMP	R0, R1
0x04EA	0xD0EB    BEQ	L_GPIO_Clk_Enable16
; portBase end address is: 0 (R0)
; pos end address is: 8 (R2)
0x04EC	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable10:
;__Lib_GPIO_32L07x.c, 191 :: 		
; pos start address is: 0 (R0)
0x04EE	0x490A    LDR	R1, [PC, #40]
0x04F0	0x6809    LDR	R1, [R1, #0]
0x04F2	0x460A    MOV	R2, R1
0x04F4	0x4302    ORRS	R2, R0
; pos end address is: 0 (R0)
0x04F6	0x4908    LDR	R1, [PC, #32]
0x04F8	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32L07x.c, 192 :: 		
L_end_GPIO_Clk_Enable:
0x04FA	0xBD00    POP	(R15)
0x04FC	0xFC00FFFF  	#-1024
0x0500	0x00005000  	#1342177280
0x0504	0x04005000  	#1342178304
0x0508	0x08005000  	#1342179328
0x050C	0x0C005000  	#1342180352
0x0510	0x10005000  	#1342181376
0x0514	0x1C005000  	#1342184448
0x0518	0x102C4002  	RCC_IOPENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Output:
;__Lib_GPIO_32L07x.c, 532 :: 		
; pinMask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1508	0xB500    PUSH	(R14)
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pinMask start address is: 4 (R1)
;__Lib_GPIO_32L07x.c, 534 :: 		
0x150A	0x4A02    LDR	R2, [PC, #8]
0x150C	0xB289    UXTH	R1, R1
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
0x150E	0xF7FFFCFB  BL	_GPIO_Config+0
;__Lib_GPIO_32L07x.c, 535 :: 		
L_end_GPIO_Digital_Output:
0x1512	0xBD00    POP	(R15)
0x1514	0x00140008  	#524308
; end of _GPIO_Digital_Output
_InitTimer2:
;DriverRF4463PROMain.c, 481 :: 		void InitTimer2(){
0x1518	0xB500    PUSH	(R14)
;DriverRF4463PROMain.c, 482 :: 		RCC_APB1ENR.TIM2EN = 1;
0x151A	0x4A0F    LDR	R2, [PC, #60]
0x151C	0x6810    LDR	R0, [R2, #0]
0x151E	0x2101    MOVS	R1, #1
0x1520	0x4308    ORRS	R0, R1
0x1522	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 483 :: 		TIM2_CR1.CEN = 0;
0x1524	0x4A0D    LDR	R2, [PC, #52]
0x1526	0x6810    LDR	R0, [R2, #0]
0x1528	0x2120    MOVS	R1, #32
0x152A	0x4388    BICS	R0, R1
0x152C	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 484 :: 		TIM2_PSC = 224;
0x152E	0x21E0    MOVS	R1, #224
0x1530	0x480B    LDR	R0, [PC, #44]
0x1532	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 485 :: 		TIM2_ARR = 63999;
0x1534	0x490B    LDR	R1, [PC, #44]
0x1536	0x480C    LDR	R0, [PC, #48]
0x1538	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 486 :: 		NVIC_IntEnable( IVT_INT_TIM2 );
0x153A	0x201F    MOVS	R0, #31
0x153C	0xF000F840  BL	_NVIC_IntEnable+0
;DriverRF4463PROMain.c, 487 :: 		TIM2_DIER.UIE = 1;
0x1540	0x4A0A    LDR	R2, [PC, #40]
0x1542	0x6810    LDR	R0, [R2, #0]
0x1544	0x2101    MOVS	R1, #1
0x1546	0x4308    ORRS	R0, R1
0x1548	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 488 :: 		TIM2_CR1bits.CEN = 1;
0x154A	0x4A09    LDR	R2, [PC, #36]
0x154C	0x6810    LDR	R0, [R2, #0]
0x154E	0x2101    MOVS	R1, #1
0x1550	0x4308    ORRS	R0, R1
0x1552	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 489 :: 		}
L_end_InitTimer2:
0x1554	0xBD00    POP	(R15)
0x1556	0xBF00    NOP
0x1558	0x10384002  	RCC_APB1ENR+0
0x155C	0x00004000  	TIM2_CR1+0
0x1560	0x00284000  	TIM2_PSC+0
0x1564	0xF9FF0000  	#63999
0x1568	0x002C4000  	TIM2_ARR+0
0x156C	0x000C4000  	TIM2_DIER+0
0x1570	0x00004000  	TIM2_CR1bits+0
; end of _InitTimer2
_vUSARTConfigUSART1:
;uarthandler.c, 151 :: 		void vUSARTConfigUSART1 ( unsigned long ulBaudRate ) {
0x1574	0xB500    PUSH	(R14)
;uarthandler.c, 153 :: 		UART1_Init_Advanced( ulBaudRate, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10 );
0x1576	0x480B    LDR	R0, [PC, #44]
0x1578	0xB401    PUSH	(R0)
0x157A	0x2300    MOVS	R3, #0
0x157C	0x2200    MOVS	R2, #0
0x157E	0x2100    MOVS	R1, #0
0x1580	0x9802    LDR	R0, [SP, #8]
0x1582	0xF7FFFC97  BL	_UART1_Init_Advanced+0
0x1586	0xB001    ADD	SP, SP, #4
;uarthandler.c, 154 :: 		USART1_CR1bits.UE = 0;
0x1588	0x4A07    LDR	R2, [PC, #28]
0x158A	0x6810    LDR	R0, [R2, #0]
0x158C	0x2101    MOVS	R1, #1
0x158E	0x4388    BICS	R0, R1
0x1590	0x6010    STR	R0, [R2, #0]
;uarthandler.c, 156 :: 		ulClk = Clock_MHz() * 1000000;         // paso extra para verificacion en depuracion
0x1592	0x4906    LDR	R1, [PC, #24]
0x1594	0x4806    LDR	R0, [PC, #24]
0x1596	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 160 :: 		USART1_CR1bits.UE = 1;
0x1598	0x4A03    LDR	R2, [PC, #12]
0x159A	0x6810    LDR	R0, [R2, #0]
0x159C	0x2101    MOVS	R1, #1
0x159E	0x4308    ORRS	R0, R1
0x15A0	0x6010    STR	R0, [R2, #0]
;uarthandler.c, 162 :: 		}
L_end_vUSARTConfigUSART1:
0x15A2	0xBD00    POP	(R15)
0x15A4	0x410C0000  	__GPIO_MODULE_USART1_PA9_10+0
0x15A8	0x38004001  	USART1_CR1bits+0
0x15AC	0x240000F4  	#16000000
0x15B0	0x111C2000  	_ulClk+0
; end of _vUSARTConfigUSART1
_UART1_Init_Advanced:
;__Lib_UART_12_45.c, 323 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x0EB4	0xB500    PUSH	(R14)
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x0EB6	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_12_45.c, 325 :: 		
0x0EB8	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0EBA	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0EBC	0xB408    PUSH	(R3)
0x0EBE	0xB293    UXTH	R3, R2
0x0EC0	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x0EC2	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0EC4	0x4802    LDR	R0, [PC, #8]
; stop_bits end address is: 12 (R3)
0x0EC6	0xF7FFFB59  BL	__Lib_UART_12_45_UARTx_Init_Advanced+0
0x0ECA	0xB002    ADD	SP, SP, #8
;__Lib_UART_12_45.c, 326 :: 		
L_end_UART1_Init_Advanced:
0x0ECC	0xBD00    POP	(R15)
0x0ECE	0xBF00    NOP
0x0ED0	0x38004001  	USART1_CR1+0
; end of _UART1_Init_Advanced
__Lib_UART_12_45_UARTx_Init_Advanced:
;__Lib_UART_12_45.c, 248 :: 		
; UART_Base start address is: 0 (R0)
0x057C	0xB500    PUSH	(R14)
0x057E	0xB089    SUB	SP, SP, #36
0x0580	0x9107    STR	R1, [SP, #28]
0x0582	0x4601    MOV	R1, R0
0x0584	0x9308    STR	R3, [SP, #32]
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x0586	0x9C0A    LDR	R4, [SP, #40]
0x0588	0xB2A4    UXTH	R4, R4
0x058A	0x940A    STR	R4, [SP, #40]
; module start address is: 28 (R7)
0x058C	0x9F0B    LDR	R7, [SP, #44]
;__Lib_UART_12_45.c, 252 :: 		
0x058E	0x240C    MOVS	R4, #12
0x0590	0x446C    ADD	R4, SP, R4
0x0592	0x9100    STR	R1, [SP, #0]
0x0594	0x4620    MOV	R0, R4
0x0596	0xF7FFFE3B  BL	_RCC_GetClocksFrequency+0
0x059A	0x9900    LDR	R1, [SP, #0]
;__Lib_UART_12_45.c, 254 :: 		
0x059C	0x4C55    LDR	R4, [PC, #340]
0x059E	0x42A1    CMP	R1, R4
0x05A0	0xD114    BNE	L___Lib_UART_12_45_UARTx_Init_Advanced15
;__Lib_UART_12_45.c, 255 :: 		
0x05A2	0x4E55    LDR	R6, [PC, #340]
0x05A4	0x6834    LDR	R4, [R6, #0]
0x05A6	0x2501    MOVS	R5, #1
0x05A8	0x03AD    LSLS	R5, R5, #14
0x05AA	0x432C    ORRS	R4, R5
0x05AC	0x6034    STR	R4, [R6, #0]
;__Lib_UART_12_45.c, 256 :: 		
0x05AE	0x4D53    LDR	R5, [PC, #332]
0x05B0	0x4C53    LDR	R4, [PC, #332]
0x05B2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 257 :: 		
0x05B4	0x4D53    LDR	R5, [PC, #332]
0x05B6	0x4C54    LDR	R4, [PC, #336]
0x05B8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 258 :: 		
0x05BA	0x4D54    LDR	R5, [PC, #336]
0x05BC	0x4C54    LDR	R4, [PC, #336]
0x05BE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 259 :: 		
0x05C0	0x4D54    LDR	R5, [PC, #336]
0x05C2	0x4C55    LDR	R4, [PC, #340]
0x05C4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 260 :: 		
0x05C6	0x9C06    LDR	R4, [SP, #24]
0x05C8	0x9401    STR	R4, [SP, #4]
;__Lib_UART_12_45.c, 261 :: 		
0x05CA	0xE046    B	L___Lib_UART_12_45_UARTx_Init_Advanced16
L___Lib_UART_12_45_UARTx_Init_Advanced15:
;__Lib_UART_12_45.c, 262 :: 		
0x05CC	0x4C53    LDR	R4, [PC, #332]
0x05CE	0x42A1    CMP	R1, R4
0x05D0	0xD114    BNE	L___Lib_UART_12_45_UARTx_Init_Advanced17
;__Lib_UART_12_45.c, 263 :: 		
0x05D2	0x4E53    LDR	R6, [PC, #332]
0x05D4	0x6834    LDR	R4, [R6, #0]
0x05D6	0x2501    MOVS	R5, #1
0x05D8	0x046D    LSLS	R5, R5, #17
0x05DA	0x432C    ORRS	R4, R5
0x05DC	0x6034    STR	R4, [R6, #0]
;__Lib_UART_12_45.c, 265 :: 		
0x05DE	0x4D51    LDR	R5, [PC, #324]
0x05E0	0x4C47    LDR	R4, [PC, #284]
0x05E2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 266 :: 		
0x05E4	0x4D50    LDR	R5, [PC, #320]
0x05E6	0x4C48    LDR	R4, [PC, #288]
0x05E8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 267 :: 		
0x05EA	0x4D50    LDR	R5, [PC, #320]
0x05EC	0x4C48    LDR	R4, [PC, #288]
0x05EE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 268 :: 		
0x05F0	0x4D4F    LDR	R5, [PC, #316]
0x05F2	0x4C49    LDR	R4, [PC, #292]
0x05F4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 269 :: 		
0x05F6	0x9C05    LDR	R4, [SP, #20]
0x05F8	0x9401    STR	R4, [SP, #4]
;__Lib_UART_12_45.c, 270 :: 		
0x05FA	0xE02E    B	L___Lib_UART_12_45_UARTx_Init_Advanced18
L___Lib_UART_12_45_UARTx_Init_Advanced17:
;__Lib_UART_12_45.c, 271 :: 		
0x05FC	0x4C4D    LDR	R4, [PC, #308]
0x05FE	0x42A1    CMP	R1, R4
0x0600	0xD114    BNE	L___Lib_UART_12_45_UARTx_Init_Advanced19
;__Lib_UART_12_45.c, 272 :: 		
0x0602	0x4E47    LDR	R6, [PC, #284]
0x0604	0x6834    LDR	R4, [R6, #0]
0x0606	0x2501    MOVS	R5, #1
0x0608	0x04ED    LSLS	R5, R5, #19
0x060A	0x432C    ORRS	R4, R5
0x060C	0x6034    STR	R4, [R6, #0]
;__Lib_UART_12_45.c, 273 :: 		
0x060E	0x4D4A    LDR	R5, [PC, #296]
0x0610	0x4C3B    LDR	R4, [PC, #236]
0x0612	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 274 :: 		
0x0614	0x4D49    LDR	R5, [PC, #292]
0x0616	0x4C3C    LDR	R4, [PC, #240]
0x0618	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 275 :: 		
0x061A	0x4D49    LDR	R5, [PC, #292]
0x061C	0x4C3C    LDR	R4, [PC, #240]
0x061E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 276 :: 		
0x0620	0x4D48    LDR	R5, [PC, #288]
0x0622	0x4C3D    LDR	R4, [PC, #244]
0x0624	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 277 :: 		
0x0626	0x9C05    LDR	R4, [SP, #20]
0x0628	0x9401    STR	R4, [SP, #4]
;__Lib_UART_12_45.c, 278 :: 		
0x062A	0xE016    B	L___Lib_UART_12_45_UARTx_Init_Advanced20
L___Lib_UART_12_45_UARTx_Init_Advanced19:
;__Lib_UART_12_45.c, 279 :: 		
0x062C	0x4C46    LDR	R4, [PC, #280]
0x062E	0x42A1    CMP	R1, R4
0x0630	0xD113    BNE	L___Lib_UART_12_45_UARTx_Init_Advanced21
;__Lib_UART_12_45.c, 280 :: 		
0x0632	0x4E3B    LDR	R6, [PC, #236]
0x0634	0x6834    LDR	R4, [R6, #0]
0x0636	0x2501    MOVS	R5, #1
0x0638	0x052D    LSLS	R5, R5, #20
0x063A	0x432C    ORRS	R4, R5
0x063C	0x6034    STR	R4, [R6, #0]
;__Lib_UART_12_45.c, 281 :: 		
0x063E	0x4D43    LDR	R5, [PC, #268]
0x0640	0x4C2F    LDR	R4, [PC, #188]
0x0642	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 282 :: 		
0x0644	0x4D42    LDR	R5, [PC, #264]
0x0646	0x4C30    LDR	R4, [PC, #192]
0x0648	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 283 :: 		
0x064A	0x4D42    LDR	R5, [PC, #264]
0x064C	0x4C30    LDR	R4, [PC, #192]
0x064E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 284 :: 		
0x0650	0x4D41    LDR	R5, [PC, #260]
0x0652	0x4C31    LDR	R4, [PC, #196]
0x0654	0x6025    STR	R5, [R4, #0]
;__Lib_UART_12_45.c, 285 :: 		
0x0656	0x9C05    LDR	R4, [SP, #20]
0x0658	0x9401    STR	R4, [SP, #4]
;__Lib_UART_12_45.c, 286 :: 		
L___Lib_UART_12_45_UARTx_Init_Advanced21:
L___Lib_UART_12_45_UARTx_Init_Advanced20:
L___Lib_UART_12_45_UARTx_Init_Advanced18:
L___Lib_UART_12_45_UARTx_Init_Advanced16:
;__Lib_UART_12_45.c, 288 :: 		
0x065A	0x9100    STR	R1, [SP, #0]
; module end address is: 28 (R7)
0x065C	0x4638    MOV	R0, R7
0x065E	0xF7FFFE1D  BL	_GPIO_Alternate_Function_Enable+0
0x0662	0x9900    LDR	R1, [SP, #0]
;__Lib_UART_12_45.c, 290 :: 		
0x0664	0x1D0D    ADDS	R5, R1, #4
0x0666	0x2400    MOVS	R4, #0
0x0668	0x602C    STR	R4, [R5, #0]
;__Lib_UART_12_45.c, 291 :: 		
0x066A	0x1D0E    ADDS	R6, R1, #4
0x066C	0x6835    LDR	R5, [R6, #0]
0x066E	0x9C0A    LDR	R4, [SP, #40]
0x0670	0xB2A4    UXTH	R4, R4
0x0672	0x432C    ORRS	R4, R5
0x0674	0x6034    STR	R4, [R6, #0]
;__Lib_UART_12_45.c, 292 :: 		
0x0676	0x2400    MOVS	R4, #0
0x0678	0x600C    STR	R4, [R1, #0]
;__Lib_UART_12_45.c, 294 :: 		
0x067A	0x9C08    LDR	R4, [SP, #32]
0x067C	0xB2A4    UXTH	R4, R4
0x067E	0x2C00    CMP	R4, #0
0x0680	0xD004    BEQ	L___Lib_UART_12_45_UARTx_Init_Advanced22
;__Lib_UART_12_45.c, 295 :: 		
0x0682	0x9D08    LDR	R5, [SP, #32]
0x0684	0xB2AD    UXTH	R5, R5
0x0686	0x4C35    LDR	R4, [PC, #212]
0x0688	0x432C    ORRS	R4, R5
0x068A	0x9408    STR	R4, [SP, #32]
;__Lib_UART_12_45.c, 296 :: 		
L___Lib_UART_12_45_UARTx_Init_Advanced22:
;__Lib_UART_12_45.c, 298 :: 		
0x068C	0x680D    LDR	R5, [R1, #0]
0x068E	0x9C08    LDR	R4, [SP, #32]
0x0690	0xB2A4    UXTH	R4, R4
0x0692	0x432C    ORRS	R4, R5
0x0694	0x600C    STR	R4, [R1, #0]
;__Lib_UART_12_45.c, 300 :: 		
0x0696	0x680D    LDR	R5, [R1, #0]
0x0698	0x240D    MOVS	R4, #13
0x069A	0x432C    ORRS	R4, R5
0x069C	0x600C    STR	R4, [R1, #0]
;__Lib_UART_12_45.c, 302 :: 		
0x069E	0x460D    MOV	R5, R1
0x06A0	0x3508    ADDS	R5, #8
0x06A2	0x2400    MOVS	R4, #0
0x06A4	0x602C    STR	R4, [R5, #0]
;__Lib_UART_12_45.c, 307 :: 		
0x06A6	0x9D01    LDR	R5, [SP, #4]
0x06A8	0x2419    MOVS	R4, #25
0x06AA	0x4628    MOV	R0, R5
0x06AC	0x4360    MULS	R0, R4, R0
0x06AE	0x9C07    LDR	R4, [SP, #28]
0x06B0	0x00A2    LSLS	R2, R4, #2
0x06B2	0x9100    STR	R1, [SP, #0]
0x06B4	0xF7FFFD68  BL	__Div_32x32_U+0
; integerdivider start address is: 28 (R7)
0x06B8	0x4607    MOV	R7, R0
;__Lib_UART_12_45.c, 308 :: 		
0x06BA	0x2264    MOVS	R2, #100
0x06BC	0xF7FFFD64  BL	__Div_32x32_U+0
0x06C0	0x0104    LSLS	R4, R0, #4
0x06C2	0x9402    STR	R4, [SP, #8]
;__Lib_UART_12_45.c, 310 :: 		
0x06C4	0x0926    LSRS	R6, R4, #4
0x06C6	0x2564    MOVS	R5, #100
0x06C8	0x4634    MOV	R4, R6
0x06CA	0x436C    MULS	R4, R5, R4
0x06CC	0x1B3C    SUBS	R4, R7, R4
; integerdivider end address is: 28 (R7)
;__Lib_UART_12_45.c, 311 :: 		
0x06CE	0x0124    LSLS	R4, R4, #4
0x06D0	0x4620    MOV	R0, R4
0x06D2	0x3032    ADDS	R0, #50
0x06D4	0x2264    MOVS	R2, #100
0x06D6	0xF7FFFD57  BL	__Div_32x32_U+0
0x06DA	0x9900    LDR	R1, [SP, #0]
0x06DC	0x240F    MOVS	R4, #15
0x06DE	0x4605    MOV	R5, R0
0x06E0	0x4025    ANDS	R5, R4
0x06E2	0x9C02    LDR	R4, [SP, #8]
0x06E4	0x432C    ORRS	R4, R5
;__Lib_UART_12_45.c, 313 :: 		
0x06E6	0x460D    MOV	R5, R1
0x06E8	0x350C    ADDS	R5, #12
; UART_Base end address is: 4 (R1)
0x06EA	0xB2A4    UXTH	R4, R4
0x06EC	0x602C    STR	R4, [R5, #0]
;__Lib_UART_12_45.c, 320 :: 		
L_end_UARTx_Init_Advanced:
0x06EE	0xB009    ADD	SP, SP, #36
0x06F0	0xBD00    POP	(R15)
0x06F2	0xBF00    NOP
0x06F4	0x38004001  	USART1_CR1+0
0x06F8	0x10344002  	RCC_APB2ENR+0
0x06FC	0xFFFFFFFF  	_UART1_Write+0
0x0700	0x112C2000  	_UART_Wr_Ptr+0
0x0704	0xFFFFFFFF  	_UART1_Read+0
0x0708	0x11302000  	_UART_Rd_Ptr+0
0x070C	0xFFFFFFFF  	_UART1_Data_Ready+0
0x0710	0x11342000  	_UART_Rdy_Ptr+0
0x0714	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x0718	0x11382000  	_UART_Tx_Idle_Ptr+0
0x071C	0x44004000  	USART2_CR1+0
0x0720	0x10384002  	RCC_APB1ENR+0
0x0724	0xFFFFFFFF  	_UART2_Write+0
0x0728	0xFFFFFFFF  	_UART2_Read+0
0x072C	0xFFFFFFFF  	_UART2_Data_Ready+0
0x0730	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x0734	0x4C004000  	USART4_CR1+0
0x0738	0xFFFFFFFF  	_UART4_Write+0
0x073C	0xFFFFFFFF  	_UART4_Read+0
0x0740	0xFFFFFFFF  	_UART4_Data_Ready+0
0x0744	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x0748	0x50004000  	USART5_CR1+0
0x074C	0xFFFFFFFF  	_UART5_Write+0
0x0750	0xFFFFFFFF  	_UART5_Read+0
0x0754	0xFFFFFFFF  	_UART5_Data_Ready+0
0x0758	0xFFFFFFFF  	_UART5_Tx_Idle+0
0x075C	0x04000000  	#1024
; end of __Lib_UART_12_45_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_M0Plus_HSI48.c, 438 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0210	0xB500    PUSH	(R14)
0x0212	0xB081    SUB	SP, SP, #4
0x0214	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_M0Plus_HSI48.c, 442 :: 		
0x0216	0x1D19    ADDS	R1, R3, #4
0x0218	0x9100    STR	R1, [SP, #0]
0x021A	0xF7FFFFAF  BL	_Get_Fosc_kHz+0
0x021E	0x4919    LDR	R1, [PC, #100]
0x0220	0x460A    MOV	R2, R1
0x0222	0x4342    MULS	R2, R0, R2
0x0224	0x9900    LDR	R1, [SP, #0]
0x0226	0x600A    STR	R2, [R1, #0]
;__Lib_System_M0Plus_HSI48.c, 446 :: 		
0x0228	0x4917    LDR	R1, [PC, #92]
0x022A	0x680A    LDR	R2, [R1, #0]
0x022C	0x21F0    MOVS	R1, #240
0x022E	0x4011    ANDS	R1, R2
;__Lib_System_M0Plus_HSI48.c, 447 :: 		
0x0230	0x090A    LSRS	R2, R1, #4
;__Lib_System_M0Plus_HSI48.c, 448 :: 		
0x0232	0x4916    LDR	R1, [PC, #88]
0x0234	0x1889    ADDS	R1, R1, R2
0x0236	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x0238	0xB2C8    UXTB	R0, R1
;__Lib_System_M0Plus_HSI48.c, 450 :: 		
0x023A	0x1D19    ADDS	R1, R3, #4
0x023C	0x6809    LDR	R1, [R1, #0]
0x023E	0x4081    LSLS	R1, R0
; presc end address is: 0 (R0)
0x0240	0x6019    STR	R1, [R3, #0]
;__Lib_System_M0Plus_HSI48.c, 453 :: 		
0x0242	0x4911    LDR	R1, [PC, #68]
0x0244	0x680A    LDR	R2, [R1, #0]
0x0246	0x4912    LDR	R1, [PC, #72]
0x0248	0x4011    ANDS	R1, R2
;__Lib_System_M0Plus_HSI48.c, 454 :: 		
0x024A	0x0A0A    LSRS	R2, R1, #8
;__Lib_System_M0Plus_HSI48.c, 456 :: 		
0x024C	0x4911    LDR	R1, [PC, #68]
0x024E	0x1889    ADDS	R1, R1, R2
0x0250	0x7809    LDRB	R1, [R1, #0]
; presc1 start address is: 0 (R0)
0x0252	0xB2C8    UXTB	R0, R1
;__Lib_System_M0Plus_HSI48.c, 457 :: 		
0x0254	0x461A    MOV	R2, R3
0x0256	0x3208    ADDS	R2, #8
0x0258	0x1D19    ADDS	R1, R3, #4
0x025A	0x6809    LDR	R1, [R1, #0]
0x025C	0x40C1    LSRS	R1, R0
; presc1 end address is: 0 (R0)
0x025E	0x6011    STR	R1, [R2, #0]
;__Lib_System_M0Plus_HSI48.c, 459 :: 		
0x0260	0x4909    LDR	R1, [PC, #36]
0x0262	0x680A    LDR	R2, [R1, #0]
0x0264	0x490C    LDR	R1, [PC, #48]
0x0266	0x4011    ANDS	R1, R2
;__Lib_System_M0Plus_HSI48.c, 460 :: 		
0x0268	0x0ACA    LSRS	R2, R1, #11
;__Lib_System_M0Plus_HSI48.c, 462 :: 		
0x026A	0x490A    LDR	R1, [PC, #40]
0x026C	0x1889    ADDS	R1, R1, R2
0x026E	0x7809    LDRB	R1, [R1, #0]
; presc2 start address is: 0 (R0)
0x0270	0xB2C8    UXTB	R0, R1
;__Lib_System_M0Plus_HSI48.c, 463 :: 		
0x0272	0x461A    MOV	R2, R3
0x0274	0x320C    ADDS	R2, #12
0x0276	0x1D19    ADDS	R1, R3, #4
; RCC_Clocks end address is: 12 (R3)
0x0278	0x6809    LDR	R1, [R1, #0]
0x027A	0x40C1    LSRS	R1, R0
; presc2 end address is: 0 (R0)
0x027C	0x6011    STR	R1, [R2, #0]
;__Lib_System_M0Plus_HSI48.c, 474 :: 		
L_end_RCC_GetClocksFrequency:
0x027E	0xB001    ADD	SP, SP, #4
0x0280	0xBD00    POP	(R15)
0x0282	0xBF00    NOP
0x0284	0x03E80000  	#1000
0x0288	0x100C4002  	RCC_CFGR+0
0x028C	0x45070000  	__Lib_System_M0Plus_HSI48_APBAHBPrescTable+0
0x0290	0x07000000  	#1792
0x0294	0x452D0000  	__Lib_System_M0Plus_HSI48_PPREPrescTable+0
0x0298	0x38000000  	#14336
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
0x017C	0xB500    PUSH	(R14)
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x017E	0x4801    LDR	R0, [PC, #4]
0x0180	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0182	0xBD00    POP	(R15)
0x0184	0x11202000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32L07x.c, 514 :: 		
; module start address is: 0 (R0)
0x029C	0xB500    PUSH	(R14)
0x029E	0xB082    SUB	SP, SP, #8
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32L07x.c, 519 :: 		
; i start address is: 16 (R4)
0x02A0	0x2400    MOVS	R4, #0
; module end address is: 0 (R0)
; i end address is: 16 (R4)
;__Lib_GPIO_32L07x.c, 520 :: 		
L_GPIO_Alternate_Function_Enable60:
; i start address is: 16 (R4)
; module start address is: 0 (R0)
0x02A2	0x00A1    LSLS	R1, R4, #2
0x02A4	0x1841    ADDS	R1, R0, R1
0x02A6	0x680A    LDR	R2, [R1, #0]
0x02A8	0x490C    LDR	R1, [PC, #48]
0x02AA	0x428A    CMP	R2, R1
0x02AC	0xD013    BEQ	L_GPIO_Alternate_Function_Enable61
;__Lib_GPIO_32L07x.c, 522 :: 		
0x02AE	0x4601    MOV	R1, R0
0x02B0	0x3134    ADDS	R1, #52
0x02B2	0x00A3    LSLS	R3, R4, #2
0x02B4	0x18C9    ADDS	R1, R1, R3
0x02B6	0x6809    LDR	R1, [R1, #0]
0x02B8	0x460A    MOV	R2, R1
0x02BA	0x18C1    ADDS	R1, R0, R3
0x02BC	0x6809    LDR	R1, [R1, #0]
0x02BE	0x9000    STR	R0, [SP, #0]
0x02C0	0x9401    STR	R4, [SP, #4]
0x02C2	0x4608    MOV	R0, R1
0x02C4	0x4611    MOV	R1, R2
0x02C6	0xF7FFFEFB  BL	__Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function+0
0x02CA	0x9C01    LDR	R4, [SP, #4]
0x02CC	0xB2A4    UXTH	R4, R4
0x02CE	0x9800    LDR	R0, [SP, #0]
;__Lib_GPIO_32L07x.c, 523 :: 		
0x02D0	0x3401    ADDS	R4, #1
0x02D2	0xB2A4    UXTH	R4, R4
;__Lib_GPIO_32L07x.c, 524 :: 		
; module end address is: 0 (R0)
; i end address is: 16 (R4)
0x02D4	0xE7E5    B	L_GPIO_Alternate_Function_Enable60
L_GPIO_Alternate_Function_Enable61:
;__Lib_GPIO_32L07x.c, 525 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x02D6	0xB002    ADD	SP, SP, #8
0x02D8	0xBD00    POP	(R15)
0x02DA	0xBF00    NOP
0x02DC	0xFFFFFFFF  	#-1
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO_32L07x.c, 73 :: 		
; config start address is: 4 (R1)
; afPin start address is: 0 (R0)
0x00C0	0xB500    PUSH	(R14)
0x00C2	0xB083    SUB	SP, SP, #12
0x00C4	0x460C    MOV	R4, R1
; config end address is: 4 (R1)
; afPin end address is: 0 (R0)
; afPin start address is: 0 (R0)
; config start address is: 16 (R4)
;__Lib_GPIO_32L07x.c, 84 :: 		
0x00C6	0x22FF    MOVS	R2, #255
0x00C8	0x4603    MOV	R3, R0
0x00CA	0x4013    ANDS	R3, R2
0x00CC	0x091A    LSRS	R2, R3, #4
; port start address is: 20 (R5)
0x00CE	0x4615    MOV	R5, R2
;__Lib_GPIO_32L07x.c, 85 :: 		
0x00D0	0x220F    MOVS	R2, #15
0x00D2	0x4619    MOV	R1, R3
0x00D4	0x4011    ANDS	R1, R2
; pin start address is: 4 (R1)
;__Lib_GPIO_32L07x.c, 86 :: 		
0x00D6	0x0A03    LSRS	R3, R0, #8
; afPin end address is: 0 (R0)
0x00D8	0x220F    MOVS	R2, #15
0x00DA	0x401A    ANDS	R2, R3
; af start address is: 0 (R0)
0x00DC	0x4610    MOV	R0, R2
;__Lib_GPIO_32L07x.c, 88 :: 		
0x00DE	0xE011    B	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function0
; port end address is: 20 (R5)
;__Lib_GPIO_32L07x.c, 90 :: 		
L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function2:
;__Lib_GPIO_32L07x.c, 92 :: 		
0x00E0	0x4A20    LDR	R2, [PC, #128]
0x00E2	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_32L07x.c, 93 :: 		
0x00E4	0xE01A    B	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_32L07x.c, 95 :: 		
L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function3:
;__Lib_GPIO_32L07x.c, 97 :: 		
0x00E6	0x4A20    LDR	R2, [PC, #128]
0x00E8	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_32L07x.c, 98 :: 		
0x00EA	0xE017    B	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_32L07x.c, 100 :: 		
L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function4:
;__Lib_GPIO_32L07x.c, 102 :: 		
0x00EC	0x4A1F    LDR	R2, [PC, #124]
0x00EE	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_32L07x.c, 103 :: 		
0x00F0	0xE014    B	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_32L07x.c, 105 :: 		
L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function5:
;__Lib_GPIO_32L07x.c, 107 :: 		
0x00F2	0x4A1F    LDR	R2, [PC, #124]
0x00F4	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_32L07x.c, 108 :: 		
0x00F6	0xE011    B	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_32L07x.c, 110 :: 		
L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function6:
;__Lib_GPIO_32L07x.c, 112 :: 		
0x00F8	0x4A1E    LDR	R2, [PC, #120]
0x00FA	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_32L07x.c, 113 :: 		
0x00FC	0xE00E    B	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_32L07x.c, 115 :: 		
L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function7:
;__Lib_GPIO_32L07x.c, 117 :: 		
0x00FE	0x4A1E    LDR	R2, [PC, #120]
0x0100	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_32L07x.c, 118 :: 		
0x0102	0xE00B    B	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_32L07x.c, 120 :: 		
L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function0:
; port start address is: 20 (R5)
0x0104	0x2D00    CMP	R5, #0
0x0106	0xD0EB    BEQ	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function2
0x0108	0x2D01    CMP	R5, #1
0x010A	0xD0EC    BEQ	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function3
0x010C	0x2D02    CMP	R5, #2
0x010E	0xD0ED    BEQ	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function4
0x0110	0x2D03    CMP	R5, #3
0x0112	0xD0EE    BEQ	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function5
0x0114	0x2D04    CMP	R5, #4
0x0116	0xD0EF    BEQ	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function6
0x0118	0x2D07    CMP	R5, #7
0x011A	0xD0F0    BEQ	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function7
; port end address is: 20 (R5)
L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function1:
;__Lib_GPIO_32L07x.c, 123 :: 		
0x011C	0x2201    MOVS	R2, #1
0x011E	0x408A    LSLS	R2, R1
0x0120	0x9000    STR	R0, [SP, #0]
; config end address is: 16 (R4)
0x0122	0x9101    STR	R1, [SP, #4]
0x0124	0xB291    UXTH	R1, R2
0x0126	0x4622    MOV	R2, R4
0x0128	0x9802    LDR	R0, [SP, #8]
0x012A	0xF000FEED  BL	_GPIO_Config+0
0x012E	0x9901    LDR	R1, [SP, #4]
0x0130	0x9800    LDR	R0, [SP, #0]
;__Lib_GPIO_32L07x.c, 126 :: 		
0x0132	0x9A02    LDR	R2, [SP, #8]
0x0134	0x4615    MOV	R5, R2
0x0136	0x3520    ADDS	R5, #32
; altFcnBase start address is: 20 (R5)
;__Lib_GPIO_32L07x.c, 127 :: 		
0x0138	0x2907    CMP	R1, #7
0x013A	0xD902    BLS	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function84
;__Lib_GPIO_32L07x.c, 129 :: 		
0x013C	0x3504    ADDS	R5, #4
;__Lib_GPIO_32L07x.c, 130 :: 		
0x013E	0x3908    SUBS	R1, #8
; pin end address is: 4 (R1)
; altFcnBase end address is: 20 (R5)
;__Lib_GPIO_32L07x.c, 131 :: 		
0x0140	0xE7FF    B	L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function8
L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function84:
;__Lib_GPIO_32L07x.c, 127 :: 		
;__Lib_GPIO_32L07x.c, 131 :: 		
L___Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function8:
;__Lib_GPIO_32L07x.c, 133 :: 		
; pin start address is: 4 (R1)
; altFcnBase start address is: 20 (R5)
0x0142	0x008C    LSLS	R4, R1, #2
0x0144	0x230F    MOVS	R3, #15
0x0146	0x461A    MOV	R2, R3
0x0148	0x40A2    LSLS	R2, R4
0x014A	0x43D3    MVN	R3, R2
0x014C	0x682A    LDR	R2, [R5, #0]
0x014E	0x401A    ANDS	R2, R3
0x0150	0x602A    STR	R2, [R5, #0]
;__Lib_GPIO_32L07x.c, 135 :: 		
0x0152	0x008A    LSLS	R2, R1, #2
; pin end address is: 4 (R1)
0x0154	0x4603    MOV	R3, R0
0x0156	0x4093    LSLS	R3, R2
; af end address is: 0 (R0)
0x0158	0x682A    LDR	R2, [R5, #0]
0x015A	0x431A    ORRS	R2, R3
0x015C	0x602A    STR	R2, [R5, #0]
; altFcnBase end address is: 20 (R5)
;__Lib_GPIO_32L07x.c, 136 :: 		
L_end_GPIO_Config_Pin_Alternate_Function:
0x015E	0xB003    ADD	SP, SP, #12
0x0160	0xBD00    POP	(R15)
0x0162	0xBF00    NOP
0x0164	0x00005000  	#1342177280
0x0168	0x04005000  	#1342178304
0x016C	0x08005000  	#1342179328
0x0170	0x0C005000  	#1342180352
0x0174	0x10005000  	#1342181376
0x0178	0x1C005000  	#1342184448
; end of __Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function
__Div_32x32_U:
;__Lib_Math.c, 267 :: 		
0x0188	0xB081    SUB	SP, SP, #4
;__Lib_Math.c, 269 :: 		
0x018A	0xB43A    PUSH	(R1, R3, R4, R5)
;__Lib_Math.c, 272 :: 		
0x018C	0x0014    MOVS	R4, R2
;__Lib_Math.c, 273 :: 		
0x018E	0xD102    BNE	_Div_32x32_U_Lab_3
;__Lib_Math.c, 275 :: 		
0x0190	0x4602    MOV	R2, R0
;__Lib_Math.c, 276 :: 		
0x0192	0x480C    LDR	R0, [PC, #48]
;__Lib_Math.c, 277 :: 		
0x0194	0xE013    B	_Div_32x32_U_Lab_end
;__Lib_Math.c, 281 :: 		
_Div_32x32_U_Lab_3:
;__Lib_Math.c, 282 :: 		
0x0196	0x4613    MOV	R3, R2
;__Lib_Math.c, 283 :: 		
0x0198	0x4602    MOV	R2, R0
;__Lib_Math.c, 284 :: 		
0x019A	0x2000    MOVS	R0, #0
;__Lib_Math.c, 285 :: 		
0x019C	0x2120    MOVS	R1, #32
;__Lib_Math.c, 286 :: 		
0x019E	0x2401    MOVS	R4, #1
;__Lib_Math.c, 287 :: 		
0x01A0	0xE009    B	_Div_32x32_U_Lab_1
;__Lib_Math.c, 289 :: 		
_Div_32x32_U_Lab_2:
;__Lib_Math.c, 290 :: 		
0x01A2	0x4615    MOV	R5, R2
;__Lib_Math.c, 291 :: 		
0x01A4	0x40CD    LSRS	R5, R1
;__Lib_Math.c, 292 :: 		
0x01A6	0x429D    CMP	R5, R3
;__Lib_Math.c, 293 :: 		
0x01A8	0xD305    BCC	_Div_32x32_U_Lab_1
;__Lib_Math.c, 294 :: 		
0x01AA	0x461D    MOV	R5, R3
;__Lib_Math.c, 295 :: 		
0x01AC	0x408D    LSLS	R5, R1
;__Lib_Math.c, 296 :: 		
0x01AE	0x1B52    SUBS	R2, R2, R5
;__Lib_Math.c, 297 :: 		
0x01B0	0x4625    MOV	R5, R4
;__Lib_Math.c, 298 :: 		
0x01B2	0x408D    LSLS	R5, R1
;__Lib_Math.c, 299 :: 		
0x01B4	0x1940    ADDS	R0, R0, R5
;__Lib_Math.c, 301 :: 		
_Div_32x32_U_Lab_1:
;__Lib_Math.c, 302 :: 		
0x01B6	0x460D    MOV	R5, R1
;__Lib_Math.c, 303 :: 		
0x01B8	0x1E49    SUBS	R1, R1, #1
;__Lib_Math.c, 304 :: 		
0x01BA	0x2D00    CMP	R5, #0
;__Lib_Math.c, 305 :: 		
0x01BC	0xDCF1    BGT	_Div_32x32_U_Lab_2
;__Lib_Math.c, 307 :: 		
_Div_32x32_U_Lab_end:
;__Lib_Math.c, 308 :: 		
0x01BE	0xBC3A    POP	(R1, R3, R4, R5)
;__Lib_Math.c, 309 :: 		
0x01C0	0xE002    B	#4
0x01C2	0xBF00    NOP
0x01C4	0xFFFFFFFF  	#-1
;__Lib_Math.c, 310 :: 		
L_end__Div_32x32_U:
0x01C8	0xB001    ADD	SP, SP, #4
0x01CA	0x4770    BX	LR
; end of __Div_32x32_U
_UART1_Write_Text:
;__Lib_UART_12_45.c, 71 :: 		
; uart_text start address is: 0 (R0)
0x163C	0xB500    PUSH	(R14)
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_12_45.c, 72 :: 		
0x163E	0x4601    MOV	R1, R0
; uart_text end address is: 0 (R0)
0x1640	0x4801    LDR	R0, [PC, #4]
0x1642	0xF7FFFDFD  BL	__Lib_UART_12_45_UARTx_Write_Text+0
;__Lib_UART_12_45.c, 73 :: 		
L_end_UART1_Write_Text:
0x1646	0xBD00    POP	(R15)
0x1648	0x38004001  	USART1_CR1+0
; end of _UART1_Write_Text
__Lib_UART_12_45_UARTx_Write_Text:
;__Lib_UART_12_45.c, 60 :: 		
; uart_text start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x1240	0xB500    PUSH	(R14)
; uart_text end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; uart_text start address is: 4 (R1)
;__Lib_UART_12_45.c, 61 :: 		
; counter start address is: 24 (R6)
0x1242	0x2600    MOVS	R6, #0
;__Lib_UART_12_45.c, 63 :: 		
0x1244	0x780A    LDRB	R2, [R1, #0]
; data_ start address is: 12 (R3)
0x1246	0xB2D3    UXTB	R3, R2
; UART_Base end address is: 0 (R0)
; uart_text end address is: 4 (R1)
; data_ end address is: 12 (R3)
; counter end address is: 24 (R6)
0x1248	0x4605    MOV	R5, R0
0x124A	0xB2D8    UXTB	R0, R3
0x124C	0x460C    MOV	R4, R1
;__Lib_UART_12_45.c, 64 :: 		
L___Lib_UART_12_45_UARTx_Write_Text2:
; data_ start address is: 0 (R0)
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
; counter start address is: 24 (R6)
; uart_text start address is: 16 (R4)
; uart_text end address is: 16 (R4)
; UART_Base start address is: 20 (R5)
; UART_Base end address is: 20 (R5)
0x124E	0x2800    CMP	R0, #0
0x1250	0xD00A    BEQ	L___Lib_UART_12_45_UARTx_Write_Text3
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
;__Lib_UART_12_45.c, 65 :: 		
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
0x1252	0xB2C1    UXTB	R1, R0
; data_ end address is: 0 (R0)
0x1254	0x4628    MOV	R0, R5
0x1256	0xF7FFF843  BL	__Lib_UART_12_45_UARTx_Write+0
;__Lib_UART_12_45.c, 66 :: 		
0x125A	0x1C72    ADDS	R2, R6, #1
0x125C	0xB2D2    UXTB	R2, R2
0x125E	0xB2D6    UXTB	R6, R2
;__Lib_UART_12_45.c, 67 :: 		
0x1260	0x18A2    ADDS	R2, R4, R2
0x1262	0x7812    LDRB	R2, [R2, #0]
; data_ start address is: 0 (R0)
0x1264	0xB2D0    UXTB	R0, R2
;__Lib_UART_12_45.c, 68 :: 		
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
; counter end address is: 24 (R6)
; data_ end address is: 0 (R0)
0x1266	0xE7F2    B	L___Lib_UART_12_45_UARTx_Write_Text2
L___Lib_UART_12_45_UARTx_Write_Text3:
;__Lib_UART_12_45.c, 69 :: 		
L_end_UARTx_Write_Text:
0x1268	0xBD00    POP	(R15)
; end of __Lib_UART_12_45_UARTx_Write_Text
__Lib_UART_12_45_UARTx_Write:
;__Lib_UART_12_45.c, 37 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x02E0	0xB500    PUSH	(R14)
0x02E2	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x02E4	0x9100    STR	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x02E6	0x4601    MOV	R1, R0
0x02E8	0x9800    LDR	R0, [SP, #0]
0x02EA	0xB280    UXTH	R0, R0
;__Lib_UART_12_45.c, 38 :: 		
L___Lib_UART_12_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x02EC	0x460A    MOV	R2, R1
0x02EE	0x321C    ADDS	R2, #28
0x02F0	0x6813    LDR	R3, [R2, #0]
0x02F2	0x2280    MOVS	R2, #128
0x02F4	0x401A    ANDS	R2, R3
0x02F6	0x09D2    LSRS	R2, R2, #7
0x02F8	0x2A00    CMP	R2, #0
0x02FA	0xD100    BNE	L___Lib_UART_12_45_UARTx_Write1
;__Lib_UART_12_45.c, 39 :: 		
0x02FC	0xE7F6    B	L___Lib_UART_12_45_UARTx_Write0
L___Lib_UART_12_45_UARTx_Write1:
;__Lib_UART_12_45.c, 41 :: 		
0x02FE	0x460A    MOV	R2, R1
0x0300	0x3228    ADDS	R2, #40
; UART_Base end address is: 4 (R1)
0x0302	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_12_45.c, 42 :: 		
L_end_UARTx_Write:
0x0304	0xB001    ADD	SP, SP, #4
0x0306	0xBD00    POP	(R15)
; end of __Lib_UART_12_45_UARTx_Write
_vSPI2Init:
;driverspi.c, 21 :: 		void vSPI2Init ( void ) {
0x22C0	0xB500    PUSH	(R14)
;driverspi.c, 26 :: 		_SPI_SS_DISABLE | _SPI_SSM_ENABLE | _SPI_SSI_1, &_GPIO_MODULE_SPI2_PB13_14_15 );
0x22C2	0x4A07    LDR	R2, [PC, #28]
0x22C4	0x4907    LDR	R1, [PC, #28]
;driverspi.c, 25 :: 		SPI2_Init_Advanced( _SPI_FPCLK_DIV4, _SPI_MASTER | _SPI_8_BIT | _SPI_CLK_IDLE_LOW | _SPI_FIRST_CLK_EDGE_TRANSITION | _SPI_MSB_FIRST |
0x22C6	0x2001    MOVS	R0, #1
;driverspi.c, 26 :: 		_SPI_SS_DISABLE | _SPI_SSM_ENABLE | _SPI_SSI_1, &_GPIO_MODULE_SPI2_PB13_14_15 );
0x22C8	0xF7FEFF92  BL	_SPI2_Init_Advanced+0
;driverspi.c, 28 :: 		SPI2_CR2bits.RXNEIE  = 1;       // habilitacion de ISR para RX
0x22CC	0x4A06    LDR	R2, [PC, #24]
0x22CE	0x6810    LDR	R0, [R2, #0]
0x22D0	0x2140    MOVS	R1, #64
0x22D2	0x4308    ORRS	R0, R1
0x22D4	0x6010    STR	R0, [R2, #0]
;driverspi.c, 30 :: 		NVIC_IntEnable( IVT_INT_SPI2 );
0x22D6	0x202A    MOVS	R0, #42
0x22D8	0xF7FFF972  BL	_NVIC_IntEnable+0
;driverspi.c, 31 :: 		}
L_end_vSPI2Init:
0x22DC	0xBD00    POP	(R15)
0x22DE	0xBF00    NOP
0x22E0	0x40A00000  	__GPIO_MODULE_SPI2_PB13_14_15+0
0x22E4	0x03040000  	#772
0x22E8	0x38044000  	SPI2_CR2bits+0
; end of _vSPI2Init
_SPI2_Init_Advanced:
;__Lib_SPI_L0x_12.c, 201 :: 		
; module start address is: 8 (R2)
0x11F0	0xB500    PUSH	(R14)
0x11F2	0xB082    SUB	SP, SP, #8
0x11F4	0x9000    STR	R0, [SP, #0]
0x11F6	0x9101    STR	R1, [SP, #4]
; module end address is: 8 (R2)
; module start address is: 8 (R2)
;__Lib_SPI_L0x_12.c, 204 :: 		
0x11F8	0x4C0B    LDR	R4, [PC, #44]
0x11FA	0x4B0C    LDR	R3, [PC, #48]
0x11FC	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_L0x_12.c, 205 :: 		
0x11FE	0x4C0C    LDR	R4, [PC, #48]
0x1200	0x4B0C    LDR	R3, [PC, #48]
0x1202	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_L0x_12.c, 207 :: 		
0x1204	0x4D0C    LDR	R5, [PC, #48]
0x1206	0x682B    LDR	R3, [R5, #0]
0x1208	0x2401    MOVS	R4, #1
0x120A	0x03A4    LSLS	R4, R4, #14
0x120C	0x4323    ORRS	R3, R4
0x120E	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_L0x_12.c, 210 :: 		
0x1210	0x4610    MOV	R0, R2
; module end address is: 8 (R2)
0x1212	0xF7FFF843  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_SPI_L0x_12.c, 213 :: 		
0x1216	0x9A01    LDR	R2, [SP, #4]
0x1218	0x9900    LDR	R1, [SP, #0]
0x121A	0xB2C9    UXTB	R1, R1
0x121C	0x4807    LDR	R0, [PC, #28]
0x121E	0xF7FFF8F7  BL	__Lib_SPI_L0x_12_SPIx_Init_Advanced+0
;__Lib_SPI_L0x_12.c, 214 :: 		
L_end_SPI2_Init_Advanced:
0x1222	0xB002    ADD	SP, SP, #8
0x1224	0xBD00    POP	(R15)
0x1226	0xBF00    NOP
0x1228	0xFFFFFFFF  	_SPI2_Read+0
0x122C	0x11242000  	_SPI_Rd_Ptr+0
0x1230	0xFFFFFFFF  	_SPI2_Write+0
0x1234	0x11282000  	_SPI_Wr_Ptr+0
0x1238	0x10384002  	RCC_APB1ENR+0
0x123C	0x38004000  	SPI2_CR1+0
; end of _SPI2_Init_Advanced
__Lib_SPI_L0x_12_SPIx_Init_Advanced:
;__Lib_SPI_L0x_12.c, 65 :: 		
; config start address is: 8 (R2)
; clock_divider start address is: 4 (R1)
; base start address is: 0 (R0)
0x0410	0xB081    SUB	SP, SP, #4
; config end address is: 8 (R2)
; clock_divider end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; clock_divider start address is: 4 (R1)
; config start address is: 8 (R2)
;__Lib_SPI_L0x_12.c, 71 :: 		
0x0412	0x2300    MOVS	R3, #0
0x0414	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_L0x_12.c, 74 :: 		
0x0416	0x00CB    LSLS	R3, R1, #3
0x0418	0xB29B    UXTH	R3, R3
; clock_divider end address is: 4 (R1)
0x041A	0x4313    ORRS	R3, R2
;__Lib_SPI_L0x_12.c, 77 :: 		
0x041C	0x6804    LDR	R4, [R0, #0]
0x041E	0xB29B    UXTH	R3, R3
0x0420	0x4323    ORRS	R3, R4
0x0422	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_L0x_12.c, 80 :: 		
0x0424	0x1D06    ADDS	R6, R0, #4
0x0426	0x1415    ASRS	R5, R2, #16
; config end address is: 8 (R2)
0x0428	0x6833    LDR	R3, [R6, #0]
0x042A	0x2401    MOVS	R4, #1
0x042C	0x402C    ANDS	R4, R5
0x042E	0xD002    BEQ	L___Lib_SPI_L0x_12_SPIx_Init_Advanced4
0x0430	0x2404    MOVS	R4, #4
0x0432	0x4323    ORRS	R3, R4
0x0434	0xE001    B	L___Lib_SPI_L0x_12_SPIx_Init_Advanced3
L___Lib_SPI_L0x_12_SPIx_Init_Advanced4:
0x0436	0x2404    MOVS	R4, #4
0x0438	0x43A3    BICS	R3, R4
L___Lib_SPI_L0x_12_SPIx_Init_Advanced3:
0x043A	0x6033    STR	R3, [R6, #0]
;__Lib_SPI_L0x_12.c, 82 :: 		
0x043C	0x4605    MOV	R5, R0
0x043E	0x351C    ADDS	R5, #28
0x0440	0x682B    LDR	R3, [R5, #0]
0x0442	0x2401    MOVS	R4, #1
0x0444	0x02E4    LSLS	R4, R4, #11
0x0446	0x43A3    BICS	R3, R4
0x0448	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_L0x_12.c, 83 :: 		
0x044A	0x6803    LDR	R3, [R0, #0]
0x044C	0x2440    MOVS	R4, #64
0x044E	0x4323    ORRS	R3, R4
0x0450	0x6003    STR	R3, [R0, #0]
; base end address is: 0 (R0)
;__Lib_SPI_L0x_12.c, 84 :: 		
L_end_SPIx_Init_Advanced:
0x0452	0xB001    ADD	SP, SP, #4
0x0454	0x4770    BX	LR
; end of __Lib_SPI_L0x_12_SPIx_Init_Advanced
_vRF4463MainSetTXString:
;DriverRF4463PROMain.c, 114 :: 		void vRF4463MainSetTXString () {
0x22EC	0xB081    SUB	SP, SP, #4
;DriverRF4463PROMain.c, 119 :: 		}
L_end_vRF4463MainSetTXString:
0x22EE	0xB001    ADD	SP, SP, #4
0x22F0	0x4770    BX	LR
; end of _vRF4463MainSetTXString
_VRF4463SDNReset:
;driverrf4463pro.c, 894 :: 		void VRF4463SDNReset( void ) {
0x22F4	0xB500    PUSH	(R14)
0x22F6	0xB081    SUB	SP, SP, #4
;driverrf4463pro.c, 897 :: 		SDN = 1;
0x22F8	0x4A20    LDR	R2, [PC, #128]
0x22FA	0x6810    LDR	R0, [R2, #0]
0x22FC	0x2102    MOVS	R1, #2
0x22FE	0x4308    ORRS	R0, R1
0x2300	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 898 :: 		Delay_ms( 6 );        // RF Module reset  DELAY
0x2302	0x4F02    LDR	R7, [PC, #8]
L_VRF4463SDNReset150:
0x2304	0x1E7F    SUBS	R7, R7, #1
0x2306	0xD1FD    BNE	L_VRF4463SDNReset150
0x2308	0xBF00    NOP
0x230A	0xE002    B	#4
0x230C	0x7CFE0000  	#31998
0x2310	0xBF00    NOP
;driverrf4463pro.c, 899 :: 		SDN = 0;
0x2312	0x4A1A    LDR	R2, [PC, #104]
0x2314	0x6810    LDR	R0, [R2, #0]
0x2316	0x2102    MOVS	R1, #2
0x2318	0x4388    BICS	R0, R1
0x231A	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 900 :: 		Delay_ms( 10 );       // Delay 10ms for RF module to enter working state
0x231C	0x4F02    LDR	R7, [PC, #8]
L_VRF4463SDNReset152:
0x231E	0x1E7F    SUBS	R7, R7, #1
0x2320	0xD1FD    BNE	L_VRF4463SDNReset152
0x2322	0xBF00    NOP
0x2324	0xE002    B	#4
0x2326	0xBF00    NOP
0x2328	0xD0540000  	#53332
;driverrf4463pro.c, 902 :: 		nSEL = 1;
0x232C	0x4A14    LDR	R2, [PC, #80]
0x232E	0x6810    LDR	R0, [R2, #0]
0x2330	0x2101    MOVS	R1, #1
0x2332	0x0309    LSLS	R1, R1, #12
0x2334	0x4308    ORRS	R0, R1
0x2336	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 903 :: 		nSEL = 0;
0x2338	0x4A11    LDR	R2, [PC, #68]
0x233A	0x6810    LDR	R0, [R2, #0]
0x233C	0x2101    MOVS	R1, #1
0x233E	0x0309    LSLS	R1, R1, #12
0x2340	0x4388    BICS	R0, R1
0x2342	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 904 :: 		for ( i = 0; i < 7; i++ ) {
0x2344	0x2000    MOVS	R0, #0
0x2346	0x9000    STR	R0, [SP, #0]
L_VRF4463SDNReset154:
0x2348	0x9800    LDR	R0, [SP, #0]
0x234A	0xB2C0    UXTB	R0, R0
0x234C	0x2807    CMP	R0, #7
0x234E	0xD20D    BCS	L_VRF4463SDNReset155
;driverrf4463pro.c, 905 :: 		ucRf4463SPIByte( RF_POWER_UP_data[ i ] );   // send power up Command
0x2350	0x9900    LDR	R1, [SP, #0]
0x2352	0xB2C9    UXTB	R1, R1
0x2354	0x480B    LDR	R0, [PC, #44]
0x2356	0x1840    ADDS	R0, R0, R1
0x2358	0x7800    LDRB	R0, [R0, #0]
0x235A	0xB401    PUSH	(R0)
0x235C	0xF7FDFF36  BL	_ucRf4463SPIByte+0
0x2360	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 904 :: 		for ( i = 0; i < 7; i++ ) {
0x2362	0x9800    LDR	R0, [SP, #0]
0x2364	0xB2C0    UXTB	R0, R0
0x2366	0x3001    ADDS	R0, #1
0x2368	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 906 :: 		}
0x236A	0xE7ED    B	L_VRF4463SDNReset154
L_VRF4463SDNReset155:
;driverrf4463pro.c, 907 :: 		nSEL = 1;
0x236C	0x4A04    LDR	R2, [PC, #16]
0x236E	0x6810    LDR	R0, [R2, #0]
0x2370	0x2101    MOVS	R1, #1
0x2372	0x0309    LSLS	R1, R1, #12
0x2374	0x4308    ORRS	R0, R1
0x2376	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 910 :: 		}
L_end_VRF4463SDNReset:
0x2378	0xB001    ADD	SP, SP, #4
0x237A	0xBD00    POP	(R15)
0x237C	0x1C145000  	GPIOH_ODR+0
0x2380	0x04145000  	GPIOB_ODR+0
0x2384	0x45350000  	_RF_POWER_UP_data+0
; end of _VRF4463SDNReset
_ucRf4463SPIByte:
;driverrf4463pro.c, 743 :: 		unsigned char ucRf4463SPIByte( unsigned char ucData ) {
0x01CC	0xB500    PUSH	(R14)
;driverrf4463pro.c, 745 :: 		ucSPI2ByteReceived = 0;
0x01CE	0x2100    MOVS	R1, #0
0x01D0	0x480C    LDR	R0, [PC, #48]
0x01D2	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 747 :: 		SPI2_DR = ucData;
0x01D4	0x9901    LDR	R1, [SP, #4]
0x01D6	0xB2C9    UXTB	R1, R1
0x01D8	0x480B    LDR	R0, [PC, #44]
0x01DA	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 749 :: 		while ( !SPI2_SRbits.TXE );                // espera a que el buffer este vacio
L_ucRf4463SPIByte112:
0x01DC	0x480B    LDR	R0, [PC, #44]
0x01DE	0x6801    LDR	R1, [R0, #0]
0x01E0	0x2002    MOVS	R0, #2
0x01E2	0x4008    ANDS	R0, R1
0x01E4	0x0840    LSRS	R0, R0, #1
0x01E6	0x2800    CMP	R0, #0
0x01E8	0xD100    BNE	L_ucRf4463SPIByte113
0x01EA	0xE7F7    B	L_ucRf4463SPIByte112
L_ucRf4463SPIByte113:
;driverrf4463pro.c, 751 :: 		while ( SPI2_SRbits.BSY );                // espera a que el buffer este vacio
L_ucRf4463SPIByte114:
0x01EC	0x4807    LDR	R0, [PC, #28]
0x01EE	0x6801    LDR	R1, [R0, #0]
0x01F0	0x2080    MOVS	R0, #128
0x01F2	0x4008    ANDS	R0, R1
0x01F4	0x09C0    LSRS	R0, R0, #7
0x01F6	0x2800    CMP	R0, #0
0x01F8	0xD000    BEQ	L_ucRf4463SPIByte115
0x01FA	0xE7F7    B	L_ucRf4463SPIByte114
L_ucRf4463SPIByte115:
;driverrf4463pro.c, 753 :: 		return ( ucSPI2ByteReceived );
0x01FC	0x4801    LDR	R0, [PC, #4]
0x01FE	0x7800    LDRB	R0, [R0, #0]
;driverrf4463pro.c, 755 :: 		}
L_end_ucRf4463SPIByte:
0x0200	0xBD00    POP	(R15)
0x0202	0xBF00    NOP
0x0204	0x00042000  	_ucSPI2ByteReceived+0
0x0208	0x380C4000  	SPI2_DR+0
0x020C	0x38084000  	SPI2_SRbits+0
; end of _ucRf4463SPIByte
_vRF4463Init:
;driverrf4463pro.c, 41 :: 		void vRF4463Init ( void ) {  // MODE,
0x1764	0xB500    PUSH	(R14)
0x1766	0xB086    SUB	SP, SP, #24
;driverrf4463pro.c, 44 :: 		for ( i = 4; i < 16; i++ ) {
0x1768	0x2004    MOVS	R0, #4
0x176A	0x9005    STR	R0, [SP, #20]
L_vRF4463Init2:
0x176C	0x9805    LDR	R0, [SP, #20]
0x176E	0xB2C0    UXTB	R0, R0
0x1770	0x2810    CMP	R0, #16
0x1772	0xD217    BCS	L_vRF4463Init3
;driverrf4463pro.c, 45 :: 		RF_MODEM_MOD_TYPE_12_data[ i ] = RF_MODEM_MOD_TYPE_12[ ucRF4463Rate ][ i - 4 ];
0x1774	0x9905    LDR	R1, [SP, #20]
0x1776	0xB2C9    UXTB	R1, R1
0x1778	0x48C3    LDR	R0, [PC, #780]
0x177A	0x1843    ADDS	R3, R0, R1
0x177C	0x48C3    LDR	R0, [PC, #780]
0x177E	0x7802    LDRB	R2, [R0, #0]
0x1780	0x200C    MOVS	R0, #12
0x1782	0x4611    MOV	R1, R2
0x1784	0x4341    MULS	R1, R0, R1
0x1786	0x48C2    LDR	R0, [PC, #776]
0x1788	0x1842    ADDS	R2, R0, R1
0x178A	0x9805    LDR	R0, [SP, #20]
0x178C	0xB2C0    UXTB	R0, R0
0x178E	0x1F01    SUBS	R1, R0, #4
0x1790	0xB209    SXTH	R1, R1
0x1792	0x4610    MOV	R0, R2
0x1794	0x1840    ADDS	R0, R0, R1
0x1796	0x7800    LDRB	R0, [R0, #0]
0x1798	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 44 :: 		for ( i = 4; i < 16; i++ ) {
0x179A	0x9805    LDR	R0, [SP, #20]
0x179C	0xB2C0    UXTB	R0, R0
0x179E	0x3001    ADDS	R0, #1
0x17A0	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 46 :: 		}
0x17A2	0xE7E3    B	L_vRF4463Init2
L_vRF4463Init3:
;driverrf4463pro.c, 49 :: 		if ( ucRF4463Freq3 < 8 ) {
0x17A4	0x48BB    LDR	R0, [PC, #748]
0x17A6	0x7800    LDRB	R0, [R0, #0]
0x17A8	0x2808    CMP	R0, #8
0x17AA	0xD300    BCC	#0
0x17AC	0xE0F0    B	L_vRF4463Init5
;driverrf4463pro.c, 50 :: 		for ( i = 4; i < 12; i++ ) {
0x17AE	0x2004    MOVS	R0, #4
0x17B0	0x9005    STR	R0, [SP, #20]
L_vRF4463Init6:
0x17B2	0x9805    LDR	R0, [SP, #20]
0x17B4	0xB2C0    UXTB	R0, R0
0x17B6	0x280C    CMP	R0, #12
0x17B8	0xD217    BCS	L_vRF4463Init7
;driverrf4463pro.c, 51 :: 		RF_MODEM_TX_RAMP_DELAY_8_data[ i ] = RF_MODEM_TX_RAMP_DELAY_8_433[ ucRF4463Rate ][ i - 4 ];
0x17BA	0x9905    LDR	R1, [SP, #20]
0x17BC	0xB2C9    UXTB	R1, R1
0x17BE	0x48B6    LDR	R0, [PC, #728]
0x17C0	0x1843    ADDS	R3, R0, R1
0x17C2	0x48B2    LDR	R0, [PC, #712]
0x17C4	0x7802    LDRB	R2, [R0, #0]
0x17C6	0x2008    MOVS	R0, #8
0x17C8	0x4611    MOV	R1, R2
0x17CA	0x4341    MULS	R1, R0, R1
0x17CC	0x48B3    LDR	R0, [PC, #716]
0x17CE	0x1842    ADDS	R2, R0, R1
0x17D0	0x9805    LDR	R0, [SP, #20]
0x17D2	0xB2C0    UXTB	R0, R0
0x17D4	0x1F01    SUBS	R1, R0, #4
0x17D6	0xB209    SXTH	R1, R1
0x17D8	0x4610    MOV	R0, R2
0x17DA	0x1840    ADDS	R0, R0, R1
0x17DC	0x7800    LDRB	R0, [R0, #0]
0x17DE	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 50 :: 		for ( i = 4; i < 12; i++ ) {
0x17E0	0x9805    LDR	R0, [SP, #20]
0x17E2	0xB2C0    UXTB	R0, R0
0x17E4	0x3001    ADDS	R0, #1
0x17E6	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 52 :: 		}
0x17E8	0xE7E3    B	L_vRF4463Init6
L_vRF4463Init7:
;driverrf4463pro.c, 53 :: 		for ( i = 4; i < 11; i++ ) {
0x17EA	0x2004    MOVS	R0, #4
0x17EC	0x9005    STR	R0, [SP, #20]
L_vRF4463Init9:
0x17EE	0x9805    LDR	R0, [SP, #20]
0x17F0	0xB2C0    UXTB	R0, R0
0x17F2	0x280B    CMP	R0, #11
0x17F4	0xD217    BCS	L_vRF4463Init10
;driverrf4463pro.c, 54 :: 		RF_MODEM_AFC_GEAR_7_data[ i ] = RF_MODEM_AFC_GEAR_7_433[ ucRF4463Rate ][ i - 4 ];
0x17F6	0x9905    LDR	R1, [SP, #20]
0x17F8	0xB2C9    UXTB	R1, R1
0x17FA	0x48A9    LDR	R0, [PC, #676]
0x17FC	0x1843    ADDS	R3, R0, R1
0x17FE	0x48A3    LDR	R0, [PC, #652]
0x1800	0x7802    LDRB	R2, [R0, #0]
0x1802	0x2007    MOVS	R0, #7
0x1804	0x4611    MOV	R1, R2
0x1806	0x4341    MULS	R1, R0, R1
0x1808	0x48A6    LDR	R0, [PC, #664]
0x180A	0x1842    ADDS	R2, R0, R1
0x180C	0x9805    LDR	R0, [SP, #20]
0x180E	0xB2C0    UXTB	R0, R0
0x1810	0x1F01    SUBS	R1, R0, #4
0x1812	0xB209    SXTH	R1, R1
0x1814	0x4610    MOV	R0, R2
0x1816	0x1840    ADDS	R0, R0, R1
0x1818	0x7800    LDRB	R0, [R0, #0]
0x181A	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 53 :: 		for ( i = 4; i < 11; i++ ) {
0x181C	0x9805    LDR	R0, [SP, #20]
0x181E	0xB2C0    UXTB	R0, R0
0x1820	0x3001    ADDS	R0, #1
0x1822	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 55 :: 		}
0x1824	0xE7E3    B	L_vRF4463Init9
L_vRF4463Init10:
;driverrf4463pro.c, 56 :: 		for ( i = 4; i < 15; i++ ) {
0x1826	0x2004    MOVS	R0, #4
0x1828	0x9005    STR	R0, [SP, #20]
L_vRF4463Init12:
0x182A	0x9805    LDR	R0, [SP, #20]
0x182C	0xB2C0    UXTB	R0, R0
0x182E	0x280F    CMP	R0, #15
0x1830	0xD217    BCS	L_vRF4463Init13
;driverrf4463pro.c, 57 :: 		RF_MODEM_OOK_CNT1_11_data[ i ] = RF_MODEM_OOK_CNT1_11_433[ ucRF4463Rate ][ i - 4 ];
0x1832	0x9905    LDR	R1, [SP, #20]
0x1834	0xB2C9    UXTB	R1, R1
0x1836	0x489C    LDR	R0, [PC, #624]
0x1838	0x1843    ADDS	R3, R0, R1
0x183A	0x4894    LDR	R0, [PC, #592]
0x183C	0x7802    LDRB	R2, [R0, #0]
0x183E	0x200B    MOVS	R0, #11
0x1840	0x4611    MOV	R1, R2
0x1842	0x4341    MULS	R1, R0, R1
0x1844	0x4899    LDR	R0, [PC, #612]
0x1846	0x1842    ADDS	R2, R0, R1
0x1848	0x9805    LDR	R0, [SP, #20]
0x184A	0xB2C0    UXTB	R0, R0
0x184C	0x1F01    SUBS	R1, R0, #4
0x184E	0xB209    SXTH	R1, R1
0x1850	0x4610    MOV	R0, R2
0x1852	0x1840    ADDS	R0, R0, R1
0x1854	0x7800    LDRB	R0, [R0, #0]
0x1856	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 56 :: 		for ( i = 4; i < 15; i++ ) {
0x1858	0x9805    LDR	R0, [SP, #20]
0x185A	0xB2C0    UXTB	R0, R0
0x185C	0x3001    ADDS	R0, #1
0x185E	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 58 :: 		}
0x1860	0xE7E3    B	L_vRF4463Init12
L_vRF4463Init13:
;driverrf4463pro.c, 59 :: 		for ( i = 4; i < 16; i++ ) {
0x1862	0x2004    MOVS	R0, #4
0x1864	0x9005    STR	R0, [SP, #20]
L_vRF4463Init15:
0x1866	0x9805    LDR	R0, [SP, #20]
0x1868	0xB2C0    UXTB	R0, R0
0x186A	0x2810    CMP	R0, #16
0x186C	0xD217    BCS	L_vRF4463Init16
;driverrf4463pro.c, 60 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x186E	0x9905    LDR	R1, [SP, #20]
0x1870	0xB2C9    UXTB	R1, R1
0x1872	0x488F    LDR	R0, [PC, #572]
0x1874	0x1843    ADDS	R3, R0, R1
0x1876	0x4885    LDR	R0, [PC, #532]
0x1878	0x7802    LDRB	R2, [R0, #0]
0x187A	0x200C    MOVS	R0, #12
0x187C	0x4611    MOV	R1, R2
0x187E	0x4341    MULS	R1, R0, R1
0x1880	0x488C    LDR	R0, [PC, #560]
0x1882	0x1842    ADDS	R2, R0, R1
0x1884	0x9805    LDR	R0, [SP, #20]
0x1886	0xB2C0    UXTB	R0, R0
0x1888	0x1F01    SUBS	R1, R0, #4
0x188A	0xB209    SXTH	R1, R1
0x188C	0x4610    MOV	R0, R2
0x188E	0x1840    ADDS	R0, R0, R1
0x1890	0x7800    LDRB	R0, [R0, #0]
0x1892	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 59 :: 		for ( i = 4; i < 16; i++ ) {
0x1894	0x9805    LDR	R0, [SP, #20]
0x1896	0xB2C0    UXTB	R0, R0
0x1898	0x3001    ADDS	R0, #1
0x189A	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 61 :: 		}
0x189C	0xE7E3    B	L_vRF4463Init15
L_vRF4463Init16:
;driverrf4463pro.c, 62 :: 		for ( i = 4; i < 16; i++ ) {
0x189E	0x2004    MOVS	R0, #4
0x18A0	0x9005    STR	R0, [SP, #20]
L_vRF4463Init18:
0x18A2	0x9805    LDR	R0, [SP, #20]
0x18A4	0xB2C0    UXTB	R0, R0
0x18A6	0x2810    CMP	R0, #16
0x18A8	0xD217    BCS	L_vRF4463Init19
;driverrf4463pro.c, 63 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x18AA	0x9905    LDR	R1, [SP, #20]
0x18AC	0xB2C9    UXTB	R1, R1
0x18AE	0x4882    LDR	R0, [PC, #520]
0x18B0	0x1843    ADDS	R3, R0, R1
0x18B2	0x4876    LDR	R0, [PC, #472]
0x18B4	0x7802    LDRB	R2, [R0, #0]
0x18B6	0x200C    MOVS	R0, #12
0x18B8	0x4611    MOV	R1, R2
0x18BA	0x4341    MULS	R1, R0, R1
0x18BC	0x487F    LDR	R0, [PC, #508]
0x18BE	0x1842    ADDS	R2, R0, R1
0x18C0	0x9805    LDR	R0, [SP, #20]
0x18C2	0xB2C0    UXTB	R0, R0
0x18C4	0x1F01    SUBS	R1, R0, #4
0x18C6	0xB209    SXTH	R1, R1
0x18C8	0x4610    MOV	R0, R2
0x18CA	0x1840    ADDS	R0, R0, R1
0x18CC	0x7800    LDRB	R0, [R0, #0]
0x18CE	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 62 :: 		for ( i = 4; i < 16; i++ ) {
0x18D0	0x9805    LDR	R0, [SP, #20]
0x18D2	0xB2C0    UXTB	R0, R0
0x18D4	0x3001    ADDS	R0, #1
0x18D6	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 64 :: 		}
0x18D8	0xE7E3    B	L_vRF4463Init18
L_vRF4463Init19:
;driverrf4463pro.c, 65 :: 		for ( i = 4; i < 16; i++ ) {
0x18DA	0x2004    MOVS	R0, #4
0x18DC	0x9005    STR	R0, [SP, #20]
L_vRF4463Init21:
0x18DE	0x9805    LDR	R0, [SP, #20]
0x18E0	0xB2C0    UXTB	R0, R0
0x18E2	0x2810    CMP	R0, #16
0x18E4	0xD217    BCS	L_vRF4463Init22
;driverrf4463pro.c, 66 :: 		RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x18E6	0x9905    LDR	R1, [SP, #20]
0x18E8	0xB2C9    UXTB	R1, R1
0x18EA	0x4875    LDR	R0, [PC, #468]
0x18EC	0x1843    ADDS	R3, R0, R1
0x18EE	0x4867    LDR	R0, [PC, #412]
0x18F0	0x7802    LDRB	R2, [R0, #0]
0x18F2	0x200C    MOVS	R0, #12
0x18F4	0x4611    MOV	R1, R2
0x18F6	0x4341    MULS	R1, R0, R1
0x18F8	0x4872    LDR	R0, [PC, #456]
0x18FA	0x1842    ADDS	R2, R0, R1
0x18FC	0x9805    LDR	R0, [SP, #20]
0x18FE	0xB2C0    UXTB	R0, R0
0x1900	0x1F01    SUBS	R1, R0, #4
0x1902	0xB209    SXTH	R1, R1
0x1904	0x4610    MOV	R0, R2
0x1906	0x1840    ADDS	R0, R0, R1
0x1908	0x7800    LDRB	R0, [R0, #0]
0x190A	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 65 :: 		for ( i = 4; i < 16; i++ ) {
0x190C	0x9805    LDR	R0, [SP, #20]
0x190E	0xB2C0    UXTB	R0, R0
0x1910	0x3001    ADDS	R0, #1
0x1912	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 67 :: 		}
0x1914	0xE7E3    B	L_vRF4463Init21
L_vRF4463Init22:
;driverrf4463pro.c, 68 :: 		for ( i = 4; i < 13; i++ ) {
0x1916	0x2004    MOVS	R0, #4
0x1918	0x9005    STR	R0, [SP, #20]
L_vRF4463Init24:
0x191A	0x9805    LDR	R0, [SP, #20]
0x191C	0xB2C0    UXTB	R0, R0
0x191E	0x280D    CMP	R0, #13
0x1920	0xD217    BCS	L_vRF4463Init25
;driverrf4463pro.c, 69 :: 		RF_MODEM_AGC_WINDOW_SIZE_9_data[ i ] = RF_MODEM_AGC_WINDOW_SIZE_9_433[ ucRF4463Rate ][ i - 4 ];
0x1922	0x9905    LDR	R1, [SP, #20]
0x1924	0xB2C9    UXTB	R1, R1
0x1926	0x4868    LDR	R0, [PC, #416]
0x1928	0x1843    ADDS	R3, R0, R1
0x192A	0x4858    LDR	R0, [PC, #352]
0x192C	0x7802    LDRB	R2, [R0, #0]
0x192E	0x2009    MOVS	R0, #9
0x1930	0x4611    MOV	R1, R2
0x1932	0x4341    MULS	R1, R0, R1
0x1934	0x4865    LDR	R0, [PC, #404]
0x1936	0x1842    ADDS	R2, R0, R1
0x1938	0x9805    LDR	R0, [SP, #20]
0x193A	0xB2C0    UXTB	R0, R0
0x193C	0x1F01    SUBS	R1, R0, #4
0x193E	0xB209    SXTH	R1, R1
0x1940	0x4610    MOV	R0, R2
0x1942	0x1840    ADDS	R0, R0, R1
0x1944	0x7800    LDRB	R0, [R0, #0]
0x1946	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 68 :: 		for ( i = 4; i < 13; i++ ) {
0x1948	0x9805    LDR	R0, [SP, #20]
0x194A	0xB2C0    UXTB	R0, R0
0x194C	0x3001    ADDS	R0, #1
0x194E	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 70 :: 		}
0x1950	0xE7E3    B	L_vRF4463Init24
L_vRF4463Init25:
;driverrf4463pro.c, 71 :: 		for ( i = 4; i < 13; i++ ) {
0x1952	0x2004    MOVS	R0, #4
0x1954	0x9005    STR	R0, [SP, #20]
L_vRF4463Init27:
0x1956	0x9805    LDR	R0, [SP, #20]
0x1958	0xB2C0    UXTB	R0, R0
0x195A	0x280D    CMP	R0, #13
0x195C	0xD217    BCS	L_vRF4463Init28
;driverrf4463pro.c, 72 :: 		RF_MODEM_BCR_OSR_1_9_data[ i ] = RF_MODEM_BCR_OSR_1_9_433[ ucRF4463Rate ][ i - 4 ];
0x195E	0x9905    LDR	R1, [SP, #20]
0x1960	0xB2C9    UXTB	R1, R1
0x1962	0x485B    LDR	R0, [PC, #364]
0x1964	0x1843    ADDS	R3, R0, R1
0x1966	0x4849    LDR	R0, [PC, #292]
0x1968	0x7802    LDRB	R2, [R0, #0]
0x196A	0x2009    MOVS	R0, #9
0x196C	0x4611    MOV	R1, R2
0x196E	0x4341    MULS	R1, R0, R1
0x1970	0x4858    LDR	R0, [PC, #352]
0x1972	0x1842    ADDS	R2, R0, R1
0x1974	0x9805    LDR	R0, [SP, #20]
0x1976	0xB2C0    UXTB	R0, R0
0x1978	0x1F01    SUBS	R1, R0, #4
0x197A	0xB209    SXTH	R1, R1
0x197C	0x4610    MOV	R0, R2
0x197E	0x1840    ADDS	R0, R0, R1
0x1980	0x7800    LDRB	R0, [R0, #0]
0x1982	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 71 :: 		for ( i = 4; i < 13; i++ ) {
0x1984	0x9805    LDR	R0, [SP, #20]
0x1986	0xB2C0    UXTB	R0, R0
0x1988	0x3001    ADDS	R0, #1
0x198A	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 73 :: 		}
0x198C	0xE7E3    B	L_vRF4463Init27
L_vRF4463Init28:
;driverrf4463pro.c, 74 :: 		}
0x198E	0xE120    B	L_vRF4463Init30
L_vRF4463Init5:
;driverrf4463pro.c, 76 :: 		for ( i = 4; i < 12; i++ ) {
0x1990	0x2004    MOVS	R0, #4
0x1992	0x9005    STR	R0, [SP, #20]
L_vRF4463Init31:
0x1994	0x9805    LDR	R0, [SP, #20]
0x1996	0xB2C0    UXTB	R0, R0
0x1998	0x280C    CMP	R0, #12
0x199A	0xD217    BCS	L_vRF4463Init32
;driverrf4463pro.c, 77 :: 		RF_MODEM_TX_RAMP_DELAY_8_data[ i ] = RF_MODEM_TX_RAMP_DELAY_8_850[ ucRF4463Rate ][ i - 4 ];
0x199C	0x9905    LDR	R1, [SP, #20]
0x199E	0xB2C9    UXTB	R1, R1
0x19A0	0x483D    LDR	R0, [PC, #244]
0x19A2	0x1843    ADDS	R3, R0, R1
0x19A4	0x4839    LDR	R0, [PC, #228]
0x19A6	0x7802    LDRB	R2, [R0, #0]
0x19A8	0x2008    MOVS	R0, #8
0x19AA	0x4611    MOV	R1, R2
0x19AC	0x4341    MULS	R1, R0, R1
0x19AE	0x484A    LDR	R0, [PC, #296]
0x19B0	0x1842    ADDS	R2, R0, R1
0x19B2	0x9805    LDR	R0, [SP, #20]
0x19B4	0xB2C0    UXTB	R0, R0
0x19B6	0x1F01    SUBS	R1, R0, #4
0x19B8	0xB209    SXTH	R1, R1
0x19BA	0x4610    MOV	R0, R2
0x19BC	0x1840    ADDS	R0, R0, R1
0x19BE	0x7800    LDRB	R0, [R0, #0]
0x19C0	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 76 :: 		for ( i = 4; i < 12; i++ ) {
0x19C2	0x9805    LDR	R0, [SP, #20]
0x19C4	0xB2C0    UXTB	R0, R0
0x19C6	0x3001    ADDS	R0, #1
0x19C8	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 78 :: 		}
0x19CA	0xE7E3    B	L_vRF4463Init31
L_vRF4463Init32:
;driverrf4463pro.c, 79 :: 		for ( i = 4; i < 11; i++ ) {
0x19CC	0x2004    MOVS	R0, #4
0x19CE	0x9005    STR	R0, [SP, #20]
L_vRF4463Init34:
0x19D0	0x9805    LDR	R0, [SP, #20]
0x19D2	0xB2C0    UXTB	R0, R0
0x19D4	0x280B    CMP	R0, #11
0x19D6	0xD217    BCS	L_vRF4463Init35
;driverrf4463pro.c, 80 :: 		RF_MODEM_AFC_GEAR_7_data[ i ] = RF_MODEM_AFC_GEAR_7_850[ ucRF4463Rate ][ i - 4 ];
0x19D8	0x9905    LDR	R1, [SP, #20]
0x19DA	0xB2C9    UXTB	R1, R1
0x19DC	0x4830    LDR	R0, [PC, #192]
0x19DE	0x1843    ADDS	R3, R0, R1
0x19E0	0x482A    LDR	R0, [PC, #168]
0x19E2	0x7802    LDRB	R2, [R0, #0]
0x19E4	0x2007    MOVS	R0, #7
0x19E6	0x4611    MOV	R1, R2
0x19E8	0x4341    MULS	R1, R0, R1
0x19EA	0x483C    LDR	R0, [PC, #240]
0x19EC	0x1842    ADDS	R2, R0, R1
0x19EE	0x9805    LDR	R0, [SP, #20]
0x19F0	0xB2C0    UXTB	R0, R0
0x19F2	0x1F01    SUBS	R1, R0, #4
0x19F4	0xB209    SXTH	R1, R1
0x19F6	0x4610    MOV	R0, R2
0x19F8	0x1840    ADDS	R0, R0, R1
0x19FA	0x7800    LDRB	R0, [R0, #0]
0x19FC	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 79 :: 		for ( i = 4; i < 11; i++ ) {
0x19FE	0x9805    LDR	R0, [SP, #20]
0x1A00	0xB2C0    UXTB	R0, R0
0x1A02	0x3001    ADDS	R0, #1
0x1A04	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 81 :: 		}
0x1A06	0xE7E3    B	L_vRF4463Init34
L_vRF4463Init35:
;driverrf4463pro.c, 82 :: 		for ( i = 4; i < 15; i++ ) {
0x1A08	0x2004    MOVS	R0, #4
0x1A0A	0x9005    STR	R0, [SP, #20]
L_vRF4463Init37:
0x1A0C	0x9805    LDR	R0, [SP, #20]
0x1A0E	0xB2C0    UXTB	R0, R0
0x1A10	0x280F    CMP	R0, #15
0x1A12	0xD217    BCS	L_vRF4463Init38
;driverrf4463pro.c, 83 :: 		RF_MODEM_OOK_CNT1_11_data[ i ] = RF_MODEM_OOK_CNT1_11_850[ ucRF4463Rate ][ i - 4 ];
0x1A14	0x9905    LDR	R1, [SP, #20]
0x1A16	0xB2C9    UXTB	R1, R1
0x1A18	0x4823    LDR	R0, [PC, #140]
0x1A1A	0x1843    ADDS	R3, R0, R1
0x1A1C	0x481B    LDR	R0, [PC, #108]
0x1A1E	0x7802    LDRB	R2, [R0, #0]
0x1A20	0x200B    MOVS	R0, #11
0x1A22	0x4611    MOV	R1, R2
0x1A24	0x4341    MULS	R1, R0, R1
0x1A26	0x482E    LDR	R0, [PC, #184]
0x1A28	0x1842    ADDS	R2, R0, R1
0x1A2A	0x9805    LDR	R0, [SP, #20]
0x1A2C	0xB2C0    UXTB	R0, R0
0x1A2E	0x1F01    SUBS	R1, R0, #4
0x1A30	0xB209    SXTH	R1, R1
0x1A32	0x4610    MOV	R0, R2
0x1A34	0x1840    ADDS	R0, R0, R1
0x1A36	0x7800    LDRB	R0, [R0, #0]
0x1A38	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 82 :: 		for ( i = 4; i < 15; i++ ) {
0x1A3A	0x9805    LDR	R0, [SP, #20]
0x1A3C	0xB2C0    UXTB	R0, R0
0x1A3E	0x3001    ADDS	R0, #1
0x1A40	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 84 :: 		}
0x1A42	0xE7E3    B	L_vRF4463Init37
L_vRF4463Init38:
;driverrf4463pro.c, 85 :: 		for ( i = 4; i < 16; i++ ) {
0x1A44	0x2004    MOVS	R0, #4
0x1A46	0x9005    STR	R0, [SP, #20]
L_vRF4463Init40:
0x1A48	0x9805    LDR	R0, [SP, #20]
0x1A4A	0xB2C0    UXTB	R0, R0
0x1A4C	0x2810    CMP	R0, #16
0x1A4E	0xD217    BCS	L_vRF4463Init41
;driverrf4463pro.c, 86 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x1A50	0x9905    LDR	R1, [SP, #20]
0x1A52	0xB2C9    UXTB	R1, R1
0x1A54	0x4816    LDR	R0, [PC, #88]
0x1A56	0x1843    ADDS	R3, R0, R1
0x1A58	0x480C    LDR	R0, [PC, #48]
0x1A5A	0x7802    LDRB	R2, [R0, #0]
0x1A5C	0x200C    MOVS	R0, #12
0x1A5E	0x4611    MOV	R1, R2
0x1A60	0x4341    MULS	R1, R0, R1
0x1A62	0x4820    LDR	R0, [PC, #128]
0x1A64	0x1842    ADDS	R2, R0, R1
0x1A66	0x9805    LDR	R0, [SP, #20]
0x1A68	0xB2C0    UXTB	R0, R0
0x1A6A	0x1F01    SUBS	R1, R0, #4
0x1A6C	0xB209    SXTH	R1, R1
0x1A6E	0x4610    MOV	R0, R2
0x1A70	0x1840    ADDS	R0, R0, R1
0x1A72	0x7800    LDRB	R0, [R0, #0]
0x1A74	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 85 :: 		for ( i = 4; i < 16; i++ ) {
0x1A76	0x9805    LDR	R0, [SP, #20]
0x1A78	0xB2C0    UXTB	R0, R0
0x1A7A	0x3001    ADDS	R0, #1
0x1A7C	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 87 :: 		}
0x1A7E	0xE7E3    B	L_vRF4463Init40
L_vRF4463Init41:
;driverrf4463pro.c, 88 :: 		for ( i = 4; i < 16; i++ ) {
0x1A80	0x2004    MOVS	R0, #4
0x1A82	0x9005    STR	R0, [SP, #20]
L_vRF4463Init43:
0x1A84	0x9805    LDR	R0, [SP, #20]
0x1A86	0xE02F    B	#94
0x1A88	0x00052000  	_RF_MODEM_MOD_TYPE_12_data+0
0x1A8C	0x10C62000  	_ucRF4463Rate+0
0x1A90	0x3E330000  	_RF_MODEM_MOD_TYPE_12+0
0x1A94	0x009F2000  	_ucRF4463Freq3+0
0x1A98	0x00152000  	_RF_MODEM_TX_RAMP_DELAY_8_data+0
0x1A9C	0x435C0000  	_RF_MODEM_TX_RAMP_DELAY_8_433+0
0x1AA0	0x00212000  	_RF_MODEM_AFC_GEAR_7_data+0
0x1AA4	0x44010000  	_RF_MODEM_AFC_GEAR_7_433+0
0x1AA8	0x002E2000  	_RF_MODEM_OOK_CNT1_11_data+0
0x1AAC	0x3F3B0000  	_RF_MODEM_OOK_CNT1_11_433+0
0x1AB0	0x003D2000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+0
0x1AB4	0x3EB70000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+0
0x1AB8	0x004D2000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x1ABC	0x3DAF0000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+0
0x1AC0	0x005D2000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x1AC4	0x3C230000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+0
0x1AC8	0x006D2000  	_RF_MODEM_AGC_WINDOW_SIZE_9_data+0
0x1ACC	0x423E0000  	_RF_MODEM_AGC_WINDOW_SIZE_9_433+0
0x1AD0	0x007A2000  	_RF_MODEM_BCR_OSR_1_9_data+0
0x1AD4	0x42A10000  	_RF_MODEM_BCR_OSR_1_9_433+0
0x1AD8	0x43040000  	_RF_MODEM_TX_RAMP_DELAY_8_850+0
0x1ADC	0x43B40000  	_RF_MODEM_AFC_GEAR_7_850+0
0x1AE0	0x3FB40000  	_RF_MODEM_OOK_CNT1_11_850+0
0x1AE4	0x3B9F0000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+0
0x1AE8	0xB2C0    UXTB	R0, R0
0x1AEA	0x2810    CMP	R0, #16
0x1AEC	0xD217    BCS	L_vRF4463Init44
;driverrf4463pro.c, 89 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x1AEE	0x9905    LDR	R1, [SP, #20]
0x1AF0	0xB2C9    UXTB	R1, R1
0x1AF2	0x48E3    LDR	R0, [PC, #908]
0x1AF4	0x1843    ADDS	R3, R0, R1
0x1AF6	0x48E3    LDR	R0, [PC, #908]
0x1AF8	0x7802    LDRB	R2, [R0, #0]
0x1AFA	0x200C    MOVS	R0, #12
0x1AFC	0x4611    MOV	R1, R2
0x1AFE	0x4341    MULS	R1, R0, R1
0x1B00	0x48E1    LDR	R0, [PC, #900]
0x1B02	0x1842    ADDS	R2, R0, R1
0x1B04	0x9805    LDR	R0, [SP, #20]
0x1B06	0xB2C0    UXTB	R0, R0
0x1B08	0x1F01    SUBS	R1, R0, #4
0x1B0A	0xB209    SXTH	R1, R1
0x1B0C	0x4610    MOV	R0, R2
0x1B0E	0x1840    ADDS	R0, R0, R1
0x1B10	0x7800    LDRB	R0, [R0, #0]
0x1B12	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 88 :: 		for ( i = 4; i < 16; i++ ) {
0x1B14	0x9805    LDR	R0, [SP, #20]
0x1B16	0xB2C0    UXTB	R0, R0
0x1B18	0x3001    ADDS	R0, #1
0x1B1A	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 90 :: 		}
0x1B1C	0xE7B2    B	L_vRF4463Init43
L_vRF4463Init44:
;driverrf4463pro.c, 91 :: 		for ( i = 4; i < 16; i++ ) {
0x1B1E	0x2004    MOVS	R0, #4
0x1B20	0x9005    STR	R0, [SP, #20]
L_vRF4463Init46:
0x1B22	0x9805    LDR	R0, [SP, #20]
0x1B24	0xB2C0    UXTB	R0, R0
0x1B26	0x2810    CMP	R0, #16
0x1B28	0xD217    BCS	L_vRF4463Init47
;driverrf4463pro.c, 92 :: 		RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x1B2A	0x9905    LDR	R1, [SP, #20]
0x1B2C	0xB2C9    UXTB	R1, R1
0x1B2E	0x48D7    LDR	R0, [PC, #860]
0x1B30	0x1843    ADDS	R3, R0, R1
0x1B32	0x48D4    LDR	R0, [PC, #848]
0x1B34	0x7802    LDRB	R2, [R0, #0]
0x1B36	0x200C    MOVS	R0, #12
0x1B38	0x4611    MOV	R1, R2
0x1B3A	0x4341    MULS	R1, R0, R1
0x1B3C	0x48D4    LDR	R0, [PC, #848]
0x1B3E	0x1842    ADDS	R2, R0, R1
0x1B40	0x9805    LDR	R0, [SP, #20]
0x1B42	0xB2C0    UXTB	R0, R0
0x1B44	0x1F01    SUBS	R1, R0, #4
0x1B46	0xB209    SXTH	R1, R1
0x1B48	0x4610    MOV	R0, R2
0x1B4A	0x1840    ADDS	R0, R0, R1
0x1B4C	0x7800    LDRB	R0, [R0, #0]
0x1B4E	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 91 :: 		for ( i = 4; i < 16; i++ ) {
0x1B50	0x9805    LDR	R0, [SP, #20]
0x1B52	0xB2C0    UXTB	R0, R0
0x1B54	0x3001    ADDS	R0, #1
0x1B56	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 93 :: 		}
0x1B58	0xE7E3    B	L_vRF4463Init46
L_vRF4463Init47:
;driverrf4463pro.c, 94 :: 		for ( i = 4; i < 13; i++ ) {
0x1B5A	0x2004    MOVS	R0, #4
0x1B5C	0x9005    STR	R0, [SP, #20]
L_vRF4463Init49:
0x1B5E	0x9805    LDR	R0, [SP, #20]
0x1B60	0xB2C0    UXTB	R0, R0
0x1B62	0x280D    CMP	R0, #13
0x1B64	0xD217    BCS	L_vRF4463Init50
;driverrf4463pro.c, 95 :: 		RF_MODEM_AGC_WINDOW_SIZE_9_data[ i ] = RF_MODEM_AGC_WINDOW_SIZE_9_850[ ucRF4463Rate ][ i - 4 ];
0x1B66	0x9905    LDR	R1, [SP, #20]
0x1B68	0xB2C9    UXTB	R1, R1
0x1B6A	0x48CA    LDR	R0, [PC, #808]
0x1B6C	0x1843    ADDS	R3, R0, R1
0x1B6E	0x48C5    LDR	R0, [PC, #788]
0x1B70	0x7802    LDRB	R2, [R0, #0]
0x1B72	0x2009    MOVS	R0, #9
0x1B74	0x4611    MOV	R1, R2
0x1B76	0x4341    MULS	R1, R0, R1
0x1B78	0x48C7    LDR	R0, [PC, #796]
0x1B7A	0x1842    ADDS	R2, R0, R1
0x1B7C	0x9805    LDR	R0, [SP, #20]
0x1B7E	0xB2C0    UXTB	R0, R0
0x1B80	0x1F01    SUBS	R1, R0, #4
0x1B82	0xB209    SXTH	R1, R1
0x1B84	0x4610    MOV	R0, R2
0x1B86	0x1840    ADDS	R0, R0, R1
0x1B88	0x7800    LDRB	R0, [R0, #0]
0x1B8A	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 94 :: 		for ( i = 4; i < 13; i++ ) {
0x1B8C	0x9805    LDR	R0, [SP, #20]
0x1B8E	0xB2C0    UXTB	R0, R0
0x1B90	0x3001    ADDS	R0, #1
0x1B92	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 96 :: 		}
0x1B94	0xE7E3    B	L_vRF4463Init49
L_vRF4463Init50:
;driverrf4463pro.c, 97 :: 		for ( i = 4; i < 13; i++ ) {
0x1B96	0x2004    MOVS	R0, #4
0x1B98	0x9005    STR	R0, [SP, #20]
L_vRF4463Init52:
0x1B9A	0x9805    LDR	R0, [SP, #20]
0x1B9C	0xB2C0    UXTB	R0, R0
0x1B9E	0x280D    CMP	R0, #13
0x1BA0	0xD217    BCS	L_vRF4463Init53
;driverrf4463pro.c, 98 :: 		RF_MODEM_BCR_OSR_1_9_data[ i ] = RF_MODEM_BCR_OSR_1_9_850[ ucRF4463Rate ][ i - 4 ];
0x1BA2	0x9905    LDR	R1, [SP, #20]
0x1BA4	0xB2C9    UXTB	R1, R1
0x1BA6	0x48BD    LDR	R0, [PC, #756]
0x1BA8	0x1843    ADDS	R3, R0, R1
0x1BAA	0x48B6    LDR	R0, [PC, #728]
0x1BAC	0x7802    LDRB	R2, [R0, #0]
0x1BAE	0x2009    MOVS	R0, #9
0x1BB0	0x4611    MOV	R1, R2
0x1BB2	0x4341    MULS	R1, R0, R1
0x1BB4	0x48BA    LDR	R0, [PC, #744]
0x1BB6	0x1842    ADDS	R2, R0, R1
0x1BB8	0x9805    LDR	R0, [SP, #20]
0x1BBA	0xB2C0    UXTB	R0, R0
0x1BBC	0x1F01    SUBS	R1, R0, #4
0x1BBE	0xB209    SXTH	R1, R1
0x1BC0	0x4610    MOV	R0, R2
0x1BC2	0x1840    ADDS	R0, R0, R1
0x1BC4	0x7800    LDRB	R0, [R0, #0]
0x1BC6	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 97 :: 		for ( i = 4; i < 13; i++ ) {
0x1BC8	0x9805    LDR	R0, [SP, #20]
0x1BCA	0xB2C0    UXTB	R0, R0
0x1BCC	0x3001    ADDS	R0, #1
0x1BCE	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 99 :: 		}
0x1BD0	0xE7E3    B	L_vRF4463Init52
L_vRF4463Init53:
;driverrf4463pro.c, 100 :: 		}
L_vRF4463Init30:
;driverrf4463pro.c, 101 :: 		for ( i = 4; i < 11; i++ ) {
0x1BD2	0x2004    MOVS	R0, #4
0x1BD4	0x9005    STR	R0, [SP, #20]
L_vRF4463Init55:
0x1BD6	0x9805    LDR	R0, [SP, #20]
0x1BD8	0xB2C0    UXTB	R0, R0
0x1BDA	0x280B    CMP	R0, #11
0x1BDC	0xD217    BCS	L_vRF4463Init56
;driverrf4463pro.c, 102 :: 		RF_SYNTH_PFDCP_CPFF_7_data[ i ] = RF_SYNTH_PFDCP_CPFF_7[ ucRF4463Rate ][ i - 4 ];
0x1BDE	0x9905    LDR	R1, [SP, #20]
0x1BE0	0xB2C9    UXTB	R1, R1
0x1BE2	0x48B0    LDR	R0, [PC, #704]
0x1BE4	0x1843    ADDS	R3, R0, R1
0x1BE6	0x48A7    LDR	R0, [PC, #668]
0x1BE8	0x7802    LDRB	R2, [R0, #0]
0x1BEA	0x2007    MOVS	R0, #7
0x1BEC	0x4611    MOV	R1, R2
0x1BEE	0x4341    MULS	R1, R0, R1
0x1BF0	0x48AD    LDR	R0, [PC, #692]
0x1BF2	0x1842    ADDS	R2, R0, R1
0x1BF4	0x9805    LDR	R0, [SP, #20]
0x1BF6	0xB2C0    UXTB	R0, R0
0x1BF8	0x1F01    SUBS	R1, R0, #4
0x1BFA	0xB209    SXTH	R1, R1
0x1BFC	0x4610    MOV	R0, R2
0x1BFE	0x1840    ADDS	R0, R0, R1
0x1C00	0x7800    LDRB	R0, [R0, #0]
0x1C02	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 101 :: 		for ( i = 4; i < 11; i++ ) {
0x1C04	0x9805    LDR	R0, [SP, #20]
0x1C06	0xB2C0    UXTB	R0, R0
0x1C08	0x3001    ADDS	R0, #1
0x1C0A	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 103 :: 		}
0x1C0C	0xE7E3    B	L_vRF4463Init55
L_vRF4463Init56:
;driverrf4463pro.c, 107 :: 		vRF4463GPIO_SET( ucRF4463Mode );                              // PARAMETRO CONFIGURABLE
0x1C0E	0x48A7    LDR	R0, [PC, #668]
0x1C10	0x7800    LDRB	R0, [R0, #0]
0x1C12	0xB401    PUSH	(R0)
0x1C14	0xF7FEFDA4  BL	_vRF4463GPIO_SET+0
0x1C18	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 110 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x1C1A	0x4668    MOV	R0, SP
0x1C1C	0x1C01    ADDS	R1, R0, #0
0x1C1E	0x2011    MOVS	R0, #17
0x1C20	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 111 :: 		app_command_buf[ 1 ] = 0x00;    // 0x0000
0x1C22	0x4668    MOV	R0, SP
0x1C24	0x1C41    ADDS	R1, R0, #1
0x1C26	0x2000    MOVS	R0, #0
0x1C28	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 112 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1 Parameters
0x1C2A	0x4668    MOV	R0, SP
0x1C2C	0x1C81    ADDS	R1, R0, #2
0x1C2E	0x2001    MOVS	R0, #1
0x1C30	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 113 :: 		app_command_buf[ 3 ] = 0x00;    // 0x0000
0x1C32	0x4668    MOV	R0, SP
0x1C34	0x1CC1    ADDS	R1, R0, #3
0x1C36	0x2000    MOVS	R0, #0
0x1C38	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 114 :: 		app_command_buf[ 4 ] = 98;      // freq  adjustment    ( rango desde 0 - 127 Low cap - High Cap )
0x1C3A	0x4668    MOV	R0, SP
0x1C3C	0x1D01    ADDS	R1, R0, #4
0x1C3E	0x2062    MOVS	R0, #98
0x1C40	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 115 :: 		spi_write( 5, app_command_buf );
0x1C42	0x4668    MOV	R0, SP
0x1C44	0xB401    PUSH	(R0)
0x1C46	0x2005    MOVS	R0, #5
0x1C48	0xB401    PUSH	(R0)
0x1C4A	0xF7FEFE4F  BL	_spi_write+0
0x1C4E	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 118 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x1C50	0x4668    MOV	R0, SP
0x1C52	0x1C01    ADDS	R1, R0, #0
0x1C54	0x2011    MOVS	R0, #17
0x1C56	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 119 :: 		app_command_buf[ 1 ] = 0x00;    // 0x0003
0x1C58	0x4668    MOV	R0, SP
0x1C5A	0x1C41    ADDS	R1, R0, #1
0x1C5C	0x2000    MOVS	R0, #0
0x1C5E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 120 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1 Parameters
0x1C60	0x4668    MOV	R0, SP
0x1C62	0x1C81    ADDS	R1, R0, #2
0x1C64	0x2001    MOVS	R0, #1
0x1C66	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 121 :: 		app_command_buf[ 3 ] = 0x03;    // 0x0003
0x1C68	0x4668    MOV	R0, SP
0x1C6A	0x1CC1    ADDS	R1, R0, #3
0x1C6C	0x2003    MOVS	R0, #3
0x1C6E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 122 :: 		app_command_buf[ 4 ] = 0x40;    // tx = rx = 64 byte, ordinary PH,high performance mode  ?????????????????????
0x1C70	0x4668    MOV	R0, SP
0x1C72	0x1D01    ADDS	R1, R0, #4
0x1C74	0x2040    MOVS	R0, #64
0x1C76	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 123 :: 		spi_write( 5, app_command_buf );
0x1C78	0x4668    MOV	R0, SP
0x1C7A	0xB401    PUSH	(R0)
0x1C7C	0x2005    MOVS	R0, #5
0x1C7E	0xB401    PUSH	(R0)
0x1C80	0xF7FEFE34  BL	_spi_write+0
0x1C84	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 127 :: 		spi_write( 0x08, RF_FRR_CTL_A_MODE_4_data );    // disable all fast response register
0x1C86	0x488A    LDR	R0, [PC, #552]
0x1C88	0xB401    PUSH	(R0)
0x1C8A	0x2008    MOVS	R0, #8
0x1C8C	0xB401    PUSH	(R0)
0x1C8E	0xF7FEFE2D  BL	_spi_write+0
0x1C92	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 130 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x1C94	0x4668    MOV	R0, SP
0x1C96	0x1C01    ADDS	R1, R0, #0
0x1C98	0x2011    MOVS	R0, #17
0x1C9A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 131 :: 		app_command_buf[ 1 ] = 0x10;    // 0x1000
0x1C9C	0x4668    MOV	R0, SP
0x1C9E	0x1C41    ADDS	R1, R0, #1
0x1CA0	0x2010    MOVS	R0, #16
0x1CA2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 132 :: 		app_command_buf[ 2 ] = 0x09;    // Total 9 Parameters
0x1CA4	0x4668    MOV	R0, SP
0x1CA6	0x1C81    ADDS	R1, R0, #2
0x1CA8	0x2009    MOVS	R0, #9
0x1CAA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 133 :: 		app_command_buf[ 3 ] = 0x00;    // 0x1000
0x1CAC	0x4668    MOV	R0, SP
0x1CAE	0x1CC1    ADDS	R1, R0, #3
0x1CB0	0x2000    MOVS	R0, #0
0x1CB2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 135 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x1CB4	0x487D    LDR	R0, [PC, #500]
0x1CB6	0x7800    LDRB	R0, [R0, #0]
0x1CB8	0x2802    CMP	R0, #2
0x1CBA	0xD104    BNE	L_vRF4463Init58
;driverrf4463pro.c, 136 :: 		app_command_buf[ 4 ] = 0xff;     //  Need to send 255 bytes of Preamble
0x1CBC	0x4668    MOV	R0, SP
0x1CBE	0x1D01    ADDS	R1, R0, #4
0x1CC0	0x20FF    MOVS	R0, #255
0x1CC2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 137 :: 		}
0x1CC4	0xE003    B	L_vRF4463Init59
L_vRF4463Init58:
;driverrf4463pro.c, 139 :: 		app_command_buf[ 4 ] = 0x08;   //  Need to send 8 bytes of Preamble
0x1CC6	0x4668    MOV	R0, SP
0x1CC8	0x1D01    ADDS	R1, R0, #4
0x1CCA	0x2008    MOVS	R0, #8
0x1CCC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 140 :: 		}
L_vRF4463Init59:
;driverrf4463pro.c, 143 :: 		app_command_buf[ 5 ]   = 0x14;       // To detect 20 bit sync word,
0x1CCE	0x4668    MOV	R0, SP
0x1CD0	0x1D41    ADDS	R1, R0, #5
0x1CD2	0x2014    MOVS	R0, #20
0x1CD4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 144 :: 		app_command_buf[ 6 ]   = 0x00;       // Non-standard preamble settings, useless
0x1CD6	0x4668    MOV	R0, SP
0x1CD8	0x1D81    ADDS	R1, R0, #6
0x1CDA	0x2000    MOVS	R0, #0
0x1CDC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 145 :: 		app_command_buf[ 7 ]   = 0x0f;       // Time of the preamble Timeout   ????????????????????????????????????????????????????????????
0x1CDE	0x4668    MOV	R0, SP
0x1CE0	0x1DC1    ADDS	R1, R0, #7
0x1CE2	0x200F    MOVS	R0, #15
0x1CE4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 146 :: 		app_command_buf[ 8 ]   = 0x31;       // The length of the preamble is   byte Calculation , 1st = 1 NO manchest  Encoding, using standard 1010.??
0x1CE6	0x4668    MOV	R0, SP
0x1CE8	0x4601    MOV	R1, R0
0x1CEA	0x3108    ADDS	R1, #8
0x1CEC	0x2031    MOVS	R0, #49
0x1CEE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 147 :: 		app_command_buf[ 9 ]   = 0x0;        // Non-standard Preamble Patten 4th byte
0x1CF0	0x4668    MOV	R0, SP
0x1CF2	0x4601    MOV	R1, R0
0x1CF4	0x3109    ADDS	R1, #9
0x1CF6	0x2000    MOVS	R0, #0
0x1CF8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 148 :: 		app_command_buf[ 10 ]  = 0x00;       // Non-standard Preamble Patten 3rd byte
0x1CFA	0x4668    MOV	R0, SP
0x1CFC	0x4601    MOV	R1, R0
0x1CFE	0x310A    ADDS	R1, #10
0x1D00	0x2000    MOVS	R0, #0
0x1D02	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 149 :: 		app_command_buf[ 11 ]  = 0x00;       // Non-standard Preamble Patten 2nd byte
0x1D04	0x4668    MOV	R0, SP
0x1D06	0x4601    MOV	R1, R0
0x1D08	0x310B    ADDS	R1, #11
0x1D0A	0x2000    MOVS	R0, #0
0x1D0C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 150 :: 		app_command_buf[ 12 ]  = 0x00;       // Non-standard Preamble Patten 1st byte
0x1D0E	0x4668    MOV	R0, SP
0x1D10	0x4601    MOV	R1, R0
0x1D12	0x310C    ADDS	R1, #12
0x1D14	0x2000    MOVS	R0, #0
0x1D16	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 151 :: 		spi_write(13, app_command_buf);
0x1D18	0x4668    MOV	R0, SP
0x1D1A	0xB401    PUSH	(R0)
0x1D1C	0x200D    MOVS	R0, #13
0x1D1E	0xB401    PUSH	(R0)
0x1D20	0xF7FEFDE4  BL	_spi_write+0
0x1D24	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 154 :: 		app_command_buf[ 0 ] = 0x11;         // SET PROPERTY
0x1D26	0x4668    MOV	R0, SP
0x1D28	0x1C01    ADDS	R1, R0, #0
0x1D2A	0x2011    MOVS	R0, #17
0x1D2C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 155 :: 		app_command_buf[ 1 ] = 0x11;         // command = 0x1100
0x1D2E	0x4668    MOV	R0, SP
0x1D30	0x1C41    ADDS	R1, R0, #1
0x1D32	0x2011    MOVS	R0, #17
0x1D34	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 156 :: 		app_command_buf[ 2 ] = 0x05;         // Total 5 Parameters
0x1D36	0x4668    MOV	R0, SP
0x1D38	0x1C81    ADDS	R1, R0, #2
0x1D3A	0x2005    MOVS	R0, #5
0x1D3C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 157 :: 		app_command_buf[ 3 ] = 0x00;         // command = 0x1100
0x1D3E	0x4668    MOV	R0, SP
0x1D40	0x1CC1    ADDS	R1, R0, #3
0x1D42	0x2000    MOVS	R0, #0
0x1D44	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 158 :: 		app_command_buf[ 4 ] = 0x01;         // The synchronization word is defined and sent in the length field, and the synchronization word cannot be wrong,Not 4FSK, not manchest encoding, only 2 bytes
0x1D46	0x4668    MOV	R0, SP
0x1D48	0x1D01    ADDS	R1, R0, #4
0x1D4A	0x2001    MOVS	R0, #1
0x1D4C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 160 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x1D4E	0x4857    LDR	R0, [PC, #348]
0x1D50	0x7800    LDRB	R0, [R0, #0]
0x1D52	0x2802    CMP	R0, #2
0x1D54	0xD108    BNE	L_vRF4463Init60
;driverrf4463pro.c, 161 :: 		app_command_buf[ 5 ] = 0x55;      // Sync word 3
0x1D56	0x4668    MOV	R0, SP
0x1D58	0x1D41    ADDS	R1, R0, #5
0x1D5A	0x2055    MOVS	R0, #85
0x1D5C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 162 :: 		app_command_buf[ 6 ] = 0x55;      // Sync word 2
0x1D5E	0x4668    MOV	R0, SP
0x1D60	0x1D81    ADDS	R1, R0, #6
0x1D62	0x2055    MOVS	R0, #85
0x1D64	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 163 :: 		}
0x1D66	0xE007    B	L_vRF4463Init61
L_vRF4463Init60:
;driverrf4463pro.c, 165 :: 		app_command_buf[ 5 ] = 0x2d;    // Sync word 3
0x1D68	0x4668    MOV	R0, SP
0x1D6A	0x1D41    ADDS	R1, R0, #5
0x1D6C	0x202D    MOVS	R0, #45
0x1D6E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 166 :: 		app_command_buf[ 6 ] = 0xd4;    // Sync word 2
0x1D70	0x4668    MOV	R0, SP
0x1D72	0x1D81    ADDS	R1, R0, #6
0x1D74	0x20D4    MOVS	R0, #212
0x1D76	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 167 :: 		}
L_vRF4463Init61:
;driverrf4463pro.c, 169 :: 		app_command_buf[ 7 ] =  0x00;        // Sync word 1
0x1D78	0x4668    MOV	R0, SP
0x1D7A	0x1DC1    ADDS	R1, R0, #7
0x1D7C	0x2000    MOVS	R0, #0
0x1D7E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 170 :: 		app_command_buf[ 8 ] = 0x00;         // Sync word 0
0x1D80	0x4668    MOV	R0, SP
0x1D82	0x4601    MOV	R1, R0
0x1D84	0x3108    ADDS	R1, #8
0x1D86	0x2000    MOVS	R0, #0
0x1D88	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 171 :: 		spi_write( 9, app_command_buf );
0x1D8A	0x4668    MOV	R0, SP
0x1D8C	0xB401    PUSH	(R0)
0x1D8E	0x2009    MOVS	R0, #9
0x1D90	0xB401    PUSH	(R0)
0x1D92	0xF7FEFDAB  BL	_spi_write+0
0x1D96	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 174 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x1D98	0x4668    MOV	R0, SP
0x1D9A	0x1C01    ADDS	R1, R0, #0
0x1D9C	0x2011    MOVS	R0, #17
0x1D9E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 175 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1200
0x1DA0	0x4668    MOV	R0, SP
0x1DA2	0x1C41    ADDS	R1, R0, #1
0x1DA4	0x2012    MOVS	R0, #18
0x1DA6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 176 :: 		app_command_buf[ 2 ] = 0x01;        // Total 1 Parameters
0x1DA8	0x4668    MOV	R0, SP
0x1DAA	0x1C81    ADDS	R1, R0, #2
0x1DAC	0x2001    MOVS	R0, #1
0x1DAE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 177 :: 		app_command_buf[ 3 ] = 0x00;        // command = 0x1200
0x1DB0	0x4668    MOV	R0, SP
0x1DB2	0x1CC1    ADDS	R1, R0, #3
0x1DB4	0x2000    MOVS	R0, #0
0x1DB6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 178 :: 		app_command_buf[ 4 ] = 0x85;        // 1?cRC ??,CRC = itu-c, enable crc   ( original 0x81; )
0x1DB8	0x4668    MOV	R0, SP
0x1DBA	0x1D01    ADDS	R1, R0, #4
0x1DBC	0x2085    MOVS	R0, #133
0x1DBE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 179 :: 		spi_write( 5, app_command_buf );
0x1DC0	0x4668    MOV	R0, SP
0x1DC2	0xB401    PUSH	(R0)
0x1DC4	0x2005    MOVS	R0, #5
0x1DC6	0xB401    PUSH	(R0)
0x1DC8	0xF7FEFD90  BL	_spi_write+0
0x1DCC	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 182 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x1DCE	0x4668    MOV	R0, SP
0x1DD0	0x1C01    ADDS	R1, R0, #0
0x1DD2	0x2011    MOVS	R0, #17
0x1DD4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 183 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1206
0x1DD6	0x4668    MOV	R0, SP
0x1DD8	0x1C41    ADDS	R1, R0, #1
0x1DDA	0x2012    MOVS	R0, #18
0x1DDC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 184 :: 		app_command_buf[ 2 ] = 0x01;        // Total 1Parameters
0x1DDE	0x4668    MOV	R0, SP
0x1DE0	0x1C81    ADDS	R1, R0, #2
0x1DE2	0x2001    MOVS	R0, #1
0x1DE4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 185 :: 		app_command_buf[ 3 ] = 0x06;        // command = 0x1206
0x1DE6	0x4668    MOV	R0, SP
0x1DE8	0x1CC1    ADDS	R1, R0, #3
0x1DEA	0x2006    MOVS	R0, #6
0x1DEC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 186 :: 		app_command_buf[ 4 ] = 0x02;        //  tx = rx = 120d--1220 (tx packet,ph enable, not 4fsk, After receiving a packet of data,RX off,CRC Do not flip ,CRC MSB, data MSB
0x1DEE	0x4668    MOV	R0, SP
0x1DF0	0x1D01    ADDS	R1, R0, #4
0x1DF2	0x2002    MOVS	R0, #2
0x1DF4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 187 :: 		spi_write( 5, app_command_buf );
0x1DF6	0x4668    MOV	R0, SP
0x1DF8	0xB401    PUSH	(R0)
0x1DFA	0x2005    MOVS	R0, #5
0x1DFC	0xB401    PUSH	(R0)
0x1DFE	0xF7FEFD75  BL	_spi_write+0
0x1E02	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 190 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x1E04	0x4668    MOV	R0, SP
0x1E06	0x1C01    ADDS	R1, R0, #0
0x1E08	0x2011    MOVS	R0, #17
0x1E0A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 191 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1208
0x1E0C	0x4668    MOV	R0, SP
0x1E0E	0x1C41    ADDS	R1, R0, #1
0x1E10	0x2012    MOVS	R0, #18
0x1E12	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 192 :: 		app_command_buf[ 2 ] = 0x03;        // Total 3 Parameters
0x1E14	0x4668    MOV	R0, SP
0x1E16	0x1C81    ADDS	R1, R0, #2
0x1E18	0x2003    MOVS	R0, #3
0x1E1A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 193 :: 		app_command_buf[ 3 ] = 0x08;        // command = 0x1208
0x1E1C	0x4668    MOV	R0, SP
0x1E1E	0x1CC1    ADDS	R1, R0, #3
0x1E20	0x2008    MOVS	R0, #8
0x1E22	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 194 :: 		app_command_buf[ 4 ] = 0x00;        // Length Field = LSB,  length Only 1 byte,length Not put In FiFo, fixed packet length mode
0x1E24	0x4668    MOV	R0, SP
0x1E26	0x1D01    ADDS	R1, R0, #4
0x1E28	0x2000    MOVS	R0, #0
0x1E2A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 195 :: 		app_command_buf[ 5 ] = 0x00;        // Used for variable packet length mode, which defines which Field contains length Filed
0x1E2C	0x4668    MOV	R0, SP
0x1E2E	0x1D41    ADDS	R1, R0, #5
0x1E30	0x2000    MOVS	R0, #0
0x1E32	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 196 :: 		app_command_buf[ 6 ] = 0x00;        // Used for variable packet length mode, adjust the length of variable packet length
0x1E34	0x4668    MOV	R0, SP
0x1E36	0x1D81    ADDS	R1, R0, #6
0x1E38	0x2000    MOVS	R0, #0
0x1E3A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 197 :: 		spi_write( 7, app_command_buf );
0x1E3C	0x4668    MOV	R0, SP
0x1E3E	0xB401    PUSH	(R0)
0x1E40	0x2007    MOVS	R0, #7
0x1E42	0xB401    PUSH	(R0)
0x1E44	0xF7FEFD52  BL	_spi_write+0
0x1E48	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 200 :: 		app_command_buf[ 0 ]  = 0x11;
0x1E4A	0x4668    MOV	R0, SP
0x1E4C	0x1C01    ADDS	R1, R0, #0
0x1E4E	0x2011    MOVS	R0, #17
0x1E50	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 201 :: 		app_command_buf[ 1 ]  = 0x12;       // 0x120d
0x1E52	0x4668    MOV	R0, SP
0x1E54	0x1C41    ADDS	R1, R0, #1
0x1E56	0x2012    MOVS	R0, #18
0x1E58	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 202 :: 		app_command_buf[ 2 ]  = 0x0c;       // Total 12 Parameters
0x1E5A	0x4668    MOV	R0, SP
0x1E5C	0x1C81    ADDS	R1, R0, #2
0x1E5E	0x200C    MOVS	R0, #12
0x1E60	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 203 :: 		app_command_buf[ 3 ]  = 0x0d;       // 0x120d
0x1E62	0x4668    MOV	R0, SP
0x1E64	0x1CC1    ADDS	R1, R0, #3
0x1E66	0x200D    MOVS	R0, #13
0x1E68	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 204 :: 		app_command_buf[ 4 ]  = 0x00;       //  Field 1 length (?4?)
0x1E6A	0x4668    MOV	R0, SP
0x1E6C	0x1D01    ADDS	R1, R0, #4
0x1E6E	0x2000    MOVS	R0, #0
0x1E70	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 205 :: 		app_command_buf[ 5 ]  = payload_length;   //  field 1 length, (? 8?), ?Total14???
0x1E72	0x4668    MOV	R0, SP
0x1E74	0x1D41    ADDS	R1, R0, #5
0x1E76	0x2042    MOVS	R0, #66
0x1E78	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 206 :: 		app_command_buf[ 6 ]  = 0x04;       // field 1 Is not 4FSK,manchest, whiting, PN9,
0x1E7A	0x4668    MOV	R0, SP
0x1E7C	0x1D81    ADDS	R1, R0, #6
0x1E7E	0xE019    B	#50
0x1E80	0x004D2000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x1E84	0x10C62000  	_ucRF4463Rate+0
0x1E88	0x3D2B0000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+0
0x1E8C	0x005D2000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x1E90	0x3CA70000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+0
0x1E94	0x006D2000  	_RF_MODEM_AGC_WINDOW_SIZE_9_data+0
0x1E98	0x41780000  	_RF_MODEM_AGC_WINDOW_SIZE_9_850+0
0x1E9C	0x007A2000  	_RF_MODEM_BCR_OSR_1_9_data+0
0x1EA0	0x41DB0000  	_RF_MODEM_BCR_OSR_1_9_850+0
0x1EA4	0x00872000  	_RF_SYNTH_PFDCP_CPFF_7_data+0
0x1EA8	0x444E0000  	_RF_SYNTH_PFDCP_CPFF_7+0
0x1EAC	0x10C72000  	_ucRF4463Mode+0
0x1EB0	0x45250000  	_RF_FRR_CTL_A_MODE_4_data+0
0x1EB4	0x2004    MOVS	R0, #4
0x1EB6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 207 :: 		app_command_buf[ 7 ]  = 0xaa;       // field 1 crc enble, check enbale, There are also launchingCRC,cRC?Seed ?CRC_seed?????
0x1EB8	0x4668    MOV	R0, SP
0x1EBA	0x1DC1    ADDS	R1, R0, #7
0x1EBC	0x20AA    MOVS	R0, #170
0x1EBE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 208 :: 		app_command_buf[ 8 ]  = 0x00;       //  field 2 length(?4?)
0x1EC0	0x4668    MOV	R0, SP
0x1EC2	0x4601    MOV	R1, R0
0x1EC4	0x3108    ADDS	R1, #8
0x1EC6	0x2000    MOVS	R0, #0
0x1EC8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 209 :: 		app_command_buf[ 9 ]  = 0x00;           //  field 2 length, (? 8?), length = 0 Means thisfield did not use
0x1ECA	0x4668    MOV	R0, SP
0x1ECC	0x4601    MOV	R1, R0
0x1ECE	0x3109    ADDS	R1, #9
0x1ED0	0x2000    MOVS	R0, #0
0x1ED2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 210 :: 		app_command_buf[ 10 ] = 0x00;       // field 2 Is not 4FSK,manchest, whiting, PN9
0x1ED4	0x4668    MOV	R0, SP
0x1ED6	0x4601    MOV	R1, R0
0x1ED8	0x310A    ADDS	R1, #10
0x1EDA	0x2000    MOVS	R0, #0
0x1EDC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 211 :: 		app_command_buf[ 11 ] = 0x00;       //  field 2 ?CRCSet up
0x1EDE	0x4668    MOV	R0, SP
0x1EE0	0x4601    MOV	R1, R0
0x1EE2	0x310B    ADDS	R1, #11
0x1EE4	0x2000    MOVS	R0, #0
0x1EE6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 212 :: 		app_command_buf[ 12 ] = 0x00;       //  field 3 length, (? 8?), length = 0 Means thisfield did not use
0x1EE8	0x4668    MOV	R0, SP
0x1EEA	0x4601    MOV	R1, R0
0x1EEC	0x310C    ADDS	R1, #12
0x1EEE	0x2000    MOVS	R0, #0
0x1EF0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 213 :: 		app_command_buf[ 13 ] = 0x00;           //  field 3 length, (? 8?), length = 0 Means thisfield did not use
0x1EF2	0x4668    MOV	R0, SP
0x1EF4	0x4601    MOV	R1, R0
0x1EF6	0x310D    ADDS	R1, #13
0x1EF8	0x2000    MOVS	R0, #0
0x1EFA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 214 :: 		app_command_buf[ 14 ] = 0x00;       //  field 3 Is not 4FSK,manchest, whiting, PN9
0x1EFC	0x4668    MOV	R0, SP
0x1EFE	0x4601    MOV	R1, R0
0x1F00	0x310E    ADDS	R1, #14
0x1F02	0x2000    MOVS	R0, #0
0x1F04	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 215 :: 		app_command_buf[ 15 ] = 0x00;       //  field 3 ?CRCSet up
0x1F06	0x4668    MOV	R0, SP
0x1F08	0x4601    MOV	R1, R0
0x1F0A	0x310F    ADDS	R1, #15
0x1F0C	0x2000    MOVS	R0, #0
0x1F0E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 216 :: 		spi_write( 16, app_command_buf );
0x1F10	0x4668    MOV	R0, SP
0x1F12	0xB401    PUSH	(R0)
0x1F14	0x2010    MOVS	R0, #16
0x1F16	0xB401    PUSH	(R0)
0x1F18	0xF7FEFCE8  BL	_spi_write+0
0x1F1C	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 219 :: 		app_command_buf[ 0 ]  = 0x11;
0x1F1E	0x4668    MOV	R0, SP
0x1F20	0x1C01    ADDS	R1, R0, #0
0x1F22	0x2011    MOVS	R0, #17
0x1F24	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 220 :: 		app_command_buf[ 1 ]  = 0x12;       // 0x1219
0x1F26	0x4668    MOV	R0, SP
0x1F28	0x1C41    ADDS	R1, R0, #1
0x1F2A	0x2012    MOVS	R0, #18
0x1F2C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 221 :: 		app_command_buf[ 2 ]  = 0x08;       // Total 8Parameters
0x1F2E	0x4668    MOV	R0, SP
0x1F30	0x1C81    ADDS	R1, R0, #2
0x1F32	0x2008    MOVS	R0, #8
0x1F34	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 222 :: 		app_command_buf[ 3 ]  = 0x19;       // 0x1219
0x1F36	0x4668    MOV	R0, SP
0x1F38	0x1CC1    ADDS	R1, R0, #3
0x1F3A	0x2019    MOVS	R0, #25
0x1F3C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 223 :: 		app_command_buf[ 4 ]  = 0x00;       // field4 length(?4?)
0x1F3E	0x4668    MOV	R0, SP
0x1F40	0x1D01    ADDS	R1, R0, #4
0x1F42	0x2000    MOVS	R0, #0
0x1F44	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 224 :: 		app_command_buf[ 5 ]  = 0x00;       // field 4 length, (? 8?), length = 0 Means this field did not use
0x1F46	0x4668    MOV	R0, SP
0x1F48	0x1D41    ADDS	R1, R0, #5
0x1F4A	0x2000    MOVS	R0, #0
0x1F4C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 225 :: 		app_command_buf[ 6 ]  = 0x00;       // field 4 Is not 4FSK,manchest, whiting, PN9
0x1F4E	0x4668    MOV	R0, SP
0x1F50	0x1D81    ADDS	R1, R0, #6
0x1F52	0x2000    MOVS	R0, #0
0x1F54	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 226 :: 		app_command_buf[ 7 ]  = 0x00;       // field 4 ?CRCSet up
0x1F56	0x4668    MOV	R0, SP
0x1F58	0x1DC1    ADDS	R1, R0, #7
0x1F5A	0x2000    MOVS	R0, #0
0x1F5C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 227 :: 		app_command_buf[ 8 ]  = 0x00;       // field5 length(?4?)
0x1F5E	0x4668    MOV	R0, SP
0x1F60	0x4601    MOV	R1, R0
0x1F62	0x3108    ADDS	R1, #8
0x1F64	0x2000    MOVS	R0, #0
0x1F66	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 228 :: 		app_command_buf[ 9 ]  = 0x00;       // field 5 length, (? 8?), length = 0 Means this field did not use
0x1F68	0x4668    MOV	R0, SP
0x1F6A	0x4601    MOV	R1, R0
0x1F6C	0x3109    ADDS	R1, #9
0x1F6E	0x2000    MOVS	R0, #0
0x1F70	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 229 :: 		app_command_buf[ 10 ] = 0x00;       // field 5 Is not 4FSK,manchest, whiting, PN9
0x1F72	0x4668    MOV	R0, SP
0x1F74	0x4601    MOV	R1, R0
0x1F76	0x310A    ADDS	R1, #10
0x1F78	0x2000    MOVS	R0, #0
0x1F7A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 230 :: 		app_command_buf[ 11 ] = 0x00;       // field 5 ?CRCSet up
0x1F7C	0x4668    MOV	R0, SP
0x1F7E	0x4601    MOV	R1, R0
0x1F80	0x310B    ADDS	R1, #11
0x1F82	0x2000    MOVS	R0, #0
0x1F84	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 231 :: 		spi_write( 12, app_command_buf );
0x1F86	0x4668    MOV	R0, SP
0x1F88	0xB401    PUSH	(R0)
0x1F8A	0x200C    MOVS	R0, #12
0x1F8C	0xB401    PUSH	(R0)
0x1F8E	0xF7FEFCAD  BL	_spi_write+0
0x1F92	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 234 :: 		spi_write( 0x10, RF_MODEM_MOD_TYPE_12_data );   // //  2FSK ,  module source = PH fifo, disable manchest, tx, rx Do not flip, deviation Do not flip
0x1F94	0x48B2    LDR	R0, [PC, #712]
0x1F96	0xB401    PUSH	(R0)
0x1F98	0x2010    MOVS	R0, #16
0x1F9A	0xB401    PUSH	(R0)
0x1F9C	0xF7FEFCA6  BL	_spi_write+0
0x1FA0	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 237 :: 		app_command_buf[0] = 0x11;
0x1FA2	0x4668    MOV	R0, SP
0x1FA4	0x1C01    ADDS	R1, R0, #0
0x1FA6	0x2011    MOVS	R0, #17
0x1FA8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 238 :: 		app_command_buf[1]  = 0x20;    // 0x200c
0x1FAA	0x4668    MOV	R0, SP
0x1FAC	0x1C41    ADDS	R1, R0, #1
0x1FAE	0x2020    MOVS	R0, #32
0x1FB0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 239 :: 		app_command_buf[2]  = 0x01;    // Total 1Parameters
0x1FB2	0x4668    MOV	R0, SP
0x1FB4	0x1C81    ADDS	R1, R0, #2
0x1FB6	0x2001    MOVS	R0, #1
0x1FB8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 240 :: 		app_command_buf[3]  = 0x0c;   // 0x200c
0x1FBA	0x4668    MOV	R0, SP
0x1FBC	0x1CC1    ADDS	R1, R0, #3
0x1FBE	0x200C    MOVS	R0, #12
0x1FC0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 242 :: 		if ( ucRF4463Freq3 < 8 ) {
0x1FC2	0x48A8    LDR	R0, [PC, #672]
0x1FC4	0x7800    LDRB	R0, [R0, #0]
0x1FC6	0x2808    CMP	R0, #8
0x1FC8	0xD216    BCS	L_vRF4463Init62
;driverrf4463pro.c, 243 :: 		if ( ucRF4463Rate >= dr_256k ) {
0x1FCA	0x48A7    LDR	R0, [PC, #668]
0x1FCC	0x7800    LDRB	R0, [R0, #0]
0x1FCE	0x2808    CMP	R0, #8
0x1FD0	0xD304    BCC	L_vRF4463Init63
;driverrf4463pro.c, 244 :: 		app_command_buf[ 4 ] = 0x4f;
0x1FD2	0x4668    MOV	R0, SP
0x1FD4	0x1D01    ADDS	R1, R0, #4
0x1FD6	0x204F    MOVS	R0, #79
0x1FD8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 245 :: 		}
0x1FDA	0xE00C    B	L_vRF4463Init64
L_vRF4463Init63:
;driverrf4463pro.c, 246 :: 		else if ( ucRF4463Rate >= dr_19p2 ) {
0x1FDC	0x48A2    LDR	R0, [PC, #648]
0x1FDE	0x7800    LDRB	R0, [R0, #0]
0x1FE0	0x2804    CMP	R0, #4
0x1FE2	0xD304    BCC	L_vRF4463Init65
;driverrf4463pro.c, 247 :: 		app_command_buf[ 4 ]  = 0x5e;
0x1FE4	0x4668    MOV	R0, SP
0x1FE6	0x1D01    ADDS	R1, R0, #4
0x1FE8	0x205E    MOVS	R0, #94
0x1FEA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 248 :: 		}
0x1FEC	0xE003    B	L_vRF4463Init66
L_vRF4463Init65:
;driverrf4463pro.c, 250 :: 		app_command_buf[ 4 ]  = 0xd2;
0x1FEE	0x4668    MOV	R0, SP
0x1FF0	0x1D01    ADDS	R1, R0, #4
0x1FF2	0x20D2    MOVS	R0, #210
0x1FF4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 251 :: 		}
L_vRF4463Init66:
L_vRF4463Init64:
;driverrf4463pro.c, 252 :: 		}
0x1FF6	0xE015    B	L_vRF4463Init67
L_vRF4463Init62:
;driverrf4463pro.c, 254 :: 		if ( ucRF4463Rate >= dr_115p2 ) {
0x1FF8	0x489B    LDR	R0, [PC, #620]
0x1FFA	0x7800    LDRB	R0, [R0, #0]
0x1FFC	0x2807    CMP	R0, #7
0x1FFE	0xD304    BCC	L_vRF4463Init68
;driverrf4463pro.c, 255 :: 		app_command_buf[ 4 ]  = 0x69;        // 15k
0x2000	0x4668    MOV	R0, SP
0x2002	0x1D01    ADDS	R1, R0, #4
0x2004	0x2069    MOVS	R0, #105
0x2006	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 256 :: 		}
0x2008	0xE00C    B	L_vRF4463Init69
L_vRF4463Init68:
;driverrf4463pro.c, 257 :: 		else if ( ucRF4463Rate >= dr_19p2 ) {
0x200A	0x4897    LDR	R0, [PC, #604]
0x200C	0x7800    LDRB	R0, [R0, #0]
0x200E	0x2804    CMP	R0, #4
0x2010	0xD304    BCC	L_vRF4463Init70
;driverrf4463pro.c, 258 :: 		app_command_buf[ 4 ]  = 0x5e;        // 10k
0x2012	0x4668    MOV	R0, SP
0x2014	0x1D01    ADDS	R1, R0, #4
0x2016	0x205E    MOVS	R0, #94
0x2018	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 259 :: 		}
0x201A	0xE003    B	L_vRF4463Init71
L_vRF4463Init70:
;driverrf4463pro.c, 261 :: 		app_command_buf[ 4 ]  = 0x18; // 8k
0x201C	0x4668    MOV	R0, SP
0x201E	0x1D01    ADDS	R1, R0, #4
0x2020	0x2018    MOVS	R0, #24
0x2022	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 262 :: 		}
L_vRF4463Init71:
L_vRF4463Init69:
;driverrf4463pro.c, 263 :: 		}
L_vRF4463Init67:
;driverrf4463pro.c, 264 :: 		spi_write( 5, app_command_buf );
0x2024	0x4668    MOV	R0, SP
0x2026	0xB401    PUSH	(R0)
0x2028	0x2005    MOVS	R0, #5
0x202A	0xB401    PUSH	(R0)
0x202C	0xF7FEFC5E  BL	_spi_write+0
0x2030	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 267 :: 		spi_write( 0x0C, RF_MODEM_TX_RAMP_DELAY_8_data );            // Without this Parameters,Not needed
0x2032	0x488E    LDR	R0, [PC, #568]
0x2034	0xB401    PUSH	(R0)
0x2036	0x200C    MOVS	R0, #12
0x2038	0xB401    PUSH	(R0)
0x203A	0xF7FEFC57  BL	_spi_write+0
0x203E	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 268 :: 		spi_write( 0x0D, RF_MODEM_BCR_OSR_1_9_data );                // Without this Parameters,Not needed
0x2040	0x488B    LDR	R0, [PC, #556]
0x2042	0xB401    PUSH	(R0)
0x2044	0x200D    MOVS	R0, #13
0x2046	0xB401    PUSH	(R0)
0x2048	0xF7FEFC50  BL	_spi_write+0
0x204C	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 269 :: 		spi_write( 0x0B, RF_MODEM_AFC_GEAR_7_data );                // Without this Parameters,Not needed
0x204E	0x4889    LDR	R0, [PC, #548]
0x2050	0xB401    PUSH	(R0)
0x2052	0x200B    MOVS	R0, #11
0x2054	0xB401    PUSH	(R0)
0x2056	0xF7FEFC49  BL	_spi_write+0
0x205A	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 270 :: 		spi_write( 0x05, RF_MODEM_AGC_CONTROL_1_data );                // Without this Parameters,Not needed
0x205C	0x4886    LDR	R0, [PC, #536]
0x205E	0xB401    PUSH	(R0)
0x2060	0x2005    MOVS	R0, #5
0x2062	0xB401    PUSH	(R0)
0x2064	0xF7FEFC42  BL	_spi_write+0
0x2068	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 271 :: 		spi_write( 0x0D, RF_MODEM_AGC_WINDOW_SIZE_9_data );        // Without this Parameters,Not needed
0x206A	0x4884    LDR	R0, [PC, #528]
0x206C	0xB401    PUSH	(R0)
0x206E	0x200D    MOVS	R0, #13
0x2070	0xB401    PUSH	(R0)
0x2072	0xF7FEFC3B  BL	_spi_write+0
0x2076	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 272 :: 		spi_write( 0x0F, RF_MODEM_OOK_CNT1_11_data );                // Without this Parameters,Not needed
0x2078	0x4881    LDR	R0, [PC, #516]
0x207A	0xB401    PUSH	(R0)
0x207C	0x200F    MOVS	R0, #15
0x207E	0xB401    PUSH	(R0)
0x2080	0xF7FEFC34  BL	_spi_write+0
0x2084	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 275 :: 		app_command_buf[ 0 ] = 0x11;
0x2086	0x4668    MOV	R0, SP
0x2088	0x1C01    ADDS	R1, R0, #0
0x208A	0x2011    MOVS	R0, #17
0x208C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 276 :: 		app_command_buf[ 1 ] = 0x20;    // 0x204e
0x208E	0x4668    MOV	R0, SP
0x2090	0x1C41    ADDS	R1, R0, #1
0x2092	0x2020    MOVS	R0, #32
0x2094	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 277 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1Parameters
0x2096	0x4668    MOV	R0, SP
0x2098	0x1C81    ADDS	R1, R0, #2
0x209A	0x2001    MOVS	R0, #1
0x209C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 278 :: 		app_command_buf[ 3 ] = 0x4e;   // 0x204e
0x209E	0x4668    MOV	R0, SP
0x20A0	0x1CC1    ADDS	R1, R0, #3
0x20A2	0x204E    MOVS	R0, #78
0x20A4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 280 :: 		if ( ucRF4463Rate == dr_500 ) {
0x20A6	0x4870    LDR	R0, [PC, #448]
0x20A8	0x7800    LDRB	R0, [R0, #0]
0x20AA	0x280A    CMP	R0, #10
0x20AC	0xD104    BNE	L_vRF4463Init72
;driverrf4463pro.c, 281 :: 		app_command_buf[ 4 ] = 0x3a;
0x20AE	0x4668    MOV	R0, SP
0x20B0	0x1D01    ADDS	R1, R0, #4
0x20B2	0x203A    MOVS	R0, #58
0x20B4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 282 :: 		}
0x20B6	0xE003    B	L_vRF4463Init73
L_vRF4463Init72:
;driverrf4463pro.c, 284 :: 		app_command_buf[ 4 ] = 0x40;  //  rssi Reading deviation, the difference with the true value
0x20B8	0x4668    MOV	R0, SP
0x20BA	0x1D01    ADDS	R1, R0, #4
0x20BC	0x2040    MOVS	R0, #64
0x20BE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 285 :: 		}
L_vRF4463Init73:
;driverrf4463pro.c, 286 :: 		spi_write( 5, app_command_buf );
0x20C0	0x4668    MOV	R0, SP
0x20C2	0xB401    PUSH	(R0)
0x20C4	0x2005    MOVS	R0, #5
0x20C6	0xB401    PUSH	(R0)
0x20C8	0xF7FEFC10  BL	_spi_write+0
0x20CC	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 289 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data );  // Without this Parameters,Not needed
0x20CE	0x486D    LDR	R0, [PC, #436]
0x20D0	0xB401    PUSH	(R0)
0x20D2	0x2010    MOVS	R0, #16
0x20D4	0xB401    PUSH	(R0)
0x20D6	0xF7FEFC09  BL	_spi_write+0
0x20DA	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 290 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data );   // Without this Parameters,Not needed
0x20DC	0x486A    LDR	R0, [PC, #424]
0x20DE	0xB401    PUSH	(R0)
0x20E0	0x2010    MOVS	R0, #16
0x20E2	0xB401    PUSH	(R0)
0x20E4	0xF7FEFC02  BL	_spi_write+0
0x20E8	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 291 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data );   // Without this Parameters,Not needed
0x20EA	0x4868    LDR	R0, [PC, #416]
0x20EC	0xB401    PUSH	(R0)
0x20EE	0x2010    MOVS	R0, #16
0x20F0	0xB401    PUSH	(R0)
0x20F2	0xF7FEFBFB  BL	_spi_write+0
0x20F6	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 294 :: 		app_command_buf[ 0 ]  = 0x11;
0x20F8	0x4668    MOV	R0, SP
0x20FA	0x1C01    ADDS	R1, R0, #0
0x20FC	0x2011    MOVS	R0, #17
0x20FE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 295 :: 		app_command_buf[ 1 ]  = 0x22;    // 0x2200
0x2100	0x4668    MOV	R0, SP
0x2102	0x1C41    ADDS	R1, R0, #1
0x2104	0x2022    MOVS	R0, #34
0x2106	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 296 :: 		app_command_buf[ 2 ]  = 0x04;    // Total 4Parameters
0x2108	0x4668    MOV	R0, SP
0x210A	0x1C81    ADDS	R1, R0, #2
0x210C	0x2004    MOVS	R0, #4
0x210E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 297 :: 		app_command_buf[ 3 ]  = 0x00;   // 0x2200
0x2110	0x4668    MOV	R0, SP
0x2112	0x1CC1    ADDS	R1, R0, #3
0x2114	0x2000    MOVS	R0, #0
0x2116	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 298 :: 		app_command_buf[ 4 ]  = 0x08;  //0x10;   //   PA mode  = default , ??Class E mode,?Is not Switch Current mode  ????????
0x2118	0x4668    MOV	R0, SP
0x211A	0x1D01    ADDS	R1, R0, #4
0x211C	0x2008    MOVS	R0, #8
0x211E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 300 :: 		if ( ucRF4463Power > 0 || ucRF4463Power < 127 ) {
0x2120	0x485B    LDR	R0, [PC, #364]
0x2122	0x7800    LDRB	R0, [R0, #0]
0x2124	0x2800    CMP	R0, #0
0x2126	0xD804    BHI	L__vRF4463Init362
0x2128	0x4859    LDR	R0, [PC, #356]
0x212A	0x7800    LDRB	R0, [R0, #0]
0x212C	0x287F    CMP	R0, #127
0x212E	0xD300    BCC	L__vRF4463Init362
0x2130	0xE005    B	L_vRF4463Init76
L__vRF4463Init362:
;driverrf4463pro.c, 301 :: 		app_command_buf[ 5 ]  = ucRF4463Power;   //  Set to maximum power
0x2132	0x4668    MOV	R0, SP
0x2134	0x1D41    ADDS	R1, R0, #5
0x2136	0x4856    LDR	R0, [PC, #344]
0x2138	0x7800    LDRB	R0, [R0, #0]
0x213A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 302 :: 		}
0x213C	0xE003    B	L_vRF4463Init77
L_vRF4463Init76:
;driverrf4463pro.c, 304 :: 		app_command_buf[ 5 ]  = 127;
0x213E	0x4668    MOV	R0, SP
0x2140	0x1D41    ADDS	R1, R0, #5
0x2142	0x207F    MOVS	R0, #127
0x2144	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 305 :: 		}
L_vRF4463Init77:
;driverrf4463pro.c, 307 :: 		app_command_buf[ 6 ] = 0x00; //???????? 0x00;   // CLK duty = 50%, other = Default
0x2146	0x4668    MOV	R0, SP
0x2148	0x1D81    ADDS	R1, R0, #6
0x214A	0x2000    MOVS	R0, #0
0x214C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 309 :: 		if ( ( ucRF4463Rate <= dr_115p2 )||( ucRF4463Rate == dr_500 ) ) {
0x214E	0x4846    LDR	R0, [PC, #280]
0x2150	0x7800    LDRB	R0, [R0, #0]
0x2152	0x2807    CMP	R0, #7
0x2154	0xD904    BLS	L__vRF4463Init361
0x2156	0x4844    LDR	R0, [PC, #272]
0x2158	0x7800    LDRB	R0, [R0, #0]
0x215A	0x280A    CMP	R0, #10
0x215C	0xD000    BEQ	L__vRF4463Init361
0x215E	0xE004    B	L_vRF4463Init80
L__vRF4463Init361:
;driverrf4463pro.c, 310 :: 		app_command_buf[ 7 ]  = 0x3d;  // ???????? 0x5d;   // PA ramp time = default
0x2160	0x4668    MOV	R0, SP
0x2162	0x1DC1    ADDS	R1, R0, #7
0x2164	0x203D    MOVS	R0, #61
0x2166	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 311 :: 		}
0x2168	0xE003    B	L_vRF4463Init81
L_vRF4463Init80:
;driverrf4463pro.c, 313 :: 		app_command_buf[ 7 ]  = 0x5d;
0x216A	0x4668    MOV	R0, SP
0x216C	0x1DC1    ADDS	R1, R0, #7
0x216E	0x205D    MOVS	R0, #93
0x2170	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 314 :: 		}
L_vRF4463Init81:
;driverrf4463pro.c, 315 :: 		spi_write( 8, app_command_buf );
0x2172	0x4668    MOV	R0, SP
0x2174	0xB401    PUSH	(R0)
0x2176	0x2008    MOVS	R0, #8
0x2178	0xB401    PUSH	(R0)
0x217A	0xF7FEFBB7  BL	_spi_write+0
0x217E	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 319 :: 		spi_write( 0x0B , RF_SYNTH_PFDCP_CPFF_7_data );      // Without this Parameters,Not needed
0x2180	0x4844    LDR	R0, [PC, #272]
0x2182	0xB401    PUSH	(R0)
0x2184	0x200B    MOVS	R0, #11
0x2186	0xB401    PUSH	(R0)
0x2188	0xF7FEFBB0  BL	_spi_write+0
0x218C	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 322 :: 		if ( ucRF4463MatchEnabled ) {
0x218E	0x4842    LDR	R0, [PC, #264]
0x2190	0x7800    LDRB	R0, [R0, #0]
0x2192	0x2800    CMP	R0, #0
0x2194	0xD100    BNE	#0
0x2196	0xE05E    B	L_vRF4463Init82
;driverrf4463pro.c, 323 :: 		app_command_buf[ 0 ]  = 0x11;               // SetProperty
0x2198	0x4668    MOV	R0, SP
0x219A	0x1C01    ADDS	R1, R0, #0
0x219C	0x2011    MOVS	R0, #17
0x219E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 324 :: 		app_command_buf[ 1 ]  = 0x30;               // 0x30 group
0x21A0	0x4668    MOV	R0, SP
0x21A2	0x1C41    ADDS	R1, R0, #1
0x21A4	0x2030    MOVS	R0, #48
0x21A6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 325 :: 		app_command_buf[ 2 ]  = 0x0c;               // Total 12 Parameters
0x21A8	0x4668    MOV	R0, SP
0x21AA	0x1C81    ADDS	R1, R0, #2
0x21AC	0x200C    MOVS	R0, #12
0x21AE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 326 :: 		app_command_buf[ 3 ]  = 0x00;               // 0x00 Index
0x21B0	0x4668    MOV	R0, SP
0x21B2	0x1CC1    ADDS	R1, R0, #3
0x21B4	0x2000    MOVS	R0, #0
0x21B6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 327 :: 		app_command_buf[ 4 ]  = ucRF4463ByteMatch1; // match 1 Value of
0x21B8	0x4668    MOV	R0, SP
0x21BA	0x1D01    ADDS	R1, R0, #4
0x21BC	0x4837    LDR	R0, [PC, #220]
0x21BE	0x7800    LDRB	R0, [R0, #0]
0x21C0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 328 :: 		app_command_buf[ 5 ]  = ucRF4463ByteMask1;  // match 1 mask
0x21C2	0x4668    MOV	R0, SP
0x21C4	0x1D41    ADDS	R1, R0, #5
0x21C6	0x4836    LDR	R0, [PC, #216]
0x21C8	0x7800    LDRB	R0, [R0, #0]
0x21CA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 329 :: 		app_command_buf[ 6 ]  = ucRF4463MatchEnableReg; //  0x40; // enable match 1, match 1 The distance between the value of and the synchronization word, 0 = match
0x21CC	0x4668    MOV	R0, SP
0x21CE	0x1D81    ADDS	R1, R0, #6
0x21D0	0x4834    LDR	R0, [PC, #208]
0x21D2	0x7800    LDRB	R0, [R0, #0]
0x21D4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 330 :: 		app_command_buf[ 7 ]  = ucRF4463ByteMatch2; // match 2 Value of
0x21D6	0x4668    MOV	R0, SP
0x21D8	0x1DC1    ADDS	R1, R0, #7
0x21DA	0x4833    LDR	R0, [PC, #204]
0x21DC	0x7800    LDRB	R0, [R0, #0]
0x21DE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 331 :: 		app_command_buf[ 8 ]  = ucRF4463ByteMask2;  // match 2 mask
0x21E0	0x4668    MOV	R0, SP
0x21E2	0x4601    MOV	R1, R0
0x21E4	0x3108    ADDS	R1, #8
0x21E6	0x4831    LDR	R0, [PC, #196]
0x21E8	0x7800    LDRB	R0, [R0, #0]
0x21EA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 332 :: 		app_command_buf[ 9 ]  = 0x01;               // enable match 2, match 2 The distance between the value of and the synchronization word  , and function
0x21EC	0x4668    MOV	R0, SP
0x21EE	0x4601    MOV	R1, R0
0x21F0	0x3109    ADDS	R1, #9
0x21F2	0x2001    MOVS	R0, #1
0x21F4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 333 :: 		app_command_buf[ 10 ] = ucRF4463ByteMatch3; // match 3 Value of
0x21F6	0x4668    MOV	R0, SP
0x21F8	0x4601    MOV	R1, R0
0x21FA	0x310A    ADDS	R1, #10
0x21FC	0x482C    LDR	R0, [PC, #176]
0x21FE	0x7800    LDRB	R0, [R0, #0]
0x2200	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 334 :: 		app_command_buf[ 11 ] = ucRF4463ByteMask3;  // match 3 mask
0x2202	0x4668    MOV	R0, SP
0x2204	0x4601    MOV	R1, R0
0x2206	0x310B    ADDS	R1, #11
0x2208	0x482A    LDR	R0, [PC, #168]
0x220A	0x7800    LDRB	R0, [R0, #0]
0x220C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 335 :: 		app_command_buf[ 12 ] = 0x02;;              // enable match 3, match 3 The distance between the value of and the synchronization word    and function
0x220E	0x4668    MOV	R0, SP
0x2210	0x4601    MOV	R1, R0
0x2212	0x310C    ADDS	R1, #12
0x2214	0x2002    MOVS	R0, #2
0x2216	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 336 :: 		app_command_buf[ 13 ] = ucRF4463ByteMatch4; // match 4 Value of
0x2218	0x4668    MOV	R0, SP
0x221A	0x4601    MOV	R1, R0
0x221C	0x310D    ADDS	R1, #13
0x221E	0x4826    LDR	R0, [PC, #152]
0x2220	0x7800    LDRB	R0, [R0, #0]
0x2222	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 337 :: 		app_command_buf[ 14 ] = ucRF4463ByteMask4;  // match 4 mask
0x2224	0x4668    MOV	R0, SP
0x2226	0x4601    MOV	R1, R0
0x2228	0x310E    ADDS	R1, #14
0x222A	0x4824    LDR	R0, [PC, #144]
0x222C	0x7800    LDRB	R0, [R0, #0]
0x222E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 338 :: 		app_command_buf[ 15 ] = 0x03;               // enable match 4, match 4 The distance between the value of and the synchronization word    and function
0x2230	0x4668    MOV	R0, SP
0x2232	0x4601    MOV	R1, R0
0x2234	0x310F    ADDS	R1, #15
0x2236	0x2003    MOVS	R0, #3
0x2238	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 339 :: 		spi_write( 16, app_command_buf );
0x223A	0x4668    MOV	R0, SP
0x223C	0xB401    PUSH	(R0)
0x223E	0x2010    MOVS	R0, #16
0x2240	0xB401    PUSH	(R0)
0x2242	0xF7FEFB53  BL	_spi_write+0
0x2246	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 341 :: 		if ( ucRF4463MatchEnableReg == 0x00 ) {
0x2248	0x4816    LDR	R0, [PC, #88]
0x224A	0x7800    LDRB	R0, [R0, #0]
0x224C	0x2800    CMP	R0, #0
0x224E	0xD102    BNE	L_vRF4463Init83
;driverrf4463pro.c, 342 :: 		ucRF4463MatchEnabled = 0;                // deshabilita el Match
0x2250	0x2100    MOVS	R1, #0
0x2252	0x4811    LDR	R0, [PC, #68]
0x2254	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 343 :: 		}
L_vRF4463Init83:
;driverrf4463pro.c, 362 :: 		}
L_vRF4463Init82:
;driverrf4463pro.c, 365 :: 		rf_init_freq();     // FUNCION DE FRECUENCIA ( REVISAR PARAMETROS )
0x2256	0xF7FEFC39  BL	_rf_init_freq+0
;driverrf4463pro.c, 366 :: 		}
L_end_vRF4463Init:
0x225A	0xB006    ADD	SP, SP, #24
0x225C	0xBD00    POP	(R15)
0x225E	0xBF00    NOP
0x2260	0x00052000  	_RF_MODEM_MOD_TYPE_12_data+0
0x2264	0x009F2000  	_ucRF4463Freq3+0
0x2268	0x10C62000  	_ucRF4463Rate+0
0x226C	0x00152000  	_RF_MODEM_TX_RAMP_DELAY_8_data+0
0x2270	0x007A2000  	_RF_MODEM_BCR_OSR_1_9_data+0
0x2274	0x00212000  	_RF_MODEM_AFC_GEAR_7_data+0
0x2278	0x453C0000  	_RF_MODEM_AGC_CONTROL_1_data+0
0x227C	0x006D2000  	_RF_MODEM_AGC_WINDOW_SIZE_9_data+0
0x2280	0x002E2000  	_RF_MODEM_OOK_CNT1_11_data+0
0x2284	0x003D2000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+0
0x2288	0x004D2000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x228C	0x005D2000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x2290	0x10C82000  	_ucRF4463Power+0
0x2294	0x00872000  	_RF_SYNTH_PFDCP_CPFF_7_data+0
0x2298	0x00922000  	_ucRF4463MatchEnabled+0
0x229C	0x00932000  	_ucRF4463ByteMatch1+0
0x22A0	0x00942000  	_ucRF4463ByteMask1+0
0x22A4	0x00952000  	_ucRF4463MatchEnableReg+0
0x22A8	0x00962000  	_ucRF4463ByteMatch2+0
0x22AC	0x00972000  	_ucRF4463ByteMask2+0
0x22B0	0x00982000  	_ucRF4463ByteMatch3+0
0x22B4	0x00992000  	_ucRF4463ByteMask3+0
0x22B8	0x009A2000  	_ucRF4463ByteMatch4+0
0x22BC	0x009B2000  	_ucRF4463ByteMask4+0
; end of _vRF4463Init
_vRF4463GPIO_SET:
;driverrf4463pro.c, 372 :: 		void vRF4463GPIO_SET( unsigned char ucData ) {
0x0760	0xB500    PUSH	(R14)
0x0762	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 375 :: 		ucAppCommandBuf[0] = 0x13;     // gpio Set up
0x0764	0x4668    MOV	R0, SP
0x0766	0x1C01    ADDS	R1, R0, #0
0x0768	0x2013    MOVS	R0, #19
0x076A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 377 :: 		switch ( ucData ) {
0x076C	0xE023    B	L_vRF4463GPIO_SET84
;driverrf4463pro.c, 378 :: 		case tx_normal:
L_vRF4463GPIO_SET86:
;driverrf4463pro.c, 379 :: 		case rx_normal: ucAppCommandBuf[ 1 ] = 3;                 // GPIO0=1
L_vRF4463GPIO_SET87:
0x076E	0x4668    MOV	R0, SP
0x0770	0x1C41    ADDS	R1, R0, #1
0x0772	0x2003    MOVS	R0, #3
0x0774	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 380 :: 		ucAppCommandBuf[ 2 ] = 2;                // GPIO1=0
0x0776	0x4668    MOV	R0, SP
0x0778	0x1C81    ADDS	R1, R0, #2
0x077A	0x2002    MOVS	R0, #2
0x077C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 381 :: 		break;
0x077E	0xE02E    B	L_vRF4463GPIO_SET85
;driverrf4463pro.c, 383 :: 		case tx_test:   ucAppCommandBuf[ 1 ] = 3;                 // GPIO0=1
L_vRF4463GPIO_SET88:
0x0780	0x4668    MOV	R0, SP
0x0782	0x1C41    ADDS	R1, R0, #1
0x0784	0x2003    MOVS	R0, #3
0x0786	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 384 :: 		ucAppCommandBuf[ 2 ] = 3;                // GPIO1=1
0x0788	0x4668    MOV	R0, SP
0x078A	0x1C81    ADDS	R1, R0, #2
0x078C	0x2003    MOVS	R0, #3
0x078E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 385 :: 		break;
0x0790	0xE025    B	L_vRF4463GPIO_SET85
;driverrf4463pro.c, 387 :: 		case rx_test:   ucAppCommandBuf[ 1 ] = 2;                 // GPIO0=0
L_vRF4463GPIO_SET89:
0x0792	0x4668    MOV	R0, SP
0x0794	0x1C41    ADDS	R1, R0, #1
0x0796	0x2002    MOVS	R0, #2
0x0798	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 388 :: 		ucAppCommandBuf[ 2 ] = 20;                // GPIO1=RX DATA
0x079A	0x4668    MOV	R0, SP
0x079C	0x1C81    ADDS	R1, R0, #2
0x079E	0x2014    MOVS	R0, #20
0x07A0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 389 :: 		break;
0x07A2	0xE01C    B	L_vRF4463GPIO_SET85
;driverrf4463pro.c, 391 :: 		case rf_off:    ucAppCommandBuf[ 1 ] = 2;                 // GPIO0=0
L_vRF4463GPIO_SET90:
0x07A4	0x4668    MOV	R0, SP
0x07A6	0x1C41    ADDS	R1, R0, #1
0x07A8	0x2002    MOVS	R0, #2
0x07AA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 392 :: 		ucAppCommandBuf[ 2 ] = 2;                // GPIO1=0
0x07AC	0x4668    MOV	R0, SP
0x07AE	0x1C81    ADDS	R1, R0, #2
0x07B0	0x2002    MOVS	R0, #2
0x07B2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 393 :: 		break;
0x07B4	0xE013    B	L_vRF4463GPIO_SET85
;driverrf4463pro.c, 394 :: 		}
L_vRF4463GPIO_SET84:
0x07B6	0x9803    LDR	R0, [SP, #12]
0x07B8	0xB2C0    UXTB	R0, R0
0x07BA	0x2800    CMP	R0, #0
0x07BC	0xD0D7    BEQ	L_vRF4463GPIO_SET86
0x07BE	0x9803    LDR	R0, [SP, #12]
0x07C0	0xB2C0    UXTB	R0, R0
0x07C2	0x2801    CMP	R0, #1
0x07C4	0xD0D3    BEQ	L_vRF4463GPIO_SET87
0x07C6	0x9803    LDR	R0, [SP, #12]
0x07C8	0xB2C0    UXTB	R0, R0
0x07CA	0x2802    CMP	R0, #2
0x07CC	0xD0D8    BEQ	L_vRF4463GPIO_SET88
0x07CE	0x9803    LDR	R0, [SP, #12]
0x07D0	0xB2C0    UXTB	R0, R0
0x07D2	0x2803    CMP	R0, #3
0x07D4	0xD0DD    BEQ	L_vRF4463GPIO_SET89
0x07D6	0x9803    LDR	R0, [SP, #12]
0x07D8	0xB2C0    UXTB	R0, R0
0x07DA	0x2804    CMP	R0, #4
0x07DC	0xD0E2    BEQ	L_vRF4463GPIO_SET90
L_vRF4463GPIO_SET85:
;driverrf4463pro.c, 396 :: 		ucAppCommandBuf[ 3 ]  = 0x21;     //0x20;   //  gpio2, h = tx mode
0x07DE	0x4668    MOV	R0, SP
0x07E0	0x1CC1    ADDS	R1, R0, #3
0x07E2	0x2021    MOVS	R0, #33
0x07E4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 397 :: 		ucAppCommandBuf[ 4 ]  = 0x20;     // 0x14;  //   gpio3
0x07E6	0x4668    MOV	R0, SP
0x07E8	0x1D01    ADDS	R1, R0, #4
0x07EA	0x2020    MOVS	R0, #32
0x07EC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 398 :: 		ucAppCommandBuf[ 5 ]  = 0x27;     // nIRQ
0x07EE	0x4668    MOV	R0, SP
0x07F0	0x1D41    ADDS	R1, R0, #5
0x07F2	0x2027    MOVS	R0, #39
0x07F4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 399 :: 		ucAppCommandBuf[ 6 ]  = 0x0b;     // sdo
0x07F6	0x4668    MOV	R0, SP
0x07F8	0x1D81    ADDS	R1, R0, #6
0x07FA	0x200B    MOVS	R0, #11
0x07FC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 400 :: 		spi_write( 7, ucAppCommandBuf );
0x07FE	0x4668    MOV	R0, SP
0x0800	0xB401    PUSH	(R0)
0x0802	0x2007    MOVS	R0, #7
0x0804	0xB401    PUSH	(R0)
0x0806	0xF000F871  BL	_spi_write+0
0x080A	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 401 :: 		}
L_end_vRF4463GPIO_SET:
0x080C	0xB002    ADD	SP, SP, #8
0x080E	0xBD00    POP	(R15)
; end of _vRF4463GPIO_SET
_spi_write:
;driverrf4463pro.c, 760 :: 		void spi_write( unsigned char tx_length, unsigned char *p ) {
0x08EC	0xB500    PUSH	(R14)
0x08EE	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 763 :: 		i = 0;
0x08F0	0x2000    MOVS	R0, #0
0x08F2	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 764 :: 		while ( i != 0xFF ) {
L_spi_write116:
0x08F4	0x9800    LDR	R0, [SP, #0]
0x08F6	0xB2C0    UXTB	R0, R0
0x08F8	0x28FF    CMP	R0, #255
0x08FA	0xD003    BEQ	L_spi_write117
;driverrf4463pro.c, 765 :: 		i = check_cts();
0x08FC	0xF7FFFDAC  BL	_check_cts+0
0x0900	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 766 :: 		}
0x0902	0xE7F7    B	L_spi_write116
L_spi_write117:
;driverrf4463pro.c, 768 :: 		nSEL = 0;                              // habilita escritura
0x0904	0x4A13    LDR	R2, [PC, #76]
0x0906	0x6810    LDR	R0, [R2, #0]
0x0908	0x2101    MOVS	R1, #1
0x090A	0x0309    LSLS	R1, R1, #12
0x090C	0x4388    BICS	R0, R1
0x090E	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 770 :: 		for ( i = 0; i < tx_length; i++ ) {
0x0910	0x2000    MOVS	R0, #0
0x0912	0x9000    STR	R0, [SP, #0]
L_spi_write118:
0x0914	0x9903    LDR	R1, [SP, #12]
0x0916	0xB2C9    UXTB	R1, R1
0x0918	0x9800    LDR	R0, [SP, #0]
0x091A	0xB2C0    UXTB	R0, R0
0x091C	0x4288    CMP	R0, R1
0x091E	0xD210    BCS	L_spi_write119
;driverrf4463pro.c, 771 :: 		j = *( p + i );
0x0920	0x9900    LDR	R1, [SP, #0]
0x0922	0xB2C9    UXTB	R1, R1
0x0924	0x9804    LDR	R0, [SP, #16]
0x0926	0x1840    ADDS	R0, R0, R1
0x0928	0x7800    LDRB	R0, [R0, #0]
0x092A	0x9001    STR	R0, [SP, #4]
;driverrf4463pro.c, 772 :: 		ucRf4463SPIByte( j );
0x092C	0x9801    LDR	R0, [SP, #4]
0x092E	0xB2C0    UXTB	R0, R0
0x0930	0xB401    PUSH	(R0)
0x0932	0xF7FFFC4B  BL	_ucRf4463SPIByte+0
0x0936	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 770 :: 		for ( i = 0; i < tx_length; i++ ) {
0x0938	0x9800    LDR	R0, [SP, #0]
0x093A	0xB2C0    UXTB	R0, R0
0x093C	0x3001    ADDS	R0, #1
0x093E	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 773 :: 		}
0x0940	0xE7E8    B	L_spi_write118
L_spi_write119:
;driverrf4463pro.c, 775 :: 		nSEL = 1;                              // desabilita escritura
0x0942	0x4A04    LDR	R2, [PC, #16]
0x0944	0x6810    LDR	R0, [R2, #0]
0x0946	0x2101    MOVS	R1, #1
0x0948	0x0309    LSLS	R1, R1, #12
0x094A	0x4308    ORRS	R0, R1
0x094C	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 776 :: 		}
L_end_spi_write:
0x094E	0xB002    ADD	SP, SP, #8
0x0950	0xBD00    POP	(R15)
0x0952	0xBF00    NOP
0x0954	0x04145000  	GPIOB_ODR+0
; end of _spi_write
_check_cts:
;driverrf4463pro.c, 781 :: 		unsigned char check_cts( void ) {           // This Command follows the Command and reads the response
0x0458	0xB500    PUSH	(R14)
0x045A	0xB081    SUB	SP, SP, #4
;driverrf4463pro.c, 784 :: 		nSEL = 1;
0x045C	0x4A10    LDR	R2, [PC, #64]
0x045E	0x6810    LDR	R0, [R2, #0]
0x0460	0x2101    MOVS	R1, #1
0x0462	0x0309    LSLS	R1, R1, #12
0x0464	0x4308    ORRS	R0, R1
0x0466	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 785 :: 		nSEL = 0;
0x0468	0x4A0D    LDR	R2, [PC, #52]
0x046A	0x6810    LDR	R0, [R2, #0]
0x046C	0x2101    MOVS	R1, #1
0x046E	0x0309    LSLS	R1, R1, #12
0x0470	0x4388    BICS	R0, R1
0x0472	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 786 :: 		ucRf4463SPIByte( 0x44 );
0x0474	0x2044    MOVS	R0, #68
0x0476	0xB401    PUSH	(R0)
0x0478	0xF7FFFEA8  BL	_ucRf4463SPIByte+0
0x047C	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 787 :: 		i = ucRf4463SPIByte( 0 );
0x047E	0x2000    MOVS	R0, #0
0x0480	0xB401    PUSH	(R0)
0x0482	0xF7FFFEA3  BL	_ucRf4463SPIByte+0
0x0486	0xB001    ADD	SP, SP, #4
0x0488	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 788 :: 		nSEL = 1;
0x048A	0x4A05    LDR	R2, [PC, #20]
0x048C	0x6810    LDR	R0, [R2, #0]
0x048E	0x2101    MOVS	R1, #1
0x0490	0x0309    LSLS	R1, R1, #12
0x0492	0x4308    ORRS	R0, R1
0x0494	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 789 :: 		return ( i );
0x0496	0x9800    LDR	R0, [SP, #0]
0x0498	0xB2C0    UXTB	R0, R0
;driverrf4463pro.c, 790 :: 		}
L_end_check_cts:
0x049A	0xB001    ADD	SP, SP, #4
0x049C	0xBD00    POP	(R15)
0x049E	0xBF00    NOP
0x04A0	0x04145000  	GPIOB_ODR+0
; end of _check_cts
_rf_init_freq:
;driverrf4463pro.c, 627 :: 		void rf_init_freq ( void ) {
0x0ACC	0xB500    PUSH	(R14)
0x0ACE	0xB090    SUB	SP, SP, #64
;driverrf4463pro.c, 633 :: 		ulFrequency = ( ucRF4463Freq3 * 100 ) + ( ucRF4463Freq2 * 10 ) + ucRF4463Freq1;
0x0AD0	0x488A    LDR	R0, [PC, #552]
0x0AD2	0x7801    LDRB	R1, [R0, #0]
0x0AD4	0x2064    MOVS	R0, #100
0x0AD6	0x4603    MOV	R3, R0
0x0AD8	0x434B    MULS	R3, R1, R3
0x0ADA	0xB21B    SXTH	R3, R3
0x0ADC	0x4888    LDR	R0, [PC, #544]
0x0ADE	0x7802    LDRB	R2, [R0, #0]
0x0AE0	0x210A    MOVS	R1, #10
0x0AE2	0x4608    MOV	R0, R1
0x0AE4	0x4350    MULS	R0, R2, R0
0x0AE6	0xB200    SXTH	R0, R0
0x0AE8	0x1819    ADDS	R1, R3, R0
0x0AEA	0xB209    SXTH	R1, R1
0x0AEC	0x4885    LDR	R0, [PC, #532]
0x0AEE	0x7800    LDRB	R0, [R0, #0]
0x0AF0	0x1808    ADDS	R0, R1, R0
0x0AF2	0xB200    SXTH	R0, R0
0x0AF4	0x900A    STR	R0, [SP, #40]
;driverrf4463pro.c, 635 :: 		ulFrequency = ( ulFrequency * 10000 );
0x0AF6	0x9A0A    LDR	R2, [SP, #40]
0x0AF8	0x4983    LDR	R1, [PC, #524]
0x0AFA	0x4608    MOV	R0, R1
0x0AFC	0x4350    MULS	R0, R2, R0
0x0AFE	0x900A    STR	R0, [SP, #40]
;driverrf4463pro.c, 638 :: 		if ( ulFrequency >= 7600000 ) {
0x0B00	0x990A    LDR	R1, [SP, #40]
0x0B02	0x4882    LDR	R0, [PC, #520]
0x0B04	0x4281    CMP	R1, R0
0x0B06	0xD306    BCC	L_rf_init_freq99
;driverrf4463pro.c, 639 :: 		ucOUTDIV = 4;
0x0B08	0x2004    MOVS	R0, #4
0x0B0A	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 640 :: 		ucBAND = 0;
0x0B0C	0x2000    MOVS	R0, #0
0x0B0E	0x9004    STR	R0, [SP, #16]
;driverrf4463pro.c, 641 :: 		ucVCO = 0xFF;
0x0B10	0x20FF    MOVS	R0, #255
0x0B12	0x9002    STR	R0, [SP, #8]
;driverrf4463pro.c, 642 :: 		}
0x0B14	0xE031    B	L_rf_init_freq100
L_rf_init_freq99:
;driverrf4463pro.c, 645 :: 		else if ( ulFrequency >= 5460000 ) {
0x0B16	0x990A    LDR	R1, [SP, #40]
0x0B18	0x487D    LDR	R0, [PC, #500]
0x0B1A	0x4281    CMP	R1, R0
0x0B1C	0xD306    BCC	L_rf_init_freq101
;driverrf4463pro.c, 646 :: 		ucOUTDIV = 6;
0x0B1E	0x2006    MOVS	R0, #6
0x0B20	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 647 :: 		ucBAND   = 1;
0x0B22	0x2001    MOVS	R0, #1
0x0B24	0x9004    STR	R0, [SP, #16]
;driverrf4463pro.c, 648 :: 		ucVCO    = 0xFE;
0x0B26	0x20FE    MOVS	R0, #254
0x0B28	0x9002    STR	R0, [SP, #8]
;driverrf4463pro.c, 649 :: 		}
0x0B2A	0xE026    B	L_rf_init_freq102
L_rf_init_freq101:
;driverrf4463pro.c, 652 :: 		else if ( ulFrequency >= 3850000 ) {
0x0B2C	0x990A    LDR	R1, [SP, #40]
0x0B2E	0x4879    LDR	R0, [PC, #484]
0x0B30	0x4281    CMP	R1, R0
0x0B32	0xD306    BCC	L_rf_init_freq103
;driverrf4463pro.c, 653 :: 		ucOUTDIV = 8;
0x0B34	0x2008    MOVS	R0, #8
0x0B36	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 654 :: 		ucBAND   = 2;
0x0B38	0x2002    MOVS	R0, #2
0x0B3A	0x9004    STR	R0, [SP, #16]
;driverrf4463pro.c, 655 :: 		ucVCO    = 0xFE;
0x0B3C	0x20FE    MOVS	R0, #254
0x0B3E	0x9002    STR	R0, [SP, #8]
;driverrf4463pro.c, 656 :: 		}
0x0B40	0xE01B    B	L_rf_init_freq104
L_rf_init_freq103:
;driverrf4463pro.c, 659 :: 		else if ( ulFrequency >= 2730000 ) {
0x0B42	0x990A    LDR	R1, [SP, #40]
0x0B44	0x4874    LDR	R0, [PC, #464]
0x0B46	0x4281    CMP	R1, R0
0x0B48	0xD306    BCC	L_rf_init_freq105
;driverrf4463pro.c, 660 :: 		ucOUTDIV = 12;
0x0B4A	0x200C    MOVS	R0, #12
0x0B4C	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 661 :: 		ucBAND   = 3;
0x0B4E	0x2003    MOVS	R0, #3
0x0B50	0x9004    STR	R0, [SP, #16]
;driverrf4463pro.c, 662 :: 		ucVCO    = 0xFD;
0x0B52	0x20FD    MOVS	R0, #253
0x0B54	0x9002    STR	R0, [SP, #8]
;driverrf4463pro.c, 663 :: 		}
0x0B56	0xE010    B	L_rf_init_freq106
L_rf_init_freq105:
;driverrf4463pro.c, 666 :: 		else if ( ulFrequency >= 1940000 ) {
0x0B58	0x990A    LDR	R1, [SP, #40]
0x0B5A	0x4870    LDR	R0, [PC, #448]
0x0B5C	0x4281    CMP	R1, R0
0x0B5E	0xD306    BCC	L_rf_init_freq107
;driverrf4463pro.c, 667 :: 		ucOUTDIV = 16;
0x0B60	0x2010    MOVS	R0, #16
0x0B62	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 668 :: 		ucBAND   = 4;
0x0B64	0x2004    MOVS	R0, #4
0x0B66	0x9004    STR	R0, [SP, #16]
;driverrf4463pro.c, 669 :: 		ucVCO    = 0xFC;
0x0B68	0x20FC    MOVS	R0, #252
0x0B6A	0x9002    STR	R0, [SP, #8]
;driverrf4463pro.c, 670 :: 		}
0x0B6C	0xE005    B	L_rf_init_freq108
L_rf_init_freq107:
;driverrf4463pro.c, 674 :: 		ucOUTDIV = 24;
0x0B6E	0x2018    MOVS	R0, #24
0x0B70	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 675 :: 		ucBAND   = 5;
0x0B72	0x2005    MOVS	R0, #5
0x0B74	0x9004    STR	R0, [SP, #16]
;driverrf4463pro.c, 676 :: 		ucVCO    = 0xFA;
0x0B76	0x20FA    MOVS	R0, #250
0x0B78	0x9002    STR	R0, [SP, #8]
;driverrf4463pro.c, 677 :: 		}
L_rf_init_freq108:
L_rf_init_freq106:
L_rf_init_freq104:
L_rf_init_freq102:
L_rf_init_freq100:
;driverrf4463pro.c, 679 :: 		ucDIV = ucOUTDIV / 2;
0x0B7A	0x9800    LDR	R0, [SP, #0]
0x0B7C	0xB2C0    UXTB	R0, R0
0x0B7E	0x2202    MOVS	R2, #2
0x0B80	0xF7FFFB02  BL	__Div_32x32_U+0
0x0B84	0x9001    STR	R0, [SP, #4]
;driverrf4463pro.c, 681 :: 		ulData = ( ulFrequency * ucDIV ) / 3;          // ucDIV = 88.5 = 88   //// UCdiv = 2
0x0B86	0x9A01    LDR	R2, [SP, #4]
0x0B88	0xB2D2    UXTB	R2, R2
0x0B8A	0x980A    LDR	R0, [SP, #40]
0x0B8C	0x4611    MOV	R1, R2
0x0B8E	0x4341    MULS	R1, R0, R1
0x0B90	0x2203    MOVS	R2, #3
0x0B92	0x4608    MOV	R0, R1
0x0B94	0xF7FFFAF8  BL	__Div_32x32_U+0
0x0B98	0x9009    STR	R0, [SP, #36]
;driverrf4463pro.c, 682 :: 		ucINTE = ( ulData / 100000) - 1;               // ulData = 6 000 000  //// ULdATA = 9 000 000
0x0B9A	0x9809    LDR	R0, [SP, #36]
0x0B9C	0x4A60    LDR	R2, [PC, #384]
0x0B9E	0xF7FFFAF3  BL	__Div_32x32_U+0
0x0BA2	0x1E40    SUBS	R0, R0, #1
0x0BA4	0x9003    STR	R0, [SP, #12]
;driverrf4463pro.c, 683 :: 		ulFRAC = ( ulData - ( ucINTE + 1 ) * 100000 ) * 16384 / 3125;         // ulFRAC = 15 728 640
0x0BA6	0x9803    LDR	R0, [SP, #12]
0x0BA8	0xB2C0    UXTB	R0, R0
0x0BAA	0x1C42    ADDS	R2, R0, #1
0x0BAC	0xB212    SXTH	R2, R2
0x0BAE	0x485C    LDR	R0, [PC, #368]
0x0BB0	0x4601    MOV	R1, R0
0x0BB2	0x4351    MULS	R1, R2, R1
0x0BB4	0x9809    LDR	R0, [SP, #36]
0x0BB6	0x1A42    SUBS	R2, R0, R1
0x0BB8	0x485A    LDR	R0, [PC, #360]
0x0BBA	0x4601    MOV	R1, R0
0x0BBC	0x4351    MULS	R1, R2, R1
0x0BBE	0x4A5A    LDR	R2, [PC, #360]
0x0BC0	0x4608    MOV	R0, R1
0x0BC2	0xF7FFFAE1  BL	__Div_32x32_U+0
0x0BC6	0x9008    STR	R0, [SP, #32]
;driverrf4463pro.c, 684 :: 		ulFRAC = ulFRAC + 0x80000;
0x0BC8	0x9908    LDR	R1, [SP, #32]
0x0BCA	0x4858    LDR	R0, [PC, #352]
0x0BCC	0x1808    ADDS	R0, R1, R0
0x0BCE	0x9008    STR	R0, [SP, #32]
;driverrf4463pro.c, 686 :: 		ucFRAC_0 = ulFRAC;
0x0BD0	0x9808    LDR	R0, [SP, #32]
0x0BD2	0x9007    STR	R0, [SP, #28]
;driverrf4463pro.c, 687 :: 		ulFRAC >>= 8;
0x0BD4	0x9808    LDR	R0, [SP, #32]
0x0BD6	0x0A00    LSRS	R0, R0, #8
0x0BD8	0x9008    STR	R0, [SP, #32]
;driverrf4463pro.c, 688 :: 		ucFRAC_1 = ulFRAC;
0x0BDA	0x9808    LDR	R0, [SP, #32]
0x0BDC	0x9006    STR	R0, [SP, #24]
;driverrf4463pro.c, 689 :: 		ulFRAC >>= 8;
0x0BDE	0x9808    LDR	R0, [SP, #32]
0x0BE0	0x0A00    LSRS	R0, R0, #8
0x0BE2	0x9008    STR	R0, [SP, #32]
;driverrf4463pro.c, 690 :: 		ucFRAC_2 = ulFRAC;
0x0BE4	0x9808    LDR	R0, [SP, #32]
0x0BE6	0x9005    STR	R0, [SP, #20]
;driverrf4463pro.c, 694 :: 		app_command_buf[ 0 ] = 0x11;           // SET property    MODEM_CLKGEN_BAND
0x0BE8	0x202C    MOVS	R0, #44
0x0BEA	0x4468    ADD	R0, SP, R0
0x0BEC	0x1C01    ADDS	R1, R0, #0
0x0BEE	0x2011    MOVS	R0, #17
0x0BF0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 695 :: 		app_command_buf[ 1 ] = 0x20;           // Group  // 0x2051
0x0BF2	0x202C    MOVS	R0, #44
0x0BF4	0x4468    ADD	R0, SP, R0
0x0BF6	0x1C41    ADDS	R1, R0, #1
0x0BF8	0x2020    MOVS	R0, #32
0x0BFA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 696 :: 		app_command_buf[ 2 ] = 0x01;           // Num Arguments // Total 1 Parameters
0x0BFC	0x202C    MOVS	R0, #44
0x0BFE	0x4468    ADD	R0, SP, R0
0x0C00	0x1C81    ADDS	R1, R0, #2
0x0C02	0x2001    MOVS	R0, #1
0x0C04	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 697 :: 		app_command_buf[ 3 ] = 0x51;           // Number  // 0x2051
0x0C06	0x202C    MOVS	R0, #44
0x0C08	0x4468    ADD	R0, SP, R0
0x0C0A	0x1CC1    ADDS	R1, R0, #3
0x0C0C	0x2051    MOVS	R0, #81
0x0C0E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 698 :: 		app_command_buf[ 4 ] = 0x08 | ucBAND;  // Argumento  //  high performance mode , clk outpu = osc /4
0x0C10	0x202C    MOVS	R0, #44
0x0C12	0x4468    ADD	R0, SP, R0
0x0C14	0x1D02    ADDS	R2, R0, #4
0x0C16	0x9904    LDR	R1, [SP, #16]
0x0C18	0xB2C9    UXTB	R1, R1
0x0C1A	0x2008    MOVS	R0, #8
0x0C1C	0x4308    ORRS	R0, R1
0x0C1E	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 699 :: 		spi_write( 5, app_command_buf );
0x0C20	0x202C    MOVS	R0, #44
0x0C22	0x4468    ADD	R0, SP, R0
0x0C24	0xB401    PUSH	(R0)
0x0C26	0x2005    MOVS	R0, #5
0x0C28	0xB401    PUSH	(R0)
0x0C2A	0xF7FFFE5F  BL	_spi_write+0
0x0C2E	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 701 :: 		app_command_buf[ 0 ]  = 0x11;
0x0C30	0x202C    MOVS	R0, #44
0x0C32	0x4468    ADD	R0, SP, R0
0x0C34	0x1C01    ADDS	R1, R0, #0
0x0C36	0x2011    MOVS	R0, #17
0x0C38	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 702 :: 		app_command_buf[ 1 ]  = 0x40;    // 0x4000         FREQ_CONTROL_INTE
0x0C3A	0x202C    MOVS	R0, #44
0x0C3C	0x4468    ADD	R0, SP, R0
0x0C3E	0x1C41    ADDS	R1, R0, #1
0x0C40	0x2040    MOVS	R0, #64
0x0C42	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 703 :: 		app_command_buf[ 2 ]  = 0x08;    // Total 8 Parameters
0x0C44	0x202C    MOVS	R0, #44
0x0C46	0x4468    ADD	R0, SP, R0
0x0C48	0x1C81    ADDS	R1, R0, #2
0x0C4A	0x2008    MOVS	R0, #8
0x0C4C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 704 :: 		app_command_buf[ 3 ]  = 0x00;   // 0x4000
0x0C4E	0x202C    MOVS	R0, #44
0x0C50	0x4468    ADD	R0, SP, R0
0x0C52	0x1CC1    ADDS	R1, R0, #3
0x0C54	0x2000    MOVS	R0, #0
0x0C56	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 705 :: 		app_command_buf[ 4 ]  = ucINTE;   //  default value
0x0C58	0x202C    MOVS	R0, #44
0x0C5A	0x4468    ADD	R0, SP, R0
0x0C5C	0x1D01    ADDS	R1, R0, #4
0x0C5E	0x9803    LDR	R0, [SP, #12]
0x0C60	0xB2C0    UXTB	R0, R0
0x0C62	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 706 :: 		app_command_buf[ 5 ]  = ucFRAC_2;   //  defaul value
0x0C64	0x202C    MOVS	R0, #44
0x0C66	0x4468    ADD	R0, SP, R0
0x0C68	0x1D41    ADDS	R1, R0, #5
0x0C6A	0x9805    LDR	R0, [SP, #20]
0x0C6C	0xB2C0    UXTB	R0, R0
0x0C6E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 707 :: 		app_command_buf[ 6 ]  = ucFRAC_1;   //  default value
0x0C70	0x202C    MOVS	R0, #44
0x0C72	0x4468    ADD	R0, SP, R0
0x0C74	0x1D81    ADDS	R1, R0, #6
0x0C76	0x9806    LDR	R0, [SP, #24]
0x0C78	0xB2C0    UXTB	R0, R0
0x0C7A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 708 :: 		app_command_buf[ 7 ]  = ucFRAC_0;   // frac ,from WDS
0x0C7C	0x202C    MOVS	R0, #44
0x0C7E	0x4468    ADD	R0, SP, R0
0x0C80	0x1DC1    ADDS	R1, R0, #7
0x0C82	0x9807    LDR	R0, [SP, #28]
0x0C84	0xB2C0    UXTB	R0, R0
0x0C86	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 711 :: 		if ( ulRF4463Step == 250 ) {
0x0C88	0x4829    LDR	R0, [PC, #164]
0x0C8A	0x6800    LDR	R0, [R0, #0]
0x0C8C	0x28FA    CMP	R0, #250
0x0C8E	0xD10C    BNE	L_rf_init_freq109
;driverrf4463pro.c, 712 :: 		app_command_buf[ 8 ]  = step_250K_step1;   // channel step1  from wds  // al parecer aqu? esta el ancho del canal
0x0C90	0x202C    MOVS	R0, #44
0x0C92	0x4468    ADD	R0, SP, R0
0x0C94	0x4601    MOV	R1, R0
0x0C96	0x3108    ADDS	R1, #8
0x0C98	0x2022    MOVS	R0, #34
0x0C9A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 713 :: 		app_command_buf[ 9 ]  = step_250K_step0;   // channel step0  from wds
0x0C9C	0x202C    MOVS	R0, #44
0x0C9E	0x4468    ADD	R0, SP, R0
0x0CA0	0x4601    MOV	R1, R0
0x0CA2	0x3109    ADDS	R1, #9
0x0CA4	0x2022    MOVS	R0, #34
0x0CA6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 714 :: 		}
0x0CA8	0xE011    B	L_rf_init_freq110
L_rf_init_freq109:
;driverrf4463pro.c, 715 :: 		else if ( ulRF4463Step == 500 ) {
0x0CAA	0x4821    LDR	R0, [PC, #132]
0x0CAC	0x6801    LDR	R1, [R0, #0]
0x0CAE	0x20FF    MOVS	R0, #255
0x0CB0	0x30F5    ADDS	R0, #245
0x0CB2	0x4281    CMP	R1, R0
0x0CB4	0xD10B    BNE	L_rf_init_freq111
;driverrf4463pro.c, 716 :: 		app_command_buf[ 8 ]  = step_500K_step1;   // channel step1  from wds  // al parecer aqu? esta el ancho del canal
0x0CB6	0x202C    MOVS	R0, #44
0x0CB8	0x4468    ADD	R0, SP, R0
0x0CBA	0x4601    MOV	R1, R0
0x0CBC	0x3108    ADDS	R1, #8
0x0CBE	0x2044    MOVS	R0, #68
0x0CC0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 717 :: 		app_command_buf[ 9 ]  = step_500K_step0;   // channel step0  from wds
0x0CC2	0x202C    MOVS	R0, #44
0x0CC4	0x4468    ADD	R0, SP, R0
0x0CC6	0x4601    MOV	R1, R0
0x0CC8	0x3109    ADDS	R1, #9
0x0CCA	0x2044    MOVS	R0, #68
0x0CCC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 718 :: 		}
L_rf_init_freq111:
L_rf_init_freq110:
;driverrf4463pro.c, 720 :: 		app_command_buf[ 10 ] = 0x20;  //  from wds Without this Values
0x0CCE	0x202C    MOVS	R0, #44
0x0CD0	0x4468    ADD	R0, SP, R0
0x0CD2	0x4601    MOV	R1, R0
0x0CD4	0x310A    ADDS	R1, #10
0x0CD6	0x2020    MOVS	R0, #32
0x0CD8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 721 :: 		app_command_buf[ 11 ] = ucVCO;    // from wds Without this Values
0x0CDA	0x202C    MOVS	R0, #44
0x0CDC	0x4468    ADD	R0, SP, R0
0x0CDE	0x4601    MOV	R1, R0
0x0CE0	0x310B    ADDS	R1, #11
0x0CE2	0x9802    LDR	R0, [SP, #8]
0x0CE4	0xB2C0    UXTB	R0, R0
0x0CE6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 722 :: 		spi_write( 12, app_command_buf );
0x0CE8	0x202C    MOVS	R0, #44
0x0CEA	0x4468    ADD	R0, SP, R0
0x0CEC	0xB401    PUSH	(R0)
0x0CEE	0x200C    MOVS	R0, #12
0x0CF0	0xB401    PUSH	(R0)
0x0CF2	0xF7FFFDFB  BL	_spi_write+0
0x0CF6	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 723 :: 		}
L_end_rf_init_freq:
0x0CF8	0xB010    ADD	SP, SP, #64
0x0CFA	0xBD00    POP	(R15)
0x0CFC	0x009F2000  	_ucRF4463Freq3+0
0x0D00	0x10B02000  	_ucRF4463Freq2+0
0x0D04	0x10B12000  	_ucRF4463Freq1+0
0x0D08	0x27100000  	#10000
0x0D0C	0xF7800073  	#7600000
0x0D10	0x50200053  	#5460000
0x0D14	0xBF10003A  	#3850000
0x0D18	0xA8100029  	#2730000
0x0D1C	0x9A20001D  	#1940000
0x0D20	0x86A00001  	#100000
0x0D24	0x40000000  	#16384
0x0D28	0x0C350000  	#3125
0x0D2C	0x00000008  	#524288
0x0D30	0x00002000  	_ulRF4463Step+0
; end of _rf_init_freq
_vRF4463ClearInterrupts:
;driverrf4463pro.c, 418 :: 		void vRF4463ClearInterrupts( void ) {
0x164C	0xB500    PUSH	(R14)
0x164E	0xB081    SUB	SP, SP, #4
;driverrf4463pro.c, 421 :: 		p[ 0 ] = GET_INT_STATUS;
0x1650	0x4668    MOV	R0, SP
0x1652	0x1C01    ADDS	R1, R0, #0
0x1654	0x2020    MOVS	R0, #32
0x1656	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 422 :: 		p[ 1 ] = 0;               // clr  PH pending
0x1658	0x4668    MOV	R0, SP
0x165A	0x1C41    ADDS	R1, R0, #1
0x165C	0x2000    MOVS	R0, #0
0x165E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 423 :: 		p[ 2 ] = 0;               // clr modem_pending
0x1660	0x4668    MOV	R0, SP
0x1662	0x1C81    ADDS	R1, R0, #2
0x1664	0x2000    MOVS	R0, #0
0x1666	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 424 :: 		p[ 3 ] = 0;               // clr chip pending
0x1668	0x4668    MOV	R0, SP
0x166A	0x1CC1    ADDS	R1, R0, #3
0x166C	0x2000    MOVS	R0, #0
0x166E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 425 :: 		spi_write( 4, p );
0x1670	0x4668    MOV	R0, SP
0x1672	0xB401    PUSH	(R0)
0x1674	0x2004    MOVS	R0, #4
0x1676	0xB401    PUSH	(R0)
0x1678	0xF7FFF938  BL	_spi_write+0
0x167C	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 426 :: 		spi_read( 9, GET_INT_STATUS );
0x167E	0x2020    MOVS	R0, #32
0x1680	0xB401    PUSH	(R0)
0x1682	0x2009    MOVS	R0, #9
0x1684	0xB401    PUSH	(R0)
0x1686	0xF7FFF9A3  BL	_spi_read+0
0x168A	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 427 :: 		}
L_end_vRF4463ClearInterrupts:
0x168C	0xB001    ADD	SP, SP, #4
0x168E	0xBD00    POP	(R15)
; end of _vRF4463ClearInterrupts
_spi_read:
;driverrf4463pro.c, 795 :: 		void spi_read( unsigned char data_length, unsigned char api_command ) {
0x09D0	0xB500    PUSH	(R14)
0x09D2	0xB083    SUB	SP, SP, #12
;driverrf4463pro.c, 799 :: 		p[ 0 ] = api_command;
0x09D4	0x2004    MOVS	R0, #4
0x09D6	0x4468    ADD	R0, SP, R0
0x09D8	0x1C01    ADDS	R1, R0, #0
0x09DA	0x9805    LDR	R0, [SP, #20]
0x09DC	0xB2C0    UXTB	R0, R0
0x09DE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 800 :: 		i = 0;
0x09E0	0x2000    MOVS	R0, #0
0x09E2	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 801 :: 		while ( i != 0xFF ) {
L_spi_read121:
0x09E4	0x9800    LDR	R0, [SP, #0]
0x09E6	0xB2C0    UXTB	R0, R0
0x09E8	0x28FF    CMP	R0, #255
0x09EA	0xD003    BEQ	L_spi_read122
;driverrf4463pro.c, 802 :: 		i = check_cts();                // Check if you can send Command
0x09EC	0xF7FFFD34  BL	_check_cts+0
0x09F0	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 803 :: 		}
0x09F2	0xE7F7    B	L_spi_read121
L_spi_read122:
;driverrf4463pro.c, 805 :: 		spi_write( 1, p );    // Send Command
0x09F4	0x2004    MOVS	R0, #4
0x09F6	0x4468    ADD	R0, SP, R0
0x09F8	0xB401    PUSH	(R0)
0x09FA	0x2001    MOVS	R0, #1
0x09FC	0xB401    PUSH	(R0)
0x09FE	0xF7FFFF75  BL	_spi_write+0
0x0A02	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 807 :: 		i = 0;
0x0A04	0x2000    MOVS	R0, #0
0x0A06	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 808 :: 		while ( i != 0xFF ) {
L_spi_read123:
0x0A08	0x9800    LDR	R0, [SP, #0]
0x0A0A	0xB2C0    UXTB	R0, R0
0x0A0C	0x28FF    CMP	R0, #255
0x0A0E	0xD003    BEQ	L_spi_read124
;driverrf4463pro.c, 809 :: 		i = check_cts();        //Check whether the data can be read
0x0A10	0xF7FFFD22  BL	_check_cts+0
0x0A14	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 810 :: 		}
0x0A16	0xE7F7    B	L_spi_read123
L_spi_read124:
;driverrf4463pro.c, 812 :: 		nSEL = 1;
0x0A18	0x4A1C    LDR	R2, [PC, #112]
0x0A1A	0x6810    LDR	R0, [R2, #0]
0x0A1C	0x2101    MOVS	R1, #1
0x0A1E	0x0309    LSLS	R1, R1, #12
0x0A20	0x4308    ORRS	R0, R1
0x0A22	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 813 :: 		nSEL = 0;
0x0A24	0x4A19    LDR	R2, [PC, #100]
0x0A26	0x6810    LDR	R0, [R2, #0]
0x0A28	0x2101    MOVS	R1, #1
0x0A2A	0x0309    LSLS	R1, R1, #12
0x0A2C	0x4388    BICS	R0, R1
0x0A2E	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 814 :: 		ucRf4463SPIByte( 0x44 );
0x0A30	0x2044    MOVS	R0, #68
0x0A32	0xB401    PUSH	(R0)
0x0A34	0xF7FFFBCA  BL	_ucRf4463SPIByte+0
0x0A38	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 815 :: 		for ( i = 0; i < data_length; i++ ) {        // Read data
0x0A3A	0x2000    MOVS	R0, #0
0x0A3C	0x9000    STR	R0, [SP, #0]
L_spi_read125:
0x0A3E	0x9904    LDR	R1, [SP, #16]
0x0A40	0xB2C9    UXTB	R1, R1
0x0A42	0x9800    LDR	R0, [SP, #0]
0x0A44	0xB2C0    UXTB	R0, R0
0x0A46	0x4288    CMP	R0, R1
0x0A48	0xD218    BCS	L_spi_read126
;driverrf4463pro.c, 816 :: 		spi_read_buf[ i ] = ucRf4463SPIByte( 0x00 );             // 0x00
0x0A4A	0x9900    LDR	R1, [SP, #0]
0x0A4C	0xB2C9    UXTB	R1, R1
0x0A4E	0x4810    LDR	R0, [PC, #64]
0x0A50	0x1840    ADDS	R0, R0, R1
0x0A52	0x9002    STR	R0, [SP, #8]
0x0A54	0x2000    MOVS	R0, #0
0x0A56	0xB401    PUSH	(R0)
0x0A58	0xF7FFFBB8  BL	_ucRf4463SPIByte+0
0x0A5C	0xB001    ADD	SP, SP, #4
0x0A5E	0x9902    LDR	R1, [SP, #8]
0x0A60	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 817 :: 		Delay_ms(1);
0x0A62	0x4F02    LDR	R7, [PC, #8]
L_spi_read128:
0x0A64	0x1E7F    SUBS	R7, R7, #1
0x0A66	0xD1FD    BNE	L_spi_read128
0x0A68	0xBF00    NOP
0x0A6A	0xE002    B	#4
0x0A6C	0x14D40000  	#5332
0x0A70	0xBF00    NOP
;driverrf4463pro.c, 815 :: 		for ( i = 0; i < data_length; i++ ) {        // Read data
0x0A72	0x9800    LDR	R0, [SP, #0]
0x0A74	0xB2C0    UXTB	R0, R0
0x0A76	0x3001    ADDS	R0, #1
0x0A78	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 818 :: 		}
0x0A7A	0xE7E0    B	L_spi_read125
L_spi_read126:
;driverrf4463pro.c, 819 :: 		nSEL = 1;
0x0A7C	0x4A03    LDR	R2, [PC, #12]
0x0A7E	0x6810    LDR	R0, [R2, #0]
0x0A80	0x2101    MOVS	R1, #1
0x0A82	0x0309    LSLS	R1, R1, #12
0x0A84	0x4308    ORRS	R0, R1
0x0A86	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 820 :: 		}
L_end_spi_read:
0x0A88	0xB003    ADD	SP, SP, #12
0x0A8A	0xBD00    POP	(R15)
0x0A8C	0x04145000  	GPIOB_ODR+0
0x0A90	0x10B22000  	_spi_read_buf+0
; end of _spi_read
_vRF4463PartInfo:
;driverrf4463pro.c, 429 :: 		void vRF4463PartInfo( void ) {  // Solicitud totalmente operativa
0x1690	0xB500    PUSH	(R14)
0x1692	0xB083    SUB	SP, SP, #12
;driverrf4463pro.c, 432 :: 		p[ 0 ] = PART_INFO;
0x1694	0x4668    MOV	R0, SP
0x1696	0x1C01    ADDS	R1, R0, #0
0x1698	0x2001    MOVS	R0, #1
0x169A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 436 :: 		spi_write( 1, p );
0x169C	0x4668    MOV	R0, SP
0x169E	0xB401    PUSH	(R0)
0x16A0	0x2001    MOVS	R0, #1
0x16A2	0xB401    PUSH	(R0)
0x16A4	0xF7FFF922  BL	_spi_write+0
0x16A8	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 437 :: 		spi_read( 9, PART_INFO );
0x16AA	0x2001    MOVS	R0, #1
0x16AC	0xB401    PUSH	(R0)
0x16AE	0x2009    MOVS	R0, #9
0x16B0	0xB401    PUSH	(R0)
0x16B2	0xF7FFF98D  BL	_spi_read+0
0x16B6	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 438 :: 		}
L_end_vRF4463PartInfo:
0x16B8	0xB003    ADD	SP, SP, #12
0x16BA	0xBD00    POP	(R15)
; end of _vRF4463PartInfo
_vRF4463TxData:
;driverrf4463pro.c, 557 :: 		void vRF4463TxData( void ) {
0x16BC	0xB500    PUSH	(R14)
0x16BE	0xB085    SUB	SP, SP, #20
;driverrf4463pro.c, 560 :: 		ucRF4463IRQ = 0;
0x16C0	0x2100    MOVS	R1, #0
0x16C2	0x4822    LDR	R0, [PC, #136]
0x16C4	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 562 :: 		Flag.is_tx = 1;
0x16C6	0x4A22    LDR	R2, [PC, #136]
0x16C8	0x7810    LDRB	R0, [R2, #0]
0x16CA	0x2102    MOVS	R1, #2
0x16CC	0x4308    ORRS	R0, R1
0x16CE	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 567 :: 		vRF4463FifoReset();            // fifo_reset();  // Buffer empty
0x16D0	0xF7FFF8F8  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 568 :: 		spi_write_fifo();              // Fill the buffer with data
0x16D4	0xF7FFF89C  BL	_spi_write_fifo+0
;driverrf4463pro.c, 569 :: 		vRF4463EnableTxInterrupt();    // enable_tx_interrupt();
0x16D8	0xF7FFFDC8  BL	_vRF4463EnableTxInterrupt+0
;driverrf4463pro.c, 570 :: 		vRF4463ClearInterrupts();       // clr_interrupt();  // Clear interrupt factor
0x16DC	0xF7FFFFB6  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 571 :: 		vRF4463TxStart();              // tx_start();    // Enter launch mode, start launch
0x16E0	0xF7FFFB66  BL	_vRF4463TxStart+0
;driverrf4463pro.c, 572 :: 		rf_timeout = 0;
0x16E4	0x2100    MOVS	R1, #0
0x16E6	0x481B    LDR	R0, [PC, #108]
0x16E8	0x8001    STRH	R1, [R0, #0]
;driverrf4463pro.c, 574 :: 		Flag.rf_reach_timeout = 0;
0x16EA	0x4A19    LDR	R2, [PC, #100]
0x16EC	0x7810    LDRB	R0, [R2, #0]
0x16EE	0x2104    MOVS	R1, #4
0x16F0	0x4388    BICS	R0, R1
0x16F2	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 576 :: 		if ( ucRF4463IRQ ) {
0x16F4	0x4815    LDR	R0, [PC, #84]
0x16F6	0x7800    LDRB	R0, [R0, #0]
0x16F8	0x2800    CMP	R0, #0
0x16FA	0xD00A    BEQ	L_vRF4463TxData93
;driverrf4463pro.c, 577 :: 		UART1_Write_Text( "[ UART1 ] TX INT\r\n" );
0x16FC	0x466E    MOV	R6, SP
0x16FE	0x2513    MOVS	R5, #19
0x1700	0x19AD    ADDS	R5, R5, R6
0x1702	0x4F15    LDR	R7, [PC, #84]
0x1704	0xF7FFFF7A  BL	___CC2DW+0
0x1708	0x4668    MOV	R0, SP
0x170A	0x4604    MOV	R4, R0
0x170C	0x4620    MOV	R0, R4
0x170E	0xF7FFFF95  BL	_UART1_Write_Text+0
;driverrf4463pro.c, 578 :: 		}
L_vRF4463TxData93:
;driverrf4463pro.c, 581 :: 		while ( nIRQ ) {     //nIRQ
L_vRF4463TxData94:
0x1712	0x4812    LDR	R0, [PC, #72]
0x1714	0x6801    LDR	R1, [R0, #0]
0x1716	0x2001    MOVS	R0, #1
0x1718	0x4008    ANDS	R0, R1
0x171A	0x2800    CMP	R0, #0
0x171C	0xD00C    BEQ	L_vRF4463TxData95
;driverrf4463pro.c, 584 :: 		if ( Flag.rf_reach_timeout ) {
0x171E	0x480C    LDR	R0, [PC, #48]
0x1720	0x7801    LDRB	R1, [R0, #0]
0x1722	0x2004    MOVS	R0, #4
0x1724	0x4008    ANDS	R0, R1
0x1726	0x0880    LSRS	R0, R0, #2
0x1728	0x2800    CMP	R0, #0
0x172A	0xD004    BEQ	L_vRF4463TxData96
;driverrf4463pro.c, 585 :: 		VRF4463SDNReset();
0x172C	0xF000FDE2  BL	_VRF4463SDNReset+0
;driverrf4463pro.c, 586 :: 		vRF4463Init();        //SI4463_init();  // RF Module initialization
0x1730	0xF000F818  BL	_vRF4463Init+0
;driverrf4463pro.c, 587 :: 		break;                // Forced out
0x1734	0xE000    B	L_vRF4463TxData95
;driverrf4463pro.c, 588 :: 		}
L_vRF4463TxData96:
;driverrf4463pro.c, 589 :: 		}
0x1736	0xE7EC    B	L_vRF4463TxData94
L_vRF4463TxData95:
;driverrf4463pro.c, 591 :: 		tx_cnt++;
0x1738	0x4809    LDR	R0, [PC, #36]
0x173A	0x6800    LDR	R0, [R0, #0]
0x173C	0x1C41    ADDS	R1, R0, #1
0x173E	0x4808    LDR	R0, [PC, #32]
0x1740	0x6001    STR	R1, [R0, #0]
;driverrf4463pro.c, 593 :: 		vRF4463RxInit();          // rx_init();                //rf After the transmission is completed, enter the receiving mode
0x1742	0xF7FFFBC7  BL	_vRF4463RxInit+0
;driverrf4463pro.c, 594 :: 		}
L_end_vRF4463TxData:
0x1746	0xB005    ADD	SP, SP, #20
0x1748	0xBD00    POP	(R15)
0x174A	0xBF00    NOP
0x174C	0x009C2000  	DriverRF4463PROMain_ucRF4463IRQ+0
0x1750	0x10C92000  	_Flag+0
0x1754	0x10CA2000  	_rf_timeout+0
0x1758	0x44F40000  	?ICS?lstr1_DriverRF4463PROMain+0
0x175C	0x1C105000  	GPIOH_IDR+0
0x1760	0x00A02000  	_tx_cnt+0
; end of _vRF4463TxData
_vRF4463FifoReset:
;driverrf4463pro.c, 406 :: 		void vRF4463FifoReset( void ) {
0x08C4	0xB500    PUSH	(R14)
0x08C6	0xB081    SUB	SP, SP, #4
;driverrf4463pro.c, 409 :: 		p[ 0 ] = FIFO_INFO;
0x08C8	0x4668    MOV	R0, SP
0x08CA	0x1C01    ADDS	R1, R0, #0
0x08CC	0x2015    MOVS	R0, #21
0x08CE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 410 :: 		p[ 1 ] = 0x03;   // reset tx ,rx fifo
0x08D0	0x4668    MOV	R0, SP
0x08D2	0x1C41    ADDS	R1, R0, #1
0x08D4	0x2003    MOVS	R0, #3
0x08D6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 411 :: 		spi_write( 2, p );
0x08D8	0x4668    MOV	R0, SP
0x08DA	0xB401    PUSH	(R0)
0x08DC	0x2002    MOVS	R0, #2
0x08DE	0xB401    PUSH	(R0)
0x08E0	0xF000F804  BL	_spi_write+0
0x08E4	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 412 :: 		}
L_end_vRF4463FifoReset:
0x08E6	0xB001    ADD	SP, SP, #4
0x08E8	0xBD00    POP	(R15)
; end of _vRF4463FifoReset
_spi_write_fifo:
;driverrf4463pro.c, 846 :: 		void spi_write_fifo( void ) {
0x0810	0xB500    PUSH	(R14)
0x0812	0xB081    SUB	SP, SP, #4
;driverrf4463pro.c, 849 :: 		i = 0;
0x0814	0x2000    MOVS	R0, #0
0x0816	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 850 :: 		while ( i != 0xFF ) {
L_spi_write_fifo135:
0x0818	0x9800    LDR	R0, [SP, #0]
0x081A	0xB2C0    UXTB	R0, R0
0x081C	0x28FF    CMP	R0, #255
0x081E	0xD003    BEQ	L_spi_write_fifo136
;driverrf4463pro.c, 851 :: 		i = check_cts();                // Check if you can send Command
0x0820	0xF7FFFE1A  BL	_check_cts+0
0x0824	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 852 :: 		}
0x0826	0xE7F7    B	L_spi_write_fifo135
L_spi_write_fifo136:
;driverrf4463pro.c, 854 :: 		nSEL = 1;
0x0828	0x4A22    LDR	R2, [PC, #136]
0x082A	0x6810    LDR	R0, [R2, #0]
0x082C	0x2101    MOVS	R1, #1
0x082E	0x0309    LSLS	R1, R1, #12
0x0830	0x4308    ORRS	R0, R1
0x0832	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 855 :: 		nSEL = 0;
0x0834	0x4A1F    LDR	R2, [PC, #124]
0x0836	0x6810    LDR	R0, [R2, #0]
0x0838	0x2101    MOVS	R1, #1
0x083A	0x0309    LSLS	R1, R1, #12
0x083C	0x4388    BICS	R0, R1
0x083E	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 856 :: 		ucRf4463SPIByte( WRITE_TX_FIFO );
0x0840	0x2066    MOVS	R0, #102
0x0842	0xB401    PUSH	(R0)
0x0844	0xF7FFFCC2  BL	_ucRf4463SPIByte+0
0x0848	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 858 :: 		if ( ucRF4463Mode == tx_test_mode) {
0x084A	0x481B    LDR	R0, [PC, #108]
0x084C	0x7800    LDRB	R0, [R0, #0]
0x084E	0x2802    CMP	R0, #2
0x0850	0xD114    BNE	L_spi_write_fifo137
;driverrf4463pro.c, 859 :: 		for ( i = 0; i < payload_length; i++ ) {
0x0852	0x2000    MOVS	R0, #0
0x0854	0x9000    STR	R0, [SP, #0]
L_spi_write_fifo138:
0x0856	0x9800    LDR	R0, [SP, #0]
0x0858	0xB2C0    UXTB	R0, R0
0x085A	0x2842    CMP	R0, #66
0x085C	0xD20D    BCS	L_spi_write_fifo139
;driverrf4463pro.c, 860 :: 		ucRf4463SPIByte( tx_test_aa_data[ i ] );   // Send 10 test data
0x085E	0x9900    LDR	R1, [SP, #0]
0x0860	0xB2C9    UXTB	R1, R1
0x0862	0x4816    LDR	R0, [PC, #88]
0x0864	0x1840    ADDS	R0, R0, R1
0x0866	0x7800    LDRB	R0, [R0, #0]
0x0868	0xB401    PUSH	(R0)
0x086A	0xF7FFFCAF  BL	_ucRf4463SPIByte+0
0x086E	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 859 :: 		for ( i = 0; i < payload_length; i++ ) {
0x0870	0x9800    LDR	R0, [SP, #0]
0x0872	0xB2C0    UXTB	R0, R0
0x0874	0x3001    ADDS	R0, #1
0x0876	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 861 :: 		}
0x0878	0xE7ED    B	L_spi_write_fifo138
L_spi_write_fifo139:
;driverrf4463pro.c, 862 :: 		}
0x087A	0xE013    B	L_spi_write_fifo141
L_spi_write_fifo137:
;driverrf4463pro.c, 864 :: 		for ( i = 0; i < payload_length; i++ ) {
0x087C	0x2000    MOVS	R0, #0
0x087E	0x9000    STR	R0, [SP, #0]
L_spi_write_fifo142:
0x0880	0x9800    LDR	R0, [SP, #0]
0x0882	0xB2C0    UXTB	R0, R0
0x0884	0x2842    CMP	R0, #66
0x0886	0xD20D    BCS	L_spi_write_fifo143
;driverrf4463pro.c, 865 :: 		ucRf4463SPIByte( ucRF4463TXdata[ i ] );
0x0888	0x9900    LDR	R1, [SP, #0]
0x088A	0xB2C9    UXTB	R1, R1
0x088C	0x480C    LDR	R0, [PC, #48]
0x088E	0x1840    ADDS	R0, R0, R1
0x0890	0x7800    LDRB	R0, [R0, #0]
0x0892	0xB401    PUSH	(R0)
0x0894	0xF7FFFC9A  BL	_ucRf4463SPIByte+0
0x0898	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 864 :: 		for ( i = 0; i < payload_length; i++ ) {
0x089A	0x9800    LDR	R0, [SP, #0]
0x089C	0xB2C0    UXTB	R0, R0
0x089E	0x3001    ADDS	R0, #1
0x08A0	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 866 :: 		}
0x08A2	0xE7ED    B	L_spi_write_fifo142
L_spi_write_fifo143:
;driverrf4463pro.c, 867 :: 		}
L_spi_write_fifo141:
;driverrf4463pro.c, 868 :: 		nSEL = 1;
0x08A4	0x4A03    LDR	R2, [PC, #12]
0x08A6	0x6810    LDR	R0, [R2, #0]
0x08A8	0x2101    MOVS	R1, #1
0x08AA	0x0309    LSLS	R1, R1, #12
0x08AC	0x4308    ORRS	R0, R1
0x08AE	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 869 :: 		}
L_end_spi_write_fifo:
0x08B0	0xB001    ADD	SP, SP, #4
0x08B2	0xBD00    POP	(R15)
0x08B4	0x04145000  	GPIOB_ODR+0
0x08B8	0x10C72000  	_ucRF4463Mode+0
0x08BC	0x45170000  	_tx_test_aa_data+0
0x08C0	0x449B0000  	_ucRF4463TXdata+0
; end of _spi_write_fifo
_vRF4463EnableTxInterrupt:
;driverrf4463pro.c, 459 :: 		void vRF4463EnableTxInterrupt( void ) {
0x126C	0xB500    PUSH	(R14)
0x126E	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 462 :: 		p[ 0 ] = 0x11;
0x1270	0x4668    MOV	R0, SP
0x1272	0x1C01    ADDS	R1, R0, #0
0x1274	0x2011    MOVS	R0, #17
0x1276	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 463 :: 		p[ 1 ] = 0x01;            // 0x0100
0x1278	0x4668    MOV	R0, SP
0x127A	0x1C41    ADDS	R1, R0, #1
0x127C	0x2001    MOVS	R0, #1
0x127E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 464 :: 		p[ 2 ] = 0x02;            // 2Parameters
0x1280	0x4668    MOV	R0, SP
0x1282	0x1C81    ADDS	R1, R0, #2
0x1284	0x2002    MOVS	R0, #2
0x1286	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 465 :: 		p[ 3 ] = 0x00;            // 0x0100
0x1288	0x4668    MOV	R0, SP
0x128A	0x1CC1    ADDS	R1, R0, #3
0x128C	0x2000    MOVS	R0, #0
0x128E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 466 :: 		p[ 4 ] = 0x01;            // Ph  int
0x1290	0x4668    MOV	R0, SP
0x1292	0x1D01    ADDS	R1, R0, #4
0x1294	0x2001    MOVS	R0, #1
0x1296	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 467 :: 		p[ 5 ] = 0x20;            //  enable  packet sent interrupt
0x1298	0x4668    MOV	R0, SP
0x129A	0x1D41    ADDS	R1, R0, #5
0x129C	0x2020    MOVS	R0, #32
0x129E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 468 :: 		spi_write( 0x06, p );     // enable  packet receive interrupt
0x12A0	0x4668    MOV	R0, SP
0x12A2	0xB401    PUSH	(R0)
0x12A4	0x2006    MOVS	R0, #6
0x12A6	0xB401    PUSH	(R0)
0x12A8	0xF7FFFB20  BL	_spi_write+0
0x12AC	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 469 :: 		}
L_end_vRF4463EnableTxInterrupt:
0x12AE	0xB002    ADD	SP, SP, #8
0x12B0	0xBD00    POP	(R15)
; end of _vRF4463EnableTxInterrupt
_vRF4463TxStart:
;driverrf4463pro.c, 485 :: 		void vRF4463TxStart( void ) {
0x0DB0	0xB500    PUSH	(R14)
0x0DB2	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 488 :: 		p[ 0 ] = START_TX ;              // start Command
0x0DB4	0x4668    MOV	R0, SP
0x0DB6	0x1C01    ADDS	R1, R0, #0
0x0DB8	0x2031    MOVS	R0, #49
0x0DBA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 489 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 1 default
0x0DBC	0x4668    MOV	R0, SP
0x0DBE	0x1C41    ADDS	R1, R0, #1
0x0DC0	0x480B    LDR	R0, [PC, #44]
0x0DC2	0x7800    LDRB	R0, [R0, #0]
0x0DC4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 490 :: 		p[ 2 ] = 0x30;                   // Back after launch Readymode, Do not retransmit, launch immediately
0x0DC6	0x4668    MOV	R0, SP
0x0DC8	0x1C81    ADDS	R1, R0, #2
0x0DCA	0x2030    MOVS	R0, #48
0x0DCC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 491 :: 		p[ 3 ] = 0;
0x0DCE	0x4668    MOV	R0, SP
0x0DD0	0x1CC1    ADDS	R1, R0, #3
0x0DD2	0x2000    MOVS	R0, #0
0x0DD4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 492 :: 		p[ 4 ] = 0;                      // payload_length; // Total to transmit 10 bytes
0x0DD6	0x4668    MOV	R0, SP
0x0DD8	0x1D01    ADDS	R1, R0, #4
0x0DDA	0x2000    MOVS	R0, #0
0x0DDC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 493 :: 		spi_write( 5, p );
0x0DDE	0x4668    MOV	R0, SP
0x0DE0	0xB401    PUSH	(R0)
0x0DE2	0x2005    MOVS	R0, #5
0x0DE4	0xB401    PUSH	(R0)
0x0DE6	0xF7FFFD81  BL	_spi_write+0
0x0DEA	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 494 :: 		}
L_end_vRF4463TxStart:
0x0DEC	0xB002    ADD	SP, SP, #8
0x0DEE	0xBD00    POP	(R15)
0x0DF0	0x009D2000  	_ucRF4463FreqChannel+0
; end of _vRF4463TxStart
_vRF4463RxInit:
;driverrf4463pro.c, 540 :: 		void vRF4463RxInit( void ) {
0x0ED4	0xB500    PUSH	(R14)
;driverrf4463pro.c, 541 :: 		Flag.is_tx = 0;
0x0ED6	0x4A0A    LDR	R2, [PC, #40]
0x0ED8	0x7810    LDRB	R0, [R2, #0]
0x0EDA	0x2102    MOVS	R1, #2
0x0EDC	0x4388    BICS	R0, R1
0x0EDE	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 542 :: 		vRF4463FifoReset();           // fifo_reset();  // Buffer empty
0x0EE0	0xF7FFFCF0  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 543 :: 		vRF4463EnableRxInterrupt();   // enable_rx_interrupt();
0x0EE4	0xF7FFFA3E  BL	_vRF4463EnableRxInterrupt+0
;driverrf4463pro.c, 544 :: 		vRF4463ClearInterrupts();      // clr_interrupt();  // Clear interrupt factor
0x0EE8	0xF000FBB0  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 546 :: 		if ( ucRF4463Mode == rx_test_mode ) {
0x0EEC	0x4805    LDR	R0, [PC, #20]
0x0EEE	0x7800    LDRB	R0, [R0, #0]
0x0EF0	0x2803    CMP	R0, #3
0x0EF2	0xD102    BNE	L_vRF4463RxInit91
;driverrf4463pro.c, 547 :: 		vRF4463RxStartTest();      // rx_start_test();
0x0EF4	0xF7FFFA08  BL	_vRF4463RxStartTest+0
;driverrf4463pro.c, 548 :: 		}
0x0EF8	0xE001    B	L_vRF4463RxInit92
L_vRF4463RxInit91:
;driverrf4463pro.c, 550 :: 		vRF4463RxStart();        // rx_start();    // Enter receiving mode, after receiving data, return to Readymode
0x0EFA	0xF7FFFA5B  BL	_vRF4463RxStart+0
;driverrf4463pro.c, 551 :: 		}
L_vRF4463RxInit92:
;driverrf4463pro.c, 552 :: 		}
L_end_vRF4463RxInit:
0x0EFE	0xBD00    POP	(R15)
0x0F00	0x10C92000  	_Flag+0
0x0F04	0x10C72000  	_ucRF4463Mode+0
; end of _vRF4463RxInit
_vRF4463EnableRxInterrupt:
;driverrf4463pro.c, 443 :: 		void vRF4463EnableRxInterrupt( void ) {
0x0364	0xB500    PUSH	(R14)
0x0366	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 446 :: 		p[ 0 ] = 0x11;
0x0368	0x4668    MOV	R0, SP
0x036A	0x1C01    ADDS	R1, R0, #0
0x036C	0x2011    MOVS	R0, #17
0x036E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 447 :: 		p[ 1 ] = 0x01;            // 0x0100
0x0370	0x4668    MOV	R0, SP
0x0372	0x1C41    ADDS	R1, R0, #1
0x0374	0x2001    MOVS	R0, #1
0x0376	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 448 :: 		p[ 2 ] = 0x03;            // 3Parameters
0x0378	0x4668    MOV	R0, SP
0x037A	0x1C81    ADDS	R1, R0, #2
0x037C	0x2003    MOVS	R0, #3
0x037E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 449 :: 		p[ 3 ] = 0x00;            // 0100
0x0380	0x4668    MOV	R0, SP
0x0382	0x1CC1    ADDS	R1, R0, #3
0x0384	0x2000    MOVS	R0, #0
0x0386	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 450 :: 		p[ 4 ] = 0x03;            // ph, modem int       0x03;
0x0388	0x4668    MOV	R0, SP
0x038A	0x1D01    ADDS	R1, R0, #4
0x038C	0x2003    MOVS	R0, #3
0x038E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 451 :: 		p[ 5 ] = 0x18;            // 0x10;   // Pack received int
0x0390	0x4668    MOV	R0, SP
0x0392	0x1D41    ADDS	R1, R0, #5
0x0394	0x2018    MOVS	R0, #24
0x0396	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 452 :: 		p[ 6 ] = 0x00;            //preamble int, sync int setting
0x0398	0x4668    MOV	R0, SP
0x039A	0x1D81    ADDS	R1, R0, #6
0x039C	0x2000    MOVS	R0, #0
0x039E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 453 :: 		spi_write( 0x07, p );     // enable  packet receive interrupt
0x03A0	0x4668    MOV	R0, SP
0x03A2	0xB401    PUSH	(R0)
0x03A4	0x2007    MOVS	R0, #7
0x03A6	0xB401    PUSH	(R0)
0x03A8	0xF000FAA0  BL	_spi_write+0
0x03AC	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 454 :: 		}
L_end_vRF4463EnableRxInterrupt:
0x03AE	0xB002    ADD	SP, SP, #8
0x03B0	0xBD00    POP	(R15)
; end of _vRF4463EnableRxInterrupt
_vRF4463RxStartTest:
;driverrf4463pro.c, 518 :: 		void vRF4463RxStartTest( void ) {
0x0308	0xB500    PUSH	(R14)
0x030A	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 523 :: 		p[ 0 ] = START_RX;        // start Command
0x030C	0x4668    MOV	R0, SP
0x030E	0x1C01    ADDS	R1, R0, #0
0x0310	0x2032    MOVS	R0, #50
0x0312	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 524 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 0
0x0314	0x4668    MOV	R0, SP
0x0316	0x1C41    ADDS	R1, R0, #1
0x0318	0x4811    LDR	R0, [PC, #68]
0x031A	0x7800    LDRB	R0, [R0, #0]
0x031C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 525 :: 		p[ 2 ] = 0x00;            // Enter receiving mode immediately
0x031E	0x4668    MOV	R0, SP
0x0320	0x1C81    ADDS	R1, R0, #2
0x0322	0x2000    MOVS	R0, #0
0x0324	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 526 :: 		p[ 3 ] = 0;
0x0326	0x4668    MOV	R0, SP
0x0328	0x1CC1    ADDS	R1, R0, #3
0x032A	0x2000    MOVS	R0, #0
0x032C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 528 :: 		p[ 4 ] = 0;
0x032E	0x4668    MOV	R0, SP
0x0330	0x1D01    ADDS	R1, R0, #4
0x0332	0x2000    MOVS	R0, #0
0x0334	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 529 :: 		p[ 5 ] = 0;               // unchanged after preamble timeout
0x0336	0x4668    MOV	R0, SP
0x0338	0x1D41    ADDS	R1, R0, #5
0x033A	0x2000    MOVS	R0, #0
0x033C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 532 :: 		p[ 6 ] = 0x08;
0x033E	0x4668    MOV	R0, SP
0x0340	0x1D81    ADDS	R1, R0, #6
0x0342	0x2008    MOVS	R0, #8
0x0344	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 533 :: 		p[ 7 ] = 0x08;
0x0346	0x4668    MOV	R0, SP
0x0348	0x1DC1    ADDS	R1, R0, #7
0x034A	0x2008    MOVS	R0, #8
0x034C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 534 :: 		spi_write( 8, p );
0x034E	0x4668    MOV	R0, SP
0x0350	0xB401    PUSH	(R0)
0x0352	0x2008    MOVS	R0, #8
0x0354	0xB401    PUSH	(R0)
0x0356	0xF000FAC9  BL	_spi_write+0
0x035A	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 535 :: 		}
L_end_vRF4463RxStartTest:
0x035C	0xB002    ADD	SP, SP, #8
0x035E	0xBD00    POP	(R15)
0x0360	0x009D2000  	_ucRF4463FreqChannel+0
; end of _vRF4463RxStartTest
_vRF4463RxStart:
;driverrf4463pro.c, 499 :: 		void vRF4463RxStart( void ) {
0x03B4	0xB500    PUSH	(R14)
0x03B6	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 502 :: 		p[ 0 ] = START_RX ;              // start Command
0x03B8	0x4668    MOV	R0, SP
0x03BA	0x1C01    ADDS	R1, R0, #0
0x03BC	0x2032    MOVS	R0, #50
0x03BE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 503 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 0
0x03C0	0x4668    MOV	R0, SP
0x03C2	0x1C41    ADDS	R1, R0, #1
0x03C4	0x4811    LDR	R0, [PC, #68]
0x03C6	0x7800    LDRB	R0, [R0, #0]
0x03C8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 504 :: 		p[ 2 ] = 0x00;                   // Enter receiving mode immediately
0x03CA	0x4668    MOV	R0, SP
0x03CC	0x1C81    ADDS	R1, R0, #2
0x03CE	0x2000    MOVS	R0, #0
0x03D0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 505 :: 		p[ 3 ] = 0;
0x03D2	0x4668    MOV	R0, SP
0x03D4	0x1CC1    ADDS	R1, R0, #3
0x03D6	0x2000    MOVS	R0, #0
0x03D8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 506 :: 		p[ 4 ] = 0;                      // payload_length; // Total to receive 10 bytes
0x03DA	0x4668    MOV	R0, SP
0x03DC	0x1D01    ADDS	R1, R0, #4
0x03DE	0x2000    MOVS	R0, #0
0x03E0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 507 :: 		p[ 5 ] = 0;                      // unchanged after preamble timeout
0x03E2	0x4668    MOV	R0, SP
0x03E4	0x1D41    ADDS	R1, R0, #5
0x03E6	0x2000    MOVS	R0, #0
0x03E8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 510 :: 		p[ 6 ] = 0x08;
0x03EA	0x4668    MOV	R0, SP
0x03EC	0x1D81    ADDS	R1, R0, #6
0x03EE	0x2008    MOVS	R0, #8
0x03F0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 511 :: 		p[ 7 ] = 0x08;
0x03F2	0x4668    MOV	R0, SP
0x03F4	0x1DC1    ADDS	R1, R0, #7
0x03F6	0x2008    MOVS	R0, #8
0x03F8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 512 :: 		spi_write( 8, p );
0x03FA	0x4668    MOV	R0, SP
0x03FC	0xB401    PUSH	(R0)
0x03FE	0x2008    MOVS	R0, #8
0x0400	0xB401    PUSH	(R0)
0x0402	0xF000FA73  BL	_spi_write+0
0x0406	0xB002    ADD	SP, SP, #8
;driverrf4463pro.c, 513 :: 		}
L_end_vRF4463RxStart:
0x0408	0xB002    ADD	SP, SP, #8
0x040A	0xBD00    POP	(R15)
0x040C	0x009D2000  	_ucRF4463FreqChannel+0
; end of _vRF4463RxStart
_vRF4463TxCont:
;driverrf4463pro.c, 599 :: 		void vRF4463TxCont( void ) {
0x1444	0xB500    PUSH	(R14)
;driverrf4463pro.c, 602 :: 		vRF4463FifoReset();                     //  fifo_reset();  // Buffer empty
0x1446	0xF7FFFA3D  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 603 :: 		spi_write_fifo();                       // Fill the buffer with data
0x144A	0xF7FFF9E1  BL	_spi_write_fifo+0
;driverrf4463pro.c, 604 :: 		vRF4463EnableTxInterrupt();             //  enable_tx_interrupt();
0x144E	0xF7FFFF0D  BL	_vRF4463EnableTxInterrupt+0
;driverrf4463pro.c, 605 :: 		vRF4463ClearInterrupts();               //  clr_interrupt();  // Clear interrupt factor
0x1452	0xF000F8FB  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 606 :: 		vRF4463TxStart();                       //  tx_start();    // Enter launch mode, start launch
0x1456	0xF7FFFCAB  BL	_vRF4463TxStart+0
;driverrf4463pro.c, 607 :: 		rf_timeout = 0;
0x145A	0x2100    MOVS	R1, #0
0x145C	0x4808    LDR	R0, [PC, #32]
0x145E	0x8001    STRH	R1, [R0, #0]
;driverrf4463pro.c, 608 :: 		Flag.rf_reach_timeout = 0;
0x1460	0x4A08    LDR	R2, [PC, #32]
0x1462	0x7810    LDRB	R0, [R2, #0]
0x1464	0x2104    MOVS	R1, #4
0x1466	0x4388    BICS	R0, R1
0x1468	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 610 :: 		ucRF4463IRQ = 0;
0x146A	0x2100    MOVS	R1, #0
0x146C	0x4806    LDR	R0, [PC, #24]
0x146E	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 613 :: 		while( nIRQ ) {          //nIRQ ) {
L_vRF4463TxCont97:
0x1470	0x4806    LDR	R0, [PC, #24]
0x1472	0x6801    LDR	R1, [R0, #0]
0x1474	0x2001    MOVS	R0, #1
0x1476	0x4008    ANDS	R0, R1
0x1478	0x2800    CMP	R0, #0
0x147A	0xD000    BEQ	L_vRF4463TxCont98
;driverrf4463pro.c, 621 :: 		}
0x147C	0xE7F8    B	L_vRF4463TxCont97
L_vRF4463TxCont98:
;driverrf4463pro.c, 622 :: 		}
L_end_vRF4463TxCont:
0x147E	0xBD00    POP	(R15)
0x1480	0x10CA2000  	_rf_timeout+0
0x1484	0x10C92000  	_Flag+0
0x1488	0x009C2000  	DriverRF4463PROMain_ucRF4463IRQ+0
0x148C	0x1C105000  	GPIOH_IDR+0
; end of _vRF4463TxCont
__UnsignedIntegralToFloat:
;__Lib_MathDouble.c, 249 :: 		
0x14F4	0xB500    PUSH	(R14)
;__Lib_MathDouble.c, 251 :: 		
0x14F6	0xB410    PUSH	(R4)
;__Lib_MathDouble.c, 252 :: 		
0x14F8	0x2200    MOVS	R2, #0
;__Lib_MathDouble.c, 253 :: 		
0x14FA	0x2396    MOVS	R3, #150
;__Lib_MathDouble.c, 254 :: 		
0x14FC	0x4611    MOV	R1, R2
;__Lib_MathDouble.c, 255 :: 		
0x14FE	0xF7FFFC19  BL	__Lib_MathDouble___Float_Aux+0
;__Lib_MathDouble.c, 256 :: 		
0x1502	0xBC10    POP	(R4)
;__Lib_MathDouble.c, 258 :: 		
L_end__UnsignedIntegralToFloat:
0x1504	0xBD00    POP	(R15)
; end of __UnsignedIntegralToFloat
__Lib_MathDouble___Float_Aux:
;__Lib_MathDouble.c, 1764 :: 		
0x0D34	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 1766 :: 		
0x0D36	0xB470    PUSH	(R4, R5, R6)
;__Lib_MathDouble.c, 1767 :: 		
0x0D38	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 1768 :: 		
0x0D3A	0x0C05    LSRS	R5, R0, #16
;__Lib_MathDouble.c, 1769 :: 		
0x0D3C	0xD105    BNE	__Float_Aux_Lab_1
;__Lib_MathDouble.c, 1770 :: 		
0x0D3E	0x2410    MOVS	R4, #16
;__Lib_MathDouble.c, 1771 :: 		
0x0D40	0x0400    LSLS	R0, R0, #16
;__Lib_MathDouble.c, 1772 :: 		
0x0D42	0xD102    BNE	__Float_Aux_Lab_1
;__Lib_MathDouble.c, 1773 :: 		
0x0D44	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 1774 :: 		
0x0D46	0xD022    BEQ	__Float_Aux_Lab_2
;__Lib_MathDouble.c, 1775 :: 		
0x0D48	0x2411    MOVS	R4, #17
;__Lib_MathDouble.c, 1777 :: 		
__Float_Aux_Lab_1:
;__Lib_MathDouble.c, 1778 :: 		
0x0D4A	0x0E05    LSRS	R5, R0, #24
;__Lib_MathDouble.c, 1779 :: 		
0x0D4C	0xD101    BNE	__Float_Aux_Lab_3
;__Lib_MathDouble.c, 1780 :: 		
0x0D4E	0x3408    ADDS	R4, #8
;__Lib_MathDouble.c, 1781 :: 		
0x0D50	0x0200    LSLS	R0, R0, #8
;__Lib_MathDouble.c, 1783 :: 		
__Float_Aux_Lab_3:
;__Lib_MathDouble.c, 1784 :: 		
0x0D52	0x0F05    LSRS	R5, R0, #28
;__Lib_MathDouble.c, 1785 :: 		
0x0D54	0xD101    BNE	__Float_Aux_Lab_4
;__Lib_MathDouble.c, 1786 :: 		
0x0D56	0x1D24    ADDS	R4, R4, #4
;__Lib_MathDouble.c, 1787 :: 		
0x0D58	0x0100    LSLS	R0, R0, #4
;__Lib_MathDouble.c, 1789 :: 		
__Float_Aux_Lab_4:
;__Lib_MathDouble.c, 1790 :: 		
0x0D5A	0x0F85    LSRS	R5, R0, #30
;__Lib_MathDouble.c, 1791 :: 		
0x0D5C	0xD101    BNE	__Float_Aux_Lab_5
;__Lib_MathDouble.c, 1792 :: 		
0x0D5E	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 1793 :: 		
0x0D60	0x0080    LSLS	R0, R0, #2
;__Lib_MathDouble.c, 1795 :: 		
__Float_Aux_Lab_5:
;__Lib_MathDouble.c, 1796 :: 		
0x0D62	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 1797 :: 		
0x0D64	0xDB01    BLT	__Float_Aux_Lab_6
;__Lib_MathDouble.c, 1798 :: 		
0x0D66	0x1C64    ADDS	R4, R4, #1
;__Lib_MathDouble.c, 1799 :: 		
0x0D68	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 1801 :: 		
__Float_Aux_Lab_6:
;__Lib_MathDouble.c, 1802 :: 		
0x0D6A	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 1803 :: 		
0x0D6C	0xD008    BEQ	__Float_Aux_Lab_7
;__Lib_MathDouble.c, 1804 :: 		
0x0D6E	0x2520    MOVS	R5, #32
;__Lib_MathDouble.c, 1805 :: 		
0x0D70	0x1B2E    SUBS	R6, R5, R4
;__Lib_MathDouble.c, 1806 :: 		
0x0D72	0x460D    MOV	R5, R1
;__Lib_MathDouble.c, 1807 :: 		
0x0D74	0x40F5    LSRS	R5, R6
;__Lib_MathDouble.c, 1808 :: 		
0x0D76	0x40A1    LSLS	R1, R4
;__Lib_MathDouble.c, 1809 :: 		
0x0D78	0xD000    BEQ	__Float_Aux_Lab_9
;__Lib_MathDouble.c, 1810 :: 		
0x0D7A	0x2101    MOVS	R1, #1
;__Lib_MathDouble.c, 1812 :: 		
__Float_Aux_Lab_9:
;__Lib_MathDouble.c, 1813 :: 		
0x0D7C	0x430D    ORRS	R5, R1
;__Lib_MathDouble.c, 1814 :: 		
0x0D7E	0x4328    ORRS	R0, R5
;__Lib_MathDouble.c, 1816 :: 		
__Float_Aux_Lab_7:
;__Lib_MathDouble.c, 1817 :: 		
0x0D80	0x1B1B    SUBS	R3, R3, R4
;__Lib_MathDouble.c, 1818 :: 		
0x0D82	0x0601    LSLS	R1, R0, #24
;__Lib_MathDouble.c, 1819 :: 		
0x0D84	0x1DDB    ADDS	R3, R3, #7
;__Lib_MathDouble.c, 1820 :: 		
0x0D86	0x0A00    LSRS	R0, R0, #8
;__Lib_MathDouble.c, 1821 :: 		
0x0D88	0x2B00    CMP	R3, #0
;__Lib_MathDouble.c, 1822 :: 		
0x0D8A	0xDA02    BGE	__Float_Aux_Lab_8
;__Lib_MathDouble.c, 1823 :: 		
0x0D8C	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1825 :: 		
__Float_Aux_Lab_2:
;__Lib_MathDouble.c, 1826 :: 		
0x0D8E	0xBC70    POP	(R4, R5, R6)
;__Lib_MathDouble.c, 1828 :: 		
0x0D90	0xE00C    B	__Float_Aux_Lab_end
;__Lib_MathDouble.c, 1830 :: 		
__Float_Aux_Lab_8:
;__Lib_MathDouble.c, 1831 :: 		
0x0D92	0x05DB    LSLS	R3, R3, #23
;__Lib_MathDouble.c, 1832 :: 		
0x0D94	0x1818    ADDS	R0, R3, R0
;__Lib_MathDouble.c, 1833 :: 		
0x0D96	0x1880    ADDS	R0, R0, R2
;__Lib_MathDouble.c, 1834 :: 		
0x0D98	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 1835 :: 		
0x0D9A	0xDAF8    BGE	__Float_Aux_Lab_2
;__Lib_MathDouble.c, 1836 :: 		
0x0D9C	0x1C40    ADDS	R0, R0, #1
;__Lib_MathDouble.c, 1837 :: 		
0x0D9E	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 1838 :: 		
0x0DA0	0xD1F5    BNE	__Float_Aux_Lab_2
;__Lib_MathDouble.c, 1839 :: 		
0x0DA2	0xBC70    POP	(R4, R5, R6)
;__Lib_MathDouble.c, 1840 :: 		
0x0DA4	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 1841 :: 		
0x0DA6	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 1842 :: 		
0x0DA8	0xE000    B	__Float_Aux_Lab_end
;__Lib_MathDouble.c, 1843 :: 		
0x0DAA	0x0000    MOVS	R0, R0
;__Lib_MathDouble.c, 1845 :: 		
__Float_Aux_Lab_end:
;__Lib_MathDouble.c, 1847 :: 		
L_end___Float_Aux:
0x0DAC	0xB001    ADD	SP, SP, #4
0x0DAE	0x4770    BX	LR
; end of __Lib_MathDouble___Float_Aux
__Div_FP:
;__Lib_MathDouble.c, 582 :: 		
0x1310	0xB500    PUSH	(R14)
;__Lib_MathDouble.c, 584 :: 		
0x1312	0xB470    PUSH	(R4, R5, R6)
;__Lib_MathDouble.c, 588 :: 		
0x1314	0x0014    MOVS	R4, R2
;__Lib_MathDouble.c, 589 :: 		
0x1316	0xD105    BNE	_Div_FP_Lab_10
;__Lib_MathDouble.c, 591 :: 		
0x1318	0x0000    MOVS	R0, R0
;__Lib_MathDouble.c, 592 :: 		
0x131A	0xD501    BPL	_Div_FP_Lab_11
;__Lib_MathDouble.c, 594 :: 		
0x131C	0x4822    LDR	R0, [PC, #136]
;__Lib_MathDouble.c, 595 :: 		
0x131E	0xE040    B	_Div_FP_end
;__Lib_MathDouble.c, 597 :: 		
_Div_FP_Lab_11:
;__Lib_MathDouble.c, 598 :: 		
0x1320	0x4822    LDR	R0, [PC, #136]
;__Lib_MathDouble.c, 599 :: 		
0x1322	0xE03E    B	_Div_FP_end
;__Lib_MathDouble.c, 602 :: 		
_Div_FP_Lab_10:
;__Lib_MathDouble.c, 604 :: 		
0x1324	0x4611    MOV	R1, R2
;__Lib_MathDouble.c, 605 :: 		
0x1326	0x4602    MOV	R2, R0
;__Lib_MathDouble.c, 606 :: 		
0x1328	0x404A    EORS	R2, R1
;__Lib_MathDouble.c, 607 :: 		
0x132A	0x0FD5    LSRS	R5, R2, #31
;__Lib_MathDouble.c, 608 :: 		
0x132C	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 609 :: 		
0x132E	0x004A    LSLS	R2, R1, #1
;__Lib_MathDouble.c, 610 :: 		
0x1330	0x07ED    LSLS	R5, R5, #31
;__Lib_MathDouble.c, 611 :: 		
0x1332	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 612 :: 		
0x1334	0x0852    LSRS	R2, R2, #1
;__Lib_MathDouble.c, 613 :: 		
0x1336	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 614 :: 		
0x1338	0xD016    BEQ	_Div_FP_Lab_1
;__Lib_MathDouble.c, 615 :: 		
0x133A	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 616 :: 		
0x133C	0xD014    BEQ	_Div_FP_Lab_1
;__Lib_MathDouble.c, 617 :: 		
0x133E	0x0041    LSLS	R1, R0, #1
;__Lib_MathDouble.c, 618 :: 		
0x1340	0x0E0C    LSRS	R4, R1, #24
;__Lib_MathDouble.c, 619 :: 		
0x1342	0x0051    LSLS	R1, R2, #1
;__Lib_MathDouble.c, 620 :: 		
0x1344	0x0E0B    LSRS	R3, R1, #24
;__Lib_MathDouble.c, 621 :: 		
0x1346	0x0241    LSLS	R1, R0, #9
;__Lib_MathDouble.c, 622 :: 		
0x1348	0x2001    MOVS	R0, #1
;__Lib_MathDouble.c, 623 :: 		
0x134A	0x05C0    LSLS	R0, R0, #23
;__Lib_MathDouble.c, 624 :: 		
0x134C	0x0252    LSLS	R2, R2, #9
;__Lib_MathDouble.c, 625 :: 		
0x134E	0x0A49    LSRS	R1, R1, #9
;__Lib_MathDouble.c, 626 :: 		
0x1350	0x0A52    LSRS	R2, R2, #9
;__Lib_MathDouble.c, 627 :: 		
0x1352	0x1AE4    SUBS	R4, R4, R3
;__Lib_MathDouble.c, 628 :: 		
0x1354	0x1809    ADDS	R1, R1, R0
;__Lib_MathDouble.c, 629 :: 		
0x1356	0x1812    ADDS	R2, R2, R0
;__Lib_MathDouble.c, 630 :: 		
0x1358	0x347D    ADDS	R4, #125
;__Lib_MathDouble.c, 631 :: 		
0x135A	0x4291    CMP	R1, R2
;__Lib_MathDouble.c, 632 :: 		
0x135C	0xD301    BCC	_Div_FP_Lab_2
;__Lib_MathDouble.c, 633 :: 		
0x135E	0x1C64    ADDS	R4, R4, #1
;__Lib_MathDouble.c, 634 :: 		
0x1360	0xE000    B	_Div_FP_Lab_3
;__Lib_MathDouble.c, 636 :: 		
_Div_FP_Lab_2:
;__Lib_MathDouble.c, 637 :: 		
0x1362	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 639 :: 		
_Div_FP_Lab_3:
;__Lib_MathDouble.c, 640 :: 		
0x1364	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 641 :: 		
0x1366	0xDA01    BGE	_Div_FP_Lab_4
;__Lib_MathDouble.c, 643 :: 		
_Div_FP_Lab_1:
;__Lib_MathDouble.c, 644 :: 		
0x1368	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 646 :: 		
0x136A	0xE01A    B	_Div_FP_end
;__Lib_MathDouble.c, 649 :: 		
_Div_FP_Lab_4:
;__Lib_MathDouble.c, 650 :: 		
0x136C	0x2300    MOVS	R3, #0
;__Lib_MathDouble.c, 652 :: 		
_Div_FP_Lab_6:
;__Lib_MathDouble.c, 653 :: 		
0x136E	0x4291    CMP	R1, R2
;__Lib_MathDouble.c, 654 :: 		
0x1370	0xD301    BCC	_Div_FP_Lab_5
;__Lib_MathDouble.c, 655 :: 		
0x1372	0x1A89    SUBS	R1, R1, R2
;__Lib_MathDouble.c, 656 :: 		
0x1374	0x4303    ORRS	R3, R0
;__Lib_MathDouble.c, 658 :: 		
_Div_FP_Lab_5:
;__Lib_MathDouble.c, 659 :: 		
0x1376	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 660 :: 		
0x1378	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 661 :: 		
0x137A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 662 :: 		
0x137C	0xD1F7    BNE	_Div_FP_Lab_6
;__Lib_MathDouble.c, 663 :: 		
0x137E	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 664 :: 		
0x1380	0xD00A    BEQ	_Div_FP_Lab_7
;__Lib_MathDouble.c, 665 :: 		
0x1382	0x4291    CMP	R1, R2
;__Lib_MathDouble.c, 666 :: 		
0x1384	0xD102    BNE	_Div_FP_Lab_8
;__Lib_MathDouble.c, 667 :: 		
0x1386	0x2101    MOVS	R1, #1
;__Lib_MathDouble.c, 668 :: 		
0x1388	0x07C9    LSLS	R1, R1, #31
;__Lib_MathDouble.c, 669 :: 		
0x138A	0xE005    B	_Div_FP_Lab_7
;__Lib_MathDouble.c, 671 :: 		
_Div_FP_Lab_8:
;__Lib_MathDouble.c, 672 :: 		
0x138C	0x4291    CMP	R1, R2
;__Lib_MathDouble.c, 673 :: 		
0x138E	0xD201    BCS	_Div_FP_Lab_9
;__Lib_MathDouble.c, 674 :: 		
0x1390	0x2101    MOVS	R1, #1
;__Lib_MathDouble.c, 675 :: 		
0x1392	0xE001    B	_Div_FP_Lab_7
;__Lib_MathDouble.c, 677 :: 		
_Div_FP_Lab_9:
;__Lib_MathDouble.c, 678 :: 		
0x1394	0x2101    MOVS	R1, #1
;__Lib_MathDouble.c, 679 :: 		
0x1396	0x43C9    MVNS	R1, R1
;__Lib_MathDouble.c, 681 :: 		
_Div_FP_Lab_7:
;__Lib_MathDouble.c, 682 :: 		
0x1398	0x05E0    LSLS	R0, R4, #23
;__Lib_MathDouble.c, 683 :: 		
0x139A	0x18C0    ADDS	R0, R0, R3
;__Lib_MathDouble.c, 684 :: 		
0x139C	0x1940    ADDS	R0, R0, R5
;__Lib_MathDouble.c, 685 :: 		
0x139E	0xF7FFFD29  BL	__Lib_MathDouble___Fp+0
;__Lib_MathDouble.c, 687 :: 		
_Div_FP_end:
;__Lib_MathDouble.c, 688 :: 		
0x13A2	0xBC70    POP	(R4, R5, R6)
;__Lib_MathDouble.c, 689 :: 		
0x13A4	0xE004    B	#8
0x13A6	0xBF00    NOP
0x13A8	0x0000FF80  	#-8388608
0x13AC	0x00007F80  	#2139095040
;__Lib_MathDouble.c, 690 :: 		
L_end__Div_FP:
0x13B0	0xBD00    POP	(R15)
; end of __Div_FP
__Lib_MathDouble___Fp:
;__Lib_MathDouble.c, 2028 :: 		
0x0DF4	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 2030 :: 		
0x0DF6	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 2031 :: 		
0x0DF8	0xDA04    BGE	__Fp_Lab_end
;__Lib_MathDouble.c, 2032 :: 		
0x0DFA	0x1C40    ADDS	R0, R0, #1
;__Lib_MathDouble.c, 2033 :: 		
0x0DFC	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 2034 :: 		
0x0DFE	0xD101    BNE	__Fp_Lab_end
;__Lib_MathDouble.c, 2035 :: 		
0x0E00	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 2036 :: 		
0x0E02	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 2038 :: 		
__Fp_Lab_end:
;__Lib_MathDouble.c, 2040 :: 		
L_end___Fp:
0x0E04	0xB001    ADD	SP, SP, #4
0x0E06	0x4770    BX	LR
; end of __Lib_MathDouble___Fp
__Sub_FP:
;__Lib_MathDouble.c, 481 :: 		
0x1434	0xB500    PUSH	(R14)
;__Lib_MathDouble.c, 483 :: 		
0x1436	0x2101    MOVS	R1, #1
;__Lib_MathDouble.c, 484 :: 		
0x1438	0x07C9    LSLS	R1, R1, #31
;__Lib_MathDouble.c, 485 :: 		
0x143A	0x404A    EORS	R2, R1
;__Lib_MathDouble.c, 486 :: 		
0x143C	0xF7FFFCE4  BL	__Add_FP+0
;__Lib_MathDouble.c, 488 :: 		
L_end__Sub_FP:
0x1440	0xBD00    POP	(R15)
; end of __Sub_FP
__Add_FP:
;__Lib_MathDouble.c, 369 :: 		
0x0E08	0xB500    PUSH	(R14)
;__Lib_MathDouble.c, 371 :: 		
0x0E0A	0xB4F8    PUSH	(R3, R4, R5, R6, R7)
;__Lib_MathDouble.c, 373 :: 		
0x0E0C	0x4611    MOV	R1, R2
;__Lib_MathDouble.c, 375 :: 		
0x0E0E	0x4602    MOV	R2, R0
;__Lib_MathDouble.c, 376 :: 		
0x0E10	0x404A    EORS	R2, R1
;__Lib_MathDouble.c, 377 :: 		
0x0E12	0x0FD4    LSRS	R4, R2, #31
;__Lib_MathDouble.c, 378 :: 		
0x0E14	0x0042    LSLS	R2, R0, #1
;__Lib_MathDouble.c, 379 :: 		
0x0E16	0x004B    LSLS	R3, R1, #1
;__Lib_MathDouble.c, 380 :: 		
0x0E18	0x0852    LSRS	R2, R2, #1
;__Lib_MathDouble.c, 381 :: 		
0x0E1A	0x085B    LSRS	R3, R3, #1
;__Lib_MathDouble.c, 382 :: 		
0x0E1C	0x429A    CMP	R2, R3
;__Lib_MathDouble.c, 383 :: 		
0x0E1E	0xD202    BCS	_Add_FP_Lab_1
;__Lib_MathDouble.c, 384 :: 		
0x0E20	0x4602    MOV	R2, R0
;__Lib_MathDouble.c, 385 :: 		
0x0E22	0x4608    MOV	R0, R1
;__Lib_MathDouble.c, 386 :: 		
0x0E24	0x4611    MOV	R1, R2
;__Lib_MathDouble.c, 388 :: 		
_Add_FP_Lab_1:
;__Lib_MathDouble.c, 389 :: 		
0x0E26	0x004A    LSLS	R2, R1, #1
;__Lib_MathDouble.c, 391 :: 		
0x0E28	0xD041    BEQ	_Add_FP_Lab_end
;__Lib_MathDouble.c, 392 :: 		
0x0E2A	0x0DC3    LSRS	R3, R0, #23
;__Lib_MathDouble.c, 393 :: 		
0x0E2C	0x004A    LSLS	R2, R1, #1
;__Lib_MathDouble.c, 394 :: 		
0x0E2E	0xB2DD    UXTB	R5, R3
;__Lib_MathDouble.c, 395 :: 		
0x0E30	0x0E12    LSRS	R2, R2, #24
;__Lib_MathDouble.c, 396 :: 		
0x0E32	0x1AAD    SUBS	R5, R5, R2
;__Lib_MathDouble.c, 397 :: 		
0x0E34	0x2D20    CMP	R5, #32
;__Lib_MathDouble.c, 398 :: 		
0x0E36	0xDA35    BGE	_Add_FP_Lab_2
;__Lib_MathDouble.c, 399 :: 		
0x0E38	0x0249    LSLS	R1, R1, #9
;__Lib_MathDouble.c, 400 :: 		
0x0E3A	0x2601    MOVS	R6, #1
;__Lib_MathDouble.c, 401 :: 		
0x0E3C	0x0A49    LSRS	R1, R1, #9
;__Lib_MathDouble.c, 402 :: 		
0x0E3E	0x05F6    LSLS	R6, R6, #23
;__Lib_MathDouble.c, 403 :: 		
0x0E40	0x198A    ADDS	R2, R1, R6
;__Lib_MathDouble.c, 404 :: 		
0x0E42	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 405 :: 		
0x0E44	0xD000    BEQ	_Add_FP_Lab_3
;__Lib_MathDouble.c, 406 :: 		
0x0E46	0x4252    RSBS	R2, R2, #0
;__Lib_MathDouble.c, 408 :: 		
_Add_FP_Lab_3:
;__Lib_MathDouble.c, 409 :: 		
0x0E48	0x2120    MOVS	R1, #32
;__Lib_MathDouble.c, 410 :: 		
0x0E4A	0x1B4F    SUBS	R7, R1, R5
;__Lib_MathDouble.c, 411 :: 		
0x0E4C	0x4611    MOV	R1, R2
;__Lib_MathDouble.c, 412 :: 		
0x0E4E	0x40B9    LSLS	R1, R7
;__Lib_MathDouble.c, 413 :: 		
0x0E50	0x412A    ASRS	R2, R5
;__Lib_MathDouble.c, 414 :: 		
0x0E52	0x1810    ADDS	R0, R2, R0
;__Lib_MathDouble.c, 415 :: 		
0x0E54	0x0DC2    LSRS	R2, R0, #23
;__Lib_MathDouble.c, 416 :: 		
0x0E56	0x429A    CMP	R2, R3
;__Lib_MathDouble.c, 417 :: 		
0x0E58	0xD021    BEQ	_Add_FP_Lab_4
;__Lib_MathDouble.c, 418 :: 		
0x0E5A	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 419 :: 		
0x0E5C	0xD017    BEQ	_Add_FP_Lab_5
;__Lib_MathDouble.c, 420 :: 		
0x0E5E	0x2D01    CMP	R5, #1
;__Lib_MathDouble.c, 421 :: 		
0x0E60	0xDC08    BGT	_Add_FP_Lab_6
;__Lib_MathDouble.c, 422 :: 		
0x0E62	0x05DA    LSLS	R2, R3, #23
;__Lib_MathDouble.c, 423 :: 		
0x0E64	0x1A80    SUBS	R0, R0, R2
;__Lib_MathDouble.c, 424 :: 		
0x0E66	0x0FD2    LSRS	R2, R2, #31
;__Lib_MathDouble.c, 425 :: 		
0x0E68	0x1980    ADDS	R0, R0, R6
;__Lib_MathDouble.c, 426 :: 		
0x0E6A	0x07D2    LSLS	R2, R2, #31
;__Lib_MathDouble.c, 427 :: 		
0x0E6C	0xB2DB    UXTB	R3, R3
;__Lib_MathDouble.c, 428 :: 		
0x0E6E	0xF7FFFF61  BL	__Lib_MathDouble___Float_Aux+0
;__Lib_MathDouble.c, 430 :: 		
0x0E72	0xE01C    B	_Add_FP_Lab_end
;__Lib_MathDouble.c, 433 :: 		
_Add_FP_Lab_6:
;__Lib_MathDouble.c, 434 :: 		
0x0E74	0x05DA    LSLS	R2, R3, #23
;__Lib_MathDouble.c, 435 :: 		
0x0E76	0x1A80    SUBS	R0, R0, R2
;__Lib_MathDouble.c, 436 :: 		
0x0E78	0x2301    MOVS	R3, #1
;__Lib_MathDouble.c, 437 :: 		
0x0E7A	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 438 :: 		
0x0E7C	0x061B    LSLS	R3, R3, #24
;__Lib_MathDouble.c, 439 :: 		
0x0E7E	0x18C0    ADDS	R0, R0, R3
;__Lib_MathDouble.c, 440 :: 		
0x0E80	0x1880    ADDS	R0, R0, R2
;__Lib_MathDouble.c, 441 :: 		
0x0E82	0x425A    RSBS	R2, R3, #0
;__Lib_MathDouble.c, 442 :: 		
0x0E84	0x1880    ADDS	R0, R0, R2
;__Lib_MathDouble.c, 443 :: 		
0x0E86	0x0FCA    LSRS	R2, R1, #31
;__Lib_MathDouble.c, 444 :: 		
0x0E88	0x4310    ORRS	R0, R2
;__Lib_MathDouble.c, 445 :: 		
0x0E8A	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 446 :: 		
0x0E8C	0xE007    B	_Add_FP_Lab_4
;__Lib_MathDouble.c, 448 :: 		
_Add_FP_Lab_5:
;__Lib_MathDouble.c, 449 :: 		
0x0E8E	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 450 :: 		
0x0E90	0x07C2    LSLS	R2, R0, #31
;__Lib_MathDouble.c, 451 :: 		
0x0E92	0x4311    ORRS	R1, R2
;__Lib_MathDouble.c, 452 :: 		
0x0E94	0x05DA    LSLS	R2, R3, #23
;__Lib_MathDouble.c, 453 :: 		
0x0E96	0x1A80    SUBS	R0, R0, R2
;__Lib_MathDouble.c, 454 :: 		
0x0E98	0x1980    ADDS	R0, R0, R6
;__Lib_MathDouble.c, 455 :: 		
0x0E9A	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 456 :: 		
0x0E9C	0x1880    ADDS	R0, R0, R2
;__Lib_MathDouble.c, 458 :: 		
_Add_FP_Lab_4:
;__Lib_MathDouble.c, 459 :: 		
0x0E9E	0xF7FFFFA9  BL	__Lib_MathDouble___Fp+0
;__Lib_MathDouble.c, 461 :: 		
0x0EA2	0xE004    B	_Add_FP_Lab_end
;__Lib_MathDouble.c, 464 :: 		
_Add_FP_Lab_2:
;__Lib_MathDouble.c, 465 :: 		
0x0EA4	0x0061    LSLS	R1, R4, #1
;__Lib_MathDouble.c, 466 :: 		
0x0EA6	0x2201    MOVS	R2, #1
;__Lib_MathDouble.c, 467 :: 		
0x0EA8	0x1A51    SUBS	R1, R2, R1
;__Lib_MathDouble.c, 468 :: 		
0x0EAA	0x1B00    SUBS	R0, R0, R4
;__Lib_MathDouble.c, 469 :: 		
0x0EAC	0xE7F7    B	_Add_FP_Lab_4
;__Lib_MathDouble.c, 471 :: 		
_Add_FP_Lab_end:
;__Lib_MathDouble.c, 472 :: 		
0x0EAE	0xBCF8    POP	(R3, R4, R5, R6, R7)
;__Lib_MathDouble.c, 474 :: 		
L_end__Add_FP:
0x0EB0	0xBD00    POP	(R15)
; end of __Add_FP
_spi_read_fifo:
;driverrf4463pro.c, 874 :: 		void spi_read_fifo( void ) {
0x13B4	0xB500    PUSH	(R14)
0x13B6	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 877 :: 		i = 0;
0x13B8	0x2000    MOVS	R0, #0
0x13BA	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 878 :: 		while ( i != 0xFF ) {
L_spi_read_fifo145:
0x13BC	0x9800    LDR	R0, [SP, #0]
0x13BE	0xB2C0    UXTB	R0, R0
0x13C0	0x28FF    CMP	R0, #255
0x13C2	0xD003    BEQ	L_spi_read_fifo146
;driverrf4463pro.c, 879 :: 		i = check_cts();                   // Check if you can send Command
0x13C4	0xF7FFF848  BL	_check_cts+0
0x13C8	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 880 :: 		}
0x13CA	0xE7F7    B	L_spi_read_fifo145
L_spi_read_fifo146:
;driverrf4463pro.c, 882 :: 		nSEL = 1;
0x13CC	0x4A17    LDR	R2, [PC, #92]
0x13CE	0x6810    LDR	R0, [R2, #0]
0x13D0	0x2101    MOVS	R1, #1
0x13D2	0x0309    LSLS	R1, R1, #12
0x13D4	0x4308    ORRS	R0, R1
0x13D6	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 883 :: 		nSEL = 0;
0x13D8	0x4A14    LDR	R2, [PC, #80]
0x13DA	0x6810    LDR	R0, [R2, #0]
0x13DC	0x2101    MOVS	R1, #1
0x13DE	0x0309    LSLS	R1, R1, #12
0x13E0	0x4388    BICS	R0, R1
0x13E2	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 884 :: 		ucRf4463SPIByte( READ_RX_FIFO );
0x13E4	0x2077    MOVS	R0, #119
0x13E6	0xB401    PUSH	(R0)
0x13E8	0xF7FEFEF0  BL	_ucRf4463SPIByte+0
0x13EC	0xB001    ADD	SP, SP, #4
;driverrf4463pro.c, 885 :: 		for ( i = 0; i < payload_length; i++ ) {
0x13EE	0x2000    MOVS	R0, #0
0x13F0	0x9000    STR	R0, [SP, #0]
L_spi_read_fifo147:
0x13F2	0x9800    LDR	R0, [SP, #0]
0x13F4	0xB2C0    UXTB	R0, R0
0x13F6	0x2842    CMP	R0, #66
0x13F8	0xD210    BCS	L_spi_read_fifo148
;driverrf4463pro.c, 886 :: 		rx_buf[ i ] = ucRf4463SPIByte( 0xFF );      // Receive 10 test data
0x13FA	0x9900    LDR	R1, [SP, #0]
0x13FC	0xB2C9    UXTB	R1, R1
0x13FE	0x480C    LDR	R0, [PC, #48]
0x1400	0x1840    ADDS	R0, R0, R1
0x1402	0x9001    STR	R0, [SP, #4]
0x1404	0x20FF    MOVS	R0, #255
0x1406	0xB401    PUSH	(R0)
0x1408	0xF7FEFEE0  BL	_ucRf4463SPIByte+0
0x140C	0xB001    ADD	SP, SP, #4
0x140E	0x9901    LDR	R1, [SP, #4]
0x1410	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 885 :: 		for ( i = 0; i < payload_length; i++ ) {
0x1412	0x9800    LDR	R0, [SP, #0]
0x1414	0xB2C0    UXTB	R0, R0
0x1416	0x3001    ADDS	R0, #1
0x1418	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 887 :: 		}
0x141A	0xE7EA    B	L_spi_read_fifo147
L_spi_read_fifo148:
;driverrf4463pro.c, 888 :: 		nSEL = 1;
0x141C	0x4A03    LDR	R2, [PC, #12]
0x141E	0x6810    LDR	R0, [R2, #0]
0x1420	0x2101    MOVS	R1, #1
0x1422	0x0309    LSLS	R1, R1, #12
0x1424	0x4308    ORRS	R0, R1
0x1426	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 889 :: 		}
L_end_spi_read_fifo:
0x1428	0xB002    ADD	SP, SP, #8
0x142A	0xBD00    POP	(R15)
0x142C	0x04145000  	GPIOB_ODR+0
0x1430	0x10D42000  	_rx_buf+0
; end of _spi_read_fifo
_getRSSI:
;DriverRF4463PROMain.c, 700 :: 		void getRSSI()
0x1490	0xB500    PUSH	(R14)
0x1492	0xB085    SUB	SP, SP, #20
;DriverRF4463PROMain.c, 702 :: 		ShortToStr(rssi,Value );
0x1494	0x4813    LDR	R0, [PC, #76]
0x1496	0x6800    LDR	R0, [R0, #0]
0x1498	0xF7FFFAFC  BL	__FloatToSignedIntegral+0
0x149C	0xB240    SXTB	R0, R0
0x149E	0xB244    SXTB	R4, R0
0x14A0	0x4911    LDR	R1, [PC, #68]
0x14A2	0xB260    SXTB	R0, R4
0x14A4	0xF7FFFA58  BL	_ShortToStr+0
;DriverRF4463PROMain.c, 703 :: 		UART1_Write_Text("[ RSSI ] = ");
0x14A8	0x466E    MOV	R6, SP
0x14AA	0x250C    MOVS	R5, #12
0x14AC	0x19AD    ADDS	R5, R5, R6
0x14AE	0x4F0F    LDR	R7, [PC, #60]
0x14B0	0xF000F8A4  BL	___CC2DW+0
0x14B4	0x4668    MOV	R0, SP
0x14B6	0x4604    MOV	R4, R0
0x14B8	0x4620    MOV	R0, R4
0x14BA	0xF000F8BF  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 704 :: 		UART1_Write_Text( Value );
0x14BE	0x480A    LDR	R0, [PC, #40]
0x14C0	0xF000F8BC  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 705 :: 		UART1_Write_Text(" dBm\r\n");
0x14C4	0x260C    MOVS	R6, #12
0x14C6	0x446E    ADD	R6, SP, R6
0x14C8	0x2507    MOVS	R5, #7
0x14CA	0x19AD    ADDS	R5, R5, R6
0x14CC	0x4F08    LDR	R7, [PC, #32]
0x14CE	0xF000F895  BL	___CC2DW+0
0x14D2	0x200C    MOVS	R0, #12
0x14D4	0x4468    ADD	R0, SP, R0
0x14D6	0x4604    MOV	R4, R0
0x14D8	0x4620    MOV	R0, R4
0x14DA	0xF000F8AF  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 706 :: 		}
L_end_getRSSI:
0x14DE	0xB005    ADD	SP, SP, #20
0x14E0	0xBD00    POP	(R15)
0x14E2	0xBF00    NOP
0x14E4	0x10CC2000  	_rssi+0
0x14E8	0x10D02000  	_Value+0
0x14EC	0x44E00000  	?ICS?lstr23_DriverRF4463PROMain+0
0x14F0	0x44EC0000  	?ICS?lstr24_DriverRF4463PROMain+0
; end of _getRSSI
__FloatToSignedIntegral:
;__Lib_MathDouble.c, 22 :: 		
0x0A94	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 24 :: 		
0x0A96	0x0FC2    LSRS	R2, R0, #31
;__Lib_MathDouble.c, 25 :: 		
0x0A98	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 26 :: 		
0x0A9A	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 27 :: 		
0x0A9C	0x0DC1    LSRS	R1, R0, #23
;__Lib_MathDouble.c, 28 :: 		
0x0A9E	0x0240    LSLS	R0, R0, #9
;__Lib_MathDouble.c, 29 :: 		
0x0AA0	0x2301    MOVS	R3, #1
;__Lib_MathDouble.c, 30 :: 		
0x0AA2	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 31 :: 		
0x0AA4	0x05DB    LSLS	R3, R3, #23
;__Lib_MathDouble.c, 32 :: 		
0x0AA6	0x07D2    LSLS	R2, R2, #31
;__Lib_MathDouble.c, 33 :: 		
0x0AA8	0x18C0    ADDS	R0, R0, R3
;__Lib_MathDouble.c, 34 :: 		
0x0AAA	0x297F    CMP	R1, #127
;__Lib_MathDouble.c, 35 :: 		
0x0AAC	0xDA01    BGE	_FloatToSignedIntegral_Lab_1
;__Lib_MathDouble.c, 36 :: 		
0x0AAE	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 37 :: 		
0x0AB0	0xE00A    B	_FloatToSignedIntegral_Lab_end
;__Lib_MathDouble.c, 38 :: 		
_FloatToSignedIntegral_Lab_1:
;__Lib_MathDouble.c, 39 :: 		
0x0AB2	0x2996    CMP	R1, #150
;__Lib_MathDouble.c, 40 :: 		
0x0AB4	0xDC03    BGT	_FloatToSignedIntegral_Lab_2
;__Lib_MathDouble.c, 41 :: 		
0x0AB6	0x2396    MOVS	R3, #150
;__Lib_MathDouble.c, 42 :: 		
0x0AB8	0x1A59    SUBS	R1, R3, R1
;__Lib_MathDouble.c, 43 :: 		
0x0ABA	0x40C8    LSRS	R0, R1
;__Lib_MathDouble.c, 44 :: 		
0x0ABC	0xE001    B	_FloatToSignedIntegral_Lab_3
;__Lib_MathDouble.c, 45 :: 		
_FloatToSignedIntegral_Lab_2:
;__Lib_MathDouble.c, 46 :: 		
0x0ABE	0x3996    SUBS	R1, #150
;__Lib_MathDouble.c, 47 :: 		
0x0AC0	0x4088    LSLS	R0, R1
;__Lib_MathDouble.c, 48 :: 		
_FloatToSignedIntegral_Lab_3:
;__Lib_MathDouble.c, 49 :: 		
0x0AC2	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 50 :: 		
0x0AC4	0xD000    BEQ	_FloatToSignedIntegral_Lab_end
;__Lib_MathDouble.c, 51 :: 		
0x0AC6	0x4240    RSBS	R0, R0, #0
;__Lib_MathDouble.c, 53 :: 		
_FloatToSignedIntegral_Lab_end:
;__Lib_MathDouble.c, 56 :: 		
L_end__FloatToSignedIntegral:
0x0AC8	0xB001    ADD	SP, SP, #4
0x0ACA	0x4770    BX	LR
; end of __FloatToSignedIntegral
_ShortToStr:
;__Lib_Conversions.c, 147 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x0958	0xB500    PUSH	(R14)
0x095A	0xB083    SUB	SP, SP, #12
0x095C	0x9100    STR	R1, [SP, #0]
0x095E	0xB241    SXTB	R1, R0
0x0960	0x9800    LDR	R0, [SP, #0]
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 0 (R0)
;__Lib_Conversions.c, 152 :: 		
0x0962	0x2200    MOVS	R2, #0
0x0964	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 153 :: 		
0x0966	0xB24A    SXTB	R2, R1
0x0968	0xB292    UXTH	R2, R2
0x096A	0x9202    STR	R2, [SP, #8]
;__Lib_Conversions.c, 154 :: 		
0x096C	0x2900    CMP	R1, #0
0x096E	0xDA05    BGE	L_ShortToStr22
;__Lib_Conversions.c, 155 :: 		
0x0970	0x9A01    LDR	R2, [SP, #4]
0x0972	0xB292    UXTH	R2, R2
0x0974	0x3201    ADDS	R2, #1
0x0976	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 156 :: 		
0x0978	0x424A    RSBS	R2, R1, #0
; input end address is: 4 (R1)
0x097A	0x9202    STR	R2, [SP, #8]
;__Lib_Conversions.c, 157 :: 		
L_ShortToStr22:
;__Lib_Conversions.c, 158 :: 		
0x097C	0x9000    STR	R0, [SP, #0]
0x097E	0x4601    MOV	R1, R0
0x0980	0x9802    LDR	R0, [SP, #8]
0x0982	0xB280    UXTH	R0, R0
0x0984	0xF7FFFDCA  BL	_ByteToStr+0
0x0988	0x9800    LDR	R0, [SP, #0]
;__Lib_Conversions.c, 160 :: 		
; i start address is: 16 (R4)
0x098A	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
; output end address is: 0 (R0)
0x098C	0xB2A1    UXTH	R1, R4
;__Lib_Conversions.c, 161 :: 		
L_ShortToStr23:
; i start address is: 4 (R1)
; output start address is: 0 (R0)
0x098E	0x2900    CMP	R1, #0
0x0990	0xD909    BLS	L_ShortToStr24
;__Lib_Conversions.c, 162 :: 		
0x0992	0x1843    ADDS	R3, R0, R1
0x0994	0x1E4A    SUBS	R2, R1, #1
0x0996	0xB292    UXTH	R2, R2
0x0998	0x1882    ADDS	R2, R0, R2
0x099A	0x7812    LDRB	R2, [R2, #0]
0x099C	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 163 :: 		
0x099E	0x1E4A    SUBS	R2, R1, #1
; i end address is: 4 (R1)
; i start address is: 16 (R4)
0x09A0	0xB294    UXTH	R4, R2
;__Lib_Conversions.c, 164 :: 		
; i end address is: 16 (R4)
0x09A2	0xB2A1    UXTH	R1, R4
0x09A4	0xE7F3    B	L_ShortToStr23
L_ShortToStr24:
;__Lib_Conversions.c, 165 :: 		
0x09A6	0x2220    MOVS	R2, #32
0x09A8	0x7002    STRB	R2, [R0, #0]
;__Lib_Conversions.c, 166 :: 		
0x09AA	0x9A01    LDR	R2, [SP, #4]
0x09AC	0xB292    UXTH	R2, R2
0x09AE	0x2A00    CMP	R2, #0
0x09B0	0xD00C    BEQ	L_ShortToStr25
;__Lib_Conversions.c, 167 :: 		
; i start address is: 4 (R1)
0x09B2	0x2100    MOVS	R1, #0
; i end address is: 4 (R1)
; output end address is: 0 (R0)
;__Lib_Conversions.c, 168 :: 		
L_ShortToStr26:
; i start address is: 4 (R1)
; output start address is: 0 (R0)
0x09B4	0x1842    ADDS	R2, R0, R1
0x09B6	0x7812    LDRB	R2, [R2, #0]
0x09B8	0x2A20    CMP	R2, #32
0x09BA	0xD102    BNE	L_ShortToStr27
;__Lib_Conversions.c, 169 :: 		
0x09BC	0x1C4A    ADDS	R2, R1, #1
; i end address is: 4 (R1)
; i start address is: 8 (R2)
; i end address is: 8 (R2)
0x09BE	0xB291    UXTH	R1, R2
0x09C0	0xE7F8    B	L_ShortToStr26
L_ShortToStr27:
;__Lib_Conversions.c, 170 :: 		
; i start address is: 4 (R1)
0x09C2	0x1E4A    SUBS	R2, R1, #1
0x09C4	0xB292    UXTH	R2, R2
; i end address is: 4 (R1)
;__Lib_Conversions.c, 171 :: 		
0x09C6	0x1883    ADDS	R3, R0, R2
; output end address is: 0 (R0)
0x09C8	0x222D    MOVS	R2, #45
0x09CA	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 172 :: 		
L_ShortToStr25:
;__Lib_Conversions.c, 173 :: 		
L_end_ShortToStr:
0x09CC	0xB003    ADD	SP, SP, #12
0x09CE	0xBD00    POP	(R15)
; end of _ShortToStr
_ByteToStr:
;__Lib_Conversions.c, 82 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x051C	0xB500    PUSH	(R14)
0x051E	0xB082    SUB	SP, SP, #8
0x0520	0x460A    MOV	R2, R1
0x0522	0xB2C1    UXTB	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 85 :: 		
; DigitPos start address is: 0 (R0)
0x0524	0x2000    MOVS	R0, #0
; output end address is: 8 (R2)
; DigitPos end address is: 0 (R0)
; input end address is: 4 (R1)
0x0526	0x4616    MOV	R6, R2
L_ByteToStr0:
; DigitPos start address is: 0 (R0)
; output start address is: 24 (R6)
; input start address is: 4 (R1)
0x0528	0x2803    CMP	R0, #3
0x052A	0xD205    BCS	L_ByteToStr1
;__Lib_Conversions.c, 86 :: 		
0x052C	0x1833    ADDS	R3, R6, R0
0x052E	0x2220    MOVS	R2, #32
0x0530	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 85 :: 		
0x0532	0x3001    ADDS	R0, #1
0x0534	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 86 :: 		
0x0536	0xE7F7    B	L_ByteToStr0
L_ByteToStr1:
;__Lib_Conversions.c, 88 :: 		
0x0538	0x1833    ADDS	R3, R6, R0
0x053A	0x2200    MOVS	R2, #0
0x053C	0x701A    STRB	R2, [R3, #0]
0x053E	0x1E47    SUBS	R7, R0, #1
0x0540	0xB2FF    UXTB	R7, R7
; DigitPos end address is: 0 (R0)
; DigitPos start address is: 28 (R7)
; output end address is: 24 (R6)
; DigitPos end address is: 28 (R7)
;__Lib_Conversions.c, 90 :: 		
L_ByteToStr3:
;__Lib_Conversions.c, 91 :: 		
; DigitPos start address is: 28 (R7)
; input start address is: 4 (R1)
; output start address is: 24 (R6)
0x0542	0x19F2    ADDS	R2, R6, R7
0x0544	0x9201    STR	R2, [SP, #4]
0x0546	0x220A    MOVS	R2, #10
0x0548	0x9100    STR	R1, [SP, #0]
0x054A	0xB2C8    UXTB	R0, R1
0x054C	0xF7FFFE1C  BL	__Div_32x32_U+0
0x0550	0x4610    MOV	R0, R2
0x0552	0xB2C0    UXTB	R0, R0
0x0554	0x9900    LDR	R1, [SP, #0]
0x0556	0xB2C9    UXTB	R1, R1
0x0558	0x4603    MOV	R3, R0
0x055A	0x3330    ADDS	R3, #48
0x055C	0x9A01    LDR	R2, [SP, #4]
0x055E	0x7013    STRB	R3, [R2, #0]
;__Lib_Conversions.c, 92 :: 		
0x0560	0x220A    MOVS	R2, #10
0x0562	0xB2C8    UXTB	R0, R1
0x0564	0xF7FFFE10  BL	__Div_32x32_U+0
0x0568	0xB2C0    UXTB	R0, R0
0x056A	0xB2C1    UXTB	R1, R0
; input end address is: 4 (R1)
;__Lib_Conversions.c, 93 :: 		
0x056C	0x2800    CMP	R0, #0
0x056E	0xD100    BNE	L_ByteToStr5
; output end address is: 24 (R6)
; input end address is: 4 (R1)
; DigitPos end address is: 28 (R7)
;__Lib_Conversions.c, 94 :: 		
0x0570	0xE002    B	L_ByteToStr4
L_ByteToStr5:
;__Lib_Conversions.c, 95 :: 		
; DigitPos start address is: 28 (R7)
; input start address is: 4 (R1)
; output start address is: 24 (R6)
0x0572	0x1E7F    SUBS	R7, R7, #1
0x0574	0xB2FF    UXTB	R7, R7
;__Lib_Conversions.c, 96 :: 		
; output end address is: 24 (R6)
; input end address is: 4 (R1)
; DigitPos end address is: 28 (R7)
0x0576	0xE7E4    B	L_ByteToStr3
L_ByteToStr4:
;__Lib_Conversions.c, 97 :: 		
L_end_ByteToStr:
0x0578	0xB002    ADD	SP, SP, #8
0x057A	0xBD00    POP	(R15)
; end of _ByteToStr
__Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC2:
;__Lib_System_M0Plus_HSI48.c, 354 :: 		
0x2900	0xB500    PUSH	(R14)
0x2902	0xB083    SUB	SP, SP, #12
;__Lib_System_M0Plus_HSI48.c, 359 :: 		
0x2904	0x485E    LDR	R0, [PC, #376]
0x2906	0x9000    STR	R0, [SP, #0]
;__Lib_System_M0Plus_HSI48.c, 360 :: 		
0x2908	0x485E    LDR	R0, [PC, #376]
0x290A	0x9001    STR	R0, [SP, #4]
;__Lib_System_M0Plus_HSI48.c, 361 :: 		
0x290C	0x485E    LDR	R0, [PC, #376]
0x290E	0x9002    STR	R0, [SP, #8]
;__Lib_System_M0Plus_HSI48.c, 362 :: 		
; ulPWR_CR start address is: 8 (R2)
0x2910	0x4A5E    LDR	R2, [PC, #376]
;__Lib_System_M0Plus_HSI48.c, 364 :: 		
; Fosc_kHz start address is: 12 (R3)
0x2912	0x4B5F    LDR	R3, [PC, #380]
;__Lib_System_M0Plus_HSI48.c, 366 :: 		
0x2914	0x485F    LDR	R0, [PC, #380]
0x2916	0x6002    STR	R2, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 370 :: 		
0x2918	0x485F    LDR	R0, [PC, #380]
0x291A	0x4611    MOV	R1, R2
0x291C	0x4001    ANDS	R1, R0
0x291E	0x485F    LDR	R0, [PC, #380]
0x2920	0x4281    CMP	R1, R0
0x2922	0xD11E    BNE	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC223
; ulPWR_CR end address is: 8 (R2)
;__Lib_System_M0Plus_HSI48.c, 371 :: 		
0x2924	0x485E    LDR	R0, [PC, #376]
0x2926	0x4283    CMP	R3, R0
0x2928	0xD90D    BLS	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC224
; Fosc_kHz end address is: 12 (R3)
;__Lib_System_M0Plus_HSI48.c, 372 :: 		
0x292A	0x485E    LDR	R0, [PC, #376]
0x292C	0x6801    LDR	R1, [R0, #0]
0x292E	0x2001    MOVS	R0, #1
0x2930	0x4301    ORRS	R1, R0
0x2932	0x485C    LDR	R0, [PC, #368]
0x2934	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 373 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC225:
0x2936	0x485B    LDR	R0, [PC, #364]
0x2938	0x6801    LDR	R1, [R0, #0]
0x293A	0x2001    MOVS	R0, #1
0x293C	0x4008    ANDS	R0, R1
0x293E	0x2800    CMP	R0, #0
0x2940	0xD100    BNE	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC226
0x2942	0xE7F8    B	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC225
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC226:
;__Lib_System_M0Plus_HSI48.c, 374 :: 		
0x2944	0xE00C    B	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC227
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC224:
;__Lib_System_M0Plus_HSI48.c, 376 :: 		
0x2946	0x4857    LDR	R0, [PC, #348]
0x2948	0x6801    LDR	R1, [R0, #0]
0x294A	0x4857    LDR	R0, [PC, #348]
0x294C	0x4001    ANDS	R1, R0
0x294E	0x4855    LDR	R0, [PC, #340]
0x2950	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 377 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC228:
0x2952	0x4854    LDR	R0, [PC, #336]
0x2954	0x6801    LDR	R1, [R0, #0]
0x2956	0x2001    MOVS	R0, #1
0x2958	0x4008    ANDS	R0, R1
0x295A	0x2801    CMP	R0, #1
0x295C	0xD100    BNE	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC229
0x295E	0xE7F8    B	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC228
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC229:
;__Lib_System_M0Plus_HSI48.c, 378 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC227:
;__Lib_System_M0Plus_HSI48.c, 379 :: 		
0x2960	0xE037    B	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC230
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC223:
; Fosc_kHz start address is: 12 (R3)
; ulPWR_CR start address is: 8 (R2)
0x2962	0x484D    LDR	R0, [PC, #308]
0x2964	0x4611    MOV	R1, R2
0x2966	0x4001    ANDS	R1, R0
0x2968	0x4850    LDR	R0, [PC, #320]
0x296A	0x4281    CMP	R1, R0
0x296C	0xD11E    BNE	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC231
; ulPWR_CR end address is: 8 (R2)
;__Lib_System_M0Plus_HSI48.c, 380 :: 		
0x296E	0x4850    LDR	R0, [PC, #320]
0x2970	0x4283    CMP	R3, R0
0x2972	0xD90D    BLS	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 12 (R3)
;__Lib_System_M0Plus_HSI48.c, 381 :: 		
0x2974	0x484B    LDR	R0, [PC, #300]
0x2976	0x6801    LDR	R1, [R0, #0]
0x2978	0x2001    MOVS	R0, #1
0x297A	0x4301    ORRS	R1, R0
0x297C	0x4849    LDR	R0, [PC, #292]
0x297E	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 382 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC233:
0x2980	0x4848    LDR	R0, [PC, #288]
0x2982	0x6801    LDR	R1, [R0, #0]
0x2984	0x2001    MOVS	R0, #1
0x2986	0x4008    ANDS	R0, R1
0x2988	0x2800    CMP	R0, #0
0x298A	0xD100    BNE	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC234
0x298C	0xE7F8    B	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC233
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC234:
;__Lib_System_M0Plus_HSI48.c, 383 :: 		
0x298E	0xE00C    B	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC235
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC232:
;__Lib_System_M0Plus_HSI48.c, 385 :: 		
0x2990	0x4844    LDR	R0, [PC, #272]
0x2992	0x6801    LDR	R1, [R0, #0]
0x2994	0x4844    LDR	R0, [PC, #272]
0x2996	0x4001    ANDS	R1, R0
0x2998	0x4842    LDR	R0, [PC, #264]
0x299A	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 386 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC236:
0x299C	0x4841    LDR	R0, [PC, #260]
0x299E	0x6801    LDR	R1, [R0, #0]
0x29A0	0x2001    MOVS	R0, #1
0x29A2	0x4008    ANDS	R0, R1
0x29A4	0x2801    CMP	R0, #1
0x29A6	0xD100    BNE	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC237
0x29A8	0xE7F8    B	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC236
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC237:
;__Lib_System_M0Plus_HSI48.c, 387 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC235:
;__Lib_System_M0Plus_HSI48.c, 388 :: 		
0x29AA	0xE012    B	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC238
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC231:
; ulPWR_CR start address is: 8 (R2)
0x29AC	0x483A    LDR	R0, [PC, #232]
0x29AE	0x4611    MOV	R1, R2
0x29B0	0x4001    ANDS	R1, R0
; ulPWR_CR end address is: 8 (R2)
0x29B2	0x4839    LDR	R0, [PC, #228]
0x29B4	0x4281    CMP	R1, R0
0x29B6	0xD10C    BNE	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC239
;__Lib_System_M0Plus_HSI48.c, 389 :: 		
0x29B8	0x483A    LDR	R0, [PC, #232]
0x29BA	0x6801    LDR	R1, [R0, #0]
0x29BC	0x483A    LDR	R0, [PC, #232]
0x29BE	0x4001    ANDS	R1, R0
0x29C0	0x4838    LDR	R0, [PC, #224]
0x29C2	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 390 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC240:
0x29C4	0x4837    LDR	R0, [PC, #220]
0x29C6	0x6801    LDR	R1, [R0, #0]
0x29C8	0x2001    MOVS	R0, #1
0x29CA	0x4008    ANDS	R0, R1
0x29CC	0x2801    CMP	R0, #1
0x29CE	0xD100    BNE	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC241
0x29D0	0xE7F8    B	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC240
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC241:
;__Lib_System_M0Plus_HSI48.c, 391 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC239:
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC238:
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC230:
;__Lib_System_M0Plus_HSI48.c, 394 :: 		
0x29D2	0x4A34    LDR	R2, [PC, #208]
0x29D4	0x6810    LDR	R0, [R2, #0]
0x29D6	0x2102    MOVS	R1, #2
0x29D8	0x4308    ORRS	R0, R1
0x29DA	0x6010    STR	R0, [R2, #0]
;__Lib_System_M0Plus_HSI48.c, 396 :: 		
0x29DC	0xF7FEFC6A  BL	__Lib_System_M0Plus_HSI48_SystemClockSetDefault+0
;__Lib_System_M0Plus_HSI48.c, 398 :: 		
0x29E0	0x9900    LDR	R1, [SP, #0]
0x29E2	0x4834    LDR	R0, [PC, #208]
0x29E4	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 400 :: 		
0x29E6	0x9902    LDR	R1, [SP, #8]
0x29E8	0x4833    LDR	R0, [PC, #204]
0x29EA	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 402 :: 		
0x29EC	0x9901    LDR	R1, [SP, #4]
0x29EE	0x4833    LDR	R0, [PC, #204]
0x29F0	0x4001    ANDS	R1, R0
0x29F2	0x4833    LDR	R0, [PC, #204]
0x29F4	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 404 :: 		
0x29F6	0x9900    LDR	R1, [SP, #0]
0x29F8	0x2001    MOVS	R0, #1
0x29FA	0x4008    ANDS	R0, R1
0x29FC	0x2800    CMP	R0, #0
0x29FE	0xD006    BEQ	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC242
;__Lib_System_M0Plus_HSI48.c, 405 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC243:
0x2A00	0x482C    LDR	R0, [PC, #176]
0x2A02	0x6801    LDR	R1, [R0, #0]
0x2A04	0x2002    MOVS	R0, #2
0x2A06	0x4008    ANDS	R0, R1
0x2A08	0x2800    CMP	R0, #0
0x2A0A	0xD100    BNE	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC244
;__Lib_System_M0Plus_HSI48.c, 406 :: 		
0x2A0C	0xE7F8    B	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC243
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC244:
;__Lib_System_M0Plus_HSI48.c, 407 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC242:
;__Lib_System_M0Plus_HSI48.c, 409 :: 		
0x2A0E	0x9901    LDR	R1, [SP, #4]
0x2A10	0x2001    MOVS	R0, #1
0x2A12	0x4008    ANDS	R0, R1
0x2A14	0x2800    CMP	R0, #0
0x2A16	0xD006    BEQ	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC245
;__Lib_System_M0Plus_HSI48.c, 410 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC246:
0x2A18	0x4829    LDR	R0, [PC, #164]
0x2A1A	0x6801    LDR	R1, [R0, #0]
0x2A1C	0x2004    MOVS	R0, #4
0x2A1E	0x4008    ANDS	R0, R1
0x2A20	0x2800    CMP	R0, #0
0x2A22	0xD100    BNE	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC247
;__Lib_System_M0Plus_HSI48.c, 411 :: 		
0x2A24	0xE7F8    B	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC246
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC247:
;__Lib_System_M0Plus_HSI48.c, 412 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC245:
;__Lib_System_M0Plus_HSI48.c, 414 :: 		
0x2A26	0x9901    LDR	R1, [SP, #4]
0x2A28	0x4826    LDR	R0, [PC, #152]
0x2A2A	0x4008    ANDS	R0, R1
0x2A2C	0x2800    CMP	R0, #0
0x2A2E	0xD006    BEQ	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC248
;__Lib_System_M0Plus_HSI48.c, 415 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC249:
0x2A30	0x4823    LDR	R0, [PC, #140]
0x2A32	0x6801    LDR	R1, [R0, #0]
0x2A34	0x4824    LDR	R0, [PC, #144]
0x2A36	0x4008    ANDS	R0, R1
0x2A38	0x2800    CMP	R0, #0
0x2A3A	0xD100    BNE	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC250
;__Lib_System_M0Plus_HSI48.c, 416 :: 		
0x2A3C	0xE7F8    B	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC249
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC250:
;__Lib_System_M0Plus_HSI48.c, 417 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC248:
;__Lib_System_M0Plus_HSI48.c, 419 :: 		
0x2A3E	0x9901    LDR	R1, [SP, #4]
0x2A40	0x4822    LDR	R0, [PC, #136]
0x2A42	0x4008    ANDS	R0, R1
0x2A44	0x2800    CMP	R0, #0
0x2A46	0xD00C    BEQ	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC251
;__Lib_System_M0Plus_HSI48.c, 420 :: 		
0x2A48	0x481D    LDR	R0, [PC, #116]
0x2A4A	0x6801    LDR	R1, [R0, #0]
0x2A4C	0x481F    LDR	R0, [PC, #124]
0x2A4E	0x4301    ORRS	R1, R0
0x2A50	0x481B    LDR	R0, [PC, #108]
0x2A52	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 421 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC252:
0x2A54	0x481A    LDR	R0, [PC, #104]
0x2A56	0x6801    LDR	R1, [R0, #0]
0x2A58	0x481D    LDR	R0, [PC, #116]
0x2A5A	0x4008    ANDS	R0, R1
0x2A5C	0x2800    CMP	R0, #0
0x2A5E	0xD100    BNE	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC253
;__Lib_System_M0Plus_HSI48.c, 422 :: 		
0x2A60	0xE7F8    B	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC252
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC253:
;__Lib_System_M0Plus_HSI48.c, 423 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC251:
;__Lib_System_M0Plus_HSI48.c, 426 :: 		
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC254:
0x2A62	0x4815    LDR	R0, [PC, #84]
0x2A64	0x6801    LDR	R1, [R0, #0]
0x2A66	0x200C    MOVS	R0, #12
0x2A68	0x460A    MOV	R2, R1
0x2A6A	0x4002    ANDS	R2, R0
0x2A6C	0x9802    LDR	R0, [SP, #8]
0x2A6E	0x0081    LSLS	R1, R0, #2
0x2A70	0x200C    MOVS	R0, #12
0x2A72	0x4008    ANDS	R0, R1
0x2A74	0x4282    CMP	R2, R0
0x2A76	0xD000    BEQ	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC255
;__Lib_System_M0Plus_HSI48.c, 427 :: 		
0x2A78	0xE7F3    B	L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC254
L___Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC255:
;__Lib_System_M0Plus_HSI48.c, 428 :: 		
L_end_InitialSetUpRCCRCC2:
0x2A7A	0xB003    ADD	SP, SP, #12
0x2A7C	0xBD00    POP	(R15)
0x2A7E	0xBF00    NOP
0x2A80	0x00000000  	#0
0x2A84	0x00010008  	#524289
0x2A88	0x00010000  	#1
0x2A8C	0x10000000  	#4096
0x2A90	0x3E800000  	#16000
0x2A94	0x70004000  	PWR_CR+0
0x2A98	0x18000000  	#6144
0x2A9C	0x08000000  	#2048
0x2AA0	0x3E800000  	#16000
0x2AA4	0x20004002  	FLASH_ACR+0
0x2AA8	0xFFFEFFFF  	#-2
0x2AAC	0x10000000  	#4096
0x2AB0	0x1F400000  	#8000
0x2AB4	0x10084002  	RCC_CRRCR+0
0x2AB8	0x100C4002  	RCC_CFGR+0
0x2ABC	0xFFFF000F  	#1048575
0x2AC0	0x10004002  	RCC_CR+0
0x2AC4	0x00000001  	#65536
0x2AC8	0x00000002  	#131072
0x2ACC	0x00000100  	#16777216
0x2AD0	0x00000200  	#33554432
; end of __Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC2
__Lib_System_M0Plus_HSI48_SystemClockSetDefault:
;__Lib_System_M0Plus_HSI48.c, 336 :: 		
0x12B4	0xB081    SUB	SP, SP, #4
;__Lib_System_M0Plus_HSI48.c, 339 :: 		
0x12B6	0x4810    LDR	R0, [PC, #64]
0x12B8	0x6801    LDR	R1, [R0, #0]
0x12BA	0x2001    MOVS	R0, #1
0x12BC	0x4301    ORRS	R1, R0
0x12BE	0x480E    LDR	R0, [PC, #56]
0x12C0	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 342 :: 		
0x12C2	0x480E    LDR	R0, [PC, #56]
0x12C4	0x6801    LDR	R1, [R0, #0]
0x12C6	0x480E    LDR	R0, [PC, #56]
0x12C8	0x4001    ANDS	R1, R0
0x12CA	0x480C    LDR	R0, [PC, #48]
0x12CC	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 345 :: 		
0x12CE	0x480A    LDR	R0, [PC, #40]
0x12D0	0x6801    LDR	R1, [R0, #0]
0x12D2	0x480C    LDR	R0, [PC, #48]
0x12D4	0x4001    ANDS	R1, R0
0x12D6	0x4808    LDR	R0, [PC, #32]
0x12D8	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 348 :: 		
0x12DA	0x4807    LDR	R0, [PC, #28]
0x12DC	0x6801    LDR	R1, [R0, #0]
0x12DE	0x480A    LDR	R0, [PC, #40]
0x12E0	0x4001    ANDS	R1, R0
0x12E2	0x4805    LDR	R0, [PC, #20]
0x12E4	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 351 :: 		
0x12E6	0x4805    LDR	R0, [PC, #20]
0x12E8	0x6801    LDR	R1, [R0, #0]
0x12EA	0x4808    LDR	R0, [PC, #32]
0x12EC	0x4001    ANDS	R1, R0
0x12EE	0x4803    LDR	R0, [PC, #12]
0x12F0	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 352 :: 		
L_end_SystemClockSetDefault:
0x12F2	0xB001    ADD	SP, SP, #4
0x12F4	0x4770    BX	LR
0x12F6	0xBF00    NOP
0x12F8	0x10004002  	RCC_CR+0
0x12FC	0x100C4002  	RCC_CFGR+0
0x1300	0xC00CF0FF  	#-251674612
0x1304	0xFEFFFEF6  	#-17367297
0x1308	0xFFFFFFFB  	#-262145
0x130C	0xFFFFFFC2  	#-3997697
; end of __Lib_System_M0Plus_HSI48_SystemClockSetDefault
__Lib_System_M0Plus_HSI48_InitialSetUpFosc:
;__Lib_System_M0Plus_HSI48.c, 430 :: 		
0x2ADC	0xB081    SUB	SP, SP, #4
;__Lib_System_M0Plus_HSI48.c, 431 :: 		
0x2ADE	0x4902    LDR	R1, [PC, #8]
0x2AE0	0x4802    LDR	R0, [PC, #8]
0x2AE2	0x6001    STR	R1, [R0, #0]
;__Lib_System_M0Plus_HSI48.c, 432 :: 		
L_end_InitialSetUpFosc:
0x2AE4	0xB001    ADD	SP, SP, #4
0x2AE6	0x4770    BX	LR
0x2AE8	0x3E800000  	#16000
0x2AEC	0x11202000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_M0Plus_HSI48_InitialSetUpFosc
___GenExcept:
;__Lib_System_M0Plus_HSI48.c, 284 :: 		
0x2AD4	0xB500    PUSH	(R14)
;__Lib_System_M0Plus_HSI48.c, 285 :: 		
L___GenExcept19:
0x2AD6	0xE7FE    B	L___GenExcept19
;__Lib_System_M0Plus_HSI48.c, 286 :: 		
L_end___GenExcept:
0x2AD8	0xBD00    POP	(R15)
; end of ___GenExcept
0x4544	0xB500    PUSH	(R14)
0x4546	0x4E06    LDR	R6, [PC, #24]
0x4548	0x4D06    LDR	R5, [PC, #24]
0x454A	0x4F07    LDR	R7, [PC, #28]
0x454C	0xF7FDF856  BL	5628
0x4550	0x4E06    LDR	R6, [PC, #24]
0x4552	0x4D07    LDR	R5, [PC, #28]
0x4554	0x4F07    LDR	R7, [PC, #28]
0x4556	0xF7FDF851  BL	5628
0x455A	0xBD00    POP	(R15)
0x455C	0x4770    BX	LR
0x455E	0xBF00    NOP
0x4560	0x00002000  	#536870912
0x4564	0x009F2000  	#536871071
0x4568	0x3B000000  	#15104
0x456C	0x00A02000  	#536871072
0x4570	0x10B02000  	#536875184
0x4574	0x2AF00000  	#10992
0x45E0	0xB500    PUSH	(R14)
0x45E2	0x4E03    LDR	R6, [PC, #12]
0x45E4	0x4D03    LDR	R5, [PC, #12]
0x45E6	0xF7FDF813  BL	5648
0x45EA	0xBD00    POP	(R15)
0x45EC	0x4770    BX	LR
0x45EE	0xBF00    NOP
0x45F0	0x00002000  	#536870912
0x45F4	0x113C2000  	#536875324
_vUARTISR:
;uarthandler.c, 114 :: 		void vUARTISR() iv IVT_INT_USART1 ics ICS_AUTO{
0x23B4	0xB500    PUSH	(R14)
;uarthandler.c, 116 :: 		if( USART1_ISRbits.RXNE ){
0x23B6	0x4844    LDR	R0, [PC, #272]
0x23B8	0x6801    LDR	R1, [R0, #0]
0x23BA	0x2020    MOVS	R0, #32
0x23BC	0x4008    ANDS	R0, R1
0x23BE	0x0940    LSRS	R0, R0, #5
0x23C0	0x2800    CMP	R0, #0
0x23C2	0xD100    BNE	#0
0x23C4	0xE07F    B	L_vUARTISR187
;uarthandler.c, 117 :: 		ucData1 = USART1_RDR;
0x23C6	0x4841    LDR	R0, [PC, #260]
0x23C8	0x6801    LDR	R1, [R0, #0]
0x23CA	0x4841    LDR	R0, [PC, #260]
0x23CC	0x7001    STRB	R1, [R0, #0]
;uarthandler.c, 118 :: 		if ( ucData1 != CHR_CR && ucData1 != CHR_LF && ulUSART1ByteReceived < BUFFER_MAX_USART ) {
0x23CE	0x4840    LDR	R0, [PC, #256]
0x23D0	0x7800    LDRB	R0, [R0, #0]
0x23D2	0x280D    CMP	R0, #13
0x23D4	0xD100    BNE	#0
0x23D6	0xE04A    B	L_vUARTISR190
0x23D8	0x483D    LDR	R0, [PC, #244]
0x23DA	0x7800    LDRB	R0, [R0, #0]
0x23DC	0x280A    CMP	R0, #10
0x23DE	0xD100    BNE	#0
0x23E0	0xE045    B	L_vUARTISR190
0x23E2	0x483C    LDR	R0, [PC, #240]
0x23E4	0x6801    LDR	R1, [R0, #0]
0x23E6	0x483C    LDR	R0, [PC, #240]
0x23E8	0x4281    CMP	R1, R0
0x23EA	0xD300    BCC	#0
0x23EC	0xE03F    B	L_vUARTISR190
L__vUARTISR367:
;uarthandler.c, 121 :: 		ucData1 == CHR_s ||
0x23EE	0x4838    LDR	R0, [PC, #224]
0x23F0	0x7800    LDRB	R0, [R0, #0]
0x23F2	0x2853    CMP	R0, #83
0x23F4	0xD00C    BEQ	L__vUARTISR366
0x23F6	0x4836    LDR	R0, [PC, #216]
0x23F8	0x7800    LDRB	R0, [R0, #0]
0x23FA	0x2873    CMP	R0, #115
0x23FC	0xD008    BEQ	L__vUARTISR366
;uarthandler.c, 122 :: 		ucData1 == CHR_U ||
0x23FE	0x4834    LDR	R0, [PC, #208]
0x2400	0x7800    LDRB	R0, [R0, #0]
0x2402	0x2855    CMP	R0, #85
0x2404	0xD004    BEQ	L__vUARTISR366
;uarthandler.c, 123 :: 		ucData1 == CHR_u ) &&
0x2406	0x4832    LDR	R0, [PC, #200]
0x2408	0x7800    LDRB	R0, [R0, #0]
0x240A	0x2875    CMP	R0, #117
0x240C	0xD000    BEQ	L__vUARTISR366
0x240E	0xE010    B	L_vUARTISR195
;uarthandler.c, 124 :: 		ulUSART1ByteReceived == 0 ) {
L__vUARTISR366:
0x2410	0x4830    LDR	R0, [PC, #192]
0x2412	0x6800    LDR	R0, [R0, #0]
0x2414	0x2800    CMP	R0, #0
0x2416	0xD10C    BNE	L_vUARTISR195
L__vUARTISR365:
;uarthandler.c, 125 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x2418	0x482E    LDR	R0, [PC, #184]
0x241A	0x6801    LDR	R1, [R0, #0]
0x241C	0x482F    LDR	R0, [PC, #188]
0x241E	0x1841    ADDS	R1, R0, R1
0x2420	0x482B    LDR	R0, [PC, #172]
0x2422	0x7800    LDRB	R0, [R0, #0]
0x2424	0x7008    STRB	R0, [R1, #0]
0x2426	0x482B    LDR	R0, [PC, #172]
0x2428	0x6800    LDR	R0, [R0, #0]
0x242A	0x1C41    ADDS	R1, R0, #1
0x242C	0x4829    LDR	R0, [PC, #164]
0x242E	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 126 :: 		}
0x2430	0xE01C    B	L_vUARTISR196
L_vUARTISR195:
;uarthandler.c, 129 :: 		ucUSART1RXBuffer[ 0 ] == CHR_s ||
0x2432	0x482A    LDR	R0, [PC, #168]
0x2434	0x7800    LDRB	R0, [R0, #0]
0x2436	0x2853    CMP	R0, #83
0x2438	0xD00C    BEQ	L__vUARTISR364
0x243A	0x4828    LDR	R0, [PC, #160]
0x243C	0x7800    LDRB	R0, [R0, #0]
0x243E	0x2873    CMP	R0, #115
0x2440	0xD008    BEQ	L__vUARTISR364
;uarthandler.c, 130 :: 		ucUSART1RXBuffer[ 0 ] == CHR_U ||
0x2442	0x4826    LDR	R0, [PC, #152]
0x2444	0x7800    LDRB	R0, [R0, #0]
0x2446	0x2855    CMP	R0, #85
0x2448	0xD004    BEQ	L__vUARTISR364
;uarthandler.c, 131 :: 		ucUSART1RXBuffer[ 0 ] == CHR_u ) {
0x244A	0x4824    LDR	R0, [PC, #144]
0x244C	0x7800    LDRB	R0, [R0, #0]
0x244E	0x2875    CMP	R0, #117
0x2450	0xD000    BEQ	L__vUARTISR364
0x2452	0xE00B    B	L_vUARTISR199
L__vUARTISR364:
;uarthandler.c, 132 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x2454	0x481F    LDR	R0, [PC, #124]
0x2456	0x6801    LDR	R1, [R0, #0]
0x2458	0x4820    LDR	R0, [PC, #128]
0x245A	0x1841    ADDS	R1, R0, R1
0x245C	0x481C    LDR	R0, [PC, #112]
0x245E	0x7800    LDRB	R0, [R0, #0]
0x2460	0x7008    STRB	R0, [R1, #0]
0x2462	0x481C    LDR	R0, [PC, #112]
0x2464	0x6800    LDR	R0, [R0, #0]
0x2466	0x1C41    ADDS	R1, R0, #1
0x2468	0x481A    LDR	R0, [PC, #104]
0x246A	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 133 :: 		}
L_vUARTISR199:
L_vUARTISR196:
;uarthandler.c, 134 :: 		}
0x246C	0xE02B    B	L_vUARTISR200
L_vUARTISR190:
;uarthandler.c, 136 :: 		else if ( ucData1 == CHR_CR ) {
0x246E	0x4818    LDR	R0, [PC, #96]
0x2470	0x7800    LDRB	R0, [R0, #0]
0x2472	0x280D    CMP	R0, #13
0x2474	0xD10C    BNE	L_vUARTISR201
;uarthandler.c, 137 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x2476	0x4817    LDR	R0, [PC, #92]
0x2478	0x6801    LDR	R1, [R0, #0]
0x247A	0x4818    LDR	R0, [PC, #96]
0x247C	0x1841    ADDS	R1, R0, R1
0x247E	0x4814    LDR	R0, [PC, #80]
0x2480	0x7800    LDRB	R0, [R0, #0]
0x2482	0x7008    STRB	R0, [R1, #0]
0x2484	0x4813    LDR	R0, [PC, #76]
0x2486	0x6800    LDR	R0, [R0, #0]
0x2488	0x1C41    ADDS	R1, R0, #1
0x248A	0x4812    LDR	R0, [PC, #72]
0x248C	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 138 :: 		}
0x248E	0xE01A    B	L_vUARTISR202
L_vUARTISR201:
;uarthandler.c, 140 :: 		else if ( ucData1 == CHR_LF && ucUSART1RXBuffer[ ulUSART1ByteReceived - 1 ] == CHR_CR ) {
0x2490	0x480F    LDR	R0, [PC, #60]
0x2492	0x7800    LDRB	R0, [R0, #0]
0x2494	0x280A    CMP	R0, #10
0x2496	0xD116    BNE	L_vUARTISR205
0x2498	0x480E    LDR	R0, [PC, #56]
0x249A	0x6800    LDR	R0, [R0, #0]
0x249C	0x1E41    SUBS	R1, R0, #1
0x249E	0x480F    LDR	R0, [PC, #60]
0x24A0	0x1840    ADDS	R0, R0, R1
0x24A2	0x7800    LDRB	R0, [R0, #0]
0x24A4	0x280D    CMP	R0, #13
0x24A6	0xD10E    BNE	L_vUARTISR205
L__vUARTISR363:
;uarthandler.c, 141 :: 		ucUSART1RXBuffer[ ulUSART1ByteReceived++ ] = ucData1;
0x24A8	0x480A    LDR	R0, [PC, #40]
0x24AA	0x6801    LDR	R1, [R0, #0]
0x24AC	0x480B    LDR	R0, [PC, #44]
0x24AE	0x1841    ADDS	R1, R0, R1
0x24B0	0x4807    LDR	R0, [PC, #28]
0x24B2	0x7800    LDRB	R0, [R0, #0]
0x24B4	0x7008    STRB	R0, [R1, #0]
0x24B6	0x4807    LDR	R0, [PC, #28]
0x24B8	0x6800    LDR	R0, [R0, #0]
0x24BA	0x1C41    ADDS	R1, R0, #1
0x24BC	0x4805    LDR	R0, [PC, #20]
0x24BE	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 142 :: 		fUSART1Buffer = READY_TO_READ;
0x24C0	0x2101    MOVS	R1, #1
0x24C2	0x4807    LDR	R0, [PC, #28]
0x24C4	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 143 :: 		}
L_vUARTISR205:
L_vUARTISR202:
L_vUARTISR200:
;uarthandler.c, 144 :: 		}
L_vUARTISR187:
;uarthandler.c, 145 :: 		}
L_end_vUARTISR:
0x24C6	0xBD00    POP	(R15)
0x24C8	0x381C4001  	USART1_ISRbits+0
0x24CC	0x38244001  	USART1_RDR+0
0x24D0	0x009E2000  	_ucData1+0
0x24D4	0x00AC2000  	_ulUSART1ByteReceived+0
0x24D8	0x10000000  	#4096
0x24DC	0x00B02000  	_ucUSART1RXBuffer+0
0x24E0	0x00A42000  	_fUSART1Buffer+0
; end of _vUARTISR
_Timer2_interrupt:
;DriverRF4463PROMain.c, 99 :: 		void Timer2_interrupt() iv IVT_INT_TIM2 {
0x2388	0xB081    SUB	SP, SP, #4
;DriverRF4463PROMain.c, 100 :: 		TIM2_SR.UIF = 0;
0x238A	0x4A08    LDR	R2, [PC, #32]
0x238C	0x6810    LDR	R0, [R2, #0]
0x238E	0x2101    MOVS	R1, #1
0x2390	0x4388    BICS	R0, R1
0x2392	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 101 :: 		Flag.rf_reach_timeout = 1; //Enter your code here
0x2394	0x4A06    LDR	R2, [PC, #24]
0x2396	0x7810    LDRB	R0, [R2, #0]
0x2398	0x2104    MOVS	R1, #4
0x239A	0x4308    ORRS	R0, R1
0x239C	0x7010    STRB	R0, [R2, #0]
;DriverRF4463PROMain.c, 102 :: 		Flag.reach_1s = 1;
0x239E	0x4A04    LDR	R2, [PC, #16]
0x23A0	0x7810    LDRB	R0, [R2, #0]
0x23A2	0x2101    MOVS	R1, #1
0x23A4	0x4308    ORRS	R0, R1
0x23A6	0x7010    STRB	R0, [R2, #0]
;DriverRF4463PROMain.c, 103 :: 		}
L_end_Timer2_interrupt:
0x23A8	0xB001    ADD	SP, SP, #4
0x23AA	0x4770    BX	LR
0x23AC	0x00104000  	TIM2_SR+0
0x23B0	0x10C92000  	_Flag+0
; end of _Timer2_interrupt
_Int_SPI2:
;driverspi.c, 11 :: 		void Int_SPI2() iv IVT_INT_SPI2 ics ICS_AUTO {
0x2538	0xB500    PUSH	(R14)
;driverspi.c, 13 :: 		if ( SPI2_SRbits.RXNE ) {
0x253A	0x4805    LDR	R0, [PC, #20]
0x253C	0x6801    LDR	R1, [R0, #0]
0x253E	0x2001    MOVS	R0, #1
0x2540	0x4008    ANDS	R0, R1
0x2542	0x2800    CMP	R0, #0
0x2544	0xD003    BEQ	L_Int_SPI20
;driverspi.c, 14 :: 		ucSPI2ByteReceived = ( unsigned char )SPI2_DR;      // lee el Byte recibido
0x2546	0x4803    LDR	R0, [PC, #12]
0x2548	0x6801    LDR	R1, [R0, #0]
0x254A	0x4803    LDR	R0, [PC, #12]
0x254C	0x7001    STRB	R1, [R0, #0]
;driverspi.c, 16 :: 		}
L_Int_SPI20:
;driverspi.c, 17 :: 		}
L_end_Int_SPI2:
0x254E	0xBD00    POP	(R15)
0x2550	0x38084000  	SPI2_SRbits+0
0x2554	0x380C4000  	SPI2_DR+0
0x2558	0x00042000  	_ucSPI2ByteReceived+0
; end of _Int_SPI2
_vRF4463ISR:
;driverrf4463pro.c, 29 :: 		void vRF4463ISR() iv IVT_INT_EXTI0_1 ics ICS_AUTO{
0x24E4	0xB500    PUSH	(R14)
0x24E6	0xB480    PUSH	(R7)
;driverrf4463pro.c, 30 :: 		if( EXTI_PR.B0 ){
0x24E8	0x4810    LDR	R0, [PC, #64]
0x24EA	0x6801    LDR	R1, [R0, #0]
0x24EC	0x2001    MOVS	R0, #1
0x24EE	0x4008    ANDS	R0, R1
0x24F0	0x2800    CMP	R0, #0
0x24F2	0xD019    BEQ	L_vRF4463ISR1
;driverrf4463pro.c, 31 :: 		EXTI_PR.B0 |= 1;
0x24F4	0x480D    LDR	R0, [PC, #52]
0x24F6	0x6800    LDR	R0, [R0, #0]
0x24F8	0x2201    MOVS	R2, #1
0x24FA	0x4002    ANDS	R2, R0
0x24FC	0x480C    LDR	R0, [PC, #48]
0x24FE	0x7801    LDRB	R1, [R0, #0]
0x2500	0x2001    MOVS	R0, BitMask(_CMD_RADIO_POWER_SET+0)
0x2502	0x4008    ANDS	R0, R1
0x2504	0x4613    MOV	R3, R2
0x2506	0x4303    ORRS	R3, R0
0x2508	0x4A08    LDR	R2, [PC, #32]
0x250A	0x6810    LDR	R0, [R2, #0]
0x250C	0x2101    MOVS	R1, #1
0x250E	0x4019    ANDS	R1, R3
0x2510	0xD002    BEQ	L__vRF4463ISR389
0x2512	0x2101    MOVS	R1, #1
0x2514	0x4308    ORRS	R0, R1
0x2516	0xE001    B	L__vRF4463ISR388
L__vRF4463ISR389:
0x2518	0x2101    MOVS	R1, #1
0x251A	0x4388    BICS	R0, R1
L__vRF4463ISR388:
0x251C	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 32 :: 		ucRF4463IRQ = 1;
0x251E	0x2101    MOVS	R1, #1
0x2520	0x4804    LDR	R0, [PC, #16]
0x2522	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 33 :: 		vRF4463ClearInterrupts();
0x2524	0xF7FFF892  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 34 :: 		}
L_vRF4463ISR1:
;driverrf4463pro.c, 35 :: 		}
L_end_vRF4463ISR:
0x2528	0xBC80    POP	(R7)
0x252A	0xBD00    POP	(R15)
0x252C	0x04144001  	EXTI_PR+0
0x2530	0xFFFFFFFF  	_CMD_RADIO_POWER_SET+0
0x2534	0x009C2000  	DriverRF4463PROMain_ucRF4463IRQ+0
; end of _vRF4463ISR
;DriverRF4463PROMain.c,0 :: ?ICS_tx_cnt [4]
0x2AF0	0x00000000 ;?ICS_tx_cnt+0
; end of ?ICS_tx_cnt
;DriverRF4463PROMain.c,0 :: ?ICS_fUSART1Buffer [4]
0x2AF4	0x00000000 ;?ICS_fUSART1Buffer+0
; end of ?ICS_fUSART1Buffer
;DriverRF4463PROMain.c,0 :: ?ICS_rx_cnt [4]
0x2AF8	0x00000000 ;?ICS_rx_cnt+0
; end of ?ICS_rx_cnt
;DriverRF4463PROMain.c,0 :: ?ICS_ulUSART1ByteReceived [4]
0x2AFC	0x00000000 ;?ICS_ulUSART1ByteReceived+0
; end of ?ICS_ulUSART1ByteReceived
;DriverRF4463PROMain.c,0 :: ?ICS_ucUSART1RXBuffer [4096]
0x2B00	0x00000000 ;?ICS_ucUSART1RXBuffer+0
0x2B04	0x00000000 ;?ICS_ucUSART1RXBuffer+4
0x2B08	0x00000000 ;?ICS_ucUSART1RXBuffer+8
0x2B0C	0x00000000 ;?ICS_ucUSART1RXBuffer+12
0x2B10	0x00000000 ;?ICS_ucUSART1RXBuffer+16
0x2B14	0x00000000 ;?ICS_ucUSART1RXBuffer+20
0x2B18	0x00000000 ;?ICS_ucUSART1RXBuffer+24
0x2B1C	0x00000000 ;?ICS_ucUSART1RXBuffer+28
0x2B20	0x00000000 ;?ICS_ucUSART1RXBuffer+32
0x2B24	0x00000000 ;?ICS_ucUSART1RXBuffer+36
0x2B28	0x00000000 ;?ICS_ucUSART1RXBuffer+40
0x2B2C	0x00000000 ;?ICS_ucUSART1RXBuffer+44
0x2B30	0x00000000 ;?ICS_ucUSART1RXBuffer+48
0x2B34	0x00000000 ;?ICS_ucUSART1RXBuffer+52
0x2B38	0x00000000 ;?ICS_ucUSART1RXBuffer+56
0x2B3C	0x00000000 ;?ICS_ucUSART1RXBuffer+60
0x2B40	0x00000000 ;?ICS_ucUSART1RXBuffer+64
0x2B44	0x00000000 ;?ICS_ucUSART1RXBuffer+68
0x2B48	0x00000000 ;?ICS_ucUSART1RXBuffer+72
0x2B4C	0x00000000 ;?ICS_ucUSART1RXBuffer+76
0x2B50	0x00000000 ;?ICS_ucUSART1RXBuffer+80
0x2B54	0x00000000 ;?ICS_ucUSART1RXBuffer+84
0x2B58	0x00000000 ;?ICS_ucUSART1RXBuffer+88
0x2B5C	0x00000000 ;?ICS_ucUSART1RXBuffer+92
0x2B60	0x00000000 ;?ICS_ucUSART1RXBuffer+96
0x2B64	0x00000000 ;?ICS_ucUSART1RXBuffer+100
0x2B68	0x00000000 ;?ICS_ucUSART1RXBuffer+104
0x2B6C	0x00000000 ;?ICS_ucUSART1RXBuffer+108
0x2B70	0x00000000 ;?ICS_ucUSART1RXBuffer+112
0x2B74	0x00000000 ;?ICS_ucUSART1RXBuffer+116
0x2B78	0x00000000 ;?ICS_ucUSART1RXBuffer+120
0x2B7C	0x00000000 ;?ICS_ucUSART1RXBuffer+124
0x2B80	0x00000000 ;?ICS_ucUSART1RXBuffer+128
0x2B84	0x00000000 ;?ICS_ucUSART1RXBuffer+132
0x2B88	0x00000000 ;?ICS_ucUSART1RXBuffer+136
0x2B8C	0x00000000 ;?ICS_ucUSART1RXBuffer+140
0x2B90	0x00000000 ;?ICS_ucUSART1RXBuffer+144
0x2B94	0x00000000 ;?ICS_ucUSART1RXBuffer+148
0x2B98	0x00000000 ;?ICS_ucUSART1RXBuffer+152
0x2B9C	0x00000000 ;?ICS_ucUSART1RXBuffer+156
0x2BA0	0x00000000 ;?ICS_ucUSART1RXBuffer+160
0x2BA4	0x00000000 ;?ICS_ucUSART1RXBuffer+164
0x2BA8	0x00000000 ;?ICS_ucUSART1RXBuffer+168
0x2BAC	0x00000000 ;?ICS_ucUSART1RXBuffer+172
0x2BB0	0x00000000 ;?ICS_ucUSART1RXBuffer+176
0x2BB4	0x00000000 ;?ICS_ucUSART1RXBuffer+180
0x2BB8	0x00000000 ;?ICS_ucUSART1RXBuffer+184
0x2BBC	0x00000000 ;?ICS_ucUSART1RXBuffer+188
0x2BC0	0x00000000 ;?ICS_ucUSART1RXBuffer+192
0x2BC4	0x00000000 ;?ICS_ucUSART1RXBuffer+196
0x2BC8	0x00000000 ;?ICS_ucUSART1RXBuffer+200
0x2BCC	0x00000000 ;?ICS_ucUSART1RXBuffer+204
0x2BD0	0x00000000 ;?ICS_ucUSART1RXBuffer+208
0x2BD4	0x00000000 ;?ICS_ucUSART1RXBuffer+212
0x2BD8	0x00000000 ;?ICS_ucUSART1RXBuffer+216
0x2BDC	0x00000000 ;?ICS_ucUSART1RXBuffer+220
0x2BE0	0x00000000 ;?ICS_ucUSART1RXBuffer+224
0x2BE4	0x00000000 ;?ICS_ucUSART1RXBuffer+228
0x2BE8	0x00000000 ;?ICS_ucUSART1RXBuffer+232
0x2BEC	0x00000000 ;?ICS_ucUSART1RXBuffer+236
0x2BF0	0x00000000 ;?ICS_ucUSART1RXBuffer+240
0x2BF4	0x00000000 ;?ICS_ucUSART1RXBuffer+244
0x2BF8	0x00000000 ;?ICS_ucUSART1RXBuffer+248
0x2BFC	0x00000000 ;?ICS_ucUSART1RXBuffer+252
0x2C00	0x00000000 ;?ICS_ucUSART1RXBuffer+256
0x2C04	0x00000000 ;?ICS_ucUSART1RXBuffer+260
0x2C08	0x00000000 ;?ICS_ucUSART1RXBuffer+264
0x2C0C	0x00000000 ;?ICS_ucUSART1RXBuffer+268
0x2C10	0x00000000 ;?ICS_ucUSART1RXBuffer+272
0x2C14	0x00000000 ;?ICS_ucUSART1RXBuffer+276
0x2C18	0x00000000 ;?ICS_ucUSART1RXBuffer+280
0x2C1C	0x00000000 ;?ICS_ucUSART1RXBuffer+284
0x2C20	0x00000000 ;?ICS_ucUSART1RXBuffer+288
0x2C24	0x00000000 ;?ICS_ucUSART1RXBuffer+292
0x2C28	0x00000000 ;?ICS_ucUSART1RXBuffer+296
0x2C2C	0x00000000 ;?ICS_ucUSART1RXBuffer+300
0x2C30	0x00000000 ;?ICS_ucUSART1RXBuffer+304
0x2C34	0x00000000 ;?ICS_ucUSART1RXBuffer+308
0x2C38	0x00000000 ;?ICS_ucUSART1RXBuffer+312
0x2C3C	0x00000000 ;?ICS_ucUSART1RXBuffer+316
0x2C40	0x00000000 ;?ICS_ucUSART1RXBuffer+320
0x2C44	0x00000000 ;?ICS_ucUSART1RXBuffer+324
0x2C48	0x00000000 ;?ICS_ucUSART1RXBuffer+328
0x2C4C	0x00000000 ;?ICS_ucUSART1RXBuffer+332
0x2C50	0x00000000 ;?ICS_ucUSART1RXBuffer+336
0x2C54	0x00000000 ;?ICS_ucUSART1RXBuffer+340
0x2C58	0x00000000 ;?ICS_ucUSART1RXBuffer+344
0x2C5C	0x00000000 ;?ICS_ucUSART1RXBuffer+348
0x2C60	0x00000000 ;?ICS_ucUSART1RXBuffer+352
0x2C64	0x00000000 ;?ICS_ucUSART1RXBuffer+356
0x2C68	0x00000000 ;?ICS_ucUSART1RXBuffer+360
0x2C6C	0x00000000 ;?ICS_ucUSART1RXBuffer+364
0x2C70	0x00000000 ;?ICS_ucUSART1RXBuffer+368
0x2C74	0x00000000 ;?ICS_ucUSART1RXBuffer+372
0x2C78	0x00000000 ;?ICS_ucUSART1RXBuffer+376
0x2C7C	0x00000000 ;?ICS_ucUSART1RXBuffer+380
0x2C80	0x00000000 ;?ICS_ucUSART1RXBuffer+384
0x2C84	0x00000000 ;?ICS_ucUSART1RXBuffer+388
0x2C88	0x00000000 ;?ICS_ucUSART1RXBuffer+392
0x2C8C	0x00000000 ;?ICS_ucUSART1RXBuffer+396
0x2C90	0x00000000 ;?ICS_ucUSART1RXBuffer+400
0x2C94	0x00000000 ;?ICS_ucUSART1RXBuffer+404
0x2C98	0x00000000 ;?ICS_ucUSART1RXBuffer+408
0x2C9C	0x00000000 ;?ICS_ucUSART1RXBuffer+412
0x2CA0	0x00000000 ;?ICS_ucUSART1RXBuffer+416
0x2CA4	0x00000000 ;?ICS_ucUSART1RXBuffer+420
0x2CA8	0x00000000 ;?ICS_ucUSART1RXBuffer+424
0x2CAC	0x00000000 ;?ICS_ucUSART1RXBuffer+428
0x2CB0	0x00000000 ;?ICS_ucUSART1RXBuffer+432
0x2CB4	0x00000000 ;?ICS_ucUSART1RXBuffer+436
0x2CB8	0x00000000 ;?ICS_ucUSART1RXBuffer+440
0x2CBC	0x00000000 ;?ICS_ucUSART1RXBuffer+444
0x2CC0	0x00000000 ;?ICS_ucUSART1RXBuffer+448
0x2CC4	0x00000000 ;?ICS_ucUSART1RXBuffer+452
0x2CC8	0x00000000 ;?ICS_ucUSART1RXBuffer+456
0x2CCC	0x00000000 ;?ICS_ucUSART1RXBuffer+460
0x2CD0	0x00000000 ;?ICS_ucUSART1RXBuffer+464
0x2CD4	0x00000000 ;?ICS_ucUSART1RXBuffer+468
0x2CD8	0x00000000 ;?ICS_ucUSART1RXBuffer+472
0x2CDC	0x00000000 ;?ICS_ucUSART1RXBuffer+476
0x2CE0	0x00000000 ;?ICS_ucUSART1RXBuffer+480
0x2CE4	0x00000000 ;?ICS_ucUSART1RXBuffer+484
0x2CE8	0x00000000 ;?ICS_ucUSART1RXBuffer+488
0x2CEC	0x00000000 ;?ICS_ucUSART1RXBuffer+492
0x2CF0	0x00000000 ;?ICS_ucUSART1RXBuffer+496
0x2CF4	0x00000000 ;?ICS_ucUSART1RXBuffer+500
0x2CF8	0x00000000 ;?ICS_ucUSART1RXBuffer+504
0x2CFC	0x00000000 ;?ICS_ucUSART1RXBuffer+508
0x2D00	0x00000000 ;?ICS_ucUSART1RXBuffer+512
0x2D04	0x00000000 ;?ICS_ucUSART1RXBuffer+516
0x2D08	0x00000000 ;?ICS_ucUSART1RXBuffer+520
0x2D0C	0x00000000 ;?ICS_ucUSART1RXBuffer+524
0x2D10	0x00000000 ;?ICS_ucUSART1RXBuffer+528
0x2D14	0x00000000 ;?ICS_ucUSART1RXBuffer+532
0x2D18	0x00000000 ;?ICS_ucUSART1RXBuffer+536
0x2D1C	0x00000000 ;?ICS_ucUSART1RXBuffer+540
0x2D20	0x00000000 ;?ICS_ucUSART1RXBuffer+544
0x2D24	0x00000000 ;?ICS_ucUSART1RXBuffer+548
0x2D28	0x00000000 ;?ICS_ucUSART1RXBuffer+552
0x2D2C	0x00000000 ;?ICS_ucUSART1RXBuffer+556
0x2D30	0x00000000 ;?ICS_ucUSART1RXBuffer+560
0x2D34	0x00000000 ;?ICS_ucUSART1RXBuffer+564
0x2D38	0x00000000 ;?ICS_ucUSART1RXBuffer+568
0x2D3C	0x00000000 ;?ICS_ucUSART1RXBuffer+572
0x2D40	0x00000000 ;?ICS_ucUSART1RXBuffer+576
0x2D44	0x00000000 ;?ICS_ucUSART1RXBuffer+580
0x2D48	0x00000000 ;?ICS_ucUSART1RXBuffer+584
0x2D4C	0x00000000 ;?ICS_ucUSART1RXBuffer+588
0x2D50	0x00000000 ;?ICS_ucUSART1RXBuffer+592
0x2D54	0x00000000 ;?ICS_ucUSART1RXBuffer+596
0x2D58	0x00000000 ;?ICS_ucUSART1RXBuffer+600
0x2D5C	0x00000000 ;?ICS_ucUSART1RXBuffer+604
0x2D60	0x00000000 ;?ICS_ucUSART1RXBuffer+608
0x2D64	0x00000000 ;?ICS_ucUSART1RXBuffer+612
0x2D68	0x00000000 ;?ICS_ucUSART1RXBuffer+616
0x2D6C	0x00000000 ;?ICS_ucUSART1RXBuffer+620
0x2D70	0x00000000 ;?ICS_ucUSART1RXBuffer+624
0x2D74	0x00000000 ;?ICS_ucUSART1RXBuffer+628
0x2D78	0x00000000 ;?ICS_ucUSART1RXBuffer+632
0x2D7C	0x00000000 ;?ICS_ucUSART1RXBuffer+636
0x2D80	0x00000000 ;?ICS_ucUSART1RXBuffer+640
0x2D84	0x00000000 ;?ICS_ucUSART1RXBuffer+644
0x2D88	0x00000000 ;?ICS_ucUSART1RXBuffer+648
0x2D8C	0x00000000 ;?ICS_ucUSART1RXBuffer+652
0x2D90	0x00000000 ;?ICS_ucUSART1RXBuffer+656
0x2D94	0x00000000 ;?ICS_ucUSART1RXBuffer+660
0x2D98	0x00000000 ;?ICS_ucUSART1RXBuffer+664
0x2D9C	0x00000000 ;?ICS_ucUSART1RXBuffer+668
0x2DA0	0x00000000 ;?ICS_ucUSART1RXBuffer+672
0x2DA4	0x00000000 ;?ICS_ucUSART1RXBuffer+676
0x2DA8	0x00000000 ;?ICS_ucUSART1RXBuffer+680
0x2DAC	0x00000000 ;?ICS_ucUSART1RXBuffer+684
0x2DB0	0x00000000 ;?ICS_ucUSART1RXBuffer+688
0x2DB4	0x00000000 ;?ICS_ucUSART1RXBuffer+692
0x2DB8	0x00000000 ;?ICS_ucUSART1RXBuffer+696
0x2DBC	0x00000000 ;?ICS_ucUSART1RXBuffer+700
0x2DC0	0x00000000 ;?ICS_ucUSART1RXBuffer+704
0x2DC4	0x00000000 ;?ICS_ucUSART1RXBuffer+708
0x2DC8	0x00000000 ;?ICS_ucUSART1RXBuffer+712
0x2DCC	0x00000000 ;?ICS_ucUSART1RXBuffer+716
0x2DD0	0x00000000 ;?ICS_ucUSART1RXBuffer+720
0x2DD4	0x00000000 ;?ICS_ucUSART1RXBuffer+724
0x2DD8	0x00000000 ;?ICS_ucUSART1RXBuffer+728
0x2DDC	0x00000000 ;?ICS_ucUSART1RXBuffer+732
0x2DE0	0x00000000 ;?ICS_ucUSART1RXBuffer+736
0x2DE4	0x00000000 ;?ICS_ucUSART1RXBuffer+740
0x2DE8	0x00000000 ;?ICS_ucUSART1RXBuffer+744
0x2DEC	0x00000000 ;?ICS_ucUSART1RXBuffer+748
0x2DF0	0x00000000 ;?ICS_ucUSART1RXBuffer+752
0x2DF4	0x00000000 ;?ICS_ucUSART1RXBuffer+756
0x2DF8	0x00000000 ;?ICS_ucUSART1RXBuffer+760
0x2DFC	0x00000000 ;?ICS_ucUSART1RXBuffer+764
0x2E00	0x00000000 ;?ICS_ucUSART1RXBuffer+768
0x2E04	0x00000000 ;?ICS_ucUSART1RXBuffer+772
0x2E08	0x00000000 ;?ICS_ucUSART1RXBuffer+776
0x2E0C	0x00000000 ;?ICS_ucUSART1RXBuffer+780
0x2E10	0x00000000 ;?ICS_ucUSART1RXBuffer+784
0x2E14	0x00000000 ;?ICS_ucUSART1RXBuffer+788
0x2E18	0x00000000 ;?ICS_ucUSART1RXBuffer+792
0x2E1C	0x00000000 ;?ICS_ucUSART1RXBuffer+796
0x2E20	0x00000000 ;?ICS_ucUSART1RXBuffer+800
0x2E24	0x00000000 ;?ICS_ucUSART1RXBuffer+804
0x2E28	0x00000000 ;?ICS_ucUSART1RXBuffer+808
0x2E2C	0x00000000 ;?ICS_ucUSART1RXBuffer+812
0x2E30	0x00000000 ;?ICS_ucUSART1RXBuffer+816
0x2E34	0x00000000 ;?ICS_ucUSART1RXBuffer+820
0x2E38	0x00000000 ;?ICS_ucUSART1RXBuffer+824
0x2E3C	0x00000000 ;?ICS_ucUSART1RXBuffer+828
0x2E40	0x00000000 ;?ICS_ucUSART1RXBuffer+832
0x2E44	0x00000000 ;?ICS_ucUSART1RXBuffer+836
0x2E48	0x00000000 ;?ICS_ucUSART1RXBuffer+840
0x2E4C	0x00000000 ;?ICS_ucUSART1RXBuffer+844
0x2E50	0x00000000 ;?ICS_ucUSART1RXBuffer+848
0x2E54	0x00000000 ;?ICS_ucUSART1RXBuffer+852
0x2E58	0x00000000 ;?ICS_ucUSART1RXBuffer+856
0x2E5C	0x00000000 ;?ICS_ucUSART1RXBuffer+860
0x2E60	0x00000000 ;?ICS_ucUSART1RXBuffer+864
0x2E64	0x00000000 ;?ICS_ucUSART1RXBuffer+868
0x2E68	0x00000000 ;?ICS_ucUSART1RXBuffer+872
0x2E6C	0x00000000 ;?ICS_ucUSART1RXBuffer+876
0x2E70	0x00000000 ;?ICS_ucUSART1RXBuffer+880
0x2E74	0x00000000 ;?ICS_ucUSART1RXBuffer+884
0x2E78	0x00000000 ;?ICS_ucUSART1RXBuffer+888
0x2E7C	0x00000000 ;?ICS_ucUSART1RXBuffer+892
0x2E80	0x00000000 ;?ICS_ucUSART1RXBuffer+896
0x2E84	0x00000000 ;?ICS_ucUSART1RXBuffer+900
0x2E88	0x00000000 ;?ICS_ucUSART1RXBuffer+904
0x2E8C	0x00000000 ;?ICS_ucUSART1RXBuffer+908
0x2E90	0x00000000 ;?ICS_ucUSART1RXBuffer+912
0x2E94	0x00000000 ;?ICS_ucUSART1RXBuffer+916
0x2E98	0x00000000 ;?ICS_ucUSART1RXBuffer+920
0x2E9C	0x00000000 ;?ICS_ucUSART1RXBuffer+924
0x2EA0	0x00000000 ;?ICS_ucUSART1RXBuffer+928
0x2EA4	0x00000000 ;?ICS_ucUSART1RXBuffer+932
0x2EA8	0x00000000 ;?ICS_ucUSART1RXBuffer+936
0x2EAC	0x00000000 ;?ICS_ucUSART1RXBuffer+940
0x2EB0	0x00000000 ;?ICS_ucUSART1RXBuffer+944
0x2EB4	0x00000000 ;?ICS_ucUSART1RXBuffer+948
0x2EB8	0x00000000 ;?ICS_ucUSART1RXBuffer+952
0x2EBC	0x00000000 ;?ICS_ucUSART1RXBuffer+956
0x2EC0	0x00000000 ;?ICS_ucUSART1RXBuffer+960
0x2EC4	0x00000000 ;?ICS_ucUSART1RXBuffer+964
0x2EC8	0x00000000 ;?ICS_ucUSART1RXBuffer+968
0x2ECC	0x00000000 ;?ICS_ucUSART1RXBuffer+972
0x2ED0	0x00000000 ;?ICS_ucUSART1RXBuffer+976
0x2ED4	0x00000000 ;?ICS_ucUSART1RXBuffer+980
0x2ED8	0x00000000 ;?ICS_ucUSART1RXBuffer+984
0x2EDC	0x00000000 ;?ICS_ucUSART1RXBuffer+988
0x2EE0	0x00000000 ;?ICS_ucUSART1RXBuffer+992
0x2EE4	0x00000000 ;?ICS_ucUSART1RXBuffer+996
0x2EE8	0x00000000 ;?ICS_ucUSART1RXBuffer+1000
0x2EEC	0x00000000 ;?ICS_ucUSART1RXBuffer+1004
0x2EF0	0x00000000 ;?ICS_ucUSART1RXBuffer+1008
0x2EF4	0x00000000 ;?ICS_ucUSART1RXBuffer+1012
0x2EF8	0x00000000 ;?ICS_ucUSART1RXBuffer+1016
0x2EFC	0x00000000 ;?ICS_ucUSART1RXBuffer+1020
0x2F00	0x00000000 ;?ICS_ucUSART1RXBuffer+1024
0x2F04	0x00000000 ;?ICS_ucUSART1RXBuffer+1028
0x2F08	0x00000000 ;?ICS_ucUSART1RXBuffer+1032
0x2F0C	0x00000000 ;?ICS_ucUSART1RXBuffer+1036
0x2F10	0x00000000 ;?ICS_ucUSART1RXBuffer+1040
0x2F14	0x00000000 ;?ICS_ucUSART1RXBuffer+1044
0x2F18	0x00000000 ;?ICS_ucUSART1RXBuffer+1048
0x2F1C	0x00000000 ;?ICS_ucUSART1RXBuffer+1052
0x2F20	0x00000000 ;?ICS_ucUSART1RXBuffer+1056
0x2F24	0x00000000 ;?ICS_ucUSART1RXBuffer+1060
0x2F28	0x00000000 ;?ICS_ucUSART1RXBuffer+1064
0x2F2C	0x00000000 ;?ICS_ucUSART1RXBuffer+1068
0x2F30	0x00000000 ;?ICS_ucUSART1RXBuffer+1072
0x2F34	0x00000000 ;?ICS_ucUSART1RXBuffer+1076
0x2F38	0x00000000 ;?ICS_ucUSART1RXBuffer+1080
0x2F3C	0x00000000 ;?ICS_ucUSART1RXBuffer+1084
0x2F40	0x00000000 ;?ICS_ucUSART1RXBuffer+1088
0x2F44	0x00000000 ;?ICS_ucUSART1RXBuffer+1092
0x2F48	0x00000000 ;?ICS_ucUSART1RXBuffer+1096
0x2F4C	0x00000000 ;?ICS_ucUSART1RXBuffer+1100
0x2F50	0x00000000 ;?ICS_ucUSART1RXBuffer+1104
0x2F54	0x00000000 ;?ICS_ucUSART1RXBuffer+1108
0x2F58	0x00000000 ;?ICS_ucUSART1RXBuffer+1112
0x2F5C	0x00000000 ;?ICS_ucUSART1RXBuffer+1116
0x2F60	0x00000000 ;?ICS_ucUSART1RXBuffer+1120
0x2F64	0x00000000 ;?ICS_ucUSART1RXBuffer+1124
0x2F68	0x00000000 ;?ICS_ucUSART1RXBuffer+1128
0x2F6C	0x00000000 ;?ICS_ucUSART1RXBuffer+1132
0x2F70	0x00000000 ;?ICS_ucUSART1RXBuffer+1136
0x2F74	0x00000000 ;?ICS_ucUSART1RXBuffer+1140
0x2F78	0x00000000 ;?ICS_ucUSART1RXBuffer+1144
0x2F7C	0x00000000 ;?ICS_ucUSART1RXBuffer+1148
0x2F80	0x00000000 ;?ICS_ucUSART1RXBuffer+1152
0x2F84	0x00000000 ;?ICS_ucUSART1RXBuffer+1156
0x2F88	0x00000000 ;?ICS_ucUSART1RXBuffer+1160
0x2F8C	0x00000000 ;?ICS_ucUSART1RXBuffer+1164
0x2F90	0x00000000 ;?ICS_ucUSART1RXBuffer+1168
0x2F94	0x00000000 ;?ICS_ucUSART1RXBuffer+1172
0x2F98	0x00000000 ;?ICS_ucUSART1RXBuffer+1176
0x2F9C	0x00000000 ;?ICS_ucUSART1RXBuffer+1180
0x2FA0	0x00000000 ;?ICS_ucUSART1RXBuffer+1184
0x2FA4	0x00000000 ;?ICS_ucUSART1RXBuffer+1188
0x2FA8	0x00000000 ;?ICS_ucUSART1RXBuffer+1192
0x2FAC	0x00000000 ;?ICS_ucUSART1RXBuffer+1196
0x2FB0	0x00000000 ;?ICS_ucUSART1RXBuffer+1200
0x2FB4	0x00000000 ;?ICS_ucUSART1RXBuffer+1204
0x2FB8	0x00000000 ;?ICS_ucUSART1RXBuffer+1208
0x2FBC	0x00000000 ;?ICS_ucUSART1RXBuffer+1212
0x2FC0	0x00000000 ;?ICS_ucUSART1RXBuffer+1216
0x2FC4	0x00000000 ;?ICS_ucUSART1RXBuffer+1220
0x2FC8	0x00000000 ;?ICS_ucUSART1RXBuffer+1224
0x2FCC	0x00000000 ;?ICS_ucUSART1RXBuffer+1228
0x2FD0	0x00000000 ;?ICS_ucUSART1RXBuffer+1232
0x2FD4	0x00000000 ;?ICS_ucUSART1RXBuffer+1236
0x2FD8	0x00000000 ;?ICS_ucUSART1RXBuffer+1240
0x2FDC	0x00000000 ;?ICS_ucUSART1RXBuffer+1244
0x2FE0	0x00000000 ;?ICS_ucUSART1RXBuffer+1248
0x2FE4	0x00000000 ;?ICS_ucUSART1RXBuffer+1252
0x2FE8	0x00000000 ;?ICS_ucUSART1RXBuffer+1256
0x2FEC	0x00000000 ;?ICS_ucUSART1RXBuffer+1260
0x2FF0	0x00000000 ;?ICS_ucUSART1RXBuffer+1264
0x2FF4	0x00000000 ;?ICS_ucUSART1RXBuffer+1268
0x2FF8	0x00000000 ;?ICS_ucUSART1RXBuffer+1272
0x2FFC	0x00000000 ;?ICS_ucUSART1RXBuffer+1276
0x3000	0x00000000 ;?ICS_ucUSART1RXBuffer+1280
0x3004	0x00000000 ;?ICS_ucUSART1RXBuffer+1284
0x3008	0x00000000 ;?ICS_ucUSART1RXBuffer+1288
0x300C	0x00000000 ;?ICS_ucUSART1RXBuffer+1292
0x3010	0x00000000 ;?ICS_ucUSART1RXBuffer+1296
0x3014	0x00000000 ;?ICS_ucUSART1RXBuffer+1300
0x3018	0x00000000 ;?ICS_ucUSART1RXBuffer+1304
0x301C	0x00000000 ;?ICS_ucUSART1RXBuffer+1308
0x3020	0x00000000 ;?ICS_ucUSART1RXBuffer+1312
0x3024	0x00000000 ;?ICS_ucUSART1RXBuffer+1316
0x3028	0x00000000 ;?ICS_ucUSART1RXBuffer+1320
0x302C	0x00000000 ;?ICS_ucUSART1RXBuffer+1324
0x3030	0x00000000 ;?ICS_ucUSART1RXBuffer+1328
0x3034	0x00000000 ;?ICS_ucUSART1RXBuffer+1332
0x3038	0x00000000 ;?ICS_ucUSART1RXBuffer+1336
0x303C	0x00000000 ;?ICS_ucUSART1RXBuffer+1340
0x3040	0x00000000 ;?ICS_ucUSART1RXBuffer+1344
0x3044	0x00000000 ;?ICS_ucUSART1RXBuffer+1348
0x3048	0x00000000 ;?ICS_ucUSART1RXBuffer+1352
0x304C	0x00000000 ;?ICS_ucUSART1RXBuffer+1356
0x3050	0x00000000 ;?ICS_ucUSART1RXBuffer+1360
0x3054	0x00000000 ;?ICS_ucUSART1RXBuffer+1364
0x3058	0x00000000 ;?ICS_ucUSART1RXBuffer+1368
0x305C	0x00000000 ;?ICS_ucUSART1RXBuffer+1372
0x3060	0x00000000 ;?ICS_ucUSART1RXBuffer+1376
0x3064	0x00000000 ;?ICS_ucUSART1RXBuffer+1380
0x3068	0x00000000 ;?ICS_ucUSART1RXBuffer+1384
0x306C	0x00000000 ;?ICS_ucUSART1RXBuffer+1388
0x3070	0x00000000 ;?ICS_ucUSART1RXBuffer+1392
0x3074	0x00000000 ;?ICS_ucUSART1RXBuffer+1396
0x3078	0x00000000 ;?ICS_ucUSART1RXBuffer+1400
0x307C	0x00000000 ;?ICS_ucUSART1RXBuffer+1404
0x3080	0x00000000 ;?ICS_ucUSART1RXBuffer+1408
0x3084	0x00000000 ;?ICS_ucUSART1RXBuffer+1412
0x3088	0x00000000 ;?ICS_ucUSART1RXBuffer+1416
0x308C	0x00000000 ;?ICS_ucUSART1RXBuffer+1420
0x3090	0x00000000 ;?ICS_ucUSART1RXBuffer+1424
0x3094	0x00000000 ;?ICS_ucUSART1RXBuffer+1428
0x3098	0x00000000 ;?ICS_ucUSART1RXBuffer+1432
0x309C	0x00000000 ;?ICS_ucUSART1RXBuffer+1436
0x30A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1440
0x30A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1444
0x30A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1448
0x30AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1452
0x30B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1456
0x30B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1460
0x30B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1464
0x30BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1468
0x30C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1472
0x30C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1476
0x30C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1480
0x30CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1484
0x30D0	0x00000000 ;?ICS_ucUSART1RXBuffer+1488
0x30D4	0x00000000 ;?ICS_ucUSART1RXBuffer+1492
0x30D8	0x00000000 ;?ICS_ucUSART1RXBuffer+1496
0x30DC	0x00000000 ;?ICS_ucUSART1RXBuffer+1500
0x30E0	0x00000000 ;?ICS_ucUSART1RXBuffer+1504
0x30E4	0x00000000 ;?ICS_ucUSART1RXBuffer+1508
0x30E8	0x00000000 ;?ICS_ucUSART1RXBuffer+1512
0x30EC	0x00000000 ;?ICS_ucUSART1RXBuffer+1516
0x30F0	0x00000000 ;?ICS_ucUSART1RXBuffer+1520
0x30F4	0x00000000 ;?ICS_ucUSART1RXBuffer+1524
0x30F8	0x00000000 ;?ICS_ucUSART1RXBuffer+1528
0x30FC	0x00000000 ;?ICS_ucUSART1RXBuffer+1532
0x3100	0x00000000 ;?ICS_ucUSART1RXBuffer+1536
0x3104	0x00000000 ;?ICS_ucUSART1RXBuffer+1540
0x3108	0x00000000 ;?ICS_ucUSART1RXBuffer+1544
0x310C	0x00000000 ;?ICS_ucUSART1RXBuffer+1548
0x3110	0x00000000 ;?ICS_ucUSART1RXBuffer+1552
0x3114	0x00000000 ;?ICS_ucUSART1RXBuffer+1556
0x3118	0x00000000 ;?ICS_ucUSART1RXBuffer+1560
0x311C	0x00000000 ;?ICS_ucUSART1RXBuffer+1564
0x3120	0x00000000 ;?ICS_ucUSART1RXBuffer+1568
0x3124	0x00000000 ;?ICS_ucUSART1RXBuffer+1572
0x3128	0x00000000 ;?ICS_ucUSART1RXBuffer+1576
0x312C	0x00000000 ;?ICS_ucUSART1RXBuffer+1580
0x3130	0x00000000 ;?ICS_ucUSART1RXBuffer+1584
0x3134	0x00000000 ;?ICS_ucUSART1RXBuffer+1588
0x3138	0x00000000 ;?ICS_ucUSART1RXBuffer+1592
0x313C	0x00000000 ;?ICS_ucUSART1RXBuffer+1596
0x3140	0x00000000 ;?ICS_ucUSART1RXBuffer+1600
0x3144	0x00000000 ;?ICS_ucUSART1RXBuffer+1604
0x3148	0x00000000 ;?ICS_ucUSART1RXBuffer+1608
0x314C	0x00000000 ;?ICS_ucUSART1RXBuffer+1612
0x3150	0x00000000 ;?ICS_ucUSART1RXBuffer+1616
0x3154	0x00000000 ;?ICS_ucUSART1RXBuffer+1620
0x3158	0x00000000 ;?ICS_ucUSART1RXBuffer+1624
0x315C	0x00000000 ;?ICS_ucUSART1RXBuffer+1628
0x3160	0x00000000 ;?ICS_ucUSART1RXBuffer+1632
0x3164	0x00000000 ;?ICS_ucUSART1RXBuffer+1636
0x3168	0x00000000 ;?ICS_ucUSART1RXBuffer+1640
0x316C	0x00000000 ;?ICS_ucUSART1RXBuffer+1644
0x3170	0x00000000 ;?ICS_ucUSART1RXBuffer+1648
0x3174	0x00000000 ;?ICS_ucUSART1RXBuffer+1652
0x3178	0x00000000 ;?ICS_ucUSART1RXBuffer+1656
0x317C	0x00000000 ;?ICS_ucUSART1RXBuffer+1660
0x3180	0x00000000 ;?ICS_ucUSART1RXBuffer+1664
0x3184	0x00000000 ;?ICS_ucUSART1RXBuffer+1668
0x3188	0x00000000 ;?ICS_ucUSART1RXBuffer+1672
0x318C	0x00000000 ;?ICS_ucUSART1RXBuffer+1676
0x3190	0x00000000 ;?ICS_ucUSART1RXBuffer+1680
0x3194	0x00000000 ;?ICS_ucUSART1RXBuffer+1684
0x3198	0x00000000 ;?ICS_ucUSART1RXBuffer+1688
0x319C	0x00000000 ;?ICS_ucUSART1RXBuffer+1692
0x31A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1696
0x31A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1700
0x31A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1704
0x31AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1708
0x31B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1712
0x31B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1716
0x31B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1720
0x31BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1724
0x31C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1728
0x31C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1732
0x31C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1736
0x31CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1740
0x31D0	0x00000000 ;?ICS_ucUSART1RXBuffer+1744
0x31D4	0x00000000 ;?ICS_ucUSART1RXBuffer+1748
0x31D8	0x00000000 ;?ICS_ucUSART1RXBuffer+1752
0x31DC	0x00000000 ;?ICS_ucUSART1RXBuffer+1756
0x31E0	0x00000000 ;?ICS_ucUSART1RXBuffer+1760
0x31E4	0x00000000 ;?ICS_ucUSART1RXBuffer+1764
0x31E8	0x00000000 ;?ICS_ucUSART1RXBuffer+1768
0x31EC	0x00000000 ;?ICS_ucUSART1RXBuffer+1772
0x31F0	0x00000000 ;?ICS_ucUSART1RXBuffer+1776
0x31F4	0x00000000 ;?ICS_ucUSART1RXBuffer+1780
0x31F8	0x00000000 ;?ICS_ucUSART1RXBuffer+1784
0x31FC	0x00000000 ;?ICS_ucUSART1RXBuffer+1788
0x3200	0x00000000 ;?ICS_ucUSART1RXBuffer+1792
0x3204	0x00000000 ;?ICS_ucUSART1RXBuffer+1796
0x3208	0x00000000 ;?ICS_ucUSART1RXBuffer+1800
0x320C	0x00000000 ;?ICS_ucUSART1RXBuffer+1804
0x3210	0x00000000 ;?ICS_ucUSART1RXBuffer+1808
0x3214	0x00000000 ;?ICS_ucUSART1RXBuffer+1812
0x3218	0x00000000 ;?ICS_ucUSART1RXBuffer+1816
0x321C	0x00000000 ;?ICS_ucUSART1RXBuffer+1820
0x3220	0x00000000 ;?ICS_ucUSART1RXBuffer+1824
0x3224	0x00000000 ;?ICS_ucUSART1RXBuffer+1828
0x3228	0x00000000 ;?ICS_ucUSART1RXBuffer+1832
0x322C	0x00000000 ;?ICS_ucUSART1RXBuffer+1836
0x3230	0x00000000 ;?ICS_ucUSART1RXBuffer+1840
0x3234	0x00000000 ;?ICS_ucUSART1RXBuffer+1844
0x3238	0x00000000 ;?ICS_ucUSART1RXBuffer+1848
0x323C	0x00000000 ;?ICS_ucUSART1RXBuffer+1852
0x3240	0x00000000 ;?ICS_ucUSART1RXBuffer+1856
0x3244	0x00000000 ;?ICS_ucUSART1RXBuffer+1860
0x3248	0x00000000 ;?ICS_ucUSART1RXBuffer+1864
0x324C	0x00000000 ;?ICS_ucUSART1RXBuffer+1868
0x3250	0x00000000 ;?ICS_ucUSART1RXBuffer+1872
0x3254	0x00000000 ;?ICS_ucUSART1RXBuffer+1876
0x3258	0x00000000 ;?ICS_ucUSART1RXBuffer+1880
0x325C	0x00000000 ;?ICS_ucUSART1RXBuffer+1884
0x3260	0x00000000 ;?ICS_ucUSART1RXBuffer+1888
0x3264	0x00000000 ;?ICS_ucUSART1RXBuffer+1892
0x3268	0x00000000 ;?ICS_ucUSART1RXBuffer+1896
0x326C	0x00000000 ;?ICS_ucUSART1RXBuffer+1900
0x3270	0x00000000 ;?ICS_ucUSART1RXBuffer+1904
0x3274	0x00000000 ;?ICS_ucUSART1RXBuffer+1908
0x3278	0x00000000 ;?ICS_ucUSART1RXBuffer+1912
0x327C	0x00000000 ;?ICS_ucUSART1RXBuffer+1916
0x3280	0x00000000 ;?ICS_ucUSART1RXBuffer+1920
0x3284	0x00000000 ;?ICS_ucUSART1RXBuffer+1924
0x3288	0x00000000 ;?ICS_ucUSART1RXBuffer+1928
0x328C	0x00000000 ;?ICS_ucUSART1RXBuffer+1932
0x3290	0x00000000 ;?ICS_ucUSART1RXBuffer+1936
0x3294	0x00000000 ;?ICS_ucUSART1RXBuffer+1940
0x3298	0x00000000 ;?ICS_ucUSART1RXBuffer+1944
0x329C	0x00000000 ;?ICS_ucUSART1RXBuffer+1948
0x32A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1952
0x32A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1956
0x32A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1960
0x32AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1964
0x32B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1968
0x32B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1972
0x32B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1976
0x32BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1980
0x32C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1984
0x32C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1988
0x32C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1992
0x32CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1996
0x32D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2000
0x32D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2004
0x32D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2008
0x32DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2012
0x32E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2016
0x32E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2020
0x32E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2024
0x32EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2028
0x32F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2032
0x32F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2036
0x32F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2040
0x32FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2044
0x3300	0x00000000 ;?ICS_ucUSART1RXBuffer+2048
0x3304	0x00000000 ;?ICS_ucUSART1RXBuffer+2052
0x3308	0x00000000 ;?ICS_ucUSART1RXBuffer+2056
0x330C	0x00000000 ;?ICS_ucUSART1RXBuffer+2060
0x3310	0x00000000 ;?ICS_ucUSART1RXBuffer+2064
0x3314	0x00000000 ;?ICS_ucUSART1RXBuffer+2068
0x3318	0x00000000 ;?ICS_ucUSART1RXBuffer+2072
0x331C	0x00000000 ;?ICS_ucUSART1RXBuffer+2076
0x3320	0x00000000 ;?ICS_ucUSART1RXBuffer+2080
0x3324	0x00000000 ;?ICS_ucUSART1RXBuffer+2084
0x3328	0x00000000 ;?ICS_ucUSART1RXBuffer+2088
0x332C	0x00000000 ;?ICS_ucUSART1RXBuffer+2092
0x3330	0x00000000 ;?ICS_ucUSART1RXBuffer+2096
0x3334	0x00000000 ;?ICS_ucUSART1RXBuffer+2100
0x3338	0x00000000 ;?ICS_ucUSART1RXBuffer+2104
0x333C	0x00000000 ;?ICS_ucUSART1RXBuffer+2108
0x3340	0x00000000 ;?ICS_ucUSART1RXBuffer+2112
0x3344	0x00000000 ;?ICS_ucUSART1RXBuffer+2116
0x3348	0x00000000 ;?ICS_ucUSART1RXBuffer+2120
0x334C	0x00000000 ;?ICS_ucUSART1RXBuffer+2124
0x3350	0x00000000 ;?ICS_ucUSART1RXBuffer+2128
0x3354	0x00000000 ;?ICS_ucUSART1RXBuffer+2132
0x3358	0x00000000 ;?ICS_ucUSART1RXBuffer+2136
0x335C	0x00000000 ;?ICS_ucUSART1RXBuffer+2140
0x3360	0x00000000 ;?ICS_ucUSART1RXBuffer+2144
0x3364	0x00000000 ;?ICS_ucUSART1RXBuffer+2148
0x3368	0x00000000 ;?ICS_ucUSART1RXBuffer+2152
0x336C	0x00000000 ;?ICS_ucUSART1RXBuffer+2156
0x3370	0x00000000 ;?ICS_ucUSART1RXBuffer+2160
0x3374	0x00000000 ;?ICS_ucUSART1RXBuffer+2164
0x3378	0x00000000 ;?ICS_ucUSART1RXBuffer+2168
0x337C	0x00000000 ;?ICS_ucUSART1RXBuffer+2172
0x3380	0x00000000 ;?ICS_ucUSART1RXBuffer+2176
0x3384	0x00000000 ;?ICS_ucUSART1RXBuffer+2180
0x3388	0x00000000 ;?ICS_ucUSART1RXBuffer+2184
0x338C	0x00000000 ;?ICS_ucUSART1RXBuffer+2188
0x3390	0x00000000 ;?ICS_ucUSART1RXBuffer+2192
0x3394	0x00000000 ;?ICS_ucUSART1RXBuffer+2196
0x3398	0x00000000 ;?ICS_ucUSART1RXBuffer+2200
0x339C	0x00000000 ;?ICS_ucUSART1RXBuffer+2204
0x33A0	0x00000000 ;?ICS_ucUSART1RXBuffer+2208
0x33A4	0x00000000 ;?ICS_ucUSART1RXBuffer+2212
0x33A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2216
0x33AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2220
0x33B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2224
0x33B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2228
0x33B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2232
0x33BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2236
0x33C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2240
0x33C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2244
0x33C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2248
0x33CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2252
0x33D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2256
0x33D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2260
0x33D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2264
0x33DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2268
0x33E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2272
0x33E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2276
0x33E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2280
0x33EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2284
0x33F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2288
0x33F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2292
0x33F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2296
0x33FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2300
0x3400	0x00000000 ;?ICS_ucUSART1RXBuffer+2304
0x3404	0x00000000 ;?ICS_ucUSART1RXBuffer+2308
0x3408	0x00000000 ;?ICS_ucUSART1RXBuffer+2312
0x340C	0x00000000 ;?ICS_ucUSART1RXBuffer+2316
0x3410	0x00000000 ;?ICS_ucUSART1RXBuffer+2320
0x3414	0x00000000 ;?ICS_ucUSART1RXBuffer+2324
0x3418	0x00000000 ;?ICS_ucUSART1RXBuffer+2328
0x341C	0x00000000 ;?ICS_ucUSART1RXBuffer+2332
0x3420	0x00000000 ;?ICS_ucUSART1RXBuffer+2336
0x3424	0x00000000 ;?ICS_ucUSART1RXBuffer+2340
0x3428	0x00000000 ;?ICS_ucUSART1RXBuffer+2344
0x342C	0x00000000 ;?ICS_ucUSART1RXBuffer+2348
0x3430	0x00000000 ;?ICS_ucUSART1RXBuffer+2352
0x3434	0x00000000 ;?ICS_ucUSART1RXBuffer+2356
0x3438	0x00000000 ;?ICS_ucUSART1RXBuffer+2360
0x343C	0x00000000 ;?ICS_ucUSART1RXBuffer+2364
0x3440	0x00000000 ;?ICS_ucUSART1RXBuffer+2368
0x3444	0x00000000 ;?ICS_ucUSART1RXBuffer+2372
0x3448	0x00000000 ;?ICS_ucUSART1RXBuffer+2376
0x344C	0x00000000 ;?ICS_ucUSART1RXBuffer+2380
0x3450	0x00000000 ;?ICS_ucUSART1RXBuffer+2384
0x3454	0x00000000 ;?ICS_ucUSART1RXBuffer+2388
0x3458	0x00000000 ;?ICS_ucUSART1RXBuffer+2392
0x345C	0x00000000 ;?ICS_ucUSART1RXBuffer+2396
0x3460	0x00000000 ;?ICS_ucUSART1RXBuffer+2400
0x3464	0x00000000 ;?ICS_ucUSART1RXBuffer+2404
0x3468	0x00000000 ;?ICS_ucUSART1RXBuffer+2408
0x346C	0x00000000 ;?ICS_ucUSART1RXBuffer+2412
0x3470	0x00000000 ;?ICS_ucUSART1RXBuffer+2416
0x3474	0x00000000 ;?ICS_ucUSART1RXBuffer+2420
0x3478	0x00000000 ;?ICS_ucUSART1RXBuffer+2424
0x347C	0x00000000 ;?ICS_ucUSART1RXBuffer+2428
0x3480	0x00000000 ;?ICS_ucUSART1RXBuffer+2432
0x3484	0x00000000 ;?ICS_ucUSART1RXBuffer+2436
0x3488	0x00000000 ;?ICS_ucUSART1RXBuffer+2440
0x348C	0x00000000 ;?ICS_ucUSART1RXBuffer+2444
0x3490	0x00000000 ;?ICS_ucUSART1RXBuffer+2448
0x3494	0x00000000 ;?ICS_ucUSART1RXBuffer+2452
0x3498	0x00000000 ;?ICS_ucUSART1RXBuffer+2456
0x349C	0x00000000 ;?ICS_ucUSART1RXBuffer+2460
0x34A0	0x00000000 ;?ICS_ucUSART1RXBuffer+2464
0x34A4	0x00000000 ;?ICS_ucUSART1RXBuffer+2468
0x34A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2472
0x34AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2476
0x34B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2480
0x34B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2484
0x34B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2488
0x34BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2492
0x34C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2496
0x34C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2500
0x34C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2504
0x34CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2508
0x34D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2512
0x34D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2516
0x34D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2520
0x34DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2524
0x34E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2528
0x34E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2532
0x34E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2536
0x34EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2540
0x34F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2544
0x34F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2548
0x34F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2552
0x34FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2556
0x3500	0x00000000 ;?ICS_ucUSART1RXBuffer+2560
0x3504	0x00000000 ;?ICS_ucUSART1RXBuffer+2564
0x3508	0x00000000 ;?ICS_ucUSART1RXBuffer+2568
0x350C	0x00000000 ;?ICS_ucUSART1RXBuffer+2572
0x3510	0x00000000 ;?ICS_ucUSART1RXBuffer+2576
0x3514	0x00000000 ;?ICS_ucUSART1RXBuffer+2580
0x3518	0x00000000 ;?ICS_ucUSART1RXBuffer+2584
0x351C	0x00000000 ;?ICS_ucUSART1RXBuffer+2588
0x3520	0x00000000 ;?ICS_ucUSART1RXBuffer+2592
0x3524	0x00000000 ;?ICS_ucUSART1RXBuffer+2596
0x3528	0x00000000 ;?ICS_ucUSART1RXBuffer+2600
0x352C	0x00000000 ;?ICS_ucUSART1RXBuffer+2604
0x3530	0x00000000 ;?ICS_ucUSART1RXBuffer+2608
0x3534	0x00000000 ;?ICS_ucUSART1RXBuffer+2612
0x3538	0x00000000 ;?ICS_ucUSART1RXBuffer+2616
0x353C	0x00000000 ;?ICS_ucUSART1RXBuffer+2620
0x3540	0x00000000 ;?ICS_ucUSART1RXBuffer+2624
0x3544	0x00000000 ;?ICS_ucUSART1RXBuffer+2628
0x3548	0x00000000 ;?ICS_ucUSART1RXBuffer+2632
0x354C	0x00000000 ;?ICS_ucUSART1RXBuffer+2636
0x3550	0x00000000 ;?ICS_ucUSART1RXBuffer+2640
0x3554	0x00000000 ;?ICS_ucUSART1RXBuffer+2644
0x3558	0x00000000 ;?ICS_ucUSART1RXBuffer+2648
0x355C	0x00000000 ;?ICS_ucUSART1RXBuffer+2652
0x3560	0x00000000 ;?ICS_ucUSART1RXBuffer+2656
0x3564	0x00000000 ;?ICS_ucUSART1RXBuffer+2660
0x3568	0x00000000 ;?ICS_ucUSART1RXBuffer+2664
0x356C	0x00000000 ;?ICS_ucUSART1RXBuffer+2668
0x3570	0x00000000 ;?ICS_ucUSART1RXBuffer+2672
0x3574	0x00000000 ;?ICS_ucUSART1RXBuffer+2676
0x3578	0x00000000 ;?ICS_ucUSART1RXBuffer+2680
0x357C	0x00000000 ;?ICS_ucUSART1RXBuffer+2684
0x3580	0x00000000 ;?ICS_ucUSART1RXBuffer+2688
0x3584	0x00000000 ;?ICS_ucUSART1RXBuffer+2692
0x3588	0x00000000 ;?ICS_ucUSART1RXBuffer+2696
0x358C	0x00000000 ;?ICS_ucUSART1RXBuffer+2700
0x3590	0x00000000 ;?ICS_ucUSART1RXBuffer+2704
0x3594	0x00000000 ;?ICS_ucUSART1RXBuffer+2708
0x3598	0x00000000 ;?ICS_ucUSART1RXBuffer+2712
0x359C	0x00000000 ;?ICS_ucUSART1RXBuffer+2716
0x35A0	0x00000000 ;?ICS_ucUSART1RXBuffer+2720
0x35A4	0x00000000 ;?ICS_ucUSART1RXBuffer+2724
0x35A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2728
0x35AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2732
0x35B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2736
0x35B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2740
0x35B8	0x00000000 ;?ICS_ucUSART1RXBuffer+2744
0x35BC	0x00000000 ;?ICS_ucUSART1RXBuffer+2748
0x35C0	0x00000000 ;?ICS_ucUSART1RXBuffer+2752
0x35C4	0x00000000 ;?ICS_ucUSART1RXBuffer+2756
0x35C8	0x00000000 ;?ICS_ucUSART1RXBuffer+2760
0x35CC	0x00000000 ;?ICS_ucUSART1RXBuffer+2764
0x35D0	0x00000000 ;?ICS_ucUSART1RXBuffer+2768
0x35D4	0x00000000 ;?ICS_ucUSART1RXBuffer+2772
0x35D8	0x00000000 ;?ICS_ucUSART1RXBuffer+2776
0x35DC	0x00000000 ;?ICS_ucUSART1RXBuffer+2780
0x35E0	0x00000000 ;?ICS_ucUSART1RXBuffer+2784
0x35E4	0x00000000 ;?ICS_ucUSART1RXBuffer+2788
0x35E8	0x00000000 ;?ICS_ucUSART1RXBuffer+2792
0x35EC	0x00000000 ;?ICS_ucUSART1RXBuffer+2796
0x35F0	0x00000000 ;?ICS_ucUSART1RXBuffer+2800
0x35F4	0x00000000 ;?ICS_ucUSART1RXBuffer+2804
0x35F8	0x00000000 ;?ICS_ucUSART1RXBuffer+2808
0x35FC	0x00000000 ;?ICS_ucUSART1RXBuffer+2812
0x3600	0x00000000 ;?ICS_ucUSART1RXBuffer+2816
0x3604	0x00000000 ;?ICS_ucUSART1RXBuffer+2820
0x3608	0x00000000 ;?ICS_ucUSART1RXBuffer+2824
0x360C	0x00000000 ;?ICS_ucUSART1RXBuffer+2828
0x3610	0x00000000 ;?ICS_ucUSART1RXBuffer+2832
0x3614	0x00000000 ;?ICS_ucUSART1RXBuffer+2836
0x3618	0x00000000 ;?ICS_ucUSART1RXBuffer+2840
0x361C	0x00000000 ;?ICS_ucUSART1RXBuffer+2844
0x3620	0x00000000 ;?ICS_ucUSART1RXBuffer+2848
0x3624	0x00000000 ;?ICS_ucUSART1RXBuffer+2852
0x3628	0x00000000 ;?ICS_ucUSART1RXBuffer+2856
0x362C	0x00000000 ;?ICS_ucUSART1RXBuffer+2860
0x3630	0x00000000 ;?ICS_ucUSART1RXBuffer+2864
0x3634	0x00000000 ;?ICS_ucUSART1RXBuffer+2868
0x3638	0x00000000 ;?ICS_ucUSART1RXBuffer+2872
0x363C	0x00000000 ;?ICS_ucUSART1RXBuffer+2876
0x3640	0x00000000 ;?ICS_ucUSART1RXBuffer+2880
0x3644	0x00000000 ;?ICS_ucUSART1RXBuffer+2884
0x3648	0x00000000 ;?ICS_ucUSART1RXBuffer+2888
0x364C	0x00000000 ;?ICS_ucUSART1RXBuffer+2892
0x3650	0x00000000 ;?ICS_ucUSART1RXBuffer+2896
0x3654	0x00000000 ;?ICS_ucUSART1RXBuffer+2900
0x3658	0x00000000 ;?ICS_ucUSART1RXBuffer+2904
0x365C	0x00000000 ;?ICS_ucUSART1RXBuffer+2908
0x3660	0x00000000 ;?ICS_ucUSART1RXBuffer+2912
0x3664	0x00000000 ;?ICS_ucUSART1RXBuffer+2916
0x3668	0x00000000 ;?ICS_ucUSART1RXBuffer+2920
0x366C	0x00000000 ;?ICS_ucUSART1RXBuffer+2924
0x3670	0x00000000 ;?ICS_ucUSART1RXBuffer+2928
0x3674	0x00000000 ;?ICS_ucUSART1RXBuffer+2932
0x3678	0x00000000 ;?ICS_ucUSART1RXBuffer+2936
0x367C	0x00000000 ;?ICS_ucUSART1RXBuffer+2940
0x3680	0x00000000 ;?ICS_ucUSART1RXBuffer+2944
0x3684	0x00000000 ;?ICS_ucUSART1RXBuffer+2948
0x3688	0x00000000 ;?ICS_ucUSART1RXBuffer+2952
0x368C	0x00000000 ;?ICS_ucUSART1RXBuffer+2956
0x3690	0x00000000 ;?ICS_ucUSART1RXBuffer+2960
0x3694	0x00000000 ;?ICS_ucUSART1RXBuffer+2964
0x3698	0x00000000 ;?ICS_ucUSART1RXBuffer+2968
0x369C	0x00000000 ;?ICS_ucUSART1RXBuffer+2972
0x36A0	0x00000000 ;?ICS_ucUSART1RXBuffer+2976
0x36A4	0x00000000 ;?ICS_ucUSART1RXBuffer+2980
0x36A8	0x00000000 ;?ICS_ucUSART1RXBuffer+2984
0x36AC	0x00000000 ;?ICS_ucUSART1RXBuffer+2988
0x36B0	0x00000000 ;?ICS_ucUSART1RXBuffer+2992
0x36B4	0x00000000 ;?ICS_ucUSART1RXBuffer+2996
0x36B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3000
0x36BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3004
0x36C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3008
0x36C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3012
0x36C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3016
0x36CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3020
0x36D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3024
0x36D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3028
0x36D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3032
0x36DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3036
0x36E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3040
0x36E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3044
0x36E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3048
0x36EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3052
0x36F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3056
0x36F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3060
0x36F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3064
0x36FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3068
0x3700	0x00000000 ;?ICS_ucUSART1RXBuffer+3072
0x3704	0x00000000 ;?ICS_ucUSART1RXBuffer+3076
0x3708	0x00000000 ;?ICS_ucUSART1RXBuffer+3080
0x370C	0x00000000 ;?ICS_ucUSART1RXBuffer+3084
0x3710	0x00000000 ;?ICS_ucUSART1RXBuffer+3088
0x3714	0x00000000 ;?ICS_ucUSART1RXBuffer+3092
0x3718	0x00000000 ;?ICS_ucUSART1RXBuffer+3096
0x371C	0x00000000 ;?ICS_ucUSART1RXBuffer+3100
0x3720	0x00000000 ;?ICS_ucUSART1RXBuffer+3104
0x3724	0x00000000 ;?ICS_ucUSART1RXBuffer+3108
0x3728	0x00000000 ;?ICS_ucUSART1RXBuffer+3112
0x372C	0x00000000 ;?ICS_ucUSART1RXBuffer+3116
0x3730	0x00000000 ;?ICS_ucUSART1RXBuffer+3120
0x3734	0x00000000 ;?ICS_ucUSART1RXBuffer+3124
0x3738	0x00000000 ;?ICS_ucUSART1RXBuffer+3128
0x373C	0x00000000 ;?ICS_ucUSART1RXBuffer+3132
0x3740	0x00000000 ;?ICS_ucUSART1RXBuffer+3136
0x3744	0x00000000 ;?ICS_ucUSART1RXBuffer+3140
0x3748	0x00000000 ;?ICS_ucUSART1RXBuffer+3144
0x374C	0x00000000 ;?ICS_ucUSART1RXBuffer+3148
0x3750	0x00000000 ;?ICS_ucUSART1RXBuffer+3152
0x3754	0x00000000 ;?ICS_ucUSART1RXBuffer+3156
0x3758	0x00000000 ;?ICS_ucUSART1RXBuffer+3160
0x375C	0x00000000 ;?ICS_ucUSART1RXBuffer+3164
0x3760	0x00000000 ;?ICS_ucUSART1RXBuffer+3168
0x3764	0x00000000 ;?ICS_ucUSART1RXBuffer+3172
0x3768	0x00000000 ;?ICS_ucUSART1RXBuffer+3176
0x376C	0x00000000 ;?ICS_ucUSART1RXBuffer+3180
0x3770	0x00000000 ;?ICS_ucUSART1RXBuffer+3184
0x3774	0x00000000 ;?ICS_ucUSART1RXBuffer+3188
0x3778	0x00000000 ;?ICS_ucUSART1RXBuffer+3192
0x377C	0x00000000 ;?ICS_ucUSART1RXBuffer+3196
0x3780	0x00000000 ;?ICS_ucUSART1RXBuffer+3200
0x3784	0x00000000 ;?ICS_ucUSART1RXBuffer+3204
0x3788	0x00000000 ;?ICS_ucUSART1RXBuffer+3208
0x378C	0x00000000 ;?ICS_ucUSART1RXBuffer+3212
0x3790	0x00000000 ;?ICS_ucUSART1RXBuffer+3216
0x3794	0x00000000 ;?ICS_ucUSART1RXBuffer+3220
0x3798	0x00000000 ;?ICS_ucUSART1RXBuffer+3224
0x379C	0x00000000 ;?ICS_ucUSART1RXBuffer+3228
0x37A0	0x00000000 ;?ICS_ucUSART1RXBuffer+3232
0x37A4	0x00000000 ;?ICS_ucUSART1RXBuffer+3236
0x37A8	0x00000000 ;?ICS_ucUSART1RXBuffer+3240
0x37AC	0x00000000 ;?ICS_ucUSART1RXBuffer+3244
0x37B0	0x00000000 ;?ICS_ucUSART1RXBuffer+3248
0x37B4	0x00000000 ;?ICS_ucUSART1RXBuffer+3252
0x37B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3256
0x37BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3260
0x37C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3264
0x37C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3268
0x37C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3272
0x37CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3276
0x37D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3280
0x37D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3284
0x37D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3288
0x37DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3292
0x37E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3296
0x37E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3300
0x37E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3304
0x37EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3308
0x37F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3312
0x37F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3316
0x37F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3320
0x37FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3324
0x3800	0x00000000 ;?ICS_ucUSART1RXBuffer+3328
0x3804	0x00000000 ;?ICS_ucUSART1RXBuffer+3332
0x3808	0x00000000 ;?ICS_ucUSART1RXBuffer+3336
0x380C	0x00000000 ;?ICS_ucUSART1RXBuffer+3340
0x3810	0x00000000 ;?ICS_ucUSART1RXBuffer+3344
0x3814	0x00000000 ;?ICS_ucUSART1RXBuffer+3348
0x3818	0x00000000 ;?ICS_ucUSART1RXBuffer+3352
0x381C	0x00000000 ;?ICS_ucUSART1RXBuffer+3356
0x3820	0x00000000 ;?ICS_ucUSART1RXBuffer+3360
0x3824	0x00000000 ;?ICS_ucUSART1RXBuffer+3364
0x3828	0x00000000 ;?ICS_ucUSART1RXBuffer+3368
0x382C	0x00000000 ;?ICS_ucUSART1RXBuffer+3372
0x3830	0x00000000 ;?ICS_ucUSART1RXBuffer+3376
0x3834	0x00000000 ;?ICS_ucUSART1RXBuffer+3380
0x3838	0x00000000 ;?ICS_ucUSART1RXBuffer+3384
0x383C	0x00000000 ;?ICS_ucUSART1RXBuffer+3388
0x3840	0x00000000 ;?ICS_ucUSART1RXBuffer+3392
0x3844	0x00000000 ;?ICS_ucUSART1RXBuffer+3396
0x3848	0x00000000 ;?ICS_ucUSART1RXBuffer+3400
0x384C	0x00000000 ;?ICS_ucUSART1RXBuffer+3404
0x3850	0x00000000 ;?ICS_ucUSART1RXBuffer+3408
0x3854	0x00000000 ;?ICS_ucUSART1RXBuffer+3412
0x3858	0x00000000 ;?ICS_ucUSART1RXBuffer+3416
0x385C	0x00000000 ;?ICS_ucUSART1RXBuffer+3420
0x3860	0x00000000 ;?ICS_ucUSART1RXBuffer+3424
0x3864	0x00000000 ;?ICS_ucUSART1RXBuffer+3428
0x3868	0x00000000 ;?ICS_ucUSART1RXBuffer+3432
0x386C	0x00000000 ;?ICS_ucUSART1RXBuffer+3436
0x3870	0x00000000 ;?ICS_ucUSART1RXBuffer+3440
0x3874	0x00000000 ;?ICS_ucUSART1RXBuffer+3444
0x3878	0x00000000 ;?ICS_ucUSART1RXBuffer+3448
0x387C	0x00000000 ;?ICS_ucUSART1RXBuffer+3452
0x3880	0x00000000 ;?ICS_ucUSART1RXBuffer+3456
0x3884	0x00000000 ;?ICS_ucUSART1RXBuffer+3460
0x3888	0x00000000 ;?ICS_ucUSART1RXBuffer+3464
0x388C	0x00000000 ;?ICS_ucUSART1RXBuffer+3468
0x3890	0x00000000 ;?ICS_ucUSART1RXBuffer+3472
0x3894	0x00000000 ;?ICS_ucUSART1RXBuffer+3476
0x3898	0x00000000 ;?ICS_ucUSART1RXBuffer+3480
0x389C	0x00000000 ;?ICS_ucUSART1RXBuffer+3484
0x38A0	0x00000000 ;?ICS_ucUSART1RXBuffer+3488
0x38A4	0x00000000 ;?ICS_ucUSART1RXBuffer+3492
0x38A8	0x00000000 ;?ICS_ucUSART1RXBuffer+3496
0x38AC	0x00000000 ;?ICS_ucUSART1RXBuffer+3500
0x38B0	0x00000000 ;?ICS_ucUSART1RXBuffer+3504
0x38B4	0x00000000 ;?ICS_ucUSART1RXBuffer+3508
0x38B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3512
0x38BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3516
0x38C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3520
0x38C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3524
0x38C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3528
0x38CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3532
0x38D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3536
0x38D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3540
0x38D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3544
0x38DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3548
0x38E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3552
0x38E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3556
0x38E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3560
0x38EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3564
0x38F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3568
0x38F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3572
0x38F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3576
0x38FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3580
0x3900	0x00000000 ;?ICS_ucUSART1RXBuffer+3584
0x3904	0x00000000 ;?ICS_ucUSART1RXBuffer+3588
0x3908	0x00000000 ;?ICS_ucUSART1RXBuffer+3592
0x390C	0x00000000 ;?ICS_ucUSART1RXBuffer+3596
0x3910	0x00000000 ;?ICS_ucUSART1RXBuffer+3600
0x3914	0x00000000 ;?ICS_ucUSART1RXBuffer+3604
0x3918	0x00000000 ;?ICS_ucUSART1RXBuffer+3608
0x391C	0x00000000 ;?ICS_ucUSART1RXBuffer+3612
0x3920	0x00000000 ;?ICS_ucUSART1RXBuffer+3616
0x3924	0x00000000 ;?ICS_ucUSART1RXBuffer+3620
0x3928	0x00000000 ;?ICS_ucUSART1RXBuffer+3624
0x392C	0x00000000 ;?ICS_ucUSART1RXBuffer+3628
0x3930	0x00000000 ;?ICS_ucUSART1RXBuffer+3632
0x3934	0x00000000 ;?ICS_ucUSART1RXBuffer+3636
0x3938	0x00000000 ;?ICS_ucUSART1RXBuffer+3640
0x393C	0x00000000 ;?ICS_ucUSART1RXBuffer+3644
0x3940	0x00000000 ;?ICS_ucUSART1RXBuffer+3648
0x3944	0x00000000 ;?ICS_ucUSART1RXBuffer+3652
0x3948	0x00000000 ;?ICS_ucUSART1RXBuffer+3656
0x394C	0x00000000 ;?ICS_ucUSART1RXBuffer+3660
0x3950	0x00000000 ;?ICS_ucUSART1RXBuffer+3664
0x3954	0x00000000 ;?ICS_ucUSART1RXBuffer+3668
0x3958	0x00000000 ;?ICS_ucUSART1RXBuffer+3672
0x395C	0x00000000 ;?ICS_ucUSART1RXBuffer+3676
0x3960	0x00000000 ;?ICS_ucUSART1RXBuffer+3680
0x3964	0x00000000 ;?ICS_ucUSART1RXBuffer+3684
0x3968	0x00000000 ;?ICS_ucUSART1RXBuffer+3688
0x396C	0x00000000 ;?ICS_ucUSART1RXBuffer+3692
0x3970	0x00000000 ;?ICS_ucUSART1RXBuffer+3696
0x3974	0x00000000 ;?ICS_ucUSART1RXBuffer+3700
0x3978	0x00000000 ;?ICS_ucUSART1RXBuffer+3704
0x397C	0x00000000 ;?ICS_ucUSART1RXBuffer+3708
0x3980	0x00000000 ;?ICS_ucUSART1RXBuffer+3712
0x3984	0x00000000 ;?ICS_ucUSART1RXBuffer+3716
0x3988	0x00000000 ;?ICS_ucUSART1RXBuffer+3720
0x398C	0x00000000 ;?ICS_ucUSART1RXBuffer+3724
0x3990	0x00000000 ;?ICS_ucUSART1RXBuffer+3728
0x3994	0x00000000 ;?ICS_ucUSART1RXBuffer+3732
0x3998	0x00000000 ;?ICS_ucUSART1RXBuffer+3736
0x399C	0x00000000 ;?ICS_ucUSART1RXBuffer+3740
0x39A0	0x00000000 ;?ICS_ucUSART1RXBuffer+3744
0x39A4	0x00000000 ;?ICS_ucUSART1RXBuffer+3748
0x39A8	0x00000000 ;?ICS_ucUSART1RXBuffer+3752
0x39AC	0x00000000 ;?ICS_ucUSART1RXBuffer+3756
0x39B0	0x00000000 ;?ICS_ucUSART1RXBuffer+3760
0x39B4	0x00000000 ;?ICS_ucUSART1RXBuffer+3764
0x39B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3768
0x39BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3772
0x39C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3776
0x39C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3780
0x39C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3784
0x39CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3788
0x39D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3792
0x39D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3796
0x39D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3800
0x39DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3804
0x39E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3808
0x39E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3812
0x39E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3816
0x39EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3820
0x39F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3824
0x39F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3828
0x39F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3832
0x39FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3836
0x3A00	0x00000000 ;?ICS_ucUSART1RXBuffer+3840
0x3A04	0x00000000 ;?ICS_ucUSART1RXBuffer+3844
0x3A08	0x00000000 ;?ICS_ucUSART1RXBuffer+3848
0x3A0C	0x00000000 ;?ICS_ucUSART1RXBuffer+3852
0x3A10	0x00000000 ;?ICS_ucUSART1RXBuffer+3856
0x3A14	0x00000000 ;?ICS_ucUSART1RXBuffer+3860
0x3A18	0x00000000 ;?ICS_ucUSART1RXBuffer+3864
0x3A1C	0x00000000 ;?ICS_ucUSART1RXBuffer+3868
0x3A20	0x00000000 ;?ICS_ucUSART1RXBuffer+3872
0x3A24	0x00000000 ;?ICS_ucUSART1RXBuffer+3876
0x3A28	0x00000000 ;?ICS_ucUSART1RXBuffer+3880
0x3A2C	0x00000000 ;?ICS_ucUSART1RXBuffer+3884
0x3A30	0x00000000 ;?ICS_ucUSART1RXBuffer+3888
0x3A34	0x00000000 ;?ICS_ucUSART1RXBuffer+3892
0x3A38	0x00000000 ;?ICS_ucUSART1RXBuffer+3896
0x3A3C	0x00000000 ;?ICS_ucUSART1RXBuffer+3900
0x3A40	0x00000000 ;?ICS_ucUSART1RXBuffer+3904
0x3A44	0x00000000 ;?ICS_ucUSART1RXBuffer+3908
0x3A48	0x00000000 ;?ICS_ucUSART1RXBuffer+3912
0x3A4C	0x00000000 ;?ICS_ucUSART1RXBuffer+3916
0x3A50	0x00000000 ;?ICS_ucUSART1RXBuffer+3920
0x3A54	0x00000000 ;?ICS_ucUSART1RXBuffer+3924
0x3A58	0x00000000 ;?ICS_ucUSART1RXBuffer+3928
0x3A5C	0x00000000 ;?ICS_ucUSART1RXBuffer+3932
0x3A60	0x00000000 ;?ICS_ucUSART1RXBuffer+3936
0x3A64	0x00000000 ;?ICS_ucUSART1RXBuffer+3940
0x3A68	0x00000000 ;?ICS_ucUSART1RXBuffer+3944
0x3A6C	0x00000000 ;?ICS_ucUSART1RXBuffer+3948
0x3A70	0x00000000 ;?ICS_ucUSART1RXBuffer+3952
0x3A74	0x00000000 ;?ICS_ucUSART1RXBuffer+3956
0x3A78	0x00000000 ;?ICS_ucUSART1RXBuffer+3960
0x3A7C	0x00000000 ;?ICS_ucUSART1RXBuffer+3964
0x3A80	0x00000000 ;?ICS_ucUSART1RXBuffer+3968
0x3A84	0x00000000 ;?ICS_ucUSART1RXBuffer+3972
0x3A88	0x00000000 ;?ICS_ucUSART1RXBuffer+3976
0x3A8C	0x00000000 ;?ICS_ucUSART1RXBuffer+3980
0x3A90	0x00000000 ;?ICS_ucUSART1RXBuffer+3984
0x3A94	0x00000000 ;?ICS_ucUSART1RXBuffer+3988
0x3A98	0x00000000 ;?ICS_ucUSART1RXBuffer+3992
0x3A9C	0x00000000 ;?ICS_ucUSART1RXBuffer+3996
0x3AA0	0x00000000 ;?ICS_ucUSART1RXBuffer+4000
0x3AA4	0x00000000 ;?ICS_ucUSART1RXBuffer+4004
0x3AA8	0x00000000 ;?ICS_ucUSART1RXBuffer+4008
0x3AAC	0x00000000 ;?ICS_ucUSART1RXBuffer+4012
0x3AB0	0x00000000 ;?ICS_ucUSART1RXBuffer+4016
0x3AB4	0x00000000 ;?ICS_ucUSART1RXBuffer+4020
0x3AB8	0x00000000 ;?ICS_ucUSART1RXBuffer+4024
0x3ABC	0x00000000 ;?ICS_ucUSART1RXBuffer+4028
0x3AC0	0x00000000 ;?ICS_ucUSART1RXBuffer+4032
0x3AC4	0x00000000 ;?ICS_ucUSART1RXBuffer+4036
0x3AC8	0x00000000 ;?ICS_ucUSART1RXBuffer+4040
0x3ACC	0x00000000 ;?ICS_ucUSART1RXBuffer+4044
0x3AD0	0x00000000 ;?ICS_ucUSART1RXBuffer+4048
0x3AD4	0x00000000 ;?ICS_ucUSART1RXBuffer+4052
0x3AD8	0x00000000 ;?ICS_ucUSART1RXBuffer+4056
0x3ADC	0x00000000 ;?ICS_ucUSART1RXBuffer+4060
0x3AE0	0x00000000 ;?ICS_ucUSART1RXBuffer+4064
0x3AE4	0x00000000 ;?ICS_ucUSART1RXBuffer+4068
0x3AE8	0x00000000 ;?ICS_ucUSART1RXBuffer+4072
0x3AEC	0x00000000 ;?ICS_ucUSART1RXBuffer+4076
0x3AF0	0x00000000 ;?ICS_ucUSART1RXBuffer+4080
0x3AF4	0x00000000 ;?ICS_ucUSART1RXBuffer+4084
0x3AF8	0x00000000 ;?ICS_ucUSART1RXBuffer+4088
0x3AFC	0x00000000 ;?ICS_ucUSART1RXBuffer+4092
; end of ?ICS_ucUSART1RXBuffer
;DriverRF4463PROMain.c,0 :: ?ICS_ulRF4463Step [4]
0x3B00	0x000000FA ;?ICS_ulRF4463Step+0
; end of ?ICS_ulRF4463Step
;,0 :: _initBlock_6 [42]
; Containing: ?ICS_ucSPI2ByteReceived [1]
;             ?ICS_RF_MODEM_MOD_TYPE_12_data [16]
;             ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data [12]
;             ?ICS_RF_MODEM_AFC_GEAR_7_data [13]
0x3B04	0x0C201100 ;_initBlock_6+0 : ?ICS_ucSPI2ByteReceived at 0x3B04 : ?ICS_RF_MODEM_MOD_TYPE_12_data at 0x3B05
0x3B08	0x00000000 ;_initBlock_6+4
0x3B0C	0x00000000 ;_initBlock_6+8
0x3B10	0x00000000 ;_initBlock_6+12
0x3B14	0x08201100 ;_initBlock_6+16 : ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data at 0x3B15
0x3B18	0x00000018 ;_initBlock_6+20
0x3B1C	0x00000000 ;_initBlock_6+24
0x3B20	0x07201100 ;_initBlock_6+28 : ?ICS_RF_MODEM_AFC_GEAR_7_data at 0x3B21
0x3B24	0x0000002C ;_initBlock_6+32
0x3B28	0x00000000 ;_initBlock_6+36
0x3B2C	0x0000 ;_initBlock_6+40
; end of _initBlock_6
;,0 :: _initBlock_7 [76]
; Containing: ?ICS_RF_MODEM_OOK_CNT1_11_data [15]
;             ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data [16]
;             ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data [16]
;             ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data [16]
;             ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data [13]
0x3B2E	0x420B2011 ;_initBlock_7+0 : ?ICS_RF_MODEM_OOK_CNT1_11_data at 0x3B2E
0x3B32	0x00000000 ;_initBlock_7+4
0x3B36	0x00000000 ;_initBlock_7+8
0x3B3A	0x11000000 ;_initBlock_7+12 : ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data at 0x3B3D
0x3B3E	0x00000C21 ;_initBlock_7+16
0x3B42	0x00000000 ;_initBlock_7+20
0x3B46	0x00000000 ;_initBlock_7+24
0x3B4A	0x11000000 ;_initBlock_7+28 : ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data at 0x3B4D
0x3B4E	0x000C0C21 ;_initBlock_7+32
0x3B52	0x00000000 ;_initBlock_7+36
0x3B56	0x00000000 ;_initBlock_7+40
0x3B5A	0x11000000 ;_initBlock_7+44 : ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data at 0x3B5D
0x3B5E	0x00180C21 ;_initBlock_7+48
0x3B62	0x00000000 ;_initBlock_7+52
0x3B66	0x00000000 ;_initBlock_7+56
0x3B6A	0x11000000 ;_initBlock_7+60 : ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data at 0x3B6D
0x3B6E	0x00380920 ;_initBlock_7+64
0x3B72	0x00000000 ;_initBlock_7+68
0x3B76	0x00000000 ;_initBlock_7+72
; end of _initBlock_7
;,0 :: _initBlock_8 [24]
; Containing: ?ICS_RF_MODEM_BCR_OSR_1_9_data [13]
;             ?ICS_RF_SYNTH_PFDCP_CPFF_7_data [11]
0x3B7A	0x22092011 ;_initBlock_8+0 : ?ICS_RF_MODEM_BCR_OSR_1_9_data at 0x3B7A
0x3B7E	0x00000000 ;_initBlock_8+4
0x3B82	0x00000000 ;_initBlock_8+8
0x3B86	0x07231100 ;_initBlock_8+12 : ?ICS_RF_SYNTH_PFDCP_CPFF_7_data at 0x3B87
0x3B8A	0x00000000 ;_initBlock_8+16
0x3B8E	0x00000000 ;_initBlock_8+20
; end of _initBlock_8
;,0 :: _initBlock_9 [2]
; Containing: ?ICS_ucRF4463MatchEnabled [1]
;             ?ICS_ucRF4463ByteMatch1 [1]
0x3B92	0x0101 ;_initBlock_9+0 : ?ICS_ucRF4463MatchEnabled at 0x3B92 : ?ICS_ucRF4463ByteMatch1 at 0x3B93
; end of _initBlock_9
;,0 :: _initBlock_10 [2]
; Containing: ?ICS_ucRF4463ByteMask1 [1]
;             ?ICS_ucRF4463MatchEnableReg [1]
0x3B94	0x40FF ;_initBlock_10+0 : ?ICS_ucRF4463ByteMask1 at 0x3B94 : ?ICS_ucRF4463MatchEnableReg at 0x3B95
; end of _initBlock_10
;,0 :: _initBlock_11 [2]
; Containing: ?ICS_ucRF4463ByteMatch2 [1]
;             ?ICS_ucRF4463ByteMask2 [1]
0x3B96	0xFF01 ;_initBlock_11+0 : ?ICS_ucRF4463ByteMatch2 at 0x3B96 : ?ICS_ucRF4463ByteMask2 at 0x3B97
; end of _initBlock_11
;,0 :: _initBlock_12 [2]
; Containing: ?ICS_ucRF4463ByteMatch3 [1]
;             ?ICS_ucRF4463ByteMask3 [1]
0x3B98	0xFF01 ;_initBlock_12+0 : ?ICS_ucRF4463ByteMatch3 at 0x3B98 : ?ICS_ucRF4463ByteMask3 at 0x3B99
; end of _initBlock_12
;,0 :: _initBlock_13 [2]
; Containing: ?ICS_ucRF4463ByteMatch4 [1]
;             ?ICS_ucRF4463ByteMask4 [1]
0x3B9A	0xFF01 ;_initBlock_13+0 : ?ICS_ucRF4463ByteMatch4 at 0x3B9A : ?ICS_ucRF4463ByteMask4 at 0x3B9B
; end of _initBlock_13
;,0 :: _initBlock_14 [2]
; Containing: ?ICSDriverRF4463PROMain_ucRF4463IRQ [1]
;             ?ICS_ucRF4463FreqChannel [1]
0x3B9C	0x0100 ;_initBlock_14+0 : ?ICSDriverRF4463PROMain_ucRF4463IRQ at 0x3B9C : ?ICS_ucRF4463FreqChannel at 0x3B9D
; end of _initBlock_14
;,0 :: _initBlock_15 [1046]
; Containing: ?ICS_ucData1 [1]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850 [132]
;             RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433 [132]
;             RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850 [132]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850 [132]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433 [132]
;             RF_MODEM_MOD_TYPE_12 [132]
;             RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433 [132]
;             RF_MODEM_OOK_CNT1_11_433 [121]
0x3B9E	0x30C4FF00 ;_initBlock_15+0 : ?ICS_ucData1 at 0x3B9E : RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850 at 0x3B9F
0x3BA2	0xB8B5F57F ;_initBlock_15+4
0x3BA6	0x161705DE ;_initBlock_15+8
0x3BAA	0x30C4FF0C ;_initBlock_15+12
0x3BAE	0xB8B5F57F ;_initBlock_15+16
0x3BB2	0x161705DE ;_initBlock_15+20
0x3BB6	0x0FBAFF0C ;_initBlock_15+24
0x3BBA	0xC9A9CF51 ;_initBlock_15+28
0x3BBE	0x0F1E1BFC ;_initBlock_15+32
0x3BC2	0x30C4FF01 ;_initBlock_15+36
0x3BC6	0xB8B5F57F ;_initBlock_15+40
0x3BCA	0x161705DE ;_initBlock_15+44
0x3BCE	0x0FBAFF0C ;_initBlock_15+48
0x3BD2	0xC9A9CF51 ;_initBlock_15+52
0x3BD6	0x0F1E1BFC ;_initBlock_15+56
0x3BDA	0x30C4FF01 ;_initBlock_15+60
0x3BDE	0xB8B5F57F ;_initBlock_15+64
0x3BE2	0x161705DE ;_initBlock_15+68
0x3BE6	0x1B647E0C ;_initBlock_15+72
0x3BEA	0xDD0B58BA ;_initBlock_15+76
0x3BEE	0xF6E6D6CE ;_initBlock_15+80
0x3BF2	0x1B647E00 ;_initBlock_15+84
0x3BF6	0xDD0B58BA ;_initBlock_15+88
0x3BFA	0xF6E6D6CE ;_initBlock_15+92
0x3BFE	0x002B3900 ;_initBlock_15+96
0x3C02	0x0C3F7FC3 ;_initBlock_15+100
0x3C06	0xE3DCDCEC ;_initBlock_15+104
0x3C0A	0x2681A2ED ;_initBlock_15+108
0x3C0E	0xC8EE3FAF ;_initBlock_15+112
0x3C12	0x02F2DBC7 ;_initBlock_15+116
0x3C16	0x30A1CC08 ;_initBlock_15+120
0x3C1A	0xB9D121A0 ;_initBlock_15+124
0x3C1E	0x1205EAC9 ;_initBlock_15+128
0x3C22	0x05DEB811 ;_initBlock_15+132 : RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433 at 0x3C23
0x3C26	0x030C1617 ;_initBlock_15+136
0x3C2A	0x00FF1500 ;_initBlock_15+140
0x3C2E	0x05DEB800 ;_initBlock_15+144
0x3C32	0x030C1617 ;_initBlock_15+148
0x3C36	0x00FF1500 ;_initBlock_15+152
0x3C3A	0xEAC9B900 ;_initBlock_15+156
0x3C3E	0x0A111205 ;_initBlock_15+160
0x3C42	0x03FC1504 ;_initBlock_15+164
0x3C46	0x05DEB800 ;_initBlock_15+168
0x3C4A	0x030C1617 ;_initBlock_15+172
0x3C4E	0x00FF1500 ;_initBlock_15+176
0x3C52	0xEAC9B900 ;_initBlock_15+180
0x3C56	0x0A111205 ;_initBlock_15+184
0x3C5A	0x03FC1504 ;_initBlock_15+188
0x3C5E	0xD6CEDD00 ;_initBlock_15+192
0x3C62	0x0300F6E6 ;_initBlock_15+196
0x3C66	0x3FF01503 ;_initBlock_15+200
0x3C6A	0xD6DBF400 ;_initBlock_15+204
0x3C6E	0xFEF7ECDF ;_initBlock_15+208
0x3C72	0xFFF01501 ;_initBlock_15+212
0x3C76	0xD6DBF403 ;_initBlock_15+216
0x3C7A	0xFEF7ECDF ;_initBlock_15+220
0x3C7E	0xFFF01501 ;_initBlock_15+224
0x3C82	0xDCEC0C03 ;_initBlock_15+228
0x3C86	0xF6EDE3DC ;_initBlock_15+232
0x3C8A	0xFFC015FD ;_initBlock_15+236
0x3C8E	0xDBC7C80F ;_initBlock_15+240
0x3C92	0x070802F2 ;_initBlock_15+244
0x3C96	0x0FFC1503 ;_initBlock_15+248
0x3C9A	0xEAC9B900 ;_initBlock_15+252
0x3C9E	0x0A111205 ;_initBlock_15+256
0x3CA2	0x03FC1504 ;_initBlock_15+260
0x3CA6	0x05DEB800 ;_initBlock_15+264 : RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850 at 0x3CA7
0x3CAA	0x030C1617 ;_initBlock_15+268
0x3CAE	0x00FF1500 ;_initBlock_15+272
0x3CB2	0x05DEB800 ;_initBlock_15+276
0x3CB6	0x030C1617 ;_initBlock_15+280
0x3CBA	0x00FF1500 ;_initBlock_15+284
0x3CBE	0x1BFCC900 ;_initBlock_15+288
0x3CC2	0xFC010F1E ;_initBlock_15+292
0x3CC6	0x00FF15FD ;_initBlock_15+296
0x3CCA	0x05DEB80F ;_initBlock_15+300
0x3CCE	0x030C1617 ;_initBlock_15+304
0x3CD2	0x00FF1500 ;_initBlock_15+308
0x3CD6	0x1BFCC900 ;_initBlock_15+312
0x3CDA	0xFC010F1E ;_initBlock_15+316
0x3CDE	0x00FF15FD ;_initBlock_15+320
0x3CE2	0x05DEB80F ;_initBlock_15+324
0x3CE6	0x030C1617 ;_initBlock_15+328
0x3CEA	0x00FF1500 ;_initBlock_15+332
0x3CEE	0xD6CEDD00 ;_initBlock_15+336
0x3CF2	0x0300F6E6 ;_initBlock_15+340
0x3CF6	0x3FF01503 ;_initBlock_15+344
0x3CFA	0x15030300 ;_initBlock_15+348
0x3CFE	0x7E003FF0 ;_initBlock_15+352
0x3D02	0x58BA1B64 ;_initBlock_15+356
0x3D06	0xDCEC0C0B ;_initBlock_15+360
0x3D0A	0xF6EDE3DC ;_initBlock_15+364
0x3D0E	0xFFC015FD ;_initBlock_15+368
0x3D12	0xDBC7C80F ;_initBlock_15+372
0x3D16	0x070802F2 ;_initBlock_15+376
0x3D1A	0x0FFC1503 ;_initBlock_15+380
0x3D1E	0xEAC9B900 ;_initBlock_15+384
0x3D22	0x0A111205 ;_initBlock_15+388
0x3D26	0x03FC1504 ;_initBlock_15+392
0x3D2A	0x15000300 ;_initBlock_15+396 : RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850 at 0x3D2B
0x3D2E	0xFF0000FF ;_initBlock_15+400
0x3D32	0xF57F30C4 ;_initBlock_15+404
0x3D36	0x150003B5 ;_initBlock_15+408
0x3D3A	0xFF0000FF ;_initBlock_15+412
0x3D3E	0xF57F30C4 ;_initBlock_15+416
0x3D42	0x15FDFCB5 ;_initBlock_15+420
0x3D46	0xFF0F00FF ;_initBlock_15+424
0x3D4A	0xCF510FBA ;_initBlock_15+428
0x3D4E	0x150003A9 ;_initBlock_15+432
0x3D52	0xFF0000FF ;_initBlock_15+436
0x3D56	0xF57F30C4 ;_initBlock_15+440
0x3D5A	0x15FDFCB5 ;_initBlock_15+444
0x3D5E	0xFF0F00FF ;_initBlock_15+448
0x3D62	0xCF510FBA ;_initBlock_15+452
0x3D66	0x150003A9 ;_initBlock_15+456
0x3D6A	0xFF0000FF ;_initBlock_15+460
0x3D6E	0xF57F30C4 ;_initBlock_15+464
0x3D72	0x150303B5 ;_initBlock_15+468
0x3D76	0x7E003FF0 ;_initBlock_15+472
0x3D7A	0x58BA1B64 ;_initBlock_15+476
0x3D7E	0x15FDF60B ;_initBlock_15+480
0x3D82	0x390FFFC0 ;_initBlock_15+484
0x3D86	0x7FC3002B ;_initBlock_15+488
0x3D8A	0x1503073F ;_initBlock_15+492
0x3D8E	0xA2000FFC ;_initBlock_15+496
0x3D92	0x3FAF2681 ;_initBlock_15+500
0x3D96	0x15040AEE ;_initBlock_15+504
0x3D9A	0xCC0003FC ;_initBlock_15+508
0x3D9E	0x21A030A1 ;_initBlock_15+512
0x3DA2	0x000000D1 ;_initBlock_15+516
0x3DA6	0x00000000 ;_initBlock_15+520
0x3DAA	0x00000000 ;_initBlock_15+524
0x3DAE	0x15000300 ;_initBlock_15+528 : RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433 at 0x3DAF
0x3DB2	0xFF0000FF ;_initBlock_15+532
0x3DB6	0xF57F30C4 ;_initBlock_15+536
0x3DBA	0x150003B5 ;_initBlock_15+540
0x3DBE	0xFF0000FF ;_initBlock_15+544
0x3DC2	0xF57F30C4 ;_initBlock_15+548
0x3DC6	0x15040AB5 ;_initBlock_15+552
0x3DCA	0xCC0003FC ;_initBlock_15+556
0x3DCE	0x21A030A1 ;_initBlock_15+560
0x3DD2	0x150003D1 ;_initBlock_15+564
0x3DD6	0xFF0000FF ;_initBlock_15+568
0x3DDA	0xF57F30C4 ;_initBlock_15+572
0x3DDE	0x15040AB5 ;_initBlock_15+576
0x3DE2	0xCC0003FC ;_initBlock_15+580
0x3DE6	0x21A030A1 ;_initBlock_15+584
0x3DEA	0x150303D1 ;_initBlock_15+588
0x3DEE	0x7E003FF0 ;_initBlock_15+592
0x3DF2	0x58BA1B64 ;_initBlock_15+596
0x3DF6	0x1501FE0B ;_initBlock_15+600
0x3DFA	0x5B03FFF0 ;_initBlock_15+604
0x3DFE	0x6DC00F47 ;_initBlock_15+608
0x3E02	0x1501FE25 ;_initBlock_15+612
0x3E06	0x5B03FFF0 ;_initBlock_15+616
0x3E0A	0x6DC00F47 ;_initBlock_15+620
0x3E0E	0x15FDF625 ;_initBlock_15+624
0x3E12	0x390FFFC0 ;_initBlock_15+628
0x3E16	0x7FC3002B ;_initBlock_15+632
0x3E1A	0x1503073F ;_initBlock_15+636
0x3E1E	0xA2000FFC ;_initBlock_15+640
0x3E22	0x3FAF2681 ;_initBlock_15+644
0x3E26	0x15040AEE ;_initBlock_15+648
0x3E2A	0xCC0003FC ;_initBlock_15+652
0x3E2E	0x21A030A1 ;_initBlock_15+656
0x3E32	0x070003D1 ;_initBlock_15+660 : RF_MODEM_MOD_TYPE_12 at 0x3E33
0x3E36	0x04C01200 ;_initBlock_15+664
0x3E3A	0x00C0C62D ;_initBlock_15+668
0x3E3E	0x07000300 ;_initBlock_15+672
0x3E42	0x04802500 ;_initBlock_15+676
0x3E46	0x00C0C62D ;_initBlock_15+680
0x3E4A	0x07000300 ;_initBlock_15+684
0x3E4E	0x04004B00 ;_initBlock_15+688
0x3E52	0x00C0C62D ;_initBlock_15+692
0x3E56	0x07000300 ;_initBlock_15+696
0x3E5A	0x04009600 ;_initBlock_15+700
0x3E5E	0x00C0C62D ;_initBlock_15+704
0x3E62	0x07000300 ;_initBlock_15+708
0x3E66	0x04002C01 ;_initBlock_15+712
0x3E6A	0x00C0C62D ;_initBlock_15+716
0x3E6E	0x07000301 ;_initBlock_15+720
0x3E72	0x08002C01 ;_initBlock_15+724
0x3E76	0x00C0C62D ;_initBlock_15+728
0x3E7A	0x07000301 ;_initBlock_15+732
0x3E7E	0x08005802 ;_initBlock_15+736
0x3E82	0x00C0C62D ;_initBlock_15+740
0x3E86	0x07000301 ;_initBlock_15+744
0x3E8A	0x08008403 ;_initBlock_15+748
0x3E8E	0x00C0C62D ;_initBlock_15+752
0x3E92	0x07000301 ;_initBlock_15+756
0x3E96	0x01001027 ;_initBlock_15+760
0x3E9A	0x0080C3C9 ;_initBlock_15+764
0x3E9E	0x07000301 ;_initBlock_15+768
0x3EA2	0x01404B4C ;_initBlock_15+772
0x3EA6	0x0080C3C9 ;_initBlock_15+776
0x3EAA	0x0700031B ;_initBlock_15+780
0x3EAE	0x04D00700 ;_initBlock_15+784
0x3EB2	0x00C0C62D ;_initBlock_15+788
0x3EB6	0x30C4FF00 ;_initBlock_15+792 : RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433 at 0x3EB7
0x3EBA	0xB8B5F57F ;_initBlock_15+796
0x3EBE	0x161705DE ;_initBlock_15+800
0x3EC2	0x30C4FF0C ;_initBlock_15+804
0x3EC6	0xB8B5F57F ;_initBlock_15+808
0x3ECA	0x161705DE ;_initBlock_15+812
0x3ECE	0x30A1CC0C ;_initBlock_15+816
0x3ED2	0xB9D121A0 ;_initBlock_15+820
0x3ED6	0x1205EAC9 ;_initBlock_15+824
0x3EDA	0x30C4FF11 ;_initBlock_15+828
0x3EDE	0xB8B5F57F ;_initBlock_15+832
0x3EE2	0x161705DE ;_initBlock_15+836
0x3EE6	0x30A1CC0C ;_initBlock_15+840
0x3EEA	0xB9D121A0 ;_initBlock_15+844
0x3EEE	0x1205EAC9 ;_initBlock_15+848
0x3EF2	0x1B647E11 ;_initBlock_15+852
0x3EF6	0xDD0B58BA ;_initBlock_15+856
0x3EFA	0xF6E6D6CE ;_initBlock_15+860
0x3EFE	0x0F475B00 ;_initBlock_15+864
0x3F02	0xF4256DC0 ;_initBlock_15+868
0x3F06	0xECDFD6DB ;_initBlock_15+872
0x3F0A	0x0F475BF7 ;_initBlock_15+876
0x3F0E	0xF4256DC0 ;_initBlock_15+880
0x3F12	0xECDFD6DB ;_initBlock_15+884
0x3F16	0x002B39F7 ;_initBlock_15+888
0x3F1A	0x0C3F7FC3 ;_initBlock_15+892
0x3F1E	0xE3DCDCEC ;_initBlock_15+896
0x3F22	0x2681A2ED ;_initBlock_15+900
0x3F26	0xC8EE3FAF ;_initBlock_15+904
0x3F2A	0x02F2DBC7 ;_initBlock_15+908
0x3F2E	0x30A1CC08 ;_initBlock_15+912
0x3F32	0xB9D121A0 ;_initBlock_15+916
0x3F36	0x1205EAC9 ;_initBlock_15+920
0x3F3A	0xD602A411 ;_initBlock_15+924 : RF_MODEM_OOK_CNT1_11_433 at 0x3F3B
0x3F3E	0x01AD0083 ;_initBlock_15+928
0x3F42	0x000CFF80 ;_initBlock_15+932
0x3F46	0x83D602A4 ;_initBlock_15+936
0x3F4A	0x8001AD00 ;_initBlock_15+940
0x3F4E	0xA4000CFF ;_initBlock_15+944
0x3F52	0x0003D603 ;_initBlock_15+948
0x3F56	0xFF8001CC ;_initBlock_15+952
0x3F5A	0x03A4000C ;_initBlock_15+956
0x3F5E	0xCC0003D6 ;_initBlock_15+960
0x3F62	0x0CFF8001 ;_initBlock_15+964
0x3F66	0xD603A400 ;_initBlock_15+968
0x3F6A	0x01000103 ;_initBlock_15+972
0x3F6E	0x000CFF80 ;_initBlock_15+976
0x3F72	0x03D603A4 ;_initBlock_15+980
0x3F76	0x80018000 ;_initBlock_15+984
0x3F7A	0xA4000CFF ;_initBlock_15+988
0x3F7E	0x0003D603 ;_initBlock_15+992
0x3F82	0xFF800140 ;_initBlock_15+996
0x3F86	0x03A4000C ;_initBlock_15+1000
0x3F8A	0x2B0003D6 ;_initBlock_15+1004
0x3F8E	0x0CFF8001 ;_initBlock_15+1008
0x3F92	0xD603A400 ;_initBlock_15+1012
0x3F96	0x01D50003 ;_initBlock_15+1016
0x3F9A	0x000CFF80 ;_initBlock_15+1020
0x3F9E	0x03D603A4 ;_initBlock_15+1024
0x3FA2	0x8001D500 ;_initBlock_15+1028
0x3FA6	0xA4000CFF ;_initBlock_15+1032
0x3FAA	0x0281D602 ;_initBlock_15+1036
0x3FAE	0xFF8001B4 ;_initBlock_15+1040
0x3FB2	0x000C ;_initBlock_15+1044
; end of _initBlock_15
;DriverRF4463PROMain.c,225 :: _RF_MODEM_OOK_CNT1_11_850 [121]
0x3FB4	0x81D602A4 ;_RF_MODEM_OOK_CNT1_11_850+0
0x3FB8	0x80019B03 ;_RF_MODEM_OOK_CNT1_11_850+4
0x3FBC	0xA4020CFF ;_RF_MODEM_OOK_CNT1_11_850+8
0x3FC0	0x0083D602 ;_RF_MODEM_OOK_CNT1_11_850+12
0x3FC4	0xFF8001E7 ;_RF_MODEM_OOK_CNT1_11_850+16
0x3FC8	0x02A4020C ;_RF_MODEM_OOK_CNT1_11_850+20
0x3FCC	0xE70083D6 ;_RF_MODEM_OOK_CNT1_11_850+24
0x3FD0	0x0CFF8001 ;_RF_MODEM_OOK_CNT1_11_850+28
0x3FD4	0xD603A402 ;_RF_MODEM_OOK_CNT1_11_850+32
0x3FD8	0x01110103 ;_RF_MODEM_OOK_CNT1_11_850+36
0x3FDC	0x020CFF80 ;_RF_MODEM_OOK_CNT1_11_850+40
0x3FE0	0x03D603A4 ;_RF_MODEM_OOK_CNT1_11_850+44
0x3FE4	0x80015501 ;_RF_MODEM_OOK_CNT1_11_850+48
0x3FE8	0xA4020CFF ;_RF_MODEM_OOK_CNT1_11_850+52
0x3FEC	0x0103D603 ;_RF_MODEM_OOK_CNT1_11_850+56
0x3FF0	0xFF800100 ;_RF_MODEM_OOK_CNT1_11_850+60
0x3FF4	0x03A4020C ;_RF_MODEM_OOK_CNT1_11_850+64
0x3FF8	0x800003D6 ;_RF_MODEM_OOK_CNT1_11_850+68
0x3FFC	0x0CFF8001 ;_RF_MODEM_OOK_CNT1_11_850+72
0x4000	0xD603A402 ;_RF_MODEM_OOK_CNT1_11_850+76
0x4004	0x01800003 ;_RF_MODEM_OOK_CNT1_11_850+80
0x4008	0x020CFF80 ;_RF_MODEM_OOK_CNT1_11_850+84
0x400C	0x03D603A4 ;_RF_MODEM_OOK_CNT1_11_850+88
0x4010	0x8001D500 ;_RF_MODEM_OOK_CNT1_11_850+92
0x4014	0xA4020CFF ;_RF_MODEM_OOK_CNT1_11_850+96
0x4018	0x0003D603 ;_RF_MODEM_OOK_CNT1_11_850+100
0x401C	0xFF8001D5 ;_RF_MODEM_OOK_CNT1_11_850+104
0x4020	0x02A4020C ;_RF_MODEM_OOK_CNT1_11_850+108
0x4024	0xB40281D6 ;_RF_MODEM_OOK_CNT1_11_850+112
0x4028	0x0CFF8001 ;_RF_MODEM_OOK_CNT1_11_850+116
0x402C	0x02 ;_RF_MODEM_OOK_CNT1_11_850+120
; end of _RF_MODEM_OOK_CNT1_11_850
;DriverRF4463PROMain.c,0 :: ?ICS?lstr18_DriverRF4463PROMain [35]
0x4030	0x5953205B ;?ICS?lstr18_DriverRF4463PROMain+0
0x4034	0x54532053 ;?ICS?lstr18_DriverRF4463PROMain+4
0x4038	0x4C32334D ;?ICS?lstr18_DriverRF4463PROMain+8
0x403C	0x43323730 ;?ICS?lstr18_DriverRF4463PROMain+12
0x4040	0x205D2042 ;?ICS?lstr18_DriverRF4463PROMain+16
0x4044	0x72617453 ;?ICS?lstr18_DriverRF4463PROMain+20
0x4048	0x79532074 ;?ICS?lstr18_DriverRF4463PROMain+24
0x404C	0x6D657473 ;?ICS?lstr18_DriverRF4463PROMain+28
0x4050	0x000A0D ;?ICS?lstr18_DriverRF4463PROMain+32
; end of ?ICS?lstr18_DriverRF4463PROMain
;DriverRF4463PROMain.c,0 :: ?ICS?lstr19_DriverRF4463PROMain [37]
0x4054	0x5953205B ;?ICS?lstr19_DriverRF4463PROMain+0
0x4058	0x54532053 ;?ICS?lstr19_DriverRF4463PROMain+4
0x405C	0x4C32334D ;?ICS?lstr19_DriverRF4463PROMain+8
0x4060	0x43323730 ;?ICS?lstr19_DriverRF4463PROMain+12
0x4064	0x205D2042 ;?ICS?lstr19_DriverRF4463PROMain+16
0x4068	0x52204652 ;?ICS?lstr19_DriverRF4463PROMain+20
0x406C	0x6F696461 ;?ICS?lstr19_DriverRF4463PROMain+24
0x4070	0x61657220 ;?ICS?lstr19_DriverRF4463PROMain+28
0x4074	0x0A0D7964 ;?ICS?lstr19_DriverRF4463PROMain+32
0x4078	0x00 ;?ICS?lstr19_DriverRF4463PROMain+36
; end of ?ICS?lstr19_DriverRF4463PROMain
;DriverRF4463PROMain.c,0 :: ?ICS?lstr20_DriverRF4463PROMain [15]
0x407C	0x654D205B ;?ICS?lstr20_DriverRF4463PROMain+0
0x4080	0x67617373 ;?ICS?lstr20_DriverRF4463PROMain+4
0x4084	0x205D2065 ;?ICS?lstr20_DriverRF4463PROMain+8
0x4088	0x00203D ;?ICS?lstr20_DriverRF4463PROMain+12
; end of ?ICS?lstr20_DriverRF4463PROMain
;DriverRF4463PROMain.c,0 :: ?ICS?lstr21_DriverRF4463PROMain [3]
0x408C	0x000A0D ;?ICS?lstr21_DriverRF4463PROMain+0
; end of ?ICS?lstr21_DriverRF4463PROMain
;DriverRF4463PROMain.c,0 :: ?ICS?lstr22_DriverRF4463PROMain [15]
0x4090	0x5243205B ;?ICS?lstr22_DriverRF4463PROMain+0
0x4094	0x205D2043 ;?ICS?lstr22_DriverRF4463PROMain+4
0x4098	0x6C696146 ;?ICS?lstr22_DriverRF4463PROMain+8
0x409C	0x000A0D ;?ICS?lstr22_DriverRF4463PROMain+12
; end of ?ICS?lstr22_DriverRF4463PROMain
;__Lib_GPIO_32L07x_Defs.c,248 :: __GPIO_MODULE_SPI2_PB13_14_15 [108]
0x40A0	0x0000001D ;__GPIO_MODULE_SPI2_PB13_14_15+0
0x40A4	0x0000001E ;__GPIO_MODULE_SPI2_PB13_14_15+4
0x40A8	0x0000001F ;__GPIO_MODULE_SPI2_PB13_14_15+8
0x40AC	0xFFFFFFFF ;__GPIO_MODULE_SPI2_PB13_14_15+12
0x40B0	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+16
0x40B4	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+20
0x40B8	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+24
0x40BC	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+28
0x40C0	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+32
0x40C4	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+36
0x40C8	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+40
0x40CC	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+44
0x40D0	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+48
0x40D4	0x00000818 ;__GPIO_MODULE_SPI2_PB13_14_15+52
0x40D8	0x00000818 ;__GPIO_MODULE_SPI2_PB13_14_15+56
0x40DC	0x00000818 ;__GPIO_MODULE_SPI2_PB13_14_15+60
0x40E0	0xFFFFFFFF ;__GPIO_MODULE_SPI2_PB13_14_15+64
0x40E4	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+68
0x40E8	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+72
0x40EC	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+76
0x40F0	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+80
0x40F4	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+84
0x40F8	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+88
0x40FC	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+92
0x4100	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+96
0x4104	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+100
0x4108	0x00000000 ;__GPIO_MODULE_SPI2_PB13_14_15+104
; end of __GPIO_MODULE_SPI2_PB13_14_15
;__Lib_GPIO_32L07x_Defs.c,304 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x410C	0x00000409 ;__GPIO_MODULE_USART1_PA9_10+0
0x4110	0x0000040A ;__GPIO_MODULE_USART1_PA9_10+4
0x4114	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x4118	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x411C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x4120	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x4124	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x4128	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x412C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x4130	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x4134	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x4138	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x413C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x4140	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x4144	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+56
0x4148	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+60
0x414C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x4150	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x4154	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x4158	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x415C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x4160	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x4164	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x4168	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x416C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x4170	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x4174	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;,0 :: _initBlock_24 [198]
; Containing: RF_MODEM_AGC_WINDOW_SIZE_9_850 [99]
;             RF_MODEM_BCR_OSR_1_9_850 [99]
0x4178	0x00ABAB11 ;_initBlock_24+0 : RF_MODEM_AGC_WINDOW_SIZE_9_850 at 0x4178
0x417C	0x00FFFF02 ;_initBlock_24+4
0x4180	0xABAB112B ;_initBlock_24+8
0x4184	0xFFFF0200 ;_initBlock_24+12
0x4188	0x56112B00 ;_initBlock_24+16
0x418C	0xD5020056 ;_initBlock_24+20
0x4190	0x112A0055 ;_initBlock_24+24
0x4194	0x02002B2B ;_initBlock_24+28
0x4198	0x2900AB6A ;_initBlock_24+32
0x419C	0x00151511 ;_initBlock_24+36
0x41A0	0x00AB4202 ;_initBlock_24+40
0x41A4	0x0E0E1128 ;_initBlock_24+44
0x41A8	0x55210200 ;_initBlock_24+48
0x41AC	0x0E112800 ;_initBlock_24+52
0x41B0	0x1002000E ;_initBlock_24+56
0x41B4	0x112800AB ;_initBlock_24+60
0x41B8	0x02000E0E ;_initBlock_24+64
0x41BC	0x2800AB10 ;_initBlock_24+68
0x41C0	0x000D0D22 ;_initBlock_24+72
0x41C4	0x0000321A ;_initBlock_24+76
0x41C8	0x07072228 ;_initBlock_24+80
0x41CC	0x9A191A00 ;_initBlock_24+84
0x41D0	0xCD112700 ;_initBlock_24+88
0x41D4	0x301A00CD ;_initBlock_24+92
0x41D8	0x032B0000 ;_initBlock_24+96 : RF_MODEM_BCR_OSR_1_9_850 at 0x41DB
0x41DC	0xC6A7000D ;_initBlock_24+100
0x41E0	0xC2025400 ;_initBlock_24+104
0x41E4	0xA7000D03 ;_initBlock_24+108
0x41E8	0x025400C6 ;_initBlock_24+112
0x41EC	0x018701C2 ;_initBlock_24+116
0x41F0	0xA8008B4F ;_initBlock_24+120
0x41F4	0xC300C202 ;_initBlock_24+124
0x41F8	0x01179F02 ;_initBlock_24+128
0x41FC	0x00000293 ;_initBlock_24+132
0x4200	0x2D3E0562 ;_initBlock_24+136
0x4204	0x00020405 ;_initBlock_24+140
0x4208	0xDD074100 ;_initBlock_24+144
0x420C	0x02FF0744 ;_initBlock_24+148
0x4210	0x07410000 ;_initBlock_24+152
0x4214	0xFF0744DD ;_initBlock_24+156
0x4218	0x41000002 ;_initBlock_24+160
0x421C	0x0744DD07 ;_initBlock_24+164
0x4220	0x000002FF ;_initBlock_24+168
0x4224	0x7B5E0475 ;_initBlock_24+172
0x4228	0x00029A05 ;_initBlock_24+176
0x422C	0x88083C00 ;_initBlock_24+180
0x4230	0x02FF0789 ;_initBlock_24+184
0x4234	0x00AA0300 ;_initBlock_24+188
0x4238	0x4600CF8B ;_initBlock_24+192
0x423C	0xC202 ;_initBlock_24+196
; end of _initBlock_24
;,0 :: _initBlock_25 [198]
; Containing: RF_MODEM_AGC_WINDOW_SIZE_9_433 [99]
;             RF_MODEM_BCR_OSR_1_9_433 [99]
0x423E	0x00ABAB11 ;_initBlock_25+0 : RF_MODEM_AGC_WINDOW_SIZE_9_433 at 0x423E
0x4242	0x0000141A ;_initBlock_25+4
0x4246	0x5656112B ;_initBlock_25+8
0x424A	0x00A01A00 ;_initBlock_25+12
0x424E	0x2B112A00 ;_initBlock_25+16
0x4252	0x501A002B ;_initBlock_25+20
0x4256	0x11290000 ;_initBlock_25+24
0x425A	0x1A001515 ;_initBlock_25+28
0x425E	0x28000028 ;_initBlock_25+32
0x4262	0x000E0E11 ;_initBlock_25+36
0x4266	0x0055211A ;_initBlock_25+40
0x426A	0x0E0E1128 ;_initBlock_25+44
0x426E	0xAB101A00 ;_initBlock_25+48
0x4272	0x0E112800 ;_initBlock_25+52
0x4276	0x081A000E ;_initBlock_25+56
0x427A	0x11280055 ;_initBlock_25+60
0x427E	0x1A000E0E ;_initBlock_25+64
0x4282	0x28008E05 ;_initBlock_25+68
0x4286	0x000D0D22 ;_initBlock_25+72
0x428A	0x0000321A ;_initBlock_25+76
0x428E	0x07072228 ;_initBlock_25+80
0x4292	0x9A191A00 ;_initBlock_25+84
0x4296	0xCD112700 ;_initBlock_25+88
0x429A	0x301A00CD ;_initBlock_25+92
0x429E	0x032B0000 ;_initBlock_25+96 : RF_MODEM_BCR_OSR_1_9_433 at 0x42A1
0x42A2	0xC6A7000D ;_initBlock_25+100
0x42A6	0xC2025400 ;_initBlock_25+104
0x42AA	0x4F018701 ;_initBlock_25+108
0x42AE	0x02A8008B ;_initBlock_25+112
0x42B2	0x02C300C2 ;_initBlock_25+116
0x42B6	0x1A02179F ;_initBlock_25+120
0x42BA	0x62000002 ;_initBlock_25+124
0x42BE	0x072D3E05 ;_initBlock_25+128
0x42C2	0x000002FF ;_initBlock_25+132
0x42C6	0x44DD0741 ;_initBlock_25+136
0x42CA	0x0002FF07 ;_initBlock_25+140
0x42CE	0xDD074100 ;_initBlock_25+144
0x42D2	0x02FF0744 ;_initBlock_25+148
0x42D6	0x07410000 ;_initBlock_25+152
0x42DA	0xFF0744DD ;_initBlock_25+156
0x42DE	0x41000002 ;_initBlock_25+160
0x42E2	0x0744DD07 ;_initBlock_25+164
0x42E6	0x000002FF ;_initBlock_25+168
0x42EA	0x7B5E0475 ;_initBlock_25+172
0x42EE	0x00029A05 ;_initBlock_25+176
0x42F2	0x88083C00 ;_initBlock_25+180
0x42F6	0x02FF0789 ;_initBlock_25+184
0x42FA	0x00AA0300 ;_initBlock_25+188
0x42FE	0x4600CF8B ;_initBlock_25+192
0x4302	0xC202 ;_initBlock_25+196
; end of _initBlock_25
;DriverRF4463PROMain.c,84 :: _RF_MODEM_TX_RAMP_DELAY_8_850 [88]
0x4304	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+0
0x4308	0x203200C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+4
0x430C	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+8
0x4310	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+12
0x4314	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+16
0x4318	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+20
0x431C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+24
0x4320	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+28
0x4324	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+32
0x4328	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+36
0x432C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+40
0x4330	0x102000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+44
0x4334	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+48
0x4338	0x101000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+52
0x433C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+56
0x4340	0x201000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+60
0x4344	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+64
0x4348	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+68
0x434C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+72
0x4350	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+76
0x4354	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+80
0x4358	0x21720080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+84
; end of _RF_MODEM_TX_RAMP_DELAY_8_850
;DriverRF4463PROMain.c,70 :: _RF_MODEM_TX_RAMP_DELAY_8_433 [88]
0x435C	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+0
0x4360	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+4
0x4364	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+8
0x4368	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+12
0x436C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+16
0x4370	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+20
0x4374	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+24
0x4378	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+28
0x437C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+32
0x4380	0x10300080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+36
0x4384	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+40
0x4388	0x10200080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+44
0x438C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+48
0x4390	0x10100080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+52
0x4394	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+56
0x4398	0x20100080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+60
0x439C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+64
0x43A0	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+68
0x43A4	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+72
0x43A8	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+76
0x43AC	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+80
0x43B0	0x21720080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+84
; end of _RF_MODEM_TX_RAMP_DELAY_8_433
;,0 :: _initBlock_28 [154]
; Containing: RF_MODEM_AFC_GEAR_7_850 [77]
;             RF_MODEM_AFC_GEAR_7_433 [77]
0x43B4	0x01803604 ;_initBlock_28+0 : RF_MODEM_AFC_GEAR_7_850 at 0x43B4
0x43B8	0x04803052 ;_initBlock_28+4
0x43BC	0x30038036 ;_initBlock_28+8
0x43C0	0x3604807F ;_initBlock_28+12
0x43C4	0x10170780 ;_initBlock_28+16
0x43C8	0x80120080 ;_initBlock_28+20
0x43CC	0xA0B1042A ;_initBlock_28+24
0x43D0	0x54801200 ;_initBlock_28+28
0x43D4	0x00A09A02 ;_initBlock_28+32
0x43D8	0x01A88012 ;_initBlock_28+36
0x43DC	0x1200A08F ;_initBlock_28+40
0x43E0	0x1F015081 ;_initBlock_28+44
0x43E4	0x832300A0 ;_initBlock_28+48
0x43E8	0xA08400EF ;_initBlock_28+52
0x43EC	0xFF8F2300 ;_initBlock_28+56
0x43F0	0x00E0C900 ;_initBlock_28+60
0x43F4	0x01FF8F23 ;_initBlock_28+64
0x43F8	0x3604E023 ;_initBlock_28+68
0x43FC	0x69500180 ;_initBlock_28+72
0x4400	0x80360480 ;_initBlock_28+76 : RF_MODEM_AFC_GEAR_7_433 at 0x4401
0x4404	0x80AF3003 ;_initBlock_28+80
0x4408	0x07803604 ;_initBlock_28+84
0x440C	0x0080DD14 ;_initBlock_28+88
0x4410	0x042A8012 ;_initBlock_28+92
0x4414	0x1200A03A ;_initBlock_28+96
0x4418	0x5A025480 ;_initBlock_28+100
0x441C	0x801200A0 ;_initBlock_28+104
0x4420	0xE06801A8 ;_initBlock_28+108
0x4424	0x50811200 ;_initBlock_28+112
0x4428	0x00E02001 ;_initBlock_28+116
0x442C	0x019F8212 ;_initBlock_28+120
0x4430	0x2300E003 ;_initBlock_28+124
0x4434	0x7700DD87 ;_initBlock_28+128
0x4438	0x8F2300E0 ;_initBlock_28+132
0x443C	0xE0C900FF ;_initBlock_28+136
0x4440	0xFF8F2300 ;_initBlock_28+140
0x4444	0x04E02301 ;_initBlock_28+144
0x4448	0x50018036 ;_initBlock_28+148
0x444C	0x8069 ;_initBlock_28+152
; end of _initBlock_28
;,0 :: _initBlock_29 [143]
; Containing: RF_SYNTH_PFDCP_CPFF_7 [77]
;             ucRF4463TXdata [66]
0x444E	0x040B0E2C ;_initBlock_29+0 : RF_SYNTH_PFDCP_CPFF_7 at 0x444E
0x4452	0x2C03730C ;_initBlock_29+4
0x4456	0x0C040B0E ;_initBlock_29+8
0x445A	0x0E2C0373 ;_initBlock_29+12
0x445E	0x730C040B ;_initBlock_29+16
0x4462	0x0B0E2C03 ;_initBlock_29+20
0x4466	0x03730C04 ;_initBlock_29+24
0x446A	0x040B0E2C ;_initBlock_29+28
0x446E	0x2C03730C ;_initBlock_29+32
0x4472	0x0C040B0E ;_initBlock_29+36
0x4476	0x04340373 ;_initBlock_29+40
0x447A	0x7007040B ;_initBlock_29+44
0x447E	0x0B043403 ;_initBlock_29+48
0x4482	0x03700704 ;_initBlock_29+52
0x4486	0x050B0501 ;_initBlock_29+56
0x448A	0x01030002 ;_initBlock_29+60
0x448E	0x02050B05 ;_initBlock_29+64
0x4492	0x0E2C0300 ;_initBlock_29+68
0x4496	0x730C040B ;_initBlock_29+72
0x449A	0x01010103 ;_initBlock_29+76 : ucRF4463TXdata at 0x449B
0x449E	0x43424101 ;_initBlock_29+80
0x44A2	0x47464544 ;_initBlock_29+84
0x44A6	0x4B4A4948 ;_initBlock_29+88
0x44AA	0x4F4E4D4C ;_initBlock_29+92
0x44AE	0x53525150 ;_initBlock_29+96
0x44B2	0x57565554 ;_initBlock_29+100
0x44B6	0x415A5958 ;_initBlock_29+104
0x44BA	0x45444342 ;_initBlock_29+108
0x44BE	0x49484746 ;_initBlock_29+112
0x44C2	0x4D4C4B4A ;_initBlock_29+116
0x44C6	0x51504F4E ;_initBlock_29+120
0x44CA	0x55545352 ;_initBlock_29+124
0x44CE	0x59585756 ;_initBlock_29+128
0x44D2	0x4342415A ;_initBlock_29+132
0x44D6	0x47464544 ;_initBlock_29+136
0x44DA	0xF31148 ;_initBlock_29+140
; end of _initBlock_29
;DriverRF4463PROMain.c,0 :: ?ICS?lstr23_DriverRF4463PROMain [12]
0x44E0	0x5352205B ;?ICS?lstr23_DriverRF4463PROMain+0
0x44E4	0x5D204953 ;?ICS?lstr23_DriverRF4463PROMain+4
0x44E8	0x00203D20 ;?ICS?lstr23_DriverRF4463PROMain+8
; end of ?ICS?lstr23_DriverRF4463PROMain
;DriverRF4463PROMain.c,0 :: ?ICS?lstr24_DriverRF4463PROMain [7]
0x44EC	0x6D426420 ;?ICS?lstr24_DriverRF4463PROMain+0
0x44F0	0x000A0D ;?ICS?lstr24_DriverRF4463PROMain+4
; end of ?ICS?lstr24_DriverRF4463PROMain
;,0 :: _initBlock_32 [72]
; Containing: ?ICS?lstr1_DriverRF4463PROMain [19]
;             APBAHBPrescTable [16]
;             tx_test_aa_data [14]
;             RF_FRR_CTL_A_MODE_4_data [8]
;             PPREPrescTable [8]
;             RF_POWER_UP_data [7]
0x44F4	0x4155205B ;_initBlock_32+0 : ?ICS?lstr1_DriverRF4463PROMain at 0x44F4
0x44F8	0x20315452 ;_initBlock_32+4
0x44FC	0x5854205D ;_initBlock_32+8
0x4500	0x544E4920 ;_initBlock_32+12
0x4504	0x00000A0D ;_initBlock_32+16 : APBAHBPrescTable at 0x4507
0x4508	0x00000000 ;_initBlock_32+20
0x450C	0x01000000 ;_initBlock_32+24
0x4510	0x06040302 ;_initBlock_32+28
0x4514	0xAA090807 ;_initBlock_32+32 : tx_test_aa_data at 0x4517
0x4518	0xAAAAAAAA ;_initBlock_32+36
0x451C	0xAAAAAAAA ;_initBlock_32+40
0x4520	0xAAAAAAAA ;_initBlock_32+44
0x4524	0x040211AA ;_initBlock_32+48 : RF_FRR_CTL_A_MODE_4_data at 0x4525
0x4528	0x00000000 ;_initBlock_32+52
0x452C	0x00000000 ;_initBlock_32+56 : PPREPrescTable at 0x452D
0x4530	0x03020100 ;_initBlock_32+60
0x4534	0x00010204 ;_initBlock_32+64 : RF_POWER_UP_data at 0x4535
0x4538	0x80C3C901 ;_initBlock_32+68
; end of _initBlock_32
;DriverRF4463PROMain.c,372 :: _RF_MODEM_AGC_CONTROL_1_data [5]
0x453C	0x35012011 ;_RF_MODEM_AGC_CONTROL_1_data+0
0x4540	0xE2 ;_RF_MODEM_AGC_CONTROL_1_data+4
; end of _RF_MODEM_AGC_CONTROL_1_data
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x00C0     [188]    __Lib_GPIO_32L07x_GPIO_Config_Pin_Alternate_Function
0x017C      [12]    _Get_Fosc_kHz
0x0188      [68]    __Div_32x32_U
0x01CC      [68]    _ucRf4463SPIByte
0x0210     [140]    _RCC_GetClocksFrequency
0x029C      [68]    _GPIO_Alternate_Function_Enable
0x02E0      [40]    __Lib_UART_12_45_UARTx_Write
0x0308      [92]    _vRF4463RxStartTest
0x0364      [78]    _vRF4463EnableRxInterrupt
0x03B4      [92]    _vRF4463RxStart
0x0410      [70]    __Lib_SPI_L0x_12_SPIx_Init_Advanced
0x0458      [76]    _check_cts
0x04A4     [120]    _GPIO_Clk_Enable
0x051C      [96]    _ByteToStr
0x057C     [484]    __Lib_UART_12_45_UARTx_Init_Advanced
0x0760     [176]    _vRF4463GPIO_SET
0x0810     [180]    _spi_write_fifo
0x08C4      [38]    _vRF4463FifoReset
0x08EC     [108]    _spi_write
0x0958     [120]    _ShortToStr
0x09D0     [196]    _spi_read
0x0A94      [56]    __FloatToSignedIntegral
0x0ACC     [616]    _rf_init_freq
0x0D34     [124]    __Lib_MathDouble___Float_Aux
0x0DB0      [68]    _vRF4463TxStart
0x0DF4      [20]    __Lib_MathDouble___Fp
0x0E08     [170]    __Add_FP
0x0EB4      [32]    _UART1_Init_Advanced
0x0ED4      [52]    _vRF4463RxInit
0x0F08     [744]    _GPIO_Config
0x11F0      [80]    _SPI2_Init_Advanced
0x1240      [42]    __Lib_UART_12_45_UARTx_Write_Text
0x126C      [70]    _vRF4463EnableTxInterrupt
0x12B4      [92]    __Lib_System_M0Plus_HSI48_SystemClockSetDefault
0x1310     [162]    __Div_FP
0x13B4     [128]    _spi_read_fifo
0x1434      [14]    __Sub_FP
0x1444      [76]    _vRF4463TxCont
0x1490     [100]    _getRSSI
0x14F4      [18]    __UnsignedIntegralToFloat
0x1508      [16]    _GPIO_Digital_Output
0x1518      [92]    _InitTimer2
0x1574      [64]    _vUSARTConfigUSART1
0x15B4      [12]    _GPIO_Digital_Input
0x15C0      [60]    _NVIC_IntEnable
0x15FC      [18]    ___CC2DW
0x1610      [42]    ___FillZeros
0x163C      [16]    _UART1_Write_Text
0x164C      [68]    _vRF4463ClearInterrupts
0x1690      [44]    _vRF4463PartInfo
0x16BC     [168]    _vRF4463TxData
0x1764    [2908]    _vRF4463Init
0x22C0      [44]    _vSPI2Init
0x22EC       [6]    _vRF4463MainSetTXString
0x22F4     [148]    _VRF4463SDNReset
0x2388      [44]    _Timer2_interrupt
0x23B4     [304]    _vUARTISR
0x24E4      [84]    _vRF4463ISR
0x2538      [36]    _Int_SPI2
0x255C     [932]    _main
0x2900     [468]    __Lib_System_M0Plus_HSI48_InitialSetUpRCCRCC2
0x2AD4       [6]    ___GenExcept
0x2ADC      [20]    __Lib_System_M0Plus_HSI48_InitialSetUpFosc
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [4]    _ulRF4463Step
0x20000004       [1]    _ucSPI2ByteReceived
0x20000005      [16]    _RF_MODEM_MOD_TYPE_12_data
0x20000015      [12]    _RF_MODEM_TX_RAMP_DELAY_8_data
0x20000021      [13]    _RF_MODEM_AFC_GEAR_7_data
0x2000002E      [15]    _RF_MODEM_OOK_CNT1_11_data
0x2000003D      [16]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data
0x2000004D      [16]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data
0x2000005D      [16]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data
0x2000006D      [13]    _RF_MODEM_AGC_WINDOW_SIZE_9_data
0x2000007A      [13]    _RF_MODEM_BCR_OSR_1_9_data
0x20000087      [11]    _RF_SYNTH_PFDCP_CPFF_7_data
0x20000092       [1]    _ucRF4463MatchEnabled
0x20000093       [1]    _ucRF4463ByteMatch1
0x20000094       [1]    _ucRF4463ByteMask1
0x20000095       [1]    _ucRF4463MatchEnableReg
0x20000096       [1]    _ucRF4463ByteMatch2
0x20000097       [1]    _ucRF4463ByteMask2
0x20000098       [1]    _ucRF4463ByteMatch3
0x20000099       [1]    _ucRF4463ByteMask3
0x2000009A       [1]    _ucRF4463ByteMatch4
0x2000009B       [1]    _ucRF4463ByteMask4
0x2000009C       [1]    DriverRF4463PROMain_ucRF4463IRQ
0x2000009D       [1]    _ucRF4463FreqChannel
0x2000009E       [1]    _ucData1
0x2000009F       [1]    _ucRF4463Freq3
0x200000A0       [4]    _tx_cnt
0x200000A4       [4]    _fUSART1Buffer
0x200000A8       [4]    _rx_cnt
0x200000AC       [4]    _ulUSART1ByteReceived
0x200000B0    [4096]    _ucUSART1RXBuffer
0x200010B0       [1]    _ucRF4463Freq2
0x200010B1       [1]    _ucRF4463Freq1
0x200010B2      [20]    _spi_read_buf
0x200010C6       [1]    _ucRF4463Rate
0x200010C7       [1]    _ucRF4463Mode
0x200010C8       [1]    _ucRF4463Power
0x200010C9       [1]    _Flag
0x200010CA       [2]    _rf_timeout
0x200010CC       [4]    _rssi
0x200010D0       [4]    _Value
0x200010D4      [66]    _rx_buf
0x20001116       [1]    _reset_mode
0x20001118       [4]    _iVal
0x2000111C       [4]    _ulClk
0x20001120       [4]    ___System_CLOCK_IN_KHZ
0x20001124       [4]    _SPI_Rd_Ptr
0x20001128       [4]    _SPI_Wr_Ptr
0x2000112C       [4]    _UART_Wr_Ptr
0x20001130       [4]    _UART_Rd_Ptr
0x20001134       [4]    _UART_Rdy_Ptr
0x20001138       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x2AF0       [4]    ?ICS_tx_cnt
0x2AF4       [4]    ?ICS_fUSART1Buffer
0x2AF8       [4]    ?ICS_rx_cnt
0x2AFC       [4]    ?ICS_ulUSART1ByteReceived
0x2B00    [4096]    ?ICS_ucUSART1RXBuffer
0x3B00       [4]    ?ICS_ulRF4463Step
0x3B04       [1]    ?ICS_ucSPI2ByteReceived
0x3B05      [16]    ?ICS_RF_MODEM_MOD_TYPE_12_data
0x3B15      [12]    ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data
0x3B21      [13]    ?ICS_RF_MODEM_AFC_GEAR_7_data
0x3B2E      [15]    ?ICS_RF_MODEM_OOK_CNT1_11_data
0x3B3D      [16]    ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data
0x3B4D      [16]    ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data
0x3B5D      [16]    ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data
0x3B6D      [13]    ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data
0x3B7A      [13]    ?ICS_RF_MODEM_BCR_OSR_1_9_data
0x3B87      [11]    ?ICS_RF_SYNTH_PFDCP_CPFF_7_data
0x3B92       [1]    ?ICS_ucRF4463MatchEnabled
0x3B93       [1]    ?ICS_ucRF4463ByteMatch1
0x3B94       [1]    ?ICS_ucRF4463ByteMask1
0x3B95       [1]    ?ICS_ucRF4463MatchEnableReg
0x3B96       [1]    ?ICS_ucRF4463ByteMatch2
0x3B97       [1]    ?ICS_ucRF4463ByteMask2
0x3B98       [1]    ?ICS_ucRF4463ByteMatch3
0x3B99       [1]    ?ICS_ucRF4463ByteMask3
0x3B9A       [1]    ?ICS_ucRF4463ByteMatch4
0x3B9B       [1]    ?ICS_ucRF4463ByteMask4
0x3B9C       [1]    ?ICSDriverRF4463PROMain_ucRF4463IRQ
0x3B9D       [1]    ?ICS_ucRF4463FreqChannel
0x3B9E       [1]    ?ICS_ucData1
0x3B9F     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850
0x3C23     [132]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433
0x3CA7     [132]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850
0x3D2B     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850
0x3DAF     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433
0x3E33     [132]    _RF_MODEM_MOD_TYPE_12
0x3EB7     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433
0x3F3B     [121]    _RF_MODEM_OOK_CNT1_11_433
0x3FB4     [121]    _RF_MODEM_OOK_CNT1_11_850
0x4030      [35]    ?ICS?lstr18_DriverRF4463PROMain
0x4054      [37]    ?ICS?lstr19_DriverRF4463PROMain
0x407C      [15]    ?ICS?lstr20_DriverRF4463PROMain
0x408C       [3]    ?ICS?lstr21_DriverRF4463PROMain
0x4090      [15]    ?ICS?lstr22_DriverRF4463PROMain
0x40A0     [108]    __GPIO_MODULE_SPI2_PB13_14_15
0x410C     [108]    __GPIO_MODULE_USART1_PA9_10
0x4178      [99]    _RF_MODEM_AGC_WINDOW_SIZE_9_850
0x41DB      [99]    _RF_MODEM_BCR_OSR_1_9_850
0x423E      [99]    _RF_MODEM_AGC_WINDOW_SIZE_9_433
0x42A1      [99]    _RF_MODEM_BCR_OSR_1_9_433
0x4304      [88]    _RF_MODEM_TX_RAMP_DELAY_8_850
0x435C      [88]    _RF_MODEM_TX_RAMP_DELAY_8_433
0x43B4      [77]    _RF_MODEM_AFC_GEAR_7_850
0x4401      [77]    _RF_MODEM_AFC_GEAR_7_433
0x444E      [77]    _RF_SYNTH_PFDCP_CPFF_7
0x449B      [66]    _ucRF4463TXdata
0x44E0      [12]    ?ICS?lstr23_DriverRF4463PROMain
0x44EC       [7]    ?ICS?lstr24_DriverRF4463PROMain
0x44F4      [19]    ?ICS?lstr1_DriverRF4463PROMain
0x4507      [16]    __Lib_System_M0Plus_HSI48_APBAHBPrescTable
0x4517      [14]    _tx_test_aa_data
0x4525       [8]    _RF_FRR_CTL_A_MODE_4_data
0x452D       [8]    __Lib_System_M0Plus_HSI48_PPREPrescTable
0x4535       [7]    _RF_POWER_UP_data
0x453C       [5]    _RF_MODEM_AGC_CONTROL_1_data
