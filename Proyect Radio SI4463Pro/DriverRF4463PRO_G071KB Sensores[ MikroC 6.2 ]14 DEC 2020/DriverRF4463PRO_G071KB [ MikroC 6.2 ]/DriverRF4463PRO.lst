;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 29/01/2021 04:04:20 p. m.
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0x7FFC2000  	536903676
0x0004	0x2F350000  	12085
0x0008	0x33790000  	13177
0x000C	0x33790000  	13177
0x0010	0x33790000  	13177
0x0014	0x33790000  	13177
0x0018	0x33790000  	13177
0x001C	0x33790000  	13177
0x0020	0x33790000  	13177
0x0024	0x33790000  	13177
0x0028	0x33790000  	13177
0x002C	0x33790000  	13177
0x0030	0x33790000  	13177
0x0034	0x33790000  	13177
0x0038	0x33790000  	13177
0x003C	0x33790000  	13177
0x0040	0x33790000  	13177
0x0044	0x33790000  	13177
0x0048	0x33790000  	13177
0x004C	0x33790000  	13177
0x0050	0x33790000  	13177
0x0054	0x33790000  	13177
0x0058	0x2D750000  	11637
0x005C	0x33790000  	13177
0x0060	0x33790000  	13177
0x0064	0x2DD50000  	11733
0x0068	0x33790000  	13177
0x006C	0x33790000  	13177
0x0070	0x33790000  	13177
0x0074	0x33790000  	13177
0x0078	0x33790000  	13177
0x007C	0x2DA90000  	11689
0x0080	0x33790000  	13177
0x0084	0x33790000  	13177
0x0088	0x33790000  	13177
0x008C	0x33790000  	13177
0x0090	0x33790000  	13177
0x0094	0x33790000  	13177
0x0098	0x33790000  	13177
0x009C	0x33790000  	13177
0x00A0	0x33790000  	13177
0x00A4	0x2EAD0000  	11949
0x00A8	0x33790000  	13177
0x00AC	0x2EFD0000  	12029
0x00B0	0x33790000  	13177
0x00B4	0x33790000  	13177
0x00B8	0x33790000  	13177
0x00BC	0x33790000  	13177
; end of ____SysVT
_main:
;DriverRF4463PROMain.c, 479 :: 		void main() {
0x2F34	0xB08F    SUB	SP, SP, #60
0x2F36	0xF000F9CD  BL	13012
0x2F3A	0xF003F87B  BL	24628
0x2F3E	0xF000FA1F  BL	13184
0x2F42	0xF003F837  BL	24500
;DriverRF4463PROMain.c, 483 :: 		Delay_ms( 2000 );                    // delay de depuracion
0x2F46	0x4F02    LDR	R7, [PC, #8]
0x2F48	0xBF00    NOP
L_main340:
0x2F4A	0x1E7F    SUBS	R7, R7, #1
0x2F4C	0xD1FD    BNE	L_main340
0x2F4E	0xE002    B	#4
0x2F50	0x11FF007A  	#7999999
0x2F54	0xBF00    NOP
;DriverRF4463PROMain.c, 486 :: 		GPIO_Digital_Output( &GPIOB_BASE, _GPIO_PINMASK_6 );  // r   ( Led Rojo de tarjeta de desarrollo )
0x2F56	0x2140    MOVS	R1, #64
0x2F58	0x488A    LDR	R0, [PC, #552]
0x2F5A	0xF7FFFA23  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 487 :: 		GPIO_Digital_Output( &GPIOB_BASE, _GPIO_PINMASK_7 );  // g
0x2F5E	0x2180    MOVS	R1, #128
0x2F60	0x4888    LDR	R0, [PC, #544]
0x2F62	0xF7FFFA1F  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 488 :: 		GPIO_Digital_Output( &GPIOB_BASE, _GPIO_PINMASK_8 );  // b
0x2F66	0x21FF    MOVS	R1, #255
0x2F68	0x3101    ADDS	R1, #1
0x2F6A	0x4886    LDR	R0, [PC, #536]
0x2F6C	0xF7FFFA1A  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 489 :: 		GPIO_Digital_Output( &GPIOA_BASE, _GPIO_PINMASK_4 );  // b
0x2F70	0x2110    MOVS	R1, #16
0x2F72	0x4885    LDR	R0, [PC, #532]
0x2F74	0xF7FFFA16  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 491 :: 		GPIO_Digital_Output( &GPIOB_BASE, _GPIO_PINMASK_9 );
0x2F78	0x4984    LDR	R1, [PC, #528]
0x2F7A	0x4882    LDR	R0, [PC, #520]
0x2F7C	0xF7FFFA12  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 494 :: 		GPIO_Digital_Input( &GPIOC_BASE, _GPIO_PINMASK_14 );
0x2F80	0x4983    LDR	R1, [PC, #524]
0x2F82	0x4884    LDR	R0, [PC, #528]
0x2F84	0xF7FFF9E8  BL	_GPIO_Digital_Input+0
;DriverRF4463PROMain.c, 495 :: 		GPIO_Digital_Input( &GPIOC_BASE, _GPIO_PINMASK_15 );
0x2F88	0x4983    LDR	R1, [PC, #524]
0x2F8A	0x4882    LDR	R0, [PC, #520]
0x2F8C	0xF7FFF9E4  BL	_GPIO_Digital_Input+0
;DriverRF4463PROMain.c, 500 :: 		GPIO_Digital_Input( &GPIOA_BASE, _GPIO_PINMASK_2 );          // nIRQ
0x2F90	0x2104    MOVS	R1, #4
0x2F92	0x487D    LDR	R0, [PC, #500]
0x2F94	0xF7FFF9E0  BL	_GPIO_Digital_Input+0
;DriverRF4463PROMain.c, 502 :: 		GPIO_Digital_Output( &GPIOA_BASE, _GPIO_PINMASK_3 );         // nSEL
0x2F98	0x2108    MOVS	R1, #8
0x2F9A	0x487B    LDR	R0, [PC, #492]
0x2F9C	0xF7FFFA02  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 503 :: 		GPIO_Digital_Output( &GPIOB_BASE, _GPIO_PINMASK_2 );         // SDN
0x2FA0	0x2104    MOVS	R1, #4
0x2FA2	0x4878    LDR	R0, [PC, #480]
0x2FA4	0xF7FFF9FE  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 504 :: 		GPIO_Digital_Output( &GPIOA_BASE, _GPIO_PINMASK_11 );        // GPIO0
0x2FA8	0x497C    LDR	R1, [PC, #496]
0x2FAA	0x4877    LDR	R0, [PC, #476]
0x2FAC	0xF7FFF9FA  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 505 :: 		GPIO_Digital_Output( &GPIOA_BASE, _GPIO_PINMASK_12 );        // GPIO1
0x2FB0	0x497B    LDR	R1, [PC, #492]
0x2FB2	0x4875    LDR	R0, [PC, #468]
0x2FB4	0xF7FFF9F6  BL	_GPIO_Digital_Output+0
;DriverRF4463PROMain.c, 507 :: 		_REG_RADIO = 1;
0x2FB8	0x4A7A    LDR	R2, [PC, #488]
0x2FBA	0x6810    LDR	R0, [R2, #0]
0x2FBC	0x2101    MOVS	R1, #1
0x2FBE	0x0249    LSLS	R1, R1, #9
0x2FC0	0x4308    ORRS	R0, R1
0x2FC2	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 509 :: 		RCC_APBENR2bits.SYSCFGEN = 1;
0x2FC4	0x4A78    LDR	R2, [PC, #480]
0x2FC6	0x6810    LDR	R0, [R2, #0]
0x2FC8	0x2101    MOVS	R1, #1
0x2FCA	0x4308    ORRS	R0, R1
0x2FCC	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 511 :: 		SYSCFG_VREFBUF_CFGR1bits.UCPD1_STROBE = 1;
0x2FCE	0x4A77    LDR	R2, [PC, #476]
0x2FD0	0x6810    LDR	R0, [R2, #0]
0x2FD2	0x2101    MOVS	R1, #1
0x2FD4	0x0249    LSLS	R1, R1, #9
0x2FD6	0x4308    ORRS	R0, R1
0x2FD8	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 513 :: 		nSEL = 1;
0x2FDA	0x4A75    LDR	R2, [PC, #468]
0x2FDC	0x6810    LDR	R0, [R2, #0]
0x2FDE	0x2108    MOVS	R1, #8
0x2FE0	0x4308    ORRS	R0, R1
0x2FE2	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 514 :: 		Led_Enable = 1;
0x2FE4	0x4A72    LDR	R2, [PC, #456]
0x2FE6	0x6810    LDR	R0, [R2, #0]
0x2FE8	0x2110    MOVS	R1, #16
0x2FEA	0x4308    ORRS	R0, R1
0x2FEC	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 515 :: 		LED_RED      = 1;
0x2FEE	0x4A71    LDR	R2, [PC, #452]
0x2FF0	0x6810    LDR	R0, [R2, #0]
0x2FF2	0x2180    MOVS	R1, #128
0x2FF4	0x4308    ORRS	R0, R1
0x2FF6	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 516 :: 		LED_GREEN    = 1;
0x2FF8	0x4A6E    LDR	R2, [PC, #440]
0x2FFA	0x6810    LDR	R0, [R2, #0]
0x2FFC	0x2140    MOVS	R1, #64
0x2FFE	0x4308    ORRS	R0, R1
0x3000	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 517 :: 		LED_BLUE     = 1;
0x3002	0x4A6C    LDR	R2, [PC, #432]
0x3004	0x6810    LDR	R0, [R2, #0]
0x3006	0x2101    MOVS	R1, #1
0x3008	0x0209    LSLS	R1, R1, #8
0x300A	0x4308    ORRS	R0, R1
0x300C	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 519 :: 		Delay_ms( 100 );
0x300E	0x4F02    LDR	R7, [PC, #8]
0x3010	0xBF00    NOP
L_main342:
0x3012	0x1E7F    SUBS	R7, R7, #1
0x3014	0xD1FD    BNE	L_main342
0x3016	0xE002    B	#4
0x3018	0x1A7F0006  	#399999
0x301C	0xBF00    NOP
;DriverRF4463PROMain.c, 521 :: 		LED_RED      = 0;
0x301E	0x4A65    LDR	R2, [PC, #404]
0x3020	0x6810    LDR	R0, [R2, #0]
0x3022	0x2180    MOVS	R1, #128
0x3024	0x4388    BICS	R0, R1
0x3026	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 522 :: 		LED_GREEN    = 0;
0x3028	0x4A62    LDR	R2, [PC, #392]
0x302A	0x6810    LDR	R0, [R2, #0]
0x302C	0x2140    MOVS	R1, #64
0x302E	0x4388    BICS	R0, R1
0x3030	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 523 :: 		LED_BLUE     = 0;
0x3032	0x4A60    LDR	R2, [PC, #384]
0x3034	0x6810    LDR	R0, [R2, #0]
0x3036	0x2101    MOVS	R1, #1
0x3038	0x0209    LSLS	R1, R1, #8
0x303A	0x4388    BICS	R0, R1
0x303C	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 525 :: 		InitTimer2();
0x303E	0xF7FEFFC5  BL	_InitTimer2+0
;DriverRF4463PROMain.c, 528 :: 		vUSARTConfigUSART1( 115200 );  // configura todos las parametros de USART
0x3042	0x485D    LDR	R0, [PC, #372]
0x3044	0xF7FEFFEE  BL	_vUSARTConfigUSART1+0
;DriverRF4463PROMain.c, 531 :: 		vSPI1Init();           // configura todos los parametros de SPI
0x3048	0xF7FFF81A  BL	_vSPI1Init+0
;DriverRF4463PROMain.c, 536 :: 		ucRF4463Freq3 = 9;
0x304C	0x2109    MOVS	R1, #9
0x304E	0x485B    LDR	R0, [PC, #364]
0x3050	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 537 :: 		ucRF4463Freq2 = 1;
0x3052	0x2101    MOVS	R1, #1
0x3054	0x485A    LDR	R0, [PC, #360]
0x3056	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 538 :: 		ucRF4463Freq1 = 5;
0x3058	0x2105    MOVS	R1, #5
0x305A	0x485A    LDR	R0, [PC, #360]
0x305C	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 541 :: 		ucRF4463Power = 127;            // 34
0x305E	0x217F    MOVS	R1, #127
0x3060	0x4859    LDR	R0, [PC, #356]
0x3062	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 543 :: 		ucRF4463Rate  = dr_4p8;                // BAUDRATE
0x3064	0x2102    MOVS	R1, #2
0x3066	0x4859    LDR	R0, [PC, #356]
0x3068	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 551 :: 		ucRF4463Mode  = slave_mode;          // para transmision continua usar: tx_test_mode
0x306A	0x2101    MOVS	R1, #1
0x306C	0x4858    LDR	R0, [PC, #352]
0x306E	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 553 :: 		ucRF4463FreqChannel = 1;
0x3070	0x2101    MOVS	R1, #1
0x3072	0x4858    LDR	R0, [PC, #352]
0x3074	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 557 :: 		reset_mode = 0;
0x3076	0x2100    MOVS	R1, #0
0x3078	0x4857    LDR	R0, [PC, #348]
0x307A	0x7001    STRB	R1, [R0, #0]
;DriverRF4463PROMain.c, 562 :: 		vRF4463MainSetTXString();    // usada para establecer el encabezdo predeterminado
0x307C	0xF7FFFA38  BL	_vRF4463MainSetTXString+0
;DriverRF4463PROMain.c, 563 :: 		VRF4463SDNReset();
0x3080	0xF7FFF9F2  BL	_VRF4463SDNReset+0
;DriverRF4463PROMain.c, 564 :: 		vRF4463Init();
0x3084	0xF7FFFA38  BL	_vRF4463Init+0
;DriverRF4463PROMain.c, 565 :: 		vRF4463ClearInterrupts();
0x3088	0xF7FFF9D6  BL	_vRF4463ClearInterrupts+0
;DriverRF4463PROMain.c, 566 :: 		vRF4463PartInfo ();          // SOLICITA EL MODELO DEL RADIO
0x308C	0xF7FFF992  BL	_vRF4463PartInfo+0
;DriverRF4463PROMain.c, 568 :: 		UART1_Write_Text( "[ SYS STM32G ]RF Radio ready\r\n" );
0x3090	0x2608    MOVS	R6, #8
0x3092	0x446E    ADD	R6, SP, R6
0x3094	0x251F    MOVS	R5, #31
0x3096	0x19AD    ADDS	R5, R5, R6
0x3098	0x4F50    LDR	R7, [PC, #320]
0x309A	0xF7FFF963  BL	___CC2DW+0
0x309E	0x2008    MOVS	R0, #8
0x30A0	0x4468    ADD	R0, SP, R0
0x30A2	0xF7FFF995  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 571 :: 		while ( 1 ) {
L_main344:
;DriverRF4463PROMain.c, 574 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x30A6	0x484E    LDR	R0, [PC, #312]
0x30A8	0x6800    LDR	R0, [R0, #0]
0x30AA	0x2801    CMP	R0, #1
0x30AC	0xD101    BNE	L_main346
;DriverRF4463PROMain.c, 575 :: 		vUSARTReceivedFromUSART1();
0x30AE	0xF7FFF997  BL	_vUSARTReceivedFromUSART1+0
;DriverRF4463PROMain.c, 576 :: 		}
L_main346:
;DriverRF4463PROMain.c, 587 :: 		if ( ucRF4463Mode == master_mode ) {
0x30B2	0x4847    LDR	R0, [PC, #284]
0x30B4	0x7800    LDRB	R0, [R0, #0]
0x30B6	0x2800    CMP	R0, #0
0x30B8	0xD102    BNE	L_main347
;DriverRF4463PROMain.c, 588 :: 		vRF4463TxData();
0x30BA	0xF7FEFE9D  BL	_vRF4463TxData+0
;DriverRF4463PROMain.c, 589 :: 		}
0x30BE	0xE00C    B	L_main348
L_main347:
;DriverRF4463PROMain.c, 592 :: 		else if ( ucRF4463Mode == slave_mode ) {
0x30C0	0x4843    LDR	R0, [PC, #268]
0x30C2	0x7800    LDRB	R0, [R0, #0]
0x30C4	0x2801    CMP	R0, #1
0x30C6	0xD102    BNE	L_main349
;DriverRF4463PROMain.c, 593 :: 		vRF4463RxInit();
0x30C8	0xF7FEF9C8  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 594 :: 		}
0x30CC	0xE005    B	L_main350
L_main349:
;DriverRF4463PROMain.c, 597 :: 		else if ( ucRF4463Mode == rf_off ) {
0x30CE	0x4840    LDR	R0, [PC, #256]
0x30D0	0x7800    LDRB	R0, [R0, #0]
0x30D2	0x2804    CMP	R0, #4
0x30D4	0xD101    BNE	L_main351
;DriverRF4463PROMain.c, 598 :: 		vRF4463RxInit();
0x30D6	0xF7FEF9C1  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 599 :: 		}
L_main351:
L_main350:
L_main348:
;DriverRF4463PROMain.c, 602 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x30DA	0x483D    LDR	R0, [PC, #244]
0x30DC	0x7800    LDRB	R0, [R0, #0]
0x30DE	0x2802    CMP	R0, #2
0x30E0	0xD110    BNE	L_main352
;DriverRF4463PROMain.c, 603 :: 		vRF4463TxCont();
0x30E2	0xF7FEFF1D  BL	_vRF4463TxCont+0
;DriverRF4463PROMain.c, 604 :: 		while ( 1 ) {
L_main353:
;DriverRF4463PROMain.c, 606 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x30E6	0x483E    LDR	R0, [PC, #248]
0x30E8	0x6800    LDR	R0, [R0, #0]
0x30EA	0x2801    CMP	R0, #1
0x30EC	0xD100    BNE	L_main355
;DriverRF4463PROMain.c, 607 :: 		break;
0x30EE	0xE009    B	L_main354
;DriverRF4463PROMain.c, 608 :: 		}
L_main355:
;DriverRF4463PROMain.c, 610 :: 		if ( !nIRQ ) {
0x30F0	0x483C    LDR	R0, [PC, #240]
0x30F2	0x6801    LDR	R1, [R0, #0]
0x30F4	0x2004    MOVS	R0, #4
0x30F6	0x4008    ANDS	R0, R1
0x30F8	0x0880    LSRS	R0, R0, #2
0x30FA	0x2800    CMP	R0, #0
0x30FC	0xD101    BNE	L_main356
;DriverRF4463PROMain.c, 611 :: 		vRF4463TxCont();
0x30FE	0xF7FEFF0F  BL	_vRF4463TxCont+0
;DriverRF4463PROMain.c, 612 :: 		}
L_main356:
;DriverRF4463PROMain.c, 613 :: 		}
0x3102	0xE7F0    B	L_main353
L_main354:
;DriverRF4463PROMain.c, 614 :: 		}
L_main352:
;DriverRF4463PROMain.c, 616 :: 		if ( ucRF4463Mode == rx_test_mode ) {
0x3104	0x4832    LDR	R0, [PC, #200]
0x3106	0x7800    LDRB	R0, [R0, #0]
0x3108	0x2803    CMP	R0, #3
0x310A	0xD107    BNE	L_main357
;DriverRF4463PROMain.c, 617 :: 		vRF4463RxInit ();
0x310C	0xF7FEF9A6  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 618 :: 		while ( 1 ) {
L_main358:
;DriverRF4463PROMain.c, 620 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x3110	0x4833    LDR	R0, [PC, #204]
0x3112	0x6800    LDR	R0, [R0, #0]
0x3114	0x2801    CMP	R0, #1
0x3116	0xD100    BNE	L_main360
;DriverRF4463PROMain.c, 621 :: 		break;
0x3118	0xE000    B	L_main359
;DriverRF4463PROMain.c, 622 :: 		}
L_main360:
;DriverRF4463PROMain.c, 625 :: 		}
0x311A	0xE7F9    B	L_main358
L_main359:
;DriverRF4463PROMain.c, 626 :: 		}
L_main357:
;DriverRF4463PROMain.c, 628 :: 		if ( reset_mode == 0 ) {
0x311C	0x482E    LDR	R0, [PC, #184]
0x311E	0x7800    LDRB	R0, [R0, #0]
0x3120	0x2800    CMP	R0, #0
0x3122	0xD000    BEQ	#0
0x3124	0xE0C5    B	L_main361
;DriverRF4463PROMain.c, 630 :: 		while ( 1 ) {
L_main362:
;DriverRF4463PROMain.c, 632 :: 		if ( fUSART1Buffer == READY_TO_READ ) {
0x3126	0x482E    LDR	R0, [PC, #184]
0x3128	0x6800    LDR	R0, [R0, #0]
0x312A	0x2801    CMP	R0, #1
0x312C	0xD100    BNE	L_main364
;DriverRF4463PROMain.c, 633 :: 		break;
0x312E	0xE0C0    B	L_main363
;DriverRF4463PROMain.c, 634 :: 		}
L_main364:
;DriverRF4463PROMain.c, 636 :: 		if ( Flag.reach_1s ) {
0x3130	0x482D    LDR	R0, [PC, #180]
0x3132	0x7801    LDRB	R1, [R0, #0]
0x3134	0x2001    MOVS	R0, #1
0x3136	0x4008    ANDS	R0, R1
0x3138	0x2800    CMP	R0, #0
0x313A	0xD00A    BEQ	L_main365
;DriverRF4463PROMain.c, 637 :: 		Flag.reach_1s = 0;
0x313C	0x4A2A    LDR	R2, [PC, #168]
0x313E	0x7810    LDRB	R0, [R2, #0]
0x3140	0x2101    MOVS	R1, #1
0x3142	0x4388    BICS	R0, R1
0x3144	0x7010    STRB	R0, [R2, #0]
;DriverRF4463PROMain.c, 638 :: 		if ( ucRF4463Mode == master_mode ) {
0x3146	0x4822    LDR	R0, [PC, #136]
0x3148	0x7800    LDRB	R0, [R0, #0]
0x314A	0x2800    CMP	R0, #0
0x314C	0xD101    BNE	L_main366
;DriverRF4463PROMain.c, 639 :: 		vRF4463TxData();
0x314E	0xF7FEFE53  BL	_vRF4463TxData+0
;DriverRF4463PROMain.c, 640 :: 		}
L_main366:
;DriverRF4463PROMain.c, 641 :: 		}
L_main365:
;DriverRF4463PROMain.c, 644 :: 		if ( !Flag.is_tx ) {
0x3152	0x4825    LDR	R0, [PC, #148]
0x3154	0x7801    LDRB	R1, [R0, #0]
0x3156	0x2002    MOVS	R0, #2
0x3158	0x4008    ANDS	R0, R1
0x315A	0x0840    LSRS	R0, R0, #1
0x315C	0x2800    CMP	R0, #0
0x315E	0xD000    BEQ	#0
0x3160	0xE0A6    B	L_main367
;DriverRF4463PROMain.c, 645 :: 		if ( !nIRQ ) {          // !nIRQ
0x3162	0x4820    LDR	R0, [PC, #128]
0x3164	0x6801    LDR	R1, [R0, #0]
0x3166	0x2004    MOVS	R0, #4
0x3168	0x4008    ANDS	R0, R1
0x316A	0x0880    LSRS	R0, R0, #2
0x316C	0x2800    CMP	R0, #0
0x316E	0xD000    BEQ	#0
0x3170	0xE09E    B	L_main368
;DriverRF4463PROMain.c, 646 :: 		vRF4463ClearInterrupts();
0x3172	0xF7FFF961  BL	_vRF4463ClearInterrupts+0
;DriverRF4463PROMain.c, 648 :: 		if ( ( spi_read_buf[ 4 ] & 0x08) == 0 ) { // crc error check
0x3176	0x481D    LDR	R0, [PC, #116]
0x3178	0x7801    LDRB	R1, [R0, #0]
0x317A	0x2008    MOVS	R0, #8
0x317C	0x4008    ANDS	R0, R1
0x317E	0xB2C0    UXTB	R0, R0
0x3180	0x2800    CMP	R0, #0
0x3182	0xE035    B	#106
0x3184	0x04005000  	GPIOB_BASE+0
0x3188	0x00005000  	GPIOA_BASE+0
0x318C	0x02000000  	#512
0x3190	0x40000000  	#16384
0x3194	0x08005000  	GPIOC_BASE+0
0x3198	0x80000000  	#32768
0x319C	0x08000000  	#2048
0x31A0	0x10000000  	#4096
0x31A4	0x04145000  	GPIOB_ODR+0
0x31A8	0x10404002  	RCC_APBENR2bits+0
0x31AC	0x00004001  	SYSCFG_VREFBUF_CFGR1bits+0
0x31B0	0x00145000  	GPIOA_ODRbits+0
0x31B4	0x04145000  	GPIOB_ODRbits+0
0x31B8	0xC2000001  	#115200
0x31BC	0x22932000  	_ucRF4463Freq3+0
0x31C0	0x22942000  	_ucRF4463Freq2+0
0x31C4	0x22952000  	_ucRF4463Freq1+0
0x31C8	0x22922000  	_ucRF4463Power+0
0x31CC	0x22962000  	_ucRF4463Rate+0
0x31D0	0x22972000  	_ucRF4463Mode+0
0x31D4	0x207C2000  	_ucRF4463FreqChannel+0
0x31D8	0x22EF2000  	_reset_mode+0
0x31DC	0x5EE80000  	?ICS?lstr4_DriverRF4463PROMain+0
0x31E0	0x20082000  	_fUSART1Buffer+0
0x31E4	0x00105000  	GPIOA_IDRbits+0
0x31E8	0x22AC2000  	_Flag+0
0x31EC	0x229C2000  	_spi_read_buf+4
0x31F0	0xD14C    BNE	L_main369
;DriverRF4463PROMain.c, 652 :: 		spi_read_fifo();
0x31F2	0xF7FEFEBD  BL	_spi_read_fifo+0
;DriverRF4463PROMain.c, 653 :: 		vRF4463FifoReset();
0x31F6	0xF7FDFCC1  BL	_vRF4463FifoReset+0
;DriverRF4463PROMain.c, 655 :: 		chksum = 0;
0x31FA	0x2000    MOVS	R0, #0
0x31FC	0x9001    STR	R0, [SP, #4]
;DriverRF4463PROMain.c, 656 :: 		for ( i = 4; i < payload_length - 1; i++ )                // Calculation Checksum
0x31FE	0x2004    MOVS	R0, #4
0x3200	0x9000    STR	R0, [SP, #0]
L_main370:
0x3202	0x9800    LDR	R0, [SP, #0]
0x3204	0xB2C0    UXTB	R0, R0
0x3206	0x2841    CMP	R0, #65
0x3208	0xDA0D    BGE	L_main371
;DriverRF4463PROMain.c, 657 :: 		chksum += rx_buf[ i ];
0x320A	0x9900    LDR	R1, [SP, #0]
0x320C	0xB2C9    UXTB	R1, R1
0x320E	0x482A    LDR	R0, [PC, #168]
0x3210	0x1840    ADDS	R0, R0, R1
0x3212	0x7801    LDRB	R1, [R0, #0]
0x3214	0x9801    LDR	R0, [SP, #4]
0x3216	0xB2C0    UXTB	R0, R0
0x3218	0x1840    ADDS	R0, R0, R1
0x321A	0x9001    STR	R0, [SP, #4]
;DriverRF4463PROMain.c, 656 :: 		for ( i = 4; i < payload_length - 1; i++ )                // Calculation Checksum
0x321C	0x9800    LDR	R0, [SP, #0]
0x321E	0xB2C0    UXTB	R0, R0
0x3220	0x3001    ADDS	R0, #1
0x3222	0x9000    STR	R0, [SP, #0]
;DriverRF4463PROMain.c, 657 :: 		chksum += rx_buf[ i ];
0x3224	0xE7ED    B	L_main370
L_main371:
;DriverRF4463PROMain.c, 659 :: 		if ( ( chksum == rx_buf[ payload_length - 1 ] )&&( rx_buf[ 4 ] == 0x41 )) {
0x3226	0x4825    LDR	R0, [PC, #148]
0x3228	0x7801    LDRB	R1, [R0, #0]
0x322A	0x9801    LDR	R0, [SP, #4]
0x322C	0xB2C0    UXTB	R0, R0
0x322E	0x4288    CMP	R0, R1
0x3230	0xD129    BNE	L__main444
0x3232	0x4823    LDR	R0, [PC, #140]
0x3234	0x7800    LDRB	R0, [R0, #0]
0x3236	0x2841    CMP	R0, #65
0x3238	0xD125    BNE	L__main443
L__main442:
;DriverRF4463PROMain.c, 668 :: 		UART1_Write_Text( rx_buf );
0x323A	0x481F    LDR	R0, [PC, #124]
0x323C	0xF7FFF8C8  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 669 :: 		UART1_Write_Text("\r\n");
0x3240	0x2628    MOVS	R6, #40
0x3242	0x446E    ADD	R6, SP, R6
0x3244	0x2503    MOVS	R5, #3
0x3246	0x19AD    ADDS	R5, R5, R6
0x3248	0x4F1E    LDR	R7, [PC, #120]
0x324A	0xF7FFF88B  BL	___CC2DW+0
0x324E	0x2028    MOVS	R0, #40
0x3250	0x4468    ADD	R0, SP, R0
0x3252	0xF7FFF8BD  BL	_UART1_Write_Text+0
;DriverRF4463PROMain.c, 672 :: 		LED_GREEN ^= 1;                                        // Data received
0x3256	0x481C    LDR	R0, [PC, #112]
0x3258	0x6800    LDR	R0, [R0, #0]
0x325A	0x2140    MOVS	R1, #64
0x325C	0x4001    ANDS	R1, R0
0x325E	0x0989    LSRS	R1, R1, #6
0x3260	0x2001    MOVS	R0, #1
0x3262	0x4048    EORS	R0, R1
0x3264	0xB2C3    UXTB	R3, R0
0x3266	0x4A18    LDR	R2, [PC, #96]
0x3268	0x6810    LDR	R0, [R2, #0]
0x326A	0x2101    MOVS	R1, #1
0x326C	0x4019    ANDS	R1, R3
0x326E	0xD002    BEQ	L__main507
0x3270	0x2140    MOVS	R1, #64
0x3272	0x4308    ORRS	R0, R1
0x3274	0xE001    B	L__main506
L__main507:
0x3276	0x2140    MOVS	R1, #64
0x3278	0x4388    BICS	R0, R1
L__main506:
0x327A	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 673 :: 		rx_cnt++;
0x327C	0x4913    LDR	R1, [PC, #76]
0x327E	0x6808    LDR	R0, [R1, #0]
0x3280	0x3001    ADDS	R0, #1
0x3282	0x6008    STR	R0, [R1, #0]
;DriverRF4463PROMain.c, 679 :: 		}
0x3284	0xE001    B	L_main376
;DriverRF4463PROMain.c, 659 :: 		if ( ( chksum == rx_buf[ payload_length - 1 ] )&&( rx_buf[ 4 ] == 0x41 )) {
L__main444:
L__main443:
;DriverRF4463PROMain.c, 681 :: 		vRF4463RxInit();    // The received data is wrong, you must continue to receive
0x3286	0xF7FEF8E9  BL	_vRF4463RxInit+0
L_main376:
;DriverRF4463PROMain.c, 682 :: 		}
0x328A	0xE011    B	L_main377
L_main369:
;DriverRF4463PROMain.c, 685 :: 		vUSART1Start_TX("[ CRC ] Fail\r\n", 14 );
0x328C	0x262C    MOVS	R6, #44
0x328E	0x446E    ADD	R6, SP, R6
0x3290	0x250F    MOVS	R5, #15
0x3292	0x19AD    ADDS	R5, R5, R6
0x3294	0x4F0E    LDR	R7, [PC, #56]
0x3296	0xF7FFF865  BL	___CC2DW+0
0x329A	0x202C    MOVS	R0, #44
0x329C	0x4468    ADD	R0, SP, R0
0x329E	0x210E    MOVS	R1, #14
0x32A0	0xF7FDF98C  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 686 :: 		VRF4463SDNReset();
0x32A4	0xF7FFF8E0  BL	_VRF4463SDNReset+0
;DriverRF4463PROMain.c, 687 :: 		vRF4463Init();
0x32A8	0xF7FFF926  BL	_vRF4463Init+0
;DriverRF4463PROMain.c, 688 :: 		vRF4463RxInit();
0x32AC	0xF7FEF8D6  BL	_vRF4463RxInit+0
;DriverRF4463PROMain.c, 689 :: 		}
L_main377:
;DriverRF4463PROMain.c, 690 :: 		}
L_main368:
;DriverRF4463PROMain.c, 691 :: 		}
L_main367:
;DriverRF4463PROMain.c, 692 :: 		}
0x32B0	0xE739    B	L_main362
L_main363:
;DriverRF4463PROMain.c, 693 :: 		}
L_main361:
;DriverRF4463PROMain.c, 694 :: 		}
0x32B2	0xE6F8    B	L_main344
;DriverRF4463PROMain.c, 695 :: 		}
L_end_main:
L__main_end_loop:
0x32B4	0xE7FE    B	L__main_end_loop
0x32B6	0xBF00    NOP
0x32B8	0x22AD2000  	_rx_buf+0
0x32BC	0x22EE2000  	_rx_buf+65
0x32C0	0x22B12000  	_rx_buf+4
0x32C4	0x5F080000  	?ICS?lstr5_DriverRF4463PROMain+0
0x32C8	0x04145000  	GPIOB_ODRbits+0
0x32CC	0x22002000  	_rx_cnt+0
0x32D0	0x5F0C0000  	?ICS?lstr6_DriverRF4463PROMain+0
; end of _main
___CC2DW:
;__Lib_System_G0xx.c, 27 :: 		
0x2364	0xB081    SUB	SP, SP, #4
;__Lib_System_G0xx.c, 29 :: 		
L_loopDW:
;__Lib_System_G0xx.c, 30 :: 		
0x2366	0x783C    LDRB	R4, [R7, #0]
;__Lib_System_G0xx.c, 31 :: 		
0x2368	0x1C7F    ADDS	R7, R7, #1
;__Lib_System_G0xx.c, 32 :: 		
0x236A	0x7034    STRB	R4, [R6, #0]
;__Lib_System_G0xx.c, 33 :: 		
0x236C	0x1C76    ADDS	R6, R6, #1
;__Lib_System_G0xx.c, 34 :: 		
0x236E	0x42AE    CMP	R6, R5
;__Lib_System_G0xx.c, 35 :: 		
0x2370	0xD1F9    BNE	L_loopDW
;__Lib_System_G0xx.c, 37 :: 		
L_end___CC2DW:
0x2372	0xB001    ADD	SP, SP, #4
0x2374	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_G0xx.c, 76 :: 		
0x2378	0xB081    SUB	SP, SP, #4
;__Lib_System_G0xx.c, 78 :: 		
0x237A	0x2400    MOVS	R4, #0
;__Lib_System_G0xx.c, 79 :: 		
0x237C	0x2700    MOVS	R7, #0
;__Lib_System_G0xx.c, 80 :: 		
0x237E	0x45AD    CMP	SP, R5
;__Lib_System_G0xx.c, 81 :: 		
0x2380	0xDC03    BGT	L_loopFZs
;__Lib_System_G0xx.c, 82 :: 		
0x2382	0x45B5    CMP	SP, R6
;__Lib_System_G0xx.c, 83 :: 		
0x2384	0xDB01    BLT	L_loopFZs
;__Lib_System_G0xx.c, 84 :: 		
0x2386	0x462F    MOV	R7, R5
;__Lib_System_G0xx.c, 85 :: 		
0x2388	0x466D    MOV	R5, SP
;__Lib_System_G0xx.c, 86 :: 		
L_loopFZs:
;__Lib_System_G0xx.c, 87 :: 		
0x238A	0x6034    STR	R4, [R6, #0]
;__Lib_System_G0xx.c, 88 :: 		
0x238C	0x1D36    ADDS	R6, R6, #4
;__Lib_System_G0xx.c, 89 :: 		
0x238E	0x42AE    CMP	R6, R5
;__Lib_System_G0xx.c, 90 :: 		
0x2390	0xD1FB    BNE	L_loopFZs
;__Lib_System_G0xx.c, 91 :: 		
0x2392	0x42AF    CMP	R7, R5
;__Lib_System_G0xx.c, 92 :: 		
0x2394	0xDD03    BLE	L_norep
;__Lib_System_G0xx.c, 93 :: 		
0x2396	0x463D    MOV	R5, R7
;__Lib_System_G0xx.c, 94 :: 		
0x2398	0x6826    LDR	R6, [R4, #0]
;__Lib_System_G0xx.c, 95 :: 		
0x239A	0x1D36    ADDS	R6, R6, #4
;__Lib_System_G0xx.c, 96 :: 		
0x239C	0xE7F5    B	L_loopFZs
;__Lib_System_G0xx.c, 97 :: 		
L_norep:
;__Lib_System_G0xx.c, 99 :: 		
L_end___FillZeros:
0x239E	0xB001    ADD	SP, SP, #4
0x23A0	0x4770    BX	LR
; end of ___FillZeros
_GPIO_Digital_Output:
;__Lib_GPIO_G0xx.c, 528 :: 		
; pinMask start address is: 4 (R1)
; port start address is: 0 (R0)
0x23A4	0xB500    PUSH	(R14)
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pinMask start address is: 4 (R1)
;__Lib_GPIO_G0xx.c, 530 :: 		
0x23A6	0x4A02    LDR	R2, [PC, #8]
0x23A8	0xB289    UXTH	R1, R1
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
0x23AA	0xF7FFF8A5  BL	_GPIO_Config+0
;__Lib_GPIO_G0xx.c, 531 :: 		
L_end_GPIO_Digital_Output:
0x23AE	0xBD00    POP	(R15)
0x23B0	0x00140008  	#524308
; end of _GPIO_Digital_Output
_GPIO_Config:
;__Lib_GPIO_G0xx.c, 231 :: 		
; port start address is: 0 (R0)
0x14F8	0xB500    PUSH	(R14)
0x14FA	0xB086    SUB	SP, SP, #24
0x14FC	0x9101    STR	R1, [SP, #4]
0x14FE	0x9202    STR	R2, [SP, #8]
; port end address is: 0 (R0)
; port start address is: 0 (R0)
;__Lib_GPIO_G0xx.c, 234 :: 		
;__Lib_GPIO_G0xx.c, 235 :: 		
;__Lib_GPIO_G0xx.c, 236 :: 		
;__Lib_GPIO_G0xx.c, 238 :: 		
;__Lib_GPIO_G0xx.c, 239 :: 		
;__Lib_GPIO_G0xx.c, 240 :: 		
;__Lib_GPIO_G0xx.c, 241 :: 		
;__Lib_GPIO_G0xx.c, 243 :: 		
;__Lib_GPIO_G0xx.c, 244 :: 		
;__Lib_GPIO_G0xx.c, 245 :: 		
;__Lib_GPIO_G0xx.c, 250 :: 		
0x1500	0x4BA4    LDR	R3, [PC, #656]
0x1502	0x4003    ANDS	R3, R0
0x1504	0x9304    STR	R3, [SP, #16]
;__Lib_GPIO_G0xx.c, 252 :: 		
; port end address is: 0 (R0)
0x1506	0xF7FFFAE5  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_G0xx.c, 255 :: 		
0x150A	0x9B01    LDR	R3, [SP, #4]
0x150C	0xB29B    UXTH	R3, R3
0x150E	0x2BFF    CMP	R3, #255
0x1510	0xD121    BNE	L_GPIO_Config22
;__Lib_GPIO_G0xx.c, 257 :: 		
0x1512	0x9B04    LDR	R3, [SP, #16]
0x1514	0x681C    LDR	R4, [R3, #0]
;__Lib_GPIO_G0xx.c, 258 :: 		
0x1516	0x4BA0    LDR	R3, [PC, #640]
0x1518	0x4620    MOV	R0, R4
0x151A	0x4018    ANDS	R0, R3
; tmp start address is: 0 (R0)
;__Lib_GPIO_G0xx.c, 260 :: 		
0x151C	0x9C02    LDR	R4, [SP, #8]
0x151E	0x4B9F    LDR	R3, [PC, #636]
0x1520	0x429C    CMP	R4, R3
0x1522	0xD112    BNE	L_GPIO_Config23
;__Lib_GPIO_G0xx.c, 263 :: 		
0x1524	0x4B9E    LDR	R3, [PC, #632]
0x1526	0x4604    MOV	R4, R0
0x1528	0x431C    ORRS	R4, R3
; tmp end address is: 0 (R0)
;__Lib_GPIO_G0xx.c, 264 :: 		
0x152A	0x9B04    LDR	R3, [SP, #16]
0x152C	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_G0xx.c, 267 :: 		
0x152E	0x9B04    LDR	R3, [SP, #16]
0x1530	0x1D1D    ADDS	R5, R3, #4
0x1532	0x682C    LDR	R4, [R5, #0]
0x1534	0x4B9B    LDR	R3, [PC, #620]
0x1536	0x4023    ANDS	R3, R4
0x1538	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_G0xx.c, 270 :: 		
0x153A	0x9B04    LDR	R3, [SP, #16]
0x153C	0x461D    MOV	R5, R3
0x153E	0x3508    ADDS	R5, #8
0x1540	0x682C    LDR	R4, [R5, #0]
0x1542	0x4B99    LDR	R3, [PC, #612]
0x1544	0x4323    ORRS	R3, R4
0x1546	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_G0xx.c, 271 :: 		
0x1548	0xE121    B	L_end_GPIO_Config
;__Lib_GPIO_G0xx.c, 272 :: 		
L_GPIO_Config23:
;__Lib_GPIO_G0xx.c, 274 :: 		
; tmp start address is: 0 (R0)
0x154A	0x9B02    LDR	R3, [SP, #8]
0x154C	0x2B42    CMP	R3, #66
0x154E	0xD102    BNE	L_GPIO_Config24
;__Lib_GPIO_G0xx.c, 277 :: 		
0x1550	0x9B04    LDR	R3, [SP, #16]
0x1552	0x6018    STR	R0, [R3, #0]
; tmp end address is: 0 (R0)
;__Lib_GPIO_G0xx.c, 278 :: 		
0x1554	0xE11B    B	L_end_GPIO_Config
;__Lib_GPIO_G0xx.c, 279 :: 		
L_GPIO_Config24:
;__Lib_GPIO_G0xx.c, 280 :: 		
L_GPIO_Config22:
;__Lib_GPIO_G0xx.c, 283 :: 		
0x1556	0x9C01    LDR	R4, [SP, #4]
0x1558	0xB2A4    UXTH	R4, R4
0x155A	0x4B94    LDR	R3, [PC, #592]
0x155C	0x429C    CMP	R4, R3
0x155E	0xD121    BNE	L_GPIO_Config25
;__Lib_GPIO_G0xx.c, 285 :: 		
0x1560	0x9B04    LDR	R3, [SP, #16]
0x1562	0x681C    LDR	R4, [R3, #0]
;__Lib_GPIO_G0xx.c, 286 :: 		
0x1564	0x4B90    LDR	R3, [PC, #576]
0x1566	0x4023    ANDS	R3, R4
; tmp start address is: 0 (R0)
0x1568	0x4618    MOV	R0, R3
;__Lib_GPIO_G0xx.c, 288 :: 		
0x156A	0x9C02    LDR	R4, [SP, #8]
0x156C	0x4B8B    LDR	R3, [PC, #556]
0x156E	0x429C    CMP	R4, R3
0x1570	0xD112    BNE	L_GPIO_Config26
;__Lib_GPIO_G0xx.c, 291 :: 		
0x1572	0x4B8F    LDR	R3, [PC, #572]
0x1574	0x4604    MOV	R4, R0
0x1576	0x431C    ORRS	R4, R3
; tmp end address is: 0 (R0)
;__Lib_GPIO_G0xx.c, 292 :: 		
0x1578	0x9B04    LDR	R3, [SP, #16]
0x157A	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_G0xx.c, 295 :: 		
0x157C	0x9B04    LDR	R3, [SP, #16]
0x157E	0x1D1D    ADDS	R5, R3, #4
0x1580	0x682C    LDR	R4, [R5, #0]
0x1582	0x4B8C    LDR	R3, [PC, #560]
0x1584	0x4023    ANDS	R3, R4
0x1586	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_G0xx.c, 298 :: 		
0x1588	0x9B04    LDR	R3, [SP, #16]
0x158A	0x461D    MOV	R5, R3
0x158C	0x3508    ADDS	R5, #8
0x158E	0x682C    LDR	R4, [R5, #0]
0x1590	0x4B81    LDR	R3, [PC, #516]
0x1592	0x4323    ORRS	R3, R4
0x1594	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_G0xx.c, 299 :: 		
0x1596	0xE0FA    B	L_end_GPIO_Config
;__Lib_GPIO_G0xx.c, 300 :: 		
L_GPIO_Config26:
;__Lib_GPIO_G0xx.c, 302 :: 		
; tmp start address is: 0 (R0)
0x1598	0x9B02    LDR	R3, [SP, #8]
0x159A	0x2B42    CMP	R3, #66
0x159C	0xD102    BNE	L_GPIO_Config27
;__Lib_GPIO_G0xx.c, 305 :: 		
0x159E	0x9B04    LDR	R3, [SP, #16]
0x15A0	0x6018    STR	R0, [R3, #0]
; tmp end address is: 0 (R0)
;__Lib_GPIO_G0xx.c, 306 :: 		
0x15A2	0xE0F4    B	L_end_GPIO_Config
;__Lib_GPIO_G0xx.c, 307 :: 		
L_GPIO_Config27:
;__Lib_GPIO_G0xx.c, 308 :: 		
L_GPIO_Config25:
;__Lib_GPIO_G0xx.c, 311 :: 		
0x15A4	0x9C01    LDR	R4, [SP, #4]
0x15A6	0xB2A4    UXTH	R4, R4
0x15A8	0x4B7F    LDR	R3, [PC, #508]
0x15AA	0x429C    CMP	R4, R3
0x15AC	0xD117    BNE	L_GPIO_Config28
;__Lib_GPIO_G0xx.c, 313 :: 		
0x15AE	0x9C02    LDR	R4, [SP, #8]
0x15B0	0x4B7A    LDR	R3, [PC, #488]
0x15B2	0x429C    CMP	R4, R3
0x15B4	0xD10C    BNE	L_GPIO_Config29
;__Lib_GPIO_G0xx.c, 316 :: 		
0x15B6	0x4C80    LDR	R4, [PC, #512]
0x15B8	0x9B04    LDR	R3, [SP, #16]
0x15BA	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_G0xx.c, 319 :: 		
0x15BC	0x9B04    LDR	R3, [SP, #16]
0x15BE	0x1D1C    ADDS	R4, R3, #4
0x15C0	0x2300    MOVS	R3, #0
0x15C2	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_G0xx.c, 322 :: 		
0x15C4	0x9B04    LDR	R3, [SP, #16]
0x15C6	0x461C    MOV	R4, R3
0x15C8	0x3408    ADDS	R4, #8
0x15CA	0x4B7C    LDR	R3, [PC, #496]
0x15CC	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_G0xx.c, 323 :: 		
0x15CE	0xE0DE    B	L_end_GPIO_Config
;__Lib_GPIO_G0xx.c, 324 :: 		
L_GPIO_Config29:
;__Lib_GPIO_G0xx.c, 326 :: 		
0x15D0	0x9B02    LDR	R3, [SP, #8]
0x15D2	0x2B42    CMP	R3, #66
0x15D4	0xD103    BNE	L_GPIO_Config30
;__Lib_GPIO_G0xx.c, 329 :: 		
0x15D6	0x2400    MOVS	R4, #0
0x15D8	0x9B04    LDR	R3, [SP, #16]
0x15DA	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_G0xx.c, 330 :: 		
0x15DC	0xE0D7    B	L_end_GPIO_Config
;__Lib_GPIO_G0xx.c, 331 :: 		
L_GPIO_Config30:
;__Lib_GPIO_G0xx.c, 332 :: 		
L_GPIO_Config28:
;__Lib_GPIO_G0xx.c, 341 :: 		
0x15DE	0x9C02    LDR	R4, [SP, #8]
0x15E0	0x2301    MOVS	R3, #1
0x15E2	0x4023    ANDS	R3, R4
0x15E4	0x2B00    CMP	R3, #0
0x15E6	0xD002    BEQ	L_GPIO_Config31
;__Lib_GPIO_G0xx.c, 343 :: 		
; mode start address is: 0 (R0)
0x15E8	0x2003    MOVS	R0, #3
;__Lib_GPIO_G0xx.c, 344 :: 		
0x15EA	0x4607    MOV	R7, R0
; mode end address is: 0 (R0)
0x15EC	0xE00F    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_G0xx.c, 346 :: 		
0x15EE	0x9C02    LDR	R4, [SP, #8]
0x15F0	0x2308    MOVS	R3, #8
0x15F2	0x4023    ANDS	R3, R4
0x15F4	0x2B00    CMP	R3, #0
0x15F6	0xD001    BEQ	L_GPIO_Config33
;__Lib_GPIO_G0xx.c, 348 :: 		
; mode start address is: 0 (R0)
0x15F8	0x2002    MOVS	R0, #2
;__Lib_GPIO_G0xx.c, 349 :: 		
; mode end address is: 0 (R0)
0x15FA	0xE007    B	L_GPIO_Config34
L_GPIO_Config33:
;__Lib_GPIO_G0xx.c, 351 :: 		
0x15FC	0x9C02    LDR	R4, [SP, #8]
0x15FE	0x2304    MOVS	R3, #4
0x1600	0x4023    ANDS	R3, R4
0x1602	0x2B00    CMP	R3, #0
0x1604	0xD001    BEQ	L_GPIO_Config35
;__Lib_GPIO_G0xx.c, 353 :: 		
; mode start address is: 0 (R0)
0x1606	0x2001    MOVS	R0, #1
;__Lib_GPIO_G0xx.c, 354 :: 		
; mode end address is: 0 (R0)
0x1608	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_G0xx.c, 358 :: 		
; mode start address is: 0 (R0)
0x160A	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
;__Lib_GPIO_G0xx.c, 359 :: 		
L_GPIO_Config36:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config34:
; mode start address is: 0 (R0)
0x160C	0x4607    MOV	R7, R0
; mode end address is: 0 (R0)
L_GPIO_Config32:
;__Lib_GPIO_G0xx.c, 367 :: 		
; mode start address is: 28 (R7)
0x160E	0x9C02    LDR	R4, [SP, #8]
0x1610	0x4B6B    LDR	R3, [PC, #428]
0x1612	0x4023    ANDS	R3, R4
0x1614	0x2B00    CMP	R3, #0
0x1616	0xD001    BEQ	L_GPIO_Config37
;__Lib_GPIO_G0xx.c, 369 :: 		
; speed start address is: 8 (R2)
0x1618	0x2203    MOVS	R2, #3
;__Lib_GPIO_G0xx.c, 370 :: 		
; speed end address is: 8 (R2)
0x161A	0xE007    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_G0xx.c, 372 :: 		
0x161C	0x9C02    LDR	R4, [SP, #8]
0x161E	0x4B69    LDR	R3, [PC, #420]
0x1620	0x4023    ANDS	R3, R4
0x1622	0x2B00    CMP	R3, #0
0x1624	0xD001    BEQ	L_GPIO_Config39
;__Lib_GPIO_G0xx.c, 374 :: 		
; speed start address is: 8 (R2)
0x1626	0x2201    MOVS	R2, #1
;__Lib_GPIO_G0xx.c, 375 :: 		
; speed end address is: 8 (R2)
0x1628	0xE000    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_G0xx.c, 379 :: 		
; speed start address is: 8 (R2)
0x162A	0x2200    MOVS	R2, #0
; speed end address is: 8 (R2)
;__Lib_GPIO_G0xx.c, 380 :: 		
L_GPIO_Config40:
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
L_GPIO_Config38:
;__Lib_GPIO_G0xx.c, 404 :: 		
; speed start address is: 8 (R2)
0x162C	0x9C02    LDR	R4, [SP, #8]
0x162E	0x2320    MOVS	R3, #32
0x1630	0x4023    ANDS	R3, R4
0x1632	0x2B00    CMP	R3, #0
0x1634	0xD001    BEQ	L_GPIO_Config41
;__Lib_GPIO_G0xx.c, 406 :: 		
; otype start address is: 4 (R1)
0x1636	0x2101    MOVS	R1, #1
;__Lib_GPIO_G0xx.c, 407 :: 		
; otype end address is: 4 (R1)
0x1638	0xE000    B	L_GPIO_Config42
L_GPIO_Config41:
;__Lib_GPIO_G0xx.c, 411 :: 		
; otype start address is: 4 (R1)
0x163A	0x2100    MOVS	R1, #0
; otype end address is: 4 (R1)
;__Lib_GPIO_G0xx.c, 412 :: 		
L_GPIO_Config42:
;__Lib_GPIO_G0xx.c, 420 :: 		
; otype start address is: 4 (R1)
0x163C	0x9C02    LDR	R4, [SP, #8]
0x163E	0x23FF    MOVS	R3, #255
0x1640	0x3301    ADDS	R3, #1
0x1642	0x4023    ANDS	R3, R4
0x1644	0x2B00    CMP	R3, #0
0x1646	0xD002    BEQ	L_GPIO_Config43
;__Lib_GPIO_G0xx.c, 422 :: 		
; pull start address is: 16 (R4)
0x1648	0x2402    MOVS	R4, #2
;__Lib_GPIO_G0xx.c, 423 :: 		
0x164A	0x4620    MOV	R0, R4
; pull end address is: 16 (R4)
0x164C	0xE008    B	L_GPIO_Config44
L_GPIO_Config43:
;__Lib_GPIO_G0xx.c, 425 :: 		
0x164E	0x9C02    LDR	R4, [SP, #8]
0x1650	0x2380    MOVS	R3, #128
0x1652	0x4023    ANDS	R3, R4
0x1654	0x2B00    CMP	R3, #0
0x1656	0xD001    BEQ	L_GPIO_Config45
;__Lib_GPIO_G0xx.c, 427 :: 		
; pull start address is: 16 (R4)
0x1658	0x2401    MOVS	R4, #1
;__Lib_GPIO_G0xx.c, 428 :: 		
; pull end address is: 16 (R4)
0x165A	0xE000    B	L_GPIO_Config46
L_GPIO_Config45:
;__Lib_GPIO_G0xx.c, 431 :: 		
; pull start address is: 16 (R4)
0x165C	0x2400    MOVS	R4, #0
; pull end address is: 16 (R4)
L_GPIO_Config46:
; pull start address is: 16 (R4)
0x165E	0x4620    MOV	R0, R4
; pull end address is: 16 (R4)
L_GPIO_Config44:
;__Lib_GPIO_G0xx.c, 434 :: 		
; pull start address is: 0 (R0)
0x1660	0x2300    MOVS	R3, #0
0x1662	0x9303    STR	R3, [SP, #12]
L_GPIO_Config47:
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 28 (R7)
; mode end address is: 28 (R7)
0x1664	0x9B03    LDR	R3, [SP, #12]
0x1666	0x2B10    CMP	R3, #16
0x1668	0xD300    BCC	#0
0x166A	0xE090    B	L_GPIO_Config48
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 28 (R7)
;__Lib_GPIO_G0xx.c, 436 :: 		
; mode start address is: 28 (R7)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x166C	0x9D03    LDR	R5, [SP, #12]
0x166E	0x2301    MOVS	R3, #1
0x1670	0x461C    MOV	R4, R3
0x1672	0x40AC    LSLS	R4, R5
;__Lib_GPIO_G0xx.c, 439 :: 		
0x1674	0x9B01    LDR	R3, [SP, #4]
0x1676	0xB29B    UXTH	R3, R3
0x1678	0x4023    ANDS	R3, R4
;__Lib_GPIO_G0xx.c, 440 :: 		
0x167A	0x42A3    CMP	R3, R4
0x167C	0xD000    BEQ	#0
0x167E	0xE082    B	L_GPIO_Config50
;__Lib_GPIO_G0xx.c, 443 :: 		
0x1680	0x9B03    LDR	R3, [SP, #12]
0x1682	0x005D    LSLS	R5, R3, #1
0x1684	0x2403    MOVS	R4, #3
0x1686	0x4623    MOV	R3, R4
0x1688	0x40AB    LSLS	R3, R5
0x168A	0x43DC    MVN	R4, R3
0x168C	0x9B04    LDR	R3, [SP, #16]
0x168E	0x681B    LDR	R3, [R3, #0]
0x1690	0x401C    ANDS	R4, R3
0x1692	0x9B04    LDR	R3, [SP, #16]
0x1694	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_G0xx.c, 445 :: 		
0x1696	0x9B03    LDR	R3, [SP, #12]
0x1698	0x005B    LSLS	R3, R3, #1
0x169A	0x463C    MOV	R4, R7
0x169C	0x409C    LSLS	R4, R3
0x169E	0x9B04    LDR	R3, [SP, #16]
0x16A0	0x681B    LDR	R3, [R3, #0]
0x16A2	0x431C    ORRS	R4, R3
0x16A4	0x9B04    LDR	R3, [SP, #16]
0x16A6	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_G0xx.c, 449 :: 		
0x16A8	0x9C02    LDR	R4, [SP, #8]
0x16AA	0x230C    MOVS	R3, #12
0x16AC	0x4023    ANDS	R3, R4
0x16AE	0x2B00    CMP	R3, #0
0x16B0	0xD027    BEQ	L_GPIO_Config51
;__Lib_GPIO_G0xx.c, 452 :: 		
0x16B2	0x9B04    LDR	R3, [SP, #16]
0x16B4	0x461E    MOV	R6, R3
0x16B6	0x3608    ADDS	R6, #8
0x16B8	0x9B03    LDR	R3, [SP, #12]
0x16BA	0x005D    LSLS	R5, R3, #1
0x16BC	0x2403    MOVS	R4, #3
0x16BE	0x4623    MOV	R3, R4
0x16C0	0x40AB    LSLS	R3, R5
0x16C2	0x43DC    MVN	R4, R3
0x16C4	0x6833    LDR	R3, [R6, #0]
0x16C6	0x4023    ANDS	R3, R4
0x16C8	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_G0xx.c, 454 :: 		
0x16CA	0x9B04    LDR	R3, [SP, #16]
0x16CC	0x461D    MOV	R5, R3
0x16CE	0x3508    ADDS	R5, #8
0x16D0	0x9B03    LDR	R3, [SP, #12]
0x16D2	0x005B    LSLS	R3, R3, #1
0x16D4	0x4614    MOV	R4, R2
0x16D6	0x409C    LSLS	R4, R3
0x16D8	0x682B    LDR	R3, [R5, #0]
0x16DA	0x4323    ORRS	R3, R4
0x16DC	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_G0xx.c, 458 :: 		
0x16DE	0x9B04    LDR	R3, [SP, #16]
0x16E0	0x1D1E    ADDS	R6, R3, #4
0x16E2	0x9D03    LDR	R5, [SP, #12]
0x16E4	0x2401    MOVS	R4, #1
0x16E6	0x4623    MOV	R3, R4
0x16E8	0x40AB    LSLS	R3, R5
0x16EA	0x43DC    MVN	R4, R3
0x16EC	0x6833    LDR	R3, [R6, #0]
0x16EE	0x4023    ANDS	R3, R4
0x16F0	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_G0xx.c, 460 :: 		
0x16F2	0x9B04    LDR	R3, [SP, #16]
0x16F4	0x1D1D    ADDS	R5, R3, #4
0x16F6	0x9B03    LDR	R3, [SP, #12]
0x16F8	0x460C    MOV	R4, R1
0x16FA	0x409C    LSLS	R4, R3
0x16FC	0x682B    LDR	R3, [R5, #0]
0x16FE	0x4323    ORRS	R3, R4
0x1700	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_G0xx.c, 461 :: 		
L_GPIO_Config51:
;__Lib_GPIO_G0xx.c, 466 :: 		
0x1702	0x9B04    LDR	R3, [SP, #16]
0x1704	0x461E    MOV	R6, R3
0x1706	0x360C    ADDS	R6, #12
0x1708	0x9B03    LDR	R3, [SP, #12]
0x170A	0x005D    LSLS	R5, R3, #1
0x170C	0x2403    MOVS	R4, #3
0x170E	0x4623    MOV	R3, R4
0x1710	0x40AB    LSLS	R3, R5
0x1712	0x43DC    MVN	R4, R3
0x1714	0x6833    LDR	R3, [R6, #0]
0x1716	0x4023    ANDS	R3, R4
0x1718	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_G0xx.c, 468 :: 		
0x171A	0x9B04    LDR	R3, [SP, #16]
0x171C	0x461D    MOV	R5, R3
0x171E	0x350C    ADDS	R5, #12
0x1720	0x9B03    LDR	R3, [SP, #12]
0x1722	0x005B    LSLS	R3, R3, #1
0x1724	0x4604    MOV	R4, R0
0x1726	0x409C    LSLS	R4, R3
0x1728	0x682B    LDR	R3, [R5, #0]
0x172A	0x4323    ORRS	R3, R4
0x172C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_G0xx.c, 480 :: 		
0x172E	0x9C02    LDR	R4, [SP, #8]
0x1730	0x2308    MOVS	R3, #8
0x1732	0x4023    ANDS	R3, R4
0x1734	0x2B00    CMP	R3, #0
0x1736	0xD026    BEQ	L_GPIO_Config52
;__Lib_GPIO_G0xx.c, 482 :: 		
0x1738	0x9C02    LDR	R4, [SP, #8]
0x173A	0x4B23    LDR	R3, [PC, #140]
0x173C	0x4023    ANDS	R3, R4
0x173E	0x0D1B    LSRS	R3, R3, #20
0x1740	0x9300    STR	R3, [SP, #0]
;__Lib_GPIO_G0xx.c, 485 :: 		
0x1742	0x9B03    LDR	R3, [SP, #12]
0x1744	0x2B07    CMP	R3, #7
0x1746	0xD906    BLS	L_GPIO_Config53
;__Lib_GPIO_G0xx.c, 487 :: 		
0x1748	0x9B04    LDR	R3, [SP, #16]
0x174A	0x3324    ADDS	R3, #36
0x174C	0x9305    STR	R3, [SP, #20]
;__Lib_GPIO_G0xx.c, 488 :: 		
0x174E	0x9B03    LDR	R3, [SP, #12]
0x1750	0x461E    MOV	R6, R3
0x1752	0x3E08    SUBS	R6, #8
; pos start address is: 24 (R6)
;__Lib_GPIO_G0xx.c, 489 :: 		
; pos end address is: 24 (R6)
0x1754	0xE003    B	L_GPIO_Config54
L_GPIO_Config53:
;__Lib_GPIO_G0xx.c, 493 :: 		
0x1756	0x9B04    LDR	R3, [SP, #16]
0x1758	0x3320    ADDS	R3, #32
0x175A	0x9305    STR	R3, [SP, #20]
;__Lib_GPIO_G0xx.c, 494 :: 		
; pos start address is: 24 (R6)
0x175C	0x9E03    LDR	R6, [SP, #12]
; pos end address is: 24 (R6)
;__Lib_GPIO_G0xx.c, 495 :: 		
L_GPIO_Config54:
;__Lib_GPIO_G0xx.c, 498 :: 		
; pos start address is: 24 (R6)
0x175E	0x00B5    LSLS	R5, R6, #2
0x1760	0x240F    MOVS	R4, #15
0x1762	0x4623    MOV	R3, R4
0x1764	0x40AB    LSLS	R3, R5
0x1766	0x43DC    MVN	R4, R3
0x1768	0x9B05    LDR	R3, [SP, #20]
0x176A	0x681B    LDR	R3, [R3, #0]
0x176C	0x401C    ANDS	R4, R3
0x176E	0x9B05    LDR	R3, [SP, #20]
0x1770	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_G0xx.c, 500 :: 		
0x1772	0x9D00    LDR	R5, [SP, #0]
0x1774	0xB2ED    UXTB	R5, R5
0x1776	0x00B3    LSLS	R3, R6, #2
; pos end address is: 24 (R6)
0x1778	0x462C    MOV	R4, R5
0x177A	0x409C    LSLS	R4, R3
0x177C	0x9B05    LDR	R3, [SP, #20]
0x177E	0x681B    LDR	R3, [R3, #0]
0x1780	0x431C    ORRS	R4, R3
0x1782	0x9B05    LDR	R3, [SP, #20]
0x1784	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_G0xx.c, 501 :: 		
L_GPIO_Config52:
;__Lib_GPIO_G0xx.c, 502 :: 		
L_GPIO_Config50:
;__Lib_GPIO_G0xx.c, 434 :: 		
0x1786	0x9B03    LDR	R3, [SP, #12]
0x1788	0x3301    ADDS	R3, #1
0x178A	0x9303    STR	R3, [SP, #12]
;__Lib_GPIO_G0xx.c, 503 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 28 (R7)
0x178C	0xE76A    B	L_GPIO_Config47
L_GPIO_Config48:
;__Lib_GPIO_G0xx.c, 504 :: 		
L_end_GPIO_Config:
0x178E	0xB006    ADD	SP, SP, #24
0x1790	0xBD00    POP	(R15)
0x1792	0xBF00    NOP
0x1794	0xFC00FFFF  	#-1024
0x1798	0x0000FFFF  	#-65536
0x179C	0x00140008  	#524308
0x17A0	0x55550000  	#21845
0x17A4	0xFF00FFFF  	#-256
0x17A8	0xFFFF0000  	#65535
0x17AC	0xFF000000  	#65280
0x17B0	0x00005555  	#1431633920
0x17B4	0x00FFFFFF  	#-65281
0x17B8	0x55555555  	#1431655765
0x17BC	0xFFFFFFFF  	#-1
0x17C0	0x08000008  	#526336
0x17C4	0x04000000  	#1024
0x17C8	0x000000F0  	#15728640
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_G0xx.c, 136 :: 		
; port start address is: 0 (R0)
0x0AD4	0xB500    PUSH	(R14)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
;__Lib_GPIO_G0xx.c, 143 :: 		
0x0AD6	0x4913    LDR	R1, [PC, #76]
0x0AD8	0x4001    ANDS	R1, R0
; port end address is: 0 (R0)
; portBase start address is: 0 (R0)
0x0ADA	0x4608    MOV	R0, R1
;__Lib_GPIO_G0xx.c, 145 :: 		
; pos start address is: 8 (R2)
0x0ADC	0x2200    MOVS	R2, #0
;__Lib_GPIO_G0xx.c, 146 :: 		
0x0ADE	0xE009    B	L_GPIO_Clk_Enable8
; portBase end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_G0xx.c, 148 :: 		
L_GPIO_Clk_Enable10:
;__Lib_GPIO_G0xx.c, 150 :: 		
; pos start address is: 0 (R0)
0x0AE0	0x2001    MOVS	R0, #1
;__Lib_GPIO_G0xx.c, 151 :: 		
; pos end address is: 0 (R0)
0x0AE2	0xE017    B	L_GPIO_Clk_Enable9
;__Lib_GPIO_G0xx.c, 153 :: 		
L_GPIO_Clk_Enable11:
;__Lib_GPIO_G0xx.c, 155 :: 		
; pos start address is: 0 (R0)
0x0AE4	0x2002    MOVS	R0, #2
;__Lib_GPIO_G0xx.c, 156 :: 		
; pos end address is: 0 (R0)
0x0AE6	0xE015    B	L_GPIO_Clk_Enable9
;__Lib_GPIO_G0xx.c, 158 :: 		
L_GPIO_Clk_Enable12:
;__Lib_GPIO_G0xx.c, 160 :: 		
; pos start address is: 0 (R0)
0x0AE8	0x2004    MOVS	R0, #4
;__Lib_GPIO_G0xx.c, 161 :: 		
; pos end address is: 0 (R0)
0x0AEA	0xE013    B	L_GPIO_Clk_Enable9
;__Lib_GPIO_G0xx.c, 163 :: 		
L_GPIO_Clk_Enable13:
;__Lib_GPIO_G0xx.c, 165 :: 		
; pos start address is: 0 (R0)
0x0AEC	0x2008    MOVS	R0, #8
;__Lib_GPIO_G0xx.c, 166 :: 		
; pos end address is: 0 (R0)
0x0AEE	0xE011    B	L_GPIO_Clk_Enable9
;__Lib_GPIO_G0xx.c, 168 :: 		
L_GPIO_Clk_Enable14:
;__Lib_GPIO_G0xx.c, 170 :: 		
; pos start address is: 0 (R0)
0x0AF0	0x2020    MOVS	R0, #32
;__Lib_GPIO_G0xx.c, 171 :: 		
; pos end address is: 0 (R0)
0x0AF2	0xE00F    B	L_GPIO_Clk_Enable9
;__Lib_GPIO_G0xx.c, 173 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 8 (R2)
; portBase start address is: 0 (R0)
0x0AF4	0x490C    LDR	R1, [PC, #48]
0x0AF6	0x4288    CMP	R0, R1
0x0AF8	0xD0F2    BEQ	L_GPIO_Clk_Enable10
0x0AFA	0x490C    LDR	R1, [PC, #48]
0x0AFC	0x4288    CMP	R0, R1
0x0AFE	0xD0F1    BEQ	L_GPIO_Clk_Enable11
0x0B00	0x490B    LDR	R1, [PC, #44]
0x0B02	0x4288    CMP	R0, R1
0x0B04	0xD0F0    BEQ	L_GPIO_Clk_Enable12
0x0B06	0x490B    LDR	R1, [PC, #44]
0x0B08	0x4288    CMP	R0, R1
0x0B0A	0xD0EF    BEQ	L_GPIO_Clk_Enable13
0x0B0C	0x490A    LDR	R1, [PC, #40]
0x0B0E	0x4288    CMP	R0, R1
0x0B10	0xD0EE    BEQ	L_GPIO_Clk_Enable14
; portBase end address is: 0 (R0)
; pos end address is: 8 (R2)
0x0B12	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable9:
;__Lib_GPIO_G0xx.c, 176 :: 		
; pos start address is: 0 (R0)
0x0B14	0x4909    LDR	R1, [PC, #36]
0x0B16	0x6809    LDR	R1, [R1, #0]
0x0B18	0x460A    MOV	R2, R1
0x0B1A	0x4302    ORRS	R2, R0
; pos end address is: 0 (R0)
0x0B1C	0x4907    LDR	R1, [PC, #28]
0x0B1E	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_G0xx.c, 177 :: 		
L_end_GPIO_Clk_Enable:
0x0B20	0xBD00    POP	(R15)
0x0B22	0xBF00    NOP
0x0B24	0xFC00FFFF  	#-1024
0x0B28	0x00005000  	#1342177280
0x0B2C	0x04005000  	#1342178304
0x0B30	0x08005000  	#1342179328
0x0B34	0x0C005000  	#1342180352
0x0B38	0x14005000  	#1342182400
0x0B3C	0x10344002  	RCC_IOPENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Input:
;__Lib_GPIO_G0xx.c, 538 :: 		
; pinMask start address is: 4 (R1)
; port start address is: 0 (R0)
0x2358	0xB500    PUSH	(R14)
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pinMask start address is: 4 (R1)
;__Lib_GPIO_G0xx.c, 540 :: 		
0x235A	0x2242    MOVS	R2, #66
0x235C	0xB289    UXTH	R1, R1
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
0x235E	0xF7FFF8CB  BL	_GPIO_Config+0
;__Lib_GPIO_G0xx.c, 541 :: 		
L_end_GPIO_Digital_Input:
0x2362	0xBD00    POP	(R15)
; end of _GPIO_Digital_Input
_InitTimer2:
;DriverRF4463PROMain.c, 467 :: 		void InitTimer2(){
0x1FCC	0xB500    PUSH	(R14)
;DriverRF4463PROMain.c, 468 :: 		RCC_APBENR1bits.TIM2EN = 1;
0x1FCE	0x4A0F    LDR	R2, [PC, #60]
0x1FD0	0x6810    LDR	R0, [R2, #0]
0x1FD2	0x2101    MOVS	R1, #1
0x1FD4	0x4308    ORRS	R0, R1
0x1FD6	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 469 :: 		TIM2_CR1.CEN = 0;
0x1FD8	0x4A0D    LDR	R2, [PC, #52]
0x1FDA	0x6810    LDR	R0, [R2, #0]
0x1FDC	0x2101    MOVS	R1, #1
0x1FDE	0x4388    BICS	R0, R1
0x1FE0	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 470 :: 		TIM2_PSC = 249;
0x1FE2	0x21F9    MOVS	R1, #249
0x1FE4	0x480B    LDR	R0, [PC, #44]
0x1FE6	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 471 :: 		TIM2_ARR = 63999;
0x1FE8	0x490B    LDR	R1, [PC, #44]
0x1FEA	0x480C    LDR	R0, [PC, #48]
0x1FEC	0x6001    STR	R1, [R0, #0]
;DriverRF4463PROMain.c, 472 :: 		NVIC_IntEnable( IVT_INT_TIM2 );
0x1FEE	0x201F    MOVS	R0, #31
0x1FF0	0xF7FFFBEC  BL	_NVIC_IntEnable+0
;DriverRF4463PROMain.c, 473 :: 		TIM2_DIER.UIE = 1;
0x1FF4	0x4A0A    LDR	R2, [PC, #40]
0x1FF6	0x6810    LDR	R0, [R2, #0]
0x1FF8	0x2101    MOVS	R1, #1
0x1FFA	0x4308    ORRS	R0, R1
0x1FFC	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 474 :: 		TIM2_CR1.CEN = 1;
0x1FFE	0x4A04    LDR	R2, [PC, #16]
0x2000	0x6810    LDR	R0, [R2, #0]
0x2002	0x2101    MOVS	R1, #1
0x2004	0x4308    ORRS	R0, R1
0x2006	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 475 :: 		}
L_end_InitTimer2:
0x2008	0xBD00    POP	(R15)
0x200A	0xBF00    NOP
0x200C	0x103C4002  	RCC_APBENR1bits+0
0x2010	0x00004000  	TIM2_CR1+0
0x2014	0x00284000  	TIM2_PSC+0
0x2018	0xF9FF0000  	#63999
0x201C	0x002C4000  	TIM2_ARR+0
0x2020	0x000C4000  	TIM2_DIER+0
; end of _InitTimer2
_NVIC_IntEnable:
;__Lib_System_G0xx.c, 157 :: 		
; ivt start address is: 0 (R0)
0x17CC	0xB500    PUSH	(R14)
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_G0xx.c, 170 :: 		
0x17CE	0x280F    CMP	R0, #15
0x17D0	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_G0xx.c, 176 :: 		
0x17D2	0x490B    LDR	R1, [PC, #44]
0x17D4	0x680A    LDR	R2, [R1, #0]
0x17D6	0x2102    MOVS	R1, #2
0x17D8	0x430A    ORRS	R2, R1
0x17DA	0x4909    LDR	R1, [PC, #36]
0x17DC	0x600A    STR	R2, [R1, #0]
;__Lib_System_G0xx.c, 177 :: 		
0x17DE	0xE00D    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_G0xx.c, 178 :: 		
; ivt start address is: 0 (R0)
0x17E0	0x2810    CMP	R0, #16
0x17E2	0xD30B    BCC	L_NVIC_IntEnable8
;__Lib_System_G0xx.c, 183 :: 		
0x17E4	0x4603    MOV	R3, R0
0x17E6	0x3B10    SUBS	R3, #16
; ivt end address is: 0 (R0)
0x17E8	0x0959    LSRS	R1, R3, #5
0x17EA	0x008A    LSLS	R2, R1, #2
0x17EC	0x4905    LDR	R1, [PC, #20]
0x17EE	0x188C    ADDS	R4, R1, R2
;__Lib_System_G0xx.c, 184 :: 		
0x17F0	0x211F    MOVS	R1, #31
0x17F2	0x400B    ANDS	R3, R1
0x17F4	0x2201    MOVS	R2, #1
0x17F6	0x4611    MOV	R1, R2
0x17F8	0x4099    LSLS	R1, R3
0x17FA	0x6021    STR	R1, [R4, #0]
;__Lib_System_G0xx.c, 185 :: 		
L_NVIC_IntEnable8:
L_NVIC_IntEnable7:
;__Lib_System_G0xx.c, 186 :: 		
L_end_NVIC_IntEnable:
0x17FC	0xBD00    POP	(R15)
0x17FE	0xBF00    NOP
0x1800	0xE010E000  	STK_CSR+0
0x1804	0xE100E000  	NVIC_ISER+0
; end of _NVIC_IntEnable
_vUSARTConfigUSART1:
;uarthandler.c, 514 :: 		void vUSARTConfigUSART1 ( unsigned long ulBaudRate ) {
; ulBaudRate start address is: 0 (R0)
0x2024	0xB500    PUSH	(R14)
0x2026	0xB081    SUB	SP, SP, #4
0x2028	0x4604    MOV	R4, R0
; ulBaudRate end address is: 0 (R0)
; ulBaudRate start address is: 16 (R4)
;uarthandler.c, 528 :: 		UART1_Init_Advanced( ulBaudRate, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10 );
0x202A	0x4910    LDR	R1, [PC, #64]
0x202C	0x9400    STR	R4, [SP, #0]
0x202E	0xB402    PUSH	(R1)
0x2030	0x2300    MOVS	R3, #0
0x2032	0x2200    MOVS	R2, #0
0x2034	0x2100    MOVS	R1, #0
0x2036	0x4620    MOV	R0, R4
0x2038	0xF7FFFBE6  BL	_UART1_Init_Advanced+0
0x203C	0xB001    ADD	SP, SP, #4
0x203E	0x9C00    LDR	R4, [SP, #0]
;uarthandler.c, 529 :: 		USART1_CR1bits.UE = 0;
0x2040	0x4B0B    LDR	R3, [PC, #44]
0x2042	0x6819    LDR	R1, [R3, #0]
0x2044	0x2201    MOVS	R2, #1
0x2046	0x4391    BICS	R1, R2
0x2048	0x6019    STR	R1, [R3, #0]
;uarthandler.c, 531 :: 		ulClk = Clock_MHz() * 1000000;         // paso extra para verificacion en depuracion
0x204A	0x4A0A    LDR	R2, [PC, #40]
0x204C	0x490A    LDR	R1, [PC, #40]
0x204E	0x600A    STR	R2, [R1, #0]
;uarthandler.c, 533 :: 		USART1_BRR = ( ulClk ) / ulBaudRate;
0x2050	0x4909    LDR	R1, [PC, #36]
0x2052	0x6808    LDR	R0, [R1, #0]
0x2054	0x4622    MOV	R2, R4
0x2056	0xF7FEF833  BL	__Div_32x32_U+0
; ulBaudRate end address is: 16 (R4)
0x205A	0x4908    LDR	R1, [PC, #32]
0x205C	0x6008    STR	R0, [R1, #0]
;uarthandler.c, 535 :: 		USART1_CR1bits.UE = 1;
0x205E	0x4B04    LDR	R3, [PC, #16]
0x2060	0x6819    LDR	R1, [R3, #0]
0x2062	0x2201    MOVS	R2, #1
0x2064	0x4311    ORRS	R1, R2
0x2066	0x6019    STR	R1, [R3, #0]
;uarthandler.c, 537 :: 		}
L_end_vUSARTConfigUSART1:
0x2068	0xB001    ADD	SP, SP, #4
0x206A	0xBD00    POP	(R15)
0x206C	0x5AB40000  	__GPIO_MODULE_USART1_PA9_10+0
0x2070	0x38004001  	USART1_CR1bits+0
0x2074	0x240000F4  	#16000000
0x2078	0x22F42000  	_ulClk+0
0x207C	0x380C4001  	USART1_BRR+0
; end of _vUSARTConfigUSART1
_UART1_Init_Advanced:
;__Lib_UART_G0xx_1234.c, 391 :: 		
; stopBits start address is: 12 (R3)
; parity start address is: 8 (R2)
; dataBits start address is: 4 (R1)
; baudRate start address is: 0 (R0)
0x1808	0xB500    PUSH	(R14)
; stopBits end address is: 12 (R3)
; parity end address is: 8 (R2)
; dataBits end address is: 4 (R1)
; baudRate end address is: 0 (R0)
; baudRate start address is: 0 (R0)
; dataBits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stopBits start address is: 12 (R3)
; module start address is: 20 (R5)
0x180A	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_G0xx_1234.c, 393 :: 		
0x180C	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x180E	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x1810	0xB408    PUSH	(R3)
0x1812	0xB293    UXTH	R3, R2
0x1814	0xB28A    UXTH	R2, R1
; dataBits end address is: 4 (R1)
0x1816	0x4601    MOV	R1, R0
; baudRate end address is: 0 (R0)
0x1818	0x4802    LDR	R0, [PC, #8]
; stopBits end address is: 12 (R3)
0x181A	0xF7FEFFA3  BL	__Lib_UART_G0xx_1234_UARTx_Init_Advanced+0
0x181E	0xB002    ADD	SP, SP, #8
;__Lib_UART_G0xx_1234.c, 394 :: 		
L_end_UART1_Init_Advanced:
0x1820	0xBD00    POP	(R15)
0x1822	0xBF00    NOP
0x1824	0x38004001  	USART1_CR1+0
; end of _UART1_Init_Advanced
__Lib_UART_G0xx_1234_UARTx_Init_Advanced:
;__Lib_UART_G0xx_1234.c, 265 :: 		
; uartBase start address is: 0 (R0)
0x0764	0xB500    PUSH	(R14)
0x0766	0xB08A    SUB	SP, SP, #40
0x0768	0x9107    STR	R1, [SP, #28]
0x076A	0x4601    MOV	R1, R0
0x076C	0x9208    STR	R2, [SP, #32]
0x076E	0x9309    STR	R3, [SP, #36]
; uartBase end address is: 0 (R0)
; uartBase start address is: 4 (R1)
0x0770	0x9C0B    LDR	R4, [SP, #44]
0x0772	0xB2A4    UXTH	R4, R4
0x0774	0x940B    STR	R4, [SP, #44]
0x0776	0x9C0C    LDR	R4, [SP, #48]
0x0778	0x940C    STR	R4, [SP, #48]
;__Lib_UART_G0xx_1234.c, 275 :: 		
0x077A	0x240C    MOVS	R4, #12
0x077C	0x446C    ADD	R4, SP, R4
0x077E	0x9100    STR	R1, [SP, #0]
0x0780	0x4620    MOV	R0, R4
0x0782	0xF7FFFDC9  BL	_RCC_GetClocksFrequency+0
0x0786	0x9900    LDR	R1, [SP, #0]
;__Lib_UART_G0xx_1234.c, 278 :: 		
0x0788	0x4C5D    LDR	R4, [PC, #372]
0x078A	0x42A1    CMP	R1, R4
0x078C	0xD118    BNE	L___Lib_UART_G0xx_1234_UARTx_Init_Advanced24
;__Lib_UART_G0xx_1234.c, 281 :: 		
0x078E	0x4E5D    LDR	R6, [PC, #372]
0x0790	0x6834    LDR	R4, [R6, #0]
0x0792	0x2501    MOVS	R5, #1
0x0794	0x03AD    LSLS	R5, R5, #14
0x0796	0x432C    ORRS	R4, R5
0x0798	0x6034    STR	R4, [R6, #0]
;__Lib_UART_G0xx_1234.c, 284 :: 		
0x079A	0x4D5B    LDR	R5, [PC, #364]
0x079C	0x4C5B    LDR	R4, [PC, #364]
0x079E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 285 :: 		
0x07A0	0x4D5B    LDR	R5, [PC, #364]
0x07A2	0x4C5C    LDR	R4, [PC, #368]
0x07A4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 286 :: 		
0x07A6	0x4D5C    LDR	R5, [PC, #368]
0x07A8	0x4C5C    LDR	R4, [PC, #368]
0x07AA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 287 :: 		
0x07AC	0x4D5C    LDR	R5, [PC, #368]
0x07AE	0x4C5D    LDR	R4, [PC, #372]
0x07B0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 290 :: 		
0x07B2	0x9100    STR	R1, [SP, #0]
0x07B4	0x2001    MOVS	R0, #1
0x07B6	0xF7FFFE03  BL	__Lib_UART_G0xx_1234_get_usart_clock+0
0x07BA	0x9900    LDR	R1, [SP, #0]
0x07BC	0x9001    STR	R0, [SP, #4]
;__Lib_UART_G0xx_1234.c, 291 :: 		
0x07BE	0xE04A    B	L___Lib_UART_G0xx_1234_UARTx_Init_Advanced25
L___Lib_UART_G0xx_1234_UARTx_Init_Advanced24:
;__Lib_UART_G0xx_1234.c, 293 :: 		
0x07C0	0x4C59    LDR	R4, [PC, #356]
0x07C2	0x42A1    CMP	R1, R4
0x07C4	0xD118    BNE	L___Lib_UART_G0xx_1234_UARTx_Init_Advanced26
;__Lib_UART_G0xx_1234.c, 296 :: 		
0x07C6	0x4E59    LDR	R6, [PC, #356]
0x07C8	0x6834    LDR	R4, [R6, #0]
0x07CA	0x2501    MOVS	R5, #1
0x07CC	0x046D    LSLS	R5, R5, #17
0x07CE	0x432C    ORRS	R4, R5
0x07D0	0x6034    STR	R4, [R6, #0]
;__Lib_UART_G0xx_1234.c, 299 :: 		
0x07D2	0x4D57    LDR	R5, [PC, #348]
0x07D4	0x4C4D    LDR	R4, [PC, #308]
0x07D6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 300 :: 		
0x07D8	0x4D56    LDR	R5, [PC, #344]
0x07DA	0x4C4E    LDR	R4, [PC, #312]
0x07DC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 301 :: 		
0x07DE	0x4D56    LDR	R5, [PC, #344]
0x07E0	0x4C4E    LDR	R4, [PC, #312]
0x07E2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 302 :: 		
0x07E4	0x4D55    LDR	R5, [PC, #340]
0x07E6	0x4C4F    LDR	R4, [PC, #316]
0x07E8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 305 :: 		
0x07EA	0x9100    STR	R1, [SP, #0]
0x07EC	0x2002    MOVS	R0, #2
0x07EE	0xF7FFFDE7  BL	__Lib_UART_G0xx_1234_get_usart_clock+0
0x07F2	0x9900    LDR	R1, [SP, #0]
0x07F4	0x9001    STR	R0, [SP, #4]
;__Lib_UART_G0xx_1234.c, 306 :: 		
0x07F6	0xE02E    B	L___Lib_UART_G0xx_1234_UARTx_Init_Advanced27
L___Lib_UART_G0xx_1234_UARTx_Init_Advanced26:
;__Lib_UART_G0xx_1234.c, 308 :: 		
0x07F8	0x4C51    LDR	R4, [PC, #324]
0x07FA	0x42A1    CMP	R1, R4
0x07FC	0xD114    BNE	L___Lib_UART_G0xx_1234_UARTx_Init_Advanced28
;__Lib_UART_G0xx_1234.c, 311 :: 		
0x07FE	0x4E4B    LDR	R6, [PC, #300]
0x0800	0x6834    LDR	R4, [R6, #0]
0x0802	0x2501    MOVS	R5, #1
0x0804	0x04AD    LSLS	R5, R5, #18
0x0806	0x432C    ORRS	R4, R5
0x0808	0x6034    STR	R4, [R6, #0]
;__Lib_UART_G0xx_1234.c, 314 :: 		
0x080A	0x4D4E    LDR	R5, [PC, #312]
0x080C	0x4C3F    LDR	R4, [PC, #252]
0x080E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 315 :: 		
0x0810	0x4D4D    LDR	R5, [PC, #308]
0x0812	0x4C40    LDR	R4, [PC, #256]
0x0814	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 316 :: 		
0x0816	0x4D4D    LDR	R5, [PC, #308]
0x0818	0x4C40    LDR	R4, [PC, #256]
0x081A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 317 :: 		
0x081C	0x4D4C    LDR	R5, [PC, #304]
0x081E	0x4C41    LDR	R4, [PC, #260]
0x0820	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 320 :: 		
0x0822	0x9C05    LDR	R4, [SP, #20]
0x0824	0x9401    STR	R4, [SP, #4]
;__Lib_UART_G0xx_1234.c, 321 :: 		
0x0826	0xE016    B	L___Lib_UART_G0xx_1234_UARTx_Init_Advanced29
L___Lib_UART_G0xx_1234_UARTx_Init_Advanced28:
;__Lib_UART_G0xx_1234.c, 323 :: 		
0x0828	0x4C4A    LDR	R4, [PC, #296]
0x082A	0x42A1    CMP	R1, R4
0x082C	0xD113    BNE	L___Lib_UART_G0xx_1234_UARTx_Init_Advanced30
;__Lib_UART_G0xx_1234.c, 326 :: 		
0x082E	0x4E3F    LDR	R6, [PC, #252]
0x0830	0x6834    LDR	R4, [R6, #0]
0x0832	0x2501    MOVS	R5, #1
0x0834	0x04ED    LSLS	R5, R5, #19
0x0836	0x432C    ORRS	R4, R5
0x0838	0x6034    STR	R4, [R6, #0]
;__Lib_UART_G0xx_1234.c, 329 :: 		
0x083A	0x4D47    LDR	R5, [PC, #284]
0x083C	0x4C33    LDR	R4, [PC, #204]
0x083E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 330 :: 		
0x0840	0x4D46    LDR	R5, [PC, #280]
0x0842	0x4C34    LDR	R4, [PC, #208]
0x0844	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 331 :: 		
0x0846	0x4D46    LDR	R5, [PC, #280]
0x0848	0x4C34    LDR	R4, [PC, #208]
0x084A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 332 :: 		
0x084C	0x4D45    LDR	R5, [PC, #276]
0x084E	0x4C35    LDR	R4, [PC, #212]
0x0850	0x6025    STR	R5, [R4, #0]
;__Lib_UART_G0xx_1234.c, 335 :: 		
0x0852	0x9C05    LDR	R4, [SP, #20]
0x0854	0x9401    STR	R4, [SP, #4]
;__Lib_UART_G0xx_1234.c, 336 :: 		
L___Lib_UART_G0xx_1234_UARTx_Init_Advanced30:
L___Lib_UART_G0xx_1234_UARTx_Init_Advanced29:
L___Lib_UART_G0xx_1234_UARTx_Init_Advanced27:
L___Lib_UART_G0xx_1234_UARTx_Init_Advanced25:
;__Lib_UART_G0xx_1234.c, 339 :: 		
0x0856	0x9100    STR	R1, [SP, #0]
0x0858	0x980C    LDR	R0, [SP, #48]
0x085A	0xF7FFFDFD  BL	_GPIO_Alternate_Function_Enable+0
0x085E	0x9900    LDR	R1, [SP, #0]
;__Lib_UART_G0xx_1234.c, 342 :: 		
0x0860	0x680C    LDR	R4, [R1, #0]
0x0862	0x2501    MOVS	R5, #1
0x0864	0x43AC    BICS	R4, R5
0x0866	0x600C    STR	R4, [R1, #0]
;__Lib_UART_G0xx_1234.c, 345 :: 		
0x0868	0x1D0D    ADDS	R5, R1, #4
0x086A	0x2400    MOVS	R4, #0
0x086C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_G0xx_1234.c, 347 :: 		
0x086E	0x1D0E    ADDS	R6, R1, #4
0x0870	0x6835    LDR	R5, [R6, #0]
0x0872	0x9C0B    LDR	R4, [SP, #44]
0x0874	0xB2A4    UXTH	R4, R4
0x0876	0x432C    ORRS	R4, R5
0x0878	0x6034    STR	R4, [R6, #0]
;__Lib_UART_G0xx_1234.c, 350 :: 		
0x087A	0x2400    MOVS	R4, #0
0x087C	0x600C    STR	R4, [R1, #0]
;__Lib_UART_G0xx_1234.c, 352 :: 		
0x087E	0x680D    LDR	R5, [R1, #0]
0x0880	0x9C08    LDR	R4, [SP, #32]
0x0882	0xB2A4    UXTH	R4, R4
0x0884	0x432C    ORRS	R4, R5
0x0886	0x600C    STR	R4, [R1, #0]
;__Lib_UART_G0xx_1234.c, 354 :: 		
0x0888	0x9C09    LDR	R4, [SP, #36]
0x088A	0xB2A4    UXTH	R4, R4
0x088C	0x2C00    CMP	R4, #0
0x088E	0xD004    BEQ	L___Lib_UART_G0xx_1234_UARTx_Init_Advanced31
;__Lib_UART_G0xx_1234.c, 357 :: 		
0x0890	0x9D09    LDR	R5, [SP, #36]
0x0892	0xB2AD    UXTH	R5, R5
0x0894	0x4C34    LDR	R4, [PC, #208]
0x0896	0x432C    ORRS	R4, R5
0x0898	0x9409    STR	R4, [SP, #36]
;__Lib_UART_G0xx_1234.c, 358 :: 		
L___Lib_UART_G0xx_1234_UARTx_Init_Advanced31:
;__Lib_UART_G0xx_1234.c, 360 :: 		
0x089A	0x680D    LDR	R5, [R1, #0]
0x089C	0x9C09    LDR	R4, [SP, #36]
0x089E	0xB2A4    UXTH	R4, R4
0x08A0	0x432C    ORRS	R4, R5
0x08A2	0x600C    STR	R4, [R1, #0]
;__Lib_UART_G0xx_1234.c, 363 :: 		
0x08A4	0x680D    LDR	R5, [R1, #0]
0x08A6	0x240D    MOVS	R4, #13
0x08A8	0x432C    ORRS	R4, R5
0x08AA	0x600C    STR	R4, [R1, #0]
;__Lib_UART_G0xx_1234.c, 366 :: 		
0x08AC	0x460D    MOV	R5, R1
0x08AE	0x3508    ADDS	R5, #8
0x08B0	0x2400    MOVS	R4, #0
0x08B2	0x602C    STR	R4, [R5, #0]
;__Lib_UART_G0xx_1234.c, 370 :: 		
0x08B4	0x9D01    LDR	R5, [SP, #4]
0x08B6	0x2419    MOVS	R4, #25
0x08B8	0x4628    MOV	R0, R5
0x08BA	0x4360    MULS	R0, R4, R0
0x08BC	0x9C07    LDR	R4, [SP, #28]
0x08BE	0x00A2    LSLS	R2, R4, #2
0x08C0	0x9100    STR	R1, [SP, #0]
0x08C2	0xF7FFFBFD  BL	__Div_32x32_U+0
; intDiv start address is: 28 (R7)
0x08C6	0x4607    MOV	R7, R0
;__Lib_UART_G0xx_1234.c, 371 :: 		
0x08C8	0x2264    MOVS	R2, #100
0x08CA	0xF7FFFBF9  BL	__Div_32x32_U+0
0x08CE	0x0104    LSLS	R4, R0, #4
0x08D0	0x9402    STR	R4, [SP, #8]
;__Lib_UART_G0xx_1234.c, 373 :: 		
0x08D2	0x0926    LSRS	R6, R4, #4
0x08D4	0x2564    MOVS	R5, #100
0x08D6	0x4634    MOV	R4, R6
0x08D8	0x436C    MULS	R4, R5, R4
0x08DA	0x1B3C    SUBS	R4, R7, R4
; intDiv end address is: 28 (R7)
;__Lib_UART_G0xx_1234.c, 374 :: 		
0x08DC	0x0124    LSLS	R4, R4, #4
0x08DE	0x4620    MOV	R0, R4
0x08E0	0x3032    ADDS	R0, #50
0x08E2	0x2264    MOVS	R2, #100
0x08E4	0xF7FFFBEC  BL	__Div_32x32_U+0
0x08E8	0x9900    LDR	R1, [SP, #0]
0x08EA	0x240F    MOVS	R4, #15
0x08EC	0x4605    MOV	R5, R0
0x08EE	0x4025    ANDS	R5, R4
0x08F0	0x9C02    LDR	R4, [SP, #8]
0x08F2	0x432C    ORRS	R4, R5
;__Lib_UART_G0xx_1234.c, 376 :: 		
0x08F4	0x460D    MOV	R5, R1
0x08F6	0x350C    ADDS	R5, #12
; uartBase end address is: 4 (R1)
0x08F8	0xB2A4    UXTH	R4, R4
0x08FA	0x602C    STR	R4, [R5, #0]
;__Lib_UART_G0xx_1234.c, 377 :: 		
L_end_UARTx_Init_Advanced:
0x08FC	0xB00A    ADD	SP, SP, #40
0x08FE	0xBD00    POP	(R15)
0x0900	0x38004001  	USART1_CR1+0
0x0904	0x10404002  	RCC_APBENR2+0
0x0908	0xFFFFFFFF  	_UART1_Write+0
0x090C	0x22FC2000  	_UART_Wr_Ptr+0
0x0910	0xFFFFFFFF  	_UART1_Read+0
0x0914	0x23002000  	_UART_Rd_Ptr+0
0x0918	0xFFFFFFFF  	_UART1_Data_Ready+0
0x091C	0x23042000  	_UART_Rdy_Ptr+0
0x0920	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x0924	0x23082000  	_UART_Tx_Idle_Ptr+0
0x0928	0x44004000  	USART2_CR1+0
0x092C	0x103C4002  	RCC_APBENR1+0
0x0930	0xFFFFFFFF  	_UART2_Write+0
0x0934	0xFFFFFFFF  	_UART2_Read+0
0x0938	0xFFFFFFFF  	_UART2_Data_Ready+0
0x093C	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x0940	0x48004000  	USART3_CR1+0
0x0944	0xFFFFFFFF  	_UART3_Write+0
0x0948	0xFFFFFFFF  	_UART3_Read+0
0x094C	0xFFFFFFFF  	_UART3_Data_Ready+0
0x0950	0xFFFFFFFF  	_UART3_Tx_Idle+0
0x0954	0x4C004000  	USART4_CR1+0
0x0958	0xFFFFFFFF  	_UART4_Write+0
0x095C	0xFFFFFFFF  	_UART4_Read+0
0x0960	0xFFFFFFFF  	_UART4_Data_Ready+0
0x0964	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x0968	0x04000000  	#1024
; end of __Lib_UART_G0xx_1234_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_G0xx.c, 474 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0318	0xB500    PUSH	(R14)
0x031A	0xB081    SUB	SP, SP, #4
0x031C	0x4606    MOV	R6, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 24 (R6)
;__Lib_System_G0xx.c, 477 :: 		
0x031E	0x1D31    ADDS	R1, R6, #4
0x0320	0x9100    STR	R1, [SP, #0]
0x0322	0xF7FFFEEF  BL	_Get_Fosc_kHz+0
0x0326	0x4920    LDR	R1, [PC, #128]
0x0328	0x460A    MOV	R2, R1
0x032A	0x4342    MULS	R2, R0, R2
0x032C	0x9900    LDR	R1, [SP, #0]
0x032E	0x600A    STR	R2, [R1, #0]
;__Lib_System_G0xx.c, 480 :: 		
0x0330	0x491E    LDR	R1, [PC, #120]
0x0332	0x680A    LDR	R2, [R1, #0]
0x0334	0x491E    LDR	R1, [PC, #120]
0x0336	0x4011    ANDS	R1, R2
;__Lib_System_G0xx.c, 481 :: 		
0x0338	0x0A0A    LSRS	R2, R1, #8
; tmp start address is: 0 (R0)
0x033A	0x4610    MOV	R0, R2
;__Lib_System_G0xx.c, 482 :: 		
0x033C	0x2108    MOVS	R1, #8
0x033E	0x4011    ANDS	R1, R2
0x0340	0x2900    CMP	R1, #0
0x0342	0xD001    BEQ	L_RCC_GetClocksFrequency61
; tmp end address is: 0 (R0)
;__Lib_System_G0xx.c, 483 :: 		
; presc start address is: 0 (R0)
0x0344	0x2001    MOVS	R0, #1
; presc end address is: 0 (R0)
0x0346	0xE006    B	L_RCC_GetClocksFrequency62
L_RCC_GetClocksFrequency61:
;__Lib_System_G0xx.c, 486 :: 		
; tmp start address is: 0 (R0)
0x0348	0x2107    MOVS	R1, #7
0x034A	0x4602    MOV	R2, R0
0x034C	0x400A    ANDS	R2, R1
; tmp end address is: 0 (R0)
;__Lib_System_G0xx.c, 487 :: 		
0x034E	0x4919    LDR	R1, [PC, #100]
0x0350	0x1889    ADDS	R1, R1, R2
0x0352	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0354	0xB2C0    UXTB	R0, R0
; presc end address is: 0 (R0)
;__Lib_System_G0xx.c, 488 :: 		
L_RCC_GetClocksFrequency62:
;__Lib_System_G0xx.c, 490 :: 		
; presc start address is: 0 (R0)
0x0356	0x1D31    ADDS	R1, R6, #4
0x0358	0x6809    LDR	R1, [R1, #0]
0x035A	0x4341    MULS	R1, R0, R1
; presc end address is: 0 (R0)
0x035C	0x6031    STR	R1, [R6, #0]
;__Lib_System_G0xx.c, 493 :: 		
0x035E	0x4913    LDR	R1, [PC, #76]
0x0360	0x680A    LDR	R2, [R1, #0]
0x0362	0x4915    LDR	R1, [PC, #84]
0x0364	0x4011    ANDS	R1, R2
;__Lib_System_G0xx.c, 494 :: 		
0x0366	0x0B09    LSRS	R1, R1, #12
; tmp start address is: 0 (R0)
0x0368	0x4608    MOV	R0, R1
;__Lib_System_G0xx.c, 495 :: 		
0x036A	0x2900    CMP	R1, #0
0x036C	0xD102    BNE	L_RCC_GetClocksFrequency63
; tmp end address is: 0 (R0)
;__Lib_System_G0xx.c, 497 :: 		
; presc1 start address is: 8 (R2)
0x036E	0x2201    MOVS	R2, #1
;__Lib_System_G0xx.c, 499 :: 		
; presc2 start address is: 28 (R7)
0x0370	0x2701    MOVS	R7, #1
;__Lib_System_G0xx.c, 500 :: 		
; presc2 end address is: 28 (R7)
; presc1 end address is: 8 (R2)
0x0372	0xE007    B	L_RCC_GetClocksFrequency64
L_RCC_GetClocksFrequency63:
;__Lib_System_G0xx.c, 503 :: 		
; tmp start address is: 0 (R0)
0x0374	0x2103    MOVS	R1, #3
0x0376	0x4602    MOV	R2, R0
0x0378	0x400A    ANDS	R2, R1
; tmp end address is: 0 (R0)
;__Lib_System_G0xx.c, 505 :: 		
0x037A	0x4910    LDR	R1, [PC, #64]
0x037C	0x1889    ADDS	R1, R1, R2
0x037E	0x780A    LDRB	R2, [R1, #0]
; presc1 start address is: 8 (R2)
0x0380	0xB2D2    UXTB	R2, R2
;__Lib_System_G0xx.c, 507 :: 		
; presc2 start address is: 28 (R7)
0x0382	0x2702    MOVS	R7, #2
; presc2 end address is: 28 (R7)
; presc1 end address is: 8 (R2)
;__Lib_System_G0xx.c, 508 :: 		
L_RCC_GetClocksFrequency64:
;__Lib_System_G0xx.c, 510 :: 		
; presc2 start address is: 28 (R7)
; presc1 start address is: 8 (R2)
0x0384	0x4631    MOV	R1, R6
0x0386	0x3108    ADDS	R1, #8
0x0388	0x9100    STR	R1, [SP, #0]
0x038A	0x1D31    ADDS	R1, R6, #4
0x038C	0x6808    LDR	R0, [R1, #0]
0x038E	0xF7FFFE97  BL	__Div_32x32_U+0
; presc1 end address is: 8 (R2)
0x0392	0x9900    LDR	R1, [SP, #0]
0x0394	0x6008    STR	R0, [R1, #0]
;__Lib_System_G0xx.c, 516 :: 		
0x0396	0x4632    MOV	R2, R6
0x0398	0x320C    ADDS	R2, #12
0x039A	0x4631    MOV	R1, R6
0x039C	0x3108    ADDS	R1, #8
; RCC_Clocks end address is: 24 (R6)
0x039E	0x6809    LDR	R1, [R1, #0]
0x03A0	0x4379    MULS	R1, R7, R1
; presc2 end address is: 28 (R7)
0x03A2	0x6011    STR	R1, [R2, #0]
;__Lib_System_G0xx.c, 517 :: 		
L_end_RCC_GetClocksFrequency:
0x03A4	0xB001    ADD	SP, SP, #4
0x03A6	0xBD00    POP	(R15)
0x03A8	0x03E80000  	#1000
0x03AC	0x10084002  	RCC_CFGR+0
0x03B0	0x0F000000  	#3840
0x03B4	0x5F980000  	__Lib_System_G0xx_AHBPrescTable+0
0x03B8	0x70000000  	#28672
0x03BC	0x5FAC0000  	__Lib_System_G0xx_APBPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
0x0104	0xB500    PUSH	(R14)
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0106	0x4801    LDR	R0, [PC, #4]
0x0108	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x010A	0xBD00    POP	(R15)
0x010C	0x22F82000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
__Div_32x32_U:
;__Lib_Math.c, 267 :: 		
0x00C0	0xB081    SUB	SP, SP, #4
;__Lib_Math.c, 269 :: 		
0x00C2	0xB43A    PUSH	(R1, R3, R4, R5)
;__Lib_Math.c, 272 :: 		
0x00C4	0x0014    MOVS	R4, R2
;__Lib_Math.c, 273 :: 		
0x00C6	0xD102    BNE	_Div_32x32_U_Lab_3
;__Lib_Math.c, 275 :: 		
0x00C8	0x4602    MOV	R2, R0
;__Lib_Math.c, 276 :: 		
0x00CA	0x480C    LDR	R0, [PC, #48]
;__Lib_Math.c, 277 :: 		
0x00CC	0xE013    B	_Div_32x32_U_Lab_end
;__Lib_Math.c, 281 :: 		
_Div_32x32_U_Lab_3:
;__Lib_Math.c, 282 :: 		
0x00CE	0x4613    MOV	R3, R2
;__Lib_Math.c, 283 :: 		
0x00D0	0x4602    MOV	R2, R0
;__Lib_Math.c, 284 :: 		
0x00D2	0x2000    MOVS	R0, #0
;__Lib_Math.c, 285 :: 		
0x00D4	0x2120    MOVS	R1, #32
;__Lib_Math.c, 286 :: 		
0x00D6	0x2401    MOVS	R4, #1
;__Lib_Math.c, 287 :: 		
0x00D8	0xE009    B	_Div_32x32_U_Lab_1
;__Lib_Math.c, 289 :: 		
_Div_32x32_U_Lab_2:
;__Lib_Math.c, 290 :: 		
0x00DA	0x4615    MOV	R5, R2
;__Lib_Math.c, 291 :: 		
0x00DC	0x40CD    LSRS	R5, R1
;__Lib_Math.c, 292 :: 		
0x00DE	0x429D    CMP	R5, R3
;__Lib_Math.c, 293 :: 		
0x00E0	0xD305    BCC	_Div_32x32_U_Lab_1
;__Lib_Math.c, 294 :: 		
0x00E2	0x461D    MOV	R5, R3
;__Lib_Math.c, 295 :: 		
0x00E4	0x408D    LSLS	R5, R1
;__Lib_Math.c, 296 :: 		
0x00E6	0x1B52    SUBS	R2, R2, R5
;__Lib_Math.c, 297 :: 		
0x00E8	0x4625    MOV	R5, R4
;__Lib_Math.c, 298 :: 		
0x00EA	0x408D    LSLS	R5, R1
;__Lib_Math.c, 299 :: 		
0x00EC	0x1940    ADDS	R0, R0, R5
;__Lib_Math.c, 301 :: 		
_Div_32x32_U_Lab_1:
;__Lib_Math.c, 302 :: 		
0x00EE	0x460D    MOV	R5, R1
;__Lib_Math.c, 303 :: 		
0x00F0	0x1E49    SUBS	R1, R1, #1
;__Lib_Math.c, 304 :: 		
0x00F2	0x2D00    CMP	R5, #0
;__Lib_Math.c, 305 :: 		
0x00F4	0xDCF1    BGT	_Div_32x32_U_Lab_2
;__Lib_Math.c, 307 :: 		
_Div_32x32_U_Lab_end:
;__Lib_Math.c, 308 :: 		
0x00F6	0xBC3A    POP	(R1, R3, R4, R5)
;__Lib_Math.c, 309 :: 		
0x00F8	0xE002    B	#4
0x00FA	0xBF00    NOP
0x00FC	0xFFFFFFFF  	#-1
;__Lib_Math.c, 310 :: 		
L_end__Div_32x32_U:
0x0100	0xB001    ADD	SP, SP, #4
0x0102	0x4770    BX	LR
; end of __Div_32x32_U
__Lib_UART_G0xx_1234_get_usart_clock:
;__Lib_UART_G0xx_1234.c, 80 :: 		
; uart_number start address is: 0 (R0)
0x03C0	0xB500    PUSH	(R14)
0x03C2	0xB085    SUB	SP, SP, #20
; uart_number end address is: 0 (R0)
; uart_number start address is: 0 (R0)
;__Lib_UART_G0xx_1234.c, 84 :: 		
0x03C4	0x2801    CMP	R0, #1
0x03C6	0xD107    BNE	L___Lib_UART_G0xx_1234_get_usart_clock0
; uart_number end address is: 0 (R0)
;__Lib_UART_G0xx_1234.c, 85 :: 		
0x03C8	0x4913    LDR	R1, [PC, #76]
0x03CA	0x6809    LDR	R1, [R1, #0]
0x03CC	0x9100    STR	R1, [SP, #0]
;__Lib_UART_G0xx_1234.c, 86 :: 		
0x03CE	0x9A00    LDR	R2, [SP, #0]
0x03D0	0x2103    MOVS	R1, #3
0x03D2	0x4011    ANDS	R1, R2
0x03D4	0x9100    STR	R1, [SP, #0]
;__Lib_UART_G0xx_1234.c, 87 :: 		
0x03D6	0xE009    B	L___Lib_UART_G0xx_1234_get_usart_clock1
L___Lib_UART_G0xx_1234_get_usart_clock0:
;__Lib_UART_G0xx_1234.c, 88 :: 		
; uart_number start address is: 0 (R0)
0x03D8	0x2802    CMP	R0, #2
0x03DA	0xD107    BNE	L___Lib_UART_G0xx_1234_get_usart_clock2
; uart_number end address is: 0 (R0)
;__Lib_UART_G0xx_1234.c, 89 :: 		
0x03DC	0x490E    LDR	R1, [PC, #56]
0x03DE	0x6809    LDR	R1, [R1, #0]
0x03E0	0x9100    STR	R1, [SP, #0]
;__Lib_UART_G0xx_1234.c, 90 :: 		
0x03E2	0x9A00    LDR	R2, [SP, #0]
0x03E4	0x210C    MOVS	R1, #12
0x03E6	0x4011    ANDS	R1, R2
0x03E8	0x0889    LSRS	R1, R1, #2
0x03EA	0x9100    STR	R1, [SP, #0]
;__Lib_UART_G0xx_1234.c, 91 :: 		
L___Lib_UART_G0xx_1234_get_usart_clock2:
L___Lib_UART_G0xx_1234_get_usart_clock1:
;__Lib_UART_G0xx_1234.c, 93 :: 		
0x03EC	0xE007    B	L___Lib_UART_G0xx_1234_get_usart_clock3
;__Lib_UART_G0xx_1234.c, 95 :: 		
L___Lib_UART_G0xx_1234_get_usart_clock5:
; uartx_clk start address is: 0 (R0)
0x03EE	0x9801    LDR	R0, [SP, #4]
; uartx_clk end address is: 0 (R0)
0x03F0	0xE00F    B	L___Lib_UART_G0xx_1234_get_usart_clock4
;__Lib_UART_G0xx_1234.c, 97 :: 		
L___Lib_UART_G0xx_1234_get_usart_clock6:
; uartx_clk start address is: 0 (R0)
0x03F2	0x480A    LDR	R0, [PC, #40]
; uartx_clk end address is: 0 (R0)
0x03F4	0xE00D    B	L___Lib_UART_G0xx_1234_get_usart_clock4
;__Lib_UART_G0xx_1234.c, 100 :: 		
L___Lib_UART_G0xx_1234_get_usart_clock7:
; uartx_clk start address is: 0 (R0)
0x03F6	0x480A    LDR	R0, [PC, #40]
; uartx_clk end address is: 0 (R0)
0x03F8	0xE00B    B	L___Lib_UART_G0xx_1234_get_usart_clock4
;__Lib_UART_G0xx_1234.c, 102 :: 		
L___Lib_UART_G0xx_1234_get_usart_clock8:
; uartx_clk start address is: 0 (R0)
0x03FA	0x9803    LDR	R0, [SP, #12]
; uartx_clk end address is: 0 (R0)
0x03FC	0xE009    B	L___Lib_UART_G0xx_1234_get_usart_clock4
;__Lib_UART_G0xx_1234.c, 103 :: 		
L___Lib_UART_G0xx_1234_get_usart_clock3:
0x03FE	0x9900    LDR	R1, [SP, #0]
0x0400	0x2901    CMP	R1, #1
0x0402	0xD0F4    BEQ	L___Lib_UART_G0xx_1234_get_usart_clock5
0x0404	0x9900    LDR	R1, [SP, #0]
0x0406	0x2902    CMP	R1, #2
0x0408	0xD0F3    BEQ	L___Lib_UART_G0xx_1234_get_usart_clock6
0x040A	0x9900    LDR	R1, [SP, #0]
0x040C	0x2903    CMP	R1, #3
0x040E	0xD0F2    BEQ	L___Lib_UART_G0xx_1234_get_usart_clock7
0x0410	0xE7F3    B	L___Lib_UART_G0xx_1234_get_usart_clock8
L___Lib_UART_G0xx_1234_get_usart_clock4:
;__Lib_UART_G0xx_1234.c, 105 :: 		
; uartx_clk start address is: 0 (R0)
; uartx_clk end address is: 0 (R0)
;__Lib_UART_G0xx_1234.c, 106 :: 		
L_end_get_usart_clock:
0x0412	0xB005    ADD	SP, SP, #20
0x0414	0xBD00    POP	(R15)
0x0416	0xBF00    NOP
0x0418	0x10544002  	RCC_CCIPR+0
0x041C	0x240000F4  	#16000000
0x0420	0x80000000  	#32768
; end of __Lib_UART_G0xx_1234_get_usart_clock
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_G0xx.c, 510 :: 		
; module start address is: 0 (R0)
0x0458	0xB500    PUSH	(R14)
0x045A	0xB082    SUB	SP, SP, #8
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_G0xx.c, 515 :: 		
; i start address is: 16 (R4)
0x045C	0x2400    MOVS	R4, #0
; module end address is: 0 (R0)
; i end address is: 16 (R4)
;__Lib_GPIO_G0xx.c, 516 :: 		
L_GPIO_Alternate_Function_Enable55:
; i start address is: 16 (R4)
; module start address is: 0 (R0)
0x045E	0x00A1    LSLS	R1, R4, #2
0x0460	0x1841    ADDS	R1, R0, R1
0x0462	0x680A    LDR	R2, [R1, #0]
0x0464	0x490C    LDR	R1, [PC, #48]
0x0466	0x428A    CMP	R2, R1
0x0468	0xD013    BEQ	L_GPIO_Alternate_Function_Enable56
;__Lib_GPIO_G0xx.c, 518 :: 		
0x046A	0x4601    MOV	R1, R0
0x046C	0x3134    ADDS	R1, #52
0x046E	0x00A3    LSLS	R3, R4, #2
0x0470	0x18C9    ADDS	R1, R1, R3
0x0472	0x6809    LDR	R1, [R1, #0]
0x0474	0x460A    MOV	R2, R1
0x0476	0x18C1    ADDS	R1, R0, R3
0x0478	0x6809    LDR	R1, [R1, #0]
0x047A	0x9000    STR	R0, [SP, #0]
0x047C	0x9401    STR	R4, [SP, #4]
0x047E	0x4608    MOV	R0, R1
0x0480	0x4611    MOV	R1, R2
0x0482	0xF7FFFEBD  BL	__Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function+0
0x0486	0x9C01    LDR	R4, [SP, #4]
0x0488	0xB2A4    UXTH	R4, R4
0x048A	0x9800    LDR	R0, [SP, #0]
;__Lib_GPIO_G0xx.c, 519 :: 		
0x048C	0x3401    ADDS	R4, #1
0x048E	0xB2A4    UXTH	R4, R4
;__Lib_GPIO_G0xx.c, 520 :: 		
; module end address is: 0 (R0)
; i end address is: 16 (R4)
0x0490	0xE7E5    B	L_GPIO_Alternate_Function_Enable55
L_GPIO_Alternate_Function_Enable56:
;__Lib_GPIO_G0xx.c, 521 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x0492	0xB002    ADD	SP, SP, #8
0x0494	0xBD00    POP	(R15)
0x0496	0xBF00    NOP
0x0498	0xFFFFFFFF  	#-1
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO_G0xx.c, 68 :: 		
; config start address is: 4 (R1)
; afPin start address is: 0 (R0)
0x0200	0xB500    PUSH	(R14)
0x0202	0xB083    SUB	SP, SP, #12
0x0204	0x460C    MOV	R4, R1
; config end address is: 4 (R1)
; afPin end address is: 0 (R0)
; afPin start address is: 0 (R0)
; config start address is: 16 (R4)
;__Lib_GPIO_G0xx.c, 79 :: 		
0x0206	0x22FF    MOVS	R2, #255
0x0208	0x4603    MOV	R3, R0
0x020A	0x4013    ANDS	R3, R2
0x020C	0x091A    LSRS	R2, R3, #4
; port start address is: 20 (R5)
0x020E	0x4615    MOV	R5, R2
;__Lib_GPIO_G0xx.c, 80 :: 		
0x0210	0x220F    MOVS	R2, #15
0x0212	0x4619    MOV	R1, R3
0x0214	0x4011    ANDS	R1, R2
; pin start address is: 4 (R1)
;__Lib_GPIO_G0xx.c, 81 :: 		
0x0216	0x0A03    LSRS	R3, R0, #8
; afPin end address is: 0 (R0)
0x0218	0x220F    MOVS	R2, #15
0x021A	0x401A    ANDS	R2, R3
; af start address is: 0 (R0)
0x021C	0x4610    MOV	R0, R2
;__Lib_GPIO_G0xx.c, 83 :: 		
0x021E	0xE00E    B	L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function0
; port end address is: 20 (R5)
;__Lib_GPIO_G0xx.c, 85 :: 		
L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function2:
;__Lib_GPIO_G0xx.c, 87 :: 		
0x0220	0x4A1D    LDR	R2, [PC, #116]
0x0222	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_G0xx.c, 88 :: 		
0x0224	0xE015    B	L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_G0xx.c, 90 :: 		
L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function3:
;__Lib_GPIO_G0xx.c, 92 :: 		
0x0226	0x4A1D    LDR	R2, [PC, #116]
0x0228	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_G0xx.c, 93 :: 		
0x022A	0xE012    B	L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_G0xx.c, 95 :: 		
L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function4:
;__Lib_GPIO_G0xx.c, 97 :: 		
0x022C	0x4A1C    LDR	R2, [PC, #112]
0x022E	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_G0xx.c, 98 :: 		
0x0230	0xE00F    B	L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_G0xx.c, 100 :: 		
L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function5:
;__Lib_GPIO_G0xx.c, 102 :: 		
0x0232	0x4A1C    LDR	R2, [PC, #112]
0x0234	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_G0xx.c, 103 :: 		
0x0236	0xE00C    B	L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_G0xx.c, 105 :: 		
L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function6:
;__Lib_GPIO_G0xx.c, 107 :: 		
0x0238	0x4A1B    LDR	R2, [PC, #108]
0x023A	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_G0xx.c, 108 :: 		
0x023C	0xE009    B	L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_G0xx.c, 110 :: 		
L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function0:
; port start address is: 20 (R5)
0x023E	0x2D00    CMP	R5, #0
0x0240	0xD0EE    BEQ	L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function2
0x0242	0x2D01    CMP	R5, #1
0x0244	0xD0EF    BEQ	L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function3
0x0246	0x2D02    CMP	R5, #2
0x0248	0xD0F0    BEQ	L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function4
0x024A	0x2D03    CMP	R5, #3
0x024C	0xD0F1    BEQ	L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function5
0x024E	0x2D04    CMP	R5, #4
0x0250	0xD0F2    BEQ	L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function6
; port end address is: 20 (R5)
L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function1:
;__Lib_GPIO_G0xx.c, 113 :: 		
0x0252	0x2201    MOVS	R2, #1
0x0254	0x408A    LSLS	R2, R1
0x0256	0x9000    STR	R0, [SP, #0]
; config end address is: 16 (R4)
0x0258	0x9101    STR	R1, [SP, #4]
0x025A	0xB291    UXTH	R1, R2
0x025C	0x4622    MOV	R2, R4
0x025E	0x9802    LDR	R0, [SP, #8]
0x0260	0xF001F94A  BL	_GPIO_Config+0
0x0264	0x9901    LDR	R1, [SP, #4]
0x0266	0x9800    LDR	R0, [SP, #0]
;__Lib_GPIO_G0xx.c, 116 :: 		
0x0268	0x9A02    LDR	R2, [SP, #8]
0x026A	0x4615    MOV	R5, R2
0x026C	0x3520    ADDS	R5, #32
; altFcnBase start address is: 20 (R5)
;__Lib_GPIO_G0xx.c, 117 :: 		
0x026E	0x2907    CMP	R1, #7
0x0270	0xD902    BLS	L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function77
;__Lib_GPIO_G0xx.c, 119 :: 		
0x0272	0x3504    ADDS	R5, #4
;__Lib_GPIO_G0xx.c, 120 :: 		
0x0274	0x3908    SUBS	R1, #8
; pin end address is: 4 (R1)
; altFcnBase end address is: 20 (R5)
;__Lib_GPIO_G0xx.c, 121 :: 		
0x0276	0xE7FF    B	L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function7
L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function77:
;__Lib_GPIO_G0xx.c, 117 :: 		
;__Lib_GPIO_G0xx.c, 121 :: 		
L___Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function7:
;__Lib_GPIO_G0xx.c, 123 :: 		
; pin start address is: 4 (R1)
; altFcnBase start address is: 20 (R5)
0x0278	0x008C    LSLS	R4, R1, #2
0x027A	0x230F    MOVS	R3, #15
0x027C	0x461A    MOV	R2, R3
0x027E	0x40A2    LSLS	R2, R4
0x0280	0x43D3    MVN	R3, R2
0x0282	0x682A    LDR	R2, [R5, #0]
0x0284	0x401A    ANDS	R2, R3
0x0286	0x602A    STR	R2, [R5, #0]
;__Lib_GPIO_G0xx.c, 125 :: 		
0x0288	0x008A    LSLS	R2, R1, #2
; pin end address is: 4 (R1)
0x028A	0x4603    MOV	R3, R0
0x028C	0x4093    LSLS	R3, R2
; af end address is: 0 (R0)
0x028E	0x682A    LDR	R2, [R5, #0]
0x0290	0x431A    ORRS	R2, R3
0x0292	0x602A    STR	R2, [R5, #0]
; altFcnBase end address is: 20 (R5)
;__Lib_GPIO_G0xx.c, 126 :: 		
L_end_GPIO_Config_Pin_Alternate_Function:
0x0294	0xB003    ADD	SP, SP, #12
0x0296	0xBD00    POP	(R15)
0x0298	0x00005000  	#1342177280
0x029C	0x04005000  	#1342178304
0x02A0	0x08005000  	#1342179328
0x02A4	0x0C005000  	#1342180352
0x02A8	0x14005000  	#1342182400
; end of __Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function
_vSPI1Init:
;driverspi.c, 83 :: 		void vSPI1Init( void ) {
0x2080	0xB500    PUSH	(R14)
;driverspi.c, 85 :: 		RCC_IOPENRbits.IOPAEN       = 1;      // GPIOA Enabled
0x2082	0x4A8C    LDR	R2, [PC, #560]
0x2084	0x6810    LDR	R0, [R2, #0]
0x2086	0x2101    MOVS	R1, #1
0x2088	0x4308    ORRS	R0, R1
0x208A	0x6010    STR	R0, [R2, #0]
;driverspi.c, 86 :: 		GPIOA_MODERbits.MODER5      = 2;      // Altern Function
0x208C	0x498A    LDR	R1, [PC, #552]
0x208E	0x488B    LDR	R0, [PC, #556]
0x2090	0x8800    LDRH	R0, [R0, #0]
0x2092	0x4041    EORS	R1, R0
0x2094	0xB289    UXTH	R1, R1
0x2096	0x488A    LDR	R0, [PC, #552]
0x2098	0x4001    ANDS	R1, R0
0x209A	0xB289    UXTH	R1, R1
0x209C	0x4887    LDR	R0, [PC, #540]
0x209E	0x8800    LDRH	R0, [R0, #0]
0x20A0	0x4041    EORS	R1, R0
0x20A2	0xB289    UXTH	R1, R1
0x20A4	0x4885    LDR	R0, [PC, #532]
0x20A6	0x8001    STRH	R1, [R0, #0]
;driverspi.c, 87 :: 		GPIOA_OTYPERbits.OT5        = 0;      // push pull
0x20A8	0x4A86    LDR	R2, [PC, #536]
0x20AA	0x6810    LDR	R0, [R2, #0]
0x20AC	0x2120    MOVS	R1, #32
0x20AE	0x4388    BICS	R0, R1
0x20B0	0x6010    STR	R0, [R2, #0]
;driverspi.c, 88 :: 		GPIOA_OSPEEDRbits.OSPEEDR5  = 0;      // high Speed
0x20B2	0x4885    LDR	R0, [PC, #532]
0x20B4	0x8801    LDRH	R1, [R0, #0]
0x20B6	0x4885    LDR	R0, [PC, #532]
0x20B8	0x4001    ANDS	R1, R0
0x20BA	0x0509    LSLS	R1, R1, #20
0x20BC	0x0F89    LSRS	R1, R1, #30
0x20BE	0x4882    LDR	R0, [PC, #520]
0x20C0	0x8001    STRH	R1, [R0, #0]
;driverspi.c, 89 :: 		GPIOA_PUPDRbits.PUPDR5      = 0;      // no PU or PD
0x20C2	0x4883    LDR	R0, [PC, #524]
0x20C4	0x8801    LDRH	R1, [R0, #0]
0x20C6	0x4883    LDR	R0, [PC, #524]
0x20C8	0x4001    ANDS	R1, R0
0x20CA	0x0509    LSLS	R1, R1, #20
0x20CC	0x0F89    LSRS	R1, R1, #30
0x20CE	0x4880    LDR	R0, [PC, #512]
0x20D0	0x8001    STRH	R1, [R0, #0]
;driverspi.c, 90 :: 		GPIOA_AFRLbits.AFSEL5       = 0;      // AF0
0x20D2	0x4881    LDR	R0, [PC, #516]
0x20D4	0x6801    LDR	R1, [R0, #0]
0x20D6	0x4881    LDR	R0, [PC, #516]
0x20D8	0x4001    ANDS	R1, R0
0x20DA	0x487F    LDR	R0, [PC, #508]
0x20DC	0x6001    STR	R1, [R0, #0]
;driverspi.c, 92 :: 		GPIOA_MODERbits.MODER6      = 2;      // Altern Function
0x20DE	0x4980    LDR	R1, [PC, #512]
0x20E0	0x4876    LDR	R0, [PC, #472]
0x20E2	0x8800    LDRH	R0, [R0, #0]
0x20E4	0x4041    EORS	R1, R0
0x20E6	0xB289    UXTH	R1, R1
0x20E8	0x487E    LDR	R0, [PC, #504]
0x20EA	0x4001    ANDS	R1, R0
0x20EC	0xB289    UXTH	R1, R1
0x20EE	0x4873    LDR	R0, [PC, #460]
0x20F0	0x8800    LDRH	R0, [R0, #0]
0x20F2	0x4041    EORS	R1, R0
0x20F4	0xB289    UXTH	R1, R1
0x20F6	0x4871    LDR	R0, [PC, #452]
0x20F8	0x8001    STRH	R1, [R0, #0]
;driverspi.c, 93 :: 		GPIOA_OTYPERbits.OT6        = 0;      // push pull
0x20FA	0x4A72    LDR	R2, [PC, #456]
0x20FC	0x6810    LDR	R0, [R2, #0]
0x20FE	0x2140    MOVS	R1, #64
0x2100	0x4388    BICS	R0, R1
0x2102	0x6010    STR	R0, [R2, #0]
;driverspi.c, 94 :: 		GPIOA_OSPEEDRbits.OSPEEDR6  = 0;      // high Speed
0x2104	0x4870    LDR	R0, [PC, #448]
0x2106	0x8801    LDRH	R1, [R0, #0]
0x2108	0x4877    LDR	R0, [PC, #476]
0x210A	0x4001    ANDS	R1, R0
0x210C	0x0489    LSLS	R1, R1, #18
0x210E	0x0F89    LSRS	R1, R1, #30
0x2110	0x486D    LDR	R0, [PC, #436]
0x2112	0x8001    STRH	R1, [R0, #0]
;driverspi.c, 95 :: 		GPIOA_PUPDRbits.PUPDR6      = 0;      // no PU or PD
0x2114	0x486E    LDR	R0, [PC, #440]
0x2116	0x8801    LDRH	R1, [R0, #0]
0x2118	0x4874    LDR	R0, [PC, #464]
0x211A	0x4001    ANDS	R1, R0
0x211C	0x0489    LSLS	R1, R1, #18
0x211E	0x0F89    LSRS	R1, R1, #30
0x2120	0x486B    LDR	R0, [PC, #428]
0x2122	0x8001    STRH	R1, [R0, #0]
;driverspi.c, 96 :: 		GPIOA_AFRLbits.AFSEL6       = 0;      // AF0
0x2124	0x486C    LDR	R0, [PC, #432]
0x2126	0x6801    LDR	R1, [R0, #0]
0x2128	0x4871    LDR	R0, [PC, #452]
0x212A	0x4001    ANDS	R1, R0
0x212C	0x486A    LDR	R0, [PC, #424]
0x212E	0x6001    STR	R1, [R0, #0]
;driverspi.c, 98 :: 		GPIOA_MODERbits.MODER7      = 2;      // Altern Function
0x2130	0x4970    LDR	R1, [PC, #448]
0x2132	0x4862    LDR	R0, [PC, #392]
0x2134	0x8800    LDRH	R0, [R0, #0]
0x2136	0x4041    EORS	R1, R0
0x2138	0xB289    UXTH	R1, R1
0x213A	0x486F    LDR	R0, [PC, #444]
0x213C	0x4001    ANDS	R1, R0
0x213E	0xB289    UXTH	R1, R1
0x2140	0x485E    LDR	R0, [PC, #376]
0x2142	0x8800    LDRH	R0, [R0, #0]
0x2144	0x4041    EORS	R1, R0
0x2146	0xB289    UXTH	R1, R1
0x2148	0x485C    LDR	R0, [PC, #368]
0x214A	0x8001    STRH	R1, [R0, #0]
;driverspi.c, 99 :: 		GPIOA_OTYPERbits.OT7        = 0;      // push pull
0x214C	0x4A5D    LDR	R2, [PC, #372]
0x214E	0x6810    LDR	R0, [R2, #0]
0x2150	0x2180    MOVS	R1, #128
0x2152	0x4388    BICS	R0, R1
0x2154	0x6010    STR	R0, [R2, #0]
;driverspi.c, 100 :: 		GPIOA_OSPEEDRbits.OSPEEDR7  = 0;      // high Speed
0x2156	0x485C    LDR	R0, [PC, #368]
0x2158	0x8801    LDRH	R1, [R0, #0]
0x215A	0x4868    LDR	R0, [PC, #416]
0x215C	0x4001    ANDS	R1, R0
0x215E	0x0409    LSLS	R1, R1, #16
0x2160	0x0F89    LSRS	R1, R1, #30
0x2162	0x4859    LDR	R0, [PC, #356]
0x2164	0x8001    STRH	R1, [R0, #0]
;driverspi.c, 101 :: 		GPIOA_PUPDRbits.PUPDR7      = 0;      // no PU or PD
0x2166	0x485A    LDR	R0, [PC, #360]
0x2168	0x8801    LDRH	R1, [R0, #0]
0x216A	0x4865    LDR	R0, [PC, #404]
0x216C	0x4001    ANDS	R1, R0
0x216E	0x0409    LSLS	R1, R1, #16
0x2170	0x0F89    LSRS	R1, R1, #30
0x2172	0x4857    LDR	R0, [PC, #348]
0x2174	0x8001    STRH	R1, [R0, #0]
;driverspi.c, 102 :: 		GPIOA_AFRLbits.AFSEL7       = 0;      // AF0
0x2176	0x4858    LDR	R0, [PC, #352]
0x2178	0x6801    LDR	R1, [R0, #0]
0x217A	0x4862    LDR	R0, [PC, #392]
0x217C	0x4001    ANDS	R1, R0
0x217E	0x4856    LDR	R0, [PC, #344]
0x2180	0x6001    STR	R1, [R0, #0]
;driverspi.c, 105 :: 		RCC_APBENR2bits.SPI1EN      = 1;
0x2182	0x4A61    LDR	R2, [PC, #388]
0x2184	0x6810    LDR	R0, [R2, #0]
0x2186	0x2101    MOVS	R1, #1
0x2188	0x0309    LSLS	R1, R1, #12
0x218A	0x4308    ORRS	R0, R1
0x218C	0x6010    STR	R0, [R2, #0]
;driverspi.c, 107 :: 		SPI1_CR1bits.CPHA           = 0;      // 1 if TI enabled
0x218E	0x4A5F    LDR	R2, [PC, #380]
0x2190	0x6810    LDR	R0, [R2, #0]
0x2192	0x2101    MOVS	R1, #1
0x2194	0x4388    BICS	R0, R1
0x2196	0x6010    STR	R0, [R2, #0]
;driverspi.c, 108 :: 		SPI1_CR1bits.CPOL           = 0;
0x2198	0x4A5C    LDR	R2, [PC, #368]
0x219A	0x6810    LDR	R0, [R2, #0]
0x219C	0x2102    MOVS	R1, #2
0x219E	0x4388    BICS	R0, R1
0x21A0	0x6010    STR	R0, [R2, #0]
;driverspi.c, 109 :: 		SPI1_CR1bits.LSBFIRST       = 0;
0x21A2	0x4A5A    LDR	R2, [PC, #360]
0x21A4	0x6810    LDR	R0, [R2, #0]
0x21A6	0x2180    MOVS	R1, #128
0x21A8	0x4388    BICS	R0, R1
0x21AA	0x6010    STR	R0, [R2, #0]
;driverspi.c, 110 :: 		SPI1_CR1bits.SSM            = 1;
0x21AC	0x4A57    LDR	R2, [PC, #348]
0x21AE	0x6810    LDR	R0, [R2, #0]
0x21B0	0x2101    MOVS	R1, #1
0x21B2	0x0249    LSLS	R1, R1, #9
0x21B4	0x4308    ORRS	R0, R1
0x21B6	0x6010    STR	R0, [R2, #0]
;driverspi.c, 111 :: 		SPI1_CR1bits.SSI            = 1;
0x21B8	0x4A54    LDR	R2, [PC, #336]
0x21BA	0x6810    LDR	R0, [R2, #0]
0x21BC	0x2101    MOVS	R1, #1
0x21BE	0x0209    LSLS	R1, R1, #8
0x21C0	0x4308    ORRS	R0, R1
0x21C2	0x6010    STR	R0, [R2, #0]
;driverspi.c, 112 :: 		SPI1_CR1bits.MSTR           = 1;
0x21C4	0x4A51    LDR	R2, [PC, #324]
0x21C6	0x6810    LDR	R0, [R2, #0]
0x21C8	0x2104    MOVS	R1, #4
0x21CA	0x4308    ORRS	R0, R1
0x21CC	0x6010    STR	R0, [R2, #0]
;driverspi.c, 113 :: 		SPI1_CR1bits.CRCNEXT        = 0;
0x21CE	0x4A4F    LDR	R2, [PC, #316]
0x21D0	0x6810    LDR	R0, [R2, #0]
0x21D2	0x2101    MOVS	R1, #1
0x21D4	0x0309    LSLS	R1, R1, #12
0x21D6	0x4388    BICS	R0, R1
0x21D8	0x6010    STR	R0, [R2, #0]
;driverspi.c, 115 :: 		SPI1_CR2bits.FRF            = 0;
0x21DA	0x4A4D    LDR	R2, [PC, #308]
0x21DC	0x6810    LDR	R0, [R2, #0]
0x21DE	0x2110    MOVS	R1, #16
0x21E0	0x4388    BICS	R0, R1
0x21E2	0x6010    STR	R0, [R2, #0]
;driverspi.c, 116 :: 		SPI1_CR2bits.DS             = 7;      // 8 bits empaquetado
0x21E4	0x494B    LDR	R1, [PC, #300]
0x21E6	0x484A    LDR	R0, [PC, #296]
0x21E8	0x8800    LDRH	R0, [R0, #0]
0x21EA	0x4041    EORS	R1, R0
0x21EC	0xB289    UXTH	R1, R1
0x21EE	0x484A    LDR	R0, [PC, #296]
0x21F0	0x4001    ANDS	R1, R0
0x21F2	0xB289    UXTH	R1, R1
0x21F4	0x4846    LDR	R0, [PC, #280]
0x21F6	0x8800    LDRH	R0, [R0, #0]
0x21F8	0x4041    EORS	R1, R0
0x21FA	0xB289    UXTH	R1, R1
0x21FC	0x4844    LDR	R0, [PC, #272]
0x21FE	0x8001    STRH	R1, [R0, #0]
;driverspi.c, 117 :: 		SPI1_CR2bits.SSOE           = 0;
0x2200	0x4A43    LDR	R2, [PC, #268]
0x2202	0x6810    LDR	R0, [R2, #0]
0x2204	0x2104    MOVS	R1, #4
0x2206	0x4388    BICS	R0, R1
0x2208	0x6010    STR	R0, [R2, #0]
;driverspi.c, 118 :: 		SPI1_CR2bits.NSSP           = 1;
0x220A	0x4A41    LDR	R2, [PC, #260]
0x220C	0x6810    LDR	R0, [R2, #0]
0x220E	0x2108    MOVS	R1, #8
0x2210	0x4308    ORRS	R0, R1
0x2212	0x6010    STR	R0, [R2, #0]
;driverspi.c, 119 :: 		SPI1_CR2bits.FRXTH          = 1;
0x2214	0x4A3E    LDR	R2, [PC, #248]
0x2216	0x6810    LDR	R0, [R2, #0]
0x2218	0x2101    MOVS	R1, #1
0x221A	0x0309    LSLS	R1, R1, #12
0x221C	0x4308    ORRS	R0, R1
0x221E	0x6010    STR	R0, [R2, #0]
;driverspi.c, 120 :: 		SPI1_CR2bits.TXDMAEN        = 1;
0x2220	0x4A3B    LDR	R2, [PC, #236]
0x2222	0x6810    LDR	R0, [R2, #0]
0x2224	0x2102    MOVS	R1, #2
0x2226	0x4308    ORRS	R0, R1
0x2228	0x6010    STR	R0, [R2, #0]
;driverspi.c, 124 :: 		RCC_AHBENRbits.DMAEN        = 1;
0x222A	0x4A3C    LDR	R2, [PC, #240]
0x222C	0x6810    LDR	R0, [R2, #0]
0x222E	0x2101    MOVS	R1, #1
0x2230	0x4308    ORRS	R0, R1
0x2232	0x6010    STR	R0, [R2, #0]
;driverspi.c, 126 :: 		DMA_CCR1bits.EN = 0;
0x2234	0x4A3A    LDR	R2, [PC, #232]
0x2236	0x6810    LDR	R0, [R2, #0]
0x2238	0x2101    MOVS	R1, #1
0x223A	0x4388    BICS	R0, R1
0x223C	0x6010    STR	R0, [R2, #0]
;driverspi.c, 127 :: 		while ( DMA_CCR1bits.EN );
L_vSPI1Init33:
0x223E	0x4838    LDR	R0, [PC, #224]
0x2240	0x6801    LDR	R1, [R0, #0]
0x2242	0x2001    MOVS	R0, #1
0x2244	0x4008    ANDS	R0, R1
0x2246	0x2800    CMP	R0, #0
0x2248	0xD000    BEQ	L_vSPI1Init34
0x224A	0xE7F8    B	L_vSPI1Init33
L_vSPI1Init34:
;driverspi.c, 129 :: 		PL0_bit = 1;
0x224C	0x4A35    LDR	R2, [PC, #212]
0x224E	0x6810    LDR	R0, [R2, #0]
0x2250	0x2101    MOVS	R1, #1
0x2252	0x0309    LSLS	R1, R1, BitPos(PL0_bit+0)
0x2254	0x4308    ORRS	R0, R1
0x2256	0x6010    STR	R0, [R2, #0]
;driverspi.c, 130 :: 		PL1_bit = 1;
0x2258	0x4A33    LDR	R2, [PC, #204]
0x225A	0x6810    LDR	R0, [R2, #0]
0x225C	0x2101    MOVS	R1, #1
0x225E	0x0349    LSLS	R1, R1, BitPos(PL1_bit+0)
0x2260	0x4308    ORRS	R0, R1
0x2262	0x6010    STR	R0, [R2, #0]
;driverspi.c, 131 :: 		DMA_CCR1bits.MINC           = 1;      // Mem increment
0x2264	0x4A2E    LDR	R2, [PC, #184]
0x2266	0x6810    LDR	R0, [R2, #0]
0x2268	0x2180    MOVS	R1, #128
0x226A	0x4308    ORRS	R0, R1
0x226C	0x6010    STR	R0, [R2, #0]
;driverspi.c, 132 :: 		DMA_CCR1bits.DIR_           = 1;      // Read from Memory
0x226E	0x4A2C    LDR	R2, [PC, #176]
0x2270	0x6810    LDR	R0, [R2, #0]
0x2272	0x2110    MOVS	R1, #16
0x2274	0x4308    ORRS	R0, R1
0x2276	0x6010    STR	R0, [R2, #0]
;driverspi.c, 133 :: 		DMA_CCR1bits.TEIE           = 1;      // Transfer Error Int
0x2278	0x4A29    LDR	R2, [PC, #164]
0x227A	0x6810    LDR	R0, [R2, #0]
0x227C	0x2108    MOVS	R1, #8
0x227E	0x4308    ORRS	R0, R1
0x2280	0x6010    STR	R0, [R2, #0]
;driverspi.c, 134 :: 		DMA_CCR1bits.TCIE           = 1;      // Transfer Complete Int
0x2282	0x4A27    LDR	R2, [PC, #156]
0x2284	0x6810    LDR	R0, [R2, #0]
0x2286	0x2102    MOVS	R1, #2
0x2288	0x4308    ORRS	R0, R1
0x228A	0x6010    STR	R0, [R2, #0]
;driverspi.c, 136 :: 		DMA_CPAR1 = ( unsigned long ) &SPI1_DR;    // periferico ruteado
0x228C	0x4927    LDR	R1, [PC, #156]
0x228E	0x4828    LDR	R0, [PC, #160]
0x2290	0x6001    STR	R1, [R0, #0]
;driverspi.c, 138 :: 		NVIC_IntEnable( IVT_INT_DMA_Channel1 );    // habilitacion de interrupcion
0x2292	0x2019    MOVS	R0, #25
0x2294	0xF7FFFA9A  BL	_NVIC_IntEnable+0
;driverspi.c, 140 :: 		DMAMUX_C0CRbits.DMAREQ_ID = 17;            // TX_SPI1
0x2298	0x2111    MOVS	R1, #17
0x229A	0x4826    LDR	R0, [PC, #152]
0x229C	0x7800    LDRB	R0, [R0, #0]
0x229E	0x4041    EORS	R1, R0
0x22A0	0xB2C9    UXTB	R1, R1
0x22A2	0x20FF    MOVS	R0, #255
0x22A4	0x4001    ANDS	R1, R0
0x22A6	0xB2C9    UXTB	R1, R1
0x22A8	0x4822    LDR	R0, [PC, #136]
0x22AA	0x7800    LDRB	R0, [R0, #0]
0x22AC	0x4041    EORS	R1, R0
0x22AE	0xB2C9    UXTB	R1, R1
0x22B0	0xE042    B	#132
0x22B2	0xBF00    NOP
0x22B4	0x10344002  	RCC_IOPENRbits+0
0x22B8	0x08000000  	#2048
0x22BC	0x00005000  	GPIOA_MODERbits+0
0x22C0	0x0C000000  	#3072
0x22C4	0x00045000  	GPIOA_OTYPERbits+0
0x22C8	0x00085000  	GPIOA_OSPEEDRbits+0
0x22CC	0xF3FF0000  	#62463
0x22D0	0x000C5000  	GPIOA_PUPDRbits+0
0x22D4	0xF3FF0000  	#62463
0x22D8	0x00205000  	GPIOA_AFRLbits+0
0x22DC	0xFFFFFF0F  	#-15728641
0x22E0	0x20000000  	#8192
0x22E4	0x30000000  	#12288
0x22E8	0xCFFF0000  	#53247
0x22EC	0xCFFF0000  	#53247
0x22F0	0xFFFFF0FF  	#-251658241
0x22F4	0x80000000  	#32768
0x22F8	0xC0000000  	#49152
0x22FC	0x3FFF0000  	#16383
0x2300	0x3FFF0000  	#16383
0x2304	0xFFFF0FFF  	#268435455
0x2308	0x10404002  	RCC_APBENR2bits+0
0x230C	0x30004001  	SPI1_CR1bits+0
0x2310	0x30044001  	SPI1_CR2bits+0
0x2314	0x07000000  	#1792
0x2318	0x0F000000  	#3840
0x231C	0x10384002  	RCC_AHBENRbits+0
0x2320	0x00084002  	DMA_CCR1bits+0
0x2324	0x00084002  	PL0_bit+0
0x2328	0x00084002  	PL1_bit+0
0x232C	0x300C4001  	SPI1_DR+0
0x2330	0x00104002  	DMA_CPAR1+0
0x2334	0x08004002  	DMAMUX_C0CRbits+0
0x2338	0x4805    LDR	R0, [PC, #20]
0x233A	0x7001    STRB	R1, [R0, #0]
;driverspi.c, 142 :: 		SPI1_CR2bits.RXNEIE = 1;                   // habilita interrupcion de recepcion SPI
0x233C	0x4A05    LDR	R2, [PC, #20]
0x233E	0x6810    LDR	R0, [R2, #0]
0x2340	0x2140    MOVS	R1, #64
0x2342	0x4308    ORRS	R0, R1
0x2344	0x6010    STR	R0, [R2, #0]
;driverspi.c, 144 :: 		NVIC_IntEnable( IVT_INT_SPI1 );
0x2346	0x2029    MOVS	R0, #41
0x2348	0xF7FFFA40  BL	_NVIC_IntEnable+0
;driverspi.c, 145 :: 		}
L_end_vSPI1Init:
0x234C	0xBD00    POP	(R15)
0x234E	0xBF00    NOP
0x2350	0x08004002  	DMAMUX_C0CRbits+0
0x2354	0x30044001  	SPI1_CR2bits+0
; end of _vSPI1Init
_vRF4463MainSetTXString:
;DriverRF4463PROMain.c, 115 :: 		void vRF4463MainSetTXString () {
0x24F0	0xB081    SUB	SP, SP, #4
;DriverRF4463PROMain.c, 120 :: 		}
L_end_vRF4463MainSetTXString:
0x24F2	0xB001    ADD	SP, SP, #4
0x24F4	0x4770    BX	LR
; end of _vRF4463MainSetTXString
_VRF4463SDNReset:
;driverrf4463pro.c, 852 :: 		void VRF4463SDNReset( void ) {
0x2468	0xB500    PUSH	(R14)
;driverrf4463pro.c, 855 :: 		SDN = 1;
0x246A	0x4A1E    LDR	R2, [PC, #120]
0x246C	0x6810    LDR	R0, [R2, #0]
0x246E	0x2104    MOVS	R1, #4
0x2470	0x4308    ORRS	R0, R1
0x2472	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 856 :: 		Delay_ms( 6 );        // RF Module reset  DELAY
0x2474	0x4F02    LDR	R7, [PC, #8]
0x2476	0xBF00    NOP
L_VRF4463SDNReset182:
0x2478	0x1E7F    SUBS	R7, R7, #1
0x247A	0xD1FD    BNE	L_VRF4463SDNReset182
0x247C	0xE002    B	#4
0x247E	0xBF00    NOP
0x2480	0x5DBF0000  	#23999
;driverrf4463pro.c, 857 :: 		SDN = 0;
0x2484	0x4A17    LDR	R2, [PC, #92]
0x2486	0x6810    LDR	R0, [R2, #0]
0x2488	0x2104    MOVS	R1, #4
0x248A	0x4388    BICS	R0, R1
0x248C	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 858 :: 		Delay_ms( 10 );       // Delay 10ms for RF module to enter working state
0x248E	0x4F02    LDR	R7, [PC, #8]
0x2490	0xBF00    NOP
L_VRF4463SDNReset184:
0x2492	0x1E7F    SUBS	R7, R7, #1
0x2494	0xD1FD    BNE	L_VRF4463SDNReset184
0x2496	0xE002    B	#4
0x2498	0x9C3F0000  	#39999
0x249C	0xBF00    NOP
;driverrf4463pro.c, 860 :: 		nSEL = 1;
0x249E	0x4A12    LDR	R2, [PC, #72]
0x24A0	0x6810    LDR	R0, [R2, #0]
0x24A2	0x2108    MOVS	R1, #8
0x24A4	0x4308    ORRS	R0, R1
0x24A6	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 861 :: 		nSEL = 0;
0x24A8	0x4A0F    LDR	R2, [PC, #60]
0x24AA	0x6810    LDR	R0, [R2, #0]
0x24AC	0x2108    MOVS	R1, #8
0x24AE	0x4388    BICS	R0, R1
0x24B0	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 862 :: 		for ( i = 0; i < 7; i++ ) {
; i start address is: 20 (R5)
0x24B2	0x2500    MOVS	R5, #0
; i end address is: 20 (R5)
L_VRF4463SDNReset186:
; i start address is: 20 (R5)
0x24B4	0x2D07    CMP	R5, #7
0x24B6	0xD207    BCS	L_VRF4463SDNReset187
;driverrf4463pro.c, 863 :: 		ucRf4463SPIByte( RF_POWER_UP_data[ i ] );   // send power up Command
0x24B8	0x480C    LDR	R0, [PC, #48]
0x24BA	0x1940    ADDS	R0, R0, R5
0x24BC	0x7800    LDRB	R0, [R0, #0]
0x24BE	0xF7FDFFB1  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 862 :: 		for ( i = 0; i < 7; i++ ) {
0x24C2	0x3501    ADDS	R5, #1
0x24C4	0xB2ED    UXTB	R5, R5
;driverrf4463pro.c, 864 :: 		}
; i end address is: 20 (R5)
0x24C6	0xE7F5    B	L_VRF4463SDNReset186
L_VRF4463SDNReset187:
;driverrf4463pro.c, 865 :: 		nSEL = 1;
0x24C8	0x4A07    LDR	R2, [PC, #28]
0x24CA	0x6810    LDR	R0, [R2, #0]
0x24CC	0x2108    MOVS	R1, #8
0x24CE	0x4308    ORRS	R0, R1
0x24D0	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 867 :: 		Delay_ms( 20 );       // Delay 20ms RF module enters working state, but CTS still needs to be judged later, this delay can be removed
0x24D2	0x4F02    LDR	R7, [PC, #8]
0x24D4	0xBF00    NOP
L_VRF4463SDNReset189:
0x24D6	0x1E7F    SUBS	R7, R7, #1
0x24D8	0xD1FD    BNE	L_VRF4463SDNReset189
0x24DA	0xE002    B	#4
0x24DC	0x387F0001  	#79999
0x24E0	0xBF00    NOP
;driverrf4463pro.c, 868 :: 		}
L_end_VRF4463SDNReset:
0x24E2	0xBD00    POP	(R15)
0x24E4	0x04145000  	GPIOB_ODRbits+0
0x24E8	0x00145000  	GPIOA_ODRbits+0
0x24EC	0x5FA00000  	_RF_POWER_UP_data+0
; end of _VRF4463SDNReset
_ucRf4463SPIByte:
;driverrf4463pro.c, 705 :: 		unsigned char ucRf4463SPIByte( unsigned char ucData ) {
0x0424	0xB500    PUSH	(R14)
0x0426	0xB081    SUB	SP, SP, #4
0x0428	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 707 :: 		ucSPI1ByteReceived = 0;
0x042A	0x2200    MOVS	R2, #0
0x042C	0x4908    LDR	R1, [PC, #32]
0x042E	0x700A    STRB	R2, [R1, #0]
;driverrf4463pro.c, 709 :: 		vRF4463SpiBufferTX ( &ucData, 1 );        // lo envia por DMA
0x0430	0x4669    MOV	R1, SP
0x0432	0x4608    MOV	R0, R1
0x0434	0x2101    MOVS	R1, #1
0x0436	0xF7FFFE6B  BL	_vRF4463SpiBufferTX+0
;driverrf4463pro.c, 711 :: 		while ( SPI1_SRbits.RXNE );
L_ucRf4463SPIByte148:
0x043A	0x4906    LDR	R1, [PC, #24]
0x043C	0x680A    LDR	R2, [R1, #0]
0x043E	0x2101    MOVS	R1, #1
0x0440	0x4011    ANDS	R1, R2
0x0442	0x2900    CMP	R1, #0
0x0444	0xD000    BEQ	L_ucRf4463SPIByte149
0x0446	0xE7F8    B	L_ucRf4463SPIByte148
L_ucRf4463SPIByte149:
;driverrf4463pro.c, 713 :: 		return ( ucSPI1ByteReceived );
0x0448	0x4901    LDR	R1, [PC, #4]
0x044A	0x7808    LDRB	R0, [R1, #0]
;driverrf4463pro.c, 714 :: 		}
L_end_ucRf4463SPIByte:
0x044C	0xB001    ADD	SP, SP, #4
0x044E	0xBD00    POP	(R15)
0x0450	0x22912000  	_ucSPI1ByteReceived+0
0x0454	0x30084001  	SPI1_SRbits+0
; end of _ucRf4463SPIByte
_vRF4463SpiBufferTX:
;driverspi.c, 55 :: 		char vRF4463SpiBufferTX ( unsigned long *ucBuffer, unsigned long ulSize ) {
; ulSize start address is: 4 (R1)
; ucBuffer start address is: 0 (R0)
0x0110	0xB500    PUSH	(R14)
0x0112	0xB081    SUB	SP, SP, #4
; ulSize end address is: 4 (R1)
; ucBuffer end address is: 0 (R0)
; ucBuffer start address is: 0 (R0)
; ulSize start address is: 4 (R1)
0x0114	0x9100    STR	R1, [SP, #0]
; ucBuffer end address is: 0 (R0)
; ulSize end address is: 4 (R1)
0x0116	0x4601    MOV	R1, R0
0x0118	0x9800    LDR	R0, [SP, #0]
;driverspi.c, 57 :: 		while ( DMA_CCR1bits.EN || !SPI1_SRbits.TXE );
L_vRF4463SpiBufferTX16:
; ucBuffer start address is: 4 (R1)
; ulSize start address is: 0 (R0)
; ulSize start address is: 0 (R0)
; ulSize end address is: 0 (R0)
; ucBuffer start address is: 4 (R1)
; ucBuffer end address is: 4 (R1)
0x011A	0x4A33    LDR	R2, [PC, #204]
0x011C	0x6813    LDR	R3, [R2, #0]
0x011E	0x2201    MOVS	R2, #1
0x0120	0x401A    ANDS	R2, R3
0x0122	0x2A00    CMP	R2, #0
0x0124	0xD107    BNE	L__vRF4463SpiBufferTX381
; ulSize end address is: 0 (R0)
; ucBuffer end address is: 4 (R1)
; ucBuffer start address is: 4 (R1)
; ulSize start address is: 0 (R0)
0x0126	0x4A31    LDR	R2, [PC, #196]
0x0128	0x6813    LDR	R3, [R2, #0]
0x012A	0x2202    MOVS	R2, #2
0x012C	0x401A    ANDS	R2, R3
0x012E	0x0852    LSRS	R2, R2, #1
0x0130	0x2A00    CMP	R2, #0
0x0132	0xD000    BEQ	L__vRF4463SpiBufferTX380
0x0134	0xE000    B	L_vRF4463SpiBufferTX17
L__vRF4463SpiBufferTX381:
L__vRF4463SpiBufferTX380:
0x0136	0xE7F0    B	L_vRF4463SpiBufferTX16
L_vRF4463SpiBufferTX17:
;driverspi.c, 59 :: 		SPI1_CR1bits.SPE = 1;                         // habilita el periferico
0x0138	0x4C2D    LDR	R4, [PC, #180]
0x013A	0x6822    LDR	R2, [R4, #0]
0x013C	0x2340    MOVS	R3, #64
0x013E	0x431A    ORRS	R2, R3
0x0140	0x6022    STR	R2, [R4, #0]
;driverspi.c, 61 :: 		if ( SPI1_CR1bits.SPE && SPI1_SRbits.TXE && ulSize > 0 ) { // la transmision anterior termino?
0x0142	0x4A2B    LDR	R2, [PC, #172]
0x0144	0x6813    LDR	R3, [R2, #0]
0x0146	0x2240    MOVS	R2, #64
0x0148	0x401A    ANDS	R2, R3
0x014A	0x0992    LSRS	R2, R2, #6
0x014C	0x2A00    CMP	R2, #0
0x014E	0xD100    BNE	#0
0x0150	0xE047    B	L__vRF4463SpiBufferTX384
0x0152	0x4A26    LDR	R2, [PC, #152]
0x0154	0x6813    LDR	R3, [R2, #0]
0x0156	0x2202    MOVS	R2, #2
0x0158	0x401A    ANDS	R2, R3
0x015A	0x0852    LSRS	R2, R2, #1
0x015C	0x2A00    CMP	R2, #0
0x015E	0xD040    BEQ	L__vRF4463SpiBufferTX383
0x0160	0x2800    CMP	R0, #0
0x0162	0xD93E    BLS	L__vRF4463SpiBufferTX382
L__vRF4463SpiBufferTX378:
;driverspi.c, 62 :: 		DMA_CCR1bits.EN = 0;                       // Desabilita la recepcion para poder modificar los par?metros
0x0164	0x4C20    LDR	R4, [PC, #128]
0x0166	0x6822    LDR	R2, [R4, #0]
0x0168	0x2301    MOVS	R3, #1
0x016A	0x439A    BICS	R2, R3
0x016C	0x6022    STR	R2, [R4, #0]
; ulSize end address is: 0 (R0)
; ucBuffer end address is: 4 (R1)
0x016E	0x9100    STR	R1, [SP, #0]
0x0170	0x4601    MOV	R1, R0
0x0172	0x9800    LDR	R0, [SP, #0]
;driverspi.c, 63 :: 		while ( DMA_CCR1bits.EN );                 // espera a que se haya desabilitado realmente
L_vRF4463SpiBufferTX23:
; ucBuffer start address is: 0 (R0)
; ulSize start address is: 4 (R1)
0x0174	0x4A1C    LDR	R2, [PC, #112]
0x0176	0x6813    LDR	R3, [R2, #0]
0x0178	0x2201    MOVS	R2, #1
0x017A	0x401A    ANDS	R2, R3
0x017C	0x2A00    CMP	R2, #0
0x017E	0xD000    BEQ	L_vRF4463SpiBufferTX24
0x0180	0xE7F8    B	L_vRF4463SpiBufferTX23
L_vRF4463SpiBufferTX24:
;driverspi.c, 65 :: 		DMA_CMAR1 = ( unsigned long ) ucBuffer;    // Direccion de la memoria a rutear
0x0182	0x4A1C    LDR	R2, [PC, #112]
0x0184	0x6010    STR	R0, [R2, #0]
; ucBuffer end address is: 0 (R0)
;driverspi.c, 66 :: 		DMA_CNDTR1 = ulSize;                       // Tamagno de datos a manejar
0x0186	0x4A1C    LDR	R2, [PC, #112]
0x0188	0x6011    STR	R1, [R2, #0]
; ulSize end address is: 4 (R1)
;driverspi.c, 67 :: 		DMA_CCR1bits.EN = 1;
0x018A	0x4C17    LDR	R4, [PC, #92]
0x018C	0x6822    LDR	R2, [R4, #0]
0x018E	0x2301    MOVS	R3, #1
0x0190	0x431A    ORRS	R2, R3
0x0192	0x6022    STR	R2, [R4, #0]
;driverspi.c, 69 :: 		while ( DMA_CNDTR1 > 1 );                  // esperando el fin de la transmision
L_vRF4463SpiBufferTX25:
0x0194	0x4A18    LDR	R2, [PC, #96]
0x0196	0x6812    LDR	R2, [R2, #0]
0x0198	0x2A01    CMP	R2, #1
0x019A	0xD900    BLS	L_vRF4463SpiBufferTX26
0x019C	0xE7FA    B	L_vRF4463SpiBufferTX25
L_vRF4463SpiBufferTX26:
;driverspi.c, 71 :: 		while ( SPI1_SRbits.FTLVL != 0 );          // SPI1_SRbits.FTLVL != 0
L_vRF4463SpiBufferTX27:
0x019E	0x4A13    LDR	R2, [PC, #76]
0x01A0	0x8812    LDRH	R2, [R2, #0]
0x01A2	0xB293    UXTH	R3, R2
0x01A4	0x4A15    LDR	R2, [PC, #84]
0x01A6	0x4013    ANDS	R3, R2
0x01A8	0xB29B    UXTH	R3, R3
0x01AA	0x0ADB    LSRS	R3, R3, #11
0x01AC	0xB29B    UXTH	R3, R3
0x01AE	0x2B00    CMP	R3, #0
0x01B0	0xD000    BEQ	L_vRF4463SpiBufferTX28
0x01B2	0xE7F4    B	L_vRF4463SpiBufferTX27
L_vRF4463SpiBufferTX28:
;driverspi.c, 73 :: 		while ( SPI1_SRbits.BSY );
L_vRF4463SpiBufferTX29:
0x01B4	0x4A0D    LDR	R2, [PC, #52]
0x01B6	0x6813    LDR	R3, [R2, #0]
0x01B8	0x2280    MOVS	R2, #128
0x01BA	0x401A    ANDS	R2, R3
0x01BC	0x09D2    LSRS	R2, R2, #7
0x01BE	0x2A00    CMP	R2, #0
0x01C0	0xD000    BEQ	L_vRF4463SpiBufferTX30
0x01C2	0xE7F7    B	L_vRF4463SpiBufferTX29
L_vRF4463SpiBufferTX30:
;driverspi.c, 74 :: 		while ( !SPI1_SRbits.TXE );
L_vRF4463SpiBufferTX31:
0x01C4	0x4A09    LDR	R2, [PC, #36]
0x01C6	0x6813    LDR	R3, [R2, #0]
0x01C8	0x2202    MOVS	R2, #2
0x01CA	0x401A    ANDS	R2, R3
0x01CC	0x0852    LSRS	R2, R2, #1
0x01CE	0x2A00    CMP	R2, #0
0x01D0	0xD100    BNE	L_vRF4463SpiBufferTX32
0x01D2	0xE7F7    B	L_vRF4463SpiBufferTX31
L_vRF4463SpiBufferTX32:
;driverspi.c, 76 :: 		DMA_CCR1bits.EN = 0;                       // DEPURACION
0x01D4	0x4C04    LDR	R4, [PC, #16]
0x01D6	0x6822    LDR	R2, [R4, #0]
0x01D8	0x2301    MOVS	R3, #1
0x01DA	0x439A    BICS	R2, R3
0x01DC	0x6022    STR	R2, [R4, #0]
;driverspi.c, 78 :: 		return 1;
0x01DE	0x2001    MOVS	R0, #1
0x01E0	0xE000    B	L_end_vRF4463SpiBufferTX
;driverspi.c, 61 :: 		if ( SPI1_CR1bits.SPE && SPI1_SRbits.TXE && ulSize > 0 ) { // la transmision anterior termino?
L__vRF4463SpiBufferTX384:
L__vRF4463SpiBufferTX383:
L__vRF4463SpiBufferTX382:
;driverspi.c, 80 :: 		return 0;
0x01E2	0x2000    MOVS	R0, #0
;driverspi.c, 81 :: 		}
L_end_vRF4463SpiBufferTX:
0x01E4	0xB001    ADD	SP, SP, #4
0x01E6	0xBD00    POP	(R15)
0x01E8	0x00084002  	DMA_CCR1bits+0
0x01EC	0x30084001  	SPI1_SRbits+0
0x01F0	0x30004001  	SPI1_CR1bits+0
0x01F4	0x00144002  	DMA_CMAR1+0
0x01F8	0x000C4002  	DMA_CNDTR1+0
0x01FC	0x18000000  	#6144
; end of _vRF4463SpiBufferTX
_vRF4463Init:
;driverrf4463pro.c, 37 :: 		void vRF4463Init ( void ) {  // MODE,
0x24F8	0xB500    PUSH	(R14)
0x24FA	0xB085    SUB	SP, SP, #20
;driverrf4463pro.c, 40 :: 		for ( i = 4; i < 16; i++ ) {
; i start address is: 16 (R4)
0x24FC	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init36:
; i start address is: 16 (R4)
0x24FE	0x2C10    CMP	R4, #16
0x2500	0xD210    BCS	L_vRF4463Init37
;driverrf4463pro.c, 41 :: 		RF_MODEM_MOD_TYPE_12_data[ i ] = RF_MODEM_MOD_TYPE_12[ ucRF4463Rate ][ i - 4 ];
0x2502	0x48AF    LDR	R0, [PC, #700]
0x2504	0x1903    ADDS	R3, R0, R4
0x2506	0x48AF    LDR	R0, [PC, #700]
0x2508	0x7802    LDRB	R2, [R0, #0]
0x250A	0x200C    MOVS	R0, #12
0x250C	0x4611    MOV	R1, R2
0x250E	0x4341    MULS	R1, R0, R1
0x2510	0x48AD    LDR	R0, [PC, #692]
0x2512	0x1841    ADDS	R1, R0, R1
0x2514	0x1F20    SUBS	R0, R4, #4
0x2516	0xB200    SXTH	R0, R0
0x2518	0x1808    ADDS	R0, R1, R0
0x251A	0x7800    LDRB	R0, [R0, #0]
0x251C	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 40 :: 		for ( i = 4; i < 16; i++ ) {
0x251E	0x3401    ADDS	R4, #1
0x2520	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 42 :: 		}
; i end address is: 16 (R4)
0x2522	0xE7EC    B	L_vRF4463Init36
L_vRF4463Init37:
;driverrf4463pro.c, 45 :: 		if ( ucRF4463Freq3 < 8 ) {
0x2524	0x48A9    LDR	R0, [PC, #676]
0x2526	0x7800    LDRB	R0, [R0, #0]
0x2528	0x2808    CMP	R0, #8
0x252A	0xD300    BCC	#0
0x252C	0xE09E    B	L_vRF4463Init39
;driverrf4463pro.c, 46 :: 		for ( i = 4; i < 12; i++ ) {
; i start address is: 12 (R3)
0x252E	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init40:
; i start address is: 12 (R3)
0x2530	0x2B0C    CMP	R3, #12
0x2532	0xD20E    BCS	L_vRF4463Init41
;driverrf4463pro.c, 47 :: 		RF_MODEM_TX_RAMP_DELAY_8_data[ i ] = RF_MODEM_TX_RAMP_DELAY_8_433[ ucRF4463Rate ][ i - 4 ];
0x2534	0x48A6    LDR	R0, [PC, #664]
0x2536	0x18C2    ADDS	R2, R0, R3
0x2538	0x48A2    LDR	R0, [PC, #648]
0x253A	0x7800    LDRB	R0, [R0, #0]
0x253C	0x00C1    LSLS	R1, R0, #3
0x253E	0x48A5    LDR	R0, [PC, #660]
0x2540	0x1841    ADDS	R1, R0, R1
0x2542	0x1F18    SUBS	R0, R3, #4
0x2544	0xB200    SXTH	R0, R0
0x2546	0x1808    ADDS	R0, R1, R0
0x2548	0x7800    LDRB	R0, [R0, #0]
0x254A	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 46 :: 		for ( i = 4; i < 12; i++ ) {
0x254C	0x3301    ADDS	R3, #1
0x254E	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 48 :: 		}
; i end address is: 12 (R3)
0x2550	0xE7EE    B	L_vRF4463Init40
L_vRF4463Init41:
;driverrf4463pro.c, 49 :: 		for ( i = 4; i < 11; i++ ) {
; i start address is: 16 (R4)
0x2552	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init43:
; i start address is: 16 (R4)
0x2554	0x2C0B    CMP	R4, #11
0x2556	0xD210    BCS	L_vRF4463Init44
;driverrf4463pro.c, 50 :: 		RF_MODEM_AFC_GEAR_7_data[ i ] = RF_MODEM_AFC_GEAR_7_433[ ucRF4463Rate ][ i - 4 ];
0x2558	0x489F    LDR	R0, [PC, #636]
0x255A	0x1903    ADDS	R3, R0, R4
0x255C	0x4899    LDR	R0, [PC, #612]
0x255E	0x7802    LDRB	R2, [R0, #0]
0x2560	0x2007    MOVS	R0, #7
0x2562	0x4611    MOV	R1, R2
0x2564	0x4341    MULS	R1, R0, R1
0x2566	0x489D    LDR	R0, [PC, #628]
0x2568	0x1841    ADDS	R1, R0, R1
0x256A	0x1F20    SUBS	R0, R4, #4
0x256C	0xB200    SXTH	R0, R0
0x256E	0x1808    ADDS	R0, R1, R0
0x2570	0x7800    LDRB	R0, [R0, #0]
0x2572	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 49 :: 		for ( i = 4; i < 11; i++ ) {
0x2574	0x3401    ADDS	R4, #1
0x2576	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 51 :: 		}
; i end address is: 16 (R4)
0x2578	0xE7EC    B	L_vRF4463Init43
L_vRF4463Init44:
;driverrf4463pro.c, 52 :: 		for ( i = 4; i < 15; i++ ) {
; i start address is: 16 (R4)
0x257A	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init46:
; i start address is: 16 (R4)
0x257C	0x2C0F    CMP	R4, #15
0x257E	0xD210    BCS	L_vRF4463Init47
;driverrf4463pro.c, 53 :: 		RF_MODEM_OOK_CNT1_11_data[ i ] = RF_MODEM_OOK_CNT1_11_433[ ucRF4463Rate ][ i - 4 ];
0x2580	0x4897    LDR	R0, [PC, #604]
0x2582	0x1903    ADDS	R3, R0, R4
0x2584	0x488F    LDR	R0, [PC, #572]
0x2586	0x7802    LDRB	R2, [R0, #0]
0x2588	0x200B    MOVS	R0, #11
0x258A	0x4611    MOV	R1, R2
0x258C	0x4341    MULS	R1, R0, R1
0x258E	0x4895    LDR	R0, [PC, #596]
0x2590	0x1841    ADDS	R1, R0, R1
0x2592	0x1F20    SUBS	R0, R4, #4
0x2594	0xB200    SXTH	R0, R0
0x2596	0x1808    ADDS	R0, R1, R0
0x2598	0x7800    LDRB	R0, [R0, #0]
0x259A	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 52 :: 		for ( i = 4; i < 15; i++ ) {
0x259C	0x3401    ADDS	R4, #1
0x259E	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 54 :: 		}
; i end address is: 16 (R4)
0x25A0	0xE7EC    B	L_vRF4463Init46
L_vRF4463Init47:
;driverrf4463pro.c, 55 :: 		for ( i = 4; i < 16; i++ ) {
; i start address is: 16 (R4)
0x25A2	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init49:
; i start address is: 16 (R4)
0x25A4	0x2C10    CMP	R4, #16
0x25A6	0xD210    BCS	L_vRF4463Init50
;driverrf4463pro.c, 56 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x25A8	0x488F    LDR	R0, [PC, #572]
0x25AA	0x1903    ADDS	R3, R0, R4
0x25AC	0x4885    LDR	R0, [PC, #532]
0x25AE	0x7802    LDRB	R2, [R0, #0]
0x25B0	0x200C    MOVS	R0, #12
0x25B2	0x4611    MOV	R1, R2
0x25B4	0x4341    MULS	R1, R0, R1
0x25B6	0x488D    LDR	R0, [PC, #564]
0x25B8	0x1841    ADDS	R1, R0, R1
0x25BA	0x1F20    SUBS	R0, R4, #4
0x25BC	0xB200    SXTH	R0, R0
0x25BE	0x1808    ADDS	R0, R1, R0
0x25C0	0x7800    LDRB	R0, [R0, #0]
0x25C2	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 55 :: 		for ( i = 4; i < 16; i++ ) {
0x25C4	0x3401    ADDS	R4, #1
0x25C6	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 57 :: 		}
; i end address is: 16 (R4)
0x25C8	0xE7EC    B	L_vRF4463Init49
L_vRF4463Init50:
;driverrf4463pro.c, 58 :: 		for ( i = 4; i < 16; i++ ) {
; i start address is: 16 (R4)
0x25CA	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init52:
; i start address is: 16 (R4)
0x25CC	0x2C10    CMP	R4, #16
0x25CE	0xD210    BCS	L_vRF4463Init53
;driverrf4463pro.c, 59 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x25D0	0x4887    LDR	R0, [PC, #540]
0x25D2	0x1903    ADDS	R3, R0, R4
0x25D4	0x487B    LDR	R0, [PC, #492]
0x25D6	0x7802    LDRB	R2, [R0, #0]
0x25D8	0x200C    MOVS	R0, #12
0x25DA	0x4611    MOV	R1, R2
0x25DC	0x4341    MULS	R1, R0, R1
0x25DE	0x4885    LDR	R0, [PC, #532]
0x25E0	0x1841    ADDS	R1, R0, R1
0x25E2	0x1F20    SUBS	R0, R4, #4
0x25E4	0xB200    SXTH	R0, R0
0x25E6	0x1808    ADDS	R0, R1, R0
0x25E8	0x7800    LDRB	R0, [R0, #0]
0x25EA	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 58 :: 		for ( i = 4; i < 16; i++ ) {
0x25EC	0x3401    ADDS	R4, #1
0x25EE	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 60 :: 		}
; i end address is: 16 (R4)
0x25F0	0xE7EC    B	L_vRF4463Init52
L_vRF4463Init53:
;driverrf4463pro.c, 61 :: 		for ( i = 4; i < 16; i++ ) {
; i start address is: 16 (R4)
0x25F2	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init55:
; i start address is: 16 (R4)
0x25F4	0x2C10    CMP	R4, #16
0x25F6	0xD210    BCS	L_vRF4463Init56
;driverrf4463pro.c, 62 :: 		RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433[ ucRF4463Rate ][ i - 4 ];
0x25F8	0x487F    LDR	R0, [PC, #508]
0x25FA	0x1903    ADDS	R3, R0, R4
0x25FC	0x4871    LDR	R0, [PC, #452]
0x25FE	0x7802    LDRB	R2, [R0, #0]
0x2600	0x200C    MOVS	R0, #12
0x2602	0x4611    MOV	R1, R2
0x2604	0x4341    MULS	R1, R0, R1
0x2606	0x487D    LDR	R0, [PC, #500]
0x2608	0x1841    ADDS	R1, R0, R1
0x260A	0x1F20    SUBS	R0, R4, #4
0x260C	0xB200    SXTH	R0, R0
0x260E	0x1808    ADDS	R0, R1, R0
0x2610	0x7800    LDRB	R0, [R0, #0]
0x2612	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 61 :: 		for ( i = 4; i < 16; i++ ) {
0x2614	0x3401    ADDS	R4, #1
0x2616	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 63 :: 		}
; i end address is: 16 (R4)
0x2618	0xE7EC    B	L_vRF4463Init55
L_vRF4463Init56:
;driverrf4463pro.c, 64 :: 		for ( i = 4; i < 13; i++ ) {
; i start address is: 16 (R4)
0x261A	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init58:
; i start address is: 16 (R4)
0x261C	0x2C0D    CMP	R4, #13
0x261E	0xD210    BCS	L_vRF4463Init59
;driverrf4463pro.c, 65 :: 		RF_MODEM_AGC_WINDOW_SIZE_9_data[ i ] = RF_MODEM_AGC_WINDOW_SIZE_9_433[ ucRF4463Rate ][ i - 4 ];
0x2620	0x4877    LDR	R0, [PC, #476]
0x2622	0x1903    ADDS	R3, R0, R4
0x2624	0x4867    LDR	R0, [PC, #412]
0x2626	0x7802    LDRB	R2, [R0, #0]
0x2628	0x2009    MOVS	R0, #9
0x262A	0x4611    MOV	R1, R2
0x262C	0x4341    MULS	R1, R0, R1
0x262E	0x4875    LDR	R0, [PC, #468]
0x2630	0x1841    ADDS	R1, R0, R1
0x2632	0x1F20    SUBS	R0, R4, #4
0x2634	0xB200    SXTH	R0, R0
0x2636	0x1808    ADDS	R0, R1, R0
0x2638	0x7800    LDRB	R0, [R0, #0]
0x263A	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 64 :: 		for ( i = 4; i < 13; i++ ) {
0x263C	0x3401    ADDS	R4, #1
0x263E	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 66 :: 		}
; i end address is: 16 (R4)
0x2640	0xE7EC    B	L_vRF4463Init58
L_vRF4463Init59:
;driverrf4463pro.c, 67 :: 		for ( i = 4; i < 13; i++ ) {
; i start address is: 16 (R4)
0x2642	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init61:
; i start address is: 16 (R4)
0x2644	0x2C0D    CMP	R4, #13
0x2646	0xD210    BCS	L_vRF4463Init62
;driverrf4463pro.c, 68 :: 		RF_MODEM_BCR_OSR_1_9_data[ i ] = RF_MODEM_BCR_OSR_1_9_433[ ucRF4463Rate ][ i - 4 ];
0x2648	0x486F    LDR	R0, [PC, #444]
0x264A	0x1903    ADDS	R3, R0, R4
0x264C	0x485D    LDR	R0, [PC, #372]
0x264E	0x7802    LDRB	R2, [R0, #0]
0x2650	0x2009    MOVS	R0, #9
0x2652	0x4611    MOV	R1, R2
0x2654	0x4341    MULS	R1, R0, R1
0x2656	0x486D    LDR	R0, [PC, #436]
0x2658	0x1841    ADDS	R1, R0, R1
0x265A	0x1F20    SUBS	R0, R4, #4
0x265C	0xB200    SXTH	R0, R0
0x265E	0x1808    ADDS	R0, R1, R0
0x2660	0x7800    LDRB	R0, [R0, #0]
0x2662	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 67 :: 		for ( i = 4; i < 13; i++ ) {
0x2664	0x3401    ADDS	R4, #1
0x2666	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 69 :: 		}
; i end address is: 16 (R4)
0x2668	0xE7EC    B	L_vRF4463Init61
L_vRF4463Init62:
;driverrf4463pro.c, 70 :: 		}
0x266A	0xE09D    B	L_vRF4463Init64
L_vRF4463Init39:
;driverrf4463pro.c, 72 :: 		for ( i = 4; i < 12; i++ ) {
; i start address is: 12 (R3)
0x266C	0x2304    MOVS	R3, #4
; i end address is: 12 (R3)
L_vRF4463Init65:
; i start address is: 12 (R3)
0x266E	0x2B0C    CMP	R3, #12
0x2670	0xD20E    BCS	L_vRF4463Init66
;driverrf4463pro.c, 73 :: 		RF_MODEM_TX_RAMP_DELAY_8_data[ i ] = RF_MODEM_TX_RAMP_DELAY_8_850[ ucRF4463Rate ][ i - 4 ];
0x2672	0x4857    LDR	R0, [PC, #348]
0x2674	0x18C2    ADDS	R2, R0, R3
0x2676	0x4853    LDR	R0, [PC, #332]
0x2678	0x7800    LDRB	R0, [R0, #0]
0x267A	0x00C1    LSLS	R1, R0, #3
0x267C	0x4864    LDR	R0, [PC, #400]
0x267E	0x1841    ADDS	R1, R0, R1
0x2680	0x1F18    SUBS	R0, R3, #4
0x2682	0xB200    SXTH	R0, R0
0x2684	0x1808    ADDS	R0, R1, R0
0x2686	0x7800    LDRB	R0, [R0, #0]
0x2688	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 72 :: 		for ( i = 4; i < 12; i++ ) {
0x268A	0x3301    ADDS	R3, #1
0x268C	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 74 :: 		}
; i end address is: 12 (R3)
0x268E	0xE7EE    B	L_vRF4463Init65
L_vRF4463Init66:
;driverrf4463pro.c, 75 :: 		for ( i = 4; i < 11; i++ ) {
; i start address is: 16 (R4)
0x2690	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init68:
; i start address is: 16 (R4)
0x2692	0x2C0B    CMP	R4, #11
0x2694	0xD210    BCS	L_vRF4463Init69
;driverrf4463pro.c, 76 :: 		RF_MODEM_AFC_GEAR_7_data[ i ] = RF_MODEM_AFC_GEAR_7_850[ ucRF4463Rate ][ i - 4 ];
0x2696	0x4850    LDR	R0, [PC, #320]
0x2698	0x1903    ADDS	R3, R0, R4
0x269A	0x484A    LDR	R0, [PC, #296]
0x269C	0x7802    LDRB	R2, [R0, #0]
0x269E	0x2007    MOVS	R0, #7
0x26A0	0x4611    MOV	R1, R2
0x26A2	0x4341    MULS	R1, R0, R1
0x26A4	0x485B    LDR	R0, [PC, #364]
0x26A6	0x1841    ADDS	R1, R0, R1
0x26A8	0x1F20    SUBS	R0, R4, #4
0x26AA	0xB200    SXTH	R0, R0
0x26AC	0x1808    ADDS	R0, R1, R0
0x26AE	0x7800    LDRB	R0, [R0, #0]
0x26B0	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 75 :: 		for ( i = 4; i < 11; i++ ) {
0x26B2	0x3401    ADDS	R4, #1
0x26B4	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 77 :: 		}
; i end address is: 16 (R4)
0x26B6	0xE7EC    B	L_vRF4463Init68
L_vRF4463Init69:
;driverrf4463pro.c, 78 :: 		for ( i = 4; i < 15; i++ ) {
; i start address is: 16 (R4)
0x26B8	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init71:
; i start address is: 16 (R4)
0x26BA	0x2C0F    CMP	R4, #15
0x26BC	0xD210    BCS	L_vRF4463Init72
;driverrf4463pro.c, 79 :: 		RF_MODEM_OOK_CNT1_11_data[ i ] = RF_MODEM_OOK_CNT1_11_850[ ucRF4463Rate ][ i - 4 ];
0x26BE	0x4848    LDR	R0, [PC, #288]
0x26C0	0x1903    ADDS	R3, R0, R4
0x26C2	0x4840    LDR	R0, [PC, #256]
0x26C4	0x7802    LDRB	R2, [R0, #0]
0x26C6	0x200B    MOVS	R0, #11
0x26C8	0x4611    MOV	R1, R2
0x26CA	0x4341    MULS	R1, R0, R1
0x26CC	0x4852    LDR	R0, [PC, #328]
0x26CE	0x1841    ADDS	R1, R0, R1
0x26D0	0x1F20    SUBS	R0, R4, #4
0x26D2	0xB200    SXTH	R0, R0
0x26D4	0x1808    ADDS	R0, R1, R0
0x26D6	0x7800    LDRB	R0, [R0, #0]
0x26D8	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 78 :: 		for ( i = 4; i < 15; i++ ) {
0x26DA	0x3401    ADDS	R4, #1
0x26DC	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 80 :: 		}
; i end address is: 16 (R4)
0x26DE	0xE7EC    B	L_vRF4463Init71
L_vRF4463Init72:
;driverrf4463pro.c, 81 :: 		for ( i = 4; i < 16; i++ ) {
; i start address is: 16 (R4)
0x26E0	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init74:
; i start address is: 16 (R4)
0x26E2	0x2C10    CMP	R4, #16
0x26E4	0xD210    BCS	L_vRF4463Init75
;driverrf4463pro.c, 82 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x26E6	0x4840    LDR	R0, [PC, #256]
0x26E8	0x1903    ADDS	R3, R0, R4
0x26EA	0x4836    LDR	R0, [PC, #216]
0x26EC	0x7802    LDRB	R2, [R0, #0]
0x26EE	0x200C    MOVS	R0, #12
0x26F0	0x4611    MOV	R1, R2
0x26F2	0x4341    MULS	R1, R0, R1
0x26F4	0x4849    LDR	R0, [PC, #292]
0x26F6	0x1841    ADDS	R1, R0, R1
0x26F8	0x1F20    SUBS	R0, R4, #4
0x26FA	0xB200    SXTH	R0, R0
0x26FC	0x1808    ADDS	R0, R1, R0
0x26FE	0x7800    LDRB	R0, [R0, #0]
0x2700	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 81 :: 		for ( i = 4; i < 16; i++ ) {
0x2702	0x3401    ADDS	R4, #1
0x2704	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 83 :: 		}
; i end address is: 16 (R4)
0x2706	0xE7EC    B	L_vRF4463Init74
L_vRF4463Init75:
;driverrf4463pro.c, 84 :: 		for ( i = 4; i < 16; i++ ) {
; i start address is: 16 (R4)
0x2708	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init77:
; i start address is: 16 (R4)
0x270A	0x2C10    CMP	R4, #16
0x270C	0xD210    BCS	L_vRF4463Init78
;driverrf4463pro.c, 85 :: 		RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x270E	0x4838    LDR	R0, [PC, #224]
0x2710	0x1903    ADDS	R3, R0, R4
0x2712	0x482C    LDR	R0, [PC, #176]
0x2714	0x7802    LDRB	R2, [R0, #0]
0x2716	0x200C    MOVS	R0, #12
0x2718	0x4611    MOV	R1, R2
0x271A	0x4341    MULS	R1, R0, R1
0x271C	0x4840    LDR	R0, [PC, #256]
0x271E	0x1841    ADDS	R1, R0, R1
0x2720	0x1F20    SUBS	R0, R4, #4
0x2722	0xB200    SXTH	R0, R0
0x2724	0x1808    ADDS	R0, R1, R0
0x2726	0x7800    LDRB	R0, [R0, #0]
0x2728	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 84 :: 		for ( i = 4; i < 16; i++ ) {
0x272A	0x3401    ADDS	R4, #1
0x272C	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 86 :: 		}
; i end address is: 16 (R4)
0x272E	0xE7EC    B	L_vRF4463Init77
L_vRF4463Init78:
;driverrf4463pro.c, 87 :: 		for ( i = 4; i < 16; i++ ) {
; i start address is: 16 (R4)
0x2730	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init80:
; i start address is: 16 (R4)
0x2732	0x2C10    CMP	R4, #16
0x2734	0xD210    BCS	L_vRF4463Init81
;driverrf4463pro.c, 88 :: 		RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data[ i ] = RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850[ ucRF4463Rate ][ i - 4 ];
0x2736	0x4830    LDR	R0, [PC, #192]
0x2738	0x1903    ADDS	R3, R0, R4
0x273A	0x4822    LDR	R0, [PC, #136]
0x273C	0x7802    LDRB	R2, [R0, #0]
0x273E	0x200C    MOVS	R0, #12
0x2740	0x4611    MOV	R1, R2
0x2742	0x4341    MULS	R1, R0, R1
0x2744	0x4837    LDR	R0, [PC, #220]
0x2746	0x1841    ADDS	R1, R0, R1
0x2748	0x1F20    SUBS	R0, R4, #4
0x274A	0xB200    SXTH	R0, R0
0x274C	0x1808    ADDS	R0, R1, R0
0x274E	0x7800    LDRB	R0, [R0, #0]
0x2750	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 87 :: 		for ( i = 4; i < 16; i++ ) {
0x2752	0x3401    ADDS	R4, #1
0x2754	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 89 :: 		}
; i end address is: 16 (R4)
0x2756	0xE7EC    B	L_vRF4463Init80
L_vRF4463Init81:
;driverrf4463pro.c, 90 :: 		for ( i = 4; i < 13; i++ ) {
; i start address is: 16 (R4)
0x2758	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init83:
; i start address is: 16 (R4)
0x275A	0x2C0D    CMP	R4, #13
0x275C	0xD210    BCS	L_vRF4463Init84
;driverrf4463pro.c, 91 :: 		RF_MODEM_AGC_WINDOW_SIZE_9_data[ i ] = RF_MODEM_AGC_WINDOW_SIZE_9_850[ ucRF4463Rate ][ i - 4 ];
0x275E	0x4828    LDR	R0, [PC, #160]
0x2760	0x1903    ADDS	R3, R0, R4
0x2762	0x4818    LDR	R0, [PC, #96]
0x2764	0x7802    LDRB	R2, [R0, #0]
0x2766	0x2009    MOVS	R0, #9
0x2768	0x4611    MOV	R1, R2
0x276A	0x4341    MULS	R1, R0, R1
0x276C	0x482E    LDR	R0, [PC, #184]
0x276E	0x1841    ADDS	R1, R0, R1
0x2770	0x1F20    SUBS	R0, R4, #4
0x2772	0xB200    SXTH	R0, R0
0x2774	0x1808    ADDS	R0, R1, R0
0x2776	0x7800    LDRB	R0, [R0, #0]
0x2778	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 90 :: 		for ( i = 4; i < 13; i++ ) {
0x277A	0x3401    ADDS	R4, #1
0x277C	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 92 :: 		}
; i end address is: 16 (R4)
0x277E	0xE7EC    B	L_vRF4463Init83
L_vRF4463Init84:
;driverrf4463pro.c, 93 :: 		for ( i = 4; i < 13; i++ ) {
; i start address is: 16 (R4)
0x2780	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init86:
; i start address is: 16 (R4)
0x2782	0x2C0D    CMP	R4, #13
0x2784	0xD210    BCS	L_vRF4463Init87
;driverrf4463pro.c, 94 :: 		RF_MODEM_BCR_OSR_1_9_data[ i ] = RF_MODEM_BCR_OSR_1_9_850[ ucRF4463Rate ][ i - 4 ];
0x2786	0x4820    LDR	R0, [PC, #128]
0x2788	0x1903    ADDS	R3, R0, R4
0x278A	0x480E    LDR	R0, [PC, #56]
0x278C	0x7802    LDRB	R2, [R0, #0]
0x278E	0x2009    MOVS	R0, #9
0x2790	0x4611    MOV	R1, R2
0x2792	0x4341    MULS	R1, R0, R1
0x2794	0x4825    LDR	R0, [PC, #148]
0x2796	0x1841    ADDS	R1, R0, R1
0x2798	0x1F20    SUBS	R0, R4, #4
0x279A	0xB200    SXTH	R0, R0
0x279C	0x1808    ADDS	R0, R1, R0
0x279E	0x7800    LDRB	R0, [R0, #0]
0x27A0	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 93 :: 		for ( i = 4; i < 13; i++ ) {
0x27A2	0x3401    ADDS	R4, #1
0x27A4	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 95 :: 		}
; i end address is: 16 (R4)
0x27A6	0xE7EC    B	L_vRF4463Init86
L_vRF4463Init87:
;driverrf4463pro.c, 96 :: 		}
L_vRF4463Init64:
;driverrf4463pro.c, 97 :: 		for ( i = 4; i < 11; i++ ) {
; i start address is: 16 (R4)
0x27A8	0x2404    MOVS	R4, #4
; i end address is: 16 (R4)
L_vRF4463Init89:
; i start address is: 16 (R4)
0x27AA	0x2C0B    CMP	R4, #11
0x27AC	0xD24C    BCS	L_vRF4463Init90
;driverrf4463pro.c, 98 :: 		RF_SYNTH_PFDCP_CPFF_7_data[ i ] = RF_SYNTH_PFDCP_CPFF_7[ ucRF4463Rate ][ i - 4 ];
0x27AE	0x4820    LDR	R0, [PC, #128]
0x27B0	0x1903    ADDS	R3, R0, R4
0x27B2	0x4804    LDR	R0, [PC, #16]
0x27B4	0x7802    LDRB	R2, [R0, #0]
0x27B6	0x2007    MOVS	R0, #7
0x27B8	0x4611    MOV	R1, R2
0x27BA	0x4341    MULS	R1, R0, R1
0x27BC	0xE03A    B	#116
0x27BE	0xBF00    NOP
0x27C0	0x22042000  	_RF_MODEM_MOD_TYPE_12_data+0
0x27C4	0x22962000  	_ucRF4463Rate+0
0x27C8	0x593E0000  	_RF_MODEM_MOD_TYPE_12+0
0x27CC	0x22932000  	_ucRF4463Freq3+0
0x27D0	0x22142000  	_RF_MODEM_TX_RAMP_DELAY_8_data+0
0x27D4	0x5D0C0000  	_RF_MODEM_TX_RAMP_DELAY_8_433+0
0x27D8	0x22202000  	_RF_MODEM_AFC_GEAR_7_data+0
0x27DC	0x5E090000  	_RF_MODEM_AFC_GEAR_7_433+0
0x27E0	0x222D2000  	_RF_MODEM_OOK_CNT1_11_data+0
0x27E4	0x5A3B0000  	_RF_MODEM_OOK_CNT1_11_433+0
0x27E8	0x223C2000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+0
0x27EC	0x572E0000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+0
0x27F0	0x224C2000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x27F4	0x56AA0000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+0
0x27F8	0x225C2000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x27FC	0x56260000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+0
0x2800	0x226C2000  	_RF_MODEM_AGC_WINDOW_SIZE_9_data+0
0x2804	0x5BE60000  	_RF_MODEM_AGC_WINDOW_SIZE_9_433+0
0x2808	0x22792000  	_RF_MODEM_BCR_OSR_1_9_data+0
0x280C	0x5C490000  	_RF_MODEM_BCR_OSR_1_9_433+0
0x2810	0x5D640000  	_RF_MODEM_TX_RAMP_DELAY_8_850+0
0x2814	0x5E560000  	_RF_MODEM_AFC_GEAR_7_850+0
0x2818	0x59C20000  	_RF_MODEM_OOK_CNT1_11_850+0
0x281C	0x58BA0000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+0
0x2820	0x58360000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+0
0x2824	0x57B20000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+0
0x2828	0x5B830000  	_RF_MODEM_AGC_WINDOW_SIZE_9_850+0
0x282C	0x5B200000  	_RF_MODEM_BCR_OSR_1_9_850+0
0x2830	0x22862000  	_RF_SYNTH_PFDCP_CPFF_7_data+0
0x2834	0x48E3    LDR	R0, [PC, #908]
0x2836	0x1841    ADDS	R1, R0, R1
0x2838	0x1F20    SUBS	R0, R4, #4
0x283A	0xB200    SXTH	R0, R0
0x283C	0x1808    ADDS	R0, R1, R0
0x283E	0x7800    LDRB	R0, [R0, #0]
0x2840	0x7018    STRB	R0, [R3, #0]
;driverrf4463pro.c, 97 :: 		for ( i = 4; i < 11; i++ ) {
0x2842	0x3401    ADDS	R4, #1
0x2844	0xB2E4    UXTB	R4, R4
;driverrf4463pro.c, 99 :: 		}
; i end address is: 16 (R4)
0x2846	0xE7B0    B	L_vRF4463Init89
L_vRF4463Init90:
;driverrf4463pro.c, 103 :: 		vRF4463GPIO_SET( ucRF4463Mode );                              // PARAMETRO CONFIGURABLE
0x2848	0x48DF    LDR	R0, [PC, #892]
0x284A	0x7800    LDRB	R0, [R0, #0]
0x284C	0xF7FFF94E  BL	_vRF4463GPIO_SET+0
;driverrf4463pro.c, 106 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x2850	0x466A    MOV	R2, SP
0x2852	0x2011    MOVS	R0, #17
0x2854	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 107 :: 		app_command_buf[ 1 ] = 0x00;    // 0x0000
0x2856	0x1C51    ADDS	R1, R2, #1
0x2858	0x2000    MOVS	R0, #0
0x285A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 108 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1 Parameters
0x285C	0x1C91    ADDS	R1, R2, #2
0x285E	0x2001    MOVS	R0, #1
0x2860	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 109 :: 		app_command_buf[ 3 ] = 0x00;    // 0x0000
0x2862	0x1CD1    ADDS	R1, R2, #3
0x2864	0x2000    MOVS	R0, #0
0x2866	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 110 :: 		app_command_buf[ 4 ] = 98;      // freq  adjustment    ( rango desde 0 - 127 Low cap - High Cap )
0x2868	0x1D11    ADDS	R1, R2, #4
0x286A	0x2062    MOVS	R0, #98
0x286C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 111 :: 		spi_write( 5, app_command_buf );
0x286E	0x4611    MOV	R1, R2
0x2870	0x2005    MOVS	R0, #5
0x2872	0xF7FFF97F  BL	_spi_write+0
;driverrf4463pro.c, 114 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x2876	0x466A    MOV	R2, SP
0x2878	0x2011    MOVS	R0, #17
0x287A	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 115 :: 		app_command_buf[ 1 ] = 0x00;    // 0x0003
0x287C	0x1C51    ADDS	R1, R2, #1
0x287E	0x2000    MOVS	R0, #0
0x2880	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 116 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1 Parameters
0x2882	0x1C91    ADDS	R1, R2, #2
0x2884	0x2001    MOVS	R0, #1
0x2886	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 117 :: 		app_command_buf[ 3 ] = 0x03;    // 0x0003
0x2888	0x1CD1    ADDS	R1, R2, #3
0x288A	0x2003    MOVS	R0, #3
0x288C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 118 :: 		app_command_buf[ 4 ] = 0x40;    // tx = rx = 64 byte, ordinary PH,high performance mode  ?????????????????????
0x288E	0x1D11    ADDS	R1, R2, #4
0x2890	0x2040    MOVS	R0, #64
0x2892	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 119 :: 		spi_write( 5, app_command_buf );
0x2894	0x4611    MOV	R1, R2
0x2896	0x2005    MOVS	R0, #5
0x2898	0xF7FFF96C  BL	_spi_write+0
;driverrf4463pro.c, 123 :: 		spi_write( 0x08, RF_FRR_CTL_A_MODE_4_data );    // disable all fast response register
0x289C	0x49CB    LDR	R1, [PC, #812]
0x289E	0x2008    MOVS	R0, #8
0x28A0	0xF7FFF968  BL	_spi_write+0
;driverrf4463pro.c, 126 :: 		app_command_buf[ 0 ] = 0x11;    // SET PROPERTY
0x28A4	0x466A    MOV	R2, SP
0x28A6	0x2011    MOVS	R0, #17
0x28A8	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 127 :: 		app_command_buf[ 1 ] = 0x10;    // 0x1000
0x28AA	0x1C51    ADDS	R1, R2, #1
0x28AC	0x2010    MOVS	R0, #16
0x28AE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 128 :: 		app_command_buf[ 2 ] = 0x09;    // Total 9 Parameters
0x28B0	0x1C91    ADDS	R1, R2, #2
0x28B2	0x2009    MOVS	R0, #9
0x28B4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 129 :: 		app_command_buf[ 3 ] = 0x00;    // 0x1000
0x28B6	0x1CD1    ADDS	R1, R2, #3
0x28B8	0x2000    MOVS	R0, #0
0x28BA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 131 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x28BC	0x48C2    LDR	R0, [PC, #776]
0x28BE	0x7800    LDRB	R0, [R0, #0]
0x28C0	0x2802    CMP	R0, #2
0x28C2	0xD104    BNE	L_vRF4463Init92
;driverrf4463pro.c, 132 :: 		app_command_buf[ 4 ] = 0xff;     //  Need to send 255 bytes of Preamble
0x28C4	0x4668    MOV	R0, SP
0x28C6	0x1D01    ADDS	R1, R0, #4
0x28C8	0x20FF    MOVS	R0, #255
0x28CA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 133 :: 		}
0x28CC	0xE003    B	L_vRF4463Init93
L_vRF4463Init92:
;driverrf4463pro.c, 135 :: 		app_command_buf[ 4 ] = 0x08;   //  Need to send 8 bytes of Preamble
0x28CE	0x4668    MOV	R0, SP
0x28D0	0x1D01    ADDS	R1, R0, #4
0x28D2	0x2008    MOVS	R0, #8
0x28D4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 136 :: 		}
L_vRF4463Init93:
;driverrf4463pro.c, 139 :: 		app_command_buf[ 5 ]   = 0x14;       // To detect 20 bit sync word,
0x28D6	0x466A    MOV	R2, SP
0x28D8	0x1D51    ADDS	R1, R2, #5
0x28DA	0x2014    MOVS	R0, #20
0x28DC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 140 :: 		app_command_buf[ 6 ]   = 0x00;       // Non-standard preamble settings, useless
0x28DE	0x1D91    ADDS	R1, R2, #6
0x28E0	0x2000    MOVS	R0, #0
0x28E2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 141 :: 		app_command_buf[ 7 ]   = 0x0f;       // Time of the preamble Timeout   ????????????????????????????????????????????????????????????
0x28E4	0x1DD1    ADDS	R1, R2, #7
0x28E6	0x200F    MOVS	R0, #15
0x28E8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 142 :: 		app_command_buf[ 8 ]   = 0x31;       // The length of the preamble is   byte Calculation , 1st = 1 NO manchest  Encoding, using standard 1010.??
0x28EA	0x4611    MOV	R1, R2
0x28EC	0x3108    ADDS	R1, #8
0x28EE	0x2031    MOVS	R0, #49
0x28F0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 143 :: 		app_command_buf[ 9 ]   = 0x0;        // Non-standard Preamble Patten 4th byte
0x28F2	0x4611    MOV	R1, R2
0x28F4	0x3109    ADDS	R1, #9
0x28F6	0x2000    MOVS	R0, #0
0x28F8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 144 :: 		app_command_buf[ 10 ]  = 0x00;       // Non-standard Preamble Patten 3rd byte
0x28FA	0x4611    MOV	R1, R2
0x28FC	0x310A    ADDS	R1, #10
0x28FE	0x2000    MOVS	R0, #0
0x2900	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 145 :: 		app_command_buf[ 11 ]  = 0x00;       // Non-standard Preamble Patten 2nd byte
0x2902	0x4611    MOV	R1, R2
0x2904	0x310B    ADDS	R1, #11
0x2906	0x2000    MOVS	R0, #0
0x2908	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 146 :: 		app_command_buf[ 12 ]  = 0x00;       // Non-standard Preamble Patten 1st byte
0x290A	0x4611    MOV	R1, R2
0x290C	0x310C    ADDS	R1, #12
0x290E	0x2000    MOVS	R0, #0
0x2910	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 147 :: 		spi_write(13, app_command_buf);
0x2912	0x4611    MOV	R1, R2
0x2914	0x200D    MOVS	R0, #13
0x2916	0xF7FFF92D  BL	_spi_write+0
;driverrf4463pro.c, 150 :: 		app_command_buf[ 0 ] = 0x11;         // SET PROPERTY
0x291A	0x466A    MOV	R2, SP
0x291C	0x2011    MOVS	R0, #17
0x291E	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 151 :: 		app_command_buf[ 1 ] = 0x11;         // command = 0x1100
0x2920	0x1C51    ADDS	R1, R2, #1
0x2922	0x2011    MOVS	R0, #17
0x2924	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 152 :: 		app_command_buf[ 2 ] = 0x05;         // Total 5 Parameters
0x2926	0x1C91    ADDS	R1, R2, #2
0x2928	0x2005    MOVS	R0, #5
0x292A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 153 :: 		app_command_buf[ 3 ] = 0x00;         // command = 0x1100
0x292C	0x1CD1    ADDS	R1, R2, #3
0x292E	0x2000    MOVS	R0, #0
0x2930	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 154 :: 		app_command_buf[ 4 ] = 0x01;         // The synchronization word is defined and sent in the length field, and the synchronization word cannot be wrong,Not 4FSK, not manchest encoding, only 2 bytes
0x2932	0x1D11    ADDS	R1, R2, #4
0x2934	0x2001    MOVS	R0, #1
0x2936	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 156 :: 		if ( ucRF4463Mode == tx_test_mode ) {
0x2938	0x48A3    LDR	R0, [PC, #652]
0x293A	0x7800    LDRB	R0, [R0, #0]
0x293C	0x2802    CMP	R0, #2
0x293E	0xD107    BNE	L_vRF4463Init94
;driverrf4463pro.c, 157 :: 		app_command_buf[ 5 ] = 0x55;      // Sync word 3
0x2940	0x466A    MOV	R2, SP
0x2942	0x1D51    ADDS	R1, R2, #5
0x2944	0x2055    MOVS	R0, #85
0x2946	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 158 :: 		app_command_buf[ 6 ] = 0x55;      // Sync word 2
0x2948	0x1D91    ADDS	R1, R2, #6
0x294A	0x2055    MOVS	R0, #85
0x294C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 159 :: 		}
0x294E	0xE006    B	L_vRF4463Init95
L_vRF4463Init94:
;driverrf4463pro.c, 161 :: 		app_command_buf[ 5 ] = 0x2d;    // Sync word 3
0x2950	0x466A    MOV	R2, SP
0x2952	0x1D51    ADDS	R1, R2, #5
0x2954	0x202D    MOVS	R0, #45
0x2956	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 162 :: 		app_command_buf[ 6 ] = 0xd4;    // Sync word 2
0x2958	0x1D91    ADDS	R1, R2, #6
0x295A	0x20D4    MOVS	R0, #212
0x295C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 163 :: 		}
L_vRF4463Init95:
;driverrf4463pro.c, 165 :: 		app_command_buf[ 7 ] =  0x00;        // Sync word 1
0x295E	0x466A    MOV	R2, SP
0x2960	0x1DD1    ADDS	R1, R2, #7
0x2962	0x2000    MOVS	R0, #0
0x2964	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 166 :: 		app_command_buf[ 8 ] = 0x00;         // Sync word 0
0x2966	0x4611    MOV	R1, R2
0x2968	0x3108    ADDS	R1, #8
0x296A	0x2000    MOVS	R0, #0
0x296C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 167 :: 		spi_write( 9, app_command_buf );
0x296E	0x4611    MOV	R1, R2
0x2970	0x2009    MOVS	R0, #9
0x2972	0xF7FFF8FF  BL	_spi_write+0
;driverrf4463pro.c, 170 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x2976	0x466A    MOV	R2, SP
0x2978	0x2011    MOVS	R0, #17
0x297A	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 171 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1200
0x297C	0x1C51    ADDS	R1, R2, #1
0x297E	0x2012    MOVS	R0, #18
0x2980	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 172 :: 		app_command_buf[ 2 ] = 0x01;        // Total 1 Parameters
0x2982	0x1C91    ADDS	R1, R2, #2
0x2984	0x2001    MOVS	R0, #1
0x2986	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 173 :: 		app_command_buf[ 3 ] = 0x00;        // command = 0x1200
0x2988	0x1CD1    ADDS	R1, R2, #3
0x298A	0x2000    MOVS	R0, #0
0x298C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 174 :: 		app_command_buf[ 4 ] = 0x85;        // 1?cRC ??,CRC = itu-c, enable crc   ( original 0x81; )
0x298E	0x1D11    ADDS	R1, R2, #4
0x2990	0x2085    MOVS	R0, #133
0x2992	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 175 :: 		spi_write( 5, app_command_buf );
0x2994	0x4611    MOV	R1, R2
0x2996	0x2005    MOVS	R0, #5
0x2998	0xF7FFF8EC  BL	_spi_write+0
;driverrf4463pro.c, 178 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x299C	0x466A    MOV	R2, SP
0x299E	0x2011    MOVS	R0, #17
0x29A0	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 179 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1206
0x29A2	0x1C51    ADDS	R1, R2, #1
0x29A4	0x2012    MOVS	R0, #18
0x29A6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 180 :: 		app_command_buf[ 2 ] = 0x01;        // Total 1Parameters
0x29A8	0x1C91    ADDS	R1, R2, #2
0x29AA	0x2001    MOVS	R0, #1
0x29AC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 181 :: 		app_command_buf[ 3 ] = 0x06;        // command = 0x1206
0x29AE	0x1CD1    ADDS	R1, R2, #3
0x29B0	0x2006    MOVS	R0, #6
0x29B2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 182 :: 		app_command_buf[ 4 ] = 0x02;        //  tx = rx = 120d--1220 (tx packet,ph enable, not 4fsk, After receiving a packet of data,RX off,CRC Do not flip ,CRC MSB, data MSB
0x29B4	0x1D11    ADDS	R1, R2, #4
0x29B6	0x2002    MOVS	R0, #2
0x29B8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 183 :: 		spi_write( 5, app_command_buf );
0x29BA	0x4611    MOV	R1, R2
0x29BC	0x2005    MOVS	R0, #5
0x29BE	0xF7FFF8D9  BL	_spi_write+0
;driverrf4463pro.c, 186 :: 		app_command_buf[ 0 ] = 0x11;        // SET PROPERTY
0x29C2	0x466A    MOV	R2, SP
0x29C4	0x2011    MOVS	R0, #17
0x29C6	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 187 :: 		app_command_buf[ 1 ] = 0x12;        // command = 0x1208
0x29C8	0x1C51    ADDS	R1, R2, #1
0x29CA	0x2012    MOVS	R0, #18
0x29CC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 188 :: 		app_command_buf[ 2 ] = 0x03;        // Total 3 Parameters
0x29CE	0x1C91    ADDS	R1, R2, #2
0x29D0	0x2003    MOVS	R0, #3
0x29D2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 189 :: 		app_command_buf[ 3 ] = 0x08;        // command = 0x1208
0x29D4	0x1CD1    ADDS	R1, R2, #3
0x29D6	0x2008    MOVS	R0, #8
0x29D8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 190 :: 		app_command_buf[ 4 ] = 0x00;        // Length Field = LSB,  length Only 1 byte,length Not put In FiFo, fixed packet length mode
0x29DA	0x1D11    ADDS	R1, R2, #4
0x29DC	0x2000    MOVS	R0, #0
0x29DE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 191 :: 		app_command_buf[ 5 ] = 0x00;        // Used for variable packet length mode, which defines which Field contains length Filed
0x29E0	0x1D51    ADDS	R1, R2, #5
0x29E2	0x2000    MOVS	R0, #0
0x29E4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 192 :: 		app_command_buf[ 6 ] = 0x00;        // Used for variable packet length mode, adjust the length of variable packet length
0x29E6	0x1D91    ADDS	R1, R2, #6
0x29E8	0x2000    MOVS	R0, #0
0x29EA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 193 :: 		spi_write( 7, app_command_buf );
0x29EC	0x4611    MOV	R1, R2
0x29EE	0x2007    MOVS	R0, #7
0x29F0	0xF7FFF8C0  BL	_spi_write+0
;driverrf4463pro.c, 196 :: 		app_command_buf[ 0 ]  = 0x11;
0x29F4	0x466A    MOV	R2, SP
0x29F6	0x2011    MOVS	R0, #17
0x29F8	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 197 :: 		app_command_buf[ 1 ]  = 0x12;       // 0x120d
0x29FA	0x1C51    ADDS	R1, R2, #1
0x29FC	0x2012    MOVS	R0, #18
0x29FE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 198 :: 		app_command_buf[ 2 ]  = 0x0c;       // Total 12 Parameters
0x2A00	0x1C91    ADDS	R1, R2, #2
0x2A02	0x200C    MOVS	R0, #12
0x2A04	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 199 :: 		app_command_buf[ 3 ]  = 0x0d;       // 0x120d
0x2A06	0x1CD1    ADDS	R1, R2, #3
0x2A08	0x200D    MOVS	R0, #13
0x2A0A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 200 :: 		app_command_buf[ 4 ]  = 0x00;       //  Field 1 length (?4?)
0x2A0C	0x1D11    ADDS	R1, R2, #4
0x2A0E	0x2000    MOVS	R0, #0
0x2A10	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 201 :: 		app_command_buf[ 5 ]  = payload_length;   //  field 1 length, (? 8?), ?Total14???
0x2A12	0x1D51    ADDS	R1, R2, #5
0x2A14	0x2042    MOVS	R0, #66
0x2A16	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 202 :: 		app_command_buf[ 6 ]  = 0x04;       // field 1 Is not 4FSK,manchest, whiting, PN9,
0x2A18	0x1D91    ADDS	R1, R2, #6
0x2A1A	0x2004    MOVS	R0, #4
0x2A1C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 203 :: 		app_command_buf[ 7 ]  = 0xaa;       // field 1 crc enble, check enbale, There are also launchingCRC,cRC?Seed ?CRC_seed?????
0x2A1E	0x1DD1    ADDS	R1, R2, #7
0x2A20	0x20AA    MOVS	R0, #170
0x2A22	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 204 :: 		app_command_buf[ 8 ]  = 0x00;       //  field 2 length(?4?)
0x2A24	0x4611    MOV	R1, R2
0x2A26	0x3108    ADDS	R1, #8
0x2A28	0x2000    MOVS	R0, #0
0x2A2A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 205 :: 		app_command_buf[ 9 ]  = 0x00;           //  field 2 length, (? 8?), length = 0 Means thisfield did not use
0x2A2C	0x4611    MOV	R1, R2
0x2A2E	0x3109    ADDS	R1, #9
0x2A30	0x2000    MOVS	R0, #0
0x2A32	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 206 :: 		app_command_buf[ 10 ] = 0x00;       // field 2 Is not 4FSK,manchest, whiting, PN9
0x2A34	0x4611    MOV	R1, R2
0x2A36	0x310A    ADDS	R1, #10
0x2A38	0x2000    MOVS	R0, #0
0x2A3A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 207 :: 		app_command_buf[ 11 ] = 0x00;       //  field 2 ?CRCSet up
0x2A3C	0x4611    MOV	R1, R2
0x2A3E	0x310B    ADDS	R1, #11
0x2A40	0x2000    MOVS	R0, #0
0x2A42	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 208 :: 		app_command_buf[ 12 ] = 0x00;       //  field 3 length, (? 8?), length = 0 Means thisfield did not use
0x2A44	0x4611    MOV	R1, R2
0x2A46	0x310C    ADDS	R1, #12
0x2A48	0x2000    MOVS	R0, #0
0x2A4A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 209 :: 		app_command_buf[ 13 ] = 0x00;           //  field 3 length, (? 8?), length = 0 Means thisfield did not use
0x2A4C	0x4611    MOV	R1, R2
0x2A4E	0x310D    ADDS	R1, #13
0x2A50	0x2000    MOVS	R0, #0
0x2A52	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 210 :: 		app_command_buf[ 14 ] = 0x00;       //  field 3 Is not 4FSK,manchest, whiting, PN9
0x2A54	0x4611    MOV	R1, R2
0x2A56	0x310E    ADDS	R1, #14
0x2A58	0x2000    MOVS	R0, #0
0x2A5A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 211 :: 		app_command_buf[ 15 ] = 0x00;       //  field 3 ?CRCSet up
0x2A5C	0x4611    MOV	R1, R2
0x2A5E	0x310F    ADDS	R1, #15
0x2A60	0x2000    MOVS	R0, #0
0x2A62	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 212 :: 		spi_write( 16, app_command_buf );
0x2A64	0x4611    MOV	R1, R2
0x2A66	0x2010    MOVS	R0, #16
0x2A68	0xF7FFF884  BL	_spi_write+0
;driverrf4463pro.c, 215 :: 		app_command_buf[ 0 ]  = 0x11;
0x2A6C	0x466A    MOV	R2, SP
0x2A6E	0x2011    MOVS	R0, #17
0x2A70	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 216 :: 		app_command_buf[ 1 ]  = 0x12;       // 0x1219
0x2A72	0x1C51    ADDS	R1, R2, #1
0x2A74	0x2012    MOVS	R0, #18
0x2A76	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 217 :: 		app_command_buf[ 2 ]  = 0x08;       // Total 8Parameters
0x2A78	0x1C91    ADDS	R1, R2, #2
0x2A7A	0x2008    MOVS	R0, #8
0x2A7C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 218 :: 		app_command_buf[ 3 ]  = 0x19;       // 0x1219
0x2A7E	0x1CD1    ADDS	R1, R2, #3
0x2A80	0x2019    MOVS	R0, #25
0x2A82	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 219 :: 		app_command_buf[ 4 ]  = 0x00;       // field4 length(?4?)
0x2A84	0x1D11    ADDS	R1, R2, #4
0x2A86	0x2000    MOVS	R0, #0
0x2A88	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 220 :: 		app_command_buf[ 5 ]  = 0x00;       // field 4 length, (? 8?), length = 0 Means this field did not use
0x2A8A	0x1D51    ADDS	R1, R2, #5
0x2A8C	0x2000    MOVS	R0, #0
0x2A8E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 221 :: 		app_command_buf[ 6 ]  = 0x00;       // field 4 Is not 4FSK,manchest, whiting, PN9
0x2A90	0x1D91    ADDS	R1, R2, #6
0x2A92	0x2000    MOVS	R0, #0
0x2A94	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 222 :: 		app_command_buf[ 7 ]  = 0x00;       // field 4 ?CRCSet up
0x2A96	0x1DD1    ADDS	R1, R2, #7
0x2A98	0x2000    MOVS	R0, #0
0x2A9A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 223 :: 		app_command_buf[ 8 ]  = 0x00;       // field5 length(?4?)
0x2A9C	0x4611    MOV	R1, R2
0x2A9E	0x3108    ADDS	R1, #8
0x2AA0	0x2000    MOVS	R0, #0
0x2AA2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 224 :: 		app_command_buf[ 9 ]  = 0x00;       // field 5 length, (? 8?), length = 0 Means this field did not use
0x2AA4	0x4611    MOV	R1, R2
0x2AA6	0x3109    ADDS	R1, #9
0x2AA8	0x2000    MOVS	R0, #0
0x2AAA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 225 :: 		app_command_buf[ 10 ] = 0x00;       // field 5 Is not 4FSK,manchest, whiting, PN9
0x2AAC	0x4611    MOV	R1, R2
0x2AAE	0x310A    ADDS	R1, #10
0x2AB0	0x2000    MOVS	R0, #0
0x2AB2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 226 :: 		app_command_buf[ 11 ] = 0x00;       // field 5 ?CRCSet up
0x2AB4	0x4611    MOV	R1, R2
0x2AB6	0x310B    ADDS	R1, #11
0x2AB8	0x2000    MOVS	R0, #0
0x2ABA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 227 :: 		spi_write( 12, app_command_buf );
0x2ABC	0x4611    MOV	R1, R2
0x2ABE	0x200C    MOVS	R0, #12
0x2AC0	0xF7FFF858  BL	_spi_write+0
;driverrf4463pro.c, 230 :: 		spi_write( 0x10, RF_MODEM_MOD_TYPE_12_data );   // //  2FSK ,  module source = PH fifo, disable manchest, tx, rx Do not flip, deviation Do not flip
0x2AC4	0x4942    LDR	R1, [PC, #264]
0x2AC6	0x2010    MOVS	R0, #16
0x2AC8	0xF7FFF854  BL	_spi_write+0
;driverrf4463pro.c, 233 :: 		app_command_buf[0] = 0x11;
0x2ACC	0x466A    MOV	R2, SP
0x2ACE	0x2011    MOVS	R0, #17
0x2AD0	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 234 :: 		app_command_buf[1]  = 0x20;    // 0x200c
0x2AD2	0x1C51    ADDS	R1, R2, #1
0x2AD4	0x2020    MOVS	R0, #32
0x2AD6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 235 :: 		app_command_buf[2]  = 0x01;    // Total 1Parameters
0x2AD8	0x1C91    ADDS	R1, R2, #2
0x2ADA	0x2001    MOVS	R0, #1
0x2ADC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 236 :: 		app_command_buf[3]  = 0x0c;   // 0x200c
0x2ADE	0x1CD1    ADDS	R1, R2, #3
0x2AE0	0x200C    MOVS	R0, #12
0x2AE2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 238 :: 		if ( ucRF4463Freq3 < 8 ) {
0x2AE4	0x483B    LDR	R0, [PC, #236]
0x2AE6	0x7800    LDRB	R0, [R0, #0]
0x2AE8	0x2808    CMP	R0, #8
0x2AEA	0xD216    BCS	L_vRF4463Init96
;driverrf4463pro.c, 239 :: 		if ( ucRF4463Rate >= dr_256k ) {
0x2AEC	0x483A    LDR	R0, [PC, #232]
0x2AEE	0x7800    LDRB	R0, [R0, #0]
0x2AF0	0x2808    CMP	R0, #8
0x2AF2	0xD304    BCC	L_vRF4463Init97
;driverrf4463pro.c, 240 :: 		app_command_buf[ 4 ] = 0x4f;
0x2AF4	0x4668    MOV	R0, SP
0x2AF6	0x1D01    ADDS	R1, R0, #4
0x2AF8	0x204F    MOVS	R0, #79
0x2AFA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 241 :: 		}
0x2AFC	0xE00C    B	L_vRF4463Init98
L_vRF4463Init97:
;driverrf4463pro.c, 242 :: 		else if ( ucRF4463Rate >= dr_19p2 ) {
0x2AFE	0x4836    LDR	R0, [PC, #216]
0x2B00	0x7800    LDRB	R0, [R0, #0]
0x2B02	0x2804    CMP	R0, #4
0x2B04	0xD304    BCC	L_vRF4463Init99
;driverrf4463pro.c, 243 :: 		app_command_buf[ 4 ]  = 0x5e;
0x2B06	0x4668    MOV	R0, SP
0x2B08	0x1D01    ADDS	R1, R0, #4
0x2B0A	0x205E    MOVS	R0, #94
0x2B0C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 244 :: 		}
0x2B0E	0xE003    B	L_vRF4463Init100
L_vRF4463Init99:
;driverrf4463pro.c, 246 :: 		app_command_buf[ 4 ]  = 0xd2;
0x2B10	0x4668    MOV	R0, SP
0x2B12	0x1D01    ADDS	R1, R0, #4
0x2B14	0x20D2    MOVS	R0, #210
0x2B16	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 247 :: 		}
L_vRF4463Init100:
L_vRF4463Init98:
;driverrf4463pro.c, 248 :: 		}
0x2B18	0xE015    B	L_vRF4463Init101
L_vRF4463Init96:
;driverrf4463pro.c, 250 :: 		if ( ucRF4463Rate >= dr_115p2 ) {
0x2B1A	0x482F    LDR	R0, [PC, #188]
0x2B1C	0x7800    LDRB	R0, [R0, #0]
0x2B1E	0x2807    CMP	R0, #7
0x2B20	0xD304    BCC	L_vRF4463Init102
;driverrf4463pro.c, 251 :: 		app_command_buf[ 4 ]  = 0x69;        // 15k
0x2B22	0x4668    MOV	R0, SP
0x2B24	0x1D01    ADDS	R1, R0, #4
0x2B26	0x2069    MOVS	R0, #105
0x2B28	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 252 :: 		}
0x2B2A	0xE00C    B	L_vRF4463Init103
L_vRF4463Init102:
;driverrf4463pro.c, 253 :: 		else if ( ucRF4463Rate >= dr_19p2 ) {
0x2B2C	0x482A    LDR	R0, [PC, #168]
0x2B2E	0x7800    LDRB	R0, [R0, #0]
0x2B30	0x2804    CMP	R0, #4
0x2B32	0xD304    BCC	L_vRF4463Init104
;driverrf4463pro.c, 254 :: 		app_command_buf[ 4 ]  = 0x5e;        // 10k
0x2B34	0x4668    MOV	R0, SP
0x2B36	0x1D01    ADDS	R1, R0, #4
0x2B38	0x205E    MOVS	R0, #94
0x2B3A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 255 :: 		}
0x2B3C	0xE003    B	L_vRF4463Init105
L_vRF4463Init104:
;driverrf4463pro.c, 257 :: 		app_command_buf[ 4 ]  = 0x18; // 8k
0x2B3E	0x4668    MOV	R0, SP
0x2B40	0x1D01    ADDS	R1, R0, #4
0x2B42	0x2018    MOVS	R0, #24
0x2B44	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 258 :: 		}
L_vRF4463Init105:
L_vRF4463Init103:
;driverrf4463pro.c, 259 :: 		}
L_vRF4463Init101:
;driverrf4463pro.c, 260 :: 		spi_write( 5, app_command_buf );
0x2B46	0x4668    MOV	R0, SP
0x2B48	0x4601    MOV	R1, R0
0x2B4A	0x2005    MOVS	R0, #5
0x2B4C	0xF7FFF812  BL	_spi_write+0
;driverrf4463pro.c, 263 :: 		spi_write( 0x0C, RF_MODEM_TX_RAMP_DELAY_8_data );            // Without this Parameters,Not needed
0x2B50	0x4922    LDR	R1, [PC, #136]
0x2B52	0x200C    MOVS	R0, #12
0x2B54	0xF7FFF80E  BL	_spi_write+0
;driverrf4463pro.c, 264 :: 		spi_write( 0x0D, RF_MODEM_BCR_OSR_1_9_data );                // Without this Parameters,Not needed
0x2B58	0x4921    LDR	R1, [PC, #132]
0x2B5A	0x200D    MOVS	R0, #13
0x2B5C	0xF7FFF80A  BL	_spi_write+0
;driverrf4463pro.c, 265 :: 		spi_write( 0x0B, RF_MODEM_AFC_GEAR_7_data );                // Without this Parameters,Not needed
0x2B60	0x4920    LDR	R1, [PC, #128]
0x2B62	0x200B    MOVS	R0, #11
0x2B64	0xF7FFF806  BL	_spi_write+0
;driverrf4463pro.c, 266 :: 		spi_write( 0x05, RF_MODEM_AGC_CONTROL_1_data );                // Without this Parameters,Not needed
0x2B68	0x491F    LDR	R1, [PC, #124]
0x2B6A	0x2005    MOVS	R0, #5
0x2B6C	0xF7FFF802  BL	_spi_write+0
;driverrf4463pro.c, 267 :: 		spi_write( 0x0D, RF_MODEM_AGC_WINDOW_SIZE_9_data );        // Without this Parameters,Not needed
0x2B70	0x491E    LDR	R1, [PC, #120]
0x2B72	0x200D    MOVS	R0, #13
0x2B74	0xF7FEFFFE  BL	_spi_write+0
;driverrf4463pro.c, 268 :: 		spi_write( 0x0F, RF_MODEM_OOK_CNT1_11_data );                // Without this Parameters,Not needed
0x2B78	0x491D    LDR	R1, [PC, #116]
0x2B7A	0x200F    MOVS	R0, #15
0x2B7C	0xF7FEFFFA  BL	_spi_write+0
;driverrf4463pro.c, 271 :: 		app_command_buf[ 0 ] = 0x11;
0x2B80	0x466A    MOV	R2, SP
0x2B82	0x2011    MOVS	R0, #17
0x2B84	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 272 :: 		app_command_buf[ 1 ] = 0x20;    // 0x204e
0x2B86	0x1C51    ADDS	R1, R2, #1
0x2B88	0x2020    MOVS	R0, #32
0x2B8A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 273 :: 		app_command_buf[ 2 ] = 0x01;    // Total 1Parameters
0x2B8C	0x1C91    ADDS	R1, R2, #2
0x2B8E	0x2001    MOVS	R0, #1
0x2B90	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 274 :: 		app_command_buf[ 3 ] = 0x4e;   // 0x204e
0x2B92	0x1CD1    ADDS	R1, R2, #3
0x2B94	0x204E    MOVS	R0, #78
0x2B96	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 276 :: 		if ( ucRF4463Rate == dr_500 ) {
0x2B98	0x480F    LDR	R0, [PC, #60]
0x2B9A	0x7800    LDRB	R0, [R0, #0]
0x2B9C	0x280A    CMP	R0, #10
0x2B9E	0xD104    BNE	L_vRF4463Init106
;driverrf4463pro.c, 277 :: 		app_command_buf[ 4 ] = 0x3a;
0x2BA0	0x4668    MOV	R0, SP
0x2BA2	0x1D01    ADDS	R1, R0, #4
0x2BA4	0x203A    MOVS	R0, #58
0x2BA6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 278 :: 		}
0x2BA8	0xE003    B	L_vRF4463Init107
L_vRF4463Init106:
;driverrf4463pro.c, 280 :: 		app_command_buf[ 4 ] = 0x40;  //  rssi Reading deviation, the difference with the true value
0x2BAA	0x4668    MOV	R0, SP
0x2BAC	0x1D01    ADDS	R1, R0, #4
0x2BAE	0x2040    MOVS	R0, #64
0x2BB0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 281 :: 		}
L_vRF4463Init107:
;driverrf4463pro.c, 282 :: 		spi_write( 5, app_command_buf );
0x2BB2	0x4668    MOV	R0, SP
0x2BB4	0x4601    MOV	R1, R0
0x2BB6	0x2005    MOVS	R0, #5
0x2BB8	0xF7FEFFDC  BL	_spi_write+0
;driverrf4463pro.c, 285 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data );  // Without this Parameters,Not needed
0x2BBC	0x490D    LDR	R1, [PC, #52]
0x2BBE	0x2010    MOVS	R0, #16
0x2BC0	0xE01A    B	#52
0x2BC2	0xBF00    NOP
0x2BC4	0x5DBC0000  	_RF_SYNTH_PFDCP_CPFF_7+0
0x2BC8	0x22972000  	_ucRF4463Mode+0
0x2BCC	0x5F900000  	_RF_FRR_CTL_A_MODE_4_data+0
0x2BD0	0x22042000  	_RF_MODEM_MOD_TYPE_12_data+0
0x2BD4	0x22932000  	_ucRF4463Freq3+0
0x2BD8	0x22962000  	_ucRF4463Rate+0
0x2BDC	0x22142000  	_RF_MODEM_TX_RAMP_DELAY_8_data+0
0x2BE0	0x22792000  	_RF_MODEM_BCR_OSR_1_9_data+0
0x2BE4	0x22202000  	_RF_MODEM_AFC_GEAR_7_data+0
0x2BE8	0x5FA70000  	_RF_MODEM_AGC_CONTROL_1_data+0
0x2BEC	0x226C2000  	_RF_MODEM_AGC_WINDOW_SIZE_9_data+0
0x2BF0	0x222D2000  	_RF_MODEM_OOK_CNT1_11_data+0
0x2BF4	0x223C2000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+0
0x2BF8	0xF7FEFFBC  BL	_spi_write+0
;driverrf4463pro.c, 286 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data );   // Without this Parameters,Not needed
0x2BFC	0x494E    LDR	R1, [PC, #312]
0x2BFE	0x2010    MOVS	R0, #16
0x2C00	0xF7FEFFB8  BL	_spi_write+0
;driverrf4463pro.c, 287 :: 		spi_write( 0x10, RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data );   // Without this Parameters,Not needed
0x2C04	0x494D    LDR	R1, [PC, #308]
0x2C06	0x2010    MOVS	R0, #16
0x2C08	0xF7FEFFB4  BL	_spi_write+0
;driverrf4463pro.c, 290 :: 		app_command_buf[ 0 ]  = 0x11;
0x2C0C	0x466A    MOV	R2, SP
0x2C0E	0x2011    MOVS	R0, #17
0x2C10	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 291 :: 		app_command_buf[ 1 ]  = 0x22;    // 0x2200
0x2C12	0x1C51    ADDS	R1, R2, #1
0x2C14	0x2022    MOVS	R0, #34
0x2C16	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 292 :: 		app_command_buf[ 2 ]  = 0x04;    // Total 4Parameters
0x2C18	0x1C91    ADDS	R1, R2, #2
0x2C1A	0x2004    MOVS	R0, #4
0x2C1C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 293 :: 		app_command_buf[ 3 ]  = 0x00;   // 0x2200
0x2C1E	0x1CD1    ADDS	R1, R2, #3
0x2C20	0x2000    MOVS	R0, #0
0x2C22	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 294 :: 		app_command_buf[ 4 ]  = 0x08;  //0x10;   //   PA mode  = default , ??Class E mode,?Is not Switch Current mode  ????????
0x2C24	0x1D11    ADDS	R1, R2, #4
0x2C26	0x2008    MOVS	R0, #8
0x2C28	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 296 :: 		if ( ucRF4463Power > 0 || ucRF4463Power < 127 ) {
0x2C2A	0x4845    LDR	R0, [PC, #276]
0x2C2C	0x7800    LDRB	R0, [R0, #0]
0x2C2E	0x2800    CMP	R0, #0
0x2C30	0xD804    BHI	L__vRF4463Init388
0x2C32	0x4843    LDR	R0, [PC, #268]
0x2C34	0x7800    LDRB	R0, [R0, #0]
0x2C36	0x287F    CMP	R0, #127
0x2C38	0xD300    BCC	L__vRF4463Init387
0x2C3A	0xE005    B	L_vRF4463Init110
L__vRF4463Init388:
L__vRF4463Init387:
;driverrf4463pro.c, 297 :: 		app_command_buf[ 5 ]  = ucRF4463Power;   //  Set to maximum power
0x2C3C	0x4668    MOV	R0, SP
0x2C3E	0x1D41    ADDS	R1, R0, #5
0x2C40	0x483F    LDR	R0, [PC, #252]
0x2C42	0x7800    LDRB	R0, [R0, #0]
0x2C44	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 298 :: 		}
0x2C46	0xE003    B	L_vRF4463Init111
L_vRF4463Init110:
;driverrf4463pro.c, 300 :: 		app_command_buf[ 5 ]  = 127;
0x2C48	0x4668    MOV	R0, SP
0x2C4A	0x1D41    ADDS	R1, R0, #5
0x2C4C	0x207F    MOVS	R0, #127
0x2C4E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 301 :: 		}
L_vRF4463Init111:
;driverrf4463pro.c, 303 :: 		app_command_buf[ 6 ] = 0x00; //???????? 0x00;   // CLK duty = 50%, other = Default
0x2C50	0x4668    MOV	R0, SP
0x2C52	0x1D81    ADDS	R1, R0, #6
0x2C54	0x2000    MOVS	R0, #0
0x2C56	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 305 :: 		if ( ( ucRF4463Rate <= dr_115p2 )||( ucRF4463Rate == dr_500 ) ) {
0x2C58	0x483A    LDR	R0, [PC, #232]
0x2C5A	0x7800    LDRB	R0, [R0, #0]
0x2C5C	0x2807    CMP	R0, #7
0x2C5E	0xD904    BLS	L__vRF4463Init390
0x2C60	0x4838    LDR	R0, [PC, #224]
0x2C62	0x7800    LDRB	R0, [R0, #0]
0x2C64	0x280A    CMP	R0, #10
0x2C66	0xD000    BEQ	L__vRF4463Init389
0x2C68	0xE004    B	L_vRF4463Init114
L__vRF4463Init390:
L__vRF4463Init389:
;driverrf4463pro.c, 306 :: 		app_command_buf[ 7 ]  = 0x3d;  // ???????? 0x5d;   // PA ramp time = default
0x2C6A	0x4668    MOV	R0, SP
0x2C6C	0x1DC1    ADDS	R1, R0, #7
0x2C6E	0x203D    MOVS	R0, #61
0x2C70	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 307 :: 		}
0x2C72	0xE003    B	L_vRF4463Init115
L_vRF4463Init114:
;driverrf4463pro.c, 309 :: 		app_command_buf[ 7 ]  = 0x5d;
0x2C74	0x4668    MOV	R0, SP
0x2C76	0x1DC1    ADDS	R1, R0, #7
0x2C78	0x205D    MOVS	R0, #93
0x2C7A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 310 :: 		}
L_vRF4463Init115:
;driverrf4463pro.c, 311 :: 		spi_write( 8, app_command_buf );
0x2C7C	0x4668    MOV	R0, SP
0x2C7E	0x4601    MOV	R1, R0
0x2C80	0x2008    MOVS	R0, #8
0x2C82	0xF7FEFF77  BL	_spi_write+0
;driverrf4463pro.c, 315 :: 		spi_write( 0x0B , RF_SYNTH_PFDCP_CPFF_7_data );      // Without this Parameters,Not needed
0x2C86	0x4930    LDR	R1, [PC, #192]
0x2C88	0x200B    MOVS	R0, #11
0x2C8A	0xF7FEFF73  BL	_spi_write+0
;driverrf4463pro.c, 318 :: 		if ( ucRF4463MatchEnabled ) {
0x2C8E	0x482F    LDR	R0, [PC, #188]
0x2C90	0x7800    LDRB	R0, [R0, #0]
0x2C92	0x2800    CMP	R0, #0
0x2C94	0xD04B    BEQ	L_vRF4463Init116
;driverrf4463pro.c, 319 :: 		app_command_buf[ 0 ]  = 0x11;               // SetProperty
0x2C96	0x466A    MOV	R2, SP
0x2C98	0x2011    MOVS	R0, #17
0x2C9A	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 320 :: 		app_command_buf[ 1 ]  = 0x30;               // 0x30 group
0x2C9C	0x1C51    ADDS	R1, R2, #1
0x2C9E	0x2030    MOVS	R0, #48
0x2CA0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 321 :: 		app_command_buf[ 2 ]  = 0x0c;               // Total 12 Parameters
0x2CA2	0x1C91    ADDS	R1, R2, #2
0x2CA4	0x200C    MOVS	R0, #12
0x2CA6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 322 :: 		app_command_buf[ 3 ]  = 0x00;               // 0x00 Index
0x2CA8	0x1CD1    ADDS	R1, R2, #3
0x2CAA	0x2000    MOVS	R0, #0
0x2CAC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 323 :: 		app_command_buf[ 4 ]  = ucRF4463ByteMatch1; // match 1 Value of
0x2CAE	0x1D11    ADDS	R1, R2, #4
0x2CB0	0x4827    LDR	R0, [PC, #156]
0x2CB2	0x7800    LDRB	R0, [R0, #0]
0x2CB4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 324 :: 		app_command_buf[ 5 ]  = ucRF4463ByteMask1;  // match 1 mask
0x2CB6	0x1D51    ADDS	R1, R2, #5
0x2CB8	0x4826    LDR	R0, [PC, #152]
0x2CBA	0x7800    LDRB	R0, [R0, #0]
0x2CBC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 325 :: 		app_command_buf[ 6 ]  = ucRF4463MatchEnableReg; //  0x40; // enable match 1, match 1 The distance between the value of and the synchronization word, 0 = match
0x2CBE	0x1D91    ADDS	R1, R2, #6
0x2CC0	0x4825    LDR	R0, [PC, #148]
0x2CC2	0x7800    LDRB	R0, [R0, #0]
0x2CC4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 326 :: 		app_command_buf[ 7 ]  = ucRF4463ByteMatch2; // match 2 Value of
0x2CC6	0x1DD1    ADDS	R1, R2, #7
0x2CC8	0x4824    LDR	R0, [PC, #144]
0x2CCA	0x7800    LDRB	R0, [R0, #0]
0x2CCC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 327 :: 		app_command_buf[ 8 ]  = ucRF4463ByteMask2;  // match 2 mask
0x2CCE	0x4611    MOV	R1, R2
0x2CD0	0x3108    ADDS	R1, #8
0x2CD2	0x4823    LDR	R0, [PC, #140]
0x2CD4	0x7800    LDRB	R0, [R0, #0]
0x2CD6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 328 :: 		app_command_buf[ 9 ]  = 0x01;               // enable match 2, match 2 The distance between the value of and the synchronization word  , and function
0x2CD8	0x4611    MOV	R1, R2
0x2CDA	0x3109    ADDS	R1, #9
0x2CDC	0x2001    MOVS	R0, #1
0x2CDE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 329 :: 		app_command_buf[ 10 ] = ucRF4463ByteMatch3; // match 3 Value of
0x2CE0	0x4611    MOV	R1, R2
0x2CE2	0x310A    ADDS	R1, #10
0x2CE4	0x481F    LDR	R0, [PC, #124]
0x2CE6	0x7800    LDRB	R0, [R0, #0]
0x2CE8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 330 :: 		app_command_buf[ 11 ] = ucRF4463ByteMask3;  // match 3 mask
0x2CEA	0x4611    MOV	R1, R2
0x2CEC	0x310B    ADDS	R1, #11
0x2CEE	0x481E    LDR	R0, [PC, #120]
0x2CF0	0x7800    LDRB	R0, [R0, #0]
0x2CF2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 331 :: 		app_command_buf[ 12 ] = 0x02;;              // enable match 3, match 3 The distance between the value of and the synchronization word    and function
0x2CF4	0x4611    MOV	R1, R2
0x2CF6	0x310C    ADDS	R1, #12
0x2CF8	0x2002    MOVS	R0, #2
0x2CFA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 332 :: 		app_command_buf[ 13 ] = ucRF4463ByteMatch4; // match 4 Value of
0x2CFC	0x4611    MOV	R1, R2
0x2CFE	0x310D    ADDS	R1, #13
0x2D00	0x481A    LDR	R0, [PC, #104]
0x2D02	0x7800    LDRB	R0, [R0, #0]
0x2D04	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 333 :: 		app_command_buf[ 14 ] = ucRF4463ByteMask4;  // match 4 mask
0x2D06	0x4611    MOV	R1, R2
0x2D08	0x310E    ADDS	R1, #14
0x2D0A	0x4819    LDR	R0, [PC, #100]
0x2D0C	0x7800    LDRB	R0, [R0, #0]
0x2D0E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 334 :: 		app_command_buf[ 15 ] = 0x03;               // enable match 4, match 4 The distance between the value of and the synchronization word    and function
0x2D10	0x4611    MOV	R1, R2
0x2D12	0x310F    ADDS	R1, #15
0x2D14	0x2003    MOVS	R0, #3
0x2D16	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 335 :: 		spi_write( 16, app_command_buf );
0x2D18	0x4611    MOV	R1, R2
0x2D1A	0x2010    MOVS	R0, #16
0x2D1C	0xF7FEFF2A  BL	_spi_write+0
;driverrf4463pro.c, 337 :: 		if ( ucRF4463MatchEnableReg == 0x00 ) {
0x2D20	0x480D    LDR	R0, [PC, #52]
0x2D22	0x7800    LDRB	R0, [R0, #0]
0x2D24	0x2800    CMP	R0, #0
0x2D26	0xD102    BNE	L_vRF4463Init117
;driverrf4463pro.c, 338 :: 		ucRF4463MatchEnabled = 0;                // deshabilita el Match
0x2D28	0x2100    MOVS	R1, #0
0x2D2A	0x4808    LDR	R0, [PC, #32]
0x2D2C	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 339 :: 		}
L_vRF4463Init117:
;driverrf4463pro.c, 340 :: 		}
L_vRF4463Init116:
;driverrf4463pro.c, 343 :: 		rf_init_freq();     // FUNCION DE FRECUENCIA ( REVISAR PARAMETROS )
0x2D2E	0xF7FEFDF7  BL	_rf_init_freq+0
;driverrf4463pro.c, 344 :: 		}
L_end_vRF4463Init:
0x2D32	0xB005    ADD	SP, SP, #20
0x2D34	0xBD00    POP	(R15)
0x2D36	0xBF00    NOP
0x2D38	0x224C2000  	_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x2D3C	0x225C2000  	_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x2D40	0x22922000  	_ucRF4463Power+0
0x2D44	0x22962000  	_ucRF4463Rate+0
0x2D48	0x22862000  	_RF_SYNTH_PFDCP_CPFF_7_data+0
0x2D4C	0x21802000  	_ucRF4463MatchEnabled+0
0x2D50	0x217F2000  	_ucRF4463ByteMatch1+0
0x2D54	0x21B42000  	_ucRF4463ByteMask1+0
0x2D58	0x21812000  	_ucRF4463MatchEnableReg+0
0x2D5C	0x218E2000  	_ucRF4463ByteMatch2+0
0x2D60	0x21C02000  	_ucRF4463ByteMask2+0
0x2D64	0x219B2000  	_ucRF4463ByteMatch3+0
0x2D68	0x21CC2000  	_ucRF4463ByteMask3+0
0x2D6C	0x21A82000  	_ucRF4463ByteMatch4+0
0x2D70	0x21D82000  	_ucRF4463ByteMask4+0
; end of _vRF4463Init
_vRF4463GPIO_SET:
;driverrf4463pro.c, 350 :: 		void vRF4463GPIO_SET( unsigned char ucData ) {
; ucData start address is: 0 (R0)
0x1AEC	0xB500    PUSH	(R14)
0x1AEE	0xB082    SUB	SP, SP, #8
; ucData end address is: 0 (R0)
; ucData start address is: 0 (R0)
;driverrf4463pro.c, 353 :: 		ucAppCommandBuf[0] = 0x13;     // gpio Set up
0x1AF0	0x466A    MOV	R2, SP
0x1AF2	0x2113    MOVS	R1, #19
0x1AF4	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 355 :: 		switch ( ucData ) {
0x1AF6	0xE01F    B	L_vRF4463GPIO_SET118
; ucData end address is: 0 (R0)
;driverrf4463pro.c, 356 :: 		case tx_normal:
L_vRF4463GPIO_SET120:
;driverrf4463pro.c, 357 :: 		case rx_normal: ucAppCommandBuf[ 1 ] = 3;                 // GPIO0=1
L_vRF4463GPIO_SET121:
0x1AF8	0x466B    MOV	R3, SP
0x1AFA	0x1C5A    ADDS	R2, R3, #1
0x1AFC	0x2103    MOVS	R1, #3
0x1AFE	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 358 :: 		ucAppCommandBuf[ 2 ] = 2;                // GPIO1=0
0x1B00	0x1C9A    ADDS	R2, R3, #2
0x1B02	0x2102    MOVS	R1, #2
0x1B04	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 359 :: 		break;
0x1B06	0xE021    B	L_vRF4463GPIO_SET119
;driverrf4463pro.c, 361 :: 		case tx_test:   ucAppCommandBuf[ 1 ] = 3;                 // GPIO0=1
L_vRF4463GPIO_SET122:
0x1B08	0x466B    MOV	R3, SP
0x1B0A	0x1C5A    ADDS	R2, R3, #1
0x1B0C	0x2103    MOVS	R1, #3
0x1B0E	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 362 :: 		ucAppCommandBuf[ 2 ] = 3;                // GPIO1=1
0x1B10	0x1C9A    ADDS	R2, R3, #2
0x1B12	0x2103    MOVS	R1, #3
0x1B14	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 363 :: 		break;
0x1B16	0xE019    B	L_vRF4463GPIO_SET119
;driverrf4463pro.c, 365 :: 		case rx_test:   ucAppCommandBuf[ 1 ] = 2;                 // GPIO0=0
L_vRF4463GPIO_SET123:
0x1B18	0x466B    MOV	R3, SP
0x1B1A	0x1C5A    ADDS	R2, R3, #1
0x1B1C	0x2102    MOVS	R1, #2
0x1B1E	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 366 :: 		ucAppCommandBuf[ 2 ] = 20;                // GPIO1=RX DATA
0x1B20	0x1C9A    ADDS	R2, R3, #2
0x1B22	0x2114    MOVS	R1, #20
0x1B24	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 367 :: 		break;
0x1B26	0xE011    B	L_vRF4463GPIO_SET119
;driverrf4463pro.c, 369 :: 		case rf_off:    ucAppCommandBuf[ 1 ] = 2;                 // GPIO0=0
L_vRF4463GPIO_SET124:
0x1B28	0x466B    MOV	R3, SP
0x1B2A	0x1C5A    ADDS	R2, R3, #1
0x1B2C	0x2102    MOVS	R1, #2
0x1B2E	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 370 :: 		ucAppCommandBuf[ 2 ] = 2;                // GPIO1=0
0x1B30	0x1C9A    ADDS	R2, R3, #2
0x1B32	0x2102    MOVS	R1, #2
0x1B34	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 371 :: 		break;
0x1B36	0xE009    B	L_vRF4463GPIO_SET119
;driverrf4463pro.c, 372 :: 		}
L_vRF4463GPIO_SET118:
; ucData start address is: 0 (R0)
0x1B38	0x2800    CMP	R0, #0
0x1B3A	0xD0DD    BEQ	L_vRF4463GPIO_SET120
0x1B3C	0x2801    CMP	R0, #1
0x1B3E	0xD0DB    BEQ	L_vRF4463GPIO_SET121
0x1B40	0x2802    CMP	R0, #2
0x1B42	0xD0E1    BEQ	L_vRF4463GPIO_SET122
0x1B44	0x2803    CMP	R0, #3
0x1B46	0xD0E7    BEQ	L_vRF4463GPIO_SET123
0x1B48	0x2804    CMP	R0, #4
0x1B4A	0xD0ED    BEQ	L_vRF4463GPIO_SET124
; ucData end address is: 0 (R0)
L_vRF4463GPIO_SET119:
;driverrf4463pro.c, 374 :: 		ucAppCommandBuf[ 3 ]  = 0x21;     //0x20;   //  gpio2, h = tx mode
0x1B4C	0x466B    MOV	R3, SP
0x1B4E	0x1CDA    ADDS	R2, R3, #3
0x1B50	0x2121    MOVS	R1, #33
0x1B52	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 375 :: 		ucAppCommandBuf[ 4 ]  = 0x20;     // 0x14;  //   gpio3
0x1B54	0x1D1A    ADDS	R2, R3, #4
0x1B56	0x2120    MOVS	R1, #32
0x1B58	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 376 :: 		ucAppCommandBuf[ 5 ]  = 0x27;     // nIRQ
0x1B5A	0x1D5A    ADDS	R2, R3, #5
0x1B5C	0x2127    MOVS	R1, #39
0x1B5E	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 377 :: 		ucAppCommandBuf[ 6 ]  = 0x0b;     // sdo
0x1B60	0x1D9A    ADDS	R2, R3, #6
0x1B62	0x210B    MOVS	R1, #11
0x1B64	0x7011    STRB	R1, [R2, #0]
;driverrf4463pro.c, 378 :: 		spi_write( 7, ucAppCommandBuf );
0x1B66	0x4619    MOV	R1, R3
0x1B68	0x2007    MOVS	R0, #7
0x1B6A	0xF000F803  BL	_spi_write+0
;driverrf4463pro.c, 379 :: 		}
L_end_vRF4463GPIO_SET:
0x1B6E	0xB002    ADD	SP, SP, #8
0x1B70	0xBD00    POP	(R15)
; end of _vRF4463GPIO_SET
_spi_write:
;driverrf4463pro.c, 719 :: 		void spi_write( unsigned char tx_length, unsigned char *p ) {
; i start address is: 0 (R0)
0x1B74	0xB500    PUSH	(R14)
0x1B76	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 722 :: 		i = 0;
;driverrf4463pro.c, 719 :: 		void spi_write( unsigned char tx_length, unsigned char *p ) {
0x1B78	0x9000    STR	R0, [SP, #0]
;driverrf4463pro.c, 722 :: 		i = 0;
;driverrf4463pro.c, 719 :: 		void spi_write( unsigned char tx_length, unsigned char *p ) {
0x1B7A	0x9101    STR	R1, [SP, #4]
; i end address is: 0 (R0)
;driverrf4463pro.c, 722 :: 		i = 0;
; i start address is: 0 (R0)
0x1B7C	0x2000    MOVS	R0, #0
; i end address is: 0 (R0)
;driverrf4463pro.c, 723 :: 		while ( i != 0xFF ) {
L_spi_write150:
; i start address is: 0 (R0)
0x1B7E	0x28FF    CMP	R0, #255
0x1B80	0xD002    BEQ	L_spi_write151
; i end address is: 0 (R0)
;driverrf4463pro.c, 724 :: 		i = check_cts();
0x1B82	0xF7FEFD7F  BL	_check_cts+0
; i start address is: 0 (R0)
;driverrf4463pro.c, 725 :: 		}
; i end address is: 0 (R0)
0x1B86	0xE7FA    B	L_spi_write150
L_spi_write151:
;driverrf4463pro.c, 727 :: 		nSEL = 0;                              // habilita escritura
0x1B88	0x4C0D    LDR	R4, [PC, #52]
0x1B8A	0x6822    LDR	R2, [R4, #0]
0x1B8C	0x2308    MOVS	R3, #8
0x1B8E	0x439A    BICS	R2, R3
0x1B90	0x6022    STR	R2, [R4, #0]
;driverrf4463pro.c, 729 :: 		for ( i = 0; i < tx_length; i++ ) {
; i start address is: 28 (R7)
0x1B92	0x2700    MOVS	R7, #0
; i end address is: 28 (R7)
0x1B94	0xB2FD    UXTB	R5, R7
L_spi_write152:
; i start address is: 20 (R5)
0x1B96	0x9A00    LDR	R2, [SP, #0]
0x1B98	0xB2D2    UXTB	R2, R2
0x1B9A	0x4295    CMP	R5, R2
0x1B9C	0xD208    BCS	L_spi_write153
;driverrf4463pro.c, 730 :: 		j = *( p + i );
0x1B9E	0x9A01    LDR	R2, [SP, #4]
0x1BA0	0x1952    ADDS	R2, R2, R5
;driverrf4463pro.c, 731 :: 		ucRf4463SPIByte( j );
0x1BA2	0x7810    LDRB	R0, [R2, #0]
0x1BA4	0xF7FEFC3E  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 729 :: 		for ( i = 0; i < tx_length; i++ ) {
0x1BA8	0x1C6A    ADDS	R2, R5, #1
; i end address is: 20 (R5)
; i start address is: 28 (R7)
0x1BAA	0xB2D7    UXTB	R7, R2
;driverrf4463pro.c, 732 :: 		}
0x1BAC	0xB2FD    UXTB	R5, R7
; i end address is: 28 (R7)
0x1BAE	0xE7F2    B	L_spi_write152
L_spi_write153:
;driverrf4463pro.c, 734 :: 		nSEL = 1;                              // desabilita escritura
0x1BB0	0x4C03    LDR	R4, [PC, #12]
0x1BB2	0x6822    LDR	R2, [R4, #0]
0x1BB4	0x2308    MOVS	R3, #8
0x1BB6	0x431A    ORRS	R2, R3
0x1BB8	0x6022    STR	R2, [R4, #0]
;driverrf4463pro.c, 735 :: 		}
L_end_spi_write:
0x1BBA	0xB002    ADD	SP, SP, #8
0x1BBC	0xBD00    POP	(R15)
0x1BBE	0xBF00    NOP
0x1BC0	0x00145000  	GPIOA_ODRbits+0
; end of _spi_write
_check_cts:
;driverrf4463pro.c, 740 :: 		unsigned char check_cts( void ) {           // This Command follows the Command and reads the response
0x0684	0xB500    PUSH	(R14)
;driverrf4463pro.c, 743 :: 		nSEL = 1;
0x0686	0x4A0B    LDR	R2, [PC, #44]
0x0688	0x6810    LDR	R0, [R2, #0]
0x068A	0x2108    MOVS	R1, #8
0x068C	0x4308    ORRS	R0, R1
0x068E	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 744 :: 		nSEL = 0;
0x0690	0x4A08    LDR	R2, [PC, #32]
0x0692	0x6810    LDR	R0, [R2, #0]
0x0694	0x2108    MOVS	R1, #8
0x0696	0x4388    BICS	R0, R1
0x0698	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 745 :: 		ucRf4463SPIByte( 0x44 );
0x069A	0x2044    MOVS	R0, #68
0x069C	0xF7FFFEC2  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 746 :: 		i = ucRf4463SPIByte( 0 );
0x06A0	0x2000    MOVS	R0, #0
0x06A2	0xF7FFFEBF  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 747 :: 		nSEL = 1;
0x06A6	0x4B03    LDR	R3, [PC, #12]
0x06A8	0x6819    LDR	R1, [R3, #0]
0x06AA	0x2208    MOVS	R2, #8
0x06AC	0x4311    ORRS	R1, R2
0x06AE	0x6019    STR	R1, [R3, #0]
;driverrf4463pro.c, 748 :: 		return ( i );
;driverrf4463pro.c, 749 :: 		}
L_end_check_cts:
0x06B0	0xBD00    POP	(R15)
0x06B2	0xBF00    NOP
0x06B4	0x00145000  	GPIOA_ODRbits+0
; end of _check_cts
_rf_init_freq:
;driverrf4463pro.c, 588 :: 		void rf_init_freq ( void ) {
0x1920	0xB500    PUSH	(R14)
0x1922	0xB089    SUB	SP, SP, #36
;driverrf4463pro.c, 594 :: 		ulFrequency = ( ucRF4463Freq3 * 100 ) + ( ucRF4463Freq2 * 10 ) + ucRF4463Freq1;
0x1924	0x4864    LDR	R0, [PC, #400]
0x1926	0x7801    LDRB	R1, [R0, #0]
0x1928	0x2064    MOVS	R0, #100
0x192A	0x4603    MOV	R3, R0
0x192C	0x434B    MULS	R3, R1, R3
0x192E	0xB21B    SXTH	R3, R3
0x1930	0x4862    LDR	R0, [PC, #392]
0x1932	0x7802    LDRB	R2, [R0, #0]
0x1934	0x210A    MOVS	R1, #10
0x1936	0x4608    MOV	R0, R1
0x1938	0x4350    MULS	R0, R2, R0
0x193A	0xB200    SXTH	R0, R0
0x193C	0x181A    ADDS	R2, R3, R0
0x193E	0x4860    LDR	R0, [PC, #384]
0x1940	0x7800    LDRB	R0, [R0, #0]
0x1942	0x1812    ADDS	R2, R2, R0
; ulFrequency start address is: 8 (R2)
0x1944	0xB212    SXTH	R2, R2
;driverrf4463pro.c, 596 :: 		ulFrequency = ( ulFrequency * 10000 );
0x1946	0x485F    LDR	R0, [PC, #380]
0x1948	0x4601    MOV	R1, R0
0x194A	0x4351    MULS	R1, R2, R1
0x194C	0x460A    MOV	R2, R1
;driverrf4463pro.c, 599 :: 		if ( ulFrequency >= 7600000 ) {
0x194E	0x485E    LDR	R0, [PC, #376]
0x1950	0x4281    CMP	R1, R0
0x1952	0xD303    BCC	L_rf_init_freq135
;driverrf4463pro.c, 600 :: 		ucOUTDIV = 4;
; ucOUTDIV start address is: 4 (R1)
0x1954	0x2104    MOVS	R1, #4
;driverrf4463pro.c, 601 :: 		ucBAND = 0;
; ucBAND start address is: 28 (R7)
0x1956	0x2700    MOVS	R7, #0
;driverrf4463pro.c, 602 :: 		ucVCO = 0xFF;
; ucVCO start address is: 24 (R6)
0x1958	0x26FF    MOVS	R6, #255
;driverrf4463pro.c, 603 :: 		}
; ucVCO end address is: 24 (R6)
; ucBAND end address is: 28 (R7)
; ucOUTDIV end address is: 4 (R1)
0x195A	0xE023    B	L_rf_init_freq136
L_rf_init_freq135:
;driverrf4463pro.c, 606 :: 		else if ( ulFrequency >= 5460000 ) {
0x195C	0x485B    LDR	R0, [PC, #364]
0x195E	0x4282    CMP	R2, R0
0x1960	0xD303    BCC	L_rf_init_freq137
;driverrf4463pro.c, 607 :: 		ucOUTDIV = 6;
; ucOUTDIV start address is: 4 (R1)
0x1962	0x2106    MOVS	R1, #6
;driverrf4463pro.c, 608 :: 		ucBAND   = 1;
; ucBAND start address is: 28 (R7)
0x1964	0x2701    MOVS	R7, #1
;driverrf4463pro.c, 609 :: 		ucVCO    = 0xFE;
; ucVCO start address is: 24 (R6)
0x1966	0x26FE    MOVS	R6, #254
;driverrf4463pro.c, 610 :: 		}
; ucVCO end address is: 24 (R6)
; ucBAND end address is: 28 (R7)
; ucOUTDIV end address is: 4 (R1)
0x1968	0xE01C    B	L_rf_init_freq138
L_rf_init_freq137:
;driverrf4463pro.c, 613 :: 		else if ( ulFrequency >= 3850000 ) {
0x196A	0x4859    LDR	R0, [PC, #356]
0x196C	0x4282    CMP	R2, R0
0x196E	0xD305    BCC	L_rf_init_freq139
;driverrf4463pro.c, 614 :: 		ucOUTDIV = 8;
; ucOUTDIV start address is: 0 (R0)
0x1970	0x2008    MOVS	R0, #8
;driverrf4463pro.c, 615 :: 		ucBAND   = 2;
; ucBAND start address is: 12 (R3)
0x1972	0x2302    MOVS	R3, #2
;driverrf4463pro.c, 616 :: 		ucVCO    = 0xFE;
; ucVCO start address is: 24 (R6)
0x1974	0x26FE    MOVS	R6, #254
;driverrf4463pro.c, 617 :: 		}
0x1976	0xB2C1    UXTB	R1, R0
; ucOUTDIV end address is: 0 (R0)
; ucBAND end address is: 12 (R3)
; ucVCO end address is: 24 (R6)
0x1978	0xB2DF    UXTB	R7, R3
0x197A	0xE013    B	L_rf_init_freq140
L_rf_init_freq139:
;driverrf4463pro.c, 620 :: 		else if ( ulFrequency >= 2730000 ) {
0x197C	0x4855    LDR	R0, [PC, #340]
0x197E	0x4282    CMP	R2, R0
0x1980	0xD304    BCC	L_rf_init_freq141
;driverrf4463pro.c, 621 :: 		ucOUTDIV = 12;
; ucOUTDIV start address is: 4 (R1)
0x1982	0x210C    MOVS	R1, #12
;driverrf4463pro.c, 622 :: 		ucBAND   = 3;
; ucBAND start address is: 12 (R3)
0x1984	0x2303    MOVS	R3, #3
;driverrf4463pro.c, 623 :: 		ucVCO    = 0xFD;
; ucVCO start address is: 0 (R0)
0x1986	0x20FD    MOVS	R0, #253
;driverrf4463pro.c, 624 :: 		}
0x1988	0xB2C6    UXTB	R6, R0
; ucVCO end address is: 0 (R0)
; ucBAND end address is: 12 (R3)
; ucOUTDIV end address is: 4 (R1)
0x198A	0xE00A    B	L_rf_init_freq142
L_rf_init_freq141:
;driverrf4463pro.c, 627 :: 		else if ( ulFrequency >= 1940000 ) {
0x198C	0x4852    LDR	R0, [PC, #328]
0x198E	0x4282    CMP	R2, R0
0x1990	0xD303    BCC	L_rf_init_freq143
;driverrf4463pro.c, 628 :: 		ucOUTDIV = 16;
; ucOUTDIV start address is: 4 (R1)
0x1992	0x2110    MOVS	R1, #16
;driverrf4463pro.c, 629 :: 		ucBAND   = 4;
; ucBAND start address is: 12 (R3)
0x1994	0x2304    MOVS	R3, #4
;driverrf4463pro.c, 630 :: 		ucVCO    = 0xFC;
; ucVCO start address is: 0 (R0)
0x1996	0x20FC    MOVS	R0, #252
;driverrf4463pro.c, 631 :: 		}
; ucVCO end address is: 0 (R0)
; ucBAND end address is: 12 (R3)
; ucOUTDIV end address is: 4 (R1)
0x1998	0xE002    B	L_rf_init_freq144
L_rf_init_freq143:
;driverrf4463pro.c, 635 :: 		ucOUTDIV = 24;
; ucOUTDIV start address is: 4 (R1)
0x199A	0x2118    MOVS	R1, #24
;driverrf4463pro.c, 636 :: 		ucBAND   = 5;
; ucBAND start address is: 12 (R3)
0x199C	0x2305    MOVS	R3, #5
;driverrf4463pro.c, 637 :: 		ucVCO    = 0xFA;
; ucVCO start address is: 0 (R0)
0x199E	0x20FA    MOVS	R0, #250
; ucVCO end address is: 0 (R0)
; ucBAND end address is: 12 (R3)
; ucOUTDIV end address is: 4 (R1)
;driverrf4463pro.c, 638 :: 		}
L_rf_init_freq144:
; ucVCO start address is: 0 (R0)
; ucBAND start address is: 12 (R3)
; ucOUTDIV start address is: 4 (R1)
0x19A0	0xB2C6    UXTB	R6, R0
; ucVCO end address is: 0 (R0)
; ucBAND end address is: 12 (R3)
; ucOUTDIV end address is: 4 (R1)
L_rf_init_freq142:
; ucOUTDIV start address is: 4 (R1)
; ucBAND start address is: 12 (R3)
; ucVCO start address is: 24 (R6)
; ucBAND end address is: 12 (R3)
; ucVCO end address is: 24 (R6)
; ucOUTDIV end address is: 4 (R1)
0x19A2	0xB2DF    UXTB	R7, R3
L_rf_init_freq140:
; ucVCO start address is: 24 (R6)
; ucBAND start address is: 28 (R7)
; ucOUTDIV start address is: 4 (R1)
; ucVCO end address is: 24 (R6)
; ucBAND end address is: 28 (R7)
; ucOUTDIV end address is: 4 (R1)
L_rf_init_freq138:
; ucOUTDIV start address is: 4 (R1)
; ucBAND start address is: 28 (R7)
; ucVCO start address is: 24 (R6)
; ucVCO end address is: 24 (R6)
; ucBAND end address is: 28 (R7)
; ucOUTDIV end address is: 4 (R1)
L_rf_init_freq136:
;driverrf4463pro.c, 640 :: 		ucDIV = ucOUTDIV / 2;
; ucVCO start address is: 24 (R6)
; ucBAND start address is: 28 (R7)
; ucOUTDIV start address is: 4 (R1)
0x19A4	0x0848    LSRS	R0, R1, #1
0x19A6	0xB2C0    UXTB	R0, R0
; ucOUTDIV end address is: 4 (R1)
;driverrf4463pro.c, 642 :: 		ulData = ( ulFrequency * ucDIV ) / 3;          // ucDIV = 88.5 = 88   //// UCdiv = 2
0x19A8	0x4601    MOV	R1, R0
0x19AA	0x4351    MULS	R1, R2, R1
; ulFrequency end address is: 8 (R2)
0x19AC	0x2203    MOVS	R2, #3
0x19AE	0x4608    MOV	R0, R1
0x19B0	0xF7FEFB86  BL	__Div_32x32_U+0
; ulData start address is: 16 (R4)
0x19B4	0x4604    MOV	R4, R0
;driverrf4463pro.c, 643 :: 		ucINTE = ( ulData / 100000) - 1;               // ulData = 6 000 000  //// ULdATA = 9 000 000
0x19B6	0x4A49    LDR	R2, [PC, #292]
0x19B8	0x9400    STR	R4, [SP, #0]
0x19BA	0xF7FEFB81  BL	__Div_32x32_U+0
0x19BE	0x9C00    LDR	R4, [SP, #0]
0x19C0	0x1E40    SUBS	R0, R0, #1
; ucINTE start address is: 12 (R3)
0x19C2	0xB2C3    UXTB	R3, R0
;driverrf4463pro.c, 644 :: 		ulFRAC = ( ulData - ( ucINTE + 1 ) * 100000 ) * 16384 / 3125;         // ulFRAC = 15 728 640
0x19C4	0xB2C0    UXTB	R0, R0
0x19C6	0x1C42    ADDS	R2, R0, #1
0x19C8	0xB212    SXTH	R2, R2
0x19CA	0x4944    LDR	R1, [PC, #272]
0x19CC	0x4608    MOV	R0, R1
0x19CE	0x4350    MULS	R0, R2, R0
0x19D0	0x1A20    SUBS	R0, R4, R0
; ulData end address is: 16 (R4)
0x19D2	0x0381    LSLS	R1, R0, #14
0x19D4	0x4A42    LDR	R2, [PC, #264]
0x19D6	0x9300    STR	R3, [SP, #0]
0x19D8	0x4608    MOV	R0, R1
0x19DA	0xF7FEFB71  BL	__Div_32x32_U+0
0x19DE	0x9B00    LDR	R3, [SP, #0]
0x19E0	0xB2DB    UXTB	R3, R3
;driverrf4463pro.c, 645 :: 		ulFRAC = ulFRAC + 0x80000;
0x19E2	0x4940    LDR	R1, [PC, #256]
0x19E4	0x1840    ADDS	R0, R0, R1
;driverrf4463pro.c, 647 :: 		ucFRAC_0 = ulFRAC;
; ucFRAC_0 start address is: 16 (R4)
0x19E6	0xB2C4    UXTB	R4, R0
;driverrf4463pro.c, 648 :: 		ulFRAC >>= 8;
0x19E8	0x0A00    LSRS	R0, R0, #8
;driverrf4463pro.c, 649 :: 		ucFRAC_1 = ulFRAC;
; ucFRAC_1 start address is: 20 (R5)
0x19EA	0xB2C5    UXTB	R5, R0
;driverrf4463pro.c, 650 :: 		ulFRAC >>= 8;
0x19EC	0x0A00    LSRS	R0, R0, #8
;driverrf4463pro.c, 651 :: 		ucFRAC_2 = ulFRAC;
0x19EE	0x9003    STR	R0, [SP, #12]
;driverrf4463pro.c, 655 :: 		app_command_buf[ 0 ] = 0x11;           // SET property    MODEM_CLKGEN_BAND
0x19F0	0x2210    MOVS	R2, #16
0x19F2	0x446A    ADD	R2, SP, R2
0x19F4	0x2011    MOVS	R0, #17
0x19F6	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 656 :: 		app_command_buf[ 1 ] = 0x20;           // Group  // 0x2051
0x19F8	0x1C51    ADDS	R1, R2, #1
0x19FA	0x2020    MOVS	R0, #32
0x19FC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 657 :: 		app_command_buf[ 2 ] = 0x01;           // Num Arguments // Total 1 Parameters
0x19FE	0x1C91    ADDS	R1, R2, #2
0x1A00	0x2001    MOVS	R0, #1
0x1A02	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 658 :: 		app_command_buf[ 3 ] = 0x51;           // Number  // 0x2051
0x1A04	0x1CD1    ADDS	R1, R2, #3
0x1A06	0x2051    MOVS	R0, #81
0x1A08	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 659 :: 		app_command_buf[ 4 ] = 0x08 | ucBAND;  // Argumento  //  high performance mode , clk outpu = osc /4
0x1A0A	0x1D11    ADDS	R1, R2, #4
0x1A0C	0x2008    MOVS	R0, #8
0x1A0E	0x4338    ORRS	R0, R7
; ucBAND end address is: 28 (R7)
0x1A10	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 660 :: 		spi_write( 5, app_command_buf );
0x1A12	0x9500    STR	R5, [SP, #0]
0x1A14	0x9401    STR	R4, [SP, #4]
0x1A16	0x9302    STR	R3, [SP, #8]
0x1A18	0x4611    MOV	R1, R2
0x1A1A	0x2005    MOVS	R0, #5
0x1A1C	0xF000F8AA  BL	_spi_write+0
0x1A20	0x9B02    LDR	R3, [SP, #8]
0x1A22	0xB2DB    UXTB	R3, R3
0x1A24	0x9C01    LDR	R4, [SP, #4]
0x1A26	0xB2E4    UXTB	R4, R4
0x1A28	0x9D00    LDR	R5, [SP, #0]
0x1A2A	0xB2ED    UXTB	R5, R5
;driverrf4463pro.c, 662 :: 		app_command_buf[ 0 ]  = 0x11;
0x1A2C	0x2210    MOVS	R2, #16
0x1A2E	0x446A    ADD	R2, SP, R2
0x1A30	0x2011    MOVS	R0, #17
0x1A32	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 663 :: 		app_command_buf[ 1 ]  = 0x40;    // 0x4000         FREQ_CONTROL_INTE
0x1A34	0x1C51    ADDS	R1, R2, #1
0x1A36	0x2040    MOVS	R0, #64
0x1A38	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 664 :: 		app_command_buf[ 2 ]  = 0x08;    // Total 8 Parameters
0x1A3A	0x1C91    ADDS	R1, R2, #2
0x1A3C	0x2008    MOVS	R0, #8
0x1A3E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 665 :: 		app_command_buf[ 3 ]  = 0x00;   // 0x4000
0x1A40	0x1CD1    ADDS	R1, R2, #3
0x1A42	0x2000    MOVS	R0, #0
0x1A44	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 666 :: 		app_command_buf[ 4 ]  = ucINTE;   //  default value
0x1A46	0x1D10    ADDS	R0, R2, #4
0x1A48	0x7003    STRB	R3, [R0, #0]
; ucINTE end address is: 12 (R3)
;driverrf4463pro.c, 667 :: 		app_command_buf[ 5 ]  = ucFRAC_2;   //  defaul value
0x1A4A	0x1D51    ADDS	R1, R2, #5
0x1A4C	0x9803    LDR	R0, [SP, #12]
0x1A4E	0xB2C0    UXTB	R0, R0
0x1A50	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 668 :: 		app_command_buf[ 6 ]  = ucFRAC_1;   //  default value
0x1A52	0x1D90    ADDS	R0, R2, #6
0x1A54	0x7005    STRB	R5, [R0, #0]
; ucFRAC_1 end address is: 20 (R5)
;driverrf4463pro.c, 669 :: 		app_command_buf[ 7 ]  = ucFRAC_0;   // frac ,from WDS
0x1A56	0x1DD0    ADDS	R0, R2, #7
0x1A58	0x7004    STRB	R4, [R0, #0]
; ucFRAC_0 end address is: 16 (R4)
;driverrf4463pro.c, 672 :: 		if ( ulRF4463Step == 250 ) {
0x1A5A	0x4823    LDR	R0, [PC, #140]
0x1A5C	0x6800    LDR	R0, [R0, #0]
0x1A5E	0x28FA    CMP	R0, #250
0x1A60	0xD10A    BNE	L_rf_init_freq145
;driverrf4463pro.c, 673 :: 		app_command_buf[ 8 ]  = step_250K_step1;   // channel step1  from wds  // al parecer aqu? esta el ancho del canal
0x1A62	0x2210    MOVS	R2, #16
0x1A64	0x446A    ADD	R2, SP, R2
0x1A66	0x4611    MOV	R1, R2
0x1A68	0x3108    ADDS	R1, #8
0x1A6A	0x2022    MOVS	R0, #34
0x1A6C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 674 :: 		app_command_buf[ 9 ]  = step_250K_step0;   // channel step0  from wds
0x1A6E	0x4611    MOV	R1, R2
0x1A70	0x3109    ADDS	R1, #9
0x1A72	0x2022    MOVS	R0, #34
0x1A74	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 675 :: 		}
0x1A76	0xE00F    B	L_rf_init_freq146
L_rf_init_freq145:
;driverrf4463pro.c, 676 :: 		else if ( ulRF4463Step == 500 ) {
0x1A78	0x481B    LDR	R0, [PC, #108]
0x1A7A	0x6801    LDR	R1, [R0, #0]
0x1A7C	0x20FF    MOVS	R0, #255
0x1A7E	0x30F5    ADDS	R0, #245
0x1A80	0x4281    CMP	R1, R0
0x1A82	0xD109    BNE	L_rf_init_freq147
;driverrf4463pro.c, 677 :: 		app_command_buf[ 8 ]  = step_500K_step1;   // channel step1  from wds  // al parecer aqu? esta el ancho del canal
0x1A84	0x2210    MOVS	R2, #16
0x1A86	0x446A    ADD	R2, SP, R2
0x1A88	0x4611    MOV	R1, R2
0x1A8A	0x3108    ADDS	R1, #8
0x1A8C	0x2044    MOVS	R0, #68
0x1A8E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 678 :: 		app_command_buf[ 9 ]  = step_500K_step0;   // channel step0  from wds
0x1A90	0x4611    MOV	R1, R2
0x1A92	0x3109    ADDS	R1, #9
0x1A94	0x2044    MOVS	R0, #68
0x1A96	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 679 :: 		}
L_rf_init_freq147:
L_rf_init_freq146:
;driverrf4463pro.c, 681 :: 		app_command_buf[ 10 ] = 0x20;  //  from wds Without this Values
0x1A98	0x2210    MOVS	R2, #16
0x1A9A	0x446A    ADD	R2, SP, R2
0x1A9C	0x4611    MOV	R1, R2
0x1A9E	0x310A    ADDS	R1, #10
0x1AA0	0x2020    MOVS	R0, #32
0x1AA2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 682 :: 		app_command_buf[ 11 ] = ucVCO;    // from wds Without this Values
0x1AA4	0x4610    MOV	R0, R2
0x1AA6	0x300B    ADDS	R0, #11
0x1AA8	0x7006    STRB	R6, [R0, #0]
; ucVCO end address is: 24 (R6)
;driverrf4463pro.c, 684 :: 		spi_write( 12, app_command_buf );
0x1AAA	0x4611    MOV	R1, R2
0x1AAC	0x200C    MOVS	R0, #12
0x1AAE	0xF000F861  BL	_spi_write+0
;driverrf4463pro.c, 685 :: 		}
L_end_rf_init_freq:
0x1AB2	0xB009    ADD	SP, SP, #36
0x1AB4	0xBD00    POP	(R15)
0x1AB6	0xBF00    NOP
0x1AB8	0x22932000  	_ucRF4463Freq3+0
0x1ABC	0x22942000  	_ucRF4463Freq2+0
0x1AC0	0x22952000  	_ucRF4463Freq1+0
0x1AC4	0x27100000  	#10000
0x1AC8	0xF7800073  	#7600000
0x1ACC	0x50200053  	#5460000
0x1AD0	0xBF10003A  	#3850000
0x1AD4	0xA8100029  	#2730000
0x1AD8	0x9A20001D  	#1940000
0x1ADC	0x86A00001  	#100000
0x1AE0	0x0C350000  	#3125
0x1AE4	0x00000008  	#524288
0x1AE8	0x20842000  	_ulRF4463Step+0
; end of _rf_init_freq
_vRF4463ClearInterrupts:
;driverrf4463pro.c, 392 :: 		void vRF4463ClearInterrupts( void ) {
0x2438	0xB500    PUSH	(R14)
0x243A	0xB081    SUB	SP, SP, #4
;driverrf4463pro.c, 395 :: 		p[ 0 ] = GET_INT_STATUS;
0x243C	0x466A    MOV	R2, SP
0x243E	0x2020    MOVS	R0, #32
0x2440	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 396 :: 		p[ 1 ] = 0;               // clr  PH pending
0x2442	0x1C51    ADDS	R1, R2, #1
0x2444	0x2000    MOVS	R0, #0
0x2446	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 397 :: 		p[ 2 ] = 0;               // clr modem_pending
0x2448	0x1C91    ADDS	R1, R2, #2
0x244A	0x2000    MOVS	R0, #0
0x244C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 398 :: 		p[ 3 ] = 0;               // clr chip pending
0x244E	0x1CD1    ADDS	R1, R2, #3
0x2450	0x2000    MOVS	R0, #0
0x2452	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 399 :: 		spi_write( 4, p );
0x2454	0x4611    MOV	R1, R2
0x2456	0x2004    MOVS	R0, #4
0x2458	0xF7FFFB8C  BL	_spi_write+0
;driverrf4463pro.c, 400 :: 		spi_read( 9, GET_INT_STATUS );
0x245C	0x2120    MOVS	R1, #32
0x245E	0x2009    MOVS	R0, #9
0x2460	0xF7FFFA20  BL	_spi_read+0
;driverrf4463pro.c, 401 :: 		}
L_end_vRF4463ClearInterrupts:
0x2464	0xB001    ADD	SP, SP, #4
0x2466	0xBD00    POP	(R15)
; end of _vRF4463ClearInterrupts
_spi_read:
;driverrf4463pro.c, 754 :: 		void spi_read( unsigned char data_length, unsigned char api_command ) {
; api_command start address is: 4 (R1)
; data_length start address is: 0 (R0)
0x18A4	0xB500    PUSH	(R14)
0x18A6	0xB082    SUB	SP, SP, #8
; api_command end address is: 4 (R1)
; data_length end address is: 0 (R0)
; data_length start address is: 0 (R0)
; api_command start address is: 4 (R1)
;driverrf4463pro.c, 758 :: 		p[ 0 ] = api_command;
0x18A8	0x466A    MOV	R2, SP
0x18AA	0x7011    STRB	R1, [R2, #0]
; api_command end address is: 4 (R1)
;driverrf4463pro.c, 759 :: 		i = 0;
; i start address is: 4 (R1)
0x18AC	0x2100    MOVS	R1, #0
; data_length end address is: 0 (R0)
; i end address is: 4 (R1)
0x18AE	0xB2C6    UXTB	R6, R0
0x18B0	0xB2C8    UXTB	R0, R1
;driverrf4463pro.c, 760 :: 		while ( i != 0xFF ) {
L_spi_read155:
; i start address is: 0 (R0)
; data_length start address is: 24 (R6)
0x18B2	0x28FF    CMP	R0, #255
0x18B4	0xD002    BEQ	L_spi_read156
; i end address is: 0 (R0)
;driverrf4463pro.c, 761 :: 		i = check_cts();                // Check if you can send Command
0x18B6	0xF7FEFEE5  BL	_check_cts+0
; i start address is: 0 (R0)
;driverrf4463pro.c, 762 :: 		}
; i end address is: 0 (R0)
0x18BA	0xE7FA    B	L_spi_read155
L_spi_read156:
;driverrf4463pro.c, 764 :: 		spi_write( 1, p );    // Send Command
0x18BC	0x466A    MOV	R2, SP
0x18BE	0x4611    MOV	R1, R2
0x18C0	0x2001    MOVS	R0, #1
0x18C2	0xF000F957  BL	_spi_write+0
;driverrf4463pro.c, 766 :: 		i = 0;
; i start address is: 0 (R0)
0x18C6	0x2000    MOVS	R0, #0
; data_length end address is: 24 (R6)
; i end address is: 0 (R0)
0x18C8	0xB2F5    UXTB	R5, R6
;driverrf4463pro.c, 767 :: 		while ( i != 0xFF ) {
L_spi_read157:
; i start address is: 0 (R0)
; data_length start address is: 20 (R5)
0x18CA	0x28FF    CMP	R0, #255
0x18CC	0xD002    BEQ	L_spi_read158
; i end address is: 0 (R0)
;driverrf4463pro.c, 768 :: 		i = check_cts();        //Check whether the data can be read
0x18CE	0xF7FEFED9  BL	_check_cts+0
; i start address is: 0 (R0)
;driverrf4463pro.c, 769 :: 		}
; i end address is: 0 (R0)
0x18D2	0xE7FA    B	L_spi_read157
L_spi_read158:
;driverrf4463pro.c, 771 :: 		nSEL = 1;
0x18D4	0x4C10    LDR	R4, [PC, #64]
0x18D6	0x6822    LDR	R2, [R4, #0]
0x18D8	0x2308    MOVS	R3, #8
0x18DA	0x431A    ORRS	R2, R3
0x18DC	0x6022    STR	R2, [R4, #0]
;driverrf4463pro.c, 772 :: 		nSEL = 0;
0x18DE	0x4C0E    LDR	R4, [PC, #56]
0x18E0	0x6822    LDR	R2, [R4, #0]
0x18E2	0x2308    MOVS	R3, #8
0x18E4	0x439A    BICS	R2, R3
0x18E6	0x6022    STR	R2, [R4, #0]
;driverrf4463pro.c, 773 :: 		ucRf4463SPIByte( 0x44 );
0x18E8	0x2044    MOVS	R0, #68
0x18EA	0xF7FEFD9B  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 774 :: 		for ( i = 0; i < data_length; i++ ) {        // Read data
; i start address is: 24 (R6)
0x18EE	0x2600    MOVS	R6, #0
; data_length end address is: 20 (R5)
; i end address is: 24 (R6)
L_spi_read159:
; i start address is: 24 (R6)
; data_length start address is: 20 (R5)
0x18F0	0x42AE    CMP	R6, R5
0x18F2	0xD20A    BCS	L_spi_read160
;driverrf4463pro.c, 775 :: 		spi_read_buf[ i ] = ucRf4463SPIByte( 0x00 );             // 0x00
0x18F4	0x4A09    LDR	R2, [PC, #36]
0x18F6	0x1992    ADDS	R2, R2, R6
0x18F8	0x9201    STR	R2, [SP, #4]
0x18FA	0x2000    MOVS	R0, #0
0x18FC	0xF7FEFD92  BL	_ucRf4463SPIByte+0
0x1900	0x9A01    LDR	R2, [SP, #4]
0x1902	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 774 :: 		for ( i = 0; i < data_length; i++ ) {        // Read data
0x1904	0x3601    ADDS	R6, #1
0x1906	0xB2F6    UXTB	R6, R6
;driverrf4463pro.c, 776 :: 		}
; data_length end address is: 20 (R5)
; i end address is: 24 (R6)
0x1908	0xE7F2    B	L_spi_read159
L_spi_read160:
;driverrf4463pro.c, 777 :: 		nSEL = 1;
0x190A	0x4C03    LDR	R4, [PC, #12]
0x190C	0x6822    LDR	R2, [R4, #0]
0x190E	0x2308    MOVS	R3, #8
0x1910	0x431A    ORRS	R2, R3
0x1912	0x6022    STR	R2, [R4, #0]
;driverrf4463pro.c, 778 :: 		}
L_end_spi_read:
0x1914	0xB002    ADD	SP, SP, #8
0x1916	0xBD00    POP	(R15)
0x1918	0x00145000  	GPIOA_ODRbits+0
0x191C	0x22982000  	_spi_read_buf+0
; end of _spi_read
_vRF4463PartInfo:
;driverrf4463pro.c, 403 :: 		void vRF4463PartInfo( void ) {  // Solicitud totalmente operativa
0x23B4	0xB500    PUSH	(R14)
0x23B6	0xB083    SUB	SP, SP, #12
;driverrf4463pro.c, 406 :: 		p[ 0 ] = PART_INFO;
0x23B8	0x4669    MOV	R1, SP
0x23BA	0x2001    MOVS	R0, #1
0x23BC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 410 :: 		spi_write( 1, p );
0x23BE	0x2001    MOVS	R0, #1
0x23C0	0xF7FFFBD8  BL	_spi_write+0
;driverrf4463pro.c, 411 :: 		spi_read( 9, PART_INFO );
0x23C4	0x2101    MOVS	R1, #1
0x23C6	0x2009    MOVS	R0, #9
0x23C8	0xF7FFFA6C  BL	_spi_read+0
;driverrf4463pro.c, 412 :: 		}
L_end_vRF4463PartInfo:
0x23CC	0xB003    ADD	SP, SP, #12
0x23CE	0xBD00    POP	(R15)
; end of _vRF4463PartInfo
_UART1_Write_Text:
;__Lib_UART_G0xx_1234.c, 448 :: 		
; uart_text start address is: 0 (R0)
0x23D0	0xB500    PUSH	(R14)
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_G0xx_1234.c, 450 :: 		
0x23D2	0x4601    MOV	R1, R0
; uart_text end address is: 0 (R0)
0x23D4	0x4801    LDR	R0, [PC, #4]
0x23D6	0xF7FEFBBB  BL	__Lib_UART_G0xx_1234_UARTx_Write_Text+0
;__Lib_UART_G0xx_1234.c, 451 :: 		
L_end_UART1_Write_Text:
0x23DA	0xBD00    POP	(R15)
0x23DC	0x38004001  	USART1_CR1+0
; end of _UART1_Write_Text
__Lib_UART_G0xx_1234_UARTx_Write_Text:
;__Lib_UART_G0xx_1234.c, 127 :: 		
; uart_text start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x0B50	0xB500    PUSH	(R14)
; uart_text end address is: 4 (R1)
; uartBase end address is: 0 (R0)
; uartBase start address is: 0 (R0)
; uart_text start address is: 4 (R1)
;__Lib_UART_G0xx_1234.c, 130 :: 		
; counter start address is: 24 (R6)
0x0B52	0x2600    MOVS	R6, #0
;__Lib_UART_G0xx_1234.c, 133 :: 		
0x0B54	0x780A    LDRB	R2, [R1, #0]
; uartData start address is: 12 (R3)
0x0B56	0xB2D3    UXTB	R3, R2
; uartBase end address is: 0 (R0)
; uart_text end address is: 4 (R1)
; uartData end address is: 12 (R3)
; counter end address is: 24 (R6)
0x0B58	0x4605    MOV	R5, R0
0x0B5A	0xB2D8    UXTB	R0, R3
0x0B5C	0x460C    MOV	R4, R1
;__Lib_UART_G0xx_1234.c, 135 :: 		
L___Lib_UART_G0xx_1234_UARTx_Write_Text11:
; uartData start address is: 0 (R0)
; uartBase start address is: 20 (R5)
; uart_text start address is: 16 (R4)
; counter start address is: 24 (R6)
; uart_text start address is: 16 (R4)
; uart_text end address is: 16 (R4)
; uartBase start address is: 20 (R5)
; uartBase end address is: 20 (R5)
0x0B5E	0x2800    CMP	R0, #0
0x0B60	0xD00A    BEQ	L___Lib_UART_G0xx_1234_UARTx_Write_Text12
; uart_text end address is: 16 (R4)
; uartBase end address is: 20 (R5)
;__Lib_UART_G0xx_1234.c, 137 :: 		
; uartBase start address is: 20 (R5)
; uart_text start address is: 16 (R4)
0x0B62	0xB2C1    UXTB	R1, R0
; uartData end address is: 0 (R0)
0x0B64	0x4628    MOV	R0, R5
0x0B66	0xF7FFFDAB  BL	__Lib_UART_G0xx_1234_UARTx_Write+0
;__Lib_UART_G0xx_1234.c, 138 :: 		
0x0B6A	0x1C72    ADDS	R2, R6, #1
0x0B6C	0xB2D2    UXTB	R2, R2
0x0B6E	0xB2D6    UXTB	R6, R2
0x0B70	0x18A2    ADDS	R2, R4, R2
0x0B72	0x7812    LDRB	R2, [R2, #0]
; uartData start address is: 0 (R0)
0x0B74	0xB2D0    UXTB	R0, R2
;__Lib_UART_G0xx_1234.c, 139 :: 		
; uart_text end address is: 16 (R4)
; uartBase end address is: 20 (R5)
; counter end address is: 24 (R6)
; uartData end address is: 0 (R0)
0x0B76	0xE7F2    B	L___Lib_UART_G0xx_1234_UARTx_Write_Text11
L___Lib_UART_G0xx_1234_UARTx_Write_Text12:
;__Lib_UART_G0xx_1234.c, 140 :: 		
L_end_UARTx_Write_Text:
0x0B78	0xBD00    POP	(R15)
; end of __Lib_UART_G0xx_1234_UARTx_Write_Text
__Lib_UART_G0xx_1234_UARTx_Write:
;__Lib_UART_G0xx_1234.c, 113 :: 		
; _data start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x06C0	0xB500    PUSH	(R14)
0x06C2	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; uartBase end address is: 0 (R0)
; uartBase start address is: 0 (R0)
; _data start address is: 4 (R1)
0x06C4	0x9100    STR	R1, [SP, #0]
; uartBase end address is: 0 (R0)
; _data end address is: 4 (R1)
0x06C6	0x4601    MOV	R1, R0
0x06C8	0x9800    LDR	R0, [SP, #0]
0x06CA	0xB280    UXTH	R0, R0
;__Lib_UART_G0xx_1234.c, 116 :: 		
L___Lib_UART_G0xx_1234_UARTx_Write9:
; _data start address is: 0 (R0)
; uartBase start address is: 4 (R1)
0x06CC	0x460A    MOV	R2, R1
0x06CE	0x321C    ADDS	R2, #28
0x06D0	0x6813    LDR	R3, [R2, #0]
0x06D2	0x2280    MOVS	R2, #128
0x06D4	0x401A    ANDS	R2, R3
0x06D6	0x09D2    LSRS	R2, R2, #7
0x06D8	0x2A00    CMP	R2, #0
0x06DA	0xD100    BNE	L___Lib_UART_G0xx_1234_UARTx_Write10
0x06DC	0xE7F6    B	L___Lib_UART_G0xx_1234_UARTx_Write9
L___Lib_UART_G0xx_1234_UARTx_Write10:
;__Lib_UART_G0xx_1234.c, 119 :: 		
0x06DE	0x460A    MOV	R2, R1
0x06E0	0x3228    ADDS	R2, #40
; uartBase end address is: 4 (R1)
0x06E2	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_G0xx_1234.c, 120 :: 		
L_end_UARTx_Write:
0x06E4	0xB001    ADD	SP, SP, #4
0x06E6	0xBD00    POP	(R15)
; end of __Lib_UART_G0xx_1234_UARTx_Write
_vUSARTReceivedFromUSART1:
;uarthandler.c, 551 :: 		void vUSARTReceivedFromUSART1 ( ) {
0x23E0	0xB500    PUSH	(R14)
;uarthandler.c, 553 :: 		vUSARTCleanBuffer( ucUSARTActiveBuffer1, ulUSARTActiveBuffer1BytesReceived ); // borra todo el buffer
0x23E2	0x4810    LDR	R0, [PC, #64]
0x23E4	0x6800    LDR	R0, [R0, #0]
0x23E6	0xB281    UXTH	R1, R0
0x23E8	0x480F    LDR	R0, [PC, #60]
0x23EA	0xF7FFF833  BL	_vUSARTCleanBuffer+0
;uarthandler.c, 554 :: 		vUSARTStartMEMtoMEM( ucUSART1RXBuffer, ucUSARTActiveBuffer1, ulUSART1ByteReceived ); // copia el buffer de entrada
0x23EE	0x480F    LDR	R0, [PC, #60]
0x23F0	0x6800    LDR	R0, [R0, #0]
0x23F2	0x4602    MOV	R2, R0
0x23F4	0x490C    LDR	R1, [PC, #48]
0x23F6	0x480E    LDR	R0, [PC, #56]
0x23F8	0xF7FFF828  BL	_vUSARTStartMEMtoMEM+0
;uarthandler.c, 555 :: 		vUSARTCleanBuffer( ucUSART1RXBuffer, ulUSART1ByteReceived );          // lo limpia
0x23FC	0x480B    LDR	R0, [PC, #44]
0x23FE	0x6800    LDR	R0, [R0, #0]
0x2400	0xB281    UXTH	R1, R0
0x2402	0x480B    LDR	R0, [PC, #44]
0x2404	0xF7FFF826  BL	_vUSARTCleanBuffer+0
;uarthandler.c, 556 :: 		ulUSARTActiveBuffer1BytesReceived = ulUSART1ByteReceived;             // le pasa el valor
0x2408	0x4808    LDR	R0, [PC, #32]
0x240A	0x6801    LDR	R1, [R0, #0]
0x240C	0x4805    LDR	R0, [PC, #20]
0x240E	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 557 :: 		ulUSART1ByteReceived = 0;                                             // pone a cero el contador
0x2410	0x2100    MOVS	R1, #0
0x2412	0x4806    LDR	R0, [PC, #24]
0x2414	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 558 :: 		fUSART1Buffer = CLEAR_TO_WRITE;                                       // indica que esta limpio
0x2416	0x2100    MOVS	R1, #0
0x2418	0x4806    LDR	R0, [PC, #24]
0x241A	0x6001    STR	R1, [R0, #0]
;uarthandler.c, 559 :: 		vRF4463MainCommandProcessor( ucUSARTActiveBuffer1 );
0x241C	0x4802    LDR	R0, [PC, #8]
0x241E	0xF7FEFBBB  BL	_vRF4463MainCommandProcessor+0
;uarthandler.c, 560 :: 		}
L_end_vUSARTReceivedFromUSART1:
0x2422	0xBD00    POP	(R15)
0x2424	0x10002000  	_ulUSARTActiveBuffer1BytesReceived+0
0x2428	0x00002000  	_ucUSARTActiveBuffer1+0
0x242C	0x20042000  	_ulUSART1ByteReceived+0
0x2430	0x10042000  	_ucUSART1RXBuffer+0
0x2434	0x20082000  	_fUSART1Buffer+0
; end of _vUSARTReceivedFromUSART1
_vUSARTCleanBuffer:
;uarthandler.c, 544 :: 		void vUSARTCleanBuffer ( unsigned char *ucBuffer, unsigned int uiCnt ) {
; uiCnt start address is: 4 (R1)
; ucBuffer start address is: 0 (R0)
0x1454	0xB500    PUSH	(R14)
; uiCnt end address is: 4 (R1)
; ucBuffer end address is: 0 (R0)
; ucBuffer start address is: 0 (R0)
; uiCnt start address is: 4 (R1)
;uarthandler.c, 546 :: 		vUSARTStartMEMtoMEMZero( ucBuffer, uiCnt );
; uiCnt end address is: 4 (R1)
; ucBuffer end address is: 0 (R0)
0x1456	0xF7FFF92F  BL	_vUSARTStartMEMtoMEMZero+0
;uarthandler.c, 547 :: 		}
L_end_vUSARTCleanBuffer:
0x145A	0xBD00    POP	(R15)
; end of _vUSARTCleanBuffer
_vUSARTStartMEMtoMEMZero:
;uarthandler.c, 253 :: 		unsigned char vUSARTStartMEMtoMEMZero ( unsigned long *pcBufferDestination, unsigned long ulSizeInBytes ) {
0x06B8	0xB081    SUB	SP, SP, #4
;uarthandler.c, 292 :: 		}
L_end_vUSARTStartMEMtoMEMZero:
0x06BA	0xB001    ADD	SP, SP, #4
0x06BC	0x4770    BX	LR
; end of _vUSARTStartMEMtoMEMZero
_vUSARTStartMEMtoMEM:
;uarthandler.c, 343 :: 		unsigned char vUSARTStartMEMtoMEM ( unsigned long *pcBufferOrigin, unsigned long *pcBufferDestination, unsigned long ulSizeInBytes ) {
0x144C	0xB081    SUB	SP, SP, #4
;uarthandler.c, 382 :: 		}
L_end_vUSARTStartMEMtoMEM:
0x144E	0xB001    ADD	SP, SP, #4
0x1450	0x4770    BX	LR
; end of _vUSARTStartMEMtoMEM
_vRF4463MainCommandProcessor:
;DriverRF4463PROMain.c, 124 :: 		void vRF4463MainCommandProcessor ( unsigned char *ucBuffer ) {
; ucBuffer start address is: 0 (R0)
0x0B98	0xB500    PUSH	(R14)
0x0B9A	0xB099    SUB	SP, SP, #100
; ucBuffer end address is: 0 (R0)
; ucBuffer start address is: 0 (R0)
;DriverRF4463PROMain.c, 125 :: 		unsigned char ucCommand [ 32 ] = { 0x00 };
0x0B9C	0x466E    MOV	R6, SP
0x0B9E	0x2560    MOVS	R5, #96
0x0BA0	0x19AD    ADDS	R5, R5, R6
0x0BA2	0x4F91    LDR	R7, [PC, #580]
0x0BA4	0xF001FBDE  BL	___CC2DW+0
;DriverRF4463PROMain.c, 126 :: 		unsigned long ulArgument = 0;
;DriverRF4463PROMain.c, 127 :: 		unsigned char ucLongArgument[ 64 ] = { 0x00 };     // Espera argumentos de hasta 11 bytes
;DriverRF4463PROMain.c, 128 :: 		unsigned char ucCounterBuffer = 0;
; ucCounterBuffer start address is: 12 (R3)
0x0BA8	0x2300    MOVS	R3, #0
;DriverRF4463PROMain.c, 129 :: 		unsigned char ucCounterCommand = 0;
; ucCounterCommand start address is: 16 (R4)
0x0BAA	0x2400    MOVS	R4, #0
;DriverRF4463PROMain.c, 130 :: 		unsigned char ucCounterLongArgument = 0;
; ucCounterLongArgument start address is: 8 (R2)
0x0BAC	0x2200    MOVS	R2, #0
;DriverRF4463PROMain.c, 133 :: 		if ( ucBuffer[ 0 ] > '@' && ucBuffer[ 0 ] <= 'z' ) {
0x0BAE	0x7801    LDRB	R1, [R0, #0]
0x0BB0	0x2940    CMP	R1, #64
0x0BB2	0xD92F    BLS	L__vRF4463MainCommandProcessor440
0x0BB4	0x7801    LDRB	R1, [R0, #0]
0x0BB6	0x297A    CMP	R1, #122
0x0BB8	0xD82E    BHI	L__vRF4463MainCommandProcessor441
L__vRF4463MainCommandProcessor406:
;DriverRF4463PROMain.c, 135 :: 		while ( ucBuffer[ ucCounterBuffer ] != '|' && ucCounterCommand < 32 ) {      // primer token
0x0BBA	0x4605    MOV	R5, R0
; ucCounterCommand end address is: 16 (R4)
; ucCounterBuffer end address is: 12 (R3)
; ucBuffer end address is: 0 (R0)
L_vRF4463MainCommandProcessor224:
; ucCounterLongArgument end address is: 8 (R2)
; ucCounterLongArgument start address is: 8 (R2)
; ucCounterCommand start address is: 16 (R4)
; ucCounterBuffer start address is: 12 (R3)
; ucBuffer start address is: 20 (R5)
0x0BBC	0x18E9    ADDS	R1, R5, R3
0x0BBE	0x7809    LDRB	R1, [R1, #0]
0x0BC0	0x297C    CMP	R1, #124
0x0BC2	0xD010    BEQ	L__vRF4463MainCommandProcessor408
0x0BC4	0x2C20    CMP	R4, #32
0x0BC6	0xD20E    BCS	L__vRF4463MainCommandProcessor407
L__vRF4463MainCommandProcessor405:
;DriverRF4463PROMain.c, 136 :: 		ucCommand[ ucCounterCommand++ ] = toupper( ucBuffer[ ucCounterBuffer++ ] );
0x0BC8	0x4669    MOV	R1, SP
0x0BCA	0x1909    ADDS	R1, R1, R4
0x0BCC	0x9118    STR	R1, [SP, #96]
0x0BCE	0x18E9    ADDS	R1, R5, R3
0x0BD0	0x7809    LDRB	R1, [R1, #0]
0x0BD2	0xB2C8    UXTB	R0, R1
0x0BD4	0xF7FFFEEE  BL	_toupper+0
0x0BD8	0x9918    LDR	R1, [SP, #96]
0x0BDA	0x7008    STRB	R0, [R1, #0]
0x0BDC	0x3401    ADDS	R4, #1
0x0BDE	0xB2E4    UXTB	R4, R4
0x0BE0	0x3301    ADDS	R3, #1
0x0BE2	0xB2DB    UXTB	R3, R3
;DriverRF4463PROMain.c, 137 :: 		}
; ucCounterCommand end address is: 16 (R4)
0x0BE4	0xE7EA    B	L_vRF4463MainCommandProcessor224
;DriverRF4463PROMain.c, 135 :: 		while ( ucBuffer[ ucCounterBuffer ] != '|' && ucCounterCommand < 32 ) {      // primer token
L__vRF4463MainCommandProcessor408:
L__vRF4463MainCommandProcessor407:
;DriverRF4463PROMain.c, 139 :: 		ucCounterBuffer++;                                                           // evita el Token
0x0BE6	0x1C5C    ADDS	R4, R3, #1
0x0BE8	0xB2E4    UXTB	R4, R4
; ucCounterBuffer end address is: 12 (R3)
; ucCounterBuffer start address is: 16 (R4)
; ucCounterLongArgument end address is: 8 (R2)
; ucCounterBuffer end address is: 16 (R4)
; ucBuffer end address is: 20 (R5)
0x0BEA	0xB2D3    UXTB	R3, R2
0x0BEC	0x4628    MOV	R0, R5
;DriverRF4463PROMain.c, 141 :: 		while ( ucBuffer[ ucCounterBuffer ] != CHR_CR && ucCounterLongArgument < 64 ) {   // segundo token
L_vRF4463MainCommandProcessor228:
; ucCounterBuffer start address is: 16 (R4)
; ucBuffer start address is: 0 (R0)
; ucCounterLongArgument start address is: 12 (R3)
0x0BEE	0x1901    ADDS	R1, R0, R4
0x0BF0	0x7809    LDRB	R1, [R1, #0]
0x0BF2	0x290D    CMP	R1, #13
0x0BF4	0xD00C    BEQ	L__vRF4463MainCommandProcessor410
0x0BF6	0x2B40    CMP	R3, #64
0x0BF8	0xD20A    BCS	L__vRF4463MainCommandProcessor409
L__vRF4463MainCommandProcessor404:
;DriverRF4463PROMain.c, 142 :: 		ucLongArgument[ ucCounterLongArgument ] = ucBuffer[ ucCounterBuffer ] ;   //  toupper(
0x0BFA	0x2120    MOVS	R1, #32
0x0BFC	0x4469    ADD	R1, SP, R1
0x0BFE	0x18CA    ADDS	R2, R1, R3
0x0C00	0x1901    ADDS	R1, R0, R4
0x0C02	0x7809    LDRB	R1, [R1, #0]
0x0C04	0x7011    STRB	R1, [R2, #0]
;DriverRF4463PROMain.c, 143 :: 		ucCounterBuffer++;
0x0C06	0x3401    ADDS	R4, #1
0x0C08	0xB2E4    UXTB	R4, R4
;DriverRF4463PROMain.c, 144 :: 		ucCounterLongArgument++;
0x0C0A	0x3301    ADDS	R3, #1
0x0C0C	0xB2DB    UXTB	R3, R3
;DriverRF4463PROMain.c, 145 :: 		}
; ucCounterBuffer end address is: 16 (R4)
; ucCounterLongArgument end address is: 12 (R3)
0x0C0E	0xE7EE    B	L_vRF4463MainCommandProcessor228
;DriverRF4463PROMain.c, 141 :: 		while ( ucBuffer[ ucCounterBuffer ] != CHR_CR && ucCounterLongArgument < 64 ) {   // segundo token
L__vRF4463MainCommandProcessor410:
L__vRF4463MainCommandProcessor409:
;DriverRF4463PROMain.c, 133 :: 		if ( ucBuffer[ 0 ] > '@' && ucBuffer[ 0 ] <= 'z' ) {
0x0C10	0x4605    MOV	R5, R0
0x0C12	0xE000    B	L__vRF4463MainCommandProcessor412
; ucBuffer end address is: 0 (R0)
L__vRF4463MainCommandProcessor440:
0x0C14	0x4605    MOV	R5, R0
L__vRF4463MainCommandProcessor412:
; ucBuffer start address is: 20 (R5)
; ucBuffer end address is: 20 (R5)
0x0C16	0xE000    B	L__vRF4463MainCommandProcessor411
L__vRF4463MainCommandProcessor441:
0x0C18	0x4605    MOV	R5, R0
L__vRF4463MainCommandProcessor411:
;DriverRF4463PROMain.c, 150 :: 		if ( memcmp( CMD_RADIO_POWER_SET, ucCommand, sizeof( CMD_RADIO_POWER_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x0C1A	0x4669    MOV	R1, SP
0x0C1C	0x220A    MOVS	R2, #10
0x0C1E	0x4873    LDR	R0, [PC, #460]
0x0C20	0xF7FFFD62  BL	_memcmp+0
0x0C24	0x2800    CMP	R0, #0
0x0C26	0xD11D    BNE	L_vRF4463MainCommandProcessor232
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 151 :: 		ulArgument = StrToShort( ucLongArgument );
0x0C28	0x2120    MOVS	R1, #32
0x0C2A	0x4469    ADD	R1, SP, R1
0x0C2C	0x4608    MOV	R0, R1
0x0C2E	0xF7FFFECF  BL	_StrToShort+0
; ulArgument start address is: 0 (R0)
;DriverRF4463PROMain.c, 153 :: 		if ( ulArgument > 0 && ulArgument <= 127 ) {
0x0C32	0x2800    CMP	R0, #0
0x0C34	0xD90D    BLS	L__vRF4463MainCommandProcessor414
0x0C36	0x287F    CMP	R0, #127
0x0C38	0xD80B    BHI	L__vRF4463MainCommandProcessor413
L__vRF4463MainCommandProcessor403:
;DriverRF4463PROMain.c, 154 :: 		ucRF4463Power = ulArgument;
0x0C3A	0x496D    LDR	R1, [PC, #436]
0x0C3C	0x7008    STRB	R0, [R1, #0]
; ulArgument end address is: 0 (R0)
;DriverRF4463PROMain.c, 155 :: 		vRF4463MainApplyChanges();
0x0C3E	0xF7FFFF7F  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 156 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0C42	0x486C    LDR	R0, [PC, #432]
0x0C44	0xF7FFFC2A  BL	_strlen+0
0x0C48	0xB201    SXTH	R1, R0
0x0C4A	0x486A    LDR	R0, [PC, #424]
0x0C4C	0xF7FFFCB6  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 157 :: 		}
0x0C50	0xE006    B	L_vRF4463MainCommandProcessor236
;DriverRF4463PROMain.c, 153 :: 		if ( ulArgument > 0 && ulArgument <= 127 ) {
L__vRF4463MainCommandProcessor414:
L__vRF4463MainCommandProcessor413:
;DriverRF4463PROMain.c, 159 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x0C52	0x4869    LDR	R0, [PC, #420]
0x0C54	0xF7FFFC22  BL	_strlen+0
0x0C58	0xB201    SXTH	R1, R0
0x0C5A	0x4867    LDR	R0, [PC, #412]
0x0C5C	0xF7FFFCAE  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 160 :: 		}
L_vRF4463MainCommandProcessor236:
;DriverRF4463PROMain.c, 161 :: 		}
0x0C60	0xF000FBEE  BL	L_vRF4463MainCommandProcessor237
L_vRF4463MainCommandProcessor232:
;DriverRF4463PROMain.c, 165 :: 		else if ( memcmp( CMD_RADIO_BAND_SET, ucCommand, sizeof( CMD_RADIO_BAND_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x0C64	0x4669    MOV	R1, SP
0x0C66	0x2209    MOVS	R2, #9
0x0C68	0x4864    LDR	R0, [PC, #400]
0x0C6A	0xF7FFFD3D  BL	_memcmp+0
0x0C6E	0x2800    CMP	R0, #0
0x0C70	0xD135    BNE	L_vRF4463MainCommandProcessor238
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 166 :: 		ulArgument = StrToInt( ucLongArgument );
0x0C72	0x2120    MOVS	R1, #32
0x0C74	0x4469    ADD	R1, SP, R1
0x0C76	0x4608    MOV	R0, R1
0x0C78	0xF7FFFC1E  BL	_StrToInt+0
; ulArgument start address is: 0 (R0)
;DriverRF4463PROMain.c, 168 :: 		if ( ulArgument == 433 || ulArgument == 868 || ulArgument == 915 ) {
0x0C7C	0x21FF    MOVS	R1, #255
0x0C7E	0x31B2    ADDS	R1, #178
0x0C80	0x4288    CMP	R0, R1
0x0C82	0xD006    BEQ	L__vRF4463MainCommandProcessor417
0x0C84	0x495E    LDR	R1, [PC, #376]
0x0C86	0x4288    CMP	R0, R1
0x0C88	0xD003    BEQ	L__vRF4463MainCommandProcessor416
0x0C8A	0x495E    LDR	R1, [PC, #376]
0x0C8C	0x4288    CMP	R0, R1
0x0C8E	0xD000    BEQ	L__vRF4463MainCommandProcessor415
; ulArgument end address is: 0 (R0)
0x0C90	0xE01C    B	L_vRF4463MainCommandProcessor241
L__vRF4463MainCommandProcessor417:
L__vRF4463MainCommandProcessor416:
L__vRF4463MainCommandProcessor415:
;DriverRF4463PROMain.c, 169 :: 		ucRF4463Freq3 = ucLongArgument[ 0 ] - 48;
0x0C92	0x2320    MOVS	R3, #32
0x0C94	0x446B    ADD	R3, SP, R3
0x0C96	0x7819    LDRB	R1, [R3, #0]
0x0C98	0x460A    MOV	R2, R1
0x0C9A	0x3A30    SUBS	R2, #48
0x0C9C	0x495A    LDR	R1, [PC, #360]
0x0C9E	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 170 :: 		ucRF4463Freq2 = ucLongArgument[ 1 ] - 48;
0x0CA0	0x1C59    ADDS	R1, R3, #1
0x0CA2	0x7809    LDRB	R1, [R1, #0]
0x0CA4	0x460A    MOV	R2, R1
0x0CA6	0x3A30    SUBS	R2, #48
0x0CA8	0x4958    LDR	R1, [PC, #352]
0x0CAA	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 171 :: 		ucRF4463Freq1 = ucLongArgument[ 2 ] - 48;
0x0CAC	0x1C99    ADDS	R1, R3, #2
0x0CAE	0x7809    LDRB	R1, [R1, #0]
0x0CB0	0x460A    MOV	R2, R1
0x0CB2	0x3A30    SUBS	R2, #48
0x0CB4	0x4956    LDR	R1, [PC, #344]
0x0CB6	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 172 :: 		vRF4463MainApplyChanges();
0x0CB8	0xF7FFFF42  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 173 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0CBC	0x484D    LDR	R0, [PC, #308]
0x0CBE	0xF7FFFBED  BL	_strlen+0
0x0CC2	0xB201    SXTH	R1, R0
0x0CC4	0x484B    LDR	R0, [PC, #300]
0x0CC6	0xF7FFFC79  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 174 :: 		}
0x0CCA	0xE006    B	L_vRF4463MainCommandProcessor242
L_vRF4463MainCommandProcessor241:
;DriverRF4463PROMain.c, 176 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x0CCC	0x484A    LDR	R0, [PC, #296]
0x0CCE	0xF7FFFBE5  BL	_strlen+0
0x0CD2	0xB201    SXTH	R1, R0
0x0CD4	0x4848    LDR	R0, [PC, #288]
0x0CD6	0xF7FFFC71  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 177 :: 		}
L_vRF4463MainCommandProcessor242:
;DriverRF4463PROMain.c, 178 :: 		}
0x0CDA	0xF000FBB1  BL	L_vRF4463MainCommandProcessor243
L_vRF4463MainCommandProcessor238:
;DriverRF4463PROMain.c, 182 :: 		else if ( memcmp( CMD_RADIO_RATE_SET, ucCommand, sizeof( CMD_RADIO_RATE_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x0CDE	0x4669    MOV	R1, SP
0x0CE0	0x2209    MOVS	R2, #9
0x0CE2	0x484C    LDR	R0, [PC, #304]
0x0CE4	0xF7FFFD00  BL	_memcmp+0
0x0CE8	0x2800    CMP	R0, #0
0x0CEA	0xD000    BEQ	#0
0x0CEC	0xE0E6    B	L_vRF4463MainCommandProcessor244
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 183 :: 		ulArgument = StrToLong( ucLongArgument );
0x0CEE	0x2120    MOVS	R1, #32
0x0CF0	0x4469    ADD	R1, SP, R1
0x0CF2	0x4608    MOV	R0, R1
0x0CF4	0xF7FFFC84  BL	_StrToLong+0
; ulArgument start address is: 0 (R0)
;DriverRF4463PROMain.c, 185 :: 		switch ( ulArgument ) {
0x0CF8	0xE0B2    B	L_vRF4463MainCommandProcessor245
; ulArgument end address is: 0 (R0)
;DriverRF4463PROMain.c, 186 :: 		case 500      : ucRF4463Rate = dr_500;
L_vRF4463MainCommandProcessor247:
0x0CFA	0x220A    MOVS	R2, #10
0x0CFC	0x4946    LDR	R1, [PC, #280]
0x0CFE	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 187 :: 		vRF4463MainApplyChanges();
0x0D00	0xF7FFFF1E  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 188 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0D04	0x483B    LDR	R0, [PC, #236]
0x0D06	0xF7FFFBC9  BL	_strlen+0
0x0D0A	0xB201    SXTH	R1, R0
0x0D0C	0x4839    LDR	R0, [PC, #228]
0x0D0E	0xF7FFFC55  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 189 :: 		break;
0x0D12	0xE0D1    B	L_vRF4463MainCommandProcessor246
;DriverRF4463PROMain.c, 190 :: 		case 1200     : ucRF4463Rate = dr_1p2;
L_vRF4463MainCommandProcessor248:
0x0D14	0x2200    MOVS	R2, #0
0x0D16	0x4940    LDR	R1, [PC, #256]
0x0D18	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 191 :: 		vRF4463MainApplyChanges();
0x0D1A	0xF7FFFF11  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 192 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0D1E	0x4835    LDR	R0, [PC, #212]
0x0D20	0xF7FFFBBC  BL	_strlen+0
0x0D24	0xB201    SXTH	R1, R0
0x0D26	0x4833    LDR	R0, [PC, #204]
0x0D28	0xF7FFFC48  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 193 :: 		break;
0x0D2C	0xE0C4    B	L_vRF4463MainCommandProcessor246
;DriverRF4463PROMain.c, 194 :: 		case 2400     : ucRF4463Rate = dr_2p4;
L_vRF4463MainCommandProcessor249:
0x0D2E	0x2201    MOVS	R2, #1
0x0D30	0x4939    LDR	R1, [PC, #228]
0x0D32	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 195 :: 		vRF4463MainApplyChanges();
0x0D34	0xF7FFFF04  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 196 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0D38	0x482E    LDR	R0, [PC, #184]
0x0D3A	0xF7FFFBAF  BL	_strlen+0
0x0D3E	0xB201    SXTH	R1, R0
0x0D40	0x482C    LDR	R0, [PC, #176]
0x0D42	0xF7FFFC3B  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 197 :: 		break;
0x0D46	0xE0B7    B	L_vRF4463MainCommandProcessor246
;DriverRF4463PROMain.c, 198 :: 		case 4800     : ucRF4463Rate = dr_4p8;
L_vRF4463MainCommandProcessor250:
0x0D48	0x2202    MOVS	R2, #2
0x0D4A	0x4933    LDR	R1, [PC, #204]
0x0D4C	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 199 :: 		vRF4463MainApplyChanges();
0x0D4E	0xF7FFFEF7  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 200 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0D52	0x4828    LDR	R0, [PC, #160]
0x0D54	0xF7FFFBA2  BL	_strlen+0
0x0D58	0xB201    SXTH	R1, R0
0x0D5A	0x4826    LDR	R0, [PC, #152]
0x0D5C	0xF7FFFC2E  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 201 :: 		break;
0x0D60	0xE0AA    B	L_vRF4463MainCommandProcessor246
;DriverRF4463PROMain.c, 202 :: 		case 9600     : ucRF4463Rate = dr_9p6;
L_vRF4463MainCommandProcessor251:
0x0D62	0x2203    MOVS	R2, #3
0x0D64	0x492C    LDR	R1, [PC, #176]
0x0D66	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 203 :: 		vRF4463MainApplyChanges();
0x0D68	0xF7FFFEEA  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 204 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0D6C	0x4821    LDR	R0, [PC, #132]
0x0D6E	0xF7FFFB95  BL	_strlen+0
0x0D72	0xB201    SXTH	R1, R0
0x0D74	0x481F    LDR	R0, [PC, #124]
0x0D76	0xF7FFFC21  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 205 :: 		break;
0x0D7A	0xE09D    B	L_vRF4463MainCommandProcessor246
;DriverRF4463PROMain.c, 206 :: 		case 19200    : ucRF4463Rate = dr_19p2;
L_vRF4463MainCommandProcessor252:
0x0D7C	0x2204    MOVS	R2, #4
0x0D7E	0x4926    LDR	R1, [PC, #152]
0x0D80	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 207 :: 		vRF4463MainApplyChanges();
0x0D82	0xF7FFFEDD  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 208 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0D86	0x481B    LDR	R0, [PC, #108]
0x0D88	0xF7FFFB88  BL	_strlen+0
0x0D8C	0xB201    SXTH	R1, R0
0x0D8E	0x4819    LDR	R0, [PC, #100]
0x0D90	0xF7FFFC14  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 209 :: 		break;
0x0D94	0xE090    B	L_vRF4463MainCommandProcessor246
;DriverRF4463PROMain.c, 210 :: 		case 38400    : ucRF4463Rate = dr_38p4;
L_vRF4463MainCommandProcessor253:
0x0D96	0x2205    MOVS	R2, #5
0x0D98	0x491F    LDR	R1, [PC, #124]
0x0D9A	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 211 :: 		vRF4463MainApplyChanges();
0x0D9C	0xF7FFFED0  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 212 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0DA0	0x4814    LDR	R0, [PC, #80]
0x0DA2	0xF7FFFB7B  BL	_strlen+0
0x0DA6	0xB201    SXTH	R1, R0
0x0DA8	0x4812    LDR	R0, [PC, #72]
0x0DAA	0xF7FFFC07  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 213 :: 		break;
0x0DAE	0xE083    B	L_vRF4463MainCommandProcessor246
;DriverRF4463PROMain.c, 214 :: 		case 76800    : ucRF4463Rate = dr_76p8;
L_vRF4463MainCommandProcessor254:
0x0DB0	0x2206    MOVS	R2, #6
0x0DB2	0x4919    LDR	R1, [PC, #100]
0x0DB4	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 215 :: 		vRF4463MainApplyChanges();
0x0DB6	0xF7FFFEC3  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 216 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0DBA	0x480E    LDR	R0, [PC, #56]
0x0DBC	0xF7FFFB6E  BL	_strlen+0
0x0DC0	0xB201    SXTH	R1, R0
0x0DC2	0x480C    LDR	R0, [PC, #48]
0x0DC4	0xF7FFFBFA  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 217 :: 		break;
0x0DC8	0xE076    B	L_vRF4463MainCommandProcessor246
;DriverRF4463PROMain.c, 218 :: 		case 115200   : ucRF4463Rate = dr_115p2;
L_vRF4463MainCommandProcessor255:
0x0DCA	0x2207    MOVS	R2, #7
0x0DCC	0x4912    LDR	R1, [PC, #72]
0x0DCE	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 219 :: 		vRF4463MainApplyChanges();
0x0DD0	0xF7FFFEB6  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 220 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0DD4	0x4807    LDR	R0, [PC, #28]
0x0DD6	0xF7FFFB61  BL	_strlen+0
0x0DDA	0xB201    SXTH	R1, R0
0x0DDC	0x4805    LDR	R0, [PC, #20]
0x0DDE	0xF7FFFBED  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 221 :: 		break;
0x0DE2	0xE069    B	L_vRF4463MainCommandProcessor246
0x0DE4	0xE01A    B	#52
0x0DE6	0xBF00    NOP
0x0DE8	0x5CAC0000  	?ICSvRF4463MainCommandProcessor_ucCommand_L0+0
0x0DEC	0x200C2000  	_CMD_RADIO_POWER_SET+0
0x0DF0	0x22922000  	_ucRF4463Power+0
0x0DF4	0x20162000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x0DF8	0x203E2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x0DFC	0x205E2000  	_CMD_RADIO_BAND_SET+0
0x0E00	0x03640000  	#868
0x0E04	0x03930000  	#915
0x0E08	0x22932000  	_ucRF4463Freq3+0
0x0E0C	0x22942000  	_ucRF4463Freq2+0
0x0E10	0x22952000  	_ucRF4463Freq1+0
0x0E14	0x20672000  	_CMD_RADIO_RATE_SET+0
0x0E18	0x22962000  	_ucRF4463Rate+0
;DriverRF4463PROMain.c, 222 :: 		case 256000   : ucRF4463Rate = dr_256k;
L_vRF4463MainCommandProcessor256:
0x0E1C	0x2208    MOVS	R2, #8
0x0E1E	0x49A6    LDR	R1, [PC, #664]
0x0E20	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 223 :: 		vRF4463MainApplyChanges();
0x0E22	0xF7FFFE8D  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 224 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0E26	0x48A5    LDR	R0, [PC, #660]
0x0E28	0xF7FFFB38  BL	_strlen+0
0x0E2C	0xB201    SXTH	R1, R0
0x0E2E	0x48A3    LDR	R0, [PC, #652]
0x0E30	0xF7FFFBC4  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 225 :: 		break;
0x0E34	0xE040    B	L_vRF4463MainCommandProcessor246
;DriverRF4463PROMain.c, 226 :: 		case 500000   : ucRF4463Rate = dr_500k;
L_vRF4463MainCommandProcessor257:
0x0E36	0x2209    MOVS	R2, #9
0x0E38	0x499F    LDR	R1, [PC, #636]
0x0E3A	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 227 :: 		vRF4463MainApplyChanges();
0x0E3C	0xF7FFFE80  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 228 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0E40	0x489E    LDR	R0, [PC, #632]
0x0E42	0xF7FFFB2B  BL	_strlen+0
0x0E46	0xB201    SXTH	R1, R0
0x0E48	0x489C    LDR	R0, [PC, #624]
0x0E4A	0xF7FFFBB7  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 229 :: 		break;
0x0E4E	0xE033    B	L_vRF4463MainCommandProcessor246
;DriverRF4463PROMain.c, 230 :: 		default       : vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
L_vRF4463MainCommandProcessor258:
0x0E50	0x489B    LDR	R0, [PC, #620]
0x0E52	0xF7FFFB23  BL	_strlen+0
0x0E56	0xB201    SXTH	R1, R0
0x0E58	0x4899    LDR	R0, [PC, #612]
0x0E5A	0xF7FFFBAF  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 231 :: 		}
0x0E5E	0xE02B    B	L_vRF4463MainCommandProcessor246
L_vRF4463MainCommandProcessor245:
; ulArgument start address is: 0 (R0)
0x0E60	0x21FF    MOVS	R1, #255
0x0E62	0x31F5    ADDS	R1, #245
0x0E64	0x4288    CMP	R0, R1
0x0E66	0xD100    BNE	#0
0x0E68	0xE747    B	L_vRF4463MainCommandProcessor247
0x0E6A	0x4996    LDR	R1, [PC, #600]
0x0E6C	0x4288    CMP	R0, R1
0x0E6E	0xD100    BNE	#0
0x0E70	0xE750    B	L_vRF4463MainCommandProcessor248
0x0E72	0x4995    LDR	R1, [PC, #596]
0x0E74	0x4288    CMP	R0, R1
0x0E76	0xD100    BNE	#0
0x0E78	0xE759    B	L_vRF4463MainCommandProcessor249
0x0E7A	0x4994    LDR	R1, [PC, #592]
0x0E7C	0x4288    CMP	R0, R1
0x0E7E	0xD100    BNE	#0
0x0E80	0xE762    B	L_vRF4463MainCommandProcessor250
0x0E82	0x4993    LDR	R1, [PC, #588]
0x0E84	0x4288    CMP	R0, R1
0x0E86	0xD100    BNE	#0
0x0E88	0xE76B    B	L_vRF4463MainCommandProcessor251
0x0E8A	0x4992    LDR	R1, [PC, #584]
0x0E8C	0x4288    CMP	R0, R1
0x0E8E	0xD100    BNE	#0
0x0E90	0xE774    B	L_vRF4463MainCommandProcessor252
0x0E92	0x4991    LDR	R1, [PC, #580]
0x0E94	0x4288    CMP	R0, R1
0x0E96	0xD100    BNE	#0
0x0E98	0xE77D    B	L_vRF4463MainCommandProcessor253
0x0E9A	0x4990    LDR	R1, [PC, #576]
0x0E9C	0x4288    CMP	R0, R1
0x0E9E	0xD100    BNE	#0
0x0EA0	0xE786    B	L_vRF4463MainCommandProcessor254
0x0EA2	0x498F    LDR	R1, [PC, #572]
0x0EA4	0x4288    CMP	R0, R1
0x0EA6	0xD100    BNE	#0
0x0EA8	0xE78F    B	L_vRF4463MainCommandProcessor255
0x0EAA	0x498E    LDR	R1, [PC, #568]
0x0EAC	0x4288    CMP	R0, R1
0x0EAE	0xD0B5    BEQ	L_vRF4463MainCommandProcessor256
0x0EB0	0x498D    LDR	R1, [PC, #564]
0x0EB2	0x4288    CMP	R0, R1
0x0EB4	0xD0BF    BEQ	L_vRF4463MainCommandProcessor257
; ulArgument end address is: 0 (R0)
0x0EB6	0xE7CB    B	L_vRF4463MainCommandProcessor258
L_vRF4463MainCommandProcessor246:
;DriverRF4463PROMain.c, 232 :: 		}
0x0EB8	0xF000FAC2  BL	L_vRF4463MainCommandProcessor259
L_vRF4463MainCommandProcessor244:
;DriverRF4463PROMain.c, 236 :: 		else if ( memcmp( CMD_RADIO_CHANNEL_SET, ucCommand, sizeof( CMD_RADIO_CHANNEL_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x0EBC	0x4669    MOV	R1, SP
0x0EBE	0x220C    MOVS	R2, #12
0x0EC0	0x488A    LDR	R0, [PC, #552]
0x0EC2	0xF7FFFC11  BL	_memcmp+0
0x0EC6	0x2800    CMP	R0, #0
0x0EC8	0xD11C    BNE	L_vRF4463MainCommandProcessor260
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 237 :: 		ulArgument = StrToInt( ucLongArgument );
0x0ECA	0x2120    MOVS	R1, #32
0x0ECC	0x4469    ADD	R1, SP, R1
0x0ECE	0x4608    MOV	R0, R1
0x0ED0	0xF7FFFAF2  BL	_StrToInt+0
; ulArgument start address is: 0 (R0)
;DriverRF4463PROMain.c, 239 :: 		if ( ulArgument >= 0 && ulArgument <= 50 ) {
0x0ED4	0x2800    CMP	R0, #0
0x0ED6	0xD30D    BCC	L__vRF4463MainCommandProcessor419
0x0ED8	0x2832    CMP	R0, #50
0x0EDA	0xD80B    BHI	L__vRF4463MainCommandProcessor418
L__vRF4463MainCommandProcessor401:
;DriverRF4463PROMain.c, 240 :: 		ucRF4463FreqChannel = ulArgument;    // Se aplica al ejecutar funciones de TX o RX
0x0EDC	0x4984    LDR	R1, [PC, #528]
0x0EDE	0x7008    STRB	R0, [R1, #0]
; ulArgument end address is: 0 (R0)
;DriverRF4463PROMain.c, 241 :: 		vRF4463MainApplyChanges();
0x0EE0	0xF7FFFE2E  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 242 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0EE4	0x4875    LDR	R0, [PC, #468]
0x0EE6	0xF7FFFAD9  BL	_strlen+0
0x0EEA	0xB201    SXTH	R1, R0
0x0EEC	0x4873    LDR	R0, [PC, #460]
0x0EEE	0xF7FFFB65  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 243 :: 		}
0x0EF2	0xE006    B	L_vRF4463MainCommandProcessor264
;DriverRF4463PROMain.c, 239 :: 		if ( ulArgument >= 0 && ulArgument <= 50 ) {
L__vRF4463MainCommandProcessor419:
L__vRF4463MainCommandProcessor418:
;DriverRF4463PROMain.c, 245 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x0EF4	0x4872    LDR	R0, [PC, #456]
0x0EF6	0xF7FFFAD1  BL	_strlen+0
0x0EFA	0xB201    SXTH	R1, R0
0x0EFC	0x4870    LDR	R0, [PC, #448]
0x0EFE	0xF7FFFB5D  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 246 :: 		}
L_vRF4463MainCommandProcessor264:
;DriverRF4463PROMain.c, 247 :: 		}
0x0F02	0xE29D    B	L_vRF4463MainCommandProcessor265
L_vRF4463MainCommandProcessor260:
;DriverRF4463PROMain.c, 251 :: 		else if ( memcmp( CMD_RADIO_BW_SET, ucCommand, sizeof( CMD_RADIO_BW_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x0F04	0x4669    MOV	R1, SP
0x0F06	0x2207    MOVS	R2, #7
0x0F08	0x487A    LDR	R0, [PC, #488]
0x0F0A	0xF7FFFBED  BL	_memcmp+0
0x0F0E	0x2800    CMP	R0, #0
0x0F10	0xD11F    BNE	L_vRF4463MainCommandProcessor266
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 252 :: 		ulArgument = StrToInt( ucLongArgument );
0x0F12	0x2120    MOVS	R1, #32
0x0F14	0x4469    ADD	R1, SP, R1
0x0F16	0x4608    MOV	R0, R1
0x0F18	0xF7FFFACE  BL	_StrToInt+0
; ulArgument start address is: 0 (R0)
;DriverRF4463PROMain.c, 254 :: 		if ( ulArgument == 250 || ulArgument == 500 ) {
0x0F1C	0x28FA    CMP	R0, #250
0x0F1E	0xD004    BEQ	L__vRF4463MainCommandProcessor421
0x0F20	0x21FF    MOVS	R1, #255
0x0F22	0x31F5    ADDS	R1, #245
0x0F24	0x4288    CMP	R0, R1
0x0F26	0xD000    BEQ	L__vRF4463MainCommandProcessor420
; ulArgument end address is: 0 (R0)
0x0F28	0xE00B    B	L_vRF4463MainCommandProcessor269
L__vRF4463MainCommandProcessor421:
; ulArgument start address is: 0 (R0)
L__vRF4463MainCommandProcessor420:
;DriverRF4463PROMain.c, 255 :: 		ulRF4463Step = ulArgument;
0x0F2A	0x4973    LDR	R1, [PC, #460]
0x0F2C	0x6008    STR	R0, [R1, #0]
; ulArgument end address is: 0 (R0)
;DriverRF4463PROMain.c, 256 :: 		vRF4463MainApplyChanges();
0x0F2E	0xF7FFFE07  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 257 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x0F32	0x4862    LDR	R0, [PC, #392]
0x0F34	0xF7FFFAB2  BL	_strlen+0
0x0F38	0xB201    SXTH	R1, R0
0x0F3A	0x4860    LDR	R0, [PC, #384]
0x0F3C	0xF7FFFB3E  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 258 :: 		}
0x0F40	0xE006    B	L_vRF4463MainCommandProcessor270
L_vRF4463MainCommandProcessor269:
;DriverRF4463PROMain.c, 260 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x0F42	0x485F    LDR	R0, [PC, #380]
0x0F44	0xF7FFFAAA  BL	_strlen+0
0x0F48	0xB201    SXTH	R1, R0
0x0F4A	0x485D    LDR	R0, [PC, #372]
0x0F4C	0xF7FFFB36  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 261 :: 		}
L_vRF4463MainCommandProcessor270:
;DriverRF4463PROMain.c, 262 :: 		}
0x0F50	0xE276    B	L_vRF4463MainCommandProcessor271
L_vRF4463MainCommandProcessor266:
;DriverRF4463PROMain.c, 269 :: 		else if ( memcmp( CMD_RADIO_MODE_SET, ucCommand, sizeof( CMD_RADIO_MODE_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x0F52	0x4669    MOV	R1, SP
0x0F54	0x2209    MOVS	R2, #9
0x0F56	0x4869    LDR	R0, [PC, #420]
0x0F58	0xF7FFFBC6  BL	_memcmp+0
0x0F5C	0x2800    CMP	R0, #0
0x0F5E	0xD000    BEQ	#0
0x0F60	0xE080    B	L_vRF4463MainCommandProcessor272
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 271 :: 		ucCounterCommand = 0;
; ucCounterCommand start address is: 12 (R3)
0x0F62	0x2300    MOVS	R3, #0
; ucCounterCommand end address is: 12 (R3)
;DriverRF4463PROMain.c, 273 :: 		while ( ucLongArgument[ ucCounterCommand ] != ucUSARTNull && ucCounterCommand < 32 ) {
L_vRF4463MainCommandProcessor273:
; ucCounterCommand start address is: 12 (R3)
0x0F64	0x2120    MOVS	R1, #32
0x0F66	0x4469    ADD	R1, SP, R1
0x0F68	0x18C9    ADDS	R1, R1, R3
0x0F6A	0x780A    LDRB	R2, [R1, #0]
0x0F6C	0x4964    LDR	R1, [PC, #400]
0x0F6E	0x7809    LDRB	R1, [R1, #0]
0x0F70	0x428A    CMP	R2, R1
0x0F72	0xD00E    BEQ	L__vRF4463MainCommandProcessor423
0x0F74	0x2B20    CMP	R3, #32
0x0F76	0xD20C    BCS	L__vRF4463MainCommandProcessor422
L__vRF4463MainCommandProcessor399:
;DriverRF4463PROMain.c, 274 :: 		ucLongArgument[ ucCounterCommand ] = toupper( ucLongArgument[ ucCounterCommand ] );
0x0F78	0x2120    MOVS	R1, #32
0x0F7A	0x4469    ADD	R1, SP, R1
0x0F7C	0x18C9    ADDS	R1, R1, R3
0x0F7E	0x9118    STR	R1, [SP, #96]
0x0F80	0x7809    LDRB	R1, [R1, #0]
0x0F82	0xB2C8    UXTB	R0, R1
0x0F84	0xF7FFFD16  BL	_toupper+0
0x0F88	0x9918    LDR	R1, [SP, #96]
0x0F8A	0x7008    STRB	R0, [R1, #0]
;DriverRF4463PROMain.c, 275 :: 		ucCounterCommand++;
0x0F8C	0x3301    ADDS	R3, #1
0x0F8E	0xB2DB    UXTB	R3, R3
;DriverRF4463PROMain.c, 276 :: 		}
; ucCounterCommand end address is: 12 (R3)
0x0F90	0xE7E8    B	L_vRF4463MainCommandProcessor273
;DriverRF4463PROMain.c, 273 :: 		while ( ucLongArgument[ ucCounterCommand ] != ucUSARTNull && ucCounterCommand < 32 ) {
L__vRF4463MainCommandProcessor423:
L__vRF4463MainCommandProcessor422:
;DriverRF4463PROMain.c, 279 :: 		if ( memcmp( ARG_RADIO_MODE_STBY, ucLongArgument, sizeof( ARG_RADIO_MODE_STBY ) ) == 0x00 ) {
0x0F92	0x2120    MOVS	R1, #32
0x0F94	0x4469    ADD	R1, SP, R1
0x0F96	0x2205    MOVS	R2, #5
0x0F98	0x485A    LDR	R0, [PC, #360]
0x0F9A	0xF7FFFBA5  BL	_memcmp+0
0x0F9E	0x2800    CMP	R0, #0
0x0FA0	0xD10A    BNE	L_vRF4463MainCommandProcessor277
;DriverRF4463PROMain.c, 280 :: 		ucRF4463Mode = rf_off;
0x0FA2	0x2204    MOVS	R2, #4
0x0FA4	0x4958    LDR	R1, [PC, #352]
0x0FA6	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 281 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_STBY, strlen( ANS_COMMAND_MODE_STBY ) );
0x0FA8	0x4858    LDR	R0, [PC, #352]
0x0FAA	0xF7FFFA77  BL	_strlen+0
0x0FAE	0xB201    SXTH	R1, R0
0x0FB0	0x4856    LDR	R0, [PC, #344]
0x0FB2	0xF7FFFB03  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 282 :: 		}
0x0FB6	0xE054    B	L_vRF4463MainCommandProcessor278
L_vRF4463MainCommandProcessor277:
;DriverRF4463PROMain.c, 283 :: 		else if ( memcmp( ARG_RADIO_MODE_TX_CONT, ucLongArgument, sizeof( ARG_RADIO_MODE_TX_CONT ) ) == 0x00 ) {
0x0FB8	0x2120    MOVS	R1, #32
0x0FBA	0x4469    ADD	R1, SP, R1
0x0FBC	0x2208    MOVS	R2, #8
0x0FBE	0x4854    LDR	R0, [PC, #336]
0x0FC0	0xF7FFFB92  BL	_memcmp+0
0x0FC4	0x2800    CMP	R0, #0
0x0FC6	0xD10C    BNE	L_vRF4463MainCommandProcessor279
;DriverRF4463PROMain.c, 284 :: 		ucRF4463Mode = tx_test_mode;
0x0FC8	0x2202    MOVS	R2, #2
0x0FCA	0x494F    LDR	R1, [PC, #316]
0x0FCC	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 285 :: 		vRF4463MainApplyChanges();
0x0FCE	0xF7FFFDB7  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 286 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_TX_CONT, strlen( ANS_COMMAND_MODE_TX_CONT ) );
0x0FD2	0x4850    LDR	R0, [PC, #320]
0x0FD4	0xF7FFFA62  BL	_strlen+0
0x0FD8	0xB201    SXTH	R1, R0
0x0FDA	0x484E    LDR	R0, [PC, #312]
0x0FDC	0xF7FFFAEE  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 287 :: 		}
0x0FE0	0xE03F    B	L_vRF4463MainCommandProcessor280
L_vRF4463MainCommandProcessor279:
;DriverRF4463PROMain.c, 288 :: 		else if ( memcmp( ARG_RADIO_MODE_RX_CONT, ucLongArgument, sizeof( ARG_RADIO_MODE_RX_CONT ) ) == 0x00 ) {
0x0FE2	0x2120    MOVS	R1, #32
0x0FE4	0x4469    ADD	R1, SP, R1
0x0FE6	0x2208    MOVS	R2, #8
0x0FE8	0x484B    LDR	R0, [PC, #300]
0x0FEA	0xF7FFFB7D  BL	_memcmp+0
0x0FEE	0x2800    CMP	R0, #0
0x0FF0	0xD10A    BNE	L_vRF4463MainCommandProcessor281
;DriverRF4463PROMain.c, 289 :: 		ucRF4463Mode = rx_test_mode;
0x0FF2	0x2203    MOVS	R2, #3
0x0FF4	0x4944    LDR	R1, [PC, #272]
0x0FF6	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 290 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_RX_CONT, strlen( ANS_COMMAND_MODE_RX_CONT ) );
0x0FF8	0x4848    LDR	R0, [PC, #288]
0x0FFA	0xF7FFFA4F  BL	_strlen+0
0x0FFE	0xB201    SXTH	R1, R0
0x1000	0x4846    LDR	R0, [PC, #280]
0x1002	0xF7FFFADB  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 291 :: 		}
0x1006	0xE02C    B	L_vRF4463MainCommandProcessor282
L_vRF4463MainCommandProcessor281:
;DriverRF4463PROMain.c, 292 :: 		else if ( memcmp( ARG_RADIO_MODE_TX_MASTER, ucLongArgument, sizeof( ARG_RADIO_MODE_TX_MASTER ) ) == 0x00 ) {
0x1008	0x2120    MOVS	R1, #32
0x100A	0x4469    ADD	R1, SP, R1
0x100C	0x220A    MOVS	R2, #10
0x100E	0x4844    LDR	R0, [PC, #272]
0x1010	0xF7FFFB6A  BL	_memcmp+0
0x1014	0x2800    CMP	R0, #0
0x1016	0xD10A    BNE	L_vRF4463MainCommandProcessor283
;DriverRF4463PROMain.c, 293 :: 		ucRF4463Mode = master_mode;
0x1018	0x2200    MOVS	R2, #0
0x101A	0x493B    LDR	R1, [PC, #236]
0x101C	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 294 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_TX_MASTER, strlen( ANS_COMMAND_MODE_TX_MASTER ) );
0x101E	0x4841    LDR	R0, [PC, #260]
0x1020	0xF7FFFA3C  BL	_strlen+0
0x1024	0xB201    SXTH	R1, R0
0x1026	0x483F    LDR	R0, [PC, #252]
0x1028	0xF7FFFAC8  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 295 :: 		}
0x102C	0xE019    B	L_vRF4463MainCommandProcessor284
L_vRF4463MainCommandProcessor283:
;DriverRF4463PROMain.c, 296 :: 		else if ( memcmp( ARG_RADIO_MODE_RX_SLAVE, ucLongArgument, sizeof( ARG_RADIO_MODE_RX_SLAVE ) ) == 0x00 ) {
0x102E	0x2120    MOVS	R1, #32
0x1030	0x4469    ADD	R1, SP, R1
0x1032	0x2209    MOVS	R2, #9
0x1034	0x483C    LDR	R0, [PC, #240]
0x1036	0xF7FFFB57  BL	_memcmp+0
0x103A	0x2800    CMP	R0, #0
0x103C	0xD10A    BNE	L_vRF4463MainCommandProcessor285
;DriverRF4463PROMain.c, 297 :: 		ucRF4463Mode = slave_mode;
0x103E	0x2201    MOVS	R2, #1
0x1040	0x4931    LDR	R1, [PC, #196]
0x1042	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 298 :: 		vUSART1Start_TX( ANS_COMMAND_MODE_RX_SLAVE, strlen( ANS_COMMAND_MODE_RX_SLAVE ) );
0x1044	0x4839    LDR	R0, [PC, #228]
0x1046	0xF7FFFA29  BL	_strlen+0
0x104A	0xB201    SXTH	R1, R0
0x104C	0x4837    LDR	R0, [PC, #220]
0x104E	0xF7FFFAB5  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 299 :: 		}
0x1052	0xE006    B	L_vRF4463MainCommandProcessor286
L_vRF4463MainCommandProcessor285:
;DriverRF4463PROMain.c, 301 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1054	0x481A    LDR	R0, [PC, #104]
0x1056	0xF7FFFA21  BL	_strlen+0
0x105A	0xB201    SXTH	R1, R0
0x105C	0x4818    LDR	R0, [PC, #96]
0x105E	0xF7FFFAAD  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 302 :: 		}
L_vRF4463MainCommandProcessor286:
L_vRF4463MainCommandProcessor284:
L_vRF4463MainCommandProcessor282:
L_vRF4463MainCommandProcessor280:
L_vRF4463MainCommandProcessor278:
;DriverRF4463PROMain.c, 303 :: 		}
0x1062	0xE1ED    B	L_vRF4463MainCommandProcessor287
L_vRF4463MainCommandProcessor272:
;DriverRF4463PROMain.c, 308 :: 		else if ( memcmp( CMD_RADIO_PACKET_SEND, ucCommand, sizeof( CMD_RADIO_PACKET_SEND ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x1064	0x4669    MOV	R1, SP
0x1066	0x220C    MOVS	R2, #12
0x1068	0x4831    LDR	R0, [PC, #196]
0x106A	0xF7FFFB3D  BL	_memcmp+0
0x106E	0x2800    CMP	R0, #0
0x1070	0xD10C    BNE	L_vRF4463MainCommandProcessor288
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 312 :: 		ulArgument = StrToLong( ucLongArgument );
0x1072	0x2120    MOVS	R1, #32
0x1074	0x4469    ADD	R1, SP, R1
0x1076	0x4608    MOV	R0, R1
0x1078	0xF7FFFAC2  BL	_StrToLong+0
;DriverRF4463PROMain.c, 314 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x107C	0x4810    LDR	R0, [PC, #64]
0x107E	0xF7FFFA0D  BL	_strlen+0
0x1082	0xB201    SXTH	R1, R0
0x1084	0x480E    LDR	R0, [PC, #56]
0x1086	0xF7FFFA99  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 316 :: 		}
0x108A	0xE1D9    B	L_vRF4463MainCommandProcessor289
L_vRF4463MainCommandProcessor288:
;DriverRF4463PROMain.c, 321 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_1_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_1_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x108C	0x4669    MOV	R1, SP
0x108E	0x220C    MOVS	R2, #12
0x1090	0x4828    LDR	R0, [PC, #160]
0x1092	0xF7FFFB29  BL	_memcmp+0
0x1096	0x2800    CMP	R0, #0
0x1098	0xD167    BNE	L_vRF4463MainCommandProcessor290
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 322 :: 		ulArgument = StrToLong( ucLongArgument );
0x109A	0x2120    MOVS	R1, #32
0x109C	0x4469    ADD	R1, SP, R1
0x109E	0x4608    MOV	R0, R1
0x10A0	0xF7FFFAAE  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x10A4	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 323 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x10A6	0x2800    CMP	R0, #0
0x10A8	0xD357    BCC	L__vRF4463MainCommandProcessor425
0x10AA	0x2AFF    CMP	R2, #255
0x10AC	0xD855    BHI	L__vRF4463MainCommandProcessor424
L__vRF4463MainCommandProcessor398:
;DriverRF4463PROMain.c, 324 :: 		ucRF4463ByteMatch1 = ulArgument;
0x10AE	0x4922    LDR	R1, [PC, #136]
0x10B0	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 325 :: 		ucRF4463MatchEnabled = 1;
0x10B2	0x2201    MOVS	R2, #1
0x10B4	0xE042    B	#132
0x10B6	0xBF00    NOP
0x10B8	0x22962000  	_ucRF4463Rate+0
0x10BC	0x20162000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x10C0	0x203E2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x10C4	0x04B00000  	#1200
0x10C8	0x09600000  	#2400
0x10CC	0x12C00000  	#4800
0x10D0	0x25800000  	#9600
0x10D4	0x4B000000  	#19200
0x10D8	0x96000000  	#38400
0x10DC	0x2C000001  	#76800
0x10E0	0xC2000001  	#115200
0x10E4	0xE8000003  	#256000
0x10E8	0xA1200007  	#500000
0x10EC	0x20702000  	_CMD_RADIO_CHANNEL_SET+0
0x10F0	0x207C2000  	_ucRF4463FreqChannel+0
0x10F4	0x207D2000  	_CMD_RADIO_BW_SET+0
0x10F8	0x20842000  	_ulRF4463Step+0
0x10FC	0x20882000  	_CMD_RADIO_MODE_SET+0
0x1100	0x20912000  	_ucUSARTNull+0
0x1104	0x20922000  	_ARG_RADIO_MODE_STBY+0
0x1108	0x22972000  	_ucRF4463Mode+0
0x110C	0x20972000  	_ANS_COMMAND_MODE_STBY+0
0x1110	0x20B92000  	_ARG_RADIO_MODE_TX_CONT+0
0x1114	0x20C12000  	_ANS_COMMAND_MODE_TX_CONT+0
0x1118	0x20E32000  	_ARG_RADIO_MODE_RX_CONT+0
0x111C	0x20EB2000  	_ANS_COMMAND_MODE_RX_CONT+0
0x1120	0x210D2000  	_ARG_RADIO_MODE_TX_MASTER+0
0x1124	0x21172000  	_ANS_COMMAND_MODE_TX_MASTER+0
0x1128	0x213B2000  	_ARG_RADIO_MODE_RX_SLAVE+0
0x112C	0x21442000  	_ANS_COMMAND_MODE_RX_SLAVE+0
0x1130	0x21672000  	_CMD_RADIO_PACKET_SEND+0
0x1134	0x21732000  	_CMD_RADIO_MATCH_BYTE_1_SET+0
0x1138	0x217F2000  	_ucRF4463ByteMatch1+0
0x113C	0x49A4    LDR	R1, [PC, #656]
0x113E	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 326 :: 		ucRF4463MatchEnableReg = 0x40;
0x1140	0x2240    MOVS	R2, #64
0x1142	0x49A4    LDR	R1, [PC, #656]
0x1144	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 327 :: 		vRF4463MainApplyChanges();
0x1146	0xF7FFFCFB  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 328 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x114A	0x48A3    LDR	R0, [PC, #652]
0x114C	0xF7FFF9A6  BL	_strlen+0
0x1150	0xB201    SXTH	R1, R0
0x1152	0x48A1    LDR	R0, [PC, #644]
0x1154	0xF7FFFA32  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 329 :: 		}
0x1158	0xE006    B	L_vRF4463MainCommandProcessor294
;DriverRF4463PROMain.c, 323 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor425:
L__vRF4463MainCommandProcessor424:
;DriverRF4463PROMain.c, 331 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x115A	0x48A0    LDR	R0, [PC, #640]
0x115C	0xF7FFF99E  BL	_strlen+0
0x1160	0xB201    SXTH	R1, R0
0x1162	0x489E    LDR	R0, [PC, #632]
0x1164	0xF7FFFA2A  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 332 :: 		}
L_vRF4463MainCommandProcessor294:
;DriverRF4463PROMain.c, 333 :: 		}
0x1168	0xE16A    B	L_vRF4463MainCommandProcessor295
L_vRF4463MainCommandProcessor290:
;DriverRF4463PROMain.c, 337 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_2_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_2_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x116A	0x4669    MOV	R1, SP
0x116C	0x220C    MOVS	R2, #12
0x116E	0x489C    LDR	R0, [PC, #624]
0x1170	0xF7FFFABA  BL	_memcmp+0
0x1174	0x2800    CMP	R0, #0
0x1176	0xD123    BNE	L_vRF4463MainCommandProcessor296
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 338 :: 		ulArgument = StrToLong( ucLongArgument );
0x1178	0x2120    MOVS	R1, #32
0x117A	0x4469    ADD	R1, SP, R1
0x117C	0x4608    MOV	R0, R1
0x117E	0xF7FFFA3F  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x1182	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 339 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1184	0x2800    CMP	R0, #0
0x1186	0xD313    BCC	L__vRF4463MainCommandProcessor427
0x1188	0x2AFF    CMP	R2, #255
0x118A	0xD811    BHI	L__vRF4463MainCommandProcessor426
L__vRF4463MainCommandProcessor397:
;DriverRF4463PROMain.c, 340 :: 		ucRF4463ByteMatch2 = ulArgument;
0x118C	0x4995    LDR	R1, [PC, #596]
0x118E	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 341 :: 		ucRF4463MatchEnabled = 1;
0x1190	0x2201    MOVS	R2, #1
0x1192	0x498F    LDR	R1, [PC, #572]
0x1194	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 342 :: 		ucRF4463MatchEnableReg = 0x40;
0x1196	0x2240    MOVS	R2, #64
0x1198	0x498E    LDR	R1, [PC, #568]
0x119A	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 343 :: 		vRF4463MainApplyChanges();
0x119C	0xF7FFFCD0  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 344 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x11A0	0x488D    LDR	R0, [PC, #564]
0x11A2	0xF7FFF97B  BL	_strlen+0
0x11A6	0xB201    SXTH	R1, R0
0x11A8	0x488B    LDR	R0, [PC, #556]
0x11AA	0xF7FFFA07  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 345 :: 		}
0x11AE	0xE006    B	L_vRF4463MainCommandProcessor300
;DriverRF4463PROMain.c, 339 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor427:
L__vRF4463MainCommandProcessor426:
;DriverRF4463PROMain.c, 347 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x11B0	0x488A    LDR	R0, [PC, #552]
0x11B2	0xF7FFF973  BL	_strlen+0
0x11B6	0xB201    SXTH	R1, R0
0x11B8	0x4888    LDR	R0, [PC, #544]
0x11BA	0xF7FFF9FF  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 348 :: 		}
L_vRF4463MainCommandProcessor300:
;DriverRF4463PROMain.c, 349 :: 		}
0x11BE	0xE13F    B	L_vRF4463MainCommandProcessor301
L_vRF4463MainCommandProcessor296:
;DriverRF4463PROMain.c, 353 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_3_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_3_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x11C0	0x4669    MOV	R1, SP
0x11C2	0x220C    MOVS	R2, #12
0x11C4	0x4888    LDR	R0, [PC, #544]
0x11C6	0xF7FFFA8F  BL	_memcmp+0
0x11CA	0x2800    CMP	R0, #0
0x11CC	0xD123    BNE	L_vRF4463MainCommandProcessor302
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 354 :: 		ulArgument = StrToLong( ucLongArgument );
0x11CE	0x2120    MOVS	R1, #32
0x11D0	0x4469    ADD	R1, SP, R1
0x11D2	0x4608    MOV	R0, R1
0x11D4	0xF7FFFA14  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x11D8	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 355 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x11DA	0x2800    CMP	R0, #0
0x11DC	0xD313    BCC	L__vRF4463MainCommandProcessor429
0x11DE	0x2AFF    CMP	R2, #255
0x11E0	0xD811    BHI	L__vRF4463MainCommandProcessor428
L__vRF4463MainCommandProcessor396:
;DriverRF4463PROMain.c, 356 :: 		ucRF4463ByteMatch3 = ulArgument;
0x11E2	0x4982    LDR	R1, [PC, #520]
0x11E4	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 357 :: 		ucRF4463MatchEnabled = 1;
0x11E6	0x2201    MOVS	R2, #1
0x11E8	0x4979    LDR	R1, [PC, #484]
0x11EA	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 358 :: 		ucRF4463MatchEnableReg = 0x40;
0x11EC	0x2240    MOVS	R2, #64
0x11EE	0x4979    LDR	R1, [PC, #484]
0x11F0	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 359 :: 		vRF4463MainApplyChanges();
0x11F2	0xF7FFFCA5  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 360 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x11F6	0x4878    LDR	R0, [PC, #480]
0x11F8	0xF7FFF950  BL	_strlen+0
0x11FC	0xB201    SXTH	R1, R0
0x11FE	0x4876    LDR	R0, [PC, #472]
0x1200	0xF7FFF9DC  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 361 :: 		}
0x1204	0xE006    B	L_vRF4463MainCommandProcessor306
;DriverRF4463PROMain.c, 355 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor429:
L__vRF4463MainCommandProcessor428:
;DriverRF4463PROMain.c, 363 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x1206	0x4875    LDR	R0, [PC, #468]
0x1208	0xF7FFF948  BL	_strlen+0
0x120C	0xB201    SXTH	R1, R0
0x120E	0x4873    LDR	R0, [PC, #460]
0x1210	0xF7FFF9D4  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 364 :: 		}
L_vRF4463MainCommandProcessor306:
;DriverRF4463PROMain.c, 365 :: 		}
0x1214	0xE114    B	L_vRF4463MainCommandProcessor307
L_vRF4463MainCommandProcessor302:
;DriverRF4463PROMain.c, 369 :: 		else if ( memcmp( CMD_RADIO_MATCH_BYTE_4_SET, ucCommand, sizeof( CMD_RADIO_MATCH_BYTE_4_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x1216	0x4669    MOV	R1, SP
0x1218	0x220C    MOVS	R2, #12
0x121A	0x4875    LDR	R0, [PC, #468]
0x121C	0xF7FFFA64  BL	_memcmp+0
0x1220	0x2800    CMP	R0, #0
0x1222	0xD123    BNE	L_vRF4463MainCommandProcessor308
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 370 :: 		ulArgument = StrToLong( ucLongArgument );
0x1224	0x2120    MOVS	R1, #32
0x1226	0x4469    ADD	R1, SP, R1
0x1228	0x4608    MOV	R0, R1
0x122A	0xF7FFF9E9  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x122E	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 371 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1230	0x2800    CMP	R0, #0
0x1232	0xD313    BCC	L__vRF4463MainCommandProcessor431
0x1234	0x2AFF    CMP	R2, #255
0x1236	0xD811    BHI	L__vRF4463MainCommandProcessor430
L__vRF4463MainCommandProcessor395:
;DriverRF4463PROMain.c, 372 :: 		ucRF4463ByteMatch4 = ulArgument;
0x1238	0x496E    LDR	R1, [PC, #440]
0x123A	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 373 :: 		ucRF4463MatchEnabled = 1;
0x123C	0x2201    MOVS	R2, #1
0x123E	0x4964    LDR	R1, [PC, #400]
0x1240	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 374 :: 		ucRF4463MatchEnableReg = 0x40;
0x1242	0x2240    MOVS	R2, #64
0x1244	0x4963    LDR	R1, [PC, #396]
0x1246	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 375 :: 		vRF4463MainApplyChanges();
0x1248	0xF7FFFC7A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 376 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x124C	0x4862    LDR	R0, [PC, #392]
0x124E	0xF7FFF925  BL	_strlen+0
0x1252	0xB201    SXTH	R1, R0
0x1254	0x4860    LDR	R0, [PC, #384]
0x1256	0xF7FFF9B1  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 377 :: 		}
0x125A	0xE006    B	L_vRF4463MainCommandProcessor312
;DriverRF4463PROMain.c, 371 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor431:
L__vRF4463MainCommandProcessor430:
;DriverRF4463PROMain.c, 379 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x125C	0x485F    LDR	R0, [PC, #380]
0x125E	0xF7FFF91D  BL	_strlen+0
0x1262	0xB201    SXTH	R1, R0
0x1264	0x485D    LDR	R0, [PC, #372]
0x1266	0xF7FFF9A9  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 380 :: 		}
L_vRF4463MainCommandProcessor312:
;DriverRF4463PROMain.c, 381 :: 		}
0x126A	0xE0E9    B	L_vRF4463MainCommandProcessor313
L_vRF4463MainCommandProcessor308:
;DriverRF4463PROMain.c, 385 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_1_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_1_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x126C	0x4669    MOV	R1, SP
0x126E	0x220B    MOVS	R2, #11
0x1270	0x4861    LDR	R0, [PC, #388]
0x1272	0xF7FFFA39  BL	_memcmp+0
0x1276	0x2800    CMP	R0, #0
0x1278	0xD120    BNE	L_vRF4463MainCommandProcessor314
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 386 :: 		ulArgument = StrToLong( ucLongArgument );
0x127A	0x2120    MOVS	R1, #32
0x127C	0x4469    ADD	R1, SP, R1
0x127E	0x4608    MOV	R0, R1
0x1280	0xF7FFF9BE  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x1284	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 387 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1286	0x2800    CMP	R0, #0
0x1288	0xD310    BCC	L__vRF4463MainCommandProcessor433
0x128A	0x2AFF    CMP	R2, #255
0x128C	0xD80E    BHI	L__vRF4463MainCommandProcessor432
L__vRF4463MainCommandProcessor394:
;DriverRF4463PROMain.c, 388 :: 		ucRF4463ByteMask1 = ulArgument;
0x128E	0x495B    LDR	R1, [PC, #364]
0x1290	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 389 :: 		ucRF4463MatchEnabled = 1;
0x1292	0x2201    MOVS	R2, #1
0x1294	0x494E    LDR	R1, [PC, #312]
0x1296	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 390 :: 		vRF4463MainApplyChanges();
0x1298	0xF7FFFC52  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 391 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x129C	0x484E    LDR	R0, [PC, #312]
0x129E	0xF7FFF8FD  BL	_strlen+0
0x12A2	0xB201    SXTH	R1, R0
0x12A4	0x484C    LDR	R0, [PC, #304]
0x12A6	0xF7FFF989  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 392 :: 		}
0x12AA	0xE006    B	L_vRF4463MainCommandProcessor318
;DriverRF4463PROMain.c, 387 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor433:
L__vRF4463MainCommandProcessor432:
;DriverRF4463PROMain.c, 394 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x12AC	0x484B    LDR	R0, [PC, #300]
0x12AE	0xF7FFF8F5  BL	_strlen+0
0x12B2	0xB201    SXTH	R1, R0
0x12B4	0x4849    LDR	R0, [PC, #292]
0x12B6	0xF7FFF981  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 395 :: 		}
L_vRF4463MainCommandProcessor318:
;DriverRF4463PROMain.c, 396 :: 		}
0x12BA	0xE0C1    B	L_vRF4463MainCommandProcessor319
L_vRF4463MainCommandProcessor314:
;DriverRF4463PROMain.c, 400 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_2_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_2_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x12BC	0x4669    MOV	R1, SP
0x12BE	0x220B    MOVS	R2, #11
0x12C0	0x484F    LDR	R0, [PC, #316]
0x12C2	0xF7FFFA11  BL	_memcmp+0
0x12C6	0x2800    CMP	R0, #0
0x12C8	0xD120    BNE	L_vRF4463MainCommandProcessor320
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 401 :: 		ulArgument = StrToLong( ucLongArgument );
0x12CA	0x2120    MOVS	R1, #32
0x12CC	0x4469    ADD	R1, SP, R1
0x12CE	0x4608    MOV	R0, R1
0x12D0	0xF7FFF996  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x12D4	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 402 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x12D6	0x2800    CMP	R0, #0
0x12D8	0xD310    BCC	L__vRF4463MainCommandProcessor435
0x12DA	0x2AFF    CMP	R2, #255
0x12DC	0xD80E    BHI	L__vRF4463MainCommandProcessor434
L__vRF4463MainCommandProcessor393:
;DriverRF4463PROMain.c, 403 :: 		ucRF4463ByteMask2 = ulArgument;
0x12DE	0x4949    LDR	R1, [PC, #292]
0x12E0	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 404 :: 		ucRF4463MatchEnabled = 1;
0x12E2	0x2201    MOVS	R2, #1
0x12E4	0x493A    LDR	R1, [PC, #232]
0x12E6	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 405 :: 		vRF4463MainApplyChanges();
0x12E8	0xF7FFFC2A  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 406 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x12EC	0x483A    LDR	R0, [PC, #232]
0x12EE	0xF7FFF8D5  BL	_strlen+0
0x12F2	0xB201    SXTH	R1, R0
0x12F4	0x4838    LDR	R0, [PC, #224]
0x12F6	0xF7FFF961  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 407 :: 		}
0x12FA	0xE006    B	L_vRF4463MainCommandProcessor324
;DriverRF4463PROMain.c, 402 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor435:
L__vRF4463MainCommandProcessor434:
;DriverRF4463PROMain.c, 409 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x12FC	0x4837    LDR	R0, [PC, #220]
0x12FE	0xF7FFF8CD  BL	_strlen+0
0x1302	0xB201    SXTH	R1, R0
0x1304	0x4835    LDR	R0, [PC, #212]
0x1306	0xF7FFF959  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 410 :: 		}
L_vRF4463MainCommandProcessor324:
;DriverRF4463PROMain.c, 411 :: 		}
0x130A	0xE099    B	L_vRF4463MainCommandProcessor325
L_vRF4463MainCommandProcessor320:
;DriverRF4463PROMain.c, 415 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_3_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_3_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x130C	0x4669    MOV	R1, SP
0x130E	0x220B    MOVS	R2, #11
0x1310	0x483D    LDR	R0, [PC, #244]
0x1312	0xF7FFF9E9  BL	_memcmp+0
0x1316	0x2800    CMP	R0, #0
0x1318	0xD120    BNE	L_vRF4463MainCommandProcessor326
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 416 :: 		ulArgument = StrToLong( ucLongArgument );
0x131A	0x2120    MOVS	R1, #32
0x131C	0x4469    ADD	R1, SP, R1
0x131E	0x4608    MOV	R0, R1
0x1320	0xF7FFF96E  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x1324	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 417 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1326	0x2800    CMP	R0, #0
0x1328	0xD310    BCC	L__vRF4463MainCommandProcessor437
0x132A	0x2AFF    CMP	R2, #255
0x132C	0xD80E    BHI	L__vRF4463MainCommandProcessor436
L__vRF4463MainCommandProcessor392:
;DriverRF4463PROMain.c, 418 :: 		ucRF4463ByteMask3 = ulArgument;
0x132E	0x4937    LDR	R1, [PC, #220]
0x1330	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 419 :: 		ucRF4463MatchEnabled = 1;
0x1332	0x2201    MOVS	R2, #1
0x1334	0x4926    LDR	R1, [PC, #152]
0x1336	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 420 :: 		vRF4463MainApplyChanges();
0x1338	0xF7FFFC02  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 421 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x133C	0x4826    LDR	R0, [PC, #152]
0x133E	0xF7FFF8AD  BL	_strlen+0
0x1342	0xB201    SXTH	R1, R0
0x1344	0x4824    LDR	R0, [PC, #144]
0x1346	0xF7FFF939  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 422 :: 		}
0x134A	0xE006    B	L_vRF4463MainCommandProcessor330
;DriverRF4463PROMain.c, 417 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor437:
L__vRF4463MainCommandProcessor436:
;DriverRF4463PROMain.c, 424 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x134C	0x4823    LDR	R0, [PC, #140]
0x134E	0xF7FFF8A5  BL	_strlen+0
0x1352	0xB201    SXTH	R1, R0
0x1354	0x4821    LDR	R0, [PC, #132]
0x1356	0xF7FFF931  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 425 :: 		}
L_vRF4463MainCommandProcessor330:
;DriverRF4463PROMain.c, 426 :: 		}
0x135A	0xE071    B	L_vRF4463MainCommandProcessor331
L_vRF4463MainCommandProcessor326:
;DriverRF4463PROMain.c, 430 :: 		else if ( memcmp( CMD_RADIO_MATCH_MASK_4_SET, ucCommand, sizeof( CMD_RADIO_MATCH_MASK_4_SET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x135C	0x4669    MOV	R1, SP
0x135E	0x220B    MOVS	R2, #11
0x1360	0x482B    LDR	R0, [PC, #172]
0x1362	0xF7FFF9C1  BL	_memcmp+0
0x1366	0x2800    CMP	R0, #0
0x1368	0xD120    BNE	L_vRF4463MainCommandProcessor332
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 431 :: 		ulArgument = StrToLong( ucLongArgument );
0x136A	0x2120    MOVS	R1, #32
0x136C	0x4469    ADD	R1, SP, R1
0x136E	0x4608    MOV	R0, R1
0x1370	0xF7FFF946  BL	_StrToLong+0
; ulArgument start address is: 8 (R2)
0x1374	0x4602    MOV	R2, R0
;DriverRF4463PROMain.c, 432 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
0x1376	0x2800    CMP	R0, #0
0x1378	0xD310    BCC	L__vRF4463MainCommandProcessor439
0x137A	0x2AFF    CMP	R2, #255
0x137C	0xD80E    BHI	L__vRF4463MainCommandProcessor438
L__vRF4463MainCommandProcessor391:
;DriverRF4463PROMain.c, 433 :: 		ucRF4463ByteMask4 = ulArgument;
0x137E	0x4925    LDR	R1, [PC, #148]
0x1380	0x700A    STRB	R2, [R1, #0]
; ulArgument end address is: 8 (R2)
;DriverRF4463PROMain.c, 434 :: 		ucRF4463MatchEnabled = 1;
0x1382	0x2201    MOVS	R2, #1
0x1384	0x4912    LDR	R1, [PC, #72]
0x1386	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 435 :: 		vRF4463MainApplyChanges();
0x1388	0xF7FFFBDA  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 436 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x138C	0x4812    LDR	R0, [PC, #72]
0x138E	0xF7FFF885  BL	_strlen+0
0x1392	0xB201    SXTH	R1, R0
0x1394	0x4810    LDR	R0, [PC, #64]
0x1396	0xF7FFF911  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 437 :: 		}
0x139A	0xE006    B	L_vRF4463MainCommandProcessor336
;DriverRF4463PROMain.c, 432 :: 		if ( ulArgument >= 0 && ulArgument <= 255 ) {
L__vRF4463MainCommandProcessor439:
L__vRF4463MainCommandProcessor438:
;DriverRF4463PROMain.c, 439 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_OUT_OF_RANGE, strlen( ANS_COMMAND_VALUE_OUT_OF_RANGE ) );
0x139C	0x480F    LDR	R0, [PC, #60]
0x139E	0xF7FFF87D  BL	_strlen+0
0x13A2	0xB201    SXTH	R1, R0
0x13A4	0x480D    LDR	R0, [PC, #52]
0x13A6	0xF7FFF909  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 440 :: 		}
L_vRF4463MainCommandProcessor336:
;DriverRF4463PROMain.c, 441 :: 		}
0x13AA	0xE049    B	L_vRF4463MainCommandProcessor337
L_vRF4463MainCommandProcessor332:
;DriverRF4463PROMain.c, 445 :: 		else if ( memcmp( CMD_RADIO_MATCH_UNSET, ucCommand, sizeof( CMD_RADIO_MATCH_UNSET ) ) == 0x00 ) {
; ucBuffer start address is: 20 (R5)
0x13AC	0x4669    MOV	R1, SP
0x13AE	0x220C    MOVS	R2, #12
0x13B0	0x4819    LDR	R0, [PC, #100]
0x13B2	0xF7FFF999  BL	_memcmp+0
0x13B6	0x2800    CMP	R0, #0
0x13B8	0xD134    BNE	L_vRF4463MainCommandProcessor338
; ucBuffer end address is: 20 (R5)
;DriverRF4463PROMain.c, 447 :: 		ucRF4463MatchEnableReg = 1;
0x13BA	0x2201    MOVS	R2, #1
0x13BC	0x4905    LDR	R1, [PC, #20]
0x13BE	0x700A    STRB	R2, [R1, #0]
;DriverRF4463PROMain.c, 448 :: 		vRF4463MainApplyChanges();
0x13C0	0xF7FFFBBE  BL	_vRF4463MainApplyChanges+0
;DriverRF4463PROMain.c, 449 :: 		vUSART1Start_TX( ANS_COMMAND_VALUE_ACCEPTED, strlen( ANS_COMMAND_VALUE_ACCEPTED ) );
0x13C4	0x4804    LDR	R0, [PC, #16]
0x13C6	0xF7FFF869  BL	_strlen+0
0x13CA	0xB201    SXTH	R1, R0
0x13CC	0xE026    B	#76
0x13CE	0xBF00    NOP
0x13D0	0x21802000  	_ucRF4463MatchEnabled+0
0x13D4	0x21812000  	_ucRF4463MatchEnableReg+0
0x13D8	0x20162000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x13DC	0x203E2000  	_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x13E0	0x21822000  	_CMD_RADIO_MATCH_BYTE_2_SET+0
0x13E4	0x218E2000  	_ucRF4463ByteMatch2+0
0x13E8	0x218F2000  	_CMD_RADIO_MATCH_BYTE_3_SET+0
0x13EC	0x219B2000  	_ucRF4463ByteMatch3+0
0x13F0	0x219C2000  	_CMD_RADIO_MATCH_BYTE_4_SET+0
0x13F4	0x21A82000  	_ucRF4463ByteMatch4+0
0x13F8	0x21A92000  	_CMD_RADIO_MATCH_MASK_1_SET+0
0x13FC	0x21B42000  	_ucRF4463ByteMask1+0
0x1400	0x21B52000  	_CMD_RADIO_MATCH_MASK_2_SET+0
0x1404	0x21C02000  	_ucRF4463ByteMask2+0
0x1408	0x21C12000  	_CMD_RADIO_MATCH_MASK_3_SET+0
0x140C	0x21CC2000  	_ucRF4463ByteMask3+0
0x1410	0x21CD2000  	_CMD_RADIO_MATCH_MASK_4_SET+0
0x1414	0x21D82000  	_ucRF4463ByteMask4+0
0x1418	0x21D92000  	_CMD_RADIO_MATCH_UNSET+0
0x141C	0x4809    LDR	R0, [PC, #36]
0x141E	0xF7FFF8CD  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 454 :: 		}
0x1422	0xE00D    B	L_vRF4463MainCommandProcessor339
L_vRF4463MainCommandProcessor338:
;DriverRF4463PROMain.c, 458 :: 		vUSART1Start_TX( ANS_DEBUG_COMMAND_UNKNOWN, strlen( ANS_DEBUG_COMMAND_UNKNOWN ) );
; ucBuffer start address is: 20 (R5)
0x1424	0x4808    LDR	R0, [PC, #32]
0x1426	0xF7FFF839  BL	_strlen+0
0x142A	0xB201    SXTH	R1, R0
0x142C	0x4806    LDR	R0, [PC, #24]
0x142E	0xF7FFF8C5  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 459 :: 		vUSART1Start_TX( ucBuffer, strlen( ucBuffer ) );  // DEPURACION
0x1432	0x4628    MOV	R0, R5
0x1434	0xF7FFF832  BL	_strlen+0
0x1438	0xB201    SXTH	R1, R0
0x143A	0x4628    MOV	R0, R5
; ucBuffer end address is: 20 (R5)
0x143C	0xF7FFF8BE  BL	_vUSART1Start_TX+0
;DriverRF4463PROMain.c, 460 :: 		}
L_vRF4463MainCommandProcessor339:
L_vRF4463MainCommandProcessor337:
L_vRF4463MainCommandProcessor331:
L_vRF4463MainCommandProcessor325:
L_vRF4463MainCommandProcessor319:
L_vRF4463MainCommandProcessor313:
L_vRF4463MainCommandProcessor307:
L_vRF4463MainCommandProcessor301:
L_vRF4463MainCommandProcessor295:
L_vRF4463MainCommandProcessor289:
L_vRF4463MainCommandProcessor287:
L_vRF4463MainCommandProcessor271:
L_vRF4463MainCommandProcessor265:
L_vRF4463MainCommandProcessor259:
L_vRF4463MainCommandProcessor243:
L_vRF4463MainCommandProcessor237:
;DriverRF4463PROMain.c, 461 :: 		}
L_end_vRF4463MainCommandProcessor:
0x1440	0xB019    ADD	SP, SP, #100
0x1442	0xBD00    POP	(R15)
0x1444	0x20162000  	_ANS_COMMAND_VALUE_ACCEPTED+0
0x1448	0x21E52000  	_ANS_DEBUG_COMMAND_UNKNOWN+0
; end of _vRF4463MainCommandProcessor
_toupper:
;__Lib_CType.c, 76 :: 		
; character start address is: 0 (R0)
0x09B4	0xB500    PUSH	(R14)
; character end address is: 0 (R0)
; character start address is: 0 (R0)
;__Lib_CType.c, 77 :: 		
0x09B6	0x287A    CMP	R0, #122
0x09B8	0xD807    BHI	L__toupper47
0x09BA	0x2861    CMP	R0, #97
0x09BC	0xD306    BCC	L__toupper48
L__toupper44:
;__Lib_CType.c, 78 :: 		
0x09BE	0x2120    MOVS	R1, #32
0x09C0	0x43C9    MVN	R1, R1
0x09C2	0xB209    SXTH	R1, R1
0x09C4	0x4001    ANDS	R1, R0
0x09C6	0xB2C8    UXTB	R0, R1
; character end address is: 0 (R0)
;__Lib_CType.c, 77 :: 		
0x09C8	0xE7FF    B	L__toupper46
L__toupper47:
L__toupper46:
; character start address is: 0 (R0)
; character end address is: 0 (R0)
0x09CA	0xE7FF    B	L__toupper45
L__toupper48:
L__toupper45:
;__Lib_CType.c, 79 :: 		
; character start address is: 0 (R0)
; character end address is: 0 (R0)
;__Lib_CType.c, 80 :: 		
L_end_toupper:
0x09CC	0xBD00    POP	(R15)
; end of _toupper
_memcmp:
;__Lib_CString.c, 30 :: 		
; n start address is: 8 (R2)
; s2 start address is: 4 (R1)
; s1 start address is: 0 (R0)
0x06E8	0xB500    PUSH	(R14)
0x06EA	0xB081    SUB	SP, SP, #4
; n end address is: 8 (R2)
; s2 end address is: 4 (R1)
; s1 end address is: 0 (R0)
; s1 start address is: 0 (R0)
; s2 start address is: 4 (R1)
; n start address is: 8 (R2)
0x06EC	0x9200    STR	R2, [SP, #0]
; s1 end address is: 0 (R0)
; n end address is: 8 (R2)
; s2 end address is: 4 (R1)
0x06EE	0x4602    MOV	R2, R0
0x06F0	0x9800    LDR	R0, [SP, #0]
0x06F2	0xB200    SXTH	R0, R0
;__Lib_CString.c, 31 :: 		
L_memcmp4:
; n start address is: 0 (R0)
; n start address is: 0 (R0)
; s2 start address is: 4 (R1)
; s1 start address is: 8 (R2)
0x06F4	0xB204    SXTH	R4, R0
0x06F6	0x1E43    SUBS	R3, R0, #1
0x06F8	0xB218    SXTH	R0, R3
; n end address is: 0 (R0)
0x06FA	0x2C00    CMP	R4, #0
0x06FC	0xD00B    BEQ	L_memcmp5
; n end address is: 0 (R0)
;__Lib_CString.c, 32 :: 		
; n start address is: 0 (R0)
0x06FE	0x7814    LDRB	R4, [R2, #0]
0x0700	0x780B    LDRB	R3, [R1, #0]
0x0702	0x429C    CMP	R4, R3
0x0704	0xD004    BEQ	L_memcmp6
; n end address is: 0 (R0)
;__Lib_CString.c, 33 :: 		
0x0706	0x7814    LDRB	R4, [R2, #0]
; s1 end address is: 8 (R2)
0x0708	0x780B    LDRB	R3, [R1, #0]
; s2 end address is: 4 (R1)
0x070A	0x1AE3    SUBS	R3, R4, R3
0x070C	0xB218    SXTH	R0, R3
0x070E	0xE003    B	L_end_memcmp
L_memcmp6:
;__Lib_CString.c, 37 :: 		
; s2 start address is: 4 (R1)
; s1 start address is: 8 (R2)
; n start address is: 0 (R0)
0x0710	0x3201    ADDS	R2, #1
;__Lib_CString.c, 38 :: 		
0x0712	0x3101    ADDS	R1, #1
;__Lib_CString.c, 39 :: 		
; n end address is: 0 (R0)
; s1 end address is: 8 (R2)
; s2 end address is: 4 (R1)
0x0714	0xE7EE    B	L_memcmp4
L_memcmp5:
;__Lib_CString.c, 40 :: 		
0x0716	0x2000    MOVS	R0, #0
;__Lib_CString.c, 41 :: 		
L_end_memcmp:
0x0718	0xB001    ADD	SP, SP, #4
0x071A	0xBD00    POP	(R15)
; end of _memcmp
_StrToShort:
;__Lib_Conversions.c, 918 :: 		
0x09D0	0xB500    PUSH	(R14)
0x09D2	0xB085    SUB	SP, SP, #20
0x09D4	0x9004    STR	R0, [SP, #16]
;__Lib_Conversions.c, 920 :: 		
0x09D6	0x2604    MOVS	R6, #4
0x09D8	0x446E    ADD	R6, SP, R6
0x09DA	0x2509    MOVS	R5, #9
0x09DC	0x19AD    ADDS	R5, R5, R6
0x09DE	0x4F3C    LDR	R7, [PC, #240]
0x09E0	0xF001FCC0  BL	___CC2DW+0
;__Lib_Conversions.c, 921 :: 		
;__Lib_Conversions.c, 922 :: 		
;__Lib_Conversions.c, 923 :: 		
;__Lib_Conversions.c, 925 :: 		
0x09E4	0x9804    LDR	R0, [SP, #16]
0x09E6	0xF7FFFD59  BL	_strlen+0
0x09EA	0x9000    STR	R0, [SP, #0]
;__Lib_Conversions.c, 926 :: 		
0x09EC	0xB2C1    UXTB	R1, R0
0x09EE	0x2904    CMP	R1, #4
0x09F0	0xD900    BLS	#0
0x09F2	0xE066    B	L_StrToShort176
;__Lib_Conversions.c, 928 :: 		
0x09F4	0x2204    MOVS	R2, #4
0x09F6	0x446A    ADD	R2, SP, R2
0x09F8	0x2108    MOVS	R1, #8
0x09FA	0x4469    ADD	R1, SP, R1
0x09FC	0x9804    LDR	R0, [SP, #16]
0x09FE	0xF7FFFC55  BL	__Lib_Conversions_Forward_Input+0
; multiplier start address is: 0 (R0)
0x0A02	0xB280    UXTH	R0, R0
;__Lib_Conversions.c, 930 :: 		
0x0A04	0x9901    LDR	R1, [SP, #4]
0x0A06	0xB2C9    UXTB	R1, R1
0x0A08	0x2901    CMP	R1, #1
0x0A0A	0xD857    BHI	L_StrToShort177
;__Lib_Conversions.c, 932 :: 		
0x0A0C	0x9904    LDR	R1, [SP, #16]
0x0A0E	0x7809    LDRB	R1, [R1, #0]
0x0A10	0x292D    CMP	R1, #45
0x0A12	0xD022    BEQ	L_StrToShort178
;__Lib_Conversions.c, 934 :: 		
; i start address is: 24 (R6)
0x0A14	0x2600    MOVS	R6, #0
; i end address is: 24 (R6)
; multiplier end address is: 0 (R0)
L_StrToShort179:
; i start address is: 24 (R6)
; multiplier start address is: 0 (R0)
0x0A16	0x9900    LDR	R1, [SP, #0]
0x0A18	0xB2C9    UXTB	R1, R1
0x0A1A	0x428E    CMP	R6, R1
0x0A1C	0xD214    BCS	L_StrToShort180
;__Lib_Conversions.c, 936 :: 		
0x0A1E	0x2108    MOVS	R1, #8
0x0A20	0x4469    ADD	R1, SP, R1
0x0A22	0x1989    ADDS	R1, R1, R6
0x0A24	0x7809    LDRB	R1, [R1, #0]
0x0A26	0x3930    SUBS	R1, #48
0x0A28	0xB209    SXTH	R1, R1
0x0A2A	0x4602    MOV	R2, R0
0x0A2C	0x434A    MULS	R2, R1, R2
0x0A2E	0xB292    UXTH	R2, R2
0x0A30	0x9903    LDR	R1, [SP, #12]
0x0A32	0xB249    SXTB	R1, R1
0x0A34	0x1889    ADDS	R1, R1, R2
0x0A36	0x9103    STR	R1, [SP, #12]
;__Lib_Conversions.c, 937 :: 		
0x0A38	0x220A    MOVS	R2, #10
0x0A3A	0xF7FFFB41  BL	__Div_32x32_U+0
; multiplier end address is: 0 (R0)
; multiplier start address is: 8 (R2)
0x0A3E	0xB282    UXTH	R2, R0
;__Lib_Conversions.c, 934 :: 		
0x0A40	0x1C71    ADDS	R1, R6, #1
; i end address is: 24 (R6)
; i start address is: 4 (R1)
;__Lib_Conversions.c, 938 :: 		
0x0A42	0xB290    UXTH	R0, R2
; i end address is: 4 (R1)
; multiplier end address is: 8 (R2)
0x0A44	0xB2CE    UXTB	R6, R1
0x0A46	0xE7E6    B	L_StrToShort179
L_StrToShort180:
;__Lib_Conversions.c, 939 :: 		
0x0A48	0x9A03    LDR	R2, [SP, #12]
0x0A4A	0xB252    SXTB	R2, R2
0x0A4C	0x217F    MOVS	R1, #127
0x0A4E	0x43C9    MVN	R1, R1
0x0A50	0x428A    CMP	R2, R1
0x0A52	0xD101    BNE	L_StrToShort182
;__Lib_Conversions.c, 940 :: 		
0x0A54	0x2100    MOVS	R1, #0
0x0A56	0x9103    STR	R1, [SP, #12]
L_StrToShort182:
;__Lib_Conversions.c, 941 :: 		
0x0A58	0xE02F    B	L_StrToShort183
L_StrToShort178:
;__Lib_Conversions.c, 942 :: 		
; multiplier start address is: 0 (R0)
0x0A5A	0x9B04    LDR	R3, [SP, #16]
0x0A5C	0x222D    MOVS	R2, #45
0x0A5E	0x9904    LDR	R1, [SP, #16]
0x0A60	0x700A    STRB	R2, [R1, #0]
0x0A62	0x7819    LDRB	R1, [R3, #0]
0x0A64	0x2900    CMP	R1, #0
0x0A66	0xD028    BEQ	L__StrToShort401
0x0A68	0x9901    LDR	R1, [SP, #4]
0x0A6A	0xB2C9    UXTB	R1, R1
0x0A6C	0x2901    CMP	R1, #1
0x0A6E	0xD124    BNE	L__StrToShort400
L__StrToShort399:
;__Lib_Conversions.c, 944 :: 		
; i start address is: 28 (R7)
0x0A70	0x2701    MOVS	R7, #1
; multiplier end address is: 0 (R0)
; i end address is: 28 (R7)
0x0A72	0xB2FE    UXTB	R6, R7
L_StrToShort187:
; i start address is: 24 (R6)
; multiplier start address is: 0 (R0)
0x0A74	0x9900    LDR	R1, [SP, #0]
0x0A76	0xB2C9    UXTB	R1, R1
0x0A78	0x428E    CMP	R6, R1
0x0A7A	0xD215    BCS	L_StrToShort188
;__Lib_Conversions.c, 946 :: 		
0x0A7C	0x2108    MOVS	R1, #8
0x0A7E	0x4469    ADD	R1, SP, R1
0x0A80	0x1989    ADDS	R1, R1, R6
0x0A82	0x7809    LDRB	R1, [R1, #0]
0x0A84	0x3930    SUBS	R1, #48
0x0A86	0xB209    SXTH	R1, R1
0x0A88	0x4602    MOV	R2, R0
0x0A8A	0x434A    MULS	R2, R1, R2
0x0A8C	0xB292    UXTH	R2, R2
0x0A8E	0x9903    LDR	R1, [SP, #12]
0x0A90	0xB249    SXTB	R1, R1
0x0A92	0x1889    ADDS	R1, R1, R2
0x0A94	0x9103    STR	R1, [SP, #12]
;__Lib_Conversions.c, 947 :: 		
0x0A96	0x220A    MOVS	R2, #10
0x0A98	0xF7FFFB12  BL	__Div_32x32_U+0
; multiplier end address is: 0 (R0)
; multiplier start address is: 8 (R2)
0x0A9C	0xB282    UXTH	R2, R0
;__Lib_Conversions.c, 944 :: 		
0x0A9E	0x1C71    ADDS	R1, R6, #1
; i end address is: 24 (R6)
; i start address is: 28 (R7)
0x0AA0	0xB2CF    UXTB	R7, R1
;__Lib_Conversions.c, 948 :: 		
0x0AA2	0xB290    UXTH	R0, R2
; multiplier end address is: 8 (R2)
; i end address is: 28 (R7)
0x0AA4	0xB2FE    UXTB	R6, R7
0x0AA6	0xE7E5    B	L_StrToShort187
L_StrToShort188:
;__Lib_Conversions.c, 949 :: 		
0x0AA8	0x9903    LDR	R1, [SP, #12]
0x0AAA	0xB249    SXTB	R1, R1
0x0AAC	0x4249    RSBS	R1, R1, #0
0x0AAE	0x9103    STR	R1, [SP, #12]
;__Lib_Conversions.c, 950 :: 		
0x0AB0	0xB249    SXTB	R1, R1
0x0AB2	0x297F    CMP	R1, #127
0x0AB4	0xD101    BNE	L_StrToShort190
;__Lib_Conversions.c, 951 :: 		
0x0AB6	0x2100    MOVS	R1, #0
0x0AB8	0x9103    STR	R1, [SP, #12]
L_StrToShort190:
;__Lib_Conversions.c, 942 :: 		
L__StrToShort401:
L__StrToShort400:
;__Lib_Conversions.c, 952 :: 		
L_StrToShort183:
;__Lib_Conversions.c, 953 :: 		
0x0ABA	0xE001    B	L_StrToShort191
L_StrToShort177:
;__Lib_Conversions.c, 954 :: 		
0x0ABC	0x2100    MOVS	R1, #0
0x0ABE	0x9103    STR	R1, [SP, #12]
L_StrToShort191:
;__Lib_Conversions.c, 955 :: 		
0x0AC0	0xE001    B	L_StrToShort192
L_StrToShort176:
;__Lib_Conversions.c, 956 :: 		
0x0AC2	0x2100    MOVS	R1, #0
0x0AC4	0x9103    STR	R1, [SP, #12]
L_StrToShort192:
;__Lib_Conversions.c, 957 :: 		
0x0AC6	0x9803    LDR	R0, [SP, #12]
0x0AC8	0xB240    SXTB	R0, R0
;__Lib_Conversions.c, 958 :: 		
L_end_StrToShort:
0x0ACA	0xB005    ADD	SP, SP, #20
0x0ACC	0xBD00    POP	(R15)
0x0ACE	0xBF00    NOP
0x0AD0	0x5F840000  	?ICSStrToShort_counter_L0+0
; end of _StrToShort
_strlen:
;__Lib_CString.c, 143 :: 		
; s start address is: 0 (R0)
0x049C	0xB500    PUSH	(R14)
0x049E	0x4601    MOV	R1, R0
; s end address is: 0 (R0)
; s start address is: 4 (R1)
;__Lib_CString.c, 146 :: 		
; cp start address is: 0 (R0)
0x04A0	0x4608    MOV	R0, R1
; s end address is: 4 (R1)
; cp end address is: 0 (R0)
0x04A2	0x460B    MOV	R3, R1
;__Lib_CString.c, 147 :: 		
L_strlen36:
; cp start address is: 0 (R0)
; s start address is: 12 (R3)
0x04A4	0x4602    MOV	R2, R0
0x04A6	0x3001    ADDS	R0, #1
0x04A8	0x7811    LDRB	R1, [R2, #0]
0x04AA	0x2900    CMP	R1, #0
0x04AC	0xD000    BEQ	L_strlen37
;__Lib_CString.c, 148 :: 		
0x04AE	0xE7F9    B	L_strlen36
L_strlen37:
;__Lib_CString.c, 149 :: 		
0x04B0	0x1AC1    SUBS	R1, R0, R3
; s end address is: 12 (R3)
; cp end address is: 0 (R0)
0x04B2	0x1E49    SUBS	R1, R1, #1
0x04B4	0xB208    SXTH	R0, R1
;__Lib_CString.c, 150 :: 		
L_end_strlen:
0x04B6	0xBD00    POP	(R15)
; end of _strlen
__Lib_Conversions_Forward_Input:
;__Lib_Conversions.c, 777 :: 		
; byte_in start address is: 0 (R0)
0x02AC	0xB500    PUSH	(R14)
0x02AE	0xB083    SUB	SP, SP, #12
0x02B0	0x9101    STR	R1, [SP, #4]
0x02B2	0x4601    MOV	R1, R0
0x02B4	0x9202    STR	R2, [SP, #8]
; byte_in end address is: 0 (R0)
; byte_in start address is: 4 (R1)
;__Lib_Conversions.c, 779 :: 		
0x02B6	0x9100    STR	R1, [SP, #0]
0x02B8	0x4608    MOV	R0, R1
0x02BA	0xF000F8EF  BL	_strlen+0
0x02BE	0x9900    LDR	R1, [SP, #0]
; i start address is: 0 (R0)
0x02C0	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 781 :: 		
; multiplier start address is: 24 (R6)
0x02C2	0x2601    MOVS	R6, #1
; byte_in end address is: 4 (R1)
; multiplier end address is: 24 (R6)
; i end address is: 0 (R0)
0x02C4	0x460A    MOV	R2, R1
;__Lib_Conversions.c, 783 :: 		
L___Lib_Conversions_Forward_Input139:
; byte_in start address is: 8 (R2)
; multiplier start address is: 24 (R6)
; i start address is: 0 (R0)
; byte_in start address is: 8 (R2)
; byte_in end address is: 8 (R2)
0x02C6	0x2800    CMP	R0, #0
0x02C8	0xD91F    BLS	L___Lib_Conversions_Forward_Input140
; byte_in end address is: 8 (R2)
;__Lib_Conversions.c, 785 :: 		
; byte_in start address is: 8 (R2)
0x02CA	0x1813    ADDS	R3, R2, R0
0x02CC	0x1E5B    SUBS	R3, R3, #1
0x02CE	0x781B    LDRB	R3, [R3, #0]
; tmp start address is: 4 (R1)
0x02D0	0xB2D9    UXTB	R1, R3
;__Lib_Conversions.c, 786 :: 		
0x02D2	0x2B30    CMP	R3, #48
0x02D4	0xD30E    BCC	L___Lib_Conversions_Forward_Input371
0x02D6	0x2939    CMP	R1, #57
0x02D8	0xD80C    BHI	L___Lib_Conversions_Forward_Input370
; tmp end address is: 4 (R1)
L___Lib_Conversions_Forward_Input369:
;__Lib_Conversions.c, 788 :: 		
0x02DA	0x9B01    LDR	R3, [SP, #4]
0x02DC	0x181B    ADDS	R3, R3, R0
0x02DE	0x1E5C    SUBS	R4, R3, #1
0x02E0	0x1813    ADDS	R3, R2, R0
0x02E2	0x1E5B    SUBS	R3, R3, #1
0x02E4	0x781B    LDRB	R3, [R3, #0]
0x02E6	0x7023    STRB	R3, [R4, #0]
;__Lib_Conversions.c, 789 :: 		
0x02E8	0x240A    MOVS	R4, #10
0x02EA	0x4623    MOV	R3, R4
0x02EC	0x4373    MULS	R3, R6, R3
; multiplier end address is: 24 (R6)
; multiplier start address is: 4 (R1)
0x02EE	0x4619    MOV	R1, R3
;__Lib_Conversions.c, 790 :: 		
0x02F0	0x460C    MOV	R4, R1
; multiplier end address is: 4 (R1)
0x02F2	0xE005    B	L___Lib_Conversions_Forward_Input144
;__Lib_Conversions.c, 786 :: 		
L___Lib_Conversions_Forward_Input371:
; multiplier start address is: 24 (R6)
L___Lib_Conversions_Forward_Input370:
;__Lib_Conversions.c, 792 :: 		
0x02F4	0x9B02    LDR	R3, [SP, #8]
0x02F6	0x781B    LDRB	R3, [R3, #0]
0x02F8	0x1C5C    ADDS	R4, R3, #1
0x02FA	0x9B02    LDR	R3, [SP, #8]
0x02FC	0x701C    STRB	R4, [R3, #0]
; multiplier end address is: 24 (R6)
0x02FE	0x4634    MOV	R4, R6
L___Lib_Conversions_Forward_Input144:
;__Lib_Conversions.c, 793 :: 		
; multiplier start address is: 16 (R4)
0x0300	0x1E43    SUBS	R3, R0, #1
; i end address is: 0 (R0)
; i start address is: 20 (R5)
0x0302	0xB2DD    UXTB	R5, R3
;__Lib_Conversions.c, 794 :: 		
; byte_in end address is: 8 (R2)
; multiplier end address is: 16 (R4)
; i end address is: 20 (R5)
0x0304	0xB2E8    UXTB	R0, R5
0x0306	0x4626    MOV	R6, R4
0x0308	0xE7DD    B	L___Lib_Conversions_Forward_Input139
L___Lib_Conversions_Forward_Input140:
;__Lib_Conversions.c, 795 :: 		
; multiplier start address is: 24 (R6)
0x030A	0x220A    MOVS	R2, #10
0x030C	0x4630    MOV	R0, R6
0x030E	0xF7FFFED7  BL	__Div_32x32_U+0
; multiplier end address is: 24 (R6)
;__Lib_Conversions.c, 797 :: 		
;__Lib_Conversions.c, 798 :: 		
L_end_Forward_Input:
0x0312	0xB003    ADD	SP, SP, #12
0x0314	0xBD00    POP	(R15)
; end of __Lib_Conversions_Forward_Input
_vRF4463MainApplyChanges:
;DriverRF4463PROMain.c, 108 :: 		void vRF4463MainApplyChanges () {
0x0B40	0xB500    PUSH	(R14)
;DriverRF4463PROMain.c, 109 :: 		VRF4463SDNReset();
0x0B42	0xF001FC91  BL	_VRF4463SDNReset+0
;DriverRF4463PROMain.c, 110 :: 		vRF4463Init();
0x0B46	0xF001FCD7  BL	_vRF4463Init+0
;DriverRF4463PROMain.c, 111 :: 		vRF4463ClearInterrupts();
0x0B4A	0xF001FC75  BL	_vRF4463ClearInterrupts+0
;DriverRF4463PROMain.c, 112 :: 		}
L_end_vRF4463MainApplyChanges:
0x0B4E	0xBD00    POP	(R15)
; end of _vRF4463MainApplyChanges
_vUSART1Start_TX:
;uarthandler.c, 434 :: 		unsigned char vUSART1Start_TX ( unsigned long *ucBuffer, unsigned long ulSize ) {
0x05BC	0xB081    SUB	SP, SP, #4
;uarthandler.c, 467 :: 		}
L_end_vUSART1Start_TX:
0x05BE	0xB001    ADD	SP, SP, #4
0x05C0	0x4770    BX	LR
; end of _vUSART1Start_TX
_StrToInt:
;__Lib_Conversions.c, 975 :: 		
0x04B8	0xB500    PUSH	(R14)
0x04BA	0xB086    SUB	SP, SP, #24
0x04BC	0x9005    STR	R0, [SP, #20]
;__Lib_Conversions.c, 977 :: 		
0x04BE	0x2604    MOVS	R6, #4
0x04C0	0x446E    ADD	R6, SP, R6
0x04C2	0x250E    MOVS	R5, #14
0x04C4	0x19AD    ADDS	R5, R5, R6
0x04C6	0x4F3A    LDR	R7, [PC, #232]
0x04C8	0xF001FF4C  BL	___CC2DW+0
;__Lib_Conversions.c, 978 :: 		
;__Lib_Conversions.c, 979 :: 		
;__Lib_Conversions.c, 980 :: 		
;__Lib_Conversions.c, 982 :: 		
0x04CC	0x9805    LDR	R0, [SP, #20]
0x04CE	0xF7FFFFE5  BL	_strlen+0
0x04D2	0x9000    STR	R0, [SP, #0]
;__Lib_Conversions.c, 983 :: 		
0x04D4	0xB2C1    UXTB	R1, R0
0x04D6	0x2906    CMP	R1, #6
0x04D8	0xD900    BLS	#0
0x04DA	0xE063    B	L_StrToInt193
;__Lib_Conversions.c, 985 :: 		
0x04DC	0x2204    MOVS	R2, #4
0x04DE	0x446A    ADD	R2, SP, R2
0x04E0	0x2108    MOVS	R1, #8
0x04E2	0x4469    ADD	R1, SP, R1
0x04E4	0x9805    LDR	R0, [SP, #20]
0x04E6	0xF7FFFEE1  BL	__Lib_Conversions_Forward_Input+0
; multiplier start address is: 0 (R0)
;__Lib_Conversions.c, 987 :: 		
0x04EA	0x9901    LDR	R1, [SP, #4]
0x04EC	0xB2C9    UXTB	R1, R1
0x04EE	0x2901    CMP	R1, #1
0x04F0	0xD855    BHI	L_StrToInt194
;__Lib_Conversions.c, 989 :: 		
0x04F2	0x9905    LDR	R1, [SP, #20]
0x04F4	0x7809    LDRB	R1, [R1, #0]
0x04F6	0x292D    CMP	R1, #45
0x04F8	0xD020    BEQ	L_StrToInt195
;__Lib_Conversions.c, 991 :: 		
; i start address is: 24 (R6)
0x04FA	0x2600    MOVS	R6, #0
; i end address is: 24 (R6)
; multiplier end address is: 0 (R0)
L_StrToInt196:
; i start address is: 24 (R6)
; multiplier start address is: 0 (R0)
0x04FC	0x9900    LDR	R1, [SP, #0]
0x04FE	0xB2C9    UXTB	R1, R1
0x0500	0x428E    CMP	R6, R1
0x0502	0xD213    BCS	L_StrToInt197
;__Lib_Conversions.c, 993 :: 		
0x0504	0x2108    MOVS	R1, #8
0x0506	0x4469    ADD	R1, SP, R1
0x0508	0x1989    ADDS	R1, R1, R6
0x050A	0x7809    LDRB	R1, [R1, #0]
0x050C	0x3930    SUBS	R1, #48
0x050E	0xB209    SXTH	R1, R1
0x0510	0x4602    MOV	R2, R0
0x0512	0x434A    MULS	R2, R1, R2
0x0514	0x9904    LDR	R1, [SP, #16]
0x0516	0xB209    SXTH	R1, R1
0x0518	0x1889    ADDS	R1, R1, R2
0x051A	0x9104    STR	R1, [SP, #16]
;__Lib_Conversions.c, 994 :: 		
0x051C	0x220A    MOVS	R2, #10
0x051E	0xF7FFFDCF  BL	__Div_32x32_U+0
; multiplier end address is: 0 (R0)
; multiplier start address is: 8 (R2)
0x0522	0x4602    MOV	R2, R0
;__Lib_Conversions.c, 991 :: 		
0x0524	0x1C71    ADDS	R1, R6, #1
; i end address is: 24 (R6)
; i start address is: 4 (R1)
;__Lib_Conversions.c, 995 :: 		
0x0526	0x4610    MOV	R0, R2
; i end address is: 4 (R1)
; multiplier end address is: 8 (R2)
0x0528	0xB2CE    UXTB	R6, R1
0x052A	0xE7E7    B	L_StrToInt196
L_StrToInt197:
;__Lib_Conversions.c, 996 :: 		
0x052C	0x9A04    LDR	R2, [SP, #16]
0x052E	0xB212    SXTH	R2, R2
0x0530	0x4920    LDR	R1, [PC, #128]
0x0532	0x428A    CMP	R2, R1
0x0534	0xD101    BNE	L_StrToInt199
;__Lib_Conversions.c, 997 :: 		
0x0536	0x2100    MOVS	R1, #0
0x0538	0x9104    STR	R1, [SP, #16]
L_StrToInt199:
;__Lib_Conversions.c, 998 :: 		
0x053A	0xE02F    B	L_StrToInt200
L_StrToInt195:
;__Lib_Conversions.c, 999 :: 		
; multiplier start address is: 0 (R0)
0x053C	0x9B05    LDR	R3, [SP, #20]
0x053E	0x222D    MOVS	R2, #45
0x0540	0x9905    LDR	R1, [SP, #20]
0x0542	0x700A    STRB	R2, [R1, #0]
0x0544	0x7819    LDRB	R1, [R3, #0]
0x0546	0x2900    CMP	R1, #0
0x0548	0xD028    BEQ	L__StrToInt404
0x054A	0x9901    LDR	R1, [SP, #4]
0x054C	0xB2C9    UXTB	R1, R1
0x054E	0x2901    CMP	R1, #1
0x0550	0xD124    BNE	L__StrToInt403
L__StrToInt402:
;__Lib_Conversions.c, 1001 :: 		
; i start address is: 28 (R7)
0x0552	0x2701    MOVS	R7, #1
; multiplier end address is: 0 (R0)
; i end address is: 28 (R7)
0x0554	0xB2FE    UXTB	R6, R7
L_StrToInt204:
; i start address is: 24 (R6)
; multiplier start address is: 0 (R0)
0x0556	0x9900    LDR	R1, [SP, #0]
0x0558	0xB2C9    UXTB	R1, R1
0x055A	0x428E    CMP	R6, R1
0x055C	0xD214    BCS	L_StrToInt205
;__Lib_Conversions.c, 1003 :: 		
0x055E	0x2108    MOVS	R1, #8
0x0560	0x4469    ADD	R1, SP, R1
0x0562	0x1989    ADDS	R1, R1, R6
0x0564	0x7809    LDRB	R1, [R1, #0]
0x0566	0x3930    SUBS	R1, #48
0x0568	0xB209    SXTH	R1, R1
0x056A	0x4602    MOV	R2, R0
0x056C	0x434A    MULS	R2, R1, R2
0x056E	0x9904    LDR	R1, [SP, #16]
0x0570	0xB209    SXTH	R1, R1
0x0572	0x1889    ADDS	R1, R1, R2
0x0574	0x9104    STR	R1, [SP, #16]
;__Lib_Conversions.c, 1004 :: 		
0x0576	0x220A    MOVS	R2, #10
0x0578	0xF7FFFDA2  BL	__Div_32x32_U+0
; multiplier end address is: 0 (R0)
; multiplier start address is: 8 (R2)
0x057C	0x4602    MOV	R2, R0
;__Lib_Conversions.c, 1001 :: 		
0x057E	0x1C71    ADDS	R1, R6, #1
; i end address is: 24 (R6)
; i start address is: 28 (R7)
0x0580	0xB2CF    UXTB	R7, R1
;__Lib_Conversions.c, 1005 :: 		
0x0582	0x4610    MOV	R0, R2
; multiplier end address is: 8 (R2)
; i end address is: 28 (R7)
0x0584	0xB2FE    UXTB	R6, R7
0x0586	0xE7E6    B	L_StrToInt204
L_StrToInt205:
;__Lib_Conversions.c, 1006 :: 		
0x0588	0x9904    LDR	R1, [SP, #16]
0x058A	0xB209    SXTH	R1, R1
0x058C	0x424A    RSBS	R2, R1, #0
0x058E	0xB212    SXTH	R2, R2
0x0590	0x9204    STR	R2, [SP, #16]
;__Lib_Conversions.c, 1007 :: 		
0x0592	0x4909    LDR	R1, [PC, #36]
0x0594	0x428A    CMP	R2, R1
0x0596	0xD101    BNE	L_StrToInt207
;__Lib_Conversions.c, 1008 :: 		
0x0598	0x2100    MOVS	R1, #0
0x059A	0x9104    STR	R1, [SP, #16]
L_StrToInt207:
;__Lib_Conversions.c, 999 :: 		
L__StrToInt404:
L__StrToInt403:
;__Lib_Conversions.c, 1009 :: 		
L_StrToInt200:
;__Lib_Conversions.c, 1010 :: 		
0x059C	0xE001    B	L_StrToInt208
L_StrToInt194:
;__Lib_Conversions.c, 1011 :: 		
0x059E	0x2100    MOVS	R1, #0
0x05A0	0x9104    STR	R1, [SP, #16]
L_StrToInt208:
;__Lib_Conversions.c, 1012 :: 		
0x05A2	0xE001    B	L_StrToInt209
L_StrToInt193:
;__Lib_Conversions.c, 1013 :: 		
0x05A4	0x2100    MOVS	R1, #0
0x05A6	0x9104    STR	R1, [SP, #16]
L_StrToInt209:
;__Lib_Conversions.c, 1014 :: 		
0x05A8	0x9804    LDR	R0, [SP, #16]
0x05AA	0xB200    SXTH	R0, R0
;__Lib_Conversions.c, 1015 :: 		
L_end_StrToInt:
0x05AC	0xB006    ADD	SP, SP, #24
0x05AE	0xBD00    POP	(R15)
0x05B0	0x5F640000  	?ICSStrToInt_counter_L0+0
0x05B4	0x8000FFFF  	#-32768
0x05B8	0x7FFF0000  	#32767
; end of _StrToInt
_StrToLong:
;__Lib_Conversions.c, 1074 :: 		
0x0600	0xB500    PUSH	(R14)
0x0602	0xB087    SUB	SP, SP, #28
0x0604	0x9006    STR	R0, [SP, #24]
;__Lib_Conversions.c, 1076 :: 		
0x0606	0x2604    MOVS	R6, #4
0x0608	0x446E    ADD	R6, SP, R6
0x060A	0x2514    MOVS	R5, #20
0x060C	0x19AD    ADDS	R5, R5, R6
0x060E	0x4F1C    LDR	R7, [PC, #112]
0x0610	0xF001FEA8  BL	___CC2DW+0
;__Lib_Conversions.c, 1077 :: 		
;__Lib_Conversions.c, 1078 :: 		
;__Lib_Conversions.c, 1079 :: 		
;__Lib_Conversions.c, 1081 :: 		
0x0614	0x9806    LDR	R0, [SP, #24]
0x0616	0xF7FFFF41  BL	_strlen+0
0x061A	0x9000    STR	R0, [SP, #0]
;__Lib_Conversions.c, 1083 :: 		
0x061C	0xB2C1    UXTB	R1, R0
0x061E	0x290A    CMP	R1, #10
0x0620	0xD828    BHI	L_StrToLong217
;__Lib_Conversions.c, 1085 :: 		
0x0622	0x2204    MOVS	R2, #4
0x0624	0x446A    ADD	R2, SP, R2
0x0626	0x2108    MOVS	R1, #8
0x0628	0x4469    ADD	R1, SP, R1
0x062A	0x9806    LDR	R0, [SP, #24]
0x062C	0xF7FFFE3E  BL	__Lib_Conversions_Forward_Input+0
; multiplier start address is: 0 (R0)
;__Lib_Conversions.c, 1087 :: 		
0x0630	0x9901    LDR	R1, [SP, #4]
0x0632	0xB2C9    UXTB	R1, R1
0x0634	0x2900    CMP	R1, #0
0x0636	0xD11A    BNE	L_StrToLong218
;__Lib_Conversions.c, 1089 :: 		
; i start address is: 28 (R7)
0x0638	0x2700    MOVS	R7, #0
; multiplier end address is: 0 (R0)
; i end address is: 28 (R7)
0x063A	0xB2FE    UXTB	R6, R7
L_StrToLong219:
; i start address is: 24 (R6)
; multiplier start address is: 0 (R0)
0x063C	0x9900    LDR	R1, [SP, #0]
0x063E	0xB2C9    UXTB	R1, R1
0x0640	0x428E    CMP	R6, R1
0x0642	0xD213    BCS	L_StrToLong220
;__Lib_Conversions.c, 1091 :: 		
0x0644	0x2108    MOVS	R1, #8
0x0646	0x4469    ADD	R1, SP, R1
0x0648	0x1989    ADDS	R1, R1, R6
0x064A	0x7809    LDRB	R1, [R1, #0]
0x064C	0x3930    SUBS	R1, #48
0x064E	0xB209    SXTH	R1, R1
0x0650	0x4602    MOV	R2, R0
0x0652	0x434A    MULS	R2, R1, R2
0x0654	0x9905    LDR	R1, [SP, #20]
0x0656	0x1889    ADDS	R1, R1, R2
0x0658	0x9105    STR	R1, [SP, #20]
;__Lib_Conversions.c, 1092 :: 		
0x065A	0x220A    MOVS	R2, #10
0x065C	0xF7FFFD30  BL	__Div_32x32_U+0
; multiplier end address is: 0 (R0)
; multiplier start address is: 8 (R2)
0x0660	0x4602    MOV	R2, R0
;__Lib_Conversions.c, 1089 :: 		
0x0662	0x1C71    ADDS	R1, R6, #1
; i end address is: 24 (R6)
; i start address is: 28 (R7)
0x0664	0xB2CF    UXTB	R7, R1
;__Lib_Conversions.c, 1093 :: 		
0x0666	0x4610    MOV	R0, R2
; multiplier end address is: 8 (R2)
; i end address is: 28 (R7)
0x0668	0xB2FE    UXTB	R6, R7
0x066A	0xE7E7    B	L_StrToLong219
L_StrToLong220:
;__Lib_Conversions.c, 1094 :: 		
0x066C	0xE001    B	L_StrToLong222
L_StrToLong218:
;__Lib_Conversions.c, 1095 :: 		
0x066E	0x2100    MOVS	R1, #0
0x0670	0x9105    STR	R1, [SP, #20]
L_StrToLong222:
;__Lib_Conversions.c, 1096 :: 		
0x0672	0xE001    B	L_StrToLong223
L_StrToLong217:
;__Lib_Conversions.c, 1097 :: 		
0x0674	0x2100    MOVS	R1, #0
0x0676	0x9105    STR	R1, [SP, #20]
L_StrToLong223:
;__Lib_Conversions.c, 1098 :: 		
0x0678	0x9805    LDR	R0, [SP, #20]
;__Lib_Conversions.c, 1099 :: 		
L_end_StrToLong:
0x067A	0xB007    ADD	SP, SP, #28
0x067C	0xBD00    POP	(R15)
0x067E	0xBF00    NOP
0x0680	0x5F500000  	?ICSStrToLong_counter_L0+0
; end of _StrToLong
_vRF4463TxData:
;driverrf4463pro.c, 519 :: 		void vRF4463TxData( void ) {
0x1DF8	0xB500    PUSH	(R14)
0x1DFA	0xB08D    SUB	SP, SP, #52
;driverrf4463pro.c, 521 :: 		ucRF4463IRQ = 0;
0x1DFC	0x2100    MOVS	R1, #0
0x1DFE	0x4840    LDR	R0, [PC, #256]
0x1E00	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 522 :: 		Flag.is_tx = 1;
0x1E02	0x4A40    LDR	R2, [PC, #256]
0x1E04	0x7810    LDRB	R0, [R2, #0]
0x1E06	0x2102    MOVS	R1, #2
0x1E08	0x4308    ORRS	R0, R1
0x1E0A	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 523 :: 		LED_BLUE^= 1;
0x1E0C	0x483E    LDR	R0, [PC, #248]
0x1E0E	0x6800    LDR	R0, [R0, #0]
0x1E10	0x2101    MOVS	R1, #1
0x1E12	0x0209    LSLS	R1, R1, #8
0x1E14	0x4001    ANDS	R1, R0
0x1E16	0x0A09    LSRS	R1, R1, #8
0x1E18	0x2001    MOVS	R0, #1
0x1E1A	0x4048    EORS	R0, R1
0x1E1C	0xB2C3    UXTB	R3, R0
0x1E1E	0x4A3A    LDR	R2, [PC, #232]
0x1E20	0x6810    LDR	R0, [R2, #0]
0x1E22	0x2101    MOVS	R1, #1
0x1E24	0x4019    ANDS	R1, R3
0x1E26	0xD003    BEQ	L__vRF4463TxData466
0x1E28	0x2101    MOVS	R1, #1
0x1E2A	0x0209    LSLS	R1, R1, #8
0x1E2C	0x4308    ORRS	R0, R1
0x1E2E	0xE002    B	L__vRF4463TxData465
L__vRF4463TxData466:
0x1E30	0x2101    MOVS	R1, #1
0x1E32	0x0209    LSLS	R1, R1, #8
0x1E34	0x4388    BICS	R0, R1
L__vRF4463TxData465:
0x1E36	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 524 :: 		Delay_ms( 30 );
0x1E38	0x4F02    LDR	R7, [PC, #8]
0x1E3A	0xBF00    NOP
L_vRF4463TxData127:
0x1E3C	0x1E7F    SUBS	R7, R7, #1
0x1E3E	0xD1FD    BNE	L_vRF4463TxData127
0x1E40	0xE002    B	#4
0x1E42	0xBF00    NOP
0x1E44	0xD4BF0001  	#119999
;driverrf4463pro.c, 525 :: 		LED_BLUE ^= 1;
0x1E48	0x482F    LDR	R0, [PC, #188]
0x1E4A	0x6800    LDR	R0, [R0, #0]
0x1E4C	0x2101    MOVS	R1, #1
0x1E4E	0x0209    LSLS	R1, R1, #8
0x1E50	0x4001    ANDS	R1, R0
0x1E52	0x0A09    LSRS	R1, R1, #8
0x1E54	0x2001    MOVS	R0, #1
0x1E56	0x4048    EORS	R0, R1
0x1E58	0xB2C3    UXTB	R3, R0
0x1E5A	0x4A2B    LDR	R2, [PC, #172]
0x1E5C	0x6810    LDR	R0, [R2, #0]
0x1E5E	0x2101    MOVS	R1, #1
0x1E60	0x4019    ANDS	R1, R3
0x1E62	0xD003    BEQ	L__vRF4463TxData468
0x1E64	0x2101    MOVS	R1, #1
0x1E66	0x0209    LSLS	R1, R1, #8
0x1E68	0x4308    ORRS	R0, R1
0x1E6A	0xE002    B	L__vRF4463TxData467
L__vRF4463TxData468:
0x1E6C	0x2101    MOVS	R1, #1
0x1E6E	0x0209    LSLS	R1, R1, #8
0x1E70	0x4388    BICS	R0, R1
L__vRF4463TxData467:
0x1E72	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 526 :: 		UART1_Write_Text( "[ SYS STM32G ]Transmiting...\r\n" );
0x1E74	0x466E    MOV	R6, SP
0x1E76	0x251F    MOVS	R5, #31
0x1E78	0x19AD    ADDS	R5, R5, R6
0x1E7A	0x4F24    LDR	R7, [PC, #144]
0x1E7C	0xF000FA72  BL	___CC2DW+0
0x1E80	0x4668    MOV	R0, SP
0x1E82	0xF000FAA5  BL	_UART1_Write_Text+0
;driverrf4463pro.c, 527 :: 		vRF4463FifoReset();            // fifo_reset();  // Buffer empty
0x1E86	0xF7FEFE79  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 528 :: 		spi_write_fifo();              // Fill the buffer with data
0x1E8A	0xF7FFFCCD  BL	_spi_write_fifo+0
;driverrf4463pro.c, 529 :: 		vRF4463EnableTxInterrupt();    // enable_tx_interrupt();
0x1E8E	0xF7FFFB19  BL	_vRF4463EnableTxInterrupt+0
;driverrf4463pro.c, 530 :: 		vRF4463ClearInterrupts();       // clr_interrupt();  // Clear interrupt factor
0x1E92	0xF000FAD1  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 531 :: 		vRF4463TxStart();              // tx_start();    // Enter launch mode, start launch
0x1E96	0xF7FFFAFB  BL	_vRF4463TxStart+0
;driverrf4463pro.c, 532 :: 		rf_timeout = 0;
0x1E9A	0x2100    MOVS	R1, #0
0x1E9C	0x481C    LDR	R0, [PC, #112]
0x1E9E	0x8001    STRH	R1, [R0, #0]
;driverrf4463pro.c, 534 :: 		Flag.rf_reach_timeout = 0;
0x1EA0	0x4A18    LDR	R2, [PC, #96]
0x1EA2	0x7810    LDRB	R0, [R2, #0]
0x1EA4	0x2104    MOVS	R1, #4
0x1EA6	0x4388    BICS	R0, R1
0x1EA8	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 536 :: 		if ( ucRF4463IRQ ) {
0x1EAA	0x4815    LDR	R0, [PC, #84]
0x1EAC	0x7800    LDRB	R0, [R0, #0]
0x1EAE	0x2800    CMP	R0, #0
0x1EB0	0xD00A    BEQ	L_vRF4463TxData129
;driverrf4463pro.c, 537 :: 		UART1_Write_Text( "[ UART1 ] TX INT\r\n" );
0x1EB2	0x2620    MOVS	R6, #32
0x1EB4	0x446E    ADD	R6, SP, R6
0x1EB6	0x2513    MOVS	R5, #19
0x1EB8	0x19AD    ADDS	R5, R5, R6
0x1EBA	0x4F16    LDR	R7, [PC, #88]
0x1EBC	0xF000FA52  BL	___CC2DW+0
0x1EC0	0x2020    MOVS	R0, #32
0x1EC2	0x4468    ADD	R0, SP, R0
0x1EC4	0xF000FA84  BL	_UART1_Write_Text+0
;driverrf4463pro.c, 538 :: 		}
L_vRF4463TxData129:
;driverrf4463pro.c, 541 :: 		while ( nIRQ ) {     //nIRQ
L_vRF4463TxData130:
0x1EC8	0x4813    LDR	R0, [PC, #76]
0x1ECA	0x6801    LDR	R1, [R0, #0]
0x1ECC	0x2004    MOVS	R0, #4
0x1ECE	0x4008    ANDS	R0, R1
0x1ED0	0x0880    LSRS	R0, R0, #2
0x1ED2	0x2800    CMP	R0, #0
0x1ED4	0xD00C    BEQ	L_vRF4463TxData131
;driverrf4463pro.c, 544 :: 		if ( Flag.rf_reach_timeout ) {
0x1ED6	0x480B    LDR	R0, [PC, #44]
0x1ED8	0x7801    LDRB	R1, [R0, #0]
0x1EDA	0x2004    MOVS	R0, #4
0x1EDC	0x4008    ANDS	R0, R1
0x1EDE	0x0880    LSRS	R0, R0, #2
0x1EE0	0x2800    CMP	R0, #0
0x1EE2	0xD004    BEQ	L_vRF4463TxData132
;driverrf4463pro.c, 545 :: 		VRF4463SDNReset();
0x1EE4	0xF000FAC0  BL	_VRF4463SDNReset+0
;driverrf4463pro.c, 546 :: 		vRF4463Init();        //SI4463_init();  // RF Module initialization
0x1EE8	0xF000FB06  BL	_vRF4463Init+0
;driverrf4463pro.c, 547 :: 		break;                // Forced out
0x1EEC	0xE000    B	L_vRF4463TxData131
;driverrf4463pro.c, 548 :: 		}
L_vRF4463TxData132:
;driverrf4463pro.c, 549 :: 		}
0x1EEE	0xE7EB    B	L_vRF4463TxData130
L_vRF4463TxData131:
;driverrf4463pro.c, 551 :: 		tx_cnt++;
0x1EF0	0x490A    LDR	R1, [PC, #40]
0x1EF2	0x6808    LDR	R0, [R1, #0]
0x1EF4	0x3001    ADDS	R0, #1
0x1EF6	0x6008    STR	R0, [R1, #0]
;driverrf4463pro.c, 553 :: 		vRF4463RxInit();          // rx_init();                //rf After the transmission is completed, enter the receiving mode
0x1EF8	0xF7FFFAB0  BL	_vRF4463RxInit+0
;driverrf4463pro.c, 554 :: 		}
L_end_vRF4463TxData:
0x1EFC	0xB00D    ADD	SP, SP, #52
0x1EFE	0xBD00    POP	(R15)
0x1F00	0x21FB2000  	DriverRF4463PROMain_ucRF4463IRQ+0
0x1F04	0x22AC2000  	_Flag+0
0x1F08	0x04145000  	GPIOB_ODRbits+0
0x1F0C	0x5F1C0000  	?ICS?lstr1_DriverRF4463PROMain+0
0x1F10	0x22F02000  	_rf_timeout+0
0x1F14	0x5F3C0000  	?ICS?lstr2_DriverRF4463PROMain+0
0x1F18	0x00105000  	GPIOA_IDRbits+0
0x1F1C	0x21FC2000  	_tx_cnt+0
; end of _vRF4463TxData
_vRF4463FifoReset:
;driverrf4463pro.c, 384 :: 		void vRF4463FifoReset( void ) {
0x0B7C	0xB500    PUSH	(R14)
0x0B7E	0xB081    SUB	SP, SP, #4
;driverrf4463pro.c, 387 :: 		p[ 0 ] = FIFO_INFO;
0x0B80	0x466A    MOV	R2, SP
0x0B82	0x2015    MOVS	R0, #21
0x0B84	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 388 :: 		p[ 1 ] = 0x03;   // reset tx ,rx fifo
0x0B86	0x1C51    ADDS	R1, R2, #1
0x0B88	0x2003    MOVS	R0, #3
0x0B8A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 389 :: 		spi_write( 2, p );
0x0B8C	0x4611    MOV	R1, R2
0x0B8E	0x2002    MOVS	R0, #2
0x0B90	0xF000FFF0  BL	_spi_write+0
;driverrf4463pro.c, 390 :: 		}
L_end_vRF4463FifoReset:
0x0B94	0xB001    ADD	SP, SP, #4
0x0B96	0xBD00    POP	(R15)
; end of _vRF4463FifoReset
_spi_write_fifo:
;driverrf4463pro.c, 804 :: 		void spi_write_fifo( void ) {
0x1828	0xB500    PUSH	(R14)
;driverrf4463pro.c, 807 :: 		i = 0;
; i start address is: 0 (R0)
0x182A	0x2000    MOVS	R0, #0
; i end address is: 0 (R0)
;driverrf4463pro.c, 808 :: 		while ( i != 0xFF ) {
L_spi_write_fifo167:
; i start address is: 0 (R0)
0x182C	0x28FF    CMP	R0, #255
0x182E	0xD002    BEQ	L_spi_write_fifo168
; i end address is: 0 (R0)
;driverrf4463pro.c, 809 :: 		i = check_cts();                // Check if you can send Command
0x1830	0xF7FEFF28  BL	_check_cts+0
; i start address is: 0 (R0)
;driverrf4463pro.c, 810 :: 		}
; i end address is: 0 (R0)
0x1834	0xE7FA    B	L_spi_write_fifo167
L_spi_write_fifo168:
;driverrf4463pro.c, 812 :: 		nSEL = 1;
0x1836	0x4A17    LDR	R2, [PC, #92]
0x1838	0x6810    LDR	R0, [R2, #0]
0x183A	0x2108    MOVS	R1, #8
0x183C	0x4308    ORRS	R0, R1
0x183E	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 813 :: 		nSEL = 0;
0x1840	0x4A14    LDR	R2, [PC, #80]
0x1842	0x6810    LDR	R0, [R2, #0]
0x1844	0x2108    MOVS	R1, #8
0x1846	0x4388    BICS	R0, R1
0x1848	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 814 :: 		ucRf4463SPIByte( WRITE_TX_FIFO );
0x184A	0x2066    MOVS	R0, #102
0x184C	0xF7FEFDEA  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 816 :: 		if ( ucRF4463Mode == tx_test_mode) {
0x1850	0x4811    LDR	R0, [PC, #68]
0x1852	0x7800    LDRB	R0, [R0, #0]
0x1854	0x2802    CMP	R0, #2
0x1856	0xD10B    BNE	L_spi_write_fifo169
;driverrf4463pro.c, 817 :: 		for ( i = 0; i < payload_length; i++ ) {
; i start address is: 20 (R5)
0x1858	0x2500    MOVS	R5, #0
; i end address is: 20 (R5)
L_spi_write_fifo170:
; i start address is: 20 (R5)
0x185A	0x2D42    CMP	R5, #66
0x185C	0xD207    BCS	L_spi_write_fifo171
;driverrf4463pro.c, 818 :: 		ucRf4463SPIByte( tx_test_aa_data[ i ] );   // Send 10 test data
0x185E	0x480F    LDR	R0, [PC, #60]
0x1860	0x1940    ADDS	R0, R0, R5
0x1862	0x7800    LDRB	R0, [R0, #0]
0x1864	0xF7FEFDDE  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 817 :: 		for ( i = 0; i < payload_length; i++ ) {
0x1868	0x3501    ADDS	R5, #1
0x186A	0xB2ED    UXTB	R5, R5
;driverrf4463pro.c, 819 :: 		}
; i end address is: 20 (R5)
0x186C	0xE7F5    B	L_spi_write_fifo170
L_spi_write_fifo171:
;driverrf4463pro.c, 820 :: 		}
0x186E	0xE00A    B	L_spi_write_fifo173
L_spi_write_fifo169:
;driverrf4463pro.c, 822 :: 		for ( i = 0; i < payload_length; i++ ) {
; i start address is: 20 (R5)
0x1870	0x2500    MOVS	R5, #0
; i end address is: 20 (R5)
L_spi_write_fifo174:
; i start address is: 20 (R5)
0x1872	0x2D42    CMP	R5, #66
0x1874	0xD207    BCS	L_spi_write_fifo175
;driverrf4463pro.c, 823 :: 		ucRf4463SPIByte( ucRF4463TXdata[ i ] );
0x1876	0x480A    LDR	R0, [PC, #40]
0x1878	0x1940    ADDS	R0, R0, R5
0x187A	0x7800    LDRB	R0, [R0, #0]
0x187C	0xF7FEFDD2  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 822 :: 		for ( i = 0; i < payload_length; i++ ) {
0x1880	0x3501    ADDS	R5, #1
0x1882	0xB2ED    UXTB	R5, R5
;driverrf4463pro.c, 824 :: 		}
; i end address is: 20 (R5)
0x1884	0xE7F5    B	L_spi_write_fifo174
L_spi_write_fifo175:
;driverrf4463pro.c, 825 :: 		}
L_spi_write_fifo173:
;driverrf4463pro.c, 826 :: 		nSEL = 1;
0x1886	0x4A03    LDR	R2, [PC, #12]
0x1888	0x6810    LDR	R0, [R2, #0]
0x188A	0x2108    MOVS	R1, #8
0x188C	0x4308    ORRS	R0, R1
0x188E	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 827 :: 		}
L_end_spi_write_fifo:
0x1890	0xBD00    POP	(R15)
0x1892	0xBF00    NOP
0x1894	0x00145000  	GPIOA_ODRbits+0
0x1898	0x22972000  	_ucRF4463Mode+0
0x189C	0x5F740000  	_tx_test_aa_data+0
0x18A0	0x5EA30000  	_ucRF4463TXdata+0
; end of _spi_write_fifo
_vRF4463EnableTxInterrupt:
;driverrf4463pro.c, 427 :: 		void vRF4463EnableTxInterrupt( void ) {
0x14C4	0xB500    PUSH	(R14)
0x14C6	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 430 :: 		p[ 0 ] = 0x11;
0x14C8	0x466A    MOV	R2, SP
0x14CA	0x2011    MOVS	R0, #17
0x14CC	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 431 :: 		p[ 1 ] = 0x01;            // 0x0100
0x14CE	0x1C51    ADDS	R1, R2, #1
0x14D0	0x2001    MOVS	R0, #1
0x14D2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 432 :: 		p[ 2 ] = 0x02;            // 2Parameters
0x14D4	0x1C91    ADDS	R1, R2, #2
0x14D6	0x2002    MOVS	R0, #2
0x14D8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 433 :: 		p[ 3 ] = 0x00;            // 0x0100
0x14DA	0x1CD1    ADDS	R1, R2, #3
0x14DC	0x2000    MOVS	R0, #0
0x14DE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 434 :: 		p[ 4 ] = 0x01;            // Ph  int
0x14E0	0x1D11    ADDS	R1, R2, #4
0x14E2	0x2001    MOVS	R0, #1
0x14E4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 435 :: 		p[ 5 ] = 0x20;            //  enable  packet sent interrupt
0x14E6	0x1D51    ADDS	R1, R2, #5
0x14E8	0x2020    MOVS	R0, #32
0x14EA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 436 :: 		spi_write( 0x06, p );     // enable  packet receive interrupt
0x14EC	0x4611    MOV	R1, R2
0x14EE	0x2006    MOVS	R0, #6
0x14F0	0xF000FB40  BL	_spi_write+0
;driverrf4463pro.c, 437 :: 		}
L_end_vRF4463EnableTxInterrupt:
0x14F4	0xB002    ADD	SP, SP, #8
0x14F6	0xBD00    POP	(R15)
; end of _vRF4463EnableTxInterrupt
_vRF4463TxStart:
;driverrf4463pro.c, 453 :: 		void vRF4463TxStart( void ) {
0x1490	0xB500    PUSH	(R14)
0x1492	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 456 :: 		p[ 0 ] = START_TX ;              // start Command
0x1494	0x466A    MOV	R2, SP
0x1496	0x2031    MOVS	R0, #49
0x1498	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 457 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 1 default
0x149A	0x1C51    ADDS	R1, R2, #1
0x149C	0x4808    LDR	R0, [PC, #32]
0x149E	0x7800    LDRB	R0, [R0, #0]
0x14A0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 458 :: 		p[ 2 ] = 0x30;                   // Back after launch Readymode, Do not retransmit, launch immediately
0x14A2	0x1C91    ADDS	R1, R2, #2
0x14A4	0x2030    MOVS	R0, #48
0x14A6	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 459 :: 		p[ 3 ] = 0;
0x14A8	0x1CD1    ADDS	R1, R2, #3
0x14AA	0x2000    MOVS	R0, #0
0x14AC	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 460 :: 		p[ 4 ] = 0;                      // payload_length; // Total to transmit 10 bytes
0x14AE	0x1D11    ADDS	R1, R2, #4
0x14B0	0x2000    MOVS	R0, #0
0x14B2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 461 :: 		spi_write( 5, p );
0x14B4	0x4611    MOV	R1, R2
0x14B6	0x2005    MOVS	R0, #5
0x14B8	0xF000FB5C  BL	_spi_write+0
;driverrf4463pro.c, 462 :: 		}
L_end_vRF4463TxStart:
0x14BC	0xB002    ADD	SP, SP, #8
0x14BE	0xBD00    POP	(R15)
0x14C0	0x207C2000  	_ucRF4463FreqChannel+0
; end of _vRF4463TxStart
_vRF4463RxInit:
;driverrf4463pro.c, 505 :: 		void vRF4463RxInit( void ) {
0x145C	0xB500    PUSH	(R14)
;driverrf4463pro.c, 506 :: 		Flag.is_tx = 0;
0x145E	0x4A0A    LDR	R2, [PC, #40]
0x1460	0x7810    LDRB	R0, [R2, #0]
0x1462	0x2102    MOVS	R1, #2
0x1464	0x4388    BICS	R0, R1
0x1466	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 507 :: 		vRF4463FifoReset();           // fifo_reset();  // Buffer empty
0x1468	0xF7FFFB88  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 508 :: 		vRF4463EnableRxInterrupt();   // enable_rx_interrupt();
0x146C	0xF7FFF8AA  BL	_vRF4463EnableRxInterrupt+0
;driverrf4463pro.c, 509 :: 		vRF4463ClearInterrupts();      // clr_interrupt();  // Clear interrupt factor
0x1470	0xF000FFE2  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 511 :: 		if ( ucRF4463Mode == rx_test_mode ) {
0x1474	0x4805    LDR	R0, [PC, #20]
0x1476	0x7800    LDRB	R0, [R0, #0]
0x1478	0x2803    CMP	R0, #3
0x147A	0xD102    BNE	L_vRF4463RxInit125
;driverrf4463pro.c, 512 :: 		vRF4463RxStartTest();      // rx_start_test();
0x147C	0xF7FFFA76  BL	_vRF4463RxStartTest+0
;driverrf4463pro.c, 513 :: 		}
0x1480	0xE001    B	L_vRF4463RxInit126
L_vRF4463RxInit125:
;driverrf4463pro.c, 515 :: 		vRF4463RxStart();        // rx_start();    // Enter receiving mode, after receiving data, return to Readymode
0x1482	0xF7FFF94B  BL	_vRF4463RxStart+0
;driverrf4463pro.c, 516 :: 		}
L_vRF4463RxInit126:
;driverrf4463pro.c, 517 :: 		}
L_end_vRF4463RxInit:
0x1486	0xBD00    POP	(R15)
0x1488	0x22AC2000  	_Flag+0
0x148C	0x22972000  	_ucRF4463Mode+0
; end of _vRF4463RxInit
_vRF4463EnableRxInterrupt:
;driverrf4463pro.c, 414 :: 		void vRF4463EnableRxInterrupt( void ) {
0x05C4	0xB500    PUSH	(R14)
0x05C6	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 417 :: 		p[ 0 ] = 0x11;
0x05C8	0x466A    MOV	R2, SP
0x05CA	0x2011    MOVS	R0, #17
0x05CC	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 418 :: 		p[ 1 ] = 0x01;            // 0x0100
0x05CE	0x1C51    ADDS	R1, R2, #1
0x05D0	0x2001    MOVS	R0, #1
0x05D2	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 419 :: 		p[ 2 ] = 0x03;            // 3Parameters
0x05D4	0x1C91    ADDS	R1, R2, #2
0x05D6	0x2003    MOVS	R0, #3
0x05D8	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 420 :: 		p[ 3 ] = 0x00;            // 0100
0x05DA	0x1CD1    ADDS	R1, R2, #3
0x05DC	0x2000    MOVS	R0, #0
0x05DE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 421 :: 		p[ 4 ] = 0x03;            // ph, modem int       0x03;
0x05E0	0x1D11    ADDS	R1, R2, #4
0x05E2	0x2003    MOVS	R0, #3
0x05E4	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 422 :: 		p[ 5 ] = 0x18;            // 0x10;   // Pack received int
0x05E6	0x1D51    ADDS	R1, R2, #5
0x05E8	0x2018    MOVS	R0, #24
0x05EA	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 423 :: 		p[ 6 ] = 0x00;            //preamble int, sync int setting
0x05EC	0x1D91    ADDS	R1, R2, #6
0x05EE	0x2000    MOVS	R0, #0
0x05F0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 424 :: 		spi_write( 0x07, p );     // enable  packet receive interrupt
0x05F2	0x4611    MOV	R1, R2
0x05F4	0x2007    MOVS	R0, #7
0x05F6	0xF001FABD  BL	_spi_write+0
;driverrf4463pro.c, 425 :: 		}
L_end_vRF4463EnableRxInterrupt:
0x05FA	0xB002    ADD	SP, SP, #8
0x05FC	0xBD00    POP	(R15)
; end of _vRF4463EnableRxInterrupt
_vRF4463RxStartTest:
;driverrf4463pro.c, 486 :: 		void vRF4463RxStartTest( void ) {
0x096C	0xB500    PUSH	(R14)
0x096E	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 491 :: 		p[ 0 ] = START_RX;        // start Command
0x0970	0x466A    MOV	R2, SP
0x0972	0x2032    MOVS	R0, #50
0x0974	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 492 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 0
0x0976	0x1C51    ADDS	R1, R2, #1
0x0978	0x480D    LDR	R0, [PC, #52]
0x097A	0x7800    LDRB	R0, [R0, #0]
0x097C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 493 :: 		p[ 2 ] = 0x00;            // Enter receiving mode immediately
0x097E	0x1C91    ADDS	R1, R2, #2
0x0980	0x2000    MOVS	R0, #0
0x0982	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 494 :: 		p[ 3 ] = 0;
0x0984	0x1CD1    ADDS	R1, R2, #3
0x0986	0x2000    MOVS	R0, #0
0x0988	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 496 :: 		p[ 4 ] = 0;
0x098A	0x1D11    ADDS	R1, R2, #4
0x098C	0x2000    MOVS	R0, #0
0x098E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 497 :: 		p[ 5 ] = 0;               // unchanged after preamble timeout
0x0990	0x1D51    ADDS	R1, R2, #5
0x0992	0x2000    MOVS	R0, #0
0x0994	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 500 :: 		p[ 6 ] = 0x08;
0x0996	0x1D91    ADDS	R1, R2, #6
0x0998	0x2008    MOVS	R0, #8
0x099A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 501 :: 		p[ 7 ] = 0x08;
0x099C	0x1DD1    ADDS	R1, R2, #7
0x099E	0x2008    MOVS	R0, #8
0x09A0	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 502 :: 		spi_write( 8, p );
0x09A2	0x4611    MOV	R1, R2
0x09A4	0x2008    MOVS	R0, #8
0x09A6	0xF001F8E5  BL	_spi_write+0
;driverrf4463pro.c, 503 :: 		}
L_end_vRF4463RxStartTest:
0x09AA	0xB002    ADD	SP, SP, #8
0x09AC	0xBD00    POP	(R15)
0x09AE	0xBF00    NOP
0x09B0	0x207C2000  	_ucRF4463FreqChannel+0
; end of _vRF4463RxStartTest
_vRF4463RxStart:
;driverrf4463pro.c, 467 :: 		void vRF4463RxStart( void ) {
0x071C	0xB500    PUSH	(R14)
0x071E	0xB082    SUB	SP, SP, #8
;driverrf4463pro.c, 470 :: 		p[ 0 ] = START_RX ;              // start Command
0x0720	0x466A    MOV	R2, SP
0x0722	0x2032    MOVS	R0, #50
0x0724	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 471 :: 		p[ 1 ] = ucRF4463FreqChannel;    // channel 0
0x0726	0x1C51    ADDS	R1, R2, #1
0x0728	0x480D    LDR	R0, [PC, #52]
0x072A	0x7800    LDRB	R0, [R0, #0]
0x072C	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 472 :: 		p[ 2 ] = 0x00;                   // Enter receiving mode immediately
0x072E	0x1C91    ADDS	R1, R2, #2
0x0730	0x2000    MOVS	R0, #0
0x0732	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 473 :: 		p[ 3 ] = 0;
0x0734	0x1CD1    ADDS	R1, R2, #3
0x0736	0x2000    MOVS	R0, #0
0x0738	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 474 :: 		p[ 4 ] = 0;                      // payload_length; // Total to receive 10 bytes
0x073A	0x1D11    ADDS	R1, R2, #4
0x073C	0x2000    MOVS	R0, #0
0x073E	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 475 :: 		p[ 5 ] = 0;                      // unchanged after preamble timeout
0x0740	0x1D51    ADDS	R1, R2, #5
0x0742	0x2000    MOVS	R0, #0
0x0744	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 478 :: 		p[ 6 ] = 0x08;
0x0746	0x1D91    ADDS	R1, R2, #6
0x0748	0x2008    MOVS	R0, #8
0x074A	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 479 :: 		p[ 7 ] = 0x08;
0x074C	0x1DD1    ADDS	R1, R2, #7
0x074E	0x2008    MOVS	R0, #8
0x0750	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 480 :: 		spi_write( 8, p );
0x0752	0x4611    MOV	R1, R2
0x0754	0x2008    MOVS	R0, #8
0x0756	0xF001FA0D  BL	_spi_write+0
;driverrf4463pro.c, 481 :: 		}
L_end_vRF4463RxStart:
0x075A	0xB002    ADD	SP, SP, #8
0x075C	0xBD00    POP	(R15)
0x075E	0xBF00    NOP
0x0760	0x207C2000  	_ucRF4463FreqChannel+0
; end of _vRF4463RxStart
_vRF4463TxCont:
;driverrf4463pro.c, 559 :: 		void vRF4463TxCont( void ) {
0x1F20	0xB500    PUSH	(R14)
;driverrf4463pro.c, 563 :: 		vRF4463FifoReset();                     //  fifo_reset();  // Buffer empty
0x1F22	0xF7FEFE2B  BL	_vRF4463FifoReset+0
;driverrf4463pro.c, 564 :: 		spi_write_fifo();                       // Fill the buffer with data
0x1F26	0xF7FFFC7F  BL	_spi_write_fifo+0
;driverrf4463pro.c, 565 :: 		vRF4463EnableTxInterrupt();             //  enable_tx_interrupt();
0x1F2A	0xF7FFFACB  BL	_vRF4463EnableTxInterrupt+0
;driverrf4463pro.c, 566 :: 		vRF4463ClearInterrupts();               //  clr_interrupt();  // Clear interrupt factor
0x1F2E	0xF000FA83  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 567 :: 		vRF4463TxStart();                       //  tx_start();    // Enter launch mode, start launch
0x1F32	0xF7FFFAAD  BL	_vRF4463TxStart+0
;driverrf4463pro.c, 568 :: 		rf_timeout = 0;
0x1F36	0x2100    MOVS	R1, #0
0x1F38	0x4809    LDR	R0, [PC, #36]
0x1F3A	0x8001    STRH	R1, [R0, #0]
;driverrf4463pro.c, 569 :: 		Flag.rf_reach_timeout = 0;
0x1F3C	0x4A09    LDR	R2, [PC, #36]
0x1F3E	0x7810    LDRB	R0, [R2, #0]
0x1F40	0x2104    MOVS	R1, #4
0x1F42	0x4388    BICS	R0, R1
0x1F44	0x7010    STRB	R0, [R2, #0]
;driverrf4463pro.c, 571 :: 		ucRF4463IRQ = 0;
0x1F46	0x2100    MOVS	R1, #0
0x1F48	0x4807    LDR	R0, [PC, #28]
0x1F4A	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 574 :: 		while( nIRQ ) {          //nIRQ ) {
L_vRF4463TxCont133:
0x1F4C	0x4807    LDR	R0, [PC, #28]
0x1F4E	0x6801    LDR	R1, [R0, #0]
0x1F50	0x2004    MOVS	R0, #4
0x1F52	0x4008    ANDS	R0, R1
0x1F54	0x0880    LSRS	R0, R0, #2
0x1F56	0x2800    CMP	R0, #0
0x1F58	0xD000    BEQ	L_vRF4463TxCont134
;driverrf4463pro.c, 582 :: 		}
0x1F5A	0xE7F7    B	L_vRF4463TxCont133
L_vRF4463TxCont134:
;driverrf4463pro.c, 583 :: 		}
L_end_vRF4463TxCont:
0x1F5C	0xBD00    POP	(R15)
0x1F5E	0xBF00    NOP
0x1F60	0x22F02000  	_rf_timeout+0
0x1F64	0x22AC2000  	_Flag+0
0x1F68	0x21FB2000  	DriverRF4463PROMain_ucRF4463IRQ+0
0x1F6C	0x00105000  	GPIOA_IDRbits+0
; end of _vRF4463TxCont
_spi_read_fifo:
;driverrf4463pro.c, 832 :: 		void spi_read_fifo( void ) {
0x1F70	0xB500    PUSH	(R14)
0x1F72	0xB081    SUB	SP, SP, #4
;driverrf4463pro.c, 835 :: 		i = 0;
; i start address is: 0 (R0)
0x1F74	0x2000    MOVS	R0, #0
; i end address is: 0 (R0)
;driverrf4463pro.c, 836 :: 		while ( i != 0xFF ) {
L_spi_read_fifo177:
; i start address is: 0 (R0)
0x1F76	0x28FF    CMP	R0, #255
0x1F78	0xD002    BEQ	L_spi_read_fifo178
; i end address is: 0 (R0)
;driverrf4463pro.c, 837 :: 		i = check_cts();                   // Check if you can send Command
0x1F7A	0xF7FEFB83  BL	_check_cts+0
; i start address is: 0 (R0)
;driverrf4463pro.c, 838 :: 		}
; i end address is: 0 (R0)
0x1F7E	0xE7FA    B	L_spi_read_fifo177
L_spi_read_fifo178:
;driverrf4463pro.c, 840 :: 		nSEL = 1;
0x1F80	0x4A10    LDR	R2, [PC, #64]
0x1F82	0x6810    LDR	R0, [R2, #0]
0x1F84	0x2108    MOVS	R1, #8
0x1F86	0x4308    ORRS	R0, R1
0x1F88	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 841 :: 		nSEL = 0;
0x1F8A	0x4A0E    LDR	R2, [PC, #56]
0x1F8C	0x6810    LDR	R0, [R2, #0]
0x1F8E	0x2108    MOVS	R1, #8
0x1F90	0x4388    BICS	R0, R1
0x1F92	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 842 :: 		ucRf4463SPIByte( READ_RX_FIFO );
0x1F94	0x2077    MOVS	R0, #119
0x1F96	0xF7FEFA45  BL	_ucRf4463SPIByte+0
;driverrf4463pro.c, 843 :: 		for ( i = 0; i < payload_length; i++ ) {
; i start address is: 20 (R5)
0x1F9A	0x2500    MOVS	R5, #0
; i end address is: 20 (R5)
L_spi_read_fifo179:
; i start address is: 20 (R5)
0x1F9C	0x2D42    CMP	R5, #66
0x1F9E	0xD20A    BCS	L_spi_read_fifo180
;driverrf4463pro.c, 844 :: 		rx_buf[ i ] = ucRf4463SPIByte( 0xFF );      // Receive 10 test data
0x1FA0	0x4809    LDR	R0, [PC, #36]
0x1FA2	0x1940    ADDS	R0, R0, R5
0x1FA4	0x9000    STR	R0, [SP, #0]
0x1FA6	0x20FF    MOVS	R0, #255
0x1FA8	0xF7FEFA3C  BL	_ucRf4463SPIByte+0
0x1FAC	0x9900    LDR	R1, [SP, #0]
0x1FAE	0x7008    STRB	R0, [R1, #0]
;driverrf4463pro.c, 843 :: 		for ( i = 0; i < payload_length; i++ ) {
0x1FB0	0x3501    ADDS	R5, #1
0x1FB2	0xB2ED    UXTB	R5, R5
;driverrf4463pro.c, 845 :: 		}
; i end address is: 20 (R5)
0x1FB4	0xE7F2    B	L_spi_read_fifo179
L_spi_read_fifo180:
;driverrf4463pro.c, 846 :: 		nSEL = 1;
0x1FB6	0x4A03    LDR	R2, [PC, #12]
0x1FB8	0x6810    LDR	R0, [R2, #0]
0x1FBA	0x2108    MOVS	R1, #8
0x1FBC	0x4308    ORRS	R0, R1
0x1FBE	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 847 :: 		}
L_end_spi_read_fifo:
0x1FC0	0xB001    ADD	SP, SP, #4
0x1FC2	0xBD00    POP	(R15)
0x1FC4	0x00145000  	GPIOA_ODRbits+0
0x1FC8	0x22AD2000  	_rx_buf+0
; end of _spi_read_fifo
__Lib_System_G0xx_InitialSetUpRCCRCC2:
;__Lib_System_G0xx.c, 416 :: 		
0x32D4	0xB500    PUSH	(R14)
0x32D6	0xB082    SUB	SP, SP, #8
;__Lib_System_G0xx.c, 426 :: 		
; ulRCC_CR start address is: 16 (R4)
0x32D8	0x4C18    LDR	R4, [PC, #96]
;__Lib_System_G0xx.c, 427 :: 		
; ulRCC_CFGR start address is: 20 (R5)
0x32DA	0x4D19    LDR	R5, [PC, #100]
;__Lib_System_G0xx.c, 428 :: 		
; ulRCC_PLLSYSCFGR start address is: 24 (R6)
0x32DC	0x4E19    LDR	R6, [PC, #100]
;__Lib_System_G0xx.c, 429 :: 		
; ulRCC_CCIPR start address is: 28 (R7)
0x32DE	0x4F1A    LDR	R7, [PC, #104]
;__Lib_System_G0xx.c, 430 :: 		
; ulRCC_BDCR start address is: 12 (R3)
0x32E0	0x4B1A    LDR	R3, [PC, #104]
;__Lib_System_G0xx.c, 431 :: 		
0x32E2	0x481B    LDR	R0, [PC, #108]
0x32E4	0x9001    STR	R0, [SP, #4]
;__Lib_System_G0xx.c, 432 :: 		
; ulPWR_CR1 start address is: 0 (R0)
0x32E6	0x481B    LDR	R0, [PC, #108]
;__Lib_System_G0xx.c, 434 :: 		
; Fosc_kHz start address is: 4 (R1)
0x32E8	0x491B    LDR	R1, [PC, #108]
;__Lib_System_G0xx.c, 436 :: 		
0x32EA	0x9300    STR	R3, [SP, #0]
; Fosc_kHz end address is: 4 (R1)
; ulPWR_CR1 end address is: 0 (R0)
0x32EC	0xF7FEFC6A  BL	__Lib_System_G0xx_set_core_latency+0
0x32F0	0x9B00    LDR	R3, [SP, #0]
;__Lib_System_G0xx.c, 438 :: 		
0x32F2	0x4A1A    LDR	R2, [PC, #104]
0x32F4	0x6810    LDR	R0, [R2, #0]
0x32F6	0x2101    MOVS	R1, #1
0x32F8	0x0209    LSLS	R1, R1, #8
0x32FA	0x4308    ORRS	R0, R1
0x32FC	0x6010    STR	R0, [R2, #0]
;__Lib_System_G0xx.c, 440 :: 		
0x32FE	0xF7FEFD3D  BL	__Lib_System_G0xx_SystemClockSetDefault+0
;__Lib_System_G0xx.c, 442 :: 		
0x3302	0x4817    LDR	R0, [PC, #92]
0x3304	0x6006    STR	R6, [R0, #0]
; ulRCC_PLLSYSCFGR end address is: 24 (R6)
;__Lib_System_G0xx.c, 443 :: 		
0x3306	0x4817    LDR	R0, [PC, #92]
0x3308	0x6004    STR	R4, [R0, #0]
; ulRCC_CR end address is: 16 (R4)
;__Lib_System_G0xx.c, 444 :: 		
0x330A	0x4817    LDR	R0, [PC, #92]
0x330C	0x6005    STR	R5, [R0, #0]
;__Lib_System_G0xx.c, 445 :: 		
0x330E	0x4817    LDR	R0, [PC, #92]
0x3310	0x6003    STR	R3, [R0, #0]
; ulRCC_BDCR end address is: 12 (R3)
;__Lib_System_G0xx.c, 446 :: 		
0x3312	0x9901    LDR	R1, [SP, #4]
0x3314	0x4816    LDR	R0, [PC, #88]
0x3316	0x6001    STR	R1, [R0, #0]
;__Lib_System_G0xx.c, 447 :: 		
0x3318	0x4816    LDR	R0, [PC, #88]
0x331A	0x6007    STR	R7, [R0, #0]
; ulRCC_CCIPR end address is: 28 (R7)
;__Lib_System_G0xx.c, 449 :: 		
0x331C	0xF7FEFCDA  BL	_is_clock_stable+0
; ulRCC_CFGR end address is: 20 (R5)
0x3320	0x462B    MOV	R3, R5
;__Lib_System_G0xx.c, 451 :: 		
L___Lib_System_G0xx_InitialSetUpRCCRCC259:
; ulRCC_CFGR start address is: 12 (R3)
0x3322	0x4811    LDR	R0, [PC, #68]
0x3324	0x6801    LDR	R1, [R0, #0]
0x3326	0x2038    MOVS	R0, #56
0x3328	0x460A    MOV	R2, R1
0x332A	0x4002    ANDS	R2, R0
0x332C	0x00D9    LSLS	R1, R3, #3
0x332E	0x2038    MOVS	R0, #56
0x3330	0x4008    ANDS	R0, R1
0x3332	0x4282    CMP	R2, R0
0x3334	0xD000    BEQ	L___Lib_System_G0xx_InitialSetUpRCCRCC260
;__Lib_System_G0xx.c, 452 :: 		
; ulRCC_CFGR end address is: 12 (R3)
0x3336	0xE7F4    B	L___Lib_System_G0xx_InitialSetUpRCCRCC259
L___Lib_System_G0xx_InitialSetUpRCCRCC260:
;__Lib_System_G0xx.c, 453 :: 		
L_end_InitialSetUpRCCRCC2:
0x3338	0xB002    ADD	SP, SP, #8
0x333A	0xBD00    POP	(R15)
0x333C	0x01000000  	#256
0x3340	0x00000000  	#0
0x3344	0x1000223E  	#574492672
0x3348	0x200A4000  	#1073750026
0x334C	0x00000000  	#0
0x3350	0x00000000  	#0
0x3354	0x04000000  	#1024
0x3358	0x3E800000  	#16000
0x335C	0x20004002  	FLASH_ACR+0
0x3360	0x100C4002  	RCC_PLLSYSCFGR+0
0x3364	0x10004002  	RCC_CR+0
0x3368	0x10084002  	RCC_CFGR+0
0x336C	0x105C4002  	RCC_BDCR+0
0x3370	0x10604002  	RCC_CSR+0
0x3374	0x10544002  	RCC_CCIPR+0
; end of __Lib_System_G0xx_InitialSetUpRCCRCC2
__Lib_System_G0xx_set_core_latency:
;__Lib_System_G0xx.c, 351 :: 		
; hclk_freq start address is: 4 (R1)
; core_voltage_value start address is: 0 (R0)
0x1BC4	0xB500    PUSH	(R14)
; hclk_freq end address is: 4 (R1)
; core_voltage_value end address is: 0 (R0)
; core_voltage_value start address is: 0 (R0)
; hclk_freq start address is: 4 (R1)
;__Lib_System_G0xx.c, 353 :: 		
0x1BC6	0x4A3B    LDR	R2, [PC, #236]
0x1BC8	0x4002    ANDS	R2, R0
0x1BCA	0x2A00    CMP	R2, #0
0x1BCC	0xD022    BEQ	L___Lib_System_G0xx_set_core_latency23
; core_voltage_value end address is: 0 (R0)
;__Lib_System_G0xx.c, 354 :: 		
0x1BCE	0x4A3A    LDR	R2, [PC, #232]
0x1BD0	0x4291    CMP	R1, R2
0x1BD2	0xD80B    BHI	L___Lib_System_G0xx_set_core_latency24
; hclk_freq end address is: 4 (R1)
;__Lib_System_G0xx.c, 355 :: 		
0x1BD4	0x4A39    LDR	R2, [PC, #228]
0x1BD6	0x6813    LDR	R3, [R2, #0]
0x1BD8	0x4A38    LDR	R2, [PC, #224]
0x1BDA	0x6013    STR	R3, [R2, #0]
;__Lib_System_G0xx.c, 356 :: 		
L___Lib_System_G0xx_set_core_latency25:
0x1BDC	0x4A37    LDR	R2, [PC, #220]
0x1BDE	0x6813    LDR	R3, [R2, #0]
0x1BE0	0x2200    MOVS	R2, #0
0x1BE2	0x401A    ANDS	R2, R3
0x1BE4	0x2A00    CMP	R2, #0
0x1BE6	0xD000    BEQ	L___Lib_System_G0xx_set_core_latency26
0x1BE8	0xE7F8    B	L___Lib_System_G0xx_set_core_latency25
L___Lib_System_G0xx_set_core_latency26:
;__Lib_System_G0xx.c, 357 :: 		
0x1BEA	0xE00C    B	L___Lib_System_G0xx_set_core_latency27
L___Lib_System_G0xx_set_core_latency24:
;__Lib_System_G0xx.c, 359 :: 		
0x1BEC	0x4A33    LDR	R2, [PC, #204]
0x1BEE	0x6813    LDR	R3, [R2, #0]
0x1BF0	0x2202    MOVS	R2, #2
0x1BF2	0x4313    ORRS	R3, R2
0x1BF4	0x4A31    LDR	R2, [PC, #196]
0x1BF6	0x6013    STR	R3, [R2, #0]
;__Lib_System_G0xx.c, 360 :: 		
L___Lib_System_G0xx_set_core_latency28:
0x1BF8	0x4A30    LDR	R2, [PC, #192]
0x1BFA	0x6813    LDR	R3, [R2, #0]
0x1BFC	0x2202    MOVS	R2, #2
0x1BFE	0x401A    ANDS	R2, R3
0x1C00	0x2A02    CMP	R2, #2
0x1C02	0xD000    BEQ	L___Lib_System_G0xx_set_core_latency29
0x1C04	0xE7F8    B	L___Lib_System_G0xx_set_core_latency28
L___Lib_System_G0xx_set_core_latency29:
;__Lib_System_G0xx.c, 361 :: 		
L___Lib_System_G0xx_set_core_latency27:
;__Lib_System_G0xx.c, 362 :: 		
0x1C06	0x4A2E    LDR	R2, [PC, #184]
0x1C08	0x6813    LDR	R3, [R2, #0]
0x1C0A	0x4A2A    LDR	R2, [PC, #168]
0x1C0C	0x4313    ORRS	R3, R2
0x1C0E	0x4A2C    LDR	R2, [PC, #176]
0x1C10	0x6013    STR	R3, [R2, #0]
;__Lib_System_G0xx.c, 363 :: 		
0x1C12	0xE04D    B	L___Lib_System_G0xx_set_core_latency30
L___Lib_System_G0xx_set_core_latency23:
;__Lib_System_G0xx.c, 364 :: 		
; hclk_freq start address is: 4 (R1)
; core_voltage_value start address is: 0 (R0)
0x1C14	0x4A2B    LDR	R2, [PC, #172]
0x1C16	0x4002    ANDS	R2, R0
; core_voltage_value end address is: 0 (R0)
0x1C18	0x2A00    CMP	R2, #0
0x1C1A	0xD100    BNE	#0
0x1C1C	0xE048    B	L___Lib_System_G0xx_set_core_latency31
;__Lib_System_G0xx.c, 366 :: 		
0x1C1E	0x4A28    LDR	R2, [PC, #160]
0x1C20	0x6813    LDR	R3, [R2, #0]
0x1C22	0x4A28    LDR	R2, [PC, #160]
0x1C24	0x4313    ORRS	R3, R2
0x1C26	0x4A26    LDR	R2, [PC, #152]
0x1C28	0x6013    STR	R3, [R2, #0]
; hclk_freq end address is: 4 (R1)
0x1C2A	0x4608    MOV	R0, R1
;__Lib_System_G0xx.c, 368 :: 		
L___Lib_System_G0xx_set_core_latency32:
; hclk_freq start address is: 0 (R0)
0x1C2C	0x4A26    LDR	R2, [PC, #152]
0x1C2E	0x6813    LDR	R3, [R2, #0]
0x1C30	0x2201    MOVS	R2, #1
0x1C32	0x0292    LSLS	R2, R2, #10
0x1C34	0x401A    ANDS	R2, R3
0x1C36	0x0A92    LSRS	R2, R2, #10
0x1C38	0x2A00    CMP	R2, #0
0x1C3A	0xD000    BEQ	L___Lib_System_G0xx_set_core_latency33
0x1C3C	0xE7F6    B	L___Lib_System_G0xx_set_core_latency32
L___Lib_System_G0xx_set_core_latency33:
;__Lib_System_G0xx.c, 370 :: 		
0x1C3E	0x4A23    LDR	R2, [PC, #140]
0x1C40	0x4290    CMP	R0, R2
0x1C42	0xD80B    BHI	L___Lib_System_G0xx_set_core_latency34
; hclk_freq end address is: 0 (R0)
;__Lib_System_G0xx.c, 371 :: 		
0x1C44	0x4A1D    LDR	R2, [PC, #116]
0x1C46	0x6813    LDR	R3, [R2, #0]
0x1C48	0x4A1C    LDR	R2, [PC, #112]
0x1C4A	0x6013    STR	R3, [R2, #0]
;__Lib_System_G0xx.c, 372 :: 		
L___Lib_System_G0xx_set_core_latency35:
0x1C4C	0x4A1B    LDR	R2, [PC, #108]
0x1C4E	0x6813    LDR	R3, [R2, #0]
0x1C50	0x2200    MOVS	R2, #0
0x1C52	0x401A    ANDS	R2, R3
0x1C54	0x2A00    CMP	R2, #0
0x1C56	0xD000    BEQ	L___Lib_System_G0xx_set_core_latency36
0x1C58	0xE7F8    B	L___Lib_System_G0xx_set_core_latency35
L___Lib_System_G0xx_set_core_latency36:
;__Lib_System_G0xx.c, 373 :: 		
0x1C5A	0xE029    B	L___Lib_System_G0xx_set_core_latency37
L___Lib_System_G0xx_set_core_latency34:
;__Lib_System_G0xx.c, 374 :: 		
; hclk_freq start address is: 0 (R0)
0x1C5C	0x4A1B    LDR	R2, [PC, #108]
0x1C5E	0x4290    CMP	R0, R2
0x1C60	0xD901    BLS	L___Lib_System_G0xx_set_core_latency80
0x1C62	0x2301    MOVS	R3, #1
0x1C64	0xE000    B	L___Lib_System_G0xx_set_core_latency81
L___Lib_System_G0xx_set_core_latency80:
0x1C66	0x2300    MOVS	R3, #0
L___Lib_System_G0xx_set_core_latency81:
0x1C68	0x4A19    LDR	R2, [PC, #100]
0x1C6A	0x4290    CMP	R0, R2
0x1C6C	0xD801    BHI	L___Lib_System_G0xx_set_core_latency82
0x1C6E	0x2201    MOVS	R2, #1
0x1C70	0xE000    B	L___Lib_System_G0xx_set_core_latency83
L___Lib_System_G0xx_set_core_latency82:
0x1C72	0x2200    MOVS	R2, #0
L___Lib_System_G0xx_set_core_latency83:
; hclk_freq end address is: 0 (R0)
0x1C74	0x401A    ANDS	R2, R3
0x1C76	0x2A00    CMP	R2, #0
0x1C78	0xD00D    BEQ	L___Lib_System_G0xx_set_core_latency38
;__Lib_System_G0xx.c, 375 :: 		
0x1C7A	0x4A10    LDR	R2, [PC, #64]
0x1C7C	0x6813    LDR	R3, [R2, #0]
0x1C7E	0x2202    MOVS	R2, #2
0x1C80	0x4313    ORRS	R3, R2
0x1C82	0x4A0E    LDR	R2, [PC, #56]
0x1C84	0x6013    STR	R3, [R2, #0]
;__Lib_System_G0xx.c, 376 :: 		
L___Lib_System_G0xx_set_core_latency39:
0x1C86	0x4A0D    LDR	R2, [PC, #52]
0x1C88	0x6813    LDR	R3, [R2, #0]
0x1C8A	0x2202    MOVS	R2, #2
0x1C8C	0x401A    ANDS	R2, R3
0x1C8E	0x2A02    CMP	R2, #2
0x1C90	0xD000    BEQ	L___Lib_System_G0xx_set_core_latency40
0x1C92	0xE7F8    B	L___Lib_System_G0xx_set_core_latency39
L___Lib_System_G0xx_set_core_latency40:
;__Lib_System_G0xx.c, 377 :: 		
0x1C94	0xE00C    B	L___Lib_System_G0xx_set_core_latency41
L___Lib_System_G0xx_set_core_latency38:
;__Lib_System_G0xx.c, 379 :: 		
0x1C96	0x4A09    LDR	R2, [PC, #36]
0x1C98	0x6813    LDR	R3, [R2, #0]
0x1C9A	0x2204    MOVS	R2, #4
0x1C9C	0x4313    ORRS	R3, R2
0x1C9E	0x4A07    LDR	R2, [PC, #28]
0x1CA0	0x6013    STR	R3, [R2, #0]
;__Lib_System_G0xx.c, 380 :: 		
L___Lib_System_G0xx_set_core_latency42:
0x1CA2	0x4A06    LDR	R2, [PC, #24]
0x1CA4	0x6813    LDR	R3, [R2, #0]
0x1CA6	0x2204    MOVS	R2, #4
0x1CA8	0x401A    ANDS	R2, R3
0x1CAA	0x2A04    CMP	R2, #4
0x1CAC	0xD000    BEQ	L___Lib_System_G0xx_set_core_latency43
0x1CAE	0xE7F8    B	L___Lib_System_G0xx_set_core_latency42
L___Lib_System_G0xx_set_core_latency43:
;__Lib_System_G0xx.c, 381 :: 		
L___Lib_System_G0xx_set_core_latency41:
L___Lib_System_G0xx_set_core_latency37:
;__Lib_System_G0xx.c, 382 :: 		
L___Lib_System_G0xx_set_core_latency31:
L___Lib_System_G0xx_set_core_latency30:
;__Lib_System_G0xx.c, 383 :: 		
L_end_set_core_latency:
0x1CB0	0xBD00    POP	(R15)
0x1CB2	0xBF00    NOP
0x1CB4	0x04000000  	#1024
0x1CB8	0x1F400000  	#8000
0x1CBC	0x20004002  	FLASH_ACR+0
0x1CC0	0x70004000  	PWR_CR1+0
0x1CC4	0x02000000  	#512
0x1CC8	0x70144000  	PWR_SR2+0
0x1CCC	0x5DC00000  	#24000
0x1CD0	0xBB800000  	#48000
; end of __Lib_System_G0xx_set_core_latency
__Lib_System_G0xx_SystemClockSetDefault:
;__Lib_System_G0xx.c, 316 :: 		
0x1D7C	0xB081    SUB	SP, SP, #4
;__Lib_System_G0xx.c, 318 :: 		
0x1D7E	0x4A16    LDR	R2, [PC, #88]
0x1D80	0x6810    LDR	R0, [R2, #0]
0x1D82	0x2101    MOVS	R1, #1
0x1D84	0x0709    LSLS	R1, R1, #28
0x1D86	0x4308    ORRS	R0, R1
0x1D88	0x6010    STR	R0, [R2, #0]
;__Lib_System_G0xx.c, 320 :: 		
0x1D8A	0x4A14    LDR	R2, [PC, #80]
0x1D8C	0x6810    LDR	R0, [R2, #0]
0x1D8E	0x2101    MOVS	R1, #1
0x1D90	0x4308    ORRS	R0, R1
0x1D92	0x6010    STR	R0, [R2, #0]
;__Lib_System_G0xx.c, 322 :: 		
0x1D94	0x4812    LDR	R0, [PC, #72]
0x1D96	0x6801    LDR	R1, [R0, #0]
0x1D98	0x2003    MOVS	R0, #3
0x1D9A	0x4001    ANDS	R1, R0
0x1D9C	0x4810    LDR	R0, [PC, #64]
0x1D9E	0x6001    STR	R1, [R0, #0]
;__Lib_System_G0xx.c, 324 :: 		
0x1DA0	0x4810    LDR	R0, [PC, #64]
0x1DA2	0x6801    LDR	R1, [R0, #0]
0x1DA4	0x20FF    MOVS	R0, #255
0x1DA6	0x3001    ADDS	R0, #1
0x1DA8	0x4301    ORRS	R1, R0
0x1DAA	0x480E    LDR	R0, [PC, #56]
0x1DAC	0x6001    STR	R1, [R0, #0]
;__Lib_System_G0xx.c, 326 :: 		
0x1DAE	0x480E    LDR	R0, [PC, #56]
0x1DB0	0x6801    LDR	R1, [R0, #0]
0x1DB2	0x480E    LDR	R0, [PC, #56]
0x1DB4	0x4301    ORRS	R1, R0
0x1DB6	0x480C    LDR	R0, [PC, #48]
0x1DB8	0x6001    STR	R1, [R0, #0]
;__Lib_System_G0xx.c, 328 :: 		
0x1DBA	0x480D    LDR	R0, [PC, #52]
0x1DBC	0x6801    LDR	R1, [R0, #0]
0x1DBE	0x2038    MOVS	R0, #56
0x1DC0	0x4001    ANDS	R1, R0
0x1DC2	0x480B    LDR	R0, [PC, #44]
0x1DC4	0x6001    STR	R1, [R0, #0]
;__Lib_System_G0xx.c, 330 :: 		
0x1DC6	0x4807    LDR	R0, [PC, #28]
0x1DC8	0x6801    LDR	R1, [R0, #0]
0x1DCA	0x480A    LDR	R0, [PC, #40]
0x1DCC	0x4001    ANDS	R1, R0
0x1DCE	0x4805    LDR	R0, [PC, #20]
0x1DD0	0x6001    STR	R1, [R0, #0]
;__Lib_System_G0xx.c, 331 :: 		
L_end_SystemClockSetDefault:
0x1DD2	0xB001    ADD	SP, SP, #4
0x1DD4	0x4770    BX	LR
0x1DD6	0xBF00    NOP
0x1DD8	0x103C4002  	RCC_APBENR1+0
0x1DDC	0x10404002  	RCC_APBENR2+0
0x1DE0	0x100C4002  	RCC_PLLSYSCFGR+0
0x1DE4	0x10004002  	RCC_CR+0
0x1DE8	0x70004000  	PWR_CR1+0
0x1DEC	0x04000000  	#1024
0x1DF0	0x10084002  	RCC_CFGR+0
0x1DF4	0xFFFFFEF2  	#-17629185
; end of __Lib_System_G0xx_SystemClockSetDefault
_is_clock_stable:
;__Lib_System_G0xx.c, 389 :: 		
0x1CD4	0xB500    PUSH	(R14)
;__Lib_System_G0xx.c, 390 :: 		
0x1CD6	0x4821    LDR	R0, [PC, #132]
0x1CD8	0x6801    LDR	R1, [R0, #0]
0x1CDA	0x20FF    MOVS	R0, #255
0x1CDC	0x3001    ADDS	R0, #1
0x1CDE	0x4008    ANDS	R0, R1
0x1CE0	0x2800    CMP	R0, #0
0x1CE2	0xD006    BEQ	L_is_clock_stable44
;__Lib_System_G0xx.c, 391 :: 		
L_is_clock_stable45:
0x1CE4	0x481D    LDR	R0, [PC, #116]
0x1CE6	0x6801    LDR	R1, [R0, #0]
0x1CE8	0x481D    LDR	R0, [PC, #116]
0x1CEA	0x4008    ANDS	R0, R1
0x1CEC	0x2800    CMP	R0, #0
0x1CEE	0xD100    BNE	L_is_clock_stable46
;__Lib_System_G0xx.c, 392 :: 		
0x1CF0	0xE7F8    B	L_is_clock_stable45
L_is_clock_stable46:
;__Lib_System_G0xx.c, 393 :: 		
L_is_clock_stable44:
;__Lib_System_G0xx.c, 394 :: 		
0x1CF2	0x481A    LDR	R0, [PC, #104]
0x1CF4	0x6801    LDR	R1, [R0, #0]
0x1CF6	0x481B    LDR	R0, [PC, #108]
0x1CF8	0x4008    ANDS	R0, R1
0x1CFA	0x2800    CMP	R0, #0
0x1CFC	0xD006    BEQ	L_is_clock_stable47
;__Lib_System_G0xx.c, 395 :: 		
L_is_clock_stable48:
0x1CFE	0x4817    LDR	R0, [PC, #92]
0x1D00	0x6801    LDR	R1, [R0, #0]
0x1D02	0x4819    LDR	R0, [PC, #100]
0x1D04	0x4008    ANDS	R0, R1
0x1D06	0x2800    CMP	R0, #0
0x1D08	0xD100    BNE	L_is_clock_stable49
;__Lib_System_G0xx.c, 396 :: 		
0x1D0A	0xE7F8    B	L_is_clock_stable48
L_is_clock_stable49:
;__Lib_System_G0xx.c, 397 :: 		
L_is_clock_stable47:
;__Lib_System_G0xx.c, 398 :: 		
0x1D0C	0x4813    LDR	R0, [PC, #76]
0x1D0E	0x6801    LDR	R1, [R0, #0]
0x1D10	0x4816    LDR	R0, [PC, #88]
0x1D12	0x4008    ANDS	R0, R1
0x1D14	0x2800    CMP	R0, #0
0x1D16	0xD006    BEQ	L_is_clock_stable50
;__Lib_System_G0xx.c, 399 :: 		
L_is_clock_stable51:
0x1D18	0x4810    LDR	R0, [PC, #64]
0x1D1A	0x6801    LDR	R1, [R0, #0]
0x1D1C	0x4814    LDR	R0, [PC, #80]
0x1D1E	0x4008    ANDS	R0, R1
0x1D20	0x2800    CMP	R0, #0
0x1D22	0xD100    BNE	L_is_clock_stable52
;__Lib_System_G0xx.c, 400 :: 		
0x1D24	0xE7F8    B	L_is_clock_stable51
L_is_clock_stable52:
;__Lib_System_G0xx.c, 401 :: 		
L_is_clock_stable50:
;__Lib_System_G0xx.c, 402 :: 		
0x1D26	0x4813    LDR	R0, [PC, #76]
0x1D28	0x6801    LDR	R1, [R0, #0]
0x1D2A	0x2001    MOVS	R0, #1
0x1D2C	0x4008    ANDS	R0, R1
0x1D2E	0x2800    CMP	R0, #0
0x1D30	0xD006    BEQ	L_is_clock_stable53
;__Lib_System_G0xx.c, 403 :: 		
L_is_clock_stable54:
0x1D32	0x4810    LDR	R0, [PC, #64]
0x1D34	0x6801    LDR	R1, [R0, #0]
0x1D36	0x2002    MOVS	R0, #2
0x1D38	0x4008    ANDS	R0, R1
0x1D3A	0x2800    CMP	R0, #0
0x1D3C	0xD100    BNE	L_is_clock_stable55
;__Lib_System_G0xx.c, 404 :: 		
0x1D3E	0xE7F8    B	L_is_clock_stable54
L_is_clock_stable55:
;__Lib_System_G0xx.c, 405 :: 		
L_is_clock_stable53:
;__Lib_System_G0xx.c, 406 :: 		
0x1D40	0x480D    LDR	R0, [PC, #52]
0x1D42	0x6801    LDR	R1, [R0, #0]
0x1D44	0x2001    MOVS	R0, #1
0x1D46	0x4008    ANDS	R0, R1
0x1D48	0x2800    CMP	R0, #0
0x1D4A	0xD006    BEQ	L_is_clock_stable56
;__Lib_System_G0xx.c, 407 :: 		
L_is_clock_stable57:
0x1D4C	0x480A    LDR	R0, [PC, #40]
0x1D4E	0x6801    LDR	R1, [R0, #0]
0x1D50	0x2002    MOVS	R0, #2
0x1D52	0x4008    ANDS	R0, R1
0x1D54	0x2800    CMP	R0, #0
0x1D56	0xD100    BNE	L_is_clock_stable58
;__Lib_System_G0xx.c, 408 :: 		
0x1D58	0xE7F8    B	L_is_clock_stable57
L_is_clock_stable58:
;__Lib_System_G0xx.c, 409 :: 		
L_is_clock_stable56:
;__Lib_System_G0xx.c, 410 :: 		
L_end_is_clock_stable:
0x1D5A	0xBD00    POP	(R15)
0x1D5C	0x10004002  	RCC_CR+0
0x1D60	0x04000000  	#1024
0x1D64	0x00000001  	#65536
0x1D68	0x00000002  	#131072
0x1D6C	0x00000100  	#16777216
0x1D70	0x00000200  	#33554432
0x1D74	0x10604002  	RCC_CSR+0
0x1D78	0x105C4002  	RCC_BDCR+0
; end of _is_clock_stable
__Lib_System_G0xx_InitialSetUpFosc:
;__Lib_System_G0xx.c, 459 :: 		
0x3380	0xB081    SUB	SP, SP, #4
;__Lib_System_G0xx.c, 460 :: 		
0x3382	0x4902    LDR	R1, [PC, #8]
0x3384	0x4802    LDR	R0, [PC, #8]
0x3386	0x6001    STR	R1, [R0, #0]
;__Lib_System_G0xx.c, 461 :: 		
L_end_InitialSetUpFosc:
0x3388	0xB001    ADD	SP, SP, #4
0x338A	0x4770    BX	LR
0x338C	0x3E800000  	#16000
0x3390	0x22F82000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_G0xx_InitialSetUpFosc
___GenExcept:
;__Lib_System_G0xx.c, 267 :: 		
0x3378	0xB500    PUSH	(R14)
;__Lib_System_G0xx.c, 268 :: 		
L___GenExcept19:
0x337A	0xE7FE    B	L___GenExcept19
;__Lib_System_G0xx.c, 269 :: 		
L_end___GenExcept:
0x337C	0xBD00    POP	(R15)
; end of ___GenExcept
0x5FB4	0xB500    PUSH	(R14)
0x5FB6	0x4E03    LDR	R6, [PC, #12]
0x5FB8	0x4D03    LDR	R5, [PC, #12]
0x5FBA	0x4F04    LDR	R7, [PC, #16]
0x5FBC	0xF7FCF9D2  BL	9060
0x5FC0	0xBD00    POP	(R15)
0x5FC2	0x4770    BX	LR
0x5FC4	0x00002000  	#536870912
0x5FC8	0x22922000  	#536879762
0x5FCC	0x33940000  	#13204
0x6034	0xB500    PUSH	(R14)
0x6036	0x4E03    LDR	R6, [PC, #12]
0x6038	0x4D03    LDR	R5, [PC, #12]
0x603A	0xF7FCF99D  BL	9080
0x603E	0xBD00    POP	(R15)
0x6040	0x4770    BX	LR
0x6042	0xBF00    NOP
0x6044	0x00002000  	#536870912
0x6048	0x230C2000  	#536879884
_vUARTISR:
;uarthandler.c, 206 :: 		void vUARTISR() iv IVT_INT_USART1 ics ICS_AUTO{
0x2EFC	0xB081    SUB	SP, SP, #4
;uarthandler.c, 207 :: 		LED_BLUE =~ LED_BLUE;
0x2EFE	0x480C    LDR	R0, [PC, #48]
0x2F00	0x6800    LDR	R0, [R0, #0]
0x2F02	0x2101    MOVS	R1, #1
0x2F04	0x0209    LSLS	R1, R1, #8
0x2F06	0x4001    ANDS	R1, R0
0x2F08	0x0A09    LSRS	R1, R1, #8
0x2F0A	0x2001    MOVS	R0, #1
0x2F0C	0x4048    EORS	R0, R1
0x2F0E	0xB2C3    UXTB	R3, R0
0x2F10	0x4A07    LDR	R2, [PC, #28]
0x2F12	0x6810    LDR	R0, [R2, #0]
0x2F14	0x2101    MOVS	R1, #1
0x2F16	0x4019    ANDS	R1, R3
0x2F18	0xD003    BEQ	L__vUARTISR490
0x2F1A	0x2101    MOVS	R1, #1
0x2F1C	0x0209    LSLS	R1, R1, #8
0x2F1E	0x4308    ORRS	R0, R1
0x2F20	0xE002    B	L__vUARTISR489
L__vUARTISR490:
0x2F22	0x2101    MOVS	R1, #1
0x2F24	0x0209    LSLS	R1, R1, #8
0x2F26	0x4388    BICS	R0, R1
L__vUARTISR489:
0x2F28	0x6010    STR	R0, [R2, #0]
;uarthandler.c, 242 :: 		}
L_end_vUARTISR:
0x2F2A	0xB001    ADD	SP, SP, #4
0x2F2C	0x4770    BX	LR
0x2F2E	0xBF00    NOP
0x2F30	0x04145000  	GPIOB_ODRbits+0
; end of _vUARTISR
_Timer2_interrupt:
;DriverRF4463PROMain.c, 100 :: 		void Timer2_interrupt() iv IVT_INT_TIM2 {
0x2DA8	0xB081    SUB	SP, SP, #4
;DriverRF4463PROMain.c, 101 :: 		TIM2_SR.UIF = 0;
0x2DAA	0x4A08    LDR	R2, [PC, #32]
0x2DAC	0x6810    LDR	R0, [R2, #0]
0x2DAE	0x2101    MOVS	R1, #1
0x2DB0	0x4388    BICS	R0, R1
0x2DB2	0x6010    STR	R0, [R2, #0]
;DriverRF4463PROMain.c, 102 :: 		Flag.rf_reach_timeout = 1; //Enter your code here
0x2DB4	0x4A06    LDR	R2, [PC, #24]
0x2DB6	0x7810    LDRB	R0, [R2, #0]
0x2DB8	0x2104    MOVS	R1, #4
0x2DBA	0x4308    ORRS	R0, R1
0x2DBC	0x7010    STRB	R0, [R2, #0]
;DriverRF4463PROMain.c, 103 :: 		Flag.reach_1s = 1;
0x2DBE	0x4A04    LDR	R2, [PC, #16]
0x2DC0	0x7810    LDRB	R0, [R2, #0]
0x2DC2	0x2101    MOVS	R1, #1
0x2DC4	0x4308    ORRS	R0, R1
0x2DC6	0x7010    STRB	R0, [R2, #0]
;DriverRF4463PROMain.c, 104 :: 		}
L_end_Timer2_interrupt:
0x2DC8	0xB001    ADD	SP, SP, #4
0x2DCA	0x4770    BX	LR
0x2DCC	0x00104000  	TIM2_SR+0
0x2DD0	0x22AC2000  	_Flag+0
; end of _Timer2_interrupt
_vRF4463ISR:
;driverrf4463pro.c, 27 :: 		void vRF4463ISR() iv IVT_INT_EXTI2_3 ics ICS_AUTO{
0x2D74	0xB500    PUSH	(R14)
0x2D76	0xB4F0    PUSH	(R4, R5, R6, R7)
;driverrf4463pro.c, 28 :: 		if ( EXTI_FPR1bits.FPIF2 ){
0x2D78	0x4809    LDR	R0, [PC, #36]
0x2D7A	0x6801    LDR	R1, [R0, #0]
0x2D7C	0x2004    MOVS	R0, #4
0x2D7E	0x4008    ANDS	R0, R1
0x2D80	0x0880    LSRS	R0, R0, #2
0x2D82	0x2800    CMP	R0, #0
0x2D84	0xD009    BEQ	L_vRF4463ISR35
;driverrf4463pro.c, 29 :: 		EXTI_FPR1bits.FPIF2 = 1;
0x2D86	0x4A06    LDR	R2, [PC, #24]
0x2D88	0x6810    LDR	R0, [R2, #0]
0x2D8A	0x2104    MOVS	R1, #4
0x2D8C	0x4308    ORRS	R0, R1
0x2D8E	0x6010    STR	R0, [R2, #0]
;driverrf4463pro.c, 30 :: 		vRF4463ClearInterrupts();
0x2D90	0xF7FFFB52  BL	_vRF4463ClearInterrupts+0
;driverrf4463pro.c, 31 :: 		ucRF4463IRQ = 1;
0x2D94	0x2101    MOVS	R1, #1
0x2D96	0x4803    LDR	R0, [PC, #12]
0x2D98	0x7001    STRB	R1, [R0, #0]
;driverrf4463pro.c, 32 :: 		}
L_vRF4463ISR35:
;driverrf4463pro.c, 33 :: 		}
L_end_vRF4463ISR:
0x2D9A	0xBCF0    POP	(R4, R5, R6, R7)
0x2D9C	0xBD00    POP	(R15)
0x2D9E	0xBF00    NOP
0x2DA0	0x18104002  	EXTI_FPR1bits+0
0x2DA4	0x21FB2000  	DriverRF4463PROMain_ucRF4463IRQ+0
; end of _vRF4463ISR
_Int_SPI1:
;driverspi.c, 15 :: 		void Int_SPI1() iv IVT_INT_SPI1 ics ICS_AUTO {
0x2EAC	0xB500    PUSH	(R14)
;driverspi.c, 17 :: 		if ( SPI1_SRbits.RXNE ) {
0x2EAE	0x480F    LDR	R0, [PC, #60]
0x2EB0	0x6801    LDR	R1, [R0, #0]
0x2EB2	0x2001    MOVS	R0, #1
0x2EB4	0x4008    ANDS	R0, R1
0x2EB6	0x2800    CMP	R0, #0
0x2EB8	0xD016    BEQ	L_Int_SPI10
;driverspi.c, 18 :: 		ucSPI1ByteReceived = ( unsigned char )SPI1_DR;      // lee el Byte recibido
0x2EBA	0x480D    LDR	R0, [PC, #52]
0x2EBC	0x6801    LDR	R1, [R0, #0]
0x2EBE	0x480D    LDR	R0, [PC, #52]
0x2EC0	0x7001    STRB	R1, [R0, #0]
;driverspi.c, 20 :: 		LED_GREEN = ~LED_GREEN;
0x2EC2	0x480D    LDR	R0, [PC, #52]
0x2EC4	0x6800    LDR	R0, [R0, #0]
0x2EC6	0x2140    MOVS	R1, #64
0x2EC8	0x4001    ANDS	R1, R0
0x2ECA	0x0989    LSRS	R1, R1, #6
0x2ECC	0x2001    MOVS	R0, #1
0x2ECE	0x4048    EORS	R0, R1
0x2ED0	0xB2C3    UXTB	R3, R0
0x2ED2	0x4A09    LDR	R2, [PC, #36]
0x2ED4	0x6810    LDR	R0, [R2, #0]
0x2ED6	0x2101    MOVS	R1, #1
0x2ED8	0x4019    ANDS	R1, R3
0x2EDA	0xD002    BEQ	L__Int_SPI1447
0x2EDC	0x2140    MOVS	R1, #64
0x2EDE	0x4308    ORRS	R0, R1
0x2EE0	0xE001    B	L__Int_SPI1446
L__Int_SPI1447:
0x2EE2	0x2140    MOVS	R1, #64
0x2EE4	0x4388    BICS	R0, R1
L__Int_SPI1446:
0x2EE6	0x6010    STR	R0, [R2, #0]
;driverspi.c, 21 :: 		}
L_Int_SPI10:
;driverspi.c, 22 :: 		}
L_end_Int_SPI1:
0x2EE8	0xBD00    POP	(R15)
0x2EEA	0xBF00    NOP
0x2EEC	0x30084001  	SPI1_SRbits+0
0x2EF0	0x300C4001  	SPI1_DR+0
0x2EF4	0x22912000  	_ucSPI1ByteReceived+0
0x2EF8	0x04145000  	GPIOB_ODRbits+0
; end of _Int_SPI1
_DMACh1_interrupt:
;driverspi.c, 28 :: 		void DMACh1_interrupt() iv IVT_INT_DMA_Channel1 ics ICS_AUTO {
0x2DD4	0xB500    PUSH	(R14)
;driverspi.c, 30 :: 		if ( DMA_ISRbits.TEIF3 ) {
0x2DD6	0x4831    LDR	R0, [PC, #196]
0x2DD8	0x6801    LDR	R1, [R0, #0]
0x2DDA	0x2008    MOVS	R0, #8
0x2DDC	0x4008    ANDS	R0, R1
0x2DDE	0x08C0    LSRS	R0, R0, #3
0x2DE0	0x2800    CMP	R0, #0
0x2DE2	0xD019    BEQ	L_DMACh1_interrupt1
;driverspi.c, 31 :: 		DMA_IFCRbits.CTEIF3 = 1;
0x2DE4	0x4A2E    LDR	R2, [PC, #184]
0x2DE6	0x6810    LDR	R0, [R2, #0]
0x2DE8	0x2108    MOVS	R1, #8
0x2DEA	0x4308    ORRS	R0, R1
0x2DEC	0x6010    STR	R0, [R2, #0]
;driverspi.c, 32 :: 		while ( SPI1_SRbits.BSY );
L_DMACh1_interrupt2:
0x2DEE	0x482D    LDR	R0, [PC, #180]
0x2DF0	0x6801    LDR	R1, [R0, #0]
0x2DF2	0x2080    MOVS	R0, #128
0x2DF4	0x4008    ANDS	R0, R1
0x2DF6	0x09C0    LSRS	R0, R0, #7
0x2DF8	0x2800    CMP	R0, #0
0x2DFA	0xD000    BEQ	L_DMACh1_interrupt3
0x2DFC	0xE7F7    B	L_DMACh1_interrupt2
L_DMACh1_interrupt3:
;driverspi.c, 33 :: 		while ( !SPI1_SRbits.TXE );
L_DMACh1_interrupt4:
0x2DFE	0x4829    LDR	R0, [PC, #164]
0x2E00	0x6801    LDR	R1, [R0, #0]
0x2E02	0x2002    MOVS	R0, #2
0x2E04	0x4008    ANDS	R0, R1
0x2E06	0x0840    LSRS	R0, R0, #1
0x2E08	0x2800    CMP	R0, #0
0x2E0A	0xD100    BNE	L_DMACh1_interrupt5
0x2E0C	0xE7F7    B	L_DMACh1_interrupt4
L_DMACh1_interrupt5:
;driverspi.c, 34 :: 		DMA_CCR1bits.EN = 0;
0x2E0E	0x4A26    LDR	R2, [PC, #152]
0x2E10	0x6810    LDR	R0, [R2, #0]
0x2E12	0x2101    MOVS	R1, #1
0x2E14	0x4388    BICS	R0, R1
0x2E16	0x6010    STR	R0, [R2, #0]
;driverspi.c, 35 :: 		}
L_DMACh1_interrupt1:
;driverspi.c, 37 :: 		if ( DMA_ISRbits.TCIF1 ) {     // TRANSFER COMPLETE INTERRUPT FLAG = envio el frame completo
0x2E18	0x4820    LDR	R0, [PC, #128]
0x2E1A	0x6801    LDR	R1, [R0, #0]
0x2E1C	0x2002    MOVS	R0, #2
0x2E1E	0x4008    ANDS	R0, R1
0x2E20	0x0840    LSRS	R0, R0, #1
0x2E22	0x2800    CMP	R0, #0
0x2E24	0xD019    BEQ	L_DMACh1_interrupt6
;driverspi.c, 38 :: 		DMA_IFCRbits.CGIF0 = 1;        // limpia TODOS LOS FLAGS DE DMA
0x2E26	0x4A1E    LDR	R2, [PC, #120]
0x2E28	0x6810    LDR	R0, [R2, #0]
0x2E2A	0x2101    MOVS	R1, #1
0x2E2C	0x4308    ORRS	R0, R1
0x2E2E	0x6010    STR	R0, [R2, #0]
;driverspi.c, 39 :: 		while ( SPI1_SRbits.BSY );
L_DMACh1_interrupt7:
0x2E30	0x481C    LDR	R0, [PC, #112]
0x2E32	0x6801    LDR	R1, [R0, #0]
0x2E34	0x2080    MOVS	R0, #128
0x2E36	0x4008    ANDS	R0, R1
0x2E38	0x09C0    LSRS	R0, R0, #7
0x2E3A	0x2800    CMP	R0, #0
0x2E3C	0xD000    BEQ	L_DMACh1_interrupt8
0x2E3E	0xE7F7    B	L_DMACh1_interrupt7
L_DMACh1_interrupt8:
;driverspi.c, 40 :: 		while ( !SPI1_SRbits.TXE );
L_DMACh1_interrupt9:
0x2E40	0x4818    LDR	R0, [PC, #96]
0x2E42	0x6801    LDR	R1, [R0, #0]
0x2E44	0x2002    MOVS	R0, #2
0x2E46	0x4008    ANDS	R0, R1
0x2E48	0x0840    LSRS	R0, R0, #1
0x2E4A	0x2800    CMP	R0, #0
0x2E4C	0xD100    BNE	L_DMACh1_interrupt10
0x2E4E	0xE7F7    B	L_DMACh1_interrupt9
L_DMACh1_interrupt10:
;driverspi.c, 41 :: 		DMA_CCR1bits.EN = 0;
0x2E50	0x4A15    LDR	R2, [PC, #84]
0x2E52	0x6810    LDR	R0, [R2, #0]
0x2E54	0x2101    MOVS	R1, #1
0x2E56	0x4388    BICS	R0, R1
0x2E58	0x6010    STR	R0, [R2, #0]
;driverspi.c, 42 :: 		}
L_DMACh1_interrupt6:
;driverspi.c, 44 :: 		if ( DMA_ISRbits.GIF0 ) {
0x2E5A	0x4810    LDR	R0, [PC, #64]
0x2E5C	0x6801    LDR	R1, [R0, #0]
0x2E5E	0x2001    MOVS	R0, #1
0x2E60	0x4008    ANDS	R0, R1
0x2E62	0x2800    CMP	R0, #0
0x2E64	0xD019    BEQ	L_DMACh1_interrupt11
;driverspi.c, 45 :: 		DMA_IFCRbits.CGIF0 = 1;
0x2E66	0x4A0E    LDR	R2, [PC, #56]
0x2E68	0x6810    LDR	R0, [R2, #0]
0x2E6A	0x2101    MOVS	R1, #1
0x2E6C	0x4308    ORRS	R0, R1
0x2E6E	0x6010    STR	R0, [R2, #0]
;driverspi.c, 46 :: 		while ( SPI1_SRbits.BSY );
L_DMACh1_interrupt12:
0x2E70	0x480C    LDR	R0, [PC, #48]
0x2E72	0x6801    LDR	R1, [R0, #0]
0x2E74	0x2080    MOVS	R0, #128
0x2E76	0x4008    ANDS	R0, R1
0x2E78	0x09C0    LSRS	R0, R0, #7
0x2E7A	0x2800    CMP	R0, #0
0x2E7C	0xD000    BEQ	L_DMACh1_interrupt13
0x2E7E	0xE7F7    B	L_DMACh1_interrupt12
L_DMACh1_interrupt13:
;driverspi.c, 47 :: 		while ( !SPI1_SRbits.TXE );
L_DMACh1_interrupt14:
0x2E80	0x4808    LDR	R0, [PC, #32]
0x2E82	0x6801    LDR	R1, [R0, #0]
0x2E84	0x2002    MOVS	R0, #2
0x2E86	0x4008    ANDS	R0, R1
0x2E88	0x0840    LSRS	R0, R0, #1
0x2E8A	0x2800    CMP	R0, #0
0x2E8C	0xD100    BNE	L_DMACh1_interrupt15
0x2E8E	0xE7F7    B	L_DMACh1_interrupt14
L_DMACh1_interrupt15:
;driverspi.c, 48 :: 		DMA_CCR1bits.EN = 0;
0x2E90	0x4A05    LDR	R2, [PC, #20]
0x2E92	0x6810    LDR	R0, [R2, #0]
0x2E94	0x2101    MOVS	R1, #1
0x2E96	0x4388    BICS	R0, R1
0x2E98	0x6010    STR	R0, [R2, #0]
;driverspi.c, 49 :: 		}
L_DMACh1_interrupt11:
;driverspi.c, 50 :: 		}
L_end_DMACh1_interrupt:
0x2E9A	0xBD00    POP	(R15)
0x2E9C	0x00004002  	DMA_ISRbits+0
0x2EA0	0x00044002  	DMA_IFCRbits+0
0x2EA4	0x30084001  	SPI1_SRbits+0
0x2EA8	0x00084002  	DMA_CCR1bits+0
; end of _DMACh1_interrupt
;DriverRF4463PROMain.c,0 :: ?ICS_ucUSARTActiveBuffer1 [4096]
0x3394	0x00000000 ;?ICS_ucUSARTActiveBuffer1+0
0x3398	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4
0x339C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+8
0x33A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+12
0x33A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+16
0x33A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+20
0x33AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+24
0x33B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+28
0x33B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+32
0x33B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+36
0x33BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+40
0x33C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+44
0x33C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+48
0x33C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+52
0x33CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+56
0x33D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+60
0x33D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+64
0x33D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+68
0x33DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+72
0x33E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+76
0x33E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+80
0x33E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+84
0x33EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+88
0x33F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+92
0x33F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+96
0x33F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+100
0x33FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+104
0x3400	0x00000000 ;?ICS_ucUSARTActiveBuffer1+108
0x3404	0x00000000 ;?ICS_ucUSARTActiveBuffer1+112
0x3408	0x00000000 ;?ICS_ucUSARTActiveBuffer1+116
0x340C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+120
0x3410	0x00000000 ;?ICS_ucUSARTActiveBuffer1+124
0x3414	0x00000000 ;?ICS_ucUSARTActiveBuffer1+128
0x3418	0x00000000 ;?ICS_ucUSARTActiveBuffer1+132
0x341C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+136
0x3420	0x00000000 ;?ICS_ucUSARTActiveBuffer1+140
0x3424	0x00000000 ;?ICS_ucUSARTActiveBuffer1+144
0x3428	0x00000000 ;?ICS_ucUSARTActiveBuffer1+148
0x342C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+152
0x3430	0x00000000 ;?ICS_ucUSARTActiveBuffer1+156
0x3434	0x00000000 ;?ICS_ucUSARTActiveBuffer1+160
0x3438	0x00000000 ;?ICS_ucUSARTActiveBuffer1+164
0x343C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+168
0x3440	0x00000000 ;?ICS_ucUSARTActiveBuffer1+172
0x3444	0x00000000 ;?ICS_ucUSARTActiveBuffer1+176
0x3448	0x00000000 ;?ICS_ucUSARTActiveBuffer1+180
0x344C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+184
0x3450	0x00000000 ;?ICS_ucUSARTActiveBuffer1+188
0x3454	0x00000000 ;?ICS_ucUSARTActiveBuffer1+192
0x3458	0x00000000 ;?ICS_ucUSARTActiveBuffer1+196
0x345C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+200
0x3460	0x00000000 ;?ICS_ucUSARTActiveBuffer1+204
0x3464	0x00000000 ;?ICS_ucUSARTActiveBuffer1+208
0x3468	0x00000000 ;?ICS_ucUSARTActiveBuffer1+212
0x346C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+216
0x3470	0x00000000 ;?ICS_ucUSARTActiveBuffer1+220
0x3474	0x00000000 ;?ICS_ucUSARTActiveBuffer1+224
0x3478	0x00000000 ;?ICS_ucUSARTActiveBuffer1+228
0x347C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+232
0x3480	0x00000000 ;?ICS_ucUSARTActiveBuffer1+236
0x3484	0x00000000 ;?ICS_ucUSARTActiveBuffer1+240
0x3488	0x00000000 ;?ICS_ucUSARTActiveBuffer1+244
0x348C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+248
0x3490	0x00000000 ;?ICS_ucUSARTActiveBuffer1+252
0x3494	0x00000000 ;?ICS_ucUSARTActiveBuffer1+256
0x3498	0x00000000 ;?ICS_ucUSARTActiveBuffer1+260
0x349C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+264
0x34A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+268
0x34A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+272
0x34A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+276
0x34AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+280
0x34B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+284
0x34B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+288
0x34B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+292
0x34BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+296
0x34C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+300
0x34C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+304
0x34C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+308
0x34CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+312
0x34D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+316
0x34D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+320
0x34D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+324
0x34DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+328
0x34E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+332
0x34E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+336
0x34E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+340
0x34EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+344
0x34F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+348
0x34F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+352
0x34F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+356
0x34FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+360
0x3500	0x00000000 ;?ICS_ucUSARTActiveBuffer1+364
0x3504	0x00000000 ;?ICS_ucUSARTActiveBuffer1+368
0x3508	0x00000000 ;?ICS_ucUSARTActiveBuffer1+372
0x350C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+376
0x3510	0x00000000 ;?ICS_ucUSARTActiveBuffer1+380
0x3514	0x00000000 ;?ICS_ucUSARTActiveBuffer1+384
0x3518	0x00000000 ;?ICS_ucUSARTActiveBuffer1+388
0x351C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+392
0x3520	0x00000000 ;?ICS_ucUSARTActiveBuffer1+396
0x3524	0x00000000 ;?ICS_ucUSARTActiveBuffer1+400
0x3528	0x00000000 ;?ICS_ucUSARTActiveBuffer1+404
0x352C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+408
0x3530	0x00000000 ;?ICS_ucUSARTActiveBuffer1+412
0x3534	0x00000000 ;?ICS_ucUSARTActiveBuffer1+416
0x3538	0x00000000 ;?ICS_ucUSARTActiveBuffer1+420
0x353C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+424
0x3540	0x00000000 ;?ICS_ucUSARTActiveBuffer1+428
0x3544	0x00000000 ;?ICS_ucUSARTActiveBuffer1+432
0x3548	0x00000000 ;?ICS_ucUSARTActiveBuffer1+436
0x354C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+440
0x3550	0x00000000 ;?ICS_ucUSARTActiveBuffer1+444
0x3554	0x00000000 ;?ICS_ucUSARTActiveBuffer1+448
0x3558	0x00000000 ;?ICS_ucUSARTActiveBuffer1+452
0x355C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+456
0x3560	0x00000000 ;?ICS_ucUSARTActiveBuffer1+460
0x3564	0x00000000 ;?ICS_ucUSARTActiveBuffer1+464
0x3568	0x00000000 ;?ICS_ucUSARTActiveBuffer1+468
0x356C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+472
0x3570	0x00000000 ;?ICS_ucUSARTActiveBuffer1+476
0x3574	0x00000000 ;?ICS_ucUSARTActiveBuffer1+480
0x3578	0x00000000 ;?ICS_ucUSARTActiveBuffer1+484
0x357C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+488
0x3580	0x00000000 ;?ICS_ucUSARTActiveBuffer1+492
0x3584	0x00000000 ;?ICS_ucUSARTActiveBuffer1+496
0x3588	0x00000000 ;?ICS_ucUSARTActiveBuffer1+500
0x358C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+504
0x3590	0x00000000 ;?ICS_ucUSARTActiveBuffer1+508
0x3594	0x00000000 ;?ICS_ucUSARTActiveBuffer1+512
0x3598	0x00000000 ;?ICS_ucUSARTActiveBuffer1+516
0x359C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+520
0x35A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+524
0x35A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+528
0x35A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+532
0x35AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+536
0x35B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+540
0x35B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+544
0x35B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+548
0x35BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+552
0x35C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+556
0x35C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+560
0x35C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+564
0x35CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+568
0x35D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+572
0x35D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+576
0x35D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+580
0x35DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+584
0x35E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+588
0x35E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+592
0x35E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+596
0x35EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+600
0x35F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+604
0x35F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+608
0x35F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+612
0x35FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+616
0x3600	0x00000000 ;?ICS_ucUSARTActiveBuffer1+620
0x3604	0x00000000 ;?ICS_ucUSARTActiveBuffer1+624
0x3608	0x00000000 ;?ICS_ucUSARTActiveBuffer1+628
0x360C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+632
0x3610	0x00000000 ;?ICS_ucUSARTActiveBuffer1+636
0x3614	0x00000000 ;?ICS_ucUSARTActiveBuffer1+640
0x3618	0x00000000 ;?ICS_ucUSARTActiveBuffer1+644
0x361C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+648
0x3620	0x00000000 ;?ICS_ucUSARTActiveBuffer1+652
0x3624	0x00000000 ;?ICS_ucUSARTActiveBuffer1+656
0x3628	0x00000000 ;?ICS_ucUSARTActiveBuffer1+660
0x362C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+664
0x3630	0x00000000 ;?ICS_ucUSARTActiveBuffer1+668
0x3634	0x00000000 ;?ICS_ucUSARTActiveBuffer1+672
0x3638	0x00000000 ;?ICS_ucUSARTActiveBuffer1+676
0x363C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+680
0x3640	0x00000000 ;?ICS_ucUSARTActiveBuffer1+684
0x3644	0x00000000 ;?ICS_ucUSARTActiveBuffer1+688
0x3648	0x00000000 ;?ICS_ucUSARTActiveBuffer1+692
0x364C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+696
0x3650	0x00000000 ;?ICS_ucUSARTActiveBuffer1+700
0x3654	0x00000000 ;?ICS_ucUSARTActiveBuffer1+704
0x3658	0x00000000 ;?ICS_ucUSARTActiveBuffer1+708
0x365C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+712
0x3660	0x00000000 ;?ICS_ucUSARTActiveBuffer1+716
0x3664	0x00000000 ;?ICS_ucUSARTActiveBuffer1+720
0x3668	0x00000000 ;?ICS_ucUSARTActiveBuffer1+724
0x366C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+728
0x3670	0x00000000 ;?ICS_ucUSARTActiveBuffer1+732
0x3674	0x00000000 ;?ICS_ucUSARTActiveBuffer1+736
0x3678	0x00000000 ;?ICS_ucUSARTActiveBuffer1+740
0x367C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+744
0x3680	0x00000000 ;?ICS_ucUSARTActiveBuffer1+748
0x3684	0x00000000 ;?ICS_ucUSARTActiveBuffer1+752
0x3688	0x00000000 ;?ICS_ucUSARTActiveBuffer1+756
0x368C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+760
0x3690	0x00000000 ;?ICS_ucUSARTActiveBuffer1+764
0x3694	0x00000000 ;?ICS_ucUSARTActiveBuffer1+768
0x3698	0x00000000 ;?ICS_ucUSARTActiveBuffer1+772
0x369C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+776
0x36A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+780
0x36A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+784
0x36A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+788
0x36AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+792
0x36B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+796
0x36B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+800
0x36B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+804
0x36BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+808
0x36C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+812
0x36C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+816
0x36C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+820
0x36CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+824
0x36D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+828
0x36D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+832
0x36D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+836
0x36DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+840
0x36E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+844
0x36E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+848
0x36E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+852
0x36EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+856
0x36F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+860
0x36F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+864
0x36F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+868
0x36FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+872
0x3700	0x00000000 ;?ICS_ucUSARTActiveBuffer1+876
0x3704	0x00000000 ;?ICS_ucUSARTActiveBuffer1+880
0x3708	0x00000000 ;?ICS_ucUSARTActiveBuffer1+884
0x370C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+888
0x3710	0x00000000 ;?ICS_ucUSARTActiveBuffer1+892
0x3714	0x00000000 ;?ICS_ucUSARTActiveBuffer1+896
0x3718	0x00000000 ;?ICS_ucUSARTActiveBuffer1+900
0x371C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+904
0x3720	0x00000000 ;?ICS_ucUSARTActiveBuffer1+908
0x3724	0x00000000 ;?ICS_ucUSARTActiveBuffer1+912
0x3728	0x00000000 ;?ICS_ucUSARTActiveBuffer1+916
0x372C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+920
0x3730	0x00000000 ;?ICS_ucUSARTActiveBuffer1+924
0x3734	0x00000000 ;?ICS_ucUSARTActiveBuffer1+928
0x3738	0x00000000 ;?ICS_ucUSARTActiveBuffer1+932
0x373C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+936
0x3740	0x00000000 ;?ICS_ucUSARTActiveBuffer1+940
0x3744	0x00000000 ;?ICS_ucUSARTActiveBuffer1+944
0x3748	0x00000000 ;?ICS_ucUSARTActiveBuffer1+948
0x374C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+952
0x3750	0x00000000 ;?ICS_ucUSARTActiveBuffer1+956
0x3754	0x00000000 ;?ICS_ucUSARTActiveBuffer1+960
0x3758	0x00000000 ;?ICS_ucUSARTActiveBuffer1+964
0x375C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+968
0x3760	0x00000000 ;?ICS_ucUSARTActiveBuffer1+972
0x3764	0x00000000 ;?ICS_ucUSARTActiveBuffer1+976
0x3768	0x00000000 ;?ICS_ucUSARTActiveBuffer1+980
0x376C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+984
0x3770	0x00000000 ;?ICS_ucUSARTActiveBuffer1+988
0x3774	0x00000000 ;?ICS_ucUSARTActiveBuffer1+992
0x3778	0x00000000 ;?ICS_ucUSARTActiveBuffer1+996
0x377C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1000
0x3780	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1004
0x3784	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1008
0x3788	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1012
0x378C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1016
0x3790	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1020
0x3794	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1024
0x3798	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1028
0x379C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1032
0x37A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1036
0x37A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1040
0x37A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1044
0x37AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1048
0x37B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1052
0x37B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1056
0x37B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1060
0x37BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1064
0x37C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1068
0x37C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1072
0x37C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1076
0x37CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1080
0x37D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1084
0x37D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1088
0x37D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1092
0x37DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1096
0x37E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1100
0x37E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1104
0x37E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1108
0x37EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1112
0x37F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1116
0x37F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1120
0x37F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1124
0x37FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1128
0x3800	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1132
0x3804	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1136
0x3808	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1140
0x380C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1144
0x3810	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1148
0x3814	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1152
0x3818	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1156
0x381C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1160
0x3820	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1164
0x3824	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1168
0x3828	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1172
0x382C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1176
0x3830	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1180
0x3834	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1184
0x3838	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1188
0x383C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1192
0x3840	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1196
0x3844	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1200
0x3848	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1204
0x384C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1208
0x3850	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1212
0x3854	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1216
0x3858	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1220
0x385C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1224
0x3860	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1228
0x3864	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1232
0x3868	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1236
0x386C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1240
0x3870	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1244
0x3874	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1248
0x3878	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1252
0x387C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1256
0x3880	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1260
0x3884	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1264
0x3888	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1268
0x388C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1272
0x3890	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1276
0x3894	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1280
0x3898	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1284
0x389C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1288
0x38A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1292
0x38A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1296
0x38A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1300
0x38AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1304
0x38B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1308
0x38B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1312
0x38B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1316
0x38BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1320
0x38C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1324
0x38C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1328
0x38C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1332
0x38CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1336
0x38D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1340
0x38D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1344
0x38D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1348
0x38DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1352
0x38E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1356
0x38E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1360
0x38E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1364
0x38EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1368
0x38F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1372
0x38F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1376
0x38F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1380
0x38FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1384
0x3900	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1388
0x3904	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1392
0x3908	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1396
0x390C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1400
0x3910	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1404
0x3914	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1408
0x3918	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1412
0x391C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1416
0x3920	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1420
0x3924	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1424
0x3928	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1428
0x392C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1432
0x3930	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1436
0x3934	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1440
0x3938	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1444
0x393C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1448
0x3940	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1452
0x3944	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1456
0x3948	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1460
0x394C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1464
0x3950	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1468
0x3954	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1472
0x3958	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1476
0x395C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1480
0x3960	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1484
0x3964	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1488
0x3968	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1492
0x396C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1496
0x3970	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1500
0x3974	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1504
0x3978	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1508
0x397C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1512
0x3980	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1516
0x3984	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1520
0x3988	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1524
0x398C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1528
0x3990	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1532
0x3994	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1536
0x3998	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1540
0x399C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1544
0x39A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1548
0x39A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1552
0x39A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1556
0x39AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1560
0x39B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1564
0x39B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1568
0x39B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1572
0x39BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1576
0x39C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1580
0x39C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1584
0x39C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1588
0x39CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1592
0x39D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1596
0x39D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1600
0x39D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1604
0x39DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1608
0x39E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1612
0x39E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1616
0x39E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1620
0x39EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1624
0x39F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1628
0x39F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1632
0x39F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1636
0x39FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1640
0x3A00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1644
0x3A04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1648
0x3A08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1652
0x3A0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1656
0x3A10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1660
0x3A14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1664
0x3A18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1668
0x3A1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1672
0x3A20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1676
0x3A24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1680
0x3A28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1684
0x3A2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1688
0x3A30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1692
0x3A34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1696
0x3A38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1700
0x3A3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1704
0x3A40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1708
0x3A44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1712
0x3A48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1716
0x3A4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1720
0x3A50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1724
0x3A54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1728
0x3A58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1732
0x3A5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1736
0x3A60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1740
0x3A64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1744
0x3A68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1748
0x3A6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1752
0x3A70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1756
0x3A74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1760
0x3A78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1764
0x3A7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1768
0x3A80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1772
0x3A84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1776
0x3A88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1780
0x3A8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1784
0x3A90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1788
0x3A94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1792
0x3A98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1796
0x3A9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1800
0x3AA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1804
0x3AA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1808
0x3AA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1812
0x3AAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1816
0x3AB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1820
0x3AB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1824
0x3AB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1828
0x3ABC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1832
0x3AC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1836
0x3AC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1840
0x3AC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1844
0x3ACC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1848
0x3AD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1852
0x3AD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1856
0x3AD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1860
0x3ADC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1864
0x3AE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1868
0x3AE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1872
0x3AE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1876
0x3AEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1880
0x3AF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1884
0x3AF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1888
0x3AF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1892
0x3AFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1896
0x3B00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1900
0x3B04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1904
0x3B08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1908
0x3B0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1912
0x3B10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1916
0x3B14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1920
0x3B18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1924
0x3B1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1928
0x3B20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1932
0x3B24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1936
0x3B28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1940
0x3B2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1944
0x3B30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1948
0x3B34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1952
0x3B38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1956
0x3B3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1960
0x3B40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1964
0x3B44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1968
0x3B48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1972
0x3B4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1976
0x3B50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1980
0x3B54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1984
0x3B58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1988
0x3B5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1992
0x3B60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+1996
0x3B64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2000
0x3B68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2004
0x3B6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2008
0x3B70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2012
0x3B74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2016
0x3B78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2020
0x3B7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2024
0x3B80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2028
0x3B84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2032
0x3B88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2036
0x3B8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2040
0x3B90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2044
0x3B94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2048
0x3B98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2052
0x3B9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2056
0x3BA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2060
0x3BA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2064
0x3BA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2068
0x3BAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2072
0x3BB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2076
0x3BB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2080
0x3BB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2084
0x3BBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2088
0x3BC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2092
0x3BC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2096
0x3BC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2100
0x3BCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2104
0x3BD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2108
0x3BD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2112
0x3BD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2116
0x3BDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2120
0x3BE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2124
0x3BE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2128
0x3BE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2132
0x3BEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2136
0x3BF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2140
0x3BF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2144
0x3BF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2148
0x3BFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2152
0x3C00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2156
0x3C04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2160
0x3C08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2164
0x3C0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2168
0x3C10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2172
0x3C14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2176
0x3C18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2180
0x3C1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2184
0x3C20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2188
0x3C24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2192
0x3C28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2196
0x3C2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2200
0x3C30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2204
0x3C34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2208
0x3C38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2212
0x3C3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2216
0x3C40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2220
0x3C44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2224
0x3C48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2228
0x3C4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2232
0x3C50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2236
0x3C54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2240
0x3C58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2244
0x3C5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2248
0x3C60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2252
0x3C64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2256
0x3C68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2260
0x3C6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2264
0x3C70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2268
0x3C74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2272
0x3C78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2276
0x3C7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2280
0x3C80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2284
0x3C84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2288
0x3C88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2292
0x3C8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2296
0x3C90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2300
0x3C94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2304
0x3C98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2308
0x3C9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2312
0x3CA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2316
0x3CA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2320
0x3CA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2324
0x3CAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2328
0x3CB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2332
0x3CB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2336
0x3CB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2340
0x3CBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2344
0x3CC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2348
0x3CC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2352
0x3CC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2356
0x3CCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2360
0x3CD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2364
0x3CD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2368
0x3CD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2372
0x3CDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2376
0x3CE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2380
0x3CE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2384
0x3CE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2388
0x3CEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2392
0x3CF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2396
0x3CF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2400
0x3CF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2404
0x3CFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2408
0x3D00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2412
0x3D04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2416
0x3D08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2420
0x3D0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2424
0x3D10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2428
0x3D14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2432
0x3D18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2436
0x3D1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2440
0x3D20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2444
0x3D24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2448
0x3D28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2452
0x3D2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2456
0x3D30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2460
0x3D34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2464
0x3D38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2468
0x3D3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2472
0x3D40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2476
0x3D44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2480
0x3D48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2484
0x3D4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2488
0x3D50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2492
0x3D54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2496
0x3D58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2500
0x3D5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2504
0x3D60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2508
0x3D64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2512
0x3D68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2516
0x3D6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2520
0x3D70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2524
0x3D74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2528
0x3D78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2532
0x3D7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2536
0x3D80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2540
0x3D84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2544
0x3D88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2548
0x3D8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2552
0x3D90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2556
0x3D94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2560
0x3D98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2564
0x3D9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2568
0x3DA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2572
0x3DA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2576
0x3DA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2580
0x3DAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2584
0x3DB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2588
0x3DB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2592
0x3DB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2596
0x3DBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2600
0x3DC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2604
0x3DC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2608
0x3DC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2612
0x3DCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2616
0x3DD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2620
0x3DD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2624
0x3DD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2628
0x3DDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2632
0x3DE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2636
0x3DE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2640
0x3DE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2644
0x3DEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2648
0x3DF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2652
0x3DF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2656
0x3DF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2660
0x3DFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2664
0x3E00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2668
0x3E04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2672
0x3E08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2676
0x3E0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2680
0x3E10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2684
0x3E14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2688
0x3E18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2692
0x3E1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2696
0x3E20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2700
0x3E24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2704
0x3E28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2708
0x3E2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2712
0x3E30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2716
0x3E34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2720
0x3E38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2724
0x3E3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2728
0x3E40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2732
0x3E44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2736
0x3E48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2740
0x3E4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2744
0x3E50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2748
0x3E54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2752
0x3E58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2756
0x3E5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2760
0x3E60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2764
0x3E64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2768
0x3E68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2772
0x3E6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2776
0x3E70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2780
0x3E74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2784
0x3E78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2788
0x3E7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2792
0x3E80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2796
0x3E84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2800
0x3E88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2804
0x3E8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2808
0x3E90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2812
0x3E94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2816
0x3E98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2820
0x3E9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2824
0x3EA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2828
0x3EA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2832
0x3EA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2836
0x3EAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2840
0x3EB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2844
0x3EB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2848
0x3EB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2852
0x3EBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2856
0x3EC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2860
0x3EC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2864
0x3EC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2868
0x3ECC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2872
0x3ED0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2876
0x3ED4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2880
0x3ED8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2884
0x3EDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2888
0x3EE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2892
0x3EE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2896
0x3EE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2900
0x3EEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2904
0x3EF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2908
0x3EF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2912
0x3EF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2916
0x3EFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2920
0x3F00	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2924
0x3F04	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2928
0x3F08	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2932
0x3F0C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2936
0x3F10	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2940
0x3F14	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2944
0x3F18	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2948
0x3F1C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2952
0x3F20	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2956
0x3F24	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2960
0x3F28	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2964
0x3F2C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2968
0x3F30	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2972
0x3F34	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2976
0x3F38	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2980
0x3F3C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2984
0x3F40	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2988
0x3F44	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2992
0x3F48	0x00000000 ;?ICS_ucUSARTActiveBuffer1+2996
0x3F4C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3000
0x3F50	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3004
0x3F54	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3008
0x3F58	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3012
0x3F5C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3016
0x3F60	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3020
0x3F64	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3024
0x3F68	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3028
0x3F6C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3032
0x3F70	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3036
0x3F74	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3040
0x3F78	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3044
0x3F7C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3048
0x3F80	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3052
0x3F84	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3056
0x3F88	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3060
0x3F8C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3064
0x3F90	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3068
0x3F94	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3072
0x3F98	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3076
0x3F9C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3080
0x3FA0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3084
0x3FA4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3088
0x3FA8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3092
0x3FAC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3096
0x3FB0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3100
0x3FB4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3104
0x3FB8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3108
0x3FBC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3112
0x3FC0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3116
0x3FC4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3120
0x3FC8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3124
0x3FCC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3128
0x3FD0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3132
0x3FD4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3136
0x3FD8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3140
0x3FDC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3144
0x3FE0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3148
0x3FE4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3152
0x3FE8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3156
0x3FEC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3160
0x3FF0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3164
0x3FF4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3168
0x3FF8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3172
0x3FFC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3176
0x4000	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3180
0x4004	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3184
0x4008	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3188
0x400C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3192
0x4010	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3196
0x4014	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3200
0x4018	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3204
0x401C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3208
0x4020	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3212
0x4024	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3216
0x4028	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3220
0x402C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3224
0x4030	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3228
0x4034	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3232
0x4038	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3236
0x403C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3240
0x4040	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3244
0x4044	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3248
0x4048	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3252
0x404C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3256
0x4050	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3260
0x4054	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3264
0x4058	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3268
0x405C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3272
0x4060	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3276
0x4064	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3280
0x4068	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3284
0x406C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3288
0x4070	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3292
0x4074	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3296
0x4078	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3300
0x407C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3304
0x4080	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3308
0x4084	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3312
0x4088	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3316
0x408C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3320
0x4090	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3324
0x4094	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3328
0x4098	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3332
0x409C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3336
0x40A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3340
0x40A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3344
0x40A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3348
0x40AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3352
0x40B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3356
0x40B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3360
0x40B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3364
0x40BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3368
0x40C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3372
0x40C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3376
0x40C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3380
0x40CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3384
0x40D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3388
0x40D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3392
0x40D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3396
0x40DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3400
0x40E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3404
0x40E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3408
0x40E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3412
0x40EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3416
0x40F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3420
0x40F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3424
0x40F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3428
0x40FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3432
0x4100	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3436
0x4104	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3440
0x4108	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3444
0x410C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3448
0x4110	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3452
0x4114	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3456
0x4118	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3460
0x411C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3464
0x4120	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3468
0x4124	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3472
0x4128	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3476
0x412C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3480
0x4130	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3484
0x4134	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3488
0x4138	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3492
0x413C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3496
0x4140	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3500
0x4144	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3504
0x4148	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3508
0x414C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3512
0x4150	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3516
0x4154	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3520
0x4158	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3524
0x415C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3528
0x4160	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3532
0x4164	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3536
0x4168	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3540
0x416C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3544
0x4170	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3548
0x4174	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3552
0x4178	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3556
0x417C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3560
0x4180	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3564
0x4184	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3568
0x4188	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3572
0x418C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3576
0x4190	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3580
0x4194	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3584
0x4198	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3588
0x419C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3592
0x41A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3596
0x41A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3600
0x41A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3604
0x41AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3608
0x41B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3612
0x41B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3616
0x41B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3620
0x41BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3624
0x41C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3628
0x41C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3632
0x41C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3636
0x41CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3640
0x41D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3644
0x41D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3648
0x41D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3652
0x41DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3656
0x41E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3660
0x41E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3664
0x41E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3668
0x41EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3672
0x41F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3676
0x41F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3680
0x41F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3684
0x41FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3688
0x4200	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3692
0x4204	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3696
0x4208	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3700
0x420C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3704
0x4210	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3708
0x4214	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3712
0x4218	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3716
0x421C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3720
0x4220	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3724
0x4224	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3728
0x4228	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3732
0x422C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3736
0x4230	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3740
0x4234	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3744
0x4238	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3748
0x423C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3752
0x4240	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3756
0x4244	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3760
0x4248	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3764
0x424C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3768
0x4250	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3772
0x4254	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3776
0x4258	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3780
0x425C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3784
0x4260	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3788
0x4264	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3792
0x4268	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3796
0x426C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3800
0x4270	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3804
0x4274	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3808
0x4278	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3812
0x427C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3816
0x4280	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3820
0x4284	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3824
0x4288	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3828
0x428C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3832
0x4290	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3836
0x4294	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3840
0x4298	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3844
0x429C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3848
0x42A0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3852
0x42A4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3856
0x42A8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3860
0x42AC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3864
0x42B0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3868
0x42B4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3872
0x42B8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3876
0x42BC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3880
0x42C0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3884
0x42C4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3888
0x42C8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3892
0x42CC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3896
0x42D0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3900
0x42D4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3904
0x42D8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3908
0x42DC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3912
0x42E0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3916
0x42E4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3920
0x42E8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3924
0x42EC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3928
0x42F0	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3932
0x42F4	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3936
0x42F8	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3940
0x42FC	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3944
0x4300	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3948
0x4304	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3952
0x4308	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3956
0x430C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3960
0x4310	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3964
0x4314	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3968
0x4318	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3972
0x431C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3976
0x4320	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3980
0x4324	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3984
0x4328	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3988
0x432C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3992
0x4330	0x00000000 ;?ICS_ucUSARTActiveBuffer1+3996
0x4334	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4000
0x4338	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4004
0x433C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4008
0x4340	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4012
0x4344	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4016
0x4348	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4020
0x434C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4024
0x4350	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4028
0x4354	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4032
0x4358	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4036
0x435C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4040
0x4360	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4044
0x4364	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4048
0x4368	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4052
0x436C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4056
0x4370	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4060
0x4374	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4064
0x4378	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4068
0x437C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4072
0x4380	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4076
0x4384	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4080
0x4388	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4084
0x438C	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4088
0x4390	0x00000000 ;?ICS_ucUSARTActiveBuffer1+4092
; end of ?ICS_ucUSARTActiveBuffer1
;DriverRF4463PROMain.c,0 :: ?ICS_ulUSARTActiveBuffer1BytesReceived [4]
0x4394	0x00000000 ;?ICS_ulUSARTActiveBuffer1BytesReceived+0
; end of ?ICS_ulUSARTActiveBuffer1BytesReceived
;DriverRF4463PROMain.c,0 :: ?ICS_ucUSART1RXBuffer [4096]
0x4398	0x00000000 ;?ICS_ucUSART1RXBuffer+0
0x439C	0x00000000 ;?ICS_ucUSART1RXBuffer+4
0x43A0	0x00000000 ;?ICS_ucUSART1RXBuffer+8
0x43A4	0x00000000 ;?ICS_ucUSART1RXBuffer+12
0x43A8	0x00000000 ;?ICS_ucUSART1RXBuffer+16
0x43AC	0x00000000 ;?ICS_ucUSART1RXBuffer+20
0x43B0	0x00000000 ;?ICS_ucUSART1RXBuffer+24
0x43B4	0x00000000 ;?ICS_ucUSART1RXBuffer+28
0x43B8	0x00000000 ;?ICS_ucUSART1RXBuffer+32
0x43BC	0x00000000 ;?ICS_ucUSART1RXBuffer+36
0x43C0	0x00000000 ;?ICS_ucUSART1RXBuffer+40
0x43C4	0x00000000 ;?ICS_ucUSART1RXBuffer+44
0x43C8	0x00000000 ;?ICS_ucUSART1RXBuffer+48
0x43CC	0x00000000 ;?ICS_ucUSART1RXBuffer+52
0x43D0	0x00000000 ;?ICS_ucUSART1RXBuffer+56
0x43D4	0x00000000 ;?ICS_ucUSART1RXBuffer+60
0x43D8	0x00000000 ;?ICS_ucUSART1RXBuffer+64
0x43DC	0x00000000 ;?ICS_ucUSART1RXBuffer+68
0x43E0	0x00000000 ;?ICS_ucUSART1RXBuffer+72
0x43E4	0x00000000 ;?ICS_ucUSART1RXBuffer+76
0x43E8	0x00000000 ;?ICS_ucUSART1RXBuffer+80
0x43EC	0x00000000 ;?ICS_ucUSART1RXBuffer+84
0x43F0	0x00000000 ;?ICS_ucUSART1RXBuffer+88
0x43F4	0x00000000 ;?ICS_ucUSART1RXBuffer+92
0x43F8	0x00000000 ;?ICS_ucUSART1RXBuffer+96
0x43FC	0x00000000 ;?ICS_ucUSART1RXBuffer+100
0x4400	0x00000000 ;?ICS_ucUSART1RXBuffer+104
0x4404	0x00000000 ;?ICS_ucUSART1RXBuffer+108
0x4408	0x00000000 ;?ICS_ucUSART1RXBuffer+112
0x440C	0x00000000 ;?ICS_ucUSART1RXBuffer+116
0x4410	0x00000000 ;?ICS_ucUSART1RXBuffer+120
0x4414	0x00000000 ;?ICS_ucUSART1RXBuffer+124
0x4418	0x00000000 ;?ICS_ucUSART1RXBuffer+128
0x441C	0x00000000 ;?ICS_ucUSART1RXBuffer+132
0x4420	0x00000000 ;?ICS_ucUSART1RXBuffer+136
0x4424	0x00000000 ;?ICS_ucUSART1RXBuffer+140
0x4428	0x00000000 ;?ICS_ucUSART1RXBuffer+144
0x442C	0x00000000 ;?ICS_ucUSART1RXBuffer+148
0x4430	0x00000000 ;?ICS_ucUSART1RXBuffer+152
0x4434	0x00000000 ;?ICS_ucUSART1RXBuffer+156
0x4438	0x00000000 ;?ICS_ucUSART1RXBuffer+160
0x443C	0x00000000 ;?ICS_ucUSART1RXBuffer+164
0x4440	0x00000000 ;?ICS_ucUSART1RXBuffer+168
0x4444	0x00000000 ;?ICS_ucUSART1RXBuffer+172
0x4448	0x00000000 ;?ICS_ucUSART1RXBuffer+176
0x444C	0x00000000 ;?ICS_ucUSART1RXBuffer+180
0x4450	0x00000000 ;?ICS_ucUSART1RXBuffer+184
0x4454	0x00000000 ;?ICS_ucUSART1RXBuffer+188
0x4458	0x00000000 ;?ICS_ucUSART1RXBuffer+192
0x445C	0x00000000 ;?ICS_ucUSART1RXBuffer+196
0x4460	0x00000000 ;?ICS_ucUSART1RXBuffer+200
0x4464	0x00000000 ;?ICS_ucUSART1RXBuffer+204
0x4468	0x00000000 ;?ICS_ucUSART1RXBuffer+208
0x446C	0x00000000 ;?ICS_ucUSART1RXBuffer+212
0x4470	0x00000000 ;?ICS_ucUSART1RXBuffer+216
0x4474	0x00000000 ;?ICS_ucUSART1RXBuffer+220
0x4478	0x00000000 ;?ICS_ucUSART1RXBuffer+224
0x447C	0x00000000 ;?ICS_ucUSART1RXBuffer+228
0x4480	0x00000000 ;?ICS_ucUSART1RXBuffer+232
0x4484	0x00000000 ;?ICS_ucUSART1RXBuffer+236
0x4488	0x00000000 ;?ICS_ucUSART1RXBuffer+240
0x448C	0x00000000 ;?ICS_ucUSART1RXBuffer+244
0x4490	0x00000000 ;?ICS_ucUSART1RXBuffer+248
0x4494	0x00000000 ;?ICS_ucUSART1RXBuffer+252
0x4498	0x00000000 ;?ICS_ucUSART1RXBuffer+256
0x449C	0x00000000 ;?ICS_ucUSART1RXBuffer+260
0x44A0	0x00000000 ;?ICS_ucUSART1RXBuffer+264
0x44A4	0x00000000 ;?ICS_ucUSART1RXBuffer+268
0x44A8	0x00000000 ;?ICS_ucUSART1RXBuffer+272
0x44AC	0x00000000 ;?ICS_ucUSART1RXBuffer+276
0x44B0	0x00000000 ;?ICS_ucUSART1RXBuffer+280
0x44B4	0x00000000 ;?ICS_ucUSART1RXBuffer+284
0x44B8	0x00000000 ;?ICS_ucUSART1RXBuffer+288
0x44BC	0x00000000 ;?ICS_ucUSART1RXBuffer+292
0x44C0	0x00000000 ;?ICS_ucUSART1RXBuffer+296
0x44C4	0x00000000 ;?ICS_ucUSART1RXBuffer+300
0x44C8	0x00000000 ;?ICS_ucUSART1RXBuffer+304
0x44CC	0x00000000 ;?ICS_ucUSART1RXBuffer+308
0x44D0	0x00000000 ;?ICS_ucUSART1RXBuffer+312
0x44D4	0x00000000 ;?ICS_ucUSART1RXBuffer+316
0x44D8	0x00000000 ;?ICS_ucUSART1RXBuffer+320
0x44DC	0x00000000 ;?ICS_ucUSART1RXBuffer+324
0x44E0	0x00000000 ;?ICS_ucUSART1RXBuffer+328
0x44E4	0x00000000 ;?ICS_ucUSART1RXBuffer+332
0x44E8	0x00000000 ;?ICS_ucUSART1RXBuffer+336
0x44EC	0x00000000 ;?ICS_ucUSART1RXBuffer+340
0x44F0	0x00000000 ;?ICS_ucUSART1RXBuffer+344
0x44F4	0x00000000 ;?ICS_ucUSART1RXBuffer+348
0x44F8	0x00000000 ;?ICS_ucUSART1RXBuffer+352
0x44FC	0x00000000 ;?ICS_ucUSART1RXBuffer+356
0x4500	0x00000000 ;?ICS_ucUSART1RXBuffer+360
0x4504	0x00000000 ;?ICS_ucUSART1RXBuffer+364
0x4508	0x00000000 ;?ICS_ucUSART1RXBuffer+368
0x450C	0x00000000 ;?ICS_ucUSART1RXBuffer+372
0x4510	0x00000000 ;?ICS_ucUSART1RXBuffer+376
0x4514	0x00000000 ;?ICS_ucUSART1RXBuffer+380
0x4518	0x00000000 ;?ICS_ucUSART1RXBuffer+384
0x451C	0x00000000 ;?ICS_ucUSART1RXBuffer+388
0x4520	0x00000000 ;?ICS_ucUSART1RXBuffer+392
0x4524	0x00000000 ;?ICS_ucUSART1RXBuffer+396
0x4528	0x00000000 ;?ICS_ucUSART1RXBuffer+400
0x452C	0x00000000 ;?ICS_ucUSART1RXBuffer+404
0x4530	0x00000000 ;?ICS_ucUSART1RXBuffer+408
0x4534	0x00000000 ;?ICS_ucUSART1RXBuffer+412
0x4538	0x00000000 ;?ICS_ucUSART1RXBuffer+416
0x453C	0x00000000 ;?ICS_ucUSART1RXBuffer+420
0x4540	0x00000000 ;?ICS_ucUSART1RXBuffer+424
0x4544	0x00000000 ;?ICS_ucUSART1RXBuffer+428
0x4548	0x00000000 ;?ICS_ucUSART1RXBuffer+432
0x454C	0x00000000 ;?ICS_ucUSART1RXBuffer+436
0x4550	0x00000000 ;?ICS_ucUSART1RXBuffer+440
0x4554	0x00000000 ;?ICS_ucUSART1RXBuffer+444
0x4558	0x00000000 ;?ICS_ucUSART1RXBuffer+448
0x455C	0x00000000 ;?ICS_ucUSART1RXBuffer+452
0x4560	0x00000000 ;?ICS_ucUSART1RXBuffer+456
0x4564	0x00000000 ;?ICS_ucUSART1RXBuffer+460
0x4568	0x00000000 ;?ICS_ucUSART1RXBuffer+464
0x456C	0x00000000 ;?ICS_ucUSART1RXBuffer+468
0x4570	0x00000000 ;?ICS_ucUSART1RXBuffer+472
0x4574	0x00000000 ;?ICS_ucUSART1RXBuffer+476
0x4578	0x00000000 ;?ICS_ucUSART1RXBuffer+480
0x457C	0x00000000 ;?ICS_ucUSART1RXBuffer+484
0x4580	0x00000000 ;?ICS_ucUSART1RXBuffer+488
0x4584	0x00000000 ;?ICS_ucUSART1RXBuffer+492
0x4588	0x00000000 ;?ICS_ucUSART1RXBuffer+496
0x458C	0x00000000 ;?ICS_ucUSART1RXBuffer+500
0x4590	0x00000000 ;?ICS_ucUSART1RXBuffer+504
0x4594	0x00000000 ;?ICS_ucUSART1RXBuffer+508
0x4598	0x00000000 ;?ICS_ucUSART1RXBuffer+512
0x459C	0x00000000 ;?ICS_ucUSART1RXBuffer+516
0x45A0	0x00000000 ;?ICS_ucUSART1RXBuffer+520
0x45A4	0x00000000 ;?ICS_ucUSART1RXBuffer+524
0x45A8	0x00000000 ;?ICS_ucUSART1RXBuffer+528
0x45AC	0x00000000 ;?ICS_ucUSART1RXBuffer+532
0x45B0	0x00000000 ;?ICS_ucUSART1RXBuffer+536
0x45B4	0x00000000 ;?ICS_ucUSART1RXBuffer+540
0x45B8	0x00000000 ;?ICS_ucUSART1RXBuffer+544
0x45BC	0x00000000 ;?ICS_ucUSART1RXBuffer+548
0x45C0	0x00000000 ;?ICS_ucUSART1RXBuffer+552
0x45C4	0x00000000 ;?ICS_ucUSART1RXBuffer+556
0x45C8	0x00000000 ;?ICS_ucUSART1RXBuffer+560
0x45CC	0x00000000 ;?ICS_ucUSART1RXBuffer+564
0x45D0	0x00000000 ;?ICS_ucUSART1RXBuffer+568
0x45D4	0x00000000 ;?ICS_ucUSART1RXBuffer+572
0x45D8	0x00000000 ;?ICS_ucUSART1RXBuffer+576
0x45DC	0x00000000 ;?ICS_ucUSART1RXBuffer+580
0x45E0	0x00000000 ;?ICS_ucUSART1RXBuffer+584
0x45E4	0x00000000 ;?ICS_ucUSART1RXBuffer+588
0x45E8	0x00000000 ;?ICS_ucUSART1RXBuffer+592
0x45EC	0x00000000 ;?ICS_ucUSART1RXBuffer+596
0x45F0	0x00000000 ;?ICS_ucUSART1RXBuffer+600
0x45F4	0x00000000 ;?ICS_ucUSART1RXBuffer+604
0x45F8	0x00000000 ;?ICS_ucUSART1RXBuffer+608
0x45FC	0x00000000 ;?ICS_ucUSART1RXBuffer+612
0x4600	0x00000000 ;?ICS_ucUSART1RXBuffer+616
0x4604	0x00000000 ;?ICS_ucUSART1RXBuffer+620
0x4608	0x00000000 ;?ICS_ucUSART1RXBuffer+624
0x460C	0x00000000 ;?ICS_ucUSART1RXBuffer+628
0x4610	0x00000000 ;?ICS_ucUSART1RXBuffer+632
0x4614	0x00000000 ;?ICS_ucUSART1RXBuffer+636
0x4618	0x00000000 ;?ICS_ucUSART1RXBuffer+640
0x461C	0x00000000 ;?ICS_ucUSART1RXBuffer+644
0x4620	0x00000000 ;?ICS_ucUSART1RXBuffer+648
0x4624	0x00000000 ;?ICS_ucUSART1RXBuffer+652
0x4628	0x00000000 ;?ICS_ucUSART1RXBuffer+656
0x462C	0x00000000 ;?ICS_ucUSART1RXBuffer+660
0x4630	0x00000000 ;?ICS_ucUSART1RXBuffer+664
0x4634	0x00000000 ;?ICS_ucUSART1RXBuffer+668
0x4638	0x00000000 ;?ICS_ucUSART1RXBuffer+672
0x463C	0x00000000 ;?ICS_ucUSART1RXBuffer+676
0x4640	0x00000000 ;?ICS_ucUSART1RXBuffer+680
0x4644	0x00000000 ;?ICS_ucUSART1RXBuffer+684
0x4648	0x00000000 ;?ICS_ucUSART1RXBuffer+688
0x464C	0x00000000 ;?ICS_ucUSART1RXBuffer+692
0x4650	0x00000000 ;?ICS_ucUSART1RXBuffer+696
0x4654	0x00000000 ;?ICS_ucUSART1RXBuffer+700
0x4658	0x00000000 ;?ICS_ucUSART1RXBuffer+704
0x465C	0x00000000 ;?ICS_ucUSART1RXBuffer+708
0x4660	0x00000000 ;?ICS_ucUSART1RXBuffer+712
0x4664	0x00000000 ;?ICS_ucUSART1RXBuffer+716
0x4668	0x00000000 ;?ICS_ucUSART1RXBuffer+720
0x466C	0x00000000 ;?ICS_ucUSART1RXBuffer+724
0x4670	0x00000000 ;?ICS_ucUSART1RXBuffer+728
0x4674	0x00000000 ;?ICS_ucUSART1RXBuffer+732
0x4678	0x00000000 ;?ICS_ucUSART1RXBuffer+736
0x467C	0x00000000 ;?ICS_ucUSART1RXBuffer+740
0x4680	0x00000000 ;?ICS_ucUSART1RXBuffer+744
0x4684	0x00000000 ;?ICS_ucUSART1RXBuffer+748
0x4688	0x00000000 ;?ICS_ucUSART1RXBuffer+752
0x468C	0x00000000 ;?ICS_ucUSART1RXBuffer+756
0x4690	0x00000000 ;?ICS_ucUSART1RXBuffer+760
0x4694	0x00000000 ;?ICS_ucUSART1RXBuffer+764
0x4698	0x00000000 ;?ICS_ucUSART1RXBuffer+768
0x469C	0x00000000 ;?ICS_ucUSART1RXBuffer+772
0x46A0	0x00000000 ;?ICS_ucUSART1RXBuffer+776
0x46A4	0x00000000 ;?ICS_ucUSART1RXBuffer+780
0x46A8	0x00000000 ;?ICS_ucUSART1RXBuffer+784
0x46AC	0x00000000 ;?ICS_ucUSART1RXBuffer+788
0x46B0	0x00000000 ;?ICS_ucUSART1RXBuffer+792
0x46B4	0x00000000 ;?ICS_ucUSART1RXBuffer+796
0x46B8	0x00000000 ;?ICS_ucUSART1RXBuffer+800
0x46BC	0x00000000 ;?ICS_ucUSART1RXBuffer+804
0x46C0	0x00000000 ;?ICS_ucUSART1RXBuffer+808
0x46C4	0x00000000 ;?ICS_ucUSART1RXBuffer+812
0x46C8	0x00000000 ;?ICS_ucUSART1RXBuffer+816
0x46CC	0x00000000 ;?ICS_ucUSART1RXBuffer+820
0x46D0	0x00000000 ;?ICS_ucUSART1RXBuffer+824
0x46D4	0x00000000 ;?ICS_ucUSART1RXBuffer+828
0x46D8	0x00000000 ;?ICS_ucUSART1RXBuffer+832
0x46DC	0x00000000 ;?ICS_ucUSART1RXBuffer+836
0x46E0	0x00000000 ;?ICS_ucUSART1RXBuffer+840
0x46E4	0x00000000 ;?ICS_ucUSART1RXBuffer+844
0x46E8	0x00000000 ;?ICS_ucUSART1RXBuffer+848
0x46EC	0x00000000 ;?ICS_ucUSART1RXBuffer+852
0x46F0	0x00000000 ;?ICS_ucUSART1RXBuffer+856
0x46F4	0x00000000 ;?ICS_ucUSART1RXBuffer+860
0x46F8	0x00000000 ;?ICS_ucUSART1RXBuffer+864
0x46FC	0x00000000 ;?ICS_ucUSART1RXBuffer+868
0x4700	0x00000000 ;?ICS_ucUSART1RXBuffer+872
0x4704	0x00000000 ;?ICS_ucUSART1RXBuffer+876
0x4708	0x00000000 ;?ICS_ucUSART1RXBuffer+880
0x470C	0x00000000 ;?ICS_ucUSART1RXBuffer+884
0x4710	0x00000000 ;?ICS_ucUSART1RXBuffer+888
0x4714	0x00000000 ;?ICS_ucUSART1RXBuffer+892
0x4718	0x00000000 ;?ICS_ucUSART1RXBuffer+896
0x471C	0x00000000 ;?ICS_ucUSART1RXBuffer+900
0x4720	0x00000000 ;?ICS_ucUSART1RXBuffer+904
0x4724	0x00000000 ;?ICS_ucUSART1RXBuffer+908
0x4728	0x00000000 ;?ICS_ucUSART1RXBuffer+912
0x472C	0x00000000 ;?ICS_ucUSART1RXBuffer+916
0x4730	0x00000000 ;?ICS_ucUSART1RXBuffer+920
0x4734	0x00000000 ;?ICS_ucUSART1RXBuffer+924
0x4738	0x00000000 ;?ICS_ucUSART1RXBuffer+928
0x473C	0x00000000 ;?ICS_ucUSART1RXBuffer+932
0x4740	0x00000000 ;?ICS_ucUSART1RXBuffer+936
0x4744	0x00000000 ;?ICS_ucUSART1RXBuffer+940
0x4748	0x00000000 ;?ICS_ucUSART1RXBuffer+944
0x474C	0x00000000 ;?ICS_ucUSART1RXBuffer+948
0x4750	0x00000000 ;?ICS_ucUSART1RXBuffer+952
0x4754	0x00000000 ;?ICS_ucUSART1RXBuffer+956
0x4758	0x00000000 ;?ICS_ucUSART1RXBuffer+960
0x475C	0x00000000 ;?ICS_ucUSART1RXBuffer+964
0x4760	0x00000000 ;?ICS_ucUSART1RXBuffer+968
0x4764	0x00000000 ;?ICS_ucUSART1RXBuffer+972
0x4768	0x00000000 ;?ICS_ucUSART1RXBuffer+976
0x476C	0x00000000 ;?ICS_ucUSART1RXBuffer+980
0x4770	0x00000000 ;?ICS_ucUSART1RXBuffer+984
0x4774	0x00000000 ;?ICS_ucUSART1RXBuffer+988
0x4778	0x00000000 ;?ICS_ucUSART1RXBuffer+992
0x477C	0x00000000 ;?ICS_ucUSART1RXBuffer+996
0x4780	0x00000000 ;?ICS_ucUSART1RXBuffer+1000
0x4784	0x00000000 ;?ICS_ucUSART1RXBuffer+1004
0x4788	0x00000000 ;?ICS_ucUSART1RXBuffer+1008
0x478C	0x00000000 ;?ICS_ucUSART1RXBuffer+1012
0x4790	0x00000000 ;?ICS_ucUSART1RXBuffer+1016
0x4794	0x00000000 ;?ICS_ucUSART1RXBuffer+1020
0x4798	0x00000000 ;?ICS_ucUSART1RXBuffer+1024
0x479C	0x00000000 ;?ICS_ucUSART1RXBuffer+1028
0x47A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1032
0x47A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1036
0x47A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1040
0x47AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1044
0x47B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1048
0x47B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1052
0x47B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1056
0x47BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1060
0x47C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1064
0x47C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1068
0x47C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1072
0x47CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1076
0x47D0	0x00000000 ;?ICS_ucUSART1RXBuffer+1080
0x47D4	0x00000000 ;?ICS_ucUSART1RXBuffer+1084
0x47D8	0x00000000 ;?ICS_ucUSART1RXBuffer+1088
0x47DC	0x00000000 ;?ICS_ucUSART1RXBuffer+1092
0x47E0	0x00000000 ;?ICS_ucUSART1RXBuffer+1096
0x47E4	0x00000000 ;?ICS_ucUSART1RXBuffer+1100
0x47E8	0x00000000 ;?ICS_ucUSART1RXBuffer+1104
0x47EC	0x00000000 ;?ICS_ucUSART1RXBuffer+1108
0x47F0	0x00000000 ;?ICS_ucUSART1RXBuffer+1112
0x47F4	0x00000000 ;?ICS_ucUSART1RXBuffer+1116
0x47F8	0x00000000 ;?ICS_ucUSART1RXBuffer+1120
0x47FC	0x00000000 ;?ICS_ucUSART1RXBuffer+1124
0x4800	0x00000000 ;?ICS_ucUSART1RXBuffer+1128
0x4804	0x00000000 ;?ICS_ucUSART1RXBuffer+1132
0x4808	0x00000000 ;?ICS_ucUSART1RXBuffer+1136
0x480C	0x00000000 ;?ICS_ucUSART1RXBuffer+1140
0x4810	0x00000000 ;?ICS_ucUSART1RXBuffer+1144
0x4814	0x00000000 ;?ICS_ucUSART1RXBuffer+1148
0x4818	0x00000000 ;?ICS_ucUSART1RXBuffer+1152
0x481C	0x00000000 ;?ICS_ucUSART1RXBuffer+1156
0x4820	0x00000000 ;?ICS_ucUSART1RXBuffer+1160
0x4824	0x00000000 ;?ICS_ucUSART1RXBuffer+1164
0x4828	0x00000000 ;?ICS_ucUSART1RXBuffer+1168
0x482C	0x00000000 ;?ICS_ucUSART1RXBuffer+1172
0x4830	0x00000000 ;?ICS_ucUSART1RXBuffer+1176
0x4834	0x00000000 ;?ICS_ucUSART1RXBuffer+1180
0x4838	0x00000000 ;?ICS_ucUSART1RXBuffer+1184
0x483C	0x00000000 ;?ICS_ucUSART1RXBuffer+1188
0x4840	0x00000000 ;?ICS_ucUSART1RXBuffer+1192
0x4844	0x00000000 ;?ICS_ucUSART1RXBuffer+1196
0x4848	0x00000000 ;?ICS_ucUSART1RXBuffer+1200
0x484C	0x00000000 ;?ICS_ucUSART1RXBuffer+1204
0x4850	0x00000000 ;?ICS_ucUSART1RXBuffer+1208
0x4854	0x00000000 ;?ICS_ucUSART1RXBuffer+1212
0x4858	0x00000000 ;?ICS_ucUSART1RXBuffer+1216
0x485C	0x00000000 ;?ICS_ucUSART1RXBuffer+1220
0x4860	0x00000000 ;?ICS_ucUSART1RXBuffer+1224
0x4864	0x00000000 ;?ICS_ucUSART1RXBuffer+1228
0x4868	0x00000000 ;?ICS_ucUSART1RXBuffer+1232
0x486C	0x00000000 ;?ICS_ucUSART1RXBuffer+1236
0x4870	0x00000000 ;?ICS_ucUSART1RXBuffer+1240
0x4874	0x00000000 ;?ICS_ucUSART1RXBuffer+1244
0x4878	0x00000000 ;?ICS_ucUSART1RXBuffer+1248
0x487C	0x00000000 ;?ICS_ucUSART1RXBuffer+1252
0x4880	0x00000000 ;?ICS_ucUSART1RXBuffer+1256
0x4884	0x00000000 ;?ICS_ucUSART1RXBuffer+1260
0x4888	0x00000000 ;?ICS_ucUSART1RXBuffer+1264
0x488C	0x00000000 ;?ICS_ucUSART1RXBuffer+1268
0x4890	0x00000000 ;?ICS_ucUSART1RXBuffer+1272
0x4894	0x00000000 ;?ICS_ucUSART1RXBuffer+1276
0x4898	0x00000000 ;?ICS_ucUSART1RXBuffer+1280
0x489C	0x00000000 ;?ICS_ucUSART1RXBuffer+1284
0x48A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1288
0x48A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1292
0x48A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1296
0x48AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1300
0x48B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1304
0x48B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1308
0x48B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1312
0x48BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1316
0x48C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1320
0x48C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1324
0x48C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1328
0x48CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1332
0x48D0	0x00000000 ;?ICS_ucUSART1RXBuffer+1336
0x48D4	0x00000000 ;?ICS_ucUSART1RXBuffer+1340
0x48D8	0x00000000 ;?ICS_ucUSART1RXBuffer+1344
0x48DC	0x00000000 ;?ICS_ucUSART1RXBuffer+1348
0x48E0	0x00000000 ;?ICS_ucUSART1RXBuffer+1352
0x48E4	0x00000000 ;?ICS_ucUSART1RXBuffer+1356
0x48E8	0x00000000 ;?ICS_ucUSART1RXBuffer+1360
0x48EC	0x00000000 ;?ICS_ucUSART1RXBuffer+1364
0x48F0	0x00000000 ;?ICS_ucUSART1RXBuffer+1368
0x48F4	0x00000000 ;?ICS_ucUSART1RXBuffer+1372
0x48F8	0x00000000 ;?ICS_ucUSART1RXBuffer+1376
0x48FC	0x00000000 ;?ICS_ucUSART1RXBuffer+1380
0x4900	0x00000000 ;?ICS_ucUSART1RXBuffer+1384
0x4904	0x00000000 ;?ICS_ucUSART1RXBuffer+1388
0x4908	0x00000000 ;?ICS_ucUSART1RXBuffer+1392
0x490C	0x00000000 ;?ICS_ucUSART1RXBuffer+1396
0x4910	0x00000000 ;?ICS_ucUSART1RXBuffer+1400
0x4914	0x00000000 ;?ICS_ucUSART1RXBuffer+1404
0x4918	0x00000000 ;?ICS_ucUSART1RXBuffer+1408
0x491C	0x00000000 ;?ICS_ucUSART1RXBuffer+1412
0x4920	0x00000000 ;?ICS_ucUSART1RXBuffer+1416
0x4924	0x00000000 ;?ICS_ucUSART1RXBuffer+1420
0x4928	0x00000000 ;?ICS_ucUSART1RXBuffer+1424
0x492C	0x00000000 ;?ICS_ucUSART1RXBuffer+1428
0x4930	0x00000000 ;?ICS_ucUSART1RXBuffer+1432
0x4934	0x00000000 ;?ICS_ucUSART1RXBuffer+1436
0x4938	0x00000000 ;?ICS_ucUSART1RXBuffer+1440
0x493C	0x00000000 ;?ICS_ucUSART1RXBuffer+1444
0x4940	0x00000000 ;?ICS_ucUSART1RXBuffer+1448
0x4944	0x00000000 ;?ICS_ucUSART1RXBuffer+1452
0x4948	0x00000000 ;?ICS_ucUSART1RXBuffer+1456
0x494C	0x00000000 ;?ICS_ucUSART1RXBuffer+1460
0x4950	0x00000000 ;?ICS_ucUSART1RXBuffer+1464
0x4954	0x00000000 ;?ICS_ucUSART1RXBuffer+1468
0x4958	0x00000000 ;?ICS_ucUSART1RXBuffer+1472
0x495C	0x00000000 ;?ICS_ucUSART1RXBuffer+1476
0x4960	0x00000000 ;?ICS_ucUSART1RXBuffer+1480
0x4964	0x00000000 ;?ICS_ucUSART1RXBuffer+1484
0x4968	0x00000000 ;?ICS_ucUSART1RXBuffer+1488
0x496C	0x00000000 ;?ICS_ucUSART1RXBuffer+1492
0x4970	0x00000000 ;?ICS_ucUSART1RXBuffer+1496
0x4974	0x00000000 ;?ICS_ucUSART1RXBuffer+1500
0x4978	0x00000000 ;?ICS_ucUSART1RXBuffer+1504
0x497C	0x00000000 ;?ICS_ucUSART1RXBuffer+1508
0x4980	0x00000000 ;?ICS_ucUSART1RXBuffer+1512
0x4984	0x00000000 ;?ICS_ucUSART1RXBuffer+1516
0x4988	0x00000000 ;?ICS_ucUSART1RXBuffer+1520
0x498C	0x00000000 ;?ICS_ucUSART1RXBuffer+1524
0x4990	0x00000000 ;?ICS_ucUSART1RXBuffer+1528
0x4994	0x00000000 ;?ICS_ucUSART1RXBuffer+1532
0x4998	0x00000000 ;?ICS_ucUSART1RXBuffer+1536
0x499C	0x00000000 ;?ICS_ucUSART1RXBuffer+1540
0x49A0	0x00000000 ;?ICS_ucUSART1RXBuffer+1544
0x49A4	0x00000000 ;?ICS_ucUSART1RXBuffer+1548
0x49A8	0x00000000 ;?ICS_ucUSART1RXBuffer+1552
0x49AC	0x00000000 ;?ICS_ucUSART1RXBuffer+1556
0x49B0	0x00000000 ;?ICS_ucUSART1RXBuffer+1560
0x49B4	0x00000000 ;?ICS_ucUSART1RXBuffer+1564
0x49B8	0x00000000 ;?ICS_ucUSART1RXBuffer+1568
0x49BC	0x00000000 ;?ICS_ucUSART1RXBuffer+1572
0x49C0	0x00000000 ;?ICS_ucUSART1RXBuffer+1576
0x49C4	0x00000000 ;?ICS_ucUSART1RXBuffer+1580
0x49C8	0x00000000 ;?ICS_ucUSART1RXBuffer+1584
0x49CC	0x00000000 ;?ICS_ucUSART1RXBuffer+1588
0x49D0	0x00000000 ;?ICS_ucUSART1RXBuffer+1592
0x49D4	0x00000000 ;?ICS_ucUSART1RXBuffer+1596
0x49D8	0x00000000 ;?ICS_ucUSART1RXBuffer+1600
0x49DC	0x00000000 ;?ICS_ucUSART1RXBuffer+1604
0x49E0	0x00000000 ;?ICS_ucUSART1RXBuffer+1608
0x49E4	0x00000000 ;?ICS_ucUSART1RXBuffer+1612
0x49E8	0x00000000 ;?ICS_ucUSART1RXBuffer+1616
0x49EC	0x00000000 ;?ICS_ucUSART1RXBuffer+1620
0x49F0	0x00000000 ;?ICS_ucUSART1RXBuffer+1624
0x49F4	0x00000000 ;?ICS_ucUSART1RXBuffer+1628
0x49F8	0x00000000 ;?ICS_ucUSART1RXBuffer+1632
0x49FC	0x00000000 ;?ICS_ucUSART1RXBuffer+1636
0x4A00	0x00000000 ;?ICS_ucUSART1RXBuffer+1640
0x4A04	0x00000000 ;?ICS_ucUSART1RXBuffer+1644
0x4A08	0x00000000 ;?ICS_ucUSART1RXBuffer+1648
0x4A0C	0x00000000 ;?ICS_ucUSART1RXBuffer+1652
0x4A10	0x00000000 ;?ICS_ucUSART1RXBuffer+1656
0x4A14	0x00000000 ;?ICS_ucUSART1RXBuffer+1660
0x4A18	0x00000000 ;?ICS_ucUSART1RXBuffer+1664
0x4A1C	0x00000000 ;?ICS_ucUSART1RXBuffer+1668
0x4A20	0x00000000 ;?ICS_ucUSART1RXBuffer+1672
0x4A24	0x00000000 ;?ICS_ucUSART1RXBuffer+1676
0x4A28	0x00000000 ;?ICS_ucUSART1RXBuffer+1680
0x4A2C	0x00000000 ;?ICS_ucUSART1RXBuffer+1684
0x4A30	0x00000000 ;?ICS_ucUSART1RXBuffer+1688
0x4A34	0x00000000 ;?ICS_ucUSART1RXBuffer+1692
0x4A38	0x00000000 ;?ICS_ucUSART1RXBuffer+1696
0x4A3C	0x00000000 ;?ICS_ucUSART1RXBuffer+1700
0x4A40	0x00000000 ;?ICS_ucUSART1RXBuffer+1704
0x4A44	0x00000000 ;?ICS_ucUSART1RXBuffer+1708
0x4A48	0x00000000 ;?ICS_ucUSART1RXBuffer+1712
0x4A4C	0x00000000 ;?ICS_ucUSART1RXBuffer+1716
0x4A50	0x00000000 ;?ICS_ucUSART1RXBuffer+1720
0x4A54	0x00000000 ;?ICS_ucUSART1RXBuffer+1724
0x4A58	0x00000000 ;?ICS_ucUSART1RXBuffer+1728
0x4A5C	0x00000000 ;?ICS_ucUSART1RXBuffer+1732
0x4A60	0x00000000 ;?ICS_ucUSART1RXBuffer+1736
0x4A64	0x00000000 ;?ICS_ucUSART1RXBuffer+1740
0x4A68	0x00000000 ;?ICS_ucUSART1RXBuffer+1744
0x4A6C	0x00000000 ;?ICS_ucUSART1RXBuffer+1748
0x4A70	0x00000000 ;?ICS_ucUSART1RXBuffer+1752
0x4A74	0x00000000 ;?ICS_ucUSART1RXBuffer+1756
0x4A78	0x00000000 ;?ICS_ucUSART1RXBuffer+1760
0x4A7C	0x00000000 ;?ICS_ucUSART1RXBuffer+1764
0x4A80	0x00000000 ;?ICS_ucUSART1RXBuffer+1768
0x4A84	0x00000000 ;?ICS_ucUSART1RXBuffer+1772
0x4A88	0x00000000 ;?ICS_ucUSART1RXBuffer+1776
0x4A8C	0x00000000 ;?ICS_ucUSART1RXBuffer+1780
0x4A90	0x00000000 ;?ICS_ucUSART1RXBuffer+1784
0x4A94	0x00000000 ;?ICS_ucUSART1RXBuffer+1788
0x4A98	0x00000000 ;?ICS_ucUSART1RXBuffer+1792
0x4A9C	0x00000000 ;?ICS_ucUSART1RXBuffer+1796
0x4AA0	0x00000000 ;?ICS_ucUSART1RXBuffer+1800
0x4AA4	0x00000000 ;?ICS_ucUSART1RXBuffer+1804
0x4AA8	0x00000000 ;?ICS_ucUSART1RXBuffer+1808
0x4AAC	0x00000000 ;?ICS_ucUSART1RXBuffer+1812
0x4AB0	0x00000000 ;?ICS_ucUSART1RXBuffer+1816
0x4AB4	0x00000000 ;?ICS_ucUSART1RXBuffer+1820
0x4AB8	0x00000000 ;?ICS_ucUSART1RXBuffer+1824
0x4ABC	0x00000000 ;?ICS_ucUSART1RXBuffer+1828
0x4AC0	0x00000000 ;?ICS_ucUSART1RXBuffer+1832
0x4AC4	0x00000000 ;?ICS_ucUSART1RXBuffer+1836
0x4AC8	0x00000000 ;?ICS_ucUSART1RXBuffer+1840
0x4ACC	0x00000000 ;?ICS_ucUSART1RXBuffer+1844
0x4AD0	0x00000000 ;?ICS_ucUSART1RXBuffer+1848
0x4AD4	0x00000000 ;?ICS_ucUSART1RXBuffer+1852
0x4AD8	0x00000000 ;?ICS_ucUSART1RXBuffer+1856
0x4ADC	0x00000000 ;?ICS_ucUSART1RXBuffer+1860
0x4AE0	0x00000000 ;?ICS_ucUSART1RXBuffer+1864
0x4AE4	0x00000000 ;?ICS_ucUSART1RXBuffer+1868
0x4AE8	0x00000000 ;?ICS_ucUSART1RXBuffer+1872
0x4AEC	0x00000000 ;?ICS_ucUSART1RXBuffer+1876
0x4AF0	0x00000000 ;?ICS_ucUSART1RXBuffer+1880
0x4AF4	0x00000000 ;?ICS_ucUSART1RXBuffer+1884
0x4AF8	0x00000000 ;?ICS_ucUSART1RXBuffer+1888
0x4AFC	0x00000000 ;?ICS_ucUSART1RXBuffer+1892
0x4B00	0x00000000 ;?ICS_ucUSART1RXBuffer+1896
0x4B04	0x00000000 ;?ICS_ucUSART1RXBuffer+1900
0x4B08	0x00000000 ;?ICS_ucUSART1RXBuffer+1904
0x4B0C	0x00000000 ;?ICS_ucUSART1RXBuffer+1908
0x4B10	0x00000000 ;?ICS_ucUSART1RXBuffer+1912
0x4B14	0x00000000 ;?ICS_ucUSART1RXBuffer+1916
0x4B18	0x00000000 ;?ICS_ucUSART1RXBuffer+1920
0x4B1C	0x00000000 ;?ICS_ucUSART1RXBuffer+1924
0x4B20	0x00000000 ;?ICS_ucUSART1RXBuffer+1928
0x4B24	0x00000000 ;?ICS_ucUSART1RXBuffer+1932
0x4B28	0x00000000 ;?ICS_ucUSART1RXBuffer+1936
0x4B2C	0x00000000 ;?ICS_ucUSART1RXBuffer+1940
0x4B30	0x00000000 ;?ICS_ucUSART1RXBuffer+1944
0x4B34	0x00000000 ;?ICS_ucUSART1RXBuffer+1948
0x4B38	0x00000000 ;?ICS_ucUSART1RXBuffer+1952
0x4B3C	0x00000000 ;?ICS_ucUSART1RXBuffer+1956
0x4B40	0x00000000 ;?ICS_ucUSART1RXBuffer+1960
0x4B44	0x00000000 ;?ICS_ucUSART1RXBuffer+1964
0x4B48	0x00000000 ;?ICS_ucUSART1RXBuffer+1968
0x4B4C	0x00000000 ;?ICS_ucUSART1RXBuffer+1972
0x4B50	0x00000000 ;?ICS_ucUSART1RXBuffer+1976
0x4B54	0x00000000 ;?ICS_ucUSART1RXBuffer+1980
0x4B58	0x00000000 ;?ICS_ucUSART1RXBuffer+1984
0x4B5C	0x00000000 ;?ICS_ucUSART1RXBuffer+1988
0x4B60	0x00000000 ;?ICS_ucUSART1RXBuffer+1992
0x4B64	0x00000000 ;?ICS_ucUSART1RXBuffer+1996
0x4B68	0x00000000 ;?ICS_ucUSART1RXBuffer+2000
0x4B6C	0x00000000 ;?ICS_ucUSART1RXBuffer+2004
0x4B70	0x00000000 ;?ICS_ucUSART1RXBuffer+2008
0x4B74	0x00000000 ;?ICS_ucUSART1RXBuffer+2012
0x4B78	0x00000000 ;?ICS_ucUSART1RXBuffer+2016
0x4B7C	0x00000000 ;?ICS_ucUSART1RXBuffer+2020
0x4B80	0x00000000 ;?ICS_ucUSART1RXBuffer+2024
0x4B84	0x00000000 ;?ICS_ucUSART1RXBuffer+2028
0x4B88	0x00000000 ;?ICS_ucUSART1RXBuffer+2032
0x4B8C	0x00000000 ;?ICS_ucUSART1RXBuffer+2036
0x4B90	0x00000000 ;?ICS_ucUSART1RXBuffer+2040
0x4B94	0x00000000 ;?ICS_ucUSART1RXBuffer+2044
0x4B98	0x00000000 ;?ICS_ucUSART1RXBuffer+2048
0x4B9C	0x00000000 ;?ICS_ucUSART1RXBuffer+2052
0x4BA0	0x00000000 ;?ICS_ucUSART1RXBuffer+2056
0x4BA4	0x00000000 ;?ICS_ucUSART1RXBuffer+2060
0x4BA8	0x00000000 ;?ICS_ucUSART1RXBuffer+2064
0x4BAC	0x00000000 ;?ICS_ucUSART1RXBuffer+2068
0x4BB0	0x00000000 ;?ICS_ucUSART1RXBuffer+2072
0x4BB4	0x00000000 ;?ICS_ucUSART1RXBuffer+2076
0x4BB8	0x00000000 ;?ICS_ucUSART1RXBuffer+2080
0x4BBC	0x00000000 ;?ICS_ucUSART1RXBuffer+2084
0x4BC0	0x00000000 ;?ICS_ucUSART1RXBuffer+2088
0x4BC4	0x00000000 ;?ICS_ucUSART1RXBuffer+2092
0x4BC8	0x00000000 ;?ICS_ucUSART1RXBuffer+2096
0x4BCC	0x00000000 ;?ICS_ucUSART1RXBuffer+2100
0x4BD0	0x00000000 ;?ICS_ucUSART1RXBuffer+2104
0x4BD4	0x00000000 ;?ICS_ucUSART1RXBuffer+2108
0x4BD8	0x00000000 ;?ICS_ucUSART1RXBuffer+2112
0x4BDC	0x00000000 ;?ICS_ucUSART1RXBuffer+2116
0x4BE0	0x00000000 ;?ICS_ucUSART1RXBuffer+2120
0x4BE4	0x00000000 ;?ICS_ucUSART1RXBuffer+2124
0x4BE8	0x00000000 ;?ICS_ucUSART1RXBuffer+2128
0x4BEC	0x00000000 ;?ICS_ucUSART1RXBuffer+2132
0x4BF0	0x00000000 ;?ICS_ucUSART1RXBuffer+2136
0x4BF4	0x00000000 ;?ICS_ucUSART1RXBuffer+2140
0x4BF8	0x00000000 ;?ICS_ucUSART1RXBuffer+2144
0x4BFC	0x00000000 ;?ICS_ucUSART1RXBuffer+2148
0x4C00	0x00000000 ;?ICS_ucUSART1RXBuffer+2152
0x4C04	0x00000000 ;?ICS_ucUSART1RXBuffer+2156
0x4C08	0x00000000 ;?ICS_ucUSART1RXBuffer+2160
0x4C0C	0x00000000 ;?ICS_ucUSART1RXBuffer+2164
0x4C10	0x00000000 ;?ICS_ucUSART1RXBuffer+2168
0x4C14	0x00000000 ;?ICS_ucUSART1RXBuffer+2172
0x4C18	0x00000000 ;?ICS_ucUSART1RXBuffer+2176
0x4C1C	0x00000000 ;?ICS_ucUSART1RXBuffer+2180
0x4C20	0x00000000 ;?ICS_ucUSART1RXBuffer+2184
0x4C24	0x00000000 ;?ICS_ucUSART1RXBuffer+2188
0x4C28	0x00000000 ;?ICS_ucUSART1RXBuffer+2192
0x4C2C	0x00000000 ;?ICS_ucUSART1RXBuffer+2196
0x4C30	0x00000000 ;?ICS_ucUSART1RXBuffer+2200
0x4C34	0x00000000 ;?ICS_ucUSART1RXBuffer+2204
0x4C38	0x00000000 ;?ICS_ucUSART1RXBuffer+2208
0x4C3C	0x00000000 ;?ICS_ucUSART1RXBuffer+2212
0x4C40	0x00000000 ;?ICS_ucUSART1RXBuffer+2216
0x4C44	0x00000000 ;?ICS_ucUSART1RXBuffer+2220
0x4C48	0x00000000 ;?ICS_ucUSART1RXBuffer+2224
0x4C4C	0x00000000 ;?ICS_ucUSART1RXBuffer+2228
0x4C50	0x00000000 ;?ICS_ucUSART1RXBuffer+2232
0x4C54	0x00000000 ;?ICS_ucUSART1RXBuffer+2236
0x4C58	0x00000000 ;?ICS_ucUSART1RXBuffer+2240
0x4C5C	0x00000000 ;?ICS_ucUSART1RXBuffer+2244
0x4C60	0x00000000 ;?ICS_ucUSART1RXBuffer+2248
0x4C64	0x00000000 ;?ICS_ucUSART1RXBuffer+2252
0x4C68	0x00000000 ;?ICS_ucUSART1RXBuffer+2256
0x4C6C	0x00000000 ;?ICS_ucUSART1RXBuffer+2260
0x4C70	0x00000000 ;?ICS_ucUSART1RXBuffer+2264
0x4C74	0x00000000 ;?ICS_ucUSART1RXBuffer+2268
0x4C78	0x00000000 ;?ICS_ucUSART1RXBuffer+2272
0x4C7C	0x00000000 ;?ICS_ucUSART1RXBuffer+2276
0x4C80	0x00000000 ;?ICS_ucUSART1RXBuffer+2280
0x4C84	0x00000000 ;?ICS_ucUSART1RXBuffer+2284
0x4C88	0x00000000 ;?ICS_ucUSART1RXBuffer+2288
0x4C8C	0x00000000 ;?ICS_ucUSART1RXBuffer+2292
0x4C90	0x00000000 ;?ICS_ucUSART1RXBuffer+2296
0x4C94	0x00000000 ;?ICS_ucUSART1RXBuffer+2300
0x4C98	0x00000000 ;?ICS_ucUSART1RXBuffer+2304
0x4C9C	0x00000000 ;?ICS_ucUSART1RXBuffer+2308
0x4CA0	0x00000000 ;?ICS_ucUSART1RXBuffer+2312
0x4CA4	0x00000000 ;?ICS_ucUSART1RXBuffer+2316
0x4CA8	0x00000000 ;?ICS_ucUSART1RXBuffer+2320
0x4CAC	0x00000000 ;?ICS_ucUSART1RXBuffer+2324
0x4CB0	0x00000000 ;?ICS_ucUSART1RXBuffer+2328
0x4CB4	0x00000000 ;?ICS_ucUSART1RXBuffer+2332
0x4CB8	0x00000000 ;?ICS_ucUSART1RXBuffer+2336
0x4CBC	0x00000000 ;?ICS_ucUSART1RXBuffer+2340
0x4CC0	0x00000000 ;?ICS_ucUSART1RXBuffer+2344
0x4CC4	0x00000000 ;?ICS_ucUSART1RXBuffer+2348
0x4CC8	0x00000000 ;?ICS_ucUSART1RXBuffer+2352
0x4CCC	0x00000000 ;?ICS_ucUSART1RXBuffer+2356
0x4CD0	0x00000000 ;?ICS_ucUSART1RXBuffer+2360
0x4CD4	0x00000000 ;?ICS_ucUSART1RXBuffer+2364
0x4CD8	0x00000000 ;?ICS_ucUSART1RXBuffer+2368
0x4CDC	0x00000000 ;?ICS_ucUSART1RXBuffer+2372
0x4CE0	0x00000000 ;?ICS_ucUSART1RXBuffer+2376
0x4CE4	0x00000000 ;?ICS_ucUSART1RXBuffer+2380
0x4CE8	0x00000000 ;?ICS_ucUSART1RXBuffer+2384
0x4CEC	0x00000000 ;?ICS_ucUSART1RXBuffer+2388
0x4CF0	0x00000000 ;?ICS_ucUSART1RXBuffer+2392
0x4CF4	0x00000000 ;?ICS_ucUSART1RXBuffer+2396
0x4CF8	0x00000000 ;?ICS_ucUSART1RXBuffer+2400
0x4CFC	0x00000000 ;?ICS_ucUSART1RXBuffer+2404
0x4D00	0x00000000 ;?ICS_ucUSART1RXBuffer+2408
0x4D04	0x00000000 ;?ICS_ucUSART1RXBuffer+2412
0x4D08	0x00000000 ;?ICS_ucUSART1RXBuffer+2416
0x4D0C	0x00000000 ;?ICS_ucUSART1RXBuffer+2420
0x4D10	0x00000000 ;?ICS_ucUSART1RXBuffer+2424
0x4D14	0x00000000 ;?ICS_ucUSART1RXBuffer+2428
0x4D18	0x00000000 ;?ICS_ucUSART1RXBuffer+2432
0x4D1C	0x00000000 ;?ICS_ucUSART1RXBuffer+2436
0x4D20	0x00000000 ;?ICS_ucUSART1RXBuffer+2440
0x4D24	0x00000000 ;?ICS_ucUSART1RXBuffer+2444
0x4D28	0x00000000 ;?ICS_ucUSART1RXBuffer+2448
0x4D2C	0x00000000 ;?ICS_ucUSART1RXBuffer+2452
0x4D30	0x00000000 ;?ICS_ucUSART1RXBuffer+2456
0x4D34	0x00000000 ;?ICS_ucUSART1RXBuffer+2460
0x4D38	0x00000000 ;?ICS_ucUSART1RXBuffer+2464
0x4D3C	0x00000000 ;?ICS_ucUSART1RXBuffer+2468
0x4D40	0x00000000 ;?ICS_ucUSART1RXBuffer+2472
0x4D44	0x00000000 ;?ICS_ucUSART1RXBuffer+2476
0x4D48	0x00000000 ;?ICS_ucUSART1RXBuffer+2480
0x4D4C	0x00000000 ;?ICS_ucUSART1RXBuffer+2484
0x4D50	0x00000000 ;?ICS_ucUSART1RXBuffer+2488
0x4D54	0x00000000 ;?ICS_ucUSART1RXBuffer+2492
0x4D58	0x00000000 ;?ICS_ucUSART1RXBuffer+2496
0x4D5C	0x00000000 ;?ICS_ucUSART1RXBuffer+2500
0x4D60	0x00000000 ;?ICS_ucUSART1RXBuffer+2504
0x4D64	0x00000000 ;?ICS_ucUSART1RXBuffer+2508
0x4D68	0x00000000 ;?ICS_ucUSART1RXBuffer+2512
0x4D6C	0x00000000 ;?ICS_ucUSART1RXBuffer+2516
0x4D70	0x00000000 ;?ICS_ucUSART1RXBuffer+2520
0x4D74	0x00000000 ;?ICS_ucUSART1RXBuffer+2524
0x4D78	0x00000000 ;?ICS_ucUSART1RXBuffer+2528
0x4D7C	0x00000000 ;?ICS_ucUSART1RXBuffer+2532
0x4D80	0x00000000 ;?ICS_ucUSART1RXBuffer+2536
0x4D84	0x00000000 ;?ICS_ucUSART1RXBuffer+2540
0x4D88	0x00000000 ;?ICS_ucUSART1RXBuffer+2544
0x4D8C	0x00000000 ;?ICS_ucUSART1RXBuffer+2548
0x4D90	0x00000000 ;?ICS_ucUSART1RXBuffer+2552
0x4D94	0x00000000 ;?ICS_ucUSART1RXBuffer+2556
0x4D98	0x00000000 ;?ICS_ucUSART1RXBuffer+2560
0x4D9C	0x00000000 ;?ICS_ucUSART1RXBuffer+2564
0x4DA0	0x00000000 ;?ICS_ucUSART1RXBuffer+2568
0x4DA4	0x00000000 ;?ICS_ucUSART1RXBuffer+2572
0x4DA8	0x00000000 ;?ICS_ucUSART1RXBuffer+2576
0x4DAC	0x00000000 ;?ICS_ucUSART1RXBuffer+2580
0x4DB0	0x00000000 ;?ICS_ucUSART1RXBuffer+2584
0x4DB4	0x00000000 ;?ICS_ucUSART1RXBuffer+2588
0x4DB8	0x00000000 ;?ICS_ucUSART1RXBuffer+2592
0x4DBC	0x00000000 ;?ICS_ucUSART1RXBuffer+2596
0x4DC0	0x00000000 ;?ICS_ucUSART1RXBuffer+2600
0x4DC4	0x00000000 ;?ICS_ucUSART1RXBuffer+2604
0x4DC8	0x00000000 ;?ICS_ucUSART1RXBuffer+2608
0x4DCC	0x00000000 ;?ICS_ucUSART1RXBuffer+2612
0x4DD0	0x00000000 ;?ICS_ucUSART1RXBuffer+2616
0x4DD4	0x00000000 ;?ICS_ucUSART1RXBuffer+2620
0x4DD8	0x00000000 ;?ICS_ucUSART1RXBuffer+2624
0x4DDC	0x00000000 ;?ICS_ucUSART1RXBuffer+2628
0x4DE0	0x00000000 ;?ICS_ucUSART1RXBuffer+2632
0x4DE4	0x00000000 ;?ICS_ucUSART1RXBuffer+2636
0x4DE8	0x00000000 ;?ICS_ucUSART1RXBuffer+2640
0x4DEC	0x00000000 ;?ICS_ucUSART1RXBuffer+2644
0x4DF0	0x00000000 ;?ICS_ucUSART1RXBuffer+2648
0x4DF4	0x00000000 ;?ICS_ucUSART1RXBuffer+2652
0x4DF8	0x00000000 ;?ICS_ucUSART1RXBuffer+2656
0x4DFC	0x00000000 ;?ICS_ucUSART1RXBuffer+2660
0x4E00	0x00000000 ;?ICS_ucUSART1RXBuffer+2664
0x4E04	0x00000000 ;?ICS_ucUSART1RXBuffer+2668
0x4E08	0x00000000 ;?ICS_ucUSART1RXBuffer+2672
0x4E0C	0x00000000 ;?ICS_ucUSART1RXBuffer+2676
0x4E10	0x00000000 ;?ICS_ucUSART1RXBuffer+2680
0x4E14	0x00000000 ;?ICS_ucUSART1RXBuffer+2684
0x4E18	0x00000000 ;?ICS_ucUSART1RXBuffer+2688
0x4E1C	0x00000000 ;?ICS_ucUSART1RXBuffer+2692
0x4E20	0x00000000 ;?ICS_ucUSART1RXBuffer+2696
0x4E24	0x00000000 ;?ICS_ucUSART1RXBuffer+2700
0x4E28	0x00000000 ;?ICS_ucUSART1RXBuffer+2704
0x4E2C	0x00000000 ;?ICS_ucUSART1RXBuffer+2708
0x4E30	0x00000000 ;?ICS_ucUSART1RXBuffer+2712
0x4E34	0x00000000 ;?ICS_ucUSART1RXBuffer+2716
0x4E38	0x00000000 ;?ICS_ucUSART1RXBuffer+2720
0x4E3C	0x00000000 ;?ICS_ucUSART1RXBuffer+2724
0x4E40	0x00000000 ;?ICS_ucUSART1RXBuffer+2728
0x4E44	0x00000000 ;?ICS_ucUSART1RXBuffer+2732
0x4E48	0x00000000 ;?ICS_ucUSART1RXBuffer+2736
0x4E4C	0x00000000 ;?ICS_ucUSART1RXBuffer+2740
0x4E50	0x00000000 ;?ICS_ucUSART1RXBuffer+2744
0x4E54	0x00000000 ;?ICS_ucUSART1RXBuffer+2748
0x4E58	0x00000000 ;?ICS_ucUSART1RXBuffer+2752
0x4E5C	0x00000000 ;?ICS_ucUSART1RXBuffer+2756
0x4E60	0x00000000 ;?ICS_ucUSART1RXBuffer+2760
0x4E64	0x00000000 ;?ICS_ucUSART1RXBuffer+2764
0x4E68	0x00000000 ;?ICS_ucUSART1RXBuffer+2768
0x4E6C	0x00000000 ;?ICS_ucUSART1RXBuffer+2772
0x4E70	0x00000000 ;?ICS_ucUSART1RXBuffer+2776
0x4E74	0x00000000 ;?ICS_ucUSART1RXBuffer+2780
0x4E78	0x00000000 ;?ICS_ucUSART1RXBuffer+2784
0x4E7C	0x00000000 ;?ICS_ucUSART1RXBuffer+2788
0x4E80	0x00000000 ;?ICS_ucUSART1RXBuffer+2792
0x4E84	0x00000000 ;?ICS_ucUSART1RXBuffer+2796
0x4E88	0x00000000 ;?ICS_ucUSART1RXBuffer+2800
0x4E8C	0x00000000 ;?ICS_ucUSART1RXBuffer+2804
0x4E90	0x00000000 ;?ICS_ucUSART1RXBuffer+2808
0x4E94	0x00000000 ;?ICS_ucUSART1RXBuffer+2812
0x4E98	0x00000000 ;?ICS_ucUSART1RXBuffer+2816
0x4E9C	0x00000000 ;?ICS_ucUSART1RXBuffer+2820
0x4EA0	0x00000000 ;?ICS_ucUSART1RXBuffer+2824
0x4EA4	0x00000000 ;?ICS_ucUSART1RXBuffer+2828
0x4EA8	0x00000000 ;?ICS_ucUSART1RXBuffer+2832
0x4EAC	0x00000000 ;?ICS_ucUSART1RXBuffer+2836
0x4EB0	0x00000000 ;?ICS_ucUSART1RXBuffer+2840
0x4EB4	0x00000000 ;?ICS_ucUSART1RXBuffer+2844
0x4EB8	0x00000000 ;?ICS_ucUSART1RXBuffer+2848
0x4EBC	0x00000000 ;?ICS_ucUSART1RXBuffer+2852
0x4EC0	0x00000000 ;?ICS_ucUSART1RXBuffer+2856
0x4EC4	0x00000000 ;?ICS_ucUSART1RXBuffer+2860
0x4EC8	0x00000000 ;?ICS_ucUSART1RXBuffer+2864
0x4ECC	0x00000000 ;?ICS_ucUSART1RXBuffer+2868
0x4ED0	0x00000000 ;?ICS_ucUSART1RXBuffer+2872
0x4ED4	0x00000000 ;?ICS_ucUSART1RXBuffer+2876
0x4ED8	0x00000000 ;?ICS_ucUSART1RXBuffer+2880
0x4EDC	0x00000000 ;?ICS_ucUSART1RXBuffer+2884
0x4EE0	0x00000000 ;?ICS_ucUSART1RXBuffer+2888
0x4EE4	0x00000000 ;?ICS_ucUSART1RXBuffer+2892
0x4EE8	0x00000000 ;?ICS_ucUSART1RXBuffer+2896
0x4EEC	0x00000000 ;?ICS_ucUSART1RXBuffer+2900
0x4EF0	0x00000000 ;?ICS_ucUSART1RXBuffer+2904
0x4EF4	0x00000000 ;?ICS_ucUSART1RXBuffer+2908
0x4EF8	0x00000000 ;?ICS_ucUSART1RXBuffer+2912
0x4EFC	0x00000000 ;?ICS_ucUSART1RXBuffer+2916
0x4F00	0x00000000 ;?ICS_ucUSART1RXBuffer+2920
0x4F04	0x00000000 ;?ICS_ucUSART1RXBuffer+2924
0x4F08	0x00000000 ;?ICS_ucUSART1RXBuffer+2928
0x4F0C	0x00000000 ;?ICS_ucUSART1RXBuffer+2932
0x4F10	0x00000000 ;?ICS_ucUSART1RXBuffer+2936
0x4F14	0x00000000 ;?ICS_ucUSART1RXBuffer+2940
0x4F18	0x00000000 ;?ICS_ucUSART1RXBuffer+2944
0x4F1C	0x00000000 ;?ICS_ucUSART1RXBuffer+2948
0x4F20	0x00000000 ;?ICS_ucUSART1RXBuffer+2952
0x4F24	0x00000000 ;?ICS_ucUSART1RXBuffer+2956
0x4F28	0x00000000 ;?ICS_ucUSART1RXBuffer+2960
0x4F2C	0x00000000 ;?ICS_ucUSART1RXBuffer+2964
0x4F30	0x00000000 ;?ICS_ucUSART1RXBuffer+2968
0x4F34	0x00000000 ;?ICS_ucUSART1RXBuffer+2972
0x4F38	0x00000000 ;?ICS_ucUSART1RXBuffer+2976
0x4F3C	0x00000000 ;?ICS_ucUSART1RXBuffer+2980
0x4F40	0x00000000 ;?ICS_ucUSART1RXBuffer+2984
0x4F44	0x00000000 ;?ICS_ucUSART1RXBuffer+2988
0x4F48	0x00000000 ;?ICS_ucUSART1RXBuffer+2992
0x4F4C	0x00000000 ;?ICS_ucUSART1RXBuffer+2996
0x4F50	0x00000000 ;?ICS_ucUSART1RXBuffer+3000
0x4F54	0x00000000 ;?ICS_ucUSART1RXBuffer+3004
0x4F58	0x00000000 ;?ICS_ucUSART1RXBuffer+3008
0x4F5C	0x00000000 ;?ICS_ucUSART1RXBuffer+3012
0x4F60	0x00000000 ;?ICS_ucUSART1RXBuffer+3016
0x4F64	0x00000000 ;?ICS_ucUSART1RXBuffer+3020
0x4F68	0x00000000 ;?ICS_ucUSART1RXBuffer+3024
0x4F6C	0x00000000 ;?ICS_ucUSART1RXBuffer+3028
0x4F70	0x00000000 ;?ICS_ucUSART1RXBuffer+3032
0x4F74	0x00000000 ;?ICS_ucUSART1RXBuffer+3036
0x4F78	0x00000000 ;?ICS_ucUSART1RXBuffer+3040
0x4F7C	0x00000000 ;?ICS_ucUSART1RXBuffer+3044
0x4F80	0x00000000 ;?ICS_ucUSART1RXBuffer+3048
0x4F84	0x00000000 ;?ICS_ucUSART1RXBuffer+3052
0x4F88	0x00000000 ;?ICS_ucUSART1RXBuffer+3056
0x4F8C	0x00000000 ;?ICS_ucUSART1RXBuffer+3060
0x4F90	0x00000000 ;?ICS_ucUSART1RXBuffer+3064
0x4F94	0x00000000 ;?ICS_ucUSART1RXBuffer+3068
0x4F98	0x00000000 ;?ICS_ucUSART1RXBuffer+3072
0x4F9C	0x00000000 ;?ICS_ucUSART1RXBuffer+3076
0x4FA0	0x00000000 ;?ICS_ucUSART1RXBuffer+3080
0x4FA4	0x00000000 ;?ICS_ucUSART1RXBuffer+3084
0x4FA8	0x00000000 ;?ICS_ucUSART1RXBuffer+3088
0x4FAC	0x00000000 ;?ICS_ucUSART1RXBuffer+3092
0x4FB0	0x00000000 ;?ICS_ucUSART1RXBuffer+3096
0x4FB4	0x00000000 ;?ICS_ucUSART1RXBuffer+3100
0x4FB8	0x00000000 ;?ICS_ucUSART1RXBuffer+3104
0x4FBC	0x00000000 ;?ICS_ucUSART1RXBuffer+3108
0x4FC0	0x00000000 ;?ICS_ucUSART1RXBuffer+3112
0x4FC4	0x00000000 ;?ICS_ucUSART1RXBuffer+3116
0x4FC8	0x00000000 ;?ICS_ucUSART1RXBuffer+3120
0x4FCC	0x00000000 ;?ICS_ucUSART1RXBuffer+3124
0x4FD0	0x00000000 ;?ICS_ucUSART1RXBuffer+3128
0x4FD4	0x00000000 ;?ICS_ucUSART1RXBuffer+3132
0x4FD8	0x00000000 ;?ICS_ucUSART1RXBuffer+3136
0x4FDC	0x00000000 ;?ICS_ucUSART1RXBuffer+3140
0x4FE0	0x00000000 ;?ICS_ucUSART1RXBuffer+3144
0x4FE4	0x00000000 ;?ICS_ucUSART1RXBuffer+3148
0x4FE8	0x00000000 ;?ICS_ucUSART1RXBuffer+3152
0x4FEC	0x00000000 ;?ICS_ucUSART1RXBuffer+3156
0x4FF0	0x00000000 ;?ICS_ucUSART1RXBuffer+3160
0x4FF4	0x00000000 ;?ICS_ucUSART1RXBuffer+3164
0x4FF8	0x00000000 ;?ICS_ucUSART1RXBuffer+3168
0x4FFC	0x00000000 ;?ICS_ucUSART1RXBuffer+3172
0x5000	0x00000000 ;?ICS_ucUSART1RXBuffer+3176
0x5004	0x00000000 ;?ICS_ucUSART1RXBuffer+3180
0x5008	0x00000000 ;?ICS_ucUSART1RXBuffer+3184
0x500C	0x00000000 ;?ICS_ucUSART1RXBuffer+3188
0x5010	0x00000000 ;?ICS_ucUSART1RXBuffer+3192
0x5014	0x00000000 ;?ICS_ucUSART1RXBuffer+3196
0x5018	0x00000000 ;?ICS_ucUSART1RXBuffer+3200
0x501C	0x00000000 ;?ICS_ucUSART1RXBuffer+3204
0x5020	0x00000000 ;?ICS_ucUSART1RXBuffer+3208
0x5024	0x00000000 ;?ICS_ucUSART1RXBuffer+3212
0x5028	0x00000000 ;?ICS_ucUSART1RXBuffer+3216
0x502C	0x00000000 ;?ICS_ucUSART1RXBuffer+3220
0x5030	0x00000000 ;?ICS_ucUSART1RXBuffer+3224
0x5034	0x00000000 ;?ICS_ucUSART1RXBuffer+3228
0x5038	0x00000000 ;?ICS_ucUSART1RXBuffer+3232
0x503C	0x00000000 ;?ICS_ucUSART1RXBuffer+3236
0x5040	0x00000000 ;?ICS_ucUSART1RXBuffer+3240
0x5044	0x00000000 ;?ICS_ucUSART1RXBuffer+3244
0x5048	0x00000000 ;?ICS_ucUSART1RXBuffer+3248
0x504C	0x00000000 ;?ICS_ucUSART1RXBuffer+3252
0x5050	0x00000000 ;?ICS_ucUSART1RXBuffer+3256
0x5054	0x00000000 ;?ICS_ucUSART1RXBuffer+3260
0x5058	0x00000000 ;?ICS_ucUSART1RXBuffer+3264
0x505C	0x00000000 ;?ICS_ucUSART1RXBuffer+3268
0x5060	0x00000000 ;?ICS_ucUSART1RXBuffer+3272
0x5064	0x00000000 ;?ICS_ucUSART1RXBuffer+3276
0x5068	0x00000000 ;?ICS_ucUSART1RXBuffer+3280
0x506C	0x00000000 ;?ICS_ucUSART1RXBuffer+3284
0x5070	0x00000000 ;?ICS_ucUSART1RXBuffer+3288
0x5074	0x00000000 ;?ICS_ucUSART1RXBuffer+3292
0x5078	0x00000000 ;?ICS_ucUSART1RXBuffer+3296
0x507C	0x00000000 ;?ICS_ucUSART1RXBuffer+3300
0x5080	0x00000000 ;?ICS_ucUSART1RXBuffer+3304
0x5084	0x00000000 ;?ICS_ucUSART1RXBuffer+3308
0x5088	0x00000000 ;?ICS_ucUSART1RXBuffer+3312
0x508C	0x00000000 ;?ICS_ucUSART1RXBuffer+3316
0x5090	0x00000000 ;?ICS_ucUSART1RXBuffer+3320
0x5094	0x00000000 ;?ICS_ucUSART1RXBuffer+3324
0x5098	0x00000000 ;?ICS_ucUSART1RXBuffer+3328
0x509C	0x00000000 ;?ICS_ucUSART1RXBuffer+3332
0x50A0	0x00000000 ;?ICS_ucUSART1RXBuffer+3336
0x50A4	0x00000000 ;?ICS_ucUSART1RXBuffer+3340
0x50A8	0x00000000 ;?ICS_ucUSART1RXBuffer+3344
0x50AC	0x00000000 ;?ICS_ucUSART1RXBuffer+3348
0x50B0	0x00000000 ;?ICS_ucUSART1RXBuffer+3352
0x50B4	0x00000000 ;?ICS_ucUSART1RXBuffer+3356
0x50B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3360
0x50BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3364
0x50C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3368
0x50C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3372
0x50C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3376
0x50CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3380
0x50D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3384
0x50D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3388
0x50D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3392
0x50DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3396
0x50E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3400
0x50E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3404
0x50E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3408
0x50EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3412
0x50F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3416
0x50F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3420
0x50F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3424
0x50FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3428
0x5100	0x00000000 ;?ICS_ucUSART1RXBuffer+3432
0x5104	0x00000000 ;?ICS_ucUSART1RXBuffer+3436
0x5108	0x00000000 ;?ICS_ucUSART1RXBuffer+3440
0x510C	0x00000000 ;?ICS_ucUSART1RXBuffer+3444
0x5110	0x00000000 ;?ICS_ucUSART1RXBuffer+3448
0x5114	0x00000000 ;?ICS_ucUSART1RXBuffer+3452
0x5118	0x00000000 ;?ICS_ucUSART1RXBuffer+3456
0x511C	0x00000000 ;?ICS_ucUSART1RXBuffer+3460
0x5120	0x00000000 ;?ICS_ucUSART1RXBuffer+3464
0x5124	0x00000000 ;?ICS_ucUSART1RXBuffer+3468
0x5128	0x00000000 ;?ICS_ucUSART1RXBuffer+3472
0x512C	0x00000000 ;?ICS_ucUSART1RXBuffer+3476
0x5130	0x00000000 ;?ICS_ucUSART1RXBuffer+3480
0x5134	0x00000000 ;?ICS_ucUSART1RXBuffer+3484
0x5138	0x00000000 ;?ICS_ucUSART1RXBuffer+3488
0x513C	0x00000000 ;?ICS_ucUSART1RXBuffer+3492
0x5140	0x00000000 ;?ICS_ucUSART1RXBuffer+3496
0x5144	0x00000000 ;?ICS_ucUSART1RXBuffer+3500
0x5148	0x00000000 ;?ICS_ucUSART1RXBuffer+3504
0x514C	0x00000000 ;?ICS_ucUSART1RXBuffer+3508
0x5150	0x00000000 ;?ICS_ucUSART1RXBuffer+3512
0x5154	0x00000000 ;?ICS_ucUSART1RXBuffer+3516
0x5158	0x00000000 ;?ICS_ucUSART1RXBuffer+3520
0x515C	0x00000000 ;?ICS_ucUSART1RXBuffer+3524
0x5160	0x00000000 ;?ICS_ucUSART1RXBuffer+3528
0x5164	0x00000000 ;?ICS_ucUSART1RXBuffer+3532
0x5168	0x00000000 ;?ICS_ucUSART1RXBuffer+3536
0x516C	0x00000000 ;?ICS_ucUSART1RXBuffer+3540
0x5170	0x00000000 ;?ICS_ucUSART1RXBuffer+3544
0x5174	0x00000000 ;?ICS_ucUSART1RXBuffer+3548
0x5178	0x00000000 ;?ICS_ucUSART1RXBuffer+3552
0x517C	0x00000000 ;?ICS_ucUSART1RXBuffer+3556
0x5180	0x00000000 ;?ICS_ucUSART1RXBuffer+3560
0x5184	0x00000000 ;?ICS_ucUSART1RXBuffer+3564
0x5188	0x00000000 ;?ICS_ucUSART1RXBuffer+3568
0x518C	0x00000000 ;?ICS_ucUSART1RXBuffer+3572
0x5190	0x00000000 ;?ICS_ucUSART1RXBuffer+3576
0x5194	0x00000000 ;?ICS_ucUSART1RXBuffer+3580
0x5198	0x00000000 ;?ICS_ucUSART1RXBuffer+3584
0x519C	0x00000000 ;?ICS_ucUSART1RXBuffer+3588
0x51A0	0x00000000 ;?ICS_ucUSART1RXBuffer+3592
0x51A4	0x00000000 ;?ICS_ucUSART1RXBuffer+3596
0x51A8	0x00000000 ;?ICS_ucUSART1RXBuffer+3600
0x51AC	0x00000000 ;?ICS_ucUSART1RXBuffer+3604
0x51B0	0x00000000 ;?ICS_ucUSART1RXBuffer+3608
0x51B4	0x00000000 ;?ICS_ucUSART1RXBuffer+3612
0x51B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3616
0x51BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3620
0x51C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3624
0x51C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3628
0x51C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3632
0x51CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3636
0x51D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3640
0x51D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3644
0x51D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3648
0x51DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3652
0x51E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3656
0x51E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3660
0x51E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3664
0x51EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3668
0x51F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3672
0x51F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3676
0x51F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3680
0x51FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3684
0x5200	0x00000000 ;?ICS_ucUSART1RXBuffer+3688
0x5204	0x00000000 ;?ICS_ucUSART1RXBuffer+3692
0x5208	0x00000000 ;?ICS_ucUSART1RXBuffer+3696
0x520C	0x00000000 ;?ICS_ucUSART1RXBuffer+3700
0x5210	0x00000000 ;?ICS_ucUSART1RXBuffer+3704
0x5214	0x00000000 ;?ICS_ucUSART1RXBuffer+3708
0x5218	0x00000000 ;?ICS_ucUSART1RXBuffer+3712
0x521C	0x00000000 ;?ICS_ucUSART1RXBuffer+3716
0x5220	0x00000000 ;?ICS_ucUSART1RXBuffer+3720
0x5224	0x00000000 ;?ICS_ucUSART1RXBuffer+3724
0x5228	0x00000000 ;?ICS_ucUSART1RXBuffer+3728
0x522C	0x00000000 ;?ICS_ucUSART1RXBuffer+3732
0x5230	0x00000000 ;?ICS_ucUSART1RXBuffer+3736
0x5234	0x00000000 ;?ICS_ucUSART1RXBuffer+3740
0x5238	0x00000000 ;?ICS_ucUSART1RXBuffer+3744
0x523C	0x00000000 ;?ICS_ucUSART1RXBuffer+3748
0x5240	0x00000000 ;?ICS_ucUSART1RXBuffer+3752
0x5244	0x00000000 ;?ICS_ucUSART1RXBuffer+3756
0x5248	0x00000000 ;?ICS_ucUSART1RXBuffer+3760
0x524C	0x00000000 ;?ICS_ucUSART1RXBuffer+3764
0x5250	0x00000000 ;?ICS_ucUSART1RXBuffer+3768
0x5254	0x00000000 ;?ICS_ucUSART1RXBuffer+3772
0x5258	0x00000000 ;?ICS_ucUSART1RXBuffer+3776
0x525C	0x00000000 ;?ICS_ucUSART1RXBuffer+3780
0x5260	0x00000000 ;?ICS_ucUSART1RXBuffer+3784
0x5264	0x00000000 ;?ICS_ucUSART1RXBuffer+3788
0x5268	0x00000000 ;?ICS_ucUSART1RXBuffer+3792
0x526C	0x00000000 ;?ICS_ucUSART1RXBuffer+3796
0x5270	0x00000000 ;?ICS_ucUSART1RXBuffer+3800
0x5274	0x00000000 ;?ICS_ucUSART1RXBuffer+3804
0x5278	0x00000000 ;?ICS_ucUSART1RXBuffer+3808
0x527C	0x00000000 ;?ICS_ucUSART1RXBuffer+3812
0x5280	0x00000000 ;?ICS_ucUSART1RXBuffer+3816
0x5284	0x00000000 ;?ICS_ucUSART1RXBuffer+3820
0x5288	0x00000000 ;?ICS_ucUSART1RXBuffer+3824
0x528C	0x00000000 ;?ICS_ucUSART1RXBuffer+3828
0x5290	0x00000000 ;?ICS_ucUSART1RXBuffer+3832
0x5294	0x00000000 ;?ICS_ucUSART1RXBuffer+3836
0x5298	0x00000000 ;?ICS_ucUSART1RXBuffer+3840
0x529C	0x00000000 ;?ICS_ucUSART1RXBuffer+3844
0x52A0	0x00000000 ;?ICS_ucUSART1RXBuffer+3848
0x52A4	0x00000000 ;?ICS_ucUSART1RXBuffer+3852
0x52A8	0x00000000 ;?ICS_ucUSART1RXBuffer+3856
0x52AC	0x00000000 ;?ICS_ucUSART1RXBuffer+3860
0x52B0	0x00000000 ;?ICS_ucUSART1RXBuffer+3864
0x52B4	0x00000000 ;?ICS_ucUSART1RXBuffer+3868
0x52B8	0x00000000 ;?ICS_ucUSART1RXBuffer+3872
0x52BC	0x00000000 ;?ICS_ucUSART1RXBuffer+3876
0x52C0	0x00000000 ;?ICS_ucUSART1RXBuffer+3880
0x52C4	0x00000000 ;?ICS_ucUSART1RXBuffer+3884
0x52C8	0x00000000 ;?ICS_ucUSART1RXBuffer+3888
0x52CC	0x00000000 ;?ICS_ucUSART1RXBuffer+3892
0x52D0	0x00000000 ;?ICS_ucUSART1RXBuffer+3896
0x52D4	0x00000000 ;?ICS_ucUSART1RXBuffer+3900
0x52D8	0x00000000 ;?ICS_ucUSART1RXBuffer+3904
0x52DC	0x00000000 ;?ICS_ucUSART1RXBuffer+3908
0x52E0	0x00000000 ;?ICS_ucUSART1RXBuffer+3912
0x52E4	0x00000000 ;?ICS_ucUSART1RXBuffer+3916
0x52E8	0x00000000 ;?ICS_ucUSART1RXBuffer+3920
0x52EC	0x00000000 ;?ICS_ucUSART1RXBuffer+3924
0x52F0	0x00000000 ;?ICS_ucUSART1RXBuffer+3928
0x52F4	0x00000000 ;?ICS_ucUSART1RXBuffer+3932
0x52F8	0x00000000 ;?ICS_ucUSART1RXBuffer+3936
0x52FC	0x00000000 ;?ICS_ucUSART1RXBuffer+3940
0x5300	0x00000000 ;?ICS_ucUSART1RXBuffer+3944
0x5304	0x00000000 ;?ICS_ucUSART1RXBuffer+3948
0x5308	0x00000000 ;?ICS_ucUSART1RXBuffer+3952
0x530C	0x00000000 ;?ICS_ucUSART1RXBuffer+3956
0x5310	0x00000000 ;?ICS_ucUSART1RXBuffer+3960
0x5314	0x00000000 ;?ICS_ucUSART1RXBuffer+3964
0x5318	0x00000000 ;?ICS_ucUSART1RXBuffer+3968
0x531C	0x00000000 ;?ICS_ucUSART1RXBuffer+3972
0x5320	0x00000000 ;?ICS_ucUSART1RXBuffer+3976
0x5324	0x00000000 ;?ICS_ucUSART1RXBuffer+3980
0x5328	0x00000000 ;?ICS_ucUSART1RXBuffer+3984
0x532C	0x00000000 ;?ICS_ucUSART1RXBuffer+3988
0x5330	0x00000000 ;?ICS_ucUSART1RXBuffer+3992
0x5334	0x00000000 ;?ICS_ucUSART1RXBuffer+3996
0x5338	0x00000000 ;?ICS_ucUSART1RXBuffer+4000
0x533C	0x00000000 ;?ICS_ucUSART1RXBuffer+4004
0x5340	0x00000000 ;?ICS_ucUSART1RXBuffer+4008
0x5344	0x00000000 ;?ICS_ucUSART1RXBuffer+4012
0x5348	0x00000000 ;?ICS_ucUSART1RXBuffer+4016
0x534C	0x00000000 ;?ICS_ucUSART1RXBuffer+4020
0x5350	0x00000000 ;?ICS_ucUSART1RXBuffer+4024
0x5354	0x00000000 ;?ICS_ucUSART1RXBuffer+4028
0x5358	0x00000000 ;?ICS_ucUSART1RXBuffer+4032
0x535C	0x00000000 ;?ICS_ucUSART1RXBuffer+4036
0x5360	0x00000000 ;?ICS_ucUSART1RXBuffer+4040
0x5364	0x00000000 ;?ICS_ucUSART1RXBuffer+4044
0x5368	0x00000000 ;?ICS_ucUSART1RXBuffer+4048
0x536C	0x00000000 ;?ICS_ucUSART1RXBuffer+4052
0x5370	0x00000000 ;?ICS_ucUSART1RXBuffer+4056
0x5374	0x00000000 ;?ICS_ucUSART1RXBuffer+4060
0x5378	0x00000000 ;?ICS_ucUSART1RXBuffer+4064
0x537C	0x00000000 ;?ICS_ucUSART1RXBuffer+4068
0x5380	0x00000000 ;?ICS_ucUSART1RXBuffer+4072
0x5384	0x00000000 ;?ICS_ucUSART1RXBuffer+4076
0x5388	0x00000000 ;?ICS_ucUSART1RXBuffer+4080
0x538C	0x00000000 ;?ICS_ucUSART1RXBuffer+4084
0x5390	0x00000000 ;?ICS_ucUSART1RXBuffer+4088
0x5394	0x00000000 ;?ICS_ucUSART1RXBuffer+4092
; end of ?ICS_ucUSART1RXBuffer
;DriverRF4463PROMain.c,0 :: ?ICS_ulUSART1ByteReceived [4]
0x5398	0x00000000 ;?ICS_ulUSART1ByteReceived+0
; end of ?ICS_ulUSART1ByteReceived
;DriverRF4463PROMain.c,0 :: ?ICS_fUSART1Buffer [4]
0x539C	0x00000000 ;?ICS_fUSART1Buffer+0
; end of ?ICS_fUSART1Buffer
;DriverRF4463PROMain.c,0 :: ?ICS_CMD_RADIO_POWER_SET [10]
0x53A0	0x5F544553 ;?ICS_CMD_RADIO_POWER_SET+0
0x53A4	0x45574F50 ;?ICS_CMD_RADIO_POWER_SET+4
0x53A8	0x0052 ;?ICS_CMD_RADIO_POWER_SET+8
; end of ?ICS_CMD_RADIO_POWER_SET
;DriverRF4463PROMain.c,0 :: ?ICS_ANS_COMMAND_VALUE_ACCEPTED [40]
0x53AA	0x4F43205B ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+0
0x53AE	0x4E414D4D ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+4
0x53B2	0x205D2044 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+8
0x53B6	0x554C4156 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+12
0x53BA	0x43412045 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+16
0x53BE	0x54504543 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+20
0x53C2	0x41204445 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+24
0x53C6	0x4120444E ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+28
0x53CA	0x494C5050 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+32
0x53CE	0x000D4445 ;?ICS_ANS_COMMAND_VALUE_ACCEPTED+36
; end of ?ICS_ANS_COMMAND_VALUE_ACCEPTED
;DriverRF4463PROMain.c,0 :: ?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE [32]
0x53D2	0x4F43205B ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+0
0x53D6	0x4E414D4D ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+4
0x53DA	0x205D2044 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+8
0x53DE	0x554C4156 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+12
0x53E2	0x554F2045 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+16
0x53E6	0x464F2054 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+20
0x53EA	0x4E415220 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+24
0x53EE	0x000D4547 ;?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE+28
; end of ?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE
;,0 :: _initBlock_8 [18]
; Containing: ?ICS_CMD_RADIO_BAND_SET [9]
;             ?ICS_CMD_RADIO_RATE_SET [9]
0x53F2	0x5F544553 ;_initBlock_8+0 : ?ICS_CMD_RADIO_BAND_SET at 0x53F2
0x53F6	0x444E4142 ;_initBlock_8+4
0x53FA	0x54455300 ;_initBlock_8+8 : ?ICS_CMD_RADIO_RATE_SET at 0x53FB
0x53FE	0x5441525F ;_initBlock_8+12
0x5402	0x0045 ;_initBlock_8+16
; end of _initBlock_8
;DriverRF4463PROMain.c,0 :: ?ICS_CMD_RADIO_CHANNEL_SET [12]
0x5404	0x5F544553 ;?ICS_CMD_RADIO_CHANNEL_SET+0
0x5408	0x4E414843 ;?ICS_CMD_RADIO_CHANNEL_SET+4
0x540C	0x004C454E ;?ICS_CMD_RADIO_CHANNEL_SET+8
; end of ?ICS_CMD_RADIO_CHANNEL_SET
;,0 :: _initBlock_10 [8]
; Containing: ?ICS_ucRF4463FreqChannel [1]
;             ?ICS_CMD_RADIO_BW_SET [7]
0x5410	0x54455301 ;_initBlock_10+0 : ?ICS_ucRF4463FreqChannel at 0x5410 : ?ICS_CMD_RADIO_BW_SET at 0x5411
0x5414	0x0057425F ;_initBlock_10+4
; end of _initBlock_10
;DriverRF4463PROMain.c,0 :: ?ICS_ulRF4463Step [4]
0x5418	0x000000FA ;?ICS_ulRF4463Step+0
; end of ?ICS_ulRF4463Step
;,0 :: _initBlock_12 [10]
; Containing: ?ICS_CMD_RADIO_MODE_SET [9]
;             ?ICS_ucUSARTNull [1]
0x541C	0x5F544553 ;_initBlock_12+0 : ?ICS_CMD_RADIO_MODE_SET at 0x541C
0x5420	0x45444F4D ;_initBlock_12+4
0x5424	0x0000 ;_initBlock_12+8 : ?ICS_ucUSARTNull at 0x5425
; end of _initBlock_12
;,0 :: _initBlock_13 [178]
; Containing: ?ICS_ARG_RADIO_MODE_STBY [5]
;             ?ICS_ANS_COMMAND_MODE_STBY [34]
;             ?ICS_ARG_RADIO_MODE_TX_CONT [8]
;             ?ICS_ANS_COMMAND_MODE_TX_CONT [34]
;             ?ICS_ARG_RADIO_MODE_RX_CONT [8]
;             ?ICS_ANS_COMMAND_MODE_RX_CONT [34]
;             ?ICS_ARG_RADIO_MODE_TX_MASTER [10]
;             ?ICS_ANS_COMMAND_MODE_TX_MASTER [36]
;             ?ICS_ARG_RADIO_MODE_RX_SLAVE [9]
0x5426	0x59425453 ;_initBlock_13+0 : ?ICS_ARG_RADIO_MODE_STBY at 0x5426
0x542A	0x43205B00 ;_initBlock_13+4 : ?ICS_ANS_COMMAND_MODE_STBY at 0x542B
0x542E	0x414D4D4F ;_initBlock_13+8
0x5432	0x5D20444E ;_initBlock_13+12
0x5436	0x444F4D20 ;_initBlock_13+16
0x543A	0x43412045 ;_initBlock_13+20
0x543E	0x45564954 ;_initBlock_13+24
0x5442	0x5453203A ;_initBlock_13+28
0x5446	0x42444E41 ;_initBlock_13+32
0x544A	0x54000D59 ;_initBlock_13+36 : ?ICS_ARG_RADIO_MODE_TX_CONT at 0x544D
0x544E	0x4F435F58 ;_initBlock_13+40
0x5452	0x5B00544E ;_initBlock_13+44 : ?ICS_ANS_COMMAND_MODE_TX_CONT at 0x5455
0x5456	0x4D4F4320 ;_initBlock_13+48
0x545A	0x444E414D ;_initBlock_13+52
0x545E	0x4D205D20 ;_initBlock_13+56
0x5462	0x2045444F ;_initBlock_13+60
0x5466	0x49544341 ;_initBlock_13+64
0x546A	0x203A4556 ;_initBlock_13+68
0x546E	0x43205854 ;_initBlock_13+72
0x5472	0x0D544E4F ;_initBlock_13+76
0x5476	0x5F585200 ;_initBlock_13+80 : ?ICS_ARG_RADIO_MODE_RX_CONT at 0x5477
0x547A	0x544E4F43 ;_initBlock_13+84
0x547E	0x43205B00 ;_initBlock_13+88 : ?ICS_ANS_COMMAND_MODE_RX_CONT at 0x547F
0x5482	0x414D4D4F ;_initBlock_13+92
0x5486	0x5D20444E ;_initBlock_13+96
0x548A	0x444F4D20 ;_initBlock_13+100
0x548E	0x43412045 ;_initBlock_13+104
0x5492	0x45564954 ;_initBlock_13+108
0x5496	0x5852203A ;_initBlock_13+112
0x549A	0x4E4F4320 ;_initBlock_13+116
0x549E	0x54000D54 ;_initBlock_13+120 : ?ICS_ARG_RADIO_MODE_TX_MASTER at 0x54A1
0x54A2	0x414D5F58 ;_initBlock_13+124
0x54A6	0x52455453 ;_initBlock_13+128
0x54AA	0x43205B00 ;_initBlock_13+132 : ?ICS_ANS_COMMAND_MODE_TX_MASTER at 0x54AB
0x54AE	0x414D4D4F ;_initBlock_13+136
0x54B2	0x5D20444E ;_initBlock_13+140
0x54B6	0x444F4D20 ;_initBlock_13+144
0x54BA	0x43412045 ;_initBlock_13+148
0x54BE	0x45564954 ;_initBlock_13+152
0x54C2	0x5854203A ;_initBlock_13+156
0x54C6	0x53414D20 ;_initBlock_13+160
0x54CA	0x0D524554 ;_initBlock_13+164
0x54CE	0x5F585200 ;_initBlock_13+168 : ?ICS_ARG_RADIO_MODE_RX_SLAVE at 0x54CF
0x54D2	0x56414C53 ;_initBlock_13+172
0x54D6	0x0045 ;_initBlock_13+176
; end of _initBlock_13
;,0 :: _initBlock_14 [60]
; Containing: ?ICS_ANS_COMMAND_MODE_RX_SLAVE [35]
;             ?ICS_CMD_RADIO_PACKET_SEND [12]
;             ?ICS_CMD_RADIO_MATCH_BYTE_1_SET [12]
;             ?ICS_ucRF4463ByteMatch1 [1]
0x54D8	0x4F43205B ;_initBlock_14+0 : ?ICS_ANS_COMMAND_MODE_RX_SLAVE at 0x54D8
0x54DC	0x4E414D4D ;_initBlock_14+4
0x54E0	0x205D2044 ;_initBlock_14+8
0x54E4	0x45444F4D ;_initBlock_14+12
0x54E8	0x54434120 ;_initBlock_14+16
0x54EC	0x3A455649 ;_initBlock_14+20
0x54F0	0x20585220 ;_initBlock_14+24
0x54F4	0x56414C53 ;_initBlock_14+28
0x54F8	0x53000D45 ;_initBlock_14+32 : ?ICS_CMD_RADIO_PACKET_SEND at 0x54FB
0x54FC	0x5F444E45 ;_initBlock_14+36
0x5500	0x4B434150 ;_initBlock_14+40
0x5504	0x53005445 ;_initBlock_14+44 : ?ICS_CMD_RADIO_MATCH_BYTE_1_SET at 0x5507
0x5508	0x4D5F5445 ;_initBlock_14+48
0x550C	0x48435441 ;_initBlock_14+52
0x5510	0x0100315F ;_initBlock_14+56 : ?ICS_ucRF4463ByteMatch1 at 0x5513
; end of _initBlock_14
;,0 :: _initBlock_15 [2]
; Containing: ?ICS_ucRF4463MatchEnabled [1]
;             ?ICS_ucRF4463MatchEnableReg [1]
0x5514	0x4001 ;_initBlock_15+0 : ?ICS_ucRF4463MatchEnabled at 0x5514 : ?ICS_ucRF4463MatchEnableReg at 0x5515
; end of _initBlock_15
;DriverRF4463PROMain.c,0 :: ?ICS_CMD_RADIO_MATCH_BYTE_2_SET [12]
0x5516	0x5F544553 ;?ICS_CMD_RADIO_MATCH_BYTE_2_SET+0
0x551A	0x4354414D ;?ICS_CMD_RADIO_MATCH_BYTE_2_SET+4
0x551E	0x00325F48 ;?ICS_CMD_RADIO_MATCH_BYTE_2_SET+8
; end of ?ICS_CMD_RADIO_MATCH_BYTE_2_SET
;,0 :: _initBlock_17 [14]
; Containing: ?ICS_ucRF4463ByteMatch2 [1]
;             ?ICS_CMD_RADIO_MATCH_BYTE_3_SET [12]
;             ?ICS_ucRF4463ByteMatch3 [1]
0x5522	0x54455301 ;_initBlock_17+0 : ?ICS_ucRF4463ByteMatch2 at 0x5522 : ?ICS_CMD_RADIO_MATCH_BYTE_3_SET at 0x5523
0x5526	0x54414D5F ;_initBlock_17+4
0x552A	0x335F4843 ;_initBlock_17+8
0x552E	0x0100 ;_initBlock_17+12 : ?ICS_ucRF4463ByteMatch3 at 0x552F
; end of _initBlock_17
;DriverRF4463PROMain.c,0 :: ?ICS_CMD_RADIO_MATCH_BYTE_4_SET [12]
0x5530	0x5F544553 ;?ICS_CMD_RADIO_MATCH_BYTE_4_SET+0
0x5534	0x4354414D ;?ICS_CMD_RADIO_MATCH_BYTE_4_SET+4
0x5538	0x00345F48 ;?ICS_CMD_RADIO_MATCH_BYTE_4_SET+8
; end of ?ICS_CMD_RADIO_MATCH_BYTE_4_SET
;,0 :: _initBlock_19 [12]
; Containing: ?ICS_ucRF4463ByteMatch4 [1]
;             ?ICS_CMD_RADIO_MATCH_MASK_1_SET [11]
0x553C	0x54455301 ;_initBlock_19+0 : ?ICS_ucRF4463ByteMatch4 at 0x553C : ?ICS_CMD_RADIO_MATCH_MASK_1_SET at 0x553D
0x5540	0x53414D5F ;_initBlock_19+4
0x5544	0x00315F4B ;_initBlock_19+8
; end of _initBlock_19
;,0 :: _initBlock_20 [12]
; Containing: ?ICS_ucRF4463ByteMask1 [1]
;             ?ICS_CMD_RADIO_MATCH_MASK_2_SET [11]
0x5548	0x544553FF ;_initBlock_20+0 : ?ICS_ucRF4463ByteMask1 at 0x5548 : ?ICS_CMD_RADIO_MATCH_MASK_2_SET at 0x5549
0x554C	0x53414D5F ;_initBlock_20+4
0x5550	0x00325F4B ;_initBlock_20+8
; end of _initBlock_20
;,0 :: _initBlock_21 [12]
; Containing: ?ICS_ucRF4463ByteMask2 [1]
;             ?ICS_CMD_RADIO_MATCH_MASK_3_SET [11]
0x5554	0x544553FF ;_initBlock_21+0 : ?ICS_ucRF4463ByteMask2 at 0x5554 : ?ICS_CMD_RADIO_MATCH_MASK_3_SET at 0x5555
0x5558	0x53414D5F ;_initBlock_21+4
0x555C	0x00335F4B ;_initBlock_21+8
; end of _initBlock_21
;,0 :: _initBlock_22 [12]
; Containing: ?ICS_ucRF4463ByteMask3 [1]
;             ?ICS_CMD_RADIO_MATCH_MASK_4_SET [11]
0x5560	0x544553FF ;_initBlock_22+0 : ?ICS_ucRF4463ByteMask3 at 0x5560 : ?ICS_CMD_RADIO_MATCH_MASK_4_SET at 0x5561
0x5564	0x53414D5F ;_initBlock_22+4
0x5568	0x00345F4B ;_initBlock_22+8
; end of _initBlock_22
;,0 :: _initBlock_23 [36]
; Containing: ?ICS_ucRF4463ByteMask4 [1]
;             ?ICS_CMD_RADIO_MATCH_UNSET [12]
;             ?ICS_ANS_DEBUG_COMMAND_UNKNOWN [22]
;             ?ICSDriverRF4463PROMain_ucRF4463IRQ [1]
0x556C	0x534E55FF ;_initBlock_23+0 : ?ICS_ucRF4463ByteMask4 at 0x556C : ?ICS_CMD_RADIO_MATCH_UNSET at 0x556D
0x5570	0x4D5F5445 ;_initBlock_23+4
0x5574	0x48435441 ;_initBlock_23+8
0x5578	0x43205B00 ;_initBlock_23+12 : ?ICS_ANS_DEBUG_COMMAND_UNKNOWN at 0x5579
0x557C	0x414D4D4F ;_initBlock_23+16
0x5580	0x5D20444E ;_initBlock_23+20
0x5584	0x4B4E5520 ;_initBlock_23+24
0x5588	0x4E574F4E ;_initBlock_23+28
0x558C	0x0000203A ;_initBlock_23+32 : ?ICSDriverRF4463PROMain_ucRF4463IRQ at 0x558F
; end of _initBlock_23
;DriverRF4463PROMain.c,0 :: ?ICS_tx_cnt [4]
0x5590	0x00000000 ;?ICS_tx_cnt+0
; end of ?ICS_tx_cnt
;DriverRF4463PROMain.c,0 :: ?ICS_rx_cnt [4]
0x5594	0x00000000 ;?ICS_rx_cnt+0
; end of ?ICS_rx_cnt
;DriverRF4463PROMain.c,0 :: ?ICS_RF_MODEM_MOD_TYPE_12_data [16]
0x5598	0x000C2011 ;?ICS_RF_MODEM_MOD_TYPE_12_data+0
0x559C	0x00000000 ;?ICS_RF_MODEM_MOD_TYPE_12_data+4
0x55A0	0x00000000 ;?ICS_RF_MODEM_MOD_TYPE_12_data+8
0x55A4	0x00000000 ;?ICS_RF_MODEM_MOD_TYPE_12_data+12
; end of ?ICS_RF_MODEM_MOD_TYPE_12_data
;DriverRF4463PROMain.c,0 :: ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data [12]
0x55A8	0x18082011 ;?ICS_RF_MODEM_TX_RAMP_DELAY_8_data+0
0x55AC	0x00000000 ;?ICS_RF_MODEM_TX_RAMP_DELAY_8_data+4
0x55B0	0x00000000 ;?ICS_RF_MODEM_TX_RAMP_DELAY_8_data+8
; end of ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data
;,0 :: _initBlock_28 [28]
; Containing: ?ICS_RF_MODEM_AFC_GEAR_7_data [13]
;             ?ICS_RF_MODEM_OOK_CNT1_11_data [15]
0x55B4	0x2C072011 ;_initBlock_28+0 : ?ICS_RF_MODEM_AFC_GEAR_7_data at 0x55B4
0x55B8	0x00000000 ;_initBlock_28+4
0x55BC	0x00000000 ;_initBlock_28+8
0x55C0	0x0B201100 ;_initBlock_28+12 : ?ICS_RF_MODEM_OOK_CNT1_11_data at 0x55C1
0x55C4	0x00000042 ;_initBlock_28+16
0x55C8	0x00000000 ;_initBlock_28+20
0x55CC	0x00000000 ;_initBlock_28+24
; end of _initBlock_28
;DriverRF4463PROMain.c,0 :: ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data [16]
0x55D0	0x000C2111 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+0
0x55D4	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+4
0x55D8	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+8
0x55DC	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data+12
; end of ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data
;DriverRF4463PROMain.c,0 :: ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data [16]
0x55E0	0x0C0C2111 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+0
0x55E4	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+4
0x55E8	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+8
0x55EC	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data+12
; end of ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data
;DriverRF4463PROMain.c,0 :: ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data [16]
0x55F0	0x180C2111 ;?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+0
0x55F4	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+4
0x55F8	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+8
0x55FC	0x00000000 ;?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data+12
; end of ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data
;,0 :: _initBlock_32 [26]
; Containing: ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data [13]
;             ?ICS_RF_MODEM_BCR_OSR_1_9_data [13]
0x5600	0x38092011 ;_initBlock_32+0 : ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data at 0x5600
0x5604	0x00000000 ;_initBlock_32+4
0x5608	0x00000000 ;_initBlock_32+8
0x560C	0x09201100 ;_initBlock_32+12 : ?ICS_RF_MODEM_BCR_OSR_1_9_data at 0x560D
0x5610	0x00000022 ;_initBlock_32+16
0x5614	0x00000000 ;_initBlock_32+20
0x5618	0x0000 ;_initBlock_32+24
; end of _initBlock_32
;,0 :: _initBlock_33 [12]
; Containing: ?ICS_RF_SYNTH_PFDCP_CPFF_7_data [11]
;             ?ICS_ucSPI1ByteReceived [1]
0x561A	0x00072311 ;_initBlock_33+0 : ?ICS_RF_SYNTH_PFDCP_CPFF_7_data at 0x561A
0x561E	0x00000000 ;_initBlock_33+4
0x5622	0x00000000 ;_initBlock_33+8 : ?ICS_ucSPI1ByteReceived at 0x5625
; end of _initBlock_33
;DriverRF4463PROMain.c,318 :: _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433 [132]
0x5626	0x1705DEB8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+0
0x562A	0x00030C16 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+4
0x562E	0x0000FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+8
0x5632	0x1705DEB8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+12
0x5636	0x00030C16 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+16
0x563A	0x0000FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+20
0x563E	0x05EAC9B9 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+24
0x5642	0x040A1112 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+28
0x5646	0x0003FC15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+32
0x564A	0x1705DEB8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+36
0x564E	0x00030C16 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+40
0x5652	0x0000FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+44
0x5656	0x05EAC9B9 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+48
0x565A	0x040A1112 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+52
0x565E	0x0003FC15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+56
0x5662	0xE6D6CEDD ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+60
0x5666	0x030300F6 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+64
0x566A	0x003FF015 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+68
0x566E	0xDFD6DBF4 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+72
0x5672	0x01FEF7EC ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+76
0x5676	0x03FFF015 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+80
0x567A	0xDFD6DBF4 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+84
0x567E	0x01FEF7EC ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+88
0x5682	0x03FFF015 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+92
0x5686	0xDCDCEC0C ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+96
0x568A	0xFDF6EDE3 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+100
0x568E	0x0FFFC015 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+104
0x5692	0xF2DBC7C8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+108
0x5696	0x03070802 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+112
0x569A	0x000FFC15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+116
0x569E	0x05EAC9B9 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+120
0x56A2	0x040A1112 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+124
0x56A6	0x0003FC15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433+128
; end of _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433
;DriverRF4463PROMain.c,283 :: _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433 [132]
0x56AA	0xFF150003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+0
0x56AE	0xC4FF0000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+4
0x56B2	0xB5F57F30 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+8
0x56B6	0xFF150003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+12
0x56BA	0xC4FF0000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+16
0x56BE	0xB5F57F30 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+20
0x56C2	0xFC15040A ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+24
0x56C6	0xA1CC0003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+28
0x56CA	0xD121A030 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+32
0x56CE	0xFF150003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+36
0x56D2	0xC4FF0000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+40
0x56D6	0xB5F57F30 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+44
0x56DA	0xFC15040A ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+48
0x56DE	0xA1CC0003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+52
0x56E2	0xD121A030 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+56
0x56E6	0xF0150303 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+60
0x56EA	0x647E003F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+64
0x56EE	0x0B58BA1B ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+68
0x56F2	0xF01501FE ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+72
0x56F6	0x475B03FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+76
0x56FA	0x256DC00F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+80
0x56FE	0xF01501FE ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+84
0x5702	0x475B03FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+88
0x5706	0x256DC00F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+92
0x570A	0xC015FDF6 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+96
0x570E	0x2B390FFF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+100
0x5712	0x3F7FC300 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+104
0x5716	0xFC150307 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+108
0x571A	0x81A2000F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+112
0x571E	0xEE3FAF26 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+116
0x5722	0xFC15040A ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+120
0x5726	0xA1CC0003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+124
0x572A	0xD121A030 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433+128
; end of _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433
;DriverRF4463PROMain.c,247 :: _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433 [132]
0x572E	0x7F30C4FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+0
0x5732	0xDEB8B5F5 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+4
0x5736	0x0C161705 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+8
0x573A	0x7F30C4FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+12
0x573E	0xDEB8B5F5 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+16
0x5742	0x0C161705 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+20
0x5746	0xA030A1CC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+24
0x574A	0xC9B9D121 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+28
0x574E	0x111205EA ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+32
0x5752	0x7F30C4FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+36
0x5756	0xDEB8B5F5 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+40
0x575A	0x0C161705 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+44
0x575E	0xA030A1CC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+48
0x5762	0xC9B9D121 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+52
0x5766	0x111205EA ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+56
0x576A	0xBA1B647E ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+60
0x576E	0xCEDD0B58 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+64
0x5772	0x00F6E6D6 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+68
0x5776	0xC00F475B ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+72
0x577A	0xDBF4256D ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+76
0x577E	0xF7ECDFD6 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+80
0x5782	0xC00F475B ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+84
0x5786	0xDBF4256D ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+88
0x578A	0xF7ECDFD6 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+92
0x578E	0xC3002B39 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+96
0x5792	0xEC0C3F7F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+100
0x5796	0xEDE3DCDC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+104
0x579A	0xAF2681A2 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+108
0x579E	0xC7C8EE3F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+112
0x57A2	0x0802F2DB ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+116
0x57A6	0xA030A1CC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+120
0x57AA	0xC9B9D121 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+124
0x57AE	0x111205EA ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433+128
; end of _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433
;DriverRF4463PROMain.c,332 :: _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850 [132]
0x57B2	0x1705DEB8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+0
0x57B6	0x00030C16 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+4
0x57BA	0x0000FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+8
0x57BE	0x1705DEB8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+12
0x57C2	0x00030C16 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+16
0x57C6	0x0000FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+20
0x57CA	0x1E1BFCC9 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+24
0x57CE	0xFDFC010F ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+28
0x57D2	0x0F00FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+32
0x57D6	0x1705DEB8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+36
0x57DA	0x00030C16 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+40
0x57DE	0x0000FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+44
0x57E2	0x1E1BFCC9 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+48
0x57E6	0xFDFC010F ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+52
0x57EA	0x0F00FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+56
0x57EE	0x1705DEB8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+60
0x57F2	0x00030C16 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+64
0x57F6	0x0000FF15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+68
0x57FA	0xE6D6CEDD ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+72
0x57FE	0x030300F6 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+76
0x5802	0x003FF015 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+80
0x5806	0xF0150303 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+84
0x580A	0x647E003F ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+88
0x580E	0x0B58BA1B ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+92
0x5812	0xDCDCEC0C ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+96
0x5816	0xFDF6EDE3 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+100
0x581A	0x0FFFC015 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+104
0x581E	0xF2DBC7C8 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+108
0x5822	0x03070802 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+112
0x5826	0x000FFC15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+116
0x582A	0x05EAC9B9 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+120
0x582E	0x040A1112 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+124
0x5832	0x0003FC15 ;_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850+128
; end of _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850
;DriverRF4463PROMain.c,297 :: _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850 [132]
0x5836	0xFF150003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+0
0x583A	0xC4FF0000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+4
0x583E	0xB5F57F30 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+8
0x5842	0xFF150003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+12
0x5846	0xC4FF0000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+16
0x584A	0xB5F57F30 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+20
0x584E	0xFF15FDFC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+24
0x5852	0xBAFF0F00 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+28
0x5856	0xA9CF510F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+32
0x585A	0xFF150003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+36
0x585E	0xC4FF0000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+40
0x5862	0xB5F57F30 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+44
0x5866	0xFF15FDFC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+48
0x586A	0xBAFF0F00 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+52
0x586E	0xA9CF510F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+56
0x5872	0xFF150003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+60
0x5876	0xC4FF0000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+64
0x587A	0xB5F57F30 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+68
0x587E	0xF0150303 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+72
0x5882	0x647E003F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+76
0x5886	0x0B58BA1B ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+80
0x588A	0xC015FDF6 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+84
0x588E	0x2B390FFF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+88
0x5892	0x3F7FC300 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+92
0x5896	0xFC150307 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+96
0x589A	0x81A2000F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+100
0x589E	0xEE3FAF26 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+104
0x58A2	0xFC15040A ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+108
0x58A6	0xA1CC0003 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+112
0x58AA	0xD121A030 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+116
0x58AE	0x00000000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+120
0x58B2	0x00000000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+124
0x58B6	0x00000000 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850+128
; end of _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850
;DriverRF4463PROMain.c,261 :: _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850 [132]
0x58BA	0x7F30C4FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+0
0x58BE	0xDEB8B5F5 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+4
0x58C2	0x0C161705 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+8
0x58C6	0x7F30C4FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+12
0x58CA	0xDEB8B5F5 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+16
0x58CE	0x0C161705 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+20
0x58D2	0x510FBAFF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+24
0x58D6	0xFCC9A9CF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+28
0x58DA	0x010F1E1B ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+32
0x58DE	0x7F30C4FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+36
0x58E2	0xDEB8B5F5 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+40
0x58E6	0x0C161705 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+44
0x58EA	0x510FBAFF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+48
0x58EE	0xFCC9A9CF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+52
0x58F2	0x010F1E1B ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+56
0x58F6	0x7F30C4FF ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+60
0x58FA	0xDEB8B5F5 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+64
0x58FE	0x0C161705 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+68
0x5902	0xBA1B647E ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+72
0x5906	0xCEDD0B58 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+76
0x590A	0x00F6E6D6 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+80
0x590E	0xBA1B647E ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+84
0x5912	0xCEDD0B58 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+88
0x5916	0x00F6E6D6 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+92
0x591A	0xC3002B39 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+96
0x591E	0xEC0C3F7F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+100
0x5922	0xEDE3DCDC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+104
0x5926	0xAF2681A2 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+108
0x592A	0xC7C8EE3F ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+112
0x592E	0x0802F2DB ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+116
0x5932	0xA030A1CC ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+120
0x5936	0xC9B9D121 ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+124
0x593A	0x111205EA ;_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850+128
; end of _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850
;DriverRF4463PROMain.c,56 :: _RF_MODEM_MOD_TYPE_12 [132]
0x593E	0x00070003 ;_RF_MODEM_MOD_TYPE_12+0
0x5942	0x2D04C012 ;_RF_MODEM_MOD_TYPE_12+4
0x5946	0x0000C0C6 ;_RF_MODEM_MOD_TYPE_12+8
0x594A	0x00070003 ;_RF_MODEM_MOD_TYPE_12+12
0x594E	0x2D048025 ;_RF_MODEM_MOD_TYPE_12+16
0x5952	0x0000C0C6 ;_RF_MODEM_MOD_TYPE_12+20
0x5956	0x00070003 ;_RF_MODEM_MOD_TYPE_12+24
0x595A	0x2D04004B ;_RF_MODEM_MOD_TYPE_12+28
0x595E	0x0000C0C6 ;_RF_MODEM_MOD_TYPE_12+32
0x5962	0x00070003 ;_RF_MODEM_MOD_TYPE_12+36
0x5966	0x2D040096 ;_RF_MODEM_MOD_TYPE_12+40
0x596A	0x0000C0C6 ;_RF_MODEM_MOD_TYPE_12+44
0x596E	0x01070003 ;_RF_MODEM_MOD_TYPE_12+48
0x5972	0x2D04002C ;_RF_MODEM_MOD_TYPE_12+52
0x5976	0x0100C0C6 ;_RF_MODEM_MOD_TYPE_12+56
0x597A	0x01070003 ;_RF_MODEM_MOD_TYPE_12+60
0x597E	0x2D08002C ;_RF_MODEM_MOD_TYPE_12+64
0x5982	0x0100C0C6 ;_RF_MODEM_MOD_TYPE_12+68
0x5986	0x02070003 ;_RF_MODEM_MOD_TYPE_12+72
0x598A	0x2D080058 ;_RF_MODEM_MOD_TYPE_12+76
0x598E	0x0100C0C6 ;_RF_MODEM_MOD_TYPE_12+80
0x5992	0x03070003 ;_RF_MODEM_MOD_TYPE_12+84
0x5996	0x2D080084 ;_RF_MODEM_MOD_TYPE_12+88
0x599A	0x0100C0C6 ;_RF_MODEM_MOD_TYPE_12+92
0x599E	0x27070003 ;_RF_MODEM_MOD_TYPE_12+96
0x59A2	0xC9010010 ;_RF_MODEM_MOD_TYPE_12+100
0x59A6	0x010080C3 ;_RF_MODEM_MOD_TYPE_12+104
0x59AA	0x4C070003 ;_RF_MODEM_MOD_TYPE_12+108
0x59AE	0xC901404B ;_RF_MODEM_MOD_TYPE_12+112
0x59B2	0x1B0080C3 ;_RF_MODEM_MOD_TYPE_12+116
0x59B6	0x00070003 ;_RF_MODEM_MOD_TYPE_12+120
0x59BA	0x2D04D007 ;_RF_MODEM_MOD_TYPE_12+124
0x59BE	0x0000C0C6 ;_RF_MODEM_MOD_TYPE_12+128
; end of _RF_MODEM_MOD_TYPE_12
;,0 :: _initBlock_41 [242]
; Containing: RF_MODEM_OOK_CNT1_11_850 [121]
;             RF_MODEM_OOK_CNT1_11_433 [121]
0x59C2	0x81D602A4 ;_initBlock_41+0 : RF_MODEM_OOK_CNT1_11_850 at 0x59C2
0x59C6	0x80019B03 ;_initBlock_41+4
0x59CA	0xA4020CFF ;_initBlock_41+8
0x59CE	0x0083D602 ;_initBlock_41+12
0x59D2	0xFF8001E7 ;_initBlock_41+16
0x59D6	0x02A4020C ;_initBlock_41+20
0x59DA	0xE70083D6 ;_initBlock_41+24
0x59DE	0x0CFF8001 ;_initBlock_41+28
0x59E2	0xD603A402 ;_initBlock_41+32
0x59E6	0x01110103 ;_initBlock_41+36
0x59EA	0x020CFF80 ;_initBlock_41+40
0x59EE	0x03D603A4 ;_initBlock_41+44
0x59F2	0x80015501 ;_initBlock_41+48
0x59F6	0xA4020CFF ;_initBlock_41+52
0x59FA	0x0103D603 ;_initBlock_41+56
0x59FE	0xFF800100 ;_initBlock_41+60
0x5A02	0x03A4020C ;_initBlock_41+64
0x5A06	0x800003D6 ;_initBlock_41+68
0x5A0A	0x0CFF8001 ;_initBlock_41+72
0x5A0E	0xD603A402 ;_initBlock_41+76
0x5A12	0x01800003 ;_initBlock_41+80
0x5A16	0x020CFF80 ;_initBlock_41+84
0x5A1A	0x03D603A4 ;_initBlock_41+88
0x5A1E	0x8001D500 ;_initBlock_41+92
0x5A22	0xA4020CFF ;_initBlock_41+96
0x5A26	0x0003D603 ;_initBlock_41+100
0x5A2A	0xFF8001D5 ;_initBlock_41+104
0x5A2E	0x02A4020C ;_initBlock_41+108
0x5A32	0xB40281D6 ;_initBlock_41+112
0x5A36	0x0CFF8001 ;_initBlock_41+116
0x5A3A	0xD602A402 ;_initBlock_41+120 : RF_MODEM_OOK_CNT1_11_433 at 0x5A3B
0x5A3E	0x01AD0083 ;_initBlock_41+124
0x5A42	0x000CFF80 ;_initBlock_41+128
0x5A46	0x83D602A4 ;_initBlock_41+132
0x5A4A	0x8001AD00 ;_initBlock_41+136
0x5A4E	0xA4000CFF ;_initBlock_41+140
0x5A52	0x0003D603 ;_initBlock_41+144
0x5A56	0xFF8001CC ;_initBlock_41+148
0x5A5A	0x03A4000C ;_initBlock_41+152
0x5A5E	0xCC0003D6 ;_initBlock_41+156
0x5A62	0x0CFF8001 ;_initBlock_41+160
0x5A66	0xD603A400 ;_initBlock_41+164
0x5A6A	0x01000103 ;_initBlock_41+168
0x5A6E	0x000CFF80 ;_initBlock_41+172
0x5A72	0x03D603A4 ;_initBlock_41+176
0x5A76	0x80018000 ;_initBlock_41+180
0x5A7A	0xA4000CFF ;_initBlock_41+184
0x5A7E	0x0003D603 ;_initBlock_41+188
0x5A82	0xFF800140 ;_initBlock_41+192
0x5A86	0x03A4000C ;_initBlock_41+196
0x5A8A	0x2B0003D6 ;_initBlock_41+200
0x5A8E	0x0CFF8001 ;_initBlock_41+204
0x5A92	0xD603A400 ;_initBlock_41+208
0x5A96	0x01D50003 ;_initBlock_41+212
0x5A9A	0x000CFF80 ;_initBlock_41+216
0x5A9E	0x03D603A4 ;_initBlock_41+220
0x5AA2	0x8001D500 ;_initBlock_41+224
0x5AA6	0xA4000CFF ;_initBlock_41+228
0x5AAA	0x0281D602 ;_initBlock_41+232
0x5AAE	0xFF8001B4 ;_initBlock_41+236
0x5AB2	0x000C ;_initBlock_41+240
; end of _initBlock_41
;__Lib_GPIO_G0xx_Defs.c,417 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x5AB4	0x00000109 ;__GPIO_MODULE_USART1_PA9_10+0
0x5AB8	0x0000010A ;__GPIO_MODULE_USART1_PA9_10+4
0x5ABC	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x5AC0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x5AC4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x5AC8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x5ACC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x5AD0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x5AD4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x5AD8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x5ADC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x5AE0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x5AE4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x5AE8	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x5AEC	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+56
0x5AF0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x5AF4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x5AF8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x5AFC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x5B00	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x5B04	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x5B08	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x5B0C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x5B10	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x5B14	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x5B18	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x5B1C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;,0 :: _initBlock_43 [198]
; Containing: RF_MODEM_BCR_OSR_1_9_850 [99]
;             RF_MODEM_AGC_WINDOW_SIZE_9_850 [99]
0x5B20	0xA7000D03 ;_initBlock_43+0 : RF_MODEM_BCR_OSR_1_9_850 at 0x5B20
0x5B24	0x025400C6 ;_initBlock_43+4
0x5B28	0x000D03C2 ;_initBlock_43+8
0x5B2C	0x5400C6A7 ;_initBlock_43+12
0x5B30	0x8701C202 ;_initBlock_43+16
0x5B34	0x008B4F01 ;_initBlock_43+20
0x5B38	0x00C202A8 ;_initBlock_43+24
0x5B3C	0x179F02C3 ;_initBlock_43+28
0x5B40	0x00029301 ;_initBlock_43+32
0x5B44	0x3E056200 ;_initBlock_43+36
0x5B48	0x0204052D ;_initBlock_43+40
0x5B4C	0x07410000 ;_initBlock_43+44
0x5B50	0xFF0744DD ;_initBlock_43+48
0x5B54	0x41000002 ;_initBlock_43+52
0x5B58	0x0744DD07 ;_initBlock_43+56
0x5B5C	0x000002FF ;_initBlock_43+60
0x5B60	0x44DD0741 ;_initBlock_43+64
0x5B64	0x0002FF07 ;_initBlock_43+68
0x5B68	0x5E047500 ;_initBlock_43+72
0x5B6C	0x029A057B ;_initBlock_43+76
0x5B70	0x083C0000 ;_initBlock_43+80
0x5B74	0xFF078988 ;_initBlock_43+84
0x5B78	0xAA030002 ;_initBlock_43+88
0x5B7C	0x00CF8B00 ;_initBlock_43+92
0x5B80	0x11C20246 ;_initBlock_43+96 : RF_MODEM_AGC_WINDOW_SIZE_9_850 at 0x5B83
0x5B84	0x0200ABAB ;_initBlock_43+100
0x5B88	0x2B00FFFF ;_initBlock_43+104
0x5B8C	0x00ABAB11 ;_initBlock_43+108
0x5B90	0x00FFFF02 ;_initBlock_43+112
0x5B94	0x5656112B ;_initBlock_43+116
0x5B98	0x55D50200 ;_initBlock_43+120
0x5B9C	0x2B112A00 ;_initBlock_43+124
0x5BA0	0x6A02002B ;_initBlock_43+128
0x5BA4	0x112900AB ;_initBlock_43+132
0x5BA8	0x02001515 ;_initBlock_43+136
0x5BAC	0x2800AB42 ;_initBlock_43+140
0x5BB0	0x000E0E11 ;_initBlock_43+144
0x5BB4	0x00552102 ;_initBlock_43+148
0x5BB8	0x0E0E1128 ;_initBlock_43+152
0x5BBC	0xAB100200 ;_initBlock_43+156
0x5BC0	0x0E112800 ;_initBlock_43+160
0x5BC4	0x1002000E ;_initBlock_43+164
0x5BC8	0x222800AB ;_initBlock_43+168
0x5BCC	0x1A000D0D ;_initBlock_43+172
0x5BD0	0x28000032 ;_initBlock_43+176
0x5BD4	0x00070722 ;_initBlock_43+180
0x5BD8	0x009A191A ;_initBlock_43+184
0x5BDC	0xCDCD1127 ;_initBlock_43+188
0x5BE0	0x00301A00 ;_initBlock_43+192
0x5BE4	0x2B00 ;_initBlock_43+196
; end of _initBlock_43
;,0 :: _initBlock_44 [198]
; Containing: RF_MODEM_AGC_WINDOW_SIZE_9_433 [99]
;             RF_MODEM_BCR_OSR_1_9_433 [99]
0x5BE6	0x00ABAB11 ;_initBlock_44+0 : RF_MODEM_AGC_WINDOW_SIZE_9_433 at 0x5BE6
0x5BEA	0x0000141A ;_initBlock_44+4
0x5BEE	0x5656112B ;_initBlock_44+8
0x5BF2	0x00A01A00 ;_initBlock_44+12
0x5BF6	0x2B112A00 ;_initBlock_44+16
0x5BFA	0x501A002B ;_initBlock_44+20
0x5BFE	0x11290000 ;_initBlock_44+24
0x5C02	0x1A001515 ;_initBlock_44+28
0x5C06	0x28000028 ;_initBlock_44+32
0x5C0A	0x000E0E11 ;_initBlock_44+36
0x5C0E	0x0055211A ;_initBlock_44+40
0x5C12	0x0E0E1128 ;_initBlock_44+44
0x5C16	0xAB101A00 ;_initBlock_44+48
0x5C1A	0x0E112800 ;_initBlock_44+52
0x5C1E	0x081A000E ;_initBlock_44+56
0x5C22	0x11280055 ;_initBlock_44+60
0x5C26	0x1A000E0E ;_initBlock_44+64
0x5C2A	0x28008E05 ;_initBlock_44+68
0x5C2E	0x000D0D22 ;_initBlock_44+72
0x5C32	0x0000321A ;_initBlock_44+76
0x5C36	0x07072228 ;_initBlock_44+80
0x5C3A	0x9A191A00 ;_initBlock_44+84
0x5C3E	0xCD112700 ;_initBlock_44+88
0x5C42	0x301A00CD ;_initBlock_44+92
0x5C46	0x032B0000 ;_initBlock_44+96 : RF_MODEM_BCR_OSR_1_9_433 at 0x5C49
0x5C4A	0xC6A7000D ;_initBlock_44+100
0x5C4E	0xC2025400 ;_initBlock_44+104
0x5C52	0x4F018701 ;_initBlock_44+108
0x5C56	0x02A8008B ;_initBlock_44+112
0x5C5A	0x02C300C2 ;_initBlock_44+116
0x5C5E	0x1A02179F ;_initBlock_44+120
0x5C62	0x62000002 ;_initBlock_44+124
0x5C66	0x072D3E05 ;_initBlock_44+128
0x5C6A	0x000002FF ;_initBlock_44+132
0x5C6E	0x44DD0741 ;_initBlock_44+136
0x5C72	0x0002FF07 ;_initBlock_44+140
0x5C76	0xDD074100 ;_initBlock_44+144
0x5C7A	0x02FF0744 ;_initBlock_44+148
0x5C7E	0x07410000 ;_initBlock_44+152
0x5C82	0xFF0744DD ;_initBlock_44+156
0x5C86	0x41000002 ;_initBlock_44+160
0x5C8A	0x0744DD07 ;_initBlock_44+164
0x5C8E	0x000002FF ;_initBlock_44+168
0x5C92	0x7B5E0475 ;_initBlock_44+172
0x5C96	0x00029A05 ;_initBlock_44+176
0x5C9A	0x88083C00 ;_initBlock_44+180
0x5C9E	0x02FF0789 ;_initBlock_44+184
0x5CA2	0x00AA0300 ;_initBlock_44+188
0x5CA6	0x4600CF8B ;_initBlock_44+192
0x5CAA	0xC202 ;_initBlock_44+196
; end of _initBlock_44
;DriverRF4463PROMain.c,0 :: ?ICSvRF4463MainCommandProcessor_ucCommand_L0 [32]
0x5CAC	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+0
0x5CB0	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+4
0x5CB4	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+8
0x5CB8	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+12
0x5CBC	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+16
0x5CC0	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+20
0x5CC4	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+24
0x5CC8	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucCommand_L0+28
; end of ?ICSvRF4463MainCommandProcessor_ucCommand_L0
;DriverRF4463PROMain.c,0 :: ?ICSvRF4463MainCommandProcessor_ucLongArgument_L0 [64]
0x5CCC	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+0
0x5CD0	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+4
0x5CD4	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+8
0x5CD8	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+12
0x5CDC	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+16
0x5CE0	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+20
0x5CE4	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+24
0x5CE8	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+28
0x5CEC	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+32
0x5CF0	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+36
0x5CF4	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+40
0x5CF8	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+44
0x5CFC	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+48
0x5D00	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+52
0x5D04	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+56
0x5D08	0x00000000 ;?ICSvRF4463MainCommandProcessor_ucLongArgument_L0+60
; end of ?ICSvRF4463MainCommandProcessor_ucLongArgument_L0
;DriverRF4463PROMain.c,70 :: _RF_MODEM_TX_RAMP_DELAY_8_433 [88]
0x5D0C	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+0
0x5D10	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+4
0x5D14	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+8
0x5D18	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+12
0x5D1C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+16
0x5D20	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+20
0x5D24	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+24
0x5D28	0x20700080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+28
0x5D2C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+32
0x5D30	0x10300080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+36
0x5D34	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+40
0x5D38	0x10200080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+44
0x5D3C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+48
0x5D40	0x10100080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+52
0x5D44	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+56
0x5D48	0x20100080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+60
0x5D4C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+64
0x5D50	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+68
0x5D54	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+72
0x5D58	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+76
0x5D5C	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_433+80
0x5D60	0x21720080 ;_RF_MODEM_TX_RAMP_DELAY_8_433+84
; end of _RF_MODEM_TX_RAMP_DELAY_8_433
;DriverRF4463PROMain.c,84 :: _RF_MODEM_TX_RAMP_DELAY_8_850 [88]
0x5D64	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+0
0x5D68	0x203200C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+4
0x5D6C	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+8
0x5D70	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+12
0x5D74	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+16
0x5D78	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+20
0x5D7C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+24
0x5D80	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+28
0x5D84	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+32
0x5D88	0x203000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+36
0x5D8C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+40
0x5D90	0x102000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+44
0x5D94	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+48
0x5D98	0x101000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+52
0x5D9C	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+56
0x5DA0	0x201000C0 ;_RF_MODEM_TX_RAMP_DELAY_8_850+60
0x5DA4	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+64
0x5DA8	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+68
0x5DAC	0x03080001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+72
0x5DB0	0x30000080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+76
0x5DB4	0x03088001 ;_RF_MODEM_TX_RAMP_DELAY_8_850+80
0x5DB8	0x21720080 ;_RF_MODEM_TX_RAMP_DELAY_8_850+84
; end of _RF_MODEM_TX_RAMP_DELAY_8_850
;,0 :: _initBlock_49 [154]
; Containing: RF_SYNTH_PFDCP_CPFF_7 [77]
;             RF_MODEM_AFC_GEAR_7_433 [77]
0x5DBC	0x040B0E2C ;_initBlock_49+0 : RF_SYNTH_PFDCP_CPFF_7 at 0x5DBC
0x5DC0	0x2C03730C ;_initBlock_49+4
0x5DC4	0x0C040B0E ;_initBlock_49+8
0x5DC8	0x0E2C0373 ;_initBlock_49+12
0x5DCC	0x730C040B ;_initBlock_49+16
0x5DD0	0x0B0E2C03 ;_initBlock_49+20
0x5DD4	0x03730C04 ;_initBlock_49+24
0x5DD8	0x040B0E2C ;_initBlock_49+28
0x5DDC	0x2C03730C ;_initBlock_49+32
0x5DE0	0x0C040B0E ;_initBlock_49+36
0x5DE4	0x04340373 ;_initBlock_49+40
0x5DE8	0x7007040B ;_initBlock_49+44
0x5DEC	0x0B043403 ;_initBlock_49+48
0x5DF0	0x03700704 ;_initBlock_49+52
0x5DF4	0x050B0501 ;_initBlock_49+56
0x5DF8	0x01030002 ;_initBlock_49+60
0x5DFC	0x02050B05 ;_initBlock_49+64
0x5E00	0x0E2C0300 ;_initBlock_49+68
0x5E04	0x730C040B ;_initBlock_49+72
0x5E08	0x80360403 ;_initBlock_49+76 : RF_MODEM_AFC_GEAR_7_433 at 0x5E09
0x5E0C	0x80AF3003 ;_initBlock_49+80
0x5E10	0x07803604 ;_initBlock_49+84
0x5E14	0x0080DD14 ;_initBlock_49+88
0x5E18	0x042A8012 ;_initBlock_49+92
0x5E1C	0x1200A03A ;_initBlock_49+96
0x5E20	0x5A025480 ;_initBlock_49+100
0x5E24	0x801200A0 ;_initBlock_49+104
0x5E28	0xE06801A8 ;_initBlock_49+108
0x5E2C	0x50811200 ;_initBlock_49+112
0x5E30	0x00E02001 ;_initBlock_49+116
0x5E34	0x019F8212 ;_initBlock_49+120
0x5E38	0x2300E003 ;_initBlock_49+124
0x5E3C	0x7700DD87 ;_initBlock_49+128
0x5E40	0x8F2300E0 ;_initBlock_49+132
0x5E44	0xE0C900FF ;_initBlock_49+136
0x5E48	0xFF8F2300 ;_initBlock_49+140
0x5E4C	0x04E02301 ;_initBlock_49+144
0x5E50	0x50018036 ;_initBlock_49+148
0x5E54	0x8069 ;_initBlock_49+152
; end of _initBlock_49
;,0 :: _initBlock_50 [143]
; Containing: RF_MODEM_AFC_GEAR_7_850 [77]
;             ucRF4463TXdata [66]
0x5E56	0x01803604 ;_initBlock_50+0 : RF_MODEM_AFC_GEAR_7_850 at 0x5E56
0x5E5A	0x04803052 ;_initBlock_50+4
0x5E5E	0x30038036 ;_initBlock_50+8
0x5E62	0x3604807F ;_initBlock_50+12
0x5E66	0x10170780 ;_initBlock_50+16
0x5E6A	0x80120080 ;_initBlock_50+20
0x5E6E	0xA0B1042A ;_initBlock_50+24
0x5E72	0x54801200 ;_initBlock_50+28
0x5E76	0x00A09A02 ;_initBlock_50+32
0x5E7A	0x01A88012 ;_initBlock_50+36
0x5E7E	0x1200A08F ;_initBlock_50+40
0x5E82	0x1F015081 ;_initBlock_50+44
0x5E86	0x832300A0 ;_initBlock_50+48
0x5E8A	0xA08400EF ;_initBlock_50+52
0x5E8E	0xFF8F2300 ;_initBlock_50+56
0x5E92	0x00E0C900 ;_initBlock_50+60
0x5E96	0x01FF8F23 ;_initBlock_50+64
0x5E9A	0x3604E023 ;_initBlock_50+68
0x5E9E	0x69500180 ;_initBlock_50+72
0x5EA2	0x01010180 ;_initBlock_50+76 : ucRF4463TXdata at 0x5EA3
0x5EA6	0x43424101 ;_initBlock_50+80
0x5EAA	0x47464544 ;_initBlock_50+84
0x5EAE	0x4B4A4948 ;_initBlock_50+88
0x5EB2	0x4F4E4D4C ;_initBlock_50+92
0x5EB6	0x53525150 ;_initBlock_50+96
0x5EBA	0x57565554 ;_initBlock_50+100
0x5EBE	0x415A5958 ;_initBlock_50+104
0x5EC2	0x45444342 ;_initBlock_50+108
0x5EC6	0x49484746 ;_initBlock_50+112
0x5ECA	0x4D4C4B4A ;_initBlock_50+116
0x5ECE	0x51504F4E ;_initBlock_50+120
0x5ED2	0x55545352 ;_initBlock_50+124
0x5ED6	0x59585756 ;_initBlock_50+128
0x5EDA	0x4342415A ;_initBlock_50+132
0x5EDE	0x47464544 ;_initBlock_50+136
0x5EE2	0xF31148 ;_initBlock_50+140
; end of _initBlock_50
;DriverRF4463PROMain.c,0 :: ?ICS?lstr4_DriverRF4463PROMain [31]
0x5EE8	0x5953205B ;?ICS?lstr4_DriverRF4463PROMain+0
0x5EEC	0x54532053 ;?ICS?lstr4_DriverRF4463PROMain+4
0x5EF0	0x4732334D ;?ICS?lstr4_DriverRF4463PROMain+8
0x5EF4	0x46525D20 ;?ICS?lstr4_DriverRF4463PROMain+12
0x5EF8	0x64615220 ;?ICS?lstr4_DriverRF4463PROMain+16
0x5EFC	0x72206F69 ;?ICS?lstr4_DriverRF4463PROMain+20
0x5F00	0x79646165 ;?ICS?lstr4_DriverRF4463PROMain+24
0x5F04	0x000A0D ;?ICS?lstr4_DriverRF4463PROMain+28
; end of ?ICS?lstr4_DriverRF4463PROMain
;DriverRF4463PROMain.c,0 :: ?ICS?lstr5_DriverRF4463PROMain [3]
0x5F08	0x000A0D ;?ICS?lstr5_DriverRF4463PROMain+0
; end of ?ICS?lstr5_DriverRF4463PROMain
;DriverRF4463PROMain.c,0 :: ?ICS?lstr6_DriverRF4463PROMain [15]
0x5F0C	0x5243205B ;?ICS?lstr6_DriverRF4463PROMain+0
0x5F10	0x205D2043 ;?ICS?lstr6_DriverRF4463PROMain+4
0x5F14	0x6C696146 ;?ICS?lstr6_DriverRF4463PROMain+8
0x5F18	0x000A0D ;?ICS?lstr6_DriverRF4463PROMain+12
; end of ?ICS?lstr6_DriverRF4463PROMain
;DriverRF4463PROMain.c,0 :: ?ICS?lstr1_DriverRF4463PROMain [31]
0x5F1C	0x5953205B ;?ICS?lstr1_DriverRF4463PROMain+0
0x5F20	0x54532053 ;?ICS?lstr1_DriverRF4463PROMain+4
0x5F24	0x4732334D ;?ICS?lstr1_DriverRF4463PROMain+8
0x5F28	0x72545D20 ;?ICS?lstr1_DriverRF4463PROMain+12
0x5F2C	0x6D736E61 ;?ICS?lstr1_DriverRF4463PROMain+16
0x5F30	0x6E697469 ;?ICS?lstr1_DriverRF4463PROMain+20
0x5F34	0x2E2E2E67 ;?ICS?lstr1_DriverRF4463PROMain+24
0x5F38	0x000A0D ;?ICS?lstr1_DriverRF4463PROMain+28
; end of ?ICS?lstr1_DriverRF4463PROMain
;DriverRF4463PROMain.c,0 :: ?ICS?lstr2_DriverRF4463PROMain [19]
0x5F3C	0x4155205B ;?ICS?lstr2_DriverRF4463PROMain+0
0x5F40	0x20315452 ;?ICS?lstr2_DriverRF4463PROMain+4
0x5F44	0x5854205D ;?ICS?lstr2_DriverRF4463PROMain+8
0x5F48	0x544E4920 ;?ICS?lstr2_DriverRF4463PROMain+12
0x5F4C	0x000A0D ;?ICS?lstr2_DriverRF4463PROMain+16
; end of ?ICS?lstr2_DriverRF4463PROMain
;__Lib_Conversions.c,0 :: ?ICSStrToLong_counter_L0 [4]
0x5F50	0x00000000 ;?ICSStrToLong_counter_L0+0
; end of ?ICSStrToLong_counter_L0
;__Lib_Conversions.c,0 :: ?ICSStrToLong_buf_str_L0 [10]
0x5F54	0x00000000 ;?ICSStrToLong_buf_str_L0+0
0x5F58	0x00000000 ;?ICSStrToLong_buf_str_L0+4
0x5F5C	0x0000 ;?ICSStrToLong_buf_str_L0+8
; end of ?ICSStrToLong_buf_str_L0
;__Lib_Conversions.c,0 :: ?ICSStrToLong_result_L0 [4]
0x5F60	0x00000000 ;?ICSStrToLong_result_L0+0
; end of ?ICSStrToLong_result_L0
;__Lib_Conversions.c,0 :: ?ICSStrToInt_counter_L0 [4]
0x5F64	0x00000000 ;?ICSStrToInt_counter_L0+0
; end of ?ICSStrToInt_counter_L0
;__Lib_Conversions.c,0 :: ?ICSStrToInt_buf_str2_L0 [6]
0x5F68	0x00000000 ;?ICSStrToInt_buf_str2_L0+0
0x5F6C	0x0000 ;?ICSStrToInt_buf_str2_L0+4
; end of ?ICSStrToInt_buf_str2_L0
;__Lib_Conversions.c,0 :: ?ICSStrToInt_result_L0 [4]
0x5F70	0x00000000 ;?ICSStrToInt_result_L0+0
; end of ?ICSStrToInt_result_L0
;DriverRF4463PROMain.c,385 :: _tx_test_aa_data [14]
0x5F74	0xAAAAAAAA ;_tx_test_aa_data+0
0x5F78	0xAAAAAAAA ;_tx_test_aa_data+4
0x5F7C	0xAAAAAAAA ;_tx_test_aa_data+8
0x5F80	0xAAAA ;_tx_test_aa_data+12
; end of _tx_test_aa_data
;__Lib_Conversions.c,0 :: ?ICSStrToShort_counter_L0 [4]
0x5F84	0x00000000 ;?ICSStrToShort_counter_L0+0
; end of ?ICSStrToShort_counter_L0
;__Lib_Conversions.c,0 :: ?ICSStrToShort_buf_str2_L0 [4]
0x5F88	0x00000000 ;?ICSStrToShort_buf_str2_L0+0
; end of ?ICSStrToShort_buf_str2_L0
;__Lib_Conversions.c,0 :: ?ICSStrToShort_result_L0 [4]
0x5F8C	0x00000000 ;?ICSStrToShort_result_L0+0
; end of ?ICSStrToShort_result_L0
;DriverRF4463PROMain.c,371 :: _RF_FRR_CTL_A_MODE_4_data [8]
0x5F90	0x00040211 ;_RF_FRR_CTL_A_MODE_4_data+0
0x5F94	0x00000000 ;_RF_FRR_CTL_A_MODE_4_data+4
; end of _RF_FRR_CTL_A_MODE_4_data
;__Lib_System_G0xx.c,467 :: __Lib_System_G0xx_AHBPrescTable [8]
0x5F98	0x08040201 ;__Lib_System_G0xx_AHBPrescTable+0
0x5F9C	0x00804020 ;__Lib_System_G0xx_AHBPrescTable+4
; end of __Lib_System_G0xx_AHBPrescTable
;,0 :: _initBlock_68 [12]
; Containing: RF_POWER_UP_data [7]
;             RF_MODEM_AGC_CONTROL_1_data [5]
0x5FA0	0x01000102 ;_initBlock_68+0 : RF_POWER_UP_data at 0x5FA0
0x5FA4	0x1180C3C9 ;_initBlock_68+4 : RF_MODEM_AGC_CONTROL_1_data at 0x5FA7
0x5FA8	0xE2350120 ;_initBlock_68+8
; end of _initBlock_68
;__Lib_System_G0xx.c,468 :: __Lib_System_G0xx_APBPrescTable [4]
0x5FAC	0x10080402 ;__Lib_System_G0xx_APBPrescTable+0
; end of __Lib_System_G0xx_APBPrescTable
;__Lib_Conversions.c,0 :: ?ICS__Lib_Conversions_Forward_Input_multiplier_L0 [4]
0x5FB0	0x00000001 ;?ICS__Lib_Conversions_Forward_Input_multiplier_L0+0
; end of ?ICS__Lib_Conversions_Forward_Input_multiplier_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x00C0      [68]    __Div_32x32_U
0x0104      [12]    _Get_Fosc_kHz
0x0110     [240]    _vRF4463SpiBufferTX
0x0200     [172]    __Lib_GPIO_G0xx_GPIO_Config_Pin_Alternate_Function
0x02AC     [106]    __Lib_Conversions_Forward_Input
0x0318     [168]    _RCC_GetClocksFrequency
0x03C0     [100]    __Lib_UART_G0xx_1234_get_usart_clock
0x0424      [52]    _ucRf4463SPIByte
0x0458      [68]    _GPIO_Alternate_Function_Enable
0x049C      [28]    _strlen
0x04B8     [260]    _StrToInt
0x05BC       [6]    _vUSART1Start_TX
0x05C4      [58]    _vRF4463EnableRxInterrupt
0x0600     [132]    _StrToLong
0x0684      [52]    _check_cts
0x06B8       [6]    _vUSARTStartMEMtoMEMZero
0x06C0      [40]    __Lib_UART_G0xx_1234_UARTx_Write
0x06E8      [52]    _memcmp
0x071C      [72]    _vRF4463RxStart
0x0764     [520]    __Lib_UART_G0xx_1234_UARTx_Init_Advanced
0x096C      [72]    _vRF4463RxStartTest
0x09B4      [26]    _toupper
0x09D0     [260]    _StrToShort
0x0AD4     [108]    _GPIO_Clk_Enable
0x0B40      [16]    _vRF4463MainApplyChanges
0x0B50      [42]    __Lib_UART_G0xx_1234_UARTx_Write_Text
0x0B7C      [28]    _vRF4463FifoReset
0x0B98    [2228]    _vRF4463MainCommandProcessor
0x144C       [6]    _vUSARTStartMEMtoMEM
0x1454       [8]    _vUSARTCleanBuffer
0x145C      [52]    _vRF4463RxInit
0x1490      [52]    _vRF4463TxStart
0x14C4      [52]    _vRF4463EnableTxInterrupt
0x14F8     [724]    _GPIO_Config
0x17CC      [60]    _NVIC_IntEnable
0x1808      [32]    _UART1_Init_Advanced
0x1828     [124]    _spi_write_fifo
0x18A4     [124]    _spi_read
0x1920     [460]    _rf_init_freq
0x1AEC     [134]    _vRF4463GPIO_SET
0x1B74      [80]    _spi_write
0x1BC4     [272]    __Lib_System_G0xx_set_core_latency
0x1CD4     [168]    _is_clock_stable
0x1D7C     [124]    __Lib_System_G0xx_SystemClockSetDefault
0x1DF8     [296]    _vRF4463TxData
0x1F20      [80]    _vRF4463TxCont
0x1F70      [92]    _spi_read_fifo
0x1FCC      [88]    _InitTimer2
0x2024      [92]    _vUSARTConfigUSART1
0x2080     [728]    _vSPI1Init
0x2358      [12]    _GPIO_Digital_Input
0x2364      [18]    ___CC2DW
0x2378      [42]    ___FillZeros
0x23A4      [16]    _GPIO_Digital_Output
0x23B4      [28]    _vRF4463PartInfo
0x23D0      [16]    _UART1_Write_Text
0x23E0      [88]    _vUSARTReceivedFromUSART1
0x2438      [48]    _vRF4463ClearInterrupts
0x2468     [136]    _VRF4463SDNReset
0x24F0       [6]    _vRF4463MainSetTXString
0x24F8    [2172]    _vRF4463Init
0x2D74      [52]    _vRF4463ISR
0x2DA8      [44]    _Timer2_interrupt
0x2DD4     [216]    _DMACh1_interrupt
0x2EAC      [80]    _Int_SPI1
0x2EFC      [56]    _vUARTISR
0x2F34     [928]    _main
0x32D4     [164]    __Lib_System_G0xx_InitialSetUpRCCRCC2
0x3378       [6]    ___GenExcept
0x3380      [20]    __Lib_System_G0xx_InitialSetUpFosc
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000    [4096]    _ucUSARTActiveBuffer1
0x20001000       [4]    _ulUSARTActiveBuffer1BytesReceived
0x20001004    [4096]    _ucUSART1RXBuffer
0x20002004       [4]    _ulUSART1ByteReceived
0x20002008       [4]    _fUSART1Buffer
0x2000200C      [10]    _CMD_RADIO_POWER_SET
0x20002016      [40]    _ANS_COMMAND_VALUE_ACCEPTED
0x2000203E      [32]    _ANS_COMMAND_VALUE_OUT_OF_RANGE
0x2000205E       [9]    _CMD_RADIO_BAND_SET
0x20002067       [9]    _CMD_RADIO_RATE_SET
0x20002070      [12]    _CMD_RADIO_CHANNEL_SET
0x2000207C       [1]    _ucRF4463FreqChannel
0x2000207D       [7]    _CMD_RADIO_BW_SET
0x20002084       [4]    _ulRF4463Step
0x20002088       [9]    _CMD_RADIO_MODE_SET
0x20002091       [1]    _ucUSARTNull
0x20002092       [5]    _ARG_RADIO_MODE_STBY
0x20002097      [34]    _ANS_COMMAND_MODE_STBY
0x200020B9       [8]    _ARG_RADIO_MODE_TX_CONT
0x200020C1      [34]    _ANS_COMMAND_MODE_TX_CONT
0x200020E3       [8]    _ARG_RADIO_MODE_RX_CONT
0x200020EB      [34]    _ANS_COMMAND_MODE_RX_CONT
0x2000210D      [10]    _ARG_RADIO_MODE_TX_MASTER
0x20002117      [36]    _ANS_COMMAND_MODE_TX_MASTER
0x2000213B       [9]    _ARG_RADIO_MODE_RX_SLAVE
0x20002144      [35]    _ANS_COMMAND_MODE_RX_SLAVE
0x20002167      [12]    _CMD_RADIO_PACKET_SEND
0x20002173      [12]    _CMD_RADIO_MATCH_BYTE_1_SET
0x2000217F       [1]    _ucRF4463ByteMatch1
0x20002180       [1]    _ucRF4463MatchEnabled
0x20002181       [1]    _ucRF4463MatchEnableReg
0x20002182      [12]    _CMD_RADIO_MATCH_BYTE_2_SET
0x2000218E       [1]    _ucRF4463ByteMatch2
0x2000218F      [12]    _CMD_RADIO_MATCH_BYTE_3_SET
0x2000219B       [1]    _ucRF4463ByteMatch3
0x2000219C      [12]    _CMD_RADIO_MATCH_BYTE_4_SET
0x200021A8       [1]    _ucRF4463ByteMatch4
0x200021A9      [11]    _CMD_RADIO_MATCH_MASK_1_SET
0x200021B4       [1]    _ucRF4463ByteMask1
0x200021B5      [11]    _CMD_RADIO_MATCH_MASK_2_SET
0x200021C0       [1]    _ucRF4463ByteMask2
0x200021C1      [11]    _CMD_RADIO_MATCH_MASK_3_SET
0x200021CC       [1]    _ucRF4463ByteMask3
0x200021CD      [11]    _CMD_RADIO_MATCH_MASK_4_SET
0x200021D8       [1]    _ucRF4463ByteMask4
0x200021D9      [12]    _CMD_RADIO_MATCH_UNSET
0x200021E5      [22]    _ANS_DEBUG_COMMAND_UNKNOWN
0x200021FB       [1]    DriverRF4463PROMain_ucRF4463IRQ
0x200021FC       [4]    _tx_cnt
0x20002200       [4]    _rx_cnt
0x20002204      [16]    _RF_MODEM_MOD_TYPE_12_data
0x20002214      [12]    _RF_MODEM_TX_RAMP_DELAY_8_data
0x20002220      [13]    _RF_MODEM_AFC_GEAR_7_data
0x2000222D      [15]    _RF_MODEM_OOK_CNT1_11_data
0x2000223C      [16]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data
0x2000224C      [16]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data
0x2000225C      [16]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data
0x2000226C      [13]    _RF_MODEM_AGC_WINDOW_SIZE_9_data
0x20002279      [13]    _RF_MODEM_BCR_OSR_1_9_data
0x20002286      [11]    _RF_SYNTH_PFDCP_CPFF_7_data
0x20002291       [1]    _ucSPI1ByteReceived
0x20002292       [1]    _ucRF4463Power
0x20002293       [1]    _ucRF4463Freq3
0x20002294       [1]    _ucRF4463Freq2
0x20002295       [1]    _ucRF4463Freq1
0x20002296       [1]    _ucRF4463Rate
0x20002297       [1]    _ucRF4463Mode
0x20002298      [20]    _spi_read_buf
0x200022AC       [1]    _Flag
0x200022AD      [66]    _rx_buf
0x200022EF       [1]    _reset_mode
0x200022F0       [2]    _rf_timeout
0x200022F4       [4]    _ulClk
0x200022F8       [4]    ___System_CLOCK_IN_KHZ
0x200022FC       [4]    _UART_Wr_Ptr
0x20002300       [4]    _UART_Rd_Ptr
0x20002304       [4]    _UART_Rdy_Ptr
0x20002308       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x3394    [4096]    ?ICS_ucUSARTActiveBuffer1
0x4394       [4]    ?ICS_ulUSARTActiveBuffer1BytesReceived
0x4398    [4096]    ?ICS_ucUSART1RXBuffer
0x5398       [4]    ?ICS_ulUSART1ByteReceived
0x539C       [4]    ?ICS_fUSART1Buffer
0x53A0      [10]    ?ICS_CMD_RADIO_POWER_SET
0x53AA      [40]    ?ICS_ANS_COMMAND_VALUE_ACCEPTED
0x53D2      [32]    ?ICS_ANS_COMMAND_VALUE_OUT_OF_RANGE
0x53F2       [9]    ?ICS_CMD_RADIO_BAND_SET
0x53FB       [9]    ?ICS_CMD_RADIO_RATE_SET
0x5404      [12]    ?ICS_CMD_RADIO_CHANNEL_SET
0x5410       [1]    ?ICS_ucRF4463FreqChannel
0x5411       [7]    ?ICS_CMD_RADIO_BW_SET
0x5418       [4]    ?ICS_ulRF4463Step
0x541C       [9]    ?ICS_CMD_RADIO_MODE_SET
0x5425       [1]    ?ICS_ucUSARTNull
0x5426       [5]    ?ICS_ARG_RADIO_MODE_STBY
0x542B      [34]    ?ICS_ANS_COMMAND_MODE_STBY
0x544D       [8]    ?ICS_ARG_RADIO_MODE_TX_CONT
0x5455      [34]    ?ICS_ANS_COMMAND_MODE_TX_CONT
0x5477       [8]    ?ICS_ARG_RADIO_MODE_RX_CONT
0x547F      [34]    ?ICS_ANS_COMMAND_MODE_RX_CONT
0x54A1      [10]    ?ICS_ARG_RADIO_MODE_TX_MASTER
0x54AB      [36]    ?ICS_ANS_COMMAND_MODE_TX_MASTER
0x54CF       [9]    ?ICS_ARG_RADIO_MODE_RX_SLAVE
0x54D8      [35]    ?ICS_ANS_COMMAND_MODE_RX_SLAVE
0x54FB      [12]    ?ICS_CMD_RADIO_PACKET_SEND
0x5507      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_1_SET
0x5513       [1]    ?ICS_ucRF4463ByteMatch1
0x5514       [1]    ?ICS_ucRF4463MatchEnabled
0x5515       [1]    ?ICS_ucRF4463MatchEnableReg
0x5516      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_2_SET
0x5522       [1]    ?ICS_ucRF4463ByteMatch2
0x5523      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_3_SET
0x552F       [1]    ?ICS_ucRF4463ByteMatch3
0x5530      [12]    ?ICS_CMD_RADIO_MATCH_BYTE_4_SET
0x553C       [1]    ?ICS_ucRF4463ByteMatch4
0x553D      [11]    ?ICS_CMD_RADIO_MATCH_MASK_1_SET
0x5548       [1]    ?ICS_ucRF4463ByteMask1
0x5549      [11]    ?ICS_CMD_RADIO_MATCH_MASK_2_SET
0x5554       [1]    ?ICS_ucRF4463ByteMask2
0x5555      [11]    ?ICS_CMD_RADIO_MATCH_MASK_3_SET
0x5560       [1]    ?ICS_ucRF4463ByteMask3
0x5561      [11]    ?ICS_CMD_RADIO_MATCH_MASK_4_SET
0x556C       [1]    ?ICS_ucRF4463ByteMask4
0x556D      [12]    ?ICS_CMD_RADIO_MATCH_UNSET
0x5579      [22]    ?ICS_ANS_DEBUG_COMMAND_UNKNOWN
0x558F       [1]    ?ICSDriverRF4463PROMain_ucRF4463IRQ
0x5590       [4]    ?ICS_tx_cnt
0x5594       [4]    ?ICS_rx_cnt
0x5598      [16]    ?ICS_RF_MODEM_MOD_TYPE_12_data
0x55A8      [12]    ?ICS_RF_MODEM_TX_RAMP_DELAY_8_data
0x55B4      [13]    ?ICS_RF_MODEM_AFC_GEAR_7_data
0x55C1      [15]    ?ICS_RF_MODEM_OOK_CNT1_11_data
0x55D0      [16]    ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_data
0x55E0      [16]    ?ICS_RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_data
0x55F0      [16]    ?ICS_RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_data
0x5600      [13]    ?ICS_RF_MODEM_AGC_WINDOW_SIZE_9_data
0x560D      [13]    ?ICS_RF_MODEM_BCR_OSR_1_9_data
0x561A      [11]    ?ICS_RF_SYNTH_PFDCP_CPFF_7_data
0x5625       [1]    ?ICS_ucSPI1ByteReceived
0x5626     [132]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_433
0x56AA     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_433
0x572E     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_433
0x57B2     [132]    _RF_MODEM_CHFLT_RX2_CHFLT_COE7_7_0_12_850
0x5836     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE1_7_0_12_850
0x58BA     [132]    _RF_MODEM_CHFLT_RX1_CHFLT_COE13_7_0_12_850
0x593E     [132]    _RF_MODEM_MOD_TYPE_12
0x59C2     [121]    _RF_MODEM_OOK_CNT1_11_850
0x5A3B     [121]    _RF_MODEM_OOK_CNT1_11_433
0x5AB4     [108]    __GPIO_MODULE_USART1_PA9_10
0x5B20      [99]    _RF_MODEM_BCR_OSR_1_9_850
0x5B83      [99]    _RF_MODEM_AGC_WINDOW_SIZE_9_850
0x5BE6      [99]    _RF_MODEM_AGC_WINDOW_SIZE_9_433
0x5C49      [99]    _RF_MODEM_BCR_OSR_1_9_433
0x5CAC      [32]    ?ICSvRF4463MainCommandProcessor_ucCommand_L0
0x5CCC      [64]    ?ICSvRF4463MainCommandProcessor_ucLongArgument_L0
0x5D0C      [88]    _RF_MODEM_TX_RAMP_DELAY_8_433
0x5D64      [88]    _RF_MODEM_TX_RAMP_DELAY_8_850
0x5DBC      [77]    _RF_SYNTH_PFDCP_CPFF_7
0x5E09      [77]    _RF_MODEM_AFC_GEAR_7_433
0x5E56      [77]    _RF_MODEM_AFC_GEAR_7_850
0x5EA3      [66]    _ucRF4463TXdata
0x5EE8      [31]    ?ICS?lstr4_DriverRF4463PROMain
0x5F08       [3]    ?ICS?lstr5_DriverRF4463PROMain
0x5F0C      [15]    ?ICS?lstr6_DriverRF4463PROMain
0x5F1C      [31]    ?ICS?lstr1_DriverRF4463PROMain
0x5F3C      [19]    ?ICS?lstr2_DriverRF4463PROMain
0x5F50       [4]    ?ICSStrToLong_counter_L0
0x5F54      [10]    ?ICSStrToLong_buf_str_L0
0x5F60       [4]    ?ICSStrToLong_result_L0
0x5F64       [4]    ?ICSStrToInt_counter_L0
0x5F68       [6]    ?ICSStrToInt_buf_str2_L0
0x5F70       [4]    ?ICSStrToInt_result_L0
0x5F74      [14]    _tx_test_aa_data
0x5F84       [4]    ?ICSStrToShort_counter_L0
0x5F88       [4]    ?ICSStrToShort_buf_str2_L0
0x5F8C       [4]    ?ICSStrToShort_result_L0
0x5F90       [8]    _RF_FRR_CTL_A_MODE_4_data
0x5F98       [8]    __Lib_System_G0xx_AHBPrescTable
0x5FA0       [7]    _RF_POWER_UP_data
0x5FA7       [5]    _RF_MODEM_AGC_CONTROL_1_data
0x5FAC       [4]    __Lib_System_G0xx_APBPrescTable
0x5FB0       [4]    ?ICS__Lib_Conversions_Forward_Input_multiplier_L0
